Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/parse/RepositoryParser$.class
  Last modified May 29, 2022; size 2585 bytes
  SHA-256 checksum 51b478cc36a908388d7f47a9960462ea0f2cfd909ad3f866988742107d9e97bb
  Compiled from "RepositoryParser.scala"
public final class coursier.parse.RepositoryParser$ extends coursier.internal.PlatformRepositoryParser
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/parse/RepositoryParser$
  super_class: #4                         // coursier/internal/PlatformRepositoryParser
  interfaces: 0, fields: 1, methods: 5, attributes: 5
Constant pool:
    #1 = Utf8               coursier/parse/RepositoryParser$
    #2 = Class              #1            // coursier/parse/RepositoryParser$
    #3 = Utf8               coursier/internal/PlatformRepositoryParser
    #4 = Class              #3            // coursier/internal/PlatformRepositoryParser
    #5 = Utf8               RepositoryParser.scala
    #6 = Utf8               coursier/util/Traverse$TraverseOps
    #7 = Class              #6            // coursier/util/Traverse$TraverseOps
    #8 = Utf8               coursier/util/Traverse
    #9 = Class              #8            // coursier/util/Traverse
   #10 = Utf8               TraverseOps
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               MODULE$
   #17 = Utf8               Lcoursier/parse/RepositoryParser$;
   #18 = Utf8               <clinit>
   #19 = Utf8               ()V
   #20 = Utf8               <init>
   #21 = NameAndType        #20:#19       // "<init>":()V
   #22 = Methodref          #2.#21        // coursier/parse/RepositoryParser$."<init>":()V
   #23 = NameAndType        #16:#17       // MODULE$:Lcoursier/parse/RepositoryParser$;
   #24 = Fieldref           #2.#23        // coursier/parse/RepositoryParser$.MODULE$:Lcoursier/parse/RepositoryParser$;
   #25 = Utf8               repositories
   #26 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
   #27 = Utf8               (Lscala/collection/immutable/Seq<Ljava/lang/String;>;)Lcoursier/util/ValidationNel<Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;>;
   #28 = Utf8               inputs
   #29 = Utf8               coursier/util/Traverse$
   #30 = Class              #29           // coursier/util/Traverse$
   #31 = Utf8               Lcoursier/util/Traverse$;
   #32 = NameAndType        #16:#31       // MODULE$:Lcoursier/util/Traverse$;
   #33 = Fieldref           #30.#32       // coursier/util/Traverse$.MODULE$:Lcoursier/util/Traverse$;
   #34 = Utf8               scala/collection/immutable/Seq
   #35 = Class              #34           // scala/collection/immutable/Seq
   #36 = Utf8               toVector
   #37 = Utf8               ()Lscala/collection/immutable/Vector;
   #38 = NameAndType        #36:#37       // toVector:()Lscala/collection/immutable/Vector;
   #39 = InterfaceMethodref #35.#38       // scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
   #40 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
   #41 = NameAndType        #10:#40       // TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
   #42 = Methodref          #30.#41       // coursier/util/Traverse$.TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
   #43 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #44 = MethodType         #43           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #45 = Utf8               $anonfun$repositories$1
   #46 = Utf8               (Ljava/lang/String;)Lcoursier/util/ValidationNel;
   #47 = NameAndType        #45:#46       // $anonfun$repositories$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
   #48 = Methodref          #2.#47        // coursier/parse/RepositoryParser$.$anonfun$repositories$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
   #49 = MethodHandle       6:#48         // REF_invokeStatic coursier/parse/RepositoryParser$.$anonfun$repositories$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
   #50 = MethodType         #46           //  (Ljava/lang/String;)Lcoursier/util/ValidationNel;
   #51 = Integer            5
   #52 = Integer            1
   #53 = Utf8               java/lang/invoke/LambdaMetafactory
   #54 = Class              #53           // java/lang/invoke/LambdaMetafactory
   #55 = Utf8               altMetafactory
   #56 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #57 = NameAndType        #55:#56       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #58 = Methodref          #54.#57       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #59 = MethodHandle       6:#58         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #60 = Utf8               apply
   #61 = Utf8               ()Lscala/Function1;
   #62 = NameAndType        #60:#61       // apply:()Lscala/Function1;
   #63 = InvokeDynamic      #0:#62        // #0:apply:()Lscala/Function1;
   #64 = Utf8               validationNelTraverse
   #65 = Utf8               (Lscala/Function1;)Lcoursier/util/ValidationNel;
   #66 = NameAndType        #64:#65       // validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
   #67 = Methodref          #7.#66        // coursier/util/Traverse$TraverseOps.validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
   #68 = Utf8               this
   #69 = Utf8               Lscala/collection/immutable/Seq;
   #70 = Utf8               s
   #71 = Utf8               coursier/util/ValidationNel$
   #72 = Class              #71           // coursier/util/ValidationNel$
   #73 = Utf8               Lcoursier/util/ValidationNel$;
   #74 = NameAndType        #16:#73       // MODULE$:Lcoursier/util/ValidationNel$;
   #75 = Fieldref           #72.#74       // coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
   #76 = Utf8               repository
   #77 = Utf8               (Ljava/lang/String;)Lscala/util/Either;
   #78 = NameAndType        #76:#77       // repository:(Ljava/lang/String;)Lscala/util/Either;
   #79 = Methodref          #2.#78        // coursier/parse/RepositoryParser$.repository:(Ljava/lang/String;)Lscala/util/Either;
   #80 = Utf8               fromEither
   #81 = Utf8               (Lscala/util/Either;)Lcoursier/util/ValidationNel;
   #82 = NameAndType        #80:#81       // fromEither:(Lscala/util/Either;)Lcoursier/util/ValidationNel;
   #83 = Methodref          #72.#82       // coursier/util/ValidationNel$.fromEither:(Lscala/util/Either;)Lcoursier/util/ValidationNel;
   #84 = Utf8               Ljava/lang/String;
   #85 = Methodref          #4.#21        // coursier/internal/PlatformRepositoryParser."<init>":()V
   #86 = Utf8               $deserializeLambda$
   #87 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #88 = Utf8               scala/runtime/LambdaDeserialize
   #89 = Class              #88           // scala/runtime/LambdaDeserialize
   #90 = Utf8               bootstrap
   #91 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #92 = NameAndType        #90:#91       // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #93 = Methodref          #89.#92       // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #94 = MethodHandle       6:#93         // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #95 = Utf8               lambdaDeserialize
   #96 = NameAndType        #95:#87       // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #97 = InvokeDynamic      #1:#96        // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #98 = Utf8               Code
   #99 = Utf8               LineNumberTable
  #100 = Utf8               LocalVariableTable
  #101 = Utf8               Signature
  #102 = Utf8               MethodParameters
  #103 = Utf8               InnerClasses
  #104 = Utf8               SourceFile
  #105 = Utf8               BootstrapMethods
  #106 = Utf8               ScalaInlineInfo
  #107 = Utf8               Scala
{
  public static final coursier.parse.RepositoryParser$ MODULE$;
    descriptor: Lcoursier/parse/RepositoryParser$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/parse/RepositoryParser$
         3: dup
         4: invokespecial #22                 // Method "<init>":()V
         7: putstatic     #24                 // Field MODULE$:Lcoursier/parse/RepositoryParser$;
        10: return
      LineNumberTable:
        line 8: 0

  public coursier.util.ValidationNel<java.lang.String, scala.collection.immutable.Seq<coursier.core.Repository>> repositories(scala.collection.immutable.Seq<java.lang.String>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #33                 // Field coursier/util/Traverse$.MODULE$:Lcoursier/util/Traverse$;
         3: aload_1
         4: invokeinterface #39,  1           // InterfaceMethod scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
         9: invokevirtual #42                 // Method coursier/util/Traverse$.TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
        12: invokedynamic #63,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        17: invokevirtual #67                 // Method coursier/util/Traverse$TraverseOps.validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
        20: areturn
      LineNumberTable:
        line 12: 0
        line 11: 3
        line 13: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/parse/RepositoryParser$;
            0      21     1 inputs   Lscala/collection/immutable/Seq;
    Signature: #27                          // (Lscala/collection/immutable/Seq<Ljava/lang/String;>;)Lcoursier/util/ValidationNel<Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;>;
    MethodParameters:
      Name                           Flags
      inputs                         final

  public static final coursier.util.ValidationNel $anonfun$repositories$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/util/ValidationNel;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #75                 // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
         3: getstatic     #24                 // Field MODULE$:Lcoursier/parse/RepositoryParser$;
         6: aload_0
         7: invokevirtual #79                 // Method repository:(Ljava/lang/String;)Lscala/util/Either;
        10: invokevirtual #83                 // Method coursier/util/ValidationNel$.fromEither:(Lscala/util/Either;)Lcoursier/util/ValidationNel;
        13: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  private coursier.parse.RepositoryParser$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #85                 // Method coursier/internal/PlatformRepositoryParser."<init>":()V
         4: return
      LineNumberTable:
        line 8: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/parse/RepositoryParser$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #97,  0             // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #10= #7 of #9;            // TraverseOps=class coursier/util/Traverse$TraverseOps of class coursier/util/Traverse
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "RepositoryParser.scala"
BootstrapMethods:
  0: #59 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #44 (Ljava/lang/Object;)Ljava/lang/Object;
      #49 REF_invokeStatic coursier/parse/RepositoryParser$.$anonfun$repositories$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
      #50 (Ljava/lang/String;)Lcoursier/util/ValidationNel;
      #51 5
      #52 1
      #50 (Ljava/lang/String;)Lcoursier/util/ValidationNel;
  1: #94 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #49 REF_invokeStatic coursier/parse/RepositoryParser$.$anonfun$repositories$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 2D 00 2E 01 00 14 00 13 01 00 19
   00 1A 01
  Scala: length = 0x0 (unknown attribute)

