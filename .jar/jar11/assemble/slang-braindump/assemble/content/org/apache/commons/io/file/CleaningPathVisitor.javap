Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/file/CleaningPathVisitor.class
  Last modified May 29, 2022; size 4387 bytes
  SHA-256 checksum 735d6e6e5c47855f2a99e6a132c52ae624c17126196d66cce1cebc53254ec7ff
  Compiled from "CleaningPathVisitor.java"
public class org.apache.commons.io.file.CleaningPathVisitor extends org.apache.commons.io.file.CountingPathVisitor
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #1                          // org/apache/commons/io/file/CleaningPathVisitor
  super_class: #40                        // org/apache/commons/io/file/CountingPathVisitor
  interfaces: 0, fields: 2, methods: 11, attributes: 2
Constant pool:
    #1 = Class              #95           // org/apache/commons/io/file/CleaningPathVisitor
    #2 = Methodref          #96.#97       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
    #3 = Class              #98           // java/lang/String
    #4 = Methodref          #1.#99        // org/apache/commons/io/file/CleaningPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
    #5 = Methodref          #96.#100      // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
    #6 = Methodref          #40.#101      // org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
    #7 = Methodref          #102.#103     // "[Ljava/lang/String;".clone:()Ljava/lang/Object;
    #8 = Class              #42           // "[Ljava/lang/String;"
    #9 = Fieldref           #1.#104       // org/apache/commons/io/file/CleaningPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;
   #10 = Methodref          #105.#106     // java/util/Arrays.sort:([Ljava/lang/Object;)V
   #11 = Fieldref           #1.#107       // org/apache/commons/io/file/CleaningPathVisitor.skip:[Ljava/lang/String;
   #12 = Methodref          #108.#109     // org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z
   #13 = Fieldref           #1.#110       // org/apache/commons/io/file/CleaningPathVisitor.overrideReadOnly:Z
   #14 = Fieldref           #111.#112     // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
   #15 = Methodref          #1.#113       // org/apache/commons/io/file/CleaningPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
   #16 = InterfaceMethodref #37.#114      // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
   #17 = Methodref          #115.#116     // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
   #18 = Methodref          #105.#117     // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
   #19 = Methodref          #40.#118      // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z
   #20 = Methodref          #24.#119      // java/lang/Object.getClass:()Ljava/lang/Class;
   #21 = Methodref          #105.#120     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
   #22 = Methodref          #40.#121      // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I
   #23 = Methodref          #105.#122     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I
   #24 = Class              #123          // java/lang/Object
   #25 = Methodref          #124.#125     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
   #26 = Methodref          #115.#126     // java/util/Objects.hash:([Ljava/lang/Object;)I
   #27 = Methodref          #40.#127      // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
   #28 = Methodref          #1.#128       // org/apache/commons/io/file/CleaningPathVisitor.accept:(Ljava/nio/file/Path;)Z
   #29 = Fieldref           #129.#130     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
   #30 = Fieldref           #129.#131     // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;
   #31 = Class              #132          // java/nio/file/LinkOption
   #32 = Fieldref           #31.#133      // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
   #33 = Methodref          #134.#135     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
   #34 = Methodref          #111.#136     // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
   #35 = Methodref          #134.#137     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
   #36 = Methodref          #1.#138       // org/apache/commons/io/file/CleaningPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
   #37 = Class              #139          // java/nio/file/Path
   #38 = Methodref          #1.#140       // org/apache/commons/io/file/CleaningPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
   #39 = Methodref          #1.#141       // org/apache/commons/io/file/CleaningPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
   #40 = Class              #142          // org/apache/commons/io/file/CountingPathVisitor
   #41 = Utf8               skip
   #42 = Utf8               [Ljava/lang/String;
   #43 = Utf8               overrideReadOnly
   #44 = Utf8               Z
   #45 = Utf8               withBigIntegerCounters
   #46 = Utf8               ()Lorg/apache/commons/io/file/CountingPathVisitor;
   #47 = Utf8               Code
   #48 = Utf8               LineNumberTable
   #49 = Utf8               withLongCounters
   #50 = Utf8               <init>
   #51 = Class              #143          // org/apache/commons/io/file/Counters$PathCounters
   #52 = Utf8               PathCounters
   #53 = Utf8               InnerClasses
   #54 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
   #55 = Utf8               LocalVariableTable
   #56 = Utf8               this
   #57 = Utf8               Lorg/apache/commons/io/file/CleaningPathVisitor;
   #58 = Utf8               pathCounter
   #59 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;
   #60 = Utf8               deleteOption
   #61 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;
   #62 = Utf8               temp
   #63 = Utf8               StackMapTable
   #64 = Class              #95           // org/apache/commons/io/file/CleaningPathVisitor
   #65 = Class              #143          // org/apache/commons/io/file/Counters$PathCounters
   #66 = Class              #61           // "[Lorg/apache/commons/io/file/DeleteOption;"
   #67 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
   #68 = Utf8               accept
   #69 = Utf8               (Ljava/nio/file/Path;)Z
   #70 = Utf8               path
   #71 = Utf8               Ljava/nio/file/Path;
   #72 = Utf8               equals
   #73 = Utf8               (Ljava/lang/Object;)Z
   #74 = Utf8               obj
   #75 = Utf8               Ljava/lang/Object;
   #76 = Utf8               other
   #77 = Utf8               hashCode
   #78 = Utf8               ()I
   #79 = Utf8               prime
   #80 = Utf8               I
   #81 = Utf8               result
   #82 = Utf8               preVisitDirectory
   #83 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
   #84 = Utf8               dir
   #85 = Utf8               attributes
   #86 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;
   #87 = Class              #144          // java/nio/file/FileVisitResult
   #88 = Utf8               Exceptions
   #89 = Class              #145          // java/io/IOException
   #90 = Utf8               visitFile
   #91 = Utf8               file
   #92 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
   #93 = Utf8               SourceFile
   #94 = Utf8               CleaningPathVisitor.java
   #95 = Utf8               org/apache/commons/io/file/CleaningPathVisitor
   #96 = Class              #146          // org/apache/commons/io/file/Counters
   #97 = NameAndType        #147:#148     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
   #98 = Utf8               java/lang/String
   #99 = NameAndType        #50:#67       // "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
  #100 = NameAndType        #149:#148     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
  #101 = NameAndType        #50:#150      // "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
  #102 = Class              #42           // "[Ljava/lang/String;"
  #103 = NameAndType        #151:#152     // clone:()Ljava/lang/Object;
  #104 = NameAndType        #153:#42      // EMPTY_STRING_ARRAY:[Ljava/lang/String;
  #105 = Class              #154          // java/util/Arrays
  #106 = NameAndType        #155:#156     // sort:([Ljava/lang/Object;)V
  #107 = NameAndType        #41:#42       // skip:[Ljava/lang/String;
  #108 = Class              #157          // org/apache/commons/io/file/StandardDeleteOption
  #109 = NameAndType        #43:#158      // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z
  #110 = NameAndType        #43:#44       // overrideReadOnly:Z
  #111 = Class              #159          // org/apache/commons/io/file/PathUtils
  #112 = NameAndType        #160:#61      // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
  #113 = NameAndType        #50:#54       // "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
  #114 = NameAndType        #161:#162     // getFileName:()Ljava/nio/file/Path;
  #115 = Class              #163          // java/util/Objects
  #116 = NameAndType        #164:#165     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
  #117 = NameAndType        #166:#167     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
  #118 = NameAndType        #72:#73       // equals:(Ljava/lang/Object;)Z
  #119 = NameAndType        #168:#169     // getClass:()Ljava/lang/Class;
  #120 = NameAndType        #72:#170      // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
  #121 = NameAndType        #77:#78       // hashCode:()I
  #122 = NameAndType        #77:#171      // hashCode:([Ljava/lang/Object;)I
  #123 = Utf8               java/lang/Object
  #124 = Class              #172          // java/lang/Boolean
  #125 = NameAndType        #173:#174     // valueOf:(Z)Ljava/lang/Boolean;
  #126 = NameAndType        #175:#171     // hash:([Ljava/lang/Object;)I
  #127 = NameAndType        #82:#92       // preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
  #128 = NameAndType        #68:#69       // accept:(Ljava/nio/file/Path;)Z
  #129 = Class              #144          // java/nio/file/FileVisitResult
  #130 = NameAndType        #176:#177     // CONTINUE:Ljava/nio/file/FileVisitResult;
  #131 = NameAndType        #178:#177     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;
  #132 = Utf8               java/nio/file/LinkOption
  #133 = NameAndType        #179:#180     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
  #134 = Class              #181          // java/nio/file/Files
  #135 = NameAndType        #182:#183     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #136 = NameAndType        #184:#185     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
  #137 = NameAndType        #186:#69      // deleteIfExists:(Ljava/nio/file/Path;)Z
  #138 = NameAndType        #187:#188     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
  #139 = Utf8               java/nio/file/Path
  #140 = NameAndType        #90:#83       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
  #141 = NameAndType        #82:#83       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
  #142 = Utf8               org/apache/commons/io/file/CountingPathVisitor
  #143 = Utf8               org/apache/commons/io/file/Counters$PathCounters
  #144 = Utf8               java/nio/file/FileVisitResult
  #145 = Utf8               java/io/IOException
  #146 = Utf8               org/apache/commons/io/file/Counters
  #147 = Utf8               bigIntegerPathCounters
  #148 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;
  #149 = Utf8               longPathCounters
  #150 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V
  #151 = Utf8               clone
  #152 = Utf8               ()Ljava/lang/Object;
  #153 = Utf8               EMPTY_STRING_ARRAY
  #154 = Utf8               java/util/Arrays
  #155 = Utf8               sort
  #156 = Utf8               ([Ljava/lang/Object;)V
  #157 = Utf8               org/apache/commons/io/file/StandardDeleteOption
  #158 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z
  #159 = Utf8               org/apache/commons/io/file/PathUtils
  #160 = Utf8               EMPTY_DELETE_OPTION_ARRAY
  #161 = Utf8               getFileName
  #162 = Utf8               ()Ljava/nio/file/Path;
  #163 = Utf8               java/util/Objects
  #164 = Utf8               toString
  #165 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
  #166 = Utf8               binarySearch
  #167 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I
  #168 = Utf8               getClass
  #169 = Utf8               ()Ljava/lang/Class;
  #170 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z
  #171 = Utf8               ([Ljava/lang/Object;)I
  #172 = Utf8               java/lang/Boolean
  #173 = Utf8               valueOf
  #174 = Utf8               (Z)Ljava/lang/Boolean;
  #175 = Utf8               hash
  #176 = Utf8               CONTINUE
  #177 = Utf8               Ljava/nio/file/FileVisitResult;
  #178 = Utf8               SKIP_SUBTREE
  #179 = Utf8               NOFOLLOW_LINKS
  #180 = Utf8               Ljava/nio/file/LinkOption;
  #181 = Utf8               java/nio/file/Files
  #182 = Utf8               exists
  #183 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #184 = Utf8               setReadOnly
  #185 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
  #186 = Utf8               deleteIfExists
  #187 = Utf8               updateFileCounters
  #188 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
{
  private final java.lang.String[] skip;
    descriptor: [Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean overrideReadOnly;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static org.apache.commons.io.file.CountingPathVisitor withBigIntegerCounters();
    descriptor: ()Lorg/apache/commons/io/file/CountingPathVisitor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: new           #1                  // class org/apache/commons/io/file/CleaningPathVisitor
         3: dup
         4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
         7: iconst_0
         8: anewarray     #3                  // class java/lang/String
        11: invokespecial #4                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
        14: areturn
      LineNumberTable:
        line 44: 0

  public static org.apache.commons.io.file.CountingPathVisitor withLongCounters();
    descriptor: ()Lorg/apache/commons/io/file/CountingPathVisitor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: new           #1                  // class org/apache/commons/io/file/CleaningPathVisitor
         3: dup
         4: invokestatic  #5                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
         7: iconst_0
         8: anewarray     #3                  // class java/lang/String
        11: invokespecial #4                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
        14: areturn
      LineNumberTable:
        line 53: 0

  public org.apache.commons.io.file.CleaningPathVisitor(org.apache.commons.io.file.Counters$PathCounters, org.apache.commons.io.file.DeleteOption[], java.lang.String...);
    descriptor: (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
    flags: (0x0081) ACC_PUBLIC, ACC_VARARGS
    Code:
      stack=2, locals=5, args_size=4
         0: aload_0
         1: aload_1
         2: invokespecial #6                  // Method org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
         5: aload_3
         6: ifnull        19
         9: aload_3
        10: invokevirtual #7                  // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
        13: checkcast     #8                  // class "[Ljava/lang/String;"
        16: goto          22
        19: getstatic     #9                  // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
        22: astore        4
        24: aload         4
        26: invokestatic  #10                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
        29: aload_0
        30: aload         4
        32: putfield      #11                 // Field skip:[Ljava/lang/String;
        35: aload_0
        36: aload_2
        37: invokestatic  #12                 // Method org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z
        40: putfield      #13                 // Field overrideReadOnly:Z
        43: return
      LineNumberTable:
        line 69: 0
        line 70: 5
        line 71: 24
        line 72: 29
        line 73: 35
        line 74: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;
            0      44     1 pathCounter   Lorg/apache/commons/io/file/Counters$PathCounters;
            0      44     2 deleteOption   [Lorg/apache/commons/io/file/DeleteOption;
            0      44     3  skip   [Ljava/lang/String;
           24      20     4  temp   [Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class org/apache/commons/io/file/CleaningPathVisitor, class org/apache/commons/io/file/Counters$PathCounters, class "[Lorg/apache/commons/io/file/DeleteOption;", class "[Ljava/lang/String;" ]
          stack = []
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class "[Ljava/lang/String;" ]

  public org.apache.commons.io.file.CleaningPathVisitor(org.apache.commons.io.file.Counters$PathCounters, java.lang.String...);
    descriptor: (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
    flags: (0x0081) ACC_PUBLIC, ACC_VARARGS
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #14                 // Field org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
         5: aload_2
         6: invokespecial #15                 // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
         9: return
      LineNumberTable:
        line 83: 0
        line 84: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;
            0      10     1 pathCounter   Lorg/apache/commons/io/file/Counters$PathCounters;
            0      10     2  skip   [Ljava/lang/String;

  private boolean accept(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #11                 // Field skip:[Ljava/lang/String;
         4: aload_1
         5: invokeinterface #16,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
        10: aconst_null
        11: invokestatic  #17                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
        14: invokestatic  #18                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
        17: ifge          24
        20: iconst_1
        21: goto          25
        24: iconst_0
        25: ireturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;
            0      26     1  path   Ljava/nio/file/Path;
      StackMapTable: number_of_entries = 2
        frame_type = 24 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_0
         8: aload_1
         9: invokespecial #19                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z
        12: ifne          17
        15: iconst_0
        16: ireturn
        17: aload_0
        18: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        21: aload_1
        22: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        25: if_acmpeq     30
        28: iconst_0
        29: ireturn
        30: aload_1
        31: checkcast     #1                  // class org/apache/commons/io/file/CleaningPathVisitor
        34: astore_2
        35: aload_0
        36: getfield      #13                 // Field overrideReadOnly:Z
        39: aload_2
        40: getfield      #13                 // Field overrideReadOnly:Z
        43: if_icmpne     64
        46: aload_0
        47: getfield      #11                 // Field skip:[Ljava/lang/String;
        50: aload_2
        51: getfield      #11                 // Field skip:[Ljava/lang/String;
        54: invokestatic  #21                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
        57: ifeq          64
        60: iconst_1
        61: goto          65
        64: iconst_0
        65: ireturn
      LineNumberTable:
        line 98: 0
        line 99: 5
        line 101: 7
        line 102: 15
        line 104: 17
        line 105: 28
        line 107: 30
        line 108: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;
            0      66     1   obj   Ljava/lang/Object;
           35      31     2 other   Lorg/apache/commons/io/file/CleaningPathVisitor;
      StackMapTable: number_of_entries = 5
        frame_type = 7 /* same */
        frame_type = 9 /* same */
        frame_type = 12 /* same */
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [ class org/apache/commons/io/file/CleaningPathVisitor ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=1
         0: bipush        31
         2: istore_1
         3: aload_0
         4: invokespecial #22                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I
         7: istore_2
         8: bipush        31
        10: iload_2
        11: imul
        12: aload_0
        13: getfield      #11                 // Field skip:[Ljava/lang/String;
        16: invokestatic  #23                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
        19: iadd
        20: istore_2
        21: bipush        31
        23: iload_2
        24: imul
        25: iconst_1
        26: anewarray     #24                 // class java/lang/Object
        29: dup
        30: iconst_0
        31: aload_0
        32: getfield      #13                 // Field overrideReadOnly:Z
        35: invokestatic  #25                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        38: aastore
        39: invokestatic  #26                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
        42: iadd
        43: istore_2
        44: iload_2
        45: ireturn
      LineNumberTable:
        line 113: 0
        line 114: 3
        line 115: 8
        line 116: 21
        line 117: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;
            3      43     1 prime   I
            8      38     2 result   I

  public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #27                 // Method org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
         6: pop
         7: aload_0
         8: aload_1
         9: invokespecial #28                 // Method accept:(Ljava/nio/file/Path;)Z
        12: ifeq          21
        15: getstatic     #29                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
        18: goto          24
        21: getstatic     #30                 // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;
        24: areturn
      LineNumberTable:
        line 122: 0
        line 123: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;
            0      25     1   dir   Ljava/nio/file/Path;
            0      25     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/nio/file/FileVisitResult ]
    Exceptions:
      throws java.io.IOException

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokespecial #28                 // Method accept:(Ljava/nio/file/Path;)Z
         5: ifeq          53
         8: aload_1
         9: iconst_1
        10: anewarray     #31                 // class java/nio/file/LinkOption
        13: dup
        14: iconst_0
        15: getstatic     #32                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
        18: aastore
        19: invokestatic  #33                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        22: ifeq          53
        25: aload_0
        26: getfield      #13                 // Field overrideReadOnly:Z
        29: ifeq          48
        32: aload_1
        33: iconst_0
        34: iconst_1
        35: anewarray     #31                 // class java/nio/file/LinkOption
        38: dup
        39: iconst_0
        40: getstatic     #32                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
        43: aastore
        44: invokestatic  #34                 // Method org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
        47: pop
        48: aload_1
        49: invokestatic  #35                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
        52: pop
        53: aload_0
        54: aload_1
        55: aload_2
        56: invokevirtual #36                 // Method updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
        59: getstatic     #29                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
        62: areturn
      LineNumberTable:
        line 129: 0
        line 130: 25
        line 131: 32
        line 133: 48
        line 135: 53
        line 136: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;
            0      63     1  file   Ljava/nio/file/Path;
            0      63     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;
      StackMapTable: number_of_entries = 2
        frame_type = 48 /* same */
        frame_type = 4 /* same */
    Exceptions:
      throws java.io.IOException

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #37                 // class java/nio/file/Path
         5: aload_2
         6: invokevirtual #38                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
         9: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;
    Exceptions:
      throws java.io.IOException

  public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #37                 // class java/nio/file/Path
         5: aload_2
         6: invokevirtual #39                 // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
         9: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;
    Exceptions:
      throws java.io.IOException
}
SourceFile: "CleaningPathVisitor.java"
InnerClasses:
  public static #52= #51 of #96;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters
