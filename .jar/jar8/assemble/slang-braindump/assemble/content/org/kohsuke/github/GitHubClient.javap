Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/kohsuke/github/GitHubClient.class
  Last modified May 29, 2022; size 27972 bytes
  SHA-256 checksum 3d3349ceb79f7734cbf5362029210b1245095e34148617eff497c68e85305230
  Compiled from "GitHubClient.java"
class org.kohsuke.github.GitHubClient
  minor version: 0
  major version: 52
  flags: (0x0020) ACC_SUPER
  this_class: #82                         // org/kohsuke/github/GitHubClient
  super_class: #272                       // java/lang/Object
  interfaces: 0, fields: 13, methods: 45, attributes: 3
Constant pool:
     #1 = Class              #492         // java/net/HttpURLConnection
     #2 = Methodref          #272.#493    // java/lang/Object."<init>":()V
     #3 = Class              #494         // java/util/concurrent/atomic/AtomicReference
     #4 = Fieldref           #66.#495     // org/kohsuke/github/GHRateLimit.DEFAULT:Lorg/kohsuke/github/GHRateLimit;
     #5 = Methodref          #3.#496      // java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
     #6 = Fieldref           #82.#497     // org/kohsuke/github/GitHubClient.rateLimit:Ljava/util/concurrent/atomic/AtomicReference;
     #7 = String             #498         // /
     #8 = Methodref          #25.#499     // java/lang/String.endsWith:(Ljava/lang/String;)Z
     #9 = Methodref          #25.#500     // java/lang/String.length:()I
    #10 = Methodref          #25.#501     // java/lang/String.substring:(II)Ljava/lang/String;
    #11 = Fieldref           #318.#502    // org/kohsuke/github/connector/GitHubConnector.DEFAULT:Lorg/kohsuke/github/connector/GitHubConnector;
    #12 = Fieldref           #82.#503     // org/kohsuke/github/GitHubClient.apiUrl:Ljava/lang/String;
    #13 = Fieldref           #82.#504     // org/kohsuke/github/GitHubClient.connector:Lorg/kohsuke/github/connector/GitHubConnector;
    #14 = Fieldref           #82.#505     // org/kohsuke/github/GitHubClient.authorizationProvider:Lorg/kohsuke/github/authorization/AuthorizationProvider;
    #15 = Fieldref           #82.#506     // org/kohsuke/github/GitHubClient.rateLimitHandler:Lorg/kohsuke/github/GitHubRateLimitHandler;
    #16 = Fieldref           #82.#507     // org/kohsuke/github/GitHubClient.abuseLimitHandler:Lorg/kohsuke/github/GitHubAbuseLimitHandler;
    #17 = Fieldref           #82.#508     // org/kohsuke/github/GitHubClient.rateLimitChecker:Lorg/kohsuke/github/GitHubRateLimitChecker;
    #18 = Class              #509         // org/kohsuke/github/authorization/UserAuthorizationProvider
    #19 = InterfaceMethodref #322.#510    // org/kohsuke/github/authorization/AuthorizationProvider.getEncodedAuthorization:()Ljava/lang/String;
    #20 = InterfaceMethodref #18.#511     // org/kohsuke/github/authorization/UserAuthorizationProvider.getLogin:()Ljava/lang/String;
    #21 = Class              #512         // java/io/IOException
    #22 = Methodref          #244.#513    // org/kohsuke/github/GitHubRequest.newBuilder:()Lorg/kohsuke/github/GitHubRequest$Builder;
    #23 = Methodref          #82.#514     // org/kohsuke/github/GitHubClient.getApiUrl:()Ljava/lang/String;
    #24 = Methodref          #370.#515    // org/kohsuke/github/GitHubRequest$Builder.withApiUrl:(Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
    #25 = Class              #516         // java/lang/String
    #26 = Methodref          #370.#517    // org/kohsuke/github/GitHubRequest$Builder.withUrlPath:(Ljava/lang/String;[Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
    #27 = Methodref          #370.#518    // org/kohsuke/github/GitHubRequest$Builder.build:()Lorg/kohsuke/github/GitHubRequest;
    #28 = InvokeDynamic      #0:#524      // #0:apply:(Ljava/lang/Class;)Lorg/kohsuke/github/GitHubClient$BodyHandler;
    #29 = Methodref          #82.#525     // org/kohsuke/github/GitHubClient.sendRequest:(Lorg/kohsuke/github/GitHubRequest;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
    #30 = Methodref          #159.#526    // org/kohsuke/github/GitHubResponse.body:()Ljava/lang/Object;
    #31 = Methodref          #82.#527     // org/kohsuke/github/GitHubClient.getRateLimit:()Lorg/kohsuke/github/GHRateLimit;
    #32 = Fieldref           #82.#528     // org/kohsuke/github/GitHubClient.LOGGER:Ljava/util/logging/Logger;
    #33 = Fieldref           #529.#530    // java/util/logging/Level.FINE:Ljava/util/logging/Level;
    #34 = Class              #531         // java/lang/StringBuilder
    #35 = Methodref          #34.#493     // java/lang/StringBuilder."<init>":()V
    #36 = String             #532         // Exception validating credentials on
    #37 = Methodref          #34.#533     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    #38 = String             #534         //  with login \'
    #39 = Methodref          #82.#511     // org/kohsuke/github/GitHubClient.getLogin:()Ljava/lang/String;
    #40 = String             #535         // \'
    #41 = Methodref          #34.#536     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    #42 = Methodref          #34.#537     // java/lang/StringBuilder.toString:()Ljava/lang/String;
    #43 = Methodref          #538.#539    // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
    #44 = Fieldref           #318.#540    // org/kohsuke/github/connector/GitHubConnector.OFFLINE:Lorg/kohsuke/github/connector/GitHubConnector;
    #45 = Class              #541         // org/kohsuke/github/HttpConnector
    #46 = Class              #542         // java/lang/UnsupportedOperationException
    #47 = String             #543         // This GitHubConnector does not support HttpConnector.connect().
    #48 = Methodref          #46.#544     // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
    #49 = String             #545         // HttpConnector and getConnector() are deprecated. Please file an issue describing your use case.
    #50 = Methodref          #538.#546    // java/util/logging/Logger.warning:(Ljava/lang/String;)V
    #51 = String             #547         // Connector should not be changed. Please file an issue describing your use case.
    #52 = Fieldref           #548.#549    // org/kohsuke/github/RateLimitTarget.NONE:Lorg/kohsuke/github/RateLimitTarget;
    #53 = Methodref          #82.#550     // org/kohsuke/github/GitHubClient.getRateLimit:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
    #54 = Methodref          #370.#551    // org/kohsuke/github/GitHubRequest$Builder.rateLimit:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GitHubRequest$Builder;
    #55 = String             #552         // /rate_limit
    #56 = InvokeDynamic      #1:#555      // #1:apply:()Lorg/kohsuke/github/GitHubClient$BodyHandler;
    #57 = Class              #556         // org/kohsuke/github/JsonRateLimit
    #58 = Fieldref           #57.#557     // org/kohsuke/github/JsonRateLimit.resources:Lorg/kohsuke/github/GHRateLimit;
    #59 = Class              #558         // java/io/FileNotFoundException
    #60 = String             #559         // /rate_limit returned 404 Not Found.
    #61 = Methodref          #538.#560    // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
    #62 = Methodref          #561.#562    // org/kohsuke/github/GHRateLimit$UnknownLimitRecord.current:()Lorg/kohsuke/github/GHRateLimit$Record;
    #63 = Methodref          #66.#563     // org/kohsuke/github/GHRateLimit.fromRecord:(Lorg/kohsuke/github/GHRateLimit$Record;Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
    #64 = Methodref          #82.#564     // org/kohsuke/github/GitHubClient.updateRateLimit:(Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
    #65 = Methodref          #3.#565      // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
    #66 = Class              #566         // org/kohsuke/github/GHRateLimit
    #67 = Methodref          #66.#567     // org/kohsuke/github/GHRateLimit.getRecord:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit$Record;
    #68 = Methodref          #202.#568    // org/kohsuke/github/GHRateLimit$Record.isExpired:()Z
    #69 = InvokeDynamic      #2:#572      // #2:apply:()Ljava/util/function/BinaryOperator;
    #70 = Methodref          #3.#573      // java/util/concurrent/atomic/AtomicReference.accumulateAndGet:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
    #71 = Fieldref           #529.#574    // java/util/logging/Level.FINEST:Ljava/util/logging/Level;
    #72 = String             #575         // Rate limit now: {0}
    #73 = Methodref          #538.#576    // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
    #74 = Class              #577         // org/kohsuke/github/GitHubClient$GHApiInfo
    #75 = Methodref          #82.#578     // org/kohsuke/github/GitHubClient.fetch:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
    #76 = Methodref          #74.#579     // org/kohsuke/github/GitHubClient$GHApiInfo.check:(Ljava/lang/String;)V
    #77 = Methodref          #82.#580     // org/kohsuke/github/GitHubClient.isPrivateModeEnabled:()Z
    #78 = String             #581         // GitHub Enterprise server (
    #79 = String             #582         // ) with private mode enabled
    #80 = Methodref          #21.#544     // java/io/IOException."<init>":(Ljava/lang/String;)V
    #81 = Methodref          #21.#583     // java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
    #82 = Class              #584         // org/kohsuke/github/GitHubClient
    #83 = Methodref          #82.#585     // org/kohsuke/github/GitHubClient.prepareConnectorRequest:(Lorg/kohsuke/github/GitHubRequest;)Lorg/kohsuke/github/connector/GitHubConnectorRequest;
    #84 = Methodref          #82.#586     // org/kohsuke/github/GitHubClient.logRequest:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)V
    #85 = Methodref          #244.#587    // org/kohsuke/github/GitHubRequest.rateLimitTarget:()Lorg/kohsuke/github/RateLimitTarget;
    #86 = Methodref          #321.#588    // org/kohsuke/github/GitHubRateLimitChecker.checkRateLimit:(Lorg/kohsuke/github/GitHubClient;Lorg/kohsuke/github/RateLimitTarget;)V
    #87 = InterfaceMethodref #318.#589    // org/kohsuke/github/connector/GitHubConnector.send:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Lorg/kohsuke/github/connector/GitHubConnectorResponse;
    #88 = Methodref          #82.#590     // org/kohsuke/github/GitHubClient.noteRateLimit:(Lorg/kohsuke/github/RateLimitTarget;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
    #89 = Methodref          #82.#591     // org/kohsuke/github/GitHubClient.detectKnownErrors:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;Z)V
    #90 = Methodref          #82.#592     // org/kohsuke/github/GitHubClient.createResponse:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
    #91 = Methodref          #593.#594    // org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
    #92 = Class              #595         // org/kohsuke/github/GitHubClient$RetryRequestException
    #93 = Fieldref           #92.#596     // org/kohsuke/github/GitHubClient$RetryRequestException.connectorRequest:Lorg/kohsuke/github/connector/GitHubConnectorRequest;
    #94 = Class              #597         // java/net/SocketException
    #95 = Class              #598         // java/net/SocketTimeoutException
    #96 = Class              #599         // javax/net/ssl/SSLHandshakeException
    #97 = Methodref          #244.#600    // org/kohsuke/github/GitHubRequest.url:()Ljava/net/URL;
    #98 = Methodref          #82.#601     // org/kohsuke/github/GitHubClient.logRetryConnectionError:(Ljava/io/IOException;Ljava/net/URL;I)V
    #99 = Methodref          #82.#602     // org/kohsuke/github/GitHubClient.interpretApiError:(Ljava/io/IOException;Lorg/kohsuke/github/connector/GitHubConnectorRequest;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/io/IOException;
   #100 = Class              #603         // org/kohsuke/github/GHIOException
   #101 = String             #604         // Ran out of retries for URL:
   #102 = Methodref          #218.#537    // java/net/URL.toString:()Ljava/lang/String;
   #103 = Methodref          #100.#544    // org/kohsuke/github/GHIOException."<init>":(Ljava/lang/String;)V
   #104 = Methodref          #82.#605     // org/kohsuke/github/GitHubClient.detectOTPRequired:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #105 = Methodref          #82.#606     // org/kohsuke/github/GitHubClient.detectInvalidCached404Response:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;)V
   #106 = Methodref          #82.#607     // org/kohsuke/github/GitHubClient.detectRedirect:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #107 = Methodref          #319.#608    // org/kohsuke/github/GitHubRateLimitHandler.isError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
   #108 = Methodref          #319.#609    // org/kohsuke/github/GitHubRateLimitHandler.onError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #109 = Methodref          #92.#493     // org/kohsuke/github/GitHubClient$RetryRequestException."<init>":()V
   #110 = Methodref          #320.#608    // org/kohsuke/github/GitHubAbuseLimitHandler.isError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
   #111 = Methodref          #320.#609    // org/kohsuke/github/GitHubAbuseLimitHandler.onError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #112 = Fieldref           #610.#611    // org/kohsuke/github/GitHubConnectorResponseErrorHandler.STATUS_HTTP_BAD_REQUEST_OR_GREATER:Lorg/kohsuke/github/GitHubConnectorResponseErrorHandler;
   #113 = Methodref          #610.#608    // org/kohsuke/github/GitHubConnectorResponseErrorHandler.isError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
   #114 = Methodref          #610.#609    // org/kohsuke/github/GitHubConnectorResponseErrorHandler.onError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #115 = Methodref          #237.#612    // org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
   #116 = Class              #613         // org/kohsuke/github/HttpException
   #117 = String             #614         // GitHubConnnector did not automatically follow redirect.\nChange your http client configuration to automatically follow redirects as appropriate.
   #118 = String             #615         // Redirect
   #119 = Methodref          #237.#616    // org/kohsuke/github/connector/GitHubConnectorResponse.request:()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
   #120 = InterfaceMethodref #387.#600    // org/kohsuke/github/connector/GitHubConnectorRequest.url:()Ljava/net/URL;
   #121 = Methodref          #116.#617    // org/kohsuke/github/HttpException."<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
   #122 = Methodref          #244.#618    // org/kohsuke/github/GitHubRequest.toBuilder:()Lorg/kohsuke/github/GitHubRequest$Builder;
   #123 = Methodref          #244.#619    // org/kohsuke/github/GitHubRequest.allHeaders:()Ljava/util/Map;
   #124 = String             #620         // Authorization
   #125 = InterfaceMethodref #403.#621    // java/util/Map.containsKey:(Ljava/lang/Object;)Z
   #126 = Methodref          #82.#510     // org/kohsuke/github/GitHubClient.getEncodedAuthorization:()Ljava/lang/String;
   #127 = Methodref          #370.#622    // org/kohsuke/github/GitHubRequest$Builder.setHeader:(Ljava/lang/String;Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #128 = String             #623         // Accept
   #129 = Methodref          #244.#624    // org/kohsuke/github/GitHubRequest.header:(Ljava/lang/String;)Ljava/lang/String;
   #130 = String             #625         // application/vnd.github.v3+json
   #131 = String             #626         // Accept-Encoding
   #132 = String             #627         // gzip
   #133 = Methodref          #244.#628    // org/kohsuke/github/GitHubRequest.hasBody:()Z
   #134 = Methodref          #244.#629    // org/kohsuke/github/GitHubRequest.body:()Ljava/io/InputStream;
   #135 = Methodref          #244.#630    // org/kohsuke/github/GitHubRequest.contentType:()Ljava/lang/String;
   #136 = String             #631         // application/x-www-form-urlencoded
   #137 = Methodref          #632.#633    // org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #138 = Methodref          #370.#634    // org/kohsuke/github/GitHubRequest$Builder.contentType:(Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #139 = String             #635         // application/json
   #140 = Class              #636         // java/util/HashMap
   #141 = Methodref          #140.#493    // java/util/HashMap."<init>":()V
   #142 = Methodref          #244.#637    // org/kohsuke/github/GitHubRequest.args:()Ljava/util/List;
   #143 = InterfaceMethodref #477.#638    // java/util/List.iterator:()Ljava/util/Iterator;
   #144 = InterfaceMethodref #404.#639    // java/util/Iterator.hasNext:()Z
   #145 = InterfaceMethodref #404.#640    // java/util/Iterator.next:()Ljava/lang/Object;
   #146 = Class              #641         // org/kohsuke/github/GitHubRequest$Entry
   #147 = Fieldref           #146.#642    // org/kohsuke/github/GitHubRequest$Entry.key:Ljava/lang/String;
   #148 = Fieldref           #146.#643    // org/kohsuke/github/GitHubRequest$Entry.value:Ljava/lang/Object;
   #149 = InterfaceMethodref #403.#644    // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #150 = Class              #645         // java/io/ByteArrayInputStream
   #151 = Methodref          #82.#646     // org/kohsuke/github/GitHubClient.getMappingObjectWriter:()Lcom/fasterxml/jackson/databind/ObjectWriter;
   #152 = Methodref          #647.#648    // com/fasterxml/jackson/databind/ObjectWriter.writeValueAsBytes:(Ljava/lang/Object;)[B
   #153 = Methodref          #150.#649    // java/io/ByteArrayInputStream."<init>":([B)V
   #154 = Methodref          #370.#650    // org/kohsuke/github/GitHubRequest$Builder.with:(Ljava/io/InputStream;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #155 = InvokeDynamic      #3:#654      // #3:get:(Lorg/kohsuke/github/GitHubClient;Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/util/function/Supplier;
   #156 = Methodref          #538.#655    // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/util/function/Supplier;)V
   #157 = Methodref          #82.#656     // org/kohsuke/github/GitHubClient.shouldIgnoreBody:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
   #158 = InterfaceMethodref #273.#657    // org/kohsuke/github/GitHubClient$BodyHandler.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #159 = Class              #658         // org/kohsuke/github/GitHubResponse
   #160 = Methodref          #159.#659    // org/kohsuke/github/GitHubResponse."<init>":(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Ljava/lang/Object;)V
   #161 = String             #660         // Received HTTP_ACCEPTED(202) from
   #162 = String             #661         //  . Please try again in 5 seconds.
   #163 = String             #662         // Status
   #164 = Methodref          #237.#624    // org/kohsuke/github/connector/GitHubConnectorResponse.header:(Ljava/lang/String;)Ljava/lang/String;
   #165 = Methodref          #237.#619    // org/kohsuke/github/connector/GitHubConnectorResponse.allHeaders:()Ljava/util/Map;
   #166 = Methodref          #159.#663    // org/kohsuke/github/GitHubResponse.getBodyAsStringOrNull:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/String;
   #167 = Class              #664         // org/kohsuke/github/GHFileNotFoundException
   #168 = Methodref          #21.#665     // java/io/IOException.getMessage:()Ljava/lang/String;
   #169 = String             #666         //
   #170 = Methodref          #167.#667    // org/kohsuke/github/GHFileNotFoundException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
   #171 = Methodref          #167.#668    // org/kohsuke/github/GHFileNotFoundException.withResponseHeaderFields:(Ljava/util/Map;)Lorg/kohsuke/github/GHFileNotFoundException;
   #172 = Methodref          #116.#669    // org/kohsuke/github/HttpException."<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
   #173 = Methodref          #100.#670    // org/kohsuke/github/GHIOException.withResponseHeaderFields:(Ljava/util/Map;)Lorg/kohsuke/github/GHIOException;
   #174 = Methodref          #116.#671    // org/kohsuke/github/HttpException."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
   #175 = Fieldref           #529.#672    // java/util/logging/Level.INFO:Ljava/util/logging/Level;
   #176 = String             #673         //  while connecting to
   #177 = String             #674         // . Sleeping
   #178 = Methodref          #34.#675     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #179 = String             #676         //  milliseconds before retrying... ; will try
   #180 = String             #677         //  more time(s)
   #181 = Long               100l
   #183 = Methodref          #678.#679    // java/lang/Thread.sleep:(J)V
   #184 = Class              #680         // java/lang/InterruptedException
   #185 = Class              #681         // java/io/InterruptedIOException
   #186 = Methodref          #185.#493    // java/io/InterruptedIOException."<init>":()V
   #187 = Methodref          #185.#583    // java/io/InterruptedIOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
   #188 = InterfaceMethodref #387.#682    // org/kohsuke/github/connector/GitHubConnectorRequest.method:()Ljava/lang/String;
   #189 = String             #683         // GET
   #190 = Methodref          #684.#685    // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #191 = String             #686         // ETag
   #192 = String             #687         // Cache-Control
   #193 = InterfaceMethodref #387.#624    // org/kohsuke/github/connector/GitHubConnectorRequest.header:(Ljava/lang/String;)Ljava/lang/String;
   #194 = String             #688         // no-cache
   #195 = String             #689         // Encountered GitHub invalid cached 404 from
   #196 = String             #690         // . Retrying with \"Cache-Control\"=\"no-cache\"...
   #197 = Methodref          #92.#691     // org/kohsuke/github/GitHubClient$RetryRequestException."<init>":(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)V
   #198 = String             #692         // X-RateLimit-Limit
   #199 = Methodref          #237.#693    // org/kohsuke/github/connector/GitHubConnectorResponse.parseInt:(Ljava/lang/String;)I
   #200 = String             #694         // X-RateLimit-Remaining
   #201 = String             #695         // X-RateLimit-Reset
   #202 = Class              #696         // org/kohsuke/github/GHRateLimit$Record
   #203 = Methodref          #202.#697    // org/kohsuke/github/GHRateLimit$Record."<init>":(IIJLorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #204 = Class              #698         // java/lang/NumberFormatException
   #205 = String             #699         // Missing or malformed X-RateLimit header:
   #206 = String             #700         // X-GitHub-OTP
   #207 = Class              #701         // org/kohsuke/github/GHOTPRequiredException
   #208 = Methodref          #207.#493    // org/kohsuke/github/GHOTPRequiredException."<init>":()V
   #209 = Methodref          #207.#670    // org/kohsuke/github/GHOTPRequiredException.withResponseHeaderFields:(Ljava/util/Map;)Lorg/kohsuke/github/GHIOException;
   #210 = Methodref          #82.#702     // org/kohsuke/github/GitHubClient.isAnonymous:()Z
   #211 = Class              #703         // java/lang/IllegalStateException
   #212 = String             #704         // This operation requires a credential but none is given to the GitHub constructor
   #213 = Methodref          #211.#544    // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #214 = Methodref          #82.#705     // org/kohsuke/github/GitHubClient.sendRequest:(Lorg/kohsuke/github/GitHubRequest$Builder;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
   #215 = Methodref          #159.#612    // org/kohsuke/github/GitHubResponse.statusCode:()I
   #216 = String             #706         // X-GitHub-Media-Type
   #217 = Methodref          #159.#624    // org/kohsuke/github/GitHubResponse.header:(Ljava/lang/String;)Ljava/lang/String;
   #218 = Class              #707         // java/net/URL
   #219 = Methodref          #218.#544    // java/net/URL."<init>":(Ljava/lang/String;)V
   #220 = Class              #708         // java/net/MalformedURLException
   #221 = String             #709         // Invalid URL:
   #222 = Methodref          #82.#710     // org/kohsuke/github/GitHubClient.parseInstant:(Ljava/lang/String;)Ljava/time/Instant;
   #223 = Methodref          #711.#712    // java/util/Date.from:(Ljava/time/Instant;)Ljava/util/Date;
   #224 = Methodref          #25.#713     // java/lang/String.charAt:(I)C
   #225 = Fieldref           #82.#714     // org/kohsuke/github/GitHubClient.DATE_TIME_PARSER_SLASHES:Ljava/time/format/DateTimeFormatter;
   #226 = Methodref          #715.#716    // java/time/format/DateTimeFormatter.parse:(Ljava/lang/CharSequence;)Ljava/time/temporal/TemporalAccessor;
   #227 = Methodref          #717.#718    // java/time/Instant.from:(Ljava/time/temporal/TemporalAccessor;)Ljava/time/Instant;
   #228 = Fieldref           #715.#719    // java/time/format/DateTimeFormatter.ISO_OFFSET_DATE_TIME:Ljava/time/format/DateTimeFormatter;
   #229 = Fieldref           #715.#720    // java/time/format/DateTimeFormatter.ISO_INSTANT:Ljava/time/format/DateTimeFormatter;
   #230 = Methodref          #711.#721    // java/util/Date.getTime:()J
   #231 = Methodref          #717.#722    // java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
   #232 = Fieldref           #723.#724    // java/time/temporal/ChronoUnit.SECONDS:Ljava/time/temporal/ChronoUnit;
   #233 = Methodref          #717.#725    // java/time/Instant.truncatedTo:(Ljava/time/temporal/TemporalUnit;)Ljava/time/Instant;
   #234 = Methodref          #715.#726    // java/time/format/DateTimeFormatter.format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
   #235 = Fieldref           #82.#727     // org/kohsuke/github/GitHubClient.MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
   #236 = Methodref          #257.#728    // com/fasterxml/jackson/databind/ObjectMapper.writer:()Lcom/fasterxml/jackson/databind/ObjectWriter;
   #237 = Class              #729         // org/kohsuke/github/connector/GitHubConnectorResponse
   #238 = Methodref          #82.#730     // org/kohsuke/github/GitHubClient.getMappingObjectReader:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lcom/fasterxml/jackson/databind/ObjectReader;
   #239 = Methodref          #731.#732    // com/fasterxml/jackson/databind/ObjectReader.getInjectableValues:()Lcom/fasterxml/jackson/databind/InjectableValues;
   #240 = Class              #734         // com/fasterxml/jackson/databind/InjectableValues$Std
   #241 = Class              #736         // org/kohsuke/github/GitHub
   #242 = Methodref          #240.#737    // com/fasterxml/jackson/databind/InjectableValues$Std.addValue:(Ljava/lang/Class;Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/InjectableValues$Std;
   #243 = Methodref          #738.#739    // java/lang/Class.getName:()Ljava/lang/String;
   #244 = Class              #740         // org/kohsuke/github/GitHubRequest
   #245 = Methodref          #244.#741    // org/kohsuke/github/GitHubRequest.injectedMappingValues:()Ljava/util/Map;
   #246 = InterfaceMethodref #403.#742    // java/util/Map.putAll:(Ljava/util/Map;)V
   #247 = Methodref          #240.#743    // com/fasterxml/jackson/databind/InjectableValues$Std."<init>":(Ljava/util/Map;)V
   #248 = Methodref          #257.#744    // com/fasterxml/jackson/databind/ObjectMapper.reader:(Lcom/fasterxml/jackson/databind/InjectableValues;)Lcom/fasterxml/jackson/databind/ObjectReader;
   #249 = Methodref          #745.#746    // java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
   #250 = Methodref          #745.#747    // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
   #251 = String             #748         // GitHub API request [
   #252 = String             #749         // anonymous
   #253 = String             #750         // ]:
   #254 = Methodref          #66.#751     // org/kohsuke/github/GHRateLimit.getMergedRateLimit:(Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
   #255 = Methodref          #159.#752    // org/kohsuke/github/GitHubResponse.parseBody:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Ljava/lang/Class;)Ljava/lang/Object;
   #256 = Methodref          #538.#753    // java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
   #257 = Class              #754         // com/fasterxml/jackson/databind/ObjectMapper
   #258 = Methodref          #257.#493    // com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
   #259 = String             #755         // yyyy/MM/dd HH:mm:ss Z
   #260 = Methodref          #715.#756    // java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
   #261 = Class              #758         // com/fasterxml/jackson/databind/introspect/VisibilityChecker$Std
   #262 = Fieldref           #759.#760    // com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility.NONE:Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
   #263 = Fieldref           #759.#761    // com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility.ANY:Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
   #264 = Methodref          #261.#762    // com/fasterxml/jackson/databind/introspect/VisibilityChecker$Std."<init>":(Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;)V
   #265 = Methodref          #257.#763    // com/fasterxml/jackson/databind/ObjectMapper.setVisibility:(Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker;)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #266 = Fieldref           #764.#765    // com/fasterxml/jackson/databind/DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES:Lcom/fasterxml/jackson/databind/DeserializationFeature;
   #267 = Methodref          #257.#766    // com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/DeserializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #268 = Fieldref           #767.#768    // com/fasterxml/jackson/databind/MapperFeature.ACCEPT_CASE_INSENSITIVE_ENUMS:Lcom/fasterxml/jackson/databind/MapperFeature;
   #269 = Methodref          #257.#769    // com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/MapperFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #270 = Fieldref           #770.#771    // com/fasterxml/jackson/databind/PropertyNamingStrategy.SNAKE_CASE:Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;
   #271 = Methodref          #257.#772    // com/fasterxml/jackson/databind/ObjectMapper.setPropertyNamingStrategy:(Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #272 = Class              #773         // java/lang/Object
   #273 = Class              #774         // org/kohsuke/github/GitHubClient$BodyHandler
   #274 = Utf8               BodyHandler
   #275 = Utf8               InnerClasses
   #276 = Utf8               RetryRequestException
   #277 = Utf8               GHApiInfo
   #278 = Utf8               CONNECTION_ERROR_RETRIES
   #279 = Utf8               I
   #280 = Utf8               ConstantValue
   #281 = Integer            2
   #282 = Utf8               retryTimeoutMillis
   #283 = Integer            100
   #284 = Utf8               apiUrl
   #285 = Utf8               Ljava/lang/String;
   #286 = Utf8               rateLimitHandler
   #287 = Utf8               Lorg/kohsuke/github/GitHubRateLimitHandler;
   #288 = Utf8               abuseLimitHandler
   #289 = Utf8               Lorg/kohsuke/github/GitHubAbuseLimitHandler;
   #290 = Utf8               rateLimitChecker
   #291 = Utf8               Lorg/kohsuke/github/GitHubRateLimitChecker;
   #292 = Utf8               authorizationProvider
   #293 = Utf8               Lorg/kohsuke/github/authorization/AuthorizationProvider;
   #294 = Utf8               connector
   #295 = Utf8               Lorg/kohsuke/github/connector/GitHubConnector;
   #296 = Utf8               rateLimit
   #297 = Utf8               Ljava/util/concurrent/atomic/AtomicReference;
   #298 = Utf8               Signature
   #299 = Utf8               Ljava/util/concurrent/atomic/AtomicReference<Lorg/kohsuke/github/GHRateLimit;>;
   #300 = Utf8               RuntimeVisibleAnnotations
   #301 = Utf8               Ljavax/annotation/Nonnull;
   #302 = Utf8               LOGGER
   #303 = Utf8               Ljava/util/logging/Logger;
   #304 = Utf8               MAPPER
   #305 = Utf8               Lcom/fasterxml/jackson/databind/ObjectMapper;
   #306 = Utf8               GITHUB_URL
   #307 = String             #775         // https://api.github.com
   #308 = Utf8               DATE_TIME_PARSER_SLASHES
   #309 = Utf8               Ljava/time/format/DateTimeFormatter;
   #310 = Utf8               <init>
   #311 = Utf8               (Ljava/lang/String;Lorg/kohsuke/github/connector/GitHubConnector;Lorg/kohsuke/github/GitHubRateLimitHandler;Lorg/kohsuke/github/GitHubAbuseLimitHandler;Lorg/kohsuke/github/GitHubRateLimitChecker;Lorg/kohsuke/github/authorization/AuthorizationProvider;)V
   #312 = Utf8               Code
   #313 = Utf8               LineNumberTable
   #314 = Utf8               LocalVariableTable
   #315 = Utf8               this
   #316 = Utf8               Lorg/kohsuke/github/GitHubClient;
   #317 = Utf8               StackMapTable
   #318 = Class              #776         // org/kohsuke/github/connector/GitHubConnector
   #319 = Class              #777         // org/kohsuke/github/GitHubRateLimitHandler
   #320 = Class              #778         // org/kohsuke/github/GitHubAbuseLimitHandler
   #321 = Class              #779         // org/kohsuke/github/GitHubRateLimitChecker
   #322 = Class              #780         // org/kohsuke/github/authorization/AuthorizationProvider
   #323 = Utf8               Exceptions
   #324 = Utf8               getLogin
   #325 = Utf8               ()Ljava/lang/String;
   #326 = Utf8               userAuthorizationProvider
   #327 = Utf8               Lorg/kohsuke/github/authorization/UserAuthorizationProvider;
   #328 = Utf8               fetch
   #329 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
   #330 = Utf8               type
   #331 = Utf8               Ljava/lang/Class;
   #332 = Utf8               urlPath
   #333 = Utf8               request
   #334 = Utf8               Lorg/kohsuke/github/GitHubRequest;
   #335 = Utf8               LocalVariableTypeTable
   #336 = Utf8               Ljava/lang/Class<TT;>;
   #337 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;Ljava/lang/String;)TT;
   #338 = Utf8               isCredentialValid
   #339 = Utf8               ()Z
   #340 = Utf8               e
   #341 = Utf8               Ljava/io/IOException;
   #342 = Utf8               isOffline
   #343 = Utf8               getConnector
   #344 = Utf8               ()Lorg/kohsuke/github/HttpConnector;
   #345 = Utf8               Deprecated
   #346 = Utf8               Ljava/lang/Deprecated;
   #347 = Utf8               setConnector
   #348 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnector;)V
   #349 = Utf8               isAnonymous
   #350 = Utf8               getRateLimit
   #351 = Utf8               ()Lorg/kohsuke/github/GHRateLimit;
   #352 = Utf8               getEncodedAuthorization
   #353 = Utf8               Ljavax/annotation/CheckForNull;
   #354 = Utf8               (Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
   #355 = Utf8               result
   #356 = Utf8               Lorg/kohsuke/github/GHRateLimit;
   #357 = Utf8               Ljava/io/FileNotFoundException;
   #358 = Utf8               rateLimitTarget
   #359 = Utf8               Lorg/kohsuke/github/RateLimitTarget;
   #360 = Utf8               RuntimeVisibleParameterAnnotations
   #361 = Utf8               lastRateLimit
   #362 = Class              #781         // java/lang/Throwable
   #363 = Utf8               updateRateLimit
   #364 = Utf8               (Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
   #365 = Utf8               observed
   #366 = Utf8               checkApiUrlValidity
   #367 = Utf8               ()V
   #368 = Utf8               getApiUrl
   #369 = Utf8               sendRequest
   #370 = Class              #782         // org/kohsuke/github/GitHubRequest$Builder
   #371 = Utf8               Builder
   #372 = Utf8               (Lorg/kohsuke/github/GitHubRequest$Builder;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
   #373 = Utf8               builder
   #374 = Utf8               Lorg/kohsuke/github/GitHubRequest$Builder;
   #375 = Utf8               handler
   #376 = Utf8               Lorg/kohsuke/github/GitHubClient$BodyHandler;
   #377 = Utf8               Lorg/kohsuke/github/GitHubRequest$Builder<*>;
   #378 = Utf8               Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;
   #379 = Utf8               <T:Ljava/lang/Object;>(Lorg/kohsuke/github/GitHubRequest$Builder<*>;Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;)Lorg/kohsuke/github/GitHubResponse<TT;>;
   #380 = Utf8               (Lorg/kohsuke/github/GitHubRequest;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
   #381 = Utf8               Lorg/kohsuke/github/GitHubClient$RetryRequestException;
   #382 = Utf8               connectorResponse
   #383 = Utf8               Lorg/kohsuke/github/connector/GitHubConnectorResponse;
   #384 = Utf8               retries
   #385 = Utf8               connectorRequest
   #386 = Utf8               Lorg/kohsuke/github/connector/GitHubConnectorRequest;
   #387 = Class              #783         // org/kohsuke/github/connector/GitHubConnectorRequest
   #388 = Utf8               <T:Ljava/lang/Object;>(Lorg/kohsuke/github/GitHubRequest;Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;)Lorg/kohsuke/github/GitHubResponse<TT;>;
   #389 = Utf8               detectKnownErrors
   #390 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;Z)V
   #391 = Utf8               detectStatusCodeError
   #392 = Utf8               Z
   #393 = Utf8               detectRedirect
   #394 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #395 = Utf8               prepareConnectorRequest
   #396 = Utf8               (Lorg/kohsuke/github/GitHubRequest;)Lorg/kohsuke/github/connector/GitHubConnectorRequest;
   #397 = Utf8               authorization
   #398 = Utf8               Entry
   #399 = Utf8               Lorg/kohsuke/github/GitHubRequest$Entry;
   #400 = Utf8               json
   #401 = Utf8               Ljava/util/Map;
   #402 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;
   #403 = Class              #784         // java/util/Map
   #404 = Class              #785         // java/util/Iterator
   #405 = Utf8               logRequest
   #406 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorRequest;)V
   #407 = Utf8               createResponse
   #408 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
   #409 = Utf8               body
   #410 = Utf8               Ljava/lang/Object;
   #411 = Utf8               TT;
   #412 = Utf8               <T:Ljava/lang/Object;>(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;)Lorg/kohsuke/github/GitHubResponse<TT;>;
   #413 = Utf8               shouldIgnoreBody
   #414 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
   #415 = Utf8               interpretApiError
   #416 = Utf8               (Ljava/io/IOException;Lorg/kohsuke/github/connector/GitHubConnectorRequest;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/io/IOException;
   #417 = Utf8               statusCode
   #418 = Utf8               message
   #419 = Utf8               headers
   #420 = Utf8               errorMessage
   #421 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
   #422 = Utf8               logRetryConnectionError
   #423 = Utf8               (Ljava/io/IOException;Ljava/net/URL;I)V
   #424 = Utf8               ie
   #425 = Utf8               Ljava/lang/InterruptedException;
   #426 = Utf8               url
   #427 = Utf8               Ljava/net/URL;
   #428 = Utf8               detectInvalidCached404Response
   #429 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;)V
   #430 = Utf8               noteRateLimit
   #431 = Utf8               (Lorg/kohsuke/github/RateLimitTarget;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #432 = Utf8               limit
   #433 = Utf8               remaining
   #434 = Utf8               reset
   #435 = Utf8               Record
   #436 = Utf8               Lorg/kohsuke/github/GHRateLimit$Record;
   #437 = Utf8               Ljava/lang/NumberFormatException;
   #438 = Utf8               detectOTPRequired
   #439 = Utf8               requireCredential
   #440 = Utf8               isPrivateModeEnabled
   #441 = Utf8               response
   #442 = Utf8               Lorg/kohsuke/github/GitHubResponse;
   #443 = Utf8               Lorg/kohsuke/github/GitHubResponse<*>;
   #444 = Utf8               parseURL
   #445 = Utf8               (Ljava/lang/String;)Ljava/net/URL;
   #446 = Utf8               Ljava/net/MalformedURLException;
   #447 = Utf8               s
   #448 = Utf8               parseDate
   #449 = Utf8               (Ljava/lang/String;)Ljava/util/Date;
   #450 = Utf8               timestamp
   #451 = Utf8               parseInstant
   #452 = Utf8               (Ljava/lang/String;)Ljava/time/Instant;
   #453 = Utf8               printDate
   #454 = Utf8               (Ljava/util/Date;)Ljava/lang/String;
   #455 = Utf8               dt
   #456 = Utf8               Ljava/util/Date;
   #457 = Utf8               getMappingObjectWriter
   #458 = Utf8               ()Lcom/fasterxml/jackson/databind/ObjectWriter;
   #459 = Utf8               getMappingObjectReader
   #460 = Utf8               (Lorg/kohsuke/github/GitHub;)Lcom/fasterxml/jackson/databind/ObjectReader;
   #461 = Utf8               root
   #462 = Utf8               Lorg/kohsuke/github/GitHub;
   #463 = Utf8               reader
   #464 = Utf8               Lcom/fasterxml/jackson/databind/ObjectReader;
   #465 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lcom/fasterxml/jackson/databind/ObjectReader;
   #466 = Utf8               injected
   #467 = Utf8               unmodifiableMapOrNull
   #468 = Utf8               (Ljava/util/Map;)Ljava/util/Map;
   #469 = Utf8               map
   #470 = Utf8               Ljava/util/Map<+TK;+TV;>;
   #471 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<+TK;+TV;>;)Ljava/util/Map<TK;TV;>;
   #472 = Utf8               unmodifiableListOrNull
   #473 = Utf8               (Ljava/util/List;)Ljava/util/List;
   #474 = Utf8               list
   #475 = Utf8               Ljava/util/List;
   #476 = Utf8               Ljava/util/List<+TT;>;
   #477 = Class              #786         // java/util/List
   #478 = Utf8               <T:Ljava/lang/Object;>(Ljava/util/List<+TT;>;)Ljava/util/List<TT;>;
   #479 = Utf8               lambda$logRequest$3
   #480 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/lang/String;
   #481 = Utf8               lambda$updateRateLimit$2
   #482 = Utf8               (Lorg/kohsuke/github/GHRateLimit;Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
   #483 = Utf8               current
   #484 = Utf8               x
   #485 = Utf8               lambda$getRateLimit$1
   #486 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lorg/kohsuke/github/JsonRateLimit;
   #487 = Utf8               lambda$fetch$0
   #488 = Utf8               (Ljava/lang/Class;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/Object;
   #489 = Utf8               <clinit>
   #490 = Utf8               SourceFile
   #491 = Utf8               GitHubClient.java
   #492 = Utf8               java/net/HttpURLConnection
   #493 = NameAndType        #310:#367    // "<init>":()V
   #494 = Utf8               java/util/concurrent/atomic/AtomicReference
   #495 = NameAndType        #787:#356    // DEFAULT:Lorg/kohsuke/github/GHRateLimit;
   #496 = NameAndType        #310:#788    // "<init>":(Ljava/lang/Object;)V
   #497 = NameAndType        #296:#297    // rateLimit:Ljava/util/concurrent/atomic/AtomicReference;
   #498 = Utf8               /
   #499 = NameAndType        #789:#790    // endsWith:(Ljava/lang/String;)Z
   #500 = NameAndType        #791:#792    // length:()I
   #501 = NameAndType        #793:#794    // substring:(II)Ljava/lang/String;
   #502 = NameAndType        #787:#295    // DEFAULT:Lorg/kohsuke/github/connector/GitHubConnector;
   #503 = NameAndType        #284:#285    // apiUrl:Ljava/lang/String;
   #504 = NameAndType        #294:#295    // connector:Lorg/kohsuke/github/connector/GitHubConnector;
   #505 = NameAndType        #292:#293    // authorizationProvider:Lorg/kohsuke/github/authorization/AuthorizationProvider;
   #506 = NameAndType        #286:#287    // rateLimitHandler:Lorg/kohsuke/github/GitHubRateLimitHandler;
   #507 = NameAndType        #288:#289    // abuseLimitHandler:Lorg/kohsuke/github/GitHubAbuseLimitHandler;
   #508 = NameAndType        #290:#291    // rateLimitChecker:Lorg/kohsuke/github/GitHubRateLimitChecker;
   #509 = Utf8               org/kohsuke/github/authorization/UserAuthorizationProvider
   #510 = NameAndType        #352:#325    // getEncodedAuthorization:()Ljava/lang/String;
   #511 = NameAndType        #324:#325    // getLogin:()Ljava/lang/String;
   #512 = Utf8               java/io/IOException
   #513 = NameAndType        #795:#796    // newBuilder:()Lorg/kohsuke/github/GitHubRequest$Builder;
   #514 = NameAndType        #368:#325    // getApiUrl:()Ljava/lang/String;
   #515 = NameAndType        #797:#798    // withApiUrl:(Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #516 = Utf8               java/lang/String
   #517 = NameAndType        #799:#800    // withUrlPath:(Ljava/lang/String;[Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #518 = NameAndType        #801:#802    // build:()Lorg/kohsuke/github/GitHubRequest;
   #519 = Utf8               BootstrapMethods
   #520 = MethodHandle       6:#803       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #521 = MethodType         #804         //  (Ljava/lang/Object;)Ljava/lang/Object;
   #522 = MethodHandle       6:#805       // REF_invokeStatic org/kohsuke/github/GitHubClient.lambda$fetch$0:(Ljava/lang/Class;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/Object;
   #523 = MethodType         #806         //  (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/Object;
   #524 = NameAndType        #807:#808    // apply:(Ljava/lang/Class;)Lorg/kohsuke/github/GitHubClient$BodyHandler;
   #525 = NameAndType        #369:#380    // sendRequest:(Lorg/kohsuke/github/GitHubRequest;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
   #526 = NameAndType        #409:#809    // body:()Ljava/lang/Object;
   #527 = NameAndType        #350:#351    // getRateLimit:()Lorg/kohsuke/github/GHRateLimit;
   #528 = NameAndType        #302:#303    // LOGGER:Ljava/util/logging/Logger;
   #529 = Class              #810         // java/util/logging/Level
   #530 = NameAndType        #811:#812    // FINE:Ljava/util/logging/Level;
   #531 = Utf8               java/lang/StringBuilder
   #532 = Utf8               Exception validating credentials on
   #533 = NameAndType        #813:#814    // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #534 = Utf8                with login \'
   #535 = Utf8               \'
   #536 = NameAndType        #813:#815    // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #537 = NameAndType        #816:#325    // toString:()Ljava/lang/String;
   #538 = Class              #817         // java/util/logging/Logger
   #539 = NameAndType        #818:#819    // log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
   #540 = NameAndType        #820:#295    // OFFLINE:Lorg/kohsuke/github/connector/GitHubConnector;
   #541 = Utf8               org/kohsuke/github/HttpConnector
   #542 = Utf8               java/lang/UnsupportedOperationException
   #543 = Utf8               This GitHubConnector does not support HttpConnector.connect().
   #544 = NameAndType        #310:#821    // "<init>":(Ljava/lang/String;)V
   #545 = Utf8               HttpConnector and getConnector() are deprecated. Please file an issue describing your use case.
   #546 = NameAndType        #822:#821    // warning:(Ljava/lang/String;)V
   #547 = Utf8               Connector should not be changed. Please file an issue describing your use case.
   #548 = Class              #823         // org/kohsuke/github/RateLimitTarget
   #549 = NameAndType        #824:#359    // NONE:Lorg/kohsuke/github/RateLimitTarget;
   #550 = NameAndType        #350:#354    // getRateLimit:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
   #551 = NameAndType        #296:#825    // rateLimit:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #552 = Utf8               /rate_limit
   #553 = MethodHandle       6:#826       // REF_invokeStatic org/kohsuke/github/GitHubClient.lambda$getRateLimit$1:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lorg/kohsuke/github/JsonRateLimit;
   #554 = MethodType         #486         //  (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lorg/kohsuke/github/JsonRateLimit;
   #555 = NameAndType        #807:#827    // apply:()Lorg/kohsuke/github/GitHubClient$BodyHandler;
   #556 = Utf8               org/kohsuke/github/JsonRateLimit
   #557 = NameAndType        #828:#356    // resources:Lorg/kohsuke/github/GHRateLimit;
   #558 = Utf8               java/io/FileNotFoundException
   #559 = Utf8               /rate_limit returned 404 Not Found.
   #560 = NameAndType        #818:#829    // log:(Ljava/util/logging/Level;Ljava/lang/String;)V
   #561 = Class              #830         // org/kohsuke/github/GHRateLimit$UnknownLimitRecord
   #562 = NameAndType        #483:#832    // current:()Lorg/kohsuke/github/GHRateLimit$Record;
   #563 = NameAndType        #833:#834    // fromRecord:(Lorg/kohsuke/github/GHRateLimit$Record;Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
   #564 = NameAndType        #363:#364    // updateRateLimit:(Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
   #565 = NameAndType        #835:#809    // get:()Ljava/lang/Object;
   #566 = Utf8               org/kohsuke/github/GHRateLimit
   #567 = NameAndType        #836:#837    // getRecord:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit$Record;
   #568 = NameAndType        #838:#339    // isExpired:()Z
   #569 = MethodType         #839         //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #570 = MethodHandle       6:#840       // REF_invokeStatic org/kohsuke/github/GitHubClient.lambda$updateRateLimit$2:(Lorg/kohsuke/github/GHRateLimit;Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
   #571 = MethodType         #482         //  (Lorg/kohsuke/github/GHRateLimit;Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
   #572 = NameAndType        #807:#841    // apply:()Ljava/util/function/BinaryOperator;
   #573 = NameAndType        #842:#843    // accumulateAndGet:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
   #574 = NameAndType        #844:#812    // FINEST:Ljava/util/logging/Level;
   #575 = Utf8               Rate limit now: {0}
   #576 = NameAndType        #818:#845    // log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
   #577 = Utf8               org/kohsuke/github/GitHubClient$GHApiInfo
   #578 = NameAndType        #328:#329    // fetch:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
   #579 = NameAndType        #846:#821    // check:(Ljava/lang/String;)V
   #580 = NameAndType        #440:#339    // isPrivateModeEnabled:()Z
   #581 = Utf8               GitHub Enterprise server (
   #582 = Utf8               ) with private mode enabled
   #583 = NameAndType        #847:#848    // initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
   #584 = Utf8               org/kohsuke/github/GitHubClient
   #585 = NameAndType        #395:#396    // prepareConnectorRequest:(Lorg/kohsuke/github/GitHubRequest;)Lorg/kohsuke/github/connector/GitHubConnectorRequest;
   #586 = NameAndType        #405:#406    // logRequest:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)V
   #587 = NameAndType        #358:#849    // rateLimitTarget:()Lorg/kohsuke/github/RateLimitTarget;
   #588 = NameAndType        #850:#851    // checkRateLimit:(Lorg/kohsuke/github/GitHubClient;Lorg/kohsuke/github/RateLimitTarget;)V
   #589 = NameAndType        #852:#853    // send:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Lorg/kohsuke/github/connector/GitHubConnectorResponse;
   #590 = NameAndType        #430:#431    // noteRateLimit:(Lorg/kohsuke/github/RateLimitTarget;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #591 = NameAndType        #389:#390    // detectKnownErrors:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;Z)V
   #592 = NameAndType        #407:#408    // createResponse:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
   #593 = Class              #854         // org/apache/commons/io/IOUtils
   #594 = NameAndType        #855:#856    // closeQuietly:(Ljava/io/Closeable;)V
   #595 = Utf8               org/kohsuke/github/GitHubClient$RetryRequestException
   #596 = NameAndType        #385:#386    // connectorRequest:Lorg/kohsuke/github/connector/GitHubConnectorRequest;
   #597 = Utf8               java/net/SocketException
   #598 = Utf8               java/net/SocketTimeoutException
   #599 = Utf8               javax/net/ssl/SSLHandshakeException
   #600 = NameAndType        #426:#857    // url:()Ljava/net/URL;
   #601 = NameAndType        #422:#423    // logRetryConnectionError:(Ljava/io/IOException;Ljava/net/URL;I)V
   #602 = NameAndType        #415:#416    // interpretApiError:(Ljava/io/IOException;Lorg/kohsuke/github/connector/GitHubConnectorRequest;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/io/IOException;
   #603 = Utf8               org/kohsuke/github/GHIOException
   #604 = Utf8               Ran out of retries for URL:
   #605 = NameAndType        #438:#394    // detectOTPRequired:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #606 = NameAndType        #428:#429    // detectInvalidCached404Response:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;)V
   #607 = NameAndType        #393:#394    // detectRedirect:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #608 = NameAndType        #858:#414    // isError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
   #609 = NameAndType        #859:#394    // onError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #610 = Class              #860         // org/kohsuke/github/GitHubConnectorResponseErrorHandler
   #611 = NameAndType        #861:#862    // STATUS_HTTP_BAD_REQUEST_OR_GREATER:Lorg/kohsuke/github/GitHubConnectorResponseErrorHandler;
   #612 = NameAndType        #417:#792    // statusCode:()I
   #613 = Utf8               org/kohsuke/github/HttpException
   #614 = Utf8               GitHubConnnector did not automatically follow redirect.\nChange your http client configuration to automatically follow redirects as appropriate.
   #615 = Utf8               Redirect
   #616 = NameAndType        #333:#863    // request:()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
   #617 = NameAndType        #310:#864    // "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
   #618 = NameAndType        #865:#796    // toBuilder:()Lorg/kohsuke/github/GitHubRequest$Builder;
   #619 = NameAndType        #866:#867    // allHeaders:()Ljava/util/Map;
   #620 = Utf8               Authorization
   #621 = NameAndType        #868:#869    // containsKey:(Ljava/lang/Object;)Z
   #622 = NameAndType        #870:#871    // setHeader:(Ljava/lang/String;Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #623 = Utf8               Accept
   #624 = NameAndType        #872:#873    // header:(Ljava/lang/String;)Ljava/lang/String;
   #625 = Utf8               application/vnd.github.v3+json
   #626 = Utf8               Accept-Encoding
   #627 = Utf8               gzip
   #628 = NameAndType        #874:#339    // hasBody:()Z
   #629 = NameAndType        #409:#875    // body:()Ljava/io/InputStream;
   #630 = NameAndType        #876:#325    // contentType:()Ljava/lang/String;
   #631 = Utf8               application/x-www-form-urlencoded
   #632 = Class              #877         // org/apache/commons/lang3/StringUtils
   #633 = NameAndType        #878:#879    // defaultString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #634 = NameAndType        #876:#798    // contentType:(Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #635 = Utf8               application/json
   #636 = Utf8               java/util/HashMap
   #637 = NameAndType        #880:#881    // args:()Ljava/util/List;
   #638 = NameAndType        #882:#883    // iterator:()Ljava/util/Iterator;
   #639 = NameAndType        #884:#339    // hasNext:()Z
   #640 = NameAndType        #885:#809    // next:()Ljava/lang/Object;
   #641 = Utf8               org/kohsuke/github/GitHubRequest$Entry
   #642 = NameAndType        #886:#285    // key:Ljava/lang/String;
   #643 = NameAndType        #887:#410    // value:Ljava/lang/Object;
   #644 = NameAndType        #888:#839    // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #645 = Utf8               java/io/ByteArrayInputStream
   #646 = NameAndType        #457:#458    // getMappingObjectWriter:()Lcom/fasterxml/jackson/databind/ObjectWriter;
   #647 = Class              #889         // com/fasterxml/jackson/databind/ObjectWriter
   #648 = NameAndType        #890:#891    // writeValueAsBytes:(Ljava/lang/Object;)[B
   #649 = NameAndType        #310:#892    // "<init>":([B)V
   #650 = NameAndType        #893:#894    // with:(Ljava/io/InputStream;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #651 = MethodType         #809         //  ()Ljava/lang/Object;
   #652 = MethodHandle       7:#895       // REF_invokeSpecial org/kohsuke/github/GitHubClient.lambda$logRequest$3:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/lang/String;
   #653 = MethodType         #325         //  ()Ljava/lang/String;
   #654 = NameAndType        #835:#896    // get:(Lorg/kohsuke/github/GitHubClient;Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/util/function/Supplier;
   #655 = NameAndType        #818:#897    // log:(Ljava/util/logging/Level;Ljava/util/function/Supplier;)V
   #656 = NameAndType        #413:#414    // shouldIgnoreBody:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
   #657 = NameAndType        #807:#804    // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #658 = Utf8               org/kohsuke/github/GitHubResponse
   #659 = NameAndType        #310:#898    // "<init>":(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Ljava/lang/Object;)V
   #660 = Utf8               Received HTTP_ACCEPTED(202) from
   #661 = Utf8                . Please try again in 5 seconds.
   #662 = Utf8               Status
   #663 = NameAndType        #899:#900    // getBodyAsStringOrNull:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/String;
   #664 = Utf8               org/kohsuke/github/GHFileNotFoundException
   #665 = NameAndType        #901:#325    // getMessage:()Ljava/lang/String;
   #666 = Utf8
   #667 = NameAndType        #310:#902    // "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
   #668 = NameAndType        #903:#904    // withResponseHeaderFields:(Ljava/util/Map;)Lorg/kohsuke/github/GHFileNotFoundException;
   #669 = NameAndType        #310:#905    // "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
   #670 = NameAndType        #903:#906    // withResponseHeaderFields:(Ljava/util/Map;)Lorg/kohsuke/github/GHIOException;
   #671 = NameAndType        #310:#907    // "<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
   #672 = NameAndType        #908:#812    // INFO:Ljava/util/logging/Level;
   #673 = Utf8                while connecting to
   #674 = Utf8               . Sleeping
   #675 = NameAndType        #813:#909    // append:(I)Ljava/lang/StringBuilder;
   #676 = Utf8                milliseconds before retrying... ; will try
   #677 = Utf8                more time(s)
   #678 = Class              #910         // java/lang/Thread
   #679 = NameAndType        #911:#912    // sleep:(J)V
   #680 = Utf8               java/lang/InterruptedException
   #681 = Utf8               java/io/InterruptedIOException
   #682 = NameAndType        #913:#325    // method:()Ljava/lang/String;
   #683 = Utf8               GET
   #684 = Class              #914         // java/util/Objects
   #685 = NameAndType        #915:#916    // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #686 = Utf8               ETag
   #687 = Utf8               Cache-Control
   #688 = Utf8               no-cache
   #689 = Utf8               Encountered GitHub invalid cached 404 from
   #690 = Utf8               . Retrying with \"Cache-Control\"=\"no-cache\"...
   #691 = NameAndType        #310:#406    // "<init>":(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)V
   #692 = Utf8               X-RateLimit-Limit
   #693 = NameAndType        #917:#918    // parseInt:(Ljava/lang/String;)I
   #694 = Utf8               X-RateLimit-Remaining
   #695 = Utf8               X-RateLimit-Reset
   #696 = Utf8               org/kohsuke/github/GHRateLimit$Record
   #697 = NameAndType        #310:#919    // "<init>":(IIJLorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #698 = Utf8               java/lang/NumberFormatException
   #699 = Utf8               Missing or malformed X-RateLimit header:
   #700 = Utf8               X-GitHub-OTP
   #701 = Utf8               org/kohsuke/github/GHOTPRequiredException
   #702 = NameAndType        #349:#339    // isAnonymous:()Z
   #703 = Utf8               java/lang/IllegalStateException
   #704 = Utf8               This operation requires a credential but none is given to the GitHub constructor
   #705 = NameAndType        #369:#372    // sendRequest:(Lorg/kohsuke/github/GitHubRequest$Builder;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
   #706 = Utf8               X-GitHub-Media-Type
   #707 = Utf8               java/net/URL
   #708 = Utf8               java/net/MalformedURLException
   #709 = Utf8               Invalid URL:
   #710 = NameAndType        #451:#452    // parseInstant:(Ljava/lang/String;)Ljava/time/Instant;
   #711 = Class              #920         // java/util/Date
   #712 = NameAndType        #921:#922    // from:(Ljava/time/Instant;)Ljava/util/Date;
   #713 = NameAndType        #923:#924    // charAt:(I)C
   #714 = NameAndType        #308:#309    // DATE_TIME_PARSER_SLASHES:Ljava/time/format/DateTimeFormatter;
   #715 = Class              #925         // java/time/format/DateTimeFormatter
   #716 = NameAndType        #926:#927    // parse:(Ljava/lang/CharSequence;)Ljava/time/temporal/TemporalAccessor;
   #717 = Class              #928         // java/time/Instant
   #718 = NameAndType        #921:#929    // from:(Ljava/time/temporal/TemporalAccessor;)Ljava/time/Instant;
   #719 = NameAndType        #930:#309    // ISO_OFFSET_DATE_TIME:Ljava/time/format/DateTimeFormatter;
   #720 = NameAndType        #931:#309    // ISO_INSTANT:Ljava/time/format/DateTimeFormatter;
   #721 = NameAndType        #932:#933    // getTime:()J
   #722 = NameAndType        #934:#935    // ofEpochMilli:(J)Ljava/time/Instant;
   #723 = Class              #936         // java/time/temporal/ChronoUnit
   #724 = NameAndType        #937:#938    // SECONDS:Ljava/time/temporal/ChronoUnit;
   #725 = NameAndType        #939:#940    // truncatedTo:(Ljava/time/temporal/TemporalUnit;)Ljava/time/Instant;
   #726 = NameAndType        #941:#942    // format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
   #727 = NameAndType        #304:#305    // MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
   #728 = NameAndType        #943:#458    // writer:()Lcom/fasterxml/jackson/databind/ObjectWriter;
   #729 = Utf8               org/kohsuke/github/connector/GitHubConnectorResponse
   #730 = NameAndType        #459:#465    // getMappingObjectReader:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lcom/fasterxml/jackson/databind/ObjectReader;
   #731 = Class              #944         // com/fasterxml/jackson/databind/ObjectReader
   #732 = NameAndType        #945:#946    // getInjectableValues:()Lcom/fasterxml/jackson/databind/InjectableValues;
   #733 = Class              #947         // com/fasterxml/jackson/databind/InjectableValues
   #734 = Utf8               com/fasterxml/jackson/databind/InjectableValues$Std
   #735 = Utf8               Std
   #736 = Utf8               org/kohsuke/github/GitHub
   #737 = NameAndType        #948:#949    // addValue:(Ljava/lang/Class;Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/InjectableValues$Std;
   #738 = Class              #950         // java/lang/Class
   #739 = NameAndType        #951:#325    // getName:()Ljava/lang/String;
   #740 = Utf8               org/kohsuke/github/GitHubRequest
   #741 = NameAndType        #952:#867    // injectedMappingValues:()Ljava/util/Map;
   #742 = NameAndType        #953:#954    // putAll:(Ljava/util/Map;)V
   #743 = NameAndType        #310:#954    // "<init>":(Ljava/util/Map;)V
   #744 = NameAndType        #463:#955    // reader:(Lcom/fasterxml/jackson/databind/InjectableValues;)Lcom/fasterxml/jackson/databind/ObjectReader;
   #745 = Class              #956         // java/util/Collections
   #746 = NameAndType        #957:#468    // unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
   #747 = NameAndType        #958:#473    // unmodifiableList:(Ljava/util/List;)Ljava/util/List;
   #748 = Utf8               GitHub API request [
   #749 = Utf8               anonymous
   #750 = Utf8               ]:
   #751 = NameAndType        #959:#364    // getMergedRateLimit:(Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
   #752 = NameAndType        #960:#961    // parseBody:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Ljava/lang/Class;)Ljava/lang/Object;
   #753 = NameAndType        #962:#963    // getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
   #754 = Utf8               com/fasterxml/jackson/databind/ObjectMapper
   #755 = Utf8               yyyy/MM/dd HH:mm:ss Z
   #756 = NameAndType        #964:#965    // ofPattern:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
   #757 = Class              #966         // com/fasterxml/jackson/databind/introspect/VisibilityChecker
   #758 = Utf8               com/fasterxml/jackson/databind/introspect/VisibilityChecker$Std
   #759 = Class              #968         // com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility
   #760 = NameAndType        #824:#970    // NONE:Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
   #761 = NameAndType        #971:#970    // ANY:Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
   #762 = NameAndType        #310:#972    // "<init>":(Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;)V
   #763 = NameAndType        #973:#974    // setVisibility:(Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker;)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #764 = Class              #975         // com/fasterxml/jackson/databind/DeserializationFeature
   #765 = NameAndType        #976:#977    // FAIL_ON_UNKNOWN_PROPERTIES:Lcom/fasterxml/jackson/databind/DeserializationFeature;
   #766 = NameAndType        #978:#979    // configure:(Lcom/fasterxml/jackson/databind/DeserializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #767 = Class              #980         // com/fasterxml/jackson/databind/MapperFeature
   #768 = NameAndType        #981:#982    // ACCEPT_CASE_INSENSITIVE_ENUMS:Lcom/fasterxml/jackson/databind/MapperFeature;
   #769 = NameAndType        #978:#983    // configure:(Lcom/fasterxml/jackson/databind/MapperFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #770 = Class              #984         // com/fasterxml/jackson/databind/PropertyNamingStrategy
   #771 = NameAndType        #985:#986    // SNAKE_CASE:Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;
   #772 = NameAndType        #987:#988    // setPropertyNamingStrategy:(Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #773 = Utf8               java/lang/Object
   #774 = Utf8               org/kohsuke/github/GitHubClient$BodyHandler
   #775 = Utf8               https://api.github.com
   #776 = Utf8               org/kohsuke/github/connector/GitHubConnector
   #777 = Utf8               org/kohsuke/github/GitHubRateLimitHandler
   #778 = Utf8               org/kohsuke/github/GitHubAbuseLimitHandler
   #779 = Utf8               org/kohsuke/github/GitHubRateLimitChecker
   #780 = Utf8               org/kohsuke/github/authorization/AuthorizationProvider
   #781 = Utf8               java/lang/Throwable
   #782 = Utf8               org/kohsuke/github/GitHubRequest$Builder
   #783 = Utf8               org/kohsuke/github/connector/GitHubConnectorRequest
   #784 = Utf8               java/util/Map
   #785 = Utf8               java/util/Iterator
   #786 = Utf8               java/util/List
   #787 = Utf8               DEFAULT
   #788 = Utf8               (Ljava/lang/Object;)V
   #789 = Utf8               endsWith
   #790 = Utf8               (Ljava/lang/String;)Z
   #791 = Utf8               length
   #792 = Utf8               ()I
   #793 = Utf8               substring
   #794 = Utf8               (II)Ljava/lang/String;
   #795 = Utf8               newBuilder
   #796 = Utf8               ()Lorg/kohsuke/github/GitHubRequest$Builder;
   #797 = Utf8               withApiUrl
   #798 = Utf8               (Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #799 = Utf8               withUrlPath
   #800 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #801 = Utf8               build
   #802 = Utf8               ()Lorg/kohsuke/github/GitHubRequest;
   #803 = Methodref          #989.#990    // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #804 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #805 = Methodref          #82.#991     // org/kohsuke/github/GitHubClient.lambda$fetch$0:(Ljava/lang/Class;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/Object;
   #806 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/Object;
   #807 = Utf8               apply
   #808 = Utf8               (Ljava/lang/Class;)Lorg/kohsuke/github/GitHubClient$BodyHandler;
   #809 = Utf8               ()Ljava/lang/Object;
   #810 = Utf8               java/util/logging/Level
   #811 = Utf8               FINE
   #812 = Utf8               Ljava/util/logging/Level;
   #813 = Utf8               append
   #814 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #815 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #816 = Utf8               toString
   #817 = Utf8               java/util/logging/Logger
   #818 = Utf8               log
   #819 = Utf8               (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
   #820 = Utf8               OFFLINE
   #821 = Utf8               (Ljava/lang/String;)V
   #822 = Utf8               warning
   #823 = Utf8               org/kohsuke/github/RateLimitTarget
   #824 = Utf8               NONE
   #825 = Utf8               (Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #826 = Methodref          #82.#992     // org/kohsuke/github/GitHubClient.lambda$getRateLimit$1:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lorg/kohsuke/github/JsonRateLimit;
   #827 = Utf8               ()Lorg/kohsuke/github/GitHubClient$BodyHandler;
   #828 = Utf8               resources
   #829 = Utf8               (Ljava/util/logging/Level;Ljava/lang/String;)V
   #830 = Utf8               org/kohsuke/github/GHRateLimit$UnknownLimitRecord
   #831 = Utf8               UnknownLimitRecord
   #832 = Utf8               ()Lorg/kohsuke/github/GHRateLimit$Record;
   #833 = Utf8               fromRecord
   #834 = Utf8               (Lorg/kohsuke/github/GHRateLimit$Record;Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
   #835 = Utf8               get
   #836 = Utf8               getRecord
   #837 = Utf8               (Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit$Record;
   #838 = Utf8               isExpired
   #839 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #840 = Methodref          #82.#993     // org/kohsuke/github/GitHubClient.lambda$updateRateLimit$2:(Lorg/kohsuke/github/GHRateLimit;Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
   #841 = Utf8               ()Ljava/util/function/BinaryOperator;
   #842 = Utf8               accumulateAndGet
   #843 = Utf8               (Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
   #844 = Utf8               FINEST
   #845 = Utf8               (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
   #846 = Utf8               check
   #847 = Utf8               initCause
   #848 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;
   #849 = Utf8               ()Lorg/kohsuke/github/RateLimitTarget;
   #850 = Utf8               checkRateLimit
   #851 = Utf8               (Lorg/kohsuke/github/GitHubClient;Lorg/kohsuke/github/RateLimitTarget;)V
   #852 = Utf8               send
   #853 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Lorg/kohsuke/github/connector/GitHubConnectorResponse;
   #854 = Utf8               org/apache/commons/io/IOUtils
   #855 = Utf8               closeQuietly
   #856 = Utf8               (Ljava/io/Closeable;)V
   #857 = Utf8               ()Ljava/net/URL;
   #858 = Utf8               isError
   #859 = Utf8               onError
   #860 = Utf8               org/kohsuke/github/GitHubConnectorResponseErrorHandler
   #861 = Utf8               STATUS_HTTP_BAD_REQUEST_OR_GREATER
   #862 = Utf8               Lorg/kohsuke/github/GitHubConnectorResponseErrorHandler;
   #863 = Utf8               ()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
   #864 = Utf8               (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
   #865 = Utf8               toBuilder
   #866 = Utf8               allHeaders
   #867 = Utf8               ()Ljava/util/Map;
   #868 = Utf8               containsKey
   #869 = Utf8               (Ljava/lang/Object;)Z
   #870 = Utf8               setHeader
   #871 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #872 = Utf8               header
   #873 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #874 = Utf8               hasBody
   #875 = Utf8               ()Ljava/io/InputStream;
   #876 = Utf8               contentType
   #877 = Utf8               org/apache/commons/lang3/StringUtils
   #878 = Utf8               defaultString
   #879 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #880 = Utf8               args
   #881 = Utf8               ()Ljava/util/List;
   #882 = Utf8               iterator
   #883 = Utf8               ()Ljava/util/Iterator;
   #884 = Utf8               hasNext
   #885 = Utf8               next
   #886 = Utf8               key
   #887 = Utf8               value
   #888 = Utf8               put
   #889 = Utf8               com/fasterxml/jackson/databind/ObjectWriter
   #890 = Utf8               writeValueAsBytes
   #891 = Utf8               (Ljava/lang/Object;)[B
   #892 = Utf8               ([B)V
   #893 = Utf8               with
   #894 = Utf8               (Ljava/io/InputStream;)Lorg/kohsuke/github/GitHubRequest$Builder;
   #895 = Methodref          #82.#994     // org/kohsuke/github/GitHubClient.lambda$logRequest$3:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/lang/String;
   #896 = Utf8               (Lorg/kohsuke/github/GitHubClient;Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/util/function/Supplier;
   #897 = Utf8               (Ljava/util/logging/Level;Ljava/util/function/Supplier;)V
   #898 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;Ljava/lang/Object;)V
   #899 = Utf8               getBodyAsStringOrNull
   #900 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/String;
   #901 = Utf8               getMessage
   #902 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V
   #903 = Utf8               withResponseHeaderFields
   #904 = Utf8               (Ljava/util/Map;)Lorg/kohsuke/github/GHFileNotFoundException;
   #905 = Utf8               (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
   #906 = Utf8               (Ljava/util/Map;)Lorg/kohsuke/github/GHIOException;
   #907 = Utf8               (ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
   #908 = Utf8               INFO
   #909 = Utf8               (I)Ljava/lang/StringBuilder;
   #910 = Utf8               java/lang/Thread
   #911 = Utf8               sleep
   #912 = Utf8               (J)V
   #913 = Utf8               method
   #914 = Utf8               java/util/Objects
   #915 = Utf8               equals
   #916 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #917 = Utf8               parseInt
   #918 = Utf8               (Ljava/lang/String;)I
   #919 = Utf8               (IIJLorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #920 = Utf8               java/util/Date
   #921 = Utf8               from
   #922 = Utf8               (Ljava/time/Instant;)Ljava/util/Date;
   #923 = Utf8               charAt
   #924 = Utf8               (I)C
   #925 = Utf8               java/time/format/DateTimeFormatter
   #926 = Utf8               parse
   #927 = Utf8               (Ljava/lang/CharSequence;)Ljava/time/temporal/TemporalAccessor;
   #928 = Utf8               java/time/Instant
   #929 = Utf8               (Ljava/time/temporal/TemporalAccessor;)Ljava/time/Instant;
   #930 = Utf8               ISO_OFFSET_DATE_TIME
   #931 = Utf8               ISO_INSTANT
   #932 = Utf8               getTime
   #933 = Utf8               ()J
   #934 = Utf8               ofEpochMilli
   #935 = Utf8               (J)Ljava/time/Instant;
   #936 = Utf8               java/time/temporal/ChronoUnit
   #937 = Utf8               SECONDS
   #938 = Utf8               Ljava/time/temporal/ChronoUnit;
   #939 = Utf8               truncatedTo
   #940 = Utf8               (Ljava/time/temporal/TemporalUnit;)Ljava/time/Instant;
   #941 = Utf8               format
   #942 = Utf8               (Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
   #943 = Utf8               writer
   #944 = Utf8               com/fasterxml/jackson/databind/ObjectReader
   #945 = Utf8               getInjectableValues
   #946 = Utf8               ()Lcom/fasterxml/jackson/databind/InjectableValues;
   #947 = Utf8               com/fasterxml/jackson/databind/InjectableValues
   #948 = Utf8               addValue
   #949 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/InjectableValues$Std;
   #950 = Utf8               java/lang/Class
   #951 = Utf8               getName
   #952 = Utf8               injectedMappingValues
   #953 = Utf8               putAll
   #954 = Utf8               (Ljava/util/Map;)V
   #955 = Utf8               (Lcom/fasterxml/jackson/databind/InjectableValues;)Lcom/fasterxml/jackson/databind/ObjectReader;
   #956 = Utf8               java/util/Collections
   #957 = Utf8               unmodifiableMap
   #958 = Utf8               unmodifiableList
   #959 = Utf8               getMergedRateLimit
   #960 = Utf8               parseBody
   #961 = Utf8               (Lorg/kohsuke/github/connector/GitHubConnectorResponse;Ljava/lang/Class;)Ljava/lang/Object;
   #962 = Utf8               getLogger
   #963 = Utf8               (Ljava/lang/String;)Ljava/util/logging/Logger;
   #964 = Utf8               ofPattern
   #965 = Utf8               (Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
   #966 = Utf8               com/fasterxml/jackson/databind/introspect/VisibilityChecker
   #967 = Class              #995         // com/fasterxml/jackson/annotation/JsonAutoDetect
   #968 = Utf8               com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility
   #969 = Utf8               Visibility
   #970 = Utf8               Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
   #971 = Utf8               ANY
   #972 = Utf8               (Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;)V
   #973 = Utf8               setVisibility
   #974 = Utf8               (Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker;)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #975 = Utf8               com/fasterxml/jackson/databind/DeserializationFeature
   #976 = Utf8               FAIL_ON_UNKNOWN_PROPERTIES
   #977 = Utf8               Lcom/fasterxml/jackson/databind/DeserializationFeature;
   #978 = Utf8               configure
   #979 = Utf8               (Lcom/fasterxml/jackson/databind/DeserializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #980 = Utf8               com/fasterxml/jackson/databind/MapperFeature
   #981 = Utf8               ACCEPT_CASE_INSENSITIVE_ENUMS
   #982 = Utf8               Lcom/fasterxml/jackson/databind/MapperFeature;
   #983 = Utf8               (Lcom/fasterxml/jackson/databind/MapperFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #984 = Utf8               com/fasterxml/jackson/databind/PropertyNamingStrategy
   #985 = Utf8               SNAKE_CASE
   #986 = Utf8               Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;
   #987 = Utf8               setPropertyNamingStrategy
   #988 = Utf8               (Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;)Lcom/fasterxml/jackson/databind/ObjectMapper;
   #989 = Class              #996         // java/lang/invoke/LambdaMetafactory
   #990 = NameAndType        #997:#1000   // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #991 = NameAndType        #487:#488    // lambda$fetch$0:(Ljava/lang/Class;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/Object;
   #992 = NameAndType        #485:#486    // lambda$getRateLimit$1:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lorg/kohsuke/github/JsonRateLimit;
   #993 = NameAndType        #481:#482    // lambda$updateRateLimit$2:(Lorg/kohsuke/github/GHRateLimit;Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
   #994 = NameAndType        #479:#480    // lambda$logRequest$3:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/lang/String;
   #995 = Utf8               com/fasterxml/jackson/annotation/JsonAutoDetect
   #996 = Utf8               java/lang/invoke/LambdaMetafactory
   #997 = Utf8               metafactory
   #998 = Class              #1002        // java/lang/invoke/MethodHandles$Lookup
   #999 = Utf8               Lookup
  #1000 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #1001 = Class              #1003        // java/lang/invoke/MethodHandles
  #1002 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #1003 = Utf8               java/lang/invoke/MethodHandles
{
  static final int CONNECTION_ERROR_RETRIES;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 2

  static final int retryTimeoutMillis;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 100

  private final java.lang.String apiUrl;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.kohsuke.github.GitHubRateLimitHandler rateLimitHandler;
    descriptor: Lorg/kohsuke/github/GitHubRateLimitHandler;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.kohsuke.github.GitHubAbuseLimitHandler abuseLimitHandler;
    descriptor: Lorg/kohsuke/github/GitHubAbuseLimitHandler;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.kohsuke.github.GitHubRateLimitChecker rateLimitChecker;
    descriptor: Lorg/kohsuke/github/GitHubRateLimitChecker;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.kohsuke.github.authorization.AuthorizationProvider authorizationProvider;
    descriptor: Lorg/kohsuke/github/authorization/AuthorizationProvider;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private org.kohsuke.github.connector.GitHubConnector connector;
    descriptor: Lorg/kohsuke/github/connector/GitHubConnector;
    flags: (0x0002) ACC_PRIVATE

  private final java.util.concurrent.atomic.AtomicReference<org.kohsuke.github.GHRateLimit> rateLimit;
    descriptor: Ljava/util/concurrent/atomic/AtomicReference;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #299                         // Ljava/util/concurrent/atomic/AtomicReference<Lorg/kohsuke/github/GHRateLimit;>;
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull

  private static final java.util.logging.Logger LOGGER;
    descriptor: Ljava/util/logging/Logger;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final com.fasterxml.jackson.databind.ObjectMapper MAPPER;
    descriptor: Lcom/fasterxml/jackson/databind/ObjectMapper;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  static final java.lang.String GITHUB_URL;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String https://api.github.com

  private static final java.time.format.DateTimeFormatter DATE_TIME_PARSER_SLASHES;
    descriptor: Ljava/time/format/DateTimeFormatter;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  org.kohsuke.github.GitHubClient(java.lang.String, org.kohsuke.github.connector.GitHubConnector, org.kohsuke.github.GitHubRateLimitHandler, org.kohsuke.github.GitHubAbuseLimitHandler, org.kohsuke.github.GitHubRateLimitChecker, org.kohsuke.github.authorization.AuthorizationProvider) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Lorg/kohsuke/github/connector/GitHubConnector;Lorg/kohsuke/github/GitHubRateLimitHandler;Lorg/kohsuke/github/GitHubAbuseLimitHandler;Lorg/kohsuke/github/GitHubRateLimitChecker;Lorg/kohsuke/github/authorization/AuthorizationProvider;)V
    flags: (0x0000)
    Code:
      stack=4, locals=7, args_size=7
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #3                  // class java/util/concurrent/atomic/AtomicReference
         8: dup
         9: getstatic     #4                  // Field org/kohsuke/github/GHRateLimit.DEFAULT:Lorg/kohsuke/github/GHRateLimit;
        12: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
        15: putfield      #6                  // Field rateLimit:Ljava/util/concurrent/atomic/AtomicReference;
        18: aload_1
        19: ldc           #7                  // String /
        21: invokevirtual #8                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        24: ifeq          39
        27: aload_1
        28: iconst_0
        29: aload_1
        30: invokevirtual #9                  // Method java/lang/String.length:()I
        33: iconst_1
        34: isub
        35: invokevirtual #10                 // Method java/lang/String.substring:(II)Ljava/lang/String;
        38: astore_1
        39: aconst_null
        40: aload_2
        41: if_acmpne     48
        44: getstatic     #11                 // Field org/kohsuke/github/connector/GitHubConnector.DEFAULT:Lorg/kohsuke/github/connector/GitHubConnector;
        47: astore_2
        48: aload_0
        49: aload_1
        50: putfield      #12                 // Field apiUrl:Ljava/lang/String;
        53: aload_0
        54: aload_2
        55: putfield      #13                 // Field connector:Lorg/kohsuke/github/connector/GitHubConnector;
        58: aload_0
        59: aload         6
        61: putfield      #14                 // Field authorizationProvider:Lorg/kohsuke/github/authorization/AuthorizationProvider;
        64: aload_0
        65: aload_3
        66: putfield      #15                 // Field rateLimitHandler:Lorg/kohsuke/github/GitHubRateLimitHandler;
        69: aload_0
        70: aload         4
        72: putfield      #16                 // Field abuseLimitHandler:Lorg/kohsuke/github/GitHubAbuseLimitHandler;
        75: aload_0
        76: aload         5
        78: putfield      #17                 // Field rateLimitChecker:Lorg/kohsuke/github/GitHubRateLimitChecker;
        81: return
      LineNumberTable:
        line 85: 0
        line 62: 4
        line 87: 18
        line 88: 27
        line 91: 39
        line 92: 44
        line 94: 48
        line 95: 53
        line 98: 58
        line 100: 64
        line 101: 69
        line 102: 75
        line 103: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      82     0  this   Lorg/kohsuke/github/GitHubClient;
            0      82     1 apiUrl   Ljava/lang/String;
            0      82     2 connector   Lorg/kohsuke/github/connector/GitHubConnector;
            0      82     3 rateLimitHandler   Lorg/kohsuke/github/GitHubRateLimitHandler;
            0      82     4 abuseLimitHandler   Lorg/kohsuke/github/GitHubAbuseLimitHandler;
            0      82     5 rateLimitChecker   Lorg/kohsuke/github/GitHubRateLimitChecker;
            0      82     6 authorizationProvider   Lorg/kohsuke/github/authorization/AuthorizationProvider;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class org/kohsuke/github/GitHubClient, class java/lang/String, class org/kohsuke/github/connector/GitHubConnector, class org/kohsuke/github/GitHubRateLimitHandler, class org/kohsuke/github/GitHubAbuseLimitHandler, class org/kohsuke/github/GitHubRateLimitChecker, class org/kohsuke/github/authorization/AuthorizationProvider ]
          stack = []
        frame_type = 8 /* same */
    Exceptions:
      throws java.io.IOException

  java.lang.String getLogin();
    descriptor: ()Ljava/lang/String;
    flags: (0x0000)
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: getfield      #14                 // Field authorizationProvider:Lorg/kohsuke/github/authorization/AuthorizationProvider;
         4: instanceof    #18                 // class org/kohsuke/github/authorization/UserAuthorizationProvider
         7: ifeq          37
        10: aload_0
        11: getfield      #14                 // Field authorizationProvider:Lorg/kohsuke/github/authorization/AuthorizationProvider;
        14: invokeinterface #19,  1           // InterfaceMethod org/kohsuke/github/authorization/AuthorizationProvider.getEncodedAuthorization:()Ljava/lang/String;
        19: ifnull        37
        22: aload_0
        23: getfield      #14                 // Field authorizationProvider:Lorg/kohsuke/github/authorization/AuthorizationProvider;
        26: checkcast     #18                 // class org/kohsuke/github/authorization/UserAuthorizationProvider
        29: astore_1
        30: aload_1
        31: invokeinterface #20,  1           // InterfaceMethod org/kohsuke/github/authorization/UserAuthorizationProvider.getLogin:()Ljava/lang/String;
        36: areturn
        37: goto          41
        40: astore_1
        41: aconst_null
        42: areturn
      Exception table:
         from    to  target type
             0    36    40   Class java/io/IOException
      LineNumberTable:
        line 107: 0
        line 108: 14
        line 110: 22
        line 112: 30
        line 115: 37
        line 114: 40
        line 116: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30       7     1 userAuthorizationProvider   Lorg/kohsuke/github/authorization/UserAuthorizationProvider;
            0      43     0  this   Lorg/kohsuke/github/GitHubClient;
      StackMapTable: number_of_entries = 3
        frame_type = 37 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 0 /* same */

  private <T extends java.lang.Object> T fetch(java.lang.Class<T>, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=4, args_size=3
         0: invokestatic  #22                 // Method org/kohsuke/github/GitHubRequest.newBuilder:()Lorg/kohsuke/github/GitHubRequest$Builder;
         3: aload_0
         4: invokevirtual #23                 // Method getApiUrl:()Ljava/lang/String;
         7: invokevirtual #24                 // Method org/kohsuke/github/GitHubRequest$Builder.withApiUrl:(Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
        10: aload_2
        11: iconst_0
        12: anewarray     #25                 // class java/lang/String
        15: invokevirtual #26                 // Method org/kohsuke/github/GitHubRequest$Builder.withUrlPath:(Ljava/lang/String;[Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
        18: invokevirtual #27                 // Method org/kohsuke/github/GitHubRequest$Builder.build:()Lorg/kohsuke/github/GitHubRequest;
        21: astore_3
        22: aload_0
        23: aload_3
        24: aload_1
        25: invokedynamic #28,  0             // InvokeDynamic #0:apply:(Ljava/lang/Class;)Lorg/kohsuke/github/GitHubClient$BodyHandler;
        30: invokevirtual #29                 // Method sendRequest:(Lorg/kohsuke/github/GitHubRequest;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
        33: invokevirtual #30                 // Method org/kohsuke/github/GitHubResponse.body:()Ljava/lang/Object;
        36: areturn
      LineNumberTable:
        line 120: 0
        line 121: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lorg/kohsuke/github/GitHubClient;
            0      37     1  type   Ljava/lang/Class;
            0      37     2 urlPath   Ljava/lang/String;
           22      15     3 request   Lorg/kohsuke/github/GitHubRequest;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      37     1  type   Ljava/lang/Class<TT;>;
    Exceptions:
      throws java.io.IOException
    Signature: #337                         // <T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;Ljava/lang/String;)TT;

  public boolean isCredentialValid();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #31                 // Method getRateLimit:()Lorg/kohsuke/github/GHRateLimit;
         4: pop
         5: iconst_1
         6: ireturn
         7: astore_1
         8: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
        11: getstatic     #33                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
        14: new           #34                 // class java/lang/StringBuilder
        17: dup
        18: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
        21: ldc           #36                 // String Exception validating credentials on
        23: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: aload_0
        27: invokevirtual #23                 // Method getApiUrl:()Ljava/lang/String;
        30: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        33: ldc           #38                 // String  with login \'
        35: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: aload_0
        39: invokevirtual #39                 // Method getLogin:()Ljava/lang/String;
        42: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: ldc           #40                 // String \'
        47: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: aload_1
        51: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        54: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        57: aload_1
        58: invokevirtual #43                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        61: iconst_0
        62: ireturn
      Exception table:
         from    to  target type
             0     6     7   Class java/io/IOException
      LineNumberTable:
        line 133: 0
        line 134: 5
        line 135: 7
        line 136: 8
        line 137: 27
        line 136: 58
        line 139: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      55     1     e   Ljava/io/IOException;
            0      63     0  this   Lorg/kohsuke/github/GitHubClient;
      StackMapTable: number_of_entries = 1
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]

  public boolean isOffline();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #13                 // Field connector:Lorg/kohsuke/github/connector/GitHubConnector;
         4: getstatic     #44                 // Field org/kohsuke/github/connector/GitHubConnector.OFFLINE:Lorg/kohsuke/github/connector/GitHubConnector;
         7: if_acmpne     14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: ireturn
      LineNumberTable:
        line 149: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/kohsuke/github/GitHubClient;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public org.kohsuke.github.HttpConnector getConnector();
    descriptor: ()Lorg/kohsuke/github/HttpConnector;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #13                 // Field connector:Lorg/kohsuke/github/connector/GitHubConnector;
         4: instanceof    #45                 // class org/kohsuke/github/HttpConnector
         7: ifne          20
        10: new           #46                 // class java/lang/UnsupportedOperationException
        13: dup
        14: ldc           #47                 // String This GitHubConnector does not support HttpConnector.connect().
        16: invokespecial #48                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
        23: ldc           #49                 // String HttpConnector and getConnector() are deprecated. Please file an issue describing your use case.
        25: invokevirtual #50                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
        28: aload_0
        29: getfield      #13                 // Field connector:Lorg/kohsuke/github/connector/GitHubConnector;
        32: checkcast     #45                 // class org/kohsuke/github/HttpConnector
        35: areturn
      LineNumberTable:
        line 159: 0
        line 160: 10
        line 163: 20
        line 165: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/kohsuke/github/GitHubClient;
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #346()
        java.lang.Deprecated

  public void setConnector(org.kohsuke.github.connector.GitHubConnector);
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnector;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
         3: ldc           #51                 // String Connector should not be changed. Please file an issue describing your use case.
         5: invokevirtual #50                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
         8: aload_0
         9: aload_1
        10: putfield      #13                 // Field connector:Lorg/kohsuke/github/connector/GitHubConnector;
        13: return
      LineNumberTable:
        line 177: 0
        line 178: 8
        line 179: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/kohsuke/github/GitHubClient;
            0      14     1 connector   Lorg/kohsuke/github/connector/GitHubConnector;
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #346()
        java.lang.Deprecated

  public boolean isAnonymous();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #39                 // Method getLogin:()Ljava/lang/String;
         4: ifnonnull     23
         7: aload_0
         8: getfield      #14                 // Field authorizationProvider:Lorg/kohsuke/github/authorization/AuthorizationProvider;
        11: invokeinterface #19,  1           // InterfaceMethod org/kohsuke/github/authorization/AuthorizationProvider.getEncodedAuthorization:()Ljava/lang/String;
        16: ifnonnull     23
        19: iconst_1
        20: goto          24
        23: iconst_0
        24: ireturn
        25: astore_1
        26: iconst_0
        27: ireturn
      Exception table:
         from    to  target type
             0    24    25   Class java/io/IOException
      LineNumberTable:
        line 188: 0
        line 189: 25
        line 192: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26       2     1     e   Ljava/io/IOException;
            0      28     0  this   Lorg/kohsuke/github/GitHubClient;
      StackMapTable: number_of_entries = 3
        frame_type = 23 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]

  public org.kohsuke.github.GHRateLimit getRateLimit() throws java.io.IOException;
    descriptor: ()Lorg/kohsuke/github/GHRateLimit;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #52                 // Field org/kohsuke/github/RateLimitTarget.NONE:Lorg/kohsuke/github/RateLimitTarget;
         4: invokevirtual #53                 // Method getRateLimit:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
         7: areturn
      LineNumberTable:
        line 212: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/kohsuke/github/GitHubClient;
    Exceptions:
      throws java.io.IOException
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull

  java.lang.String getEncodedAuthorization() throws java.io.IOException;
    descriptor: ()Ljava/lang/String;
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #14                 // Field authorizationProvider:Lorg/kohsuke/github/authorization/AuthorizationProvider;
         4: invokeinterface #19,  1           // InterfaceMethod org/kohsuke/github/authorization/AuthorizationProvider.getEncodedAuthorization:()Ljava/lang/String;
         9: areturn
      LineNumberTable:
        line 217: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/kohsuke/github/GitHubClient;
    Exceptions:
      throws java.io.IOException
    RuntimeVisibleAnnotations:
      0: #353()
        javax.annotation.CheckForNull

  org.kohsuke.github.GHRateLimit getRateLimit(org.kohsuke.github.RateLimitTarget) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
    flags: (0x0000)
    Code:
      stack=3, locals=4, args_size=2
         0: invokestatic  #22                 // Method org/kohsuke/github/GitHubRequest.newBuilder:()Lorg/kohsuke/github/GitHubRequest$Builder;
         3: getstatic     #52                 // Field org/kohsuke/github/RateLimitTarget.NONE:Lorg/kohsuke/github/RateLimitTarget;
         6: invokevirtual #54                 // Method org/kohsuke/github/GitHubRequest$Builder.rateLimit:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GitHubRequest$Builder;
         9: aload_0
        10: invokevirtual #23                 // Method getApiUrl:()Ljava/lang/String;
        13: invokevirtual #24                 // Method org/kohsuke/github/GitHubRequest$Builder.withApiUrl:(Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
        16: ldc           #55                 // String /rate_limit
        18: iconst_0
        19: anewarray     #25                 // class java/lang/String
        22: invokevirtual #26                 // Method org/kohsuke/github/GitHubRequest$Builder.withUrlPath:(Ljava/lang/String;[Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
        25: invokevirtual #27                 // Method org/kohsuke/github/GitHubRequest$Builder.build:()Lorg/kohsuke/github/GitHubRequest;
        28: astore_3
        29: aload_0
        30: aload_3
        31: invokedynamic #56,  0             // InvokeDynamic #1:apply:()Lorg/kohsuke/github/GitHubClient$BodyHandler;
        36: invokevirtual #29                 // Method sendRequest:(Lorg/kohsuke/github/GitHubRequest;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
        39: invokevirtual #30                 // Method org/kohsuke/github/GitHubResponse.body:()Ljava/lang/Object;
        42: checkcast     #57                 // class org/kohsuke/github/JsonRateLimit
        45: getfield      #58                 // Field org/kohsuke/github/JsonRateLimit.resources:Lorg/kohsuke/github/GHRateLimit;
        48: astore_2
        49: goto          72
        52: astore_3
        53: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
        56: getstatic     #33                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
        59: ldc           #60                 // String /rate_limit returned 404 Not Found.
        61: invokevirtual #61                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
        64: invokestatic  #62                 // Method org/kohsuke/github/GHRateLimit$UnknownLimitRecord.current:()Lorg/kohsuke/github/GHRateLimit$Record;
        67: aload_1
        68: invokestatic  #63                 // Method org/kohsuke/github/GHRateLimit.fromRecord:(Lorg/kohsuke/github/GHRateLimit$Record;Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
        71: astore_2
        72: aload_0
        73: aload_2
        74: invokespecial #64                 // Method updateRateLimit:(Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
        77: areturn
      Exception table:
         from    to  target type
             0    49    52   Class java/io/FileNotFoundException
      LineNumberTable:
        line 224: 0
        line 225: 6
        line 226: 10
        line 227: 22
        line 228: 25
        line 229: 29
        line 230: 36
        line 232: 39
        line 241: 49
        line 233: 52
        line 235: 53
        line 240: 64
        line 242: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      20     3 request   Lorg/kohsuke/github/GitHubRequest;
           49       3     2 result   Lorg/kohsuke/github/GHRateLimit;
           53      19     3     e   Ljava/io/FileNotFoundException;
            0      78     0  this   Lorg/kohsuke/github/GitHubClient;
            0      78     1 rateLimitTarget   Lorg/kohsuke/github/RateLimitTarget;
           72       6     2 result   Lorg/kohsuke/github/GHRateLimit;
      StackMapTable: number_of_entries = 2
        frame_type = 116 /* same_locals_1_stack_item */
          stack = [ class java/io/FileNotFoundException ]
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class org/kohsuke/github/GHRateLimit ]
    Exceptions:
      throws java.io.IOException
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull

  org.kohsuke.github.GHRateLimit lastRateLimit();
    descriptor: ()Lorg/kohsuke/github/GHRateLimit;
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field rateLimit:Ljava/util/concurrent/atomic/AtomicReference;
         4: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         7: checkcast     #66                 // class org/kohsuke/github/GHRateLimit
        10: areturn
      LineNumberTable:
        line 258: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/kohsuke/github/GitHubClient;
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull
      1: #346()
        java.lang.Deprecated

  org.kohsuke.github.GHRateLimit rateLimit(org.kohsuke.github.RateLimitTarget) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
    flags: (0x0000)
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: getfield      #6                  // Field rateLimit:Ljava/util/concurrent/atomic/AtomicReference;
         4: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         7: checkcast     #66                 // class org/kohsuke/github/GHRateLimit
        10: astore_2
        11: aload_2
        12: aload_1
        13: invokevirtual #67                 // Method org/kohsuke/github/GHRateLimit.getRecord:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit$Record;
        16: invokevirtual #68                 // Method org/kohsuke/github/GHRateLimit$Record.isExpired:()Z
        19: ifeq          75
        22: aload_0
        23: dup
        24: astore_3
        25: monitorenter
        26: aload_0
        27: getfield      #6                  // Field rateLimit:Ljava/util/concurrent/atomic/AtomicReference;
        30: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
        33: checkcast     #66                 // class org/kohsuke/github/GHRateLimit
        36: aload_1
        37: invokevirtual #67                 // Method org/kohsuke/github/GHRateLimit.getRecord:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit$Record;
        40: invokevirtual #68                 // Method org/kohsuke/github/GHRateLimit$Record.isExpired:()Z
        43: ifeq          52
        46: aload_0
        47: aload_1
        48: invokevirtual #53                 // Method getRateLimit:(Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
        51: pop
        52: aload_3
        53: monitorexit
        54: goto          64
        57: astore        4
        59: aload_3
        60: monitorexit
        61: aload         4
        63: athrow
        64: aload_0
        65: getfield      #6                  // Field rateLimit:Ljava/util/concurrent/atomic/AtomicReference;
        68: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
        71: checkcast     #66                 // class org/kohsuke/github/GHRateLimit
        74: astore_2
        75: aload_2
        76: areturn
      Exception table:
         from    to  target type
            26    54    57   any
            57    61    57   any
      LineNumberTable:
        line 278: 0
        line 280: 11
        line 283: 22
        line 284: 26
        line 285: 46
        line 287: 52
        line 288: 64
        line 290: 75
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lorg/kohsuke/github/GitHubClient;
            0      77     1 rateLimitTarget   Lorg/kohsuke/github/RateLimitTarget;
           11      66     2 result   Lorg/kohsuke/github/GHRateLimit;
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 52
          locals = [ class org/kohsuke/github/GHRateLimit, class java/lang/Object ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 10 /* same */
    Exceptions:
      throws java.io.IOException
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull

  private org.kohsuke.github.GHRateLimit updateRateLimit(org.kohsuke.github.GHRateLimit);
    descriptor: (Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: getfield      #6                  // Field rateLimit:Ljava/util/concurrent/atomic/AtomicReference;
         4: aload_1
         5: invokedynamic #69,  0             // InvokeDynamic #2:apply:()Ljava/util/function/BinaryOperator;
        10: invokevirtual #70                 // Method java/util/concurrent/atomic/AtomicReference.accumulateAndGet:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
        13: checkcast     #66                 // class org/kohsuke/github/GHRateLimit
        16: astore_2
        17: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
        20: getstatic     #71                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
        23: ldc           #72                 // String Rate limit now: {0}
        25: aload_0
        26: getfield      #6                  // Field rateLimit:Ljava/util/concurrent/atomic/AtomicReference;
        29: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
        32: invokevirtual #73                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
        35: aload_2
        36: areturn
      LineNumberTable:
        line 303: 0
        line 304: 17
        line 305: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lorg/kohsuke/github/GitHubClient;
            0      37     1 observed   Lorg/kohsuke/github/GHRateLimit;
           17      20     2 result   Lorg/kohsuke/github/GHRateLimit;
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull

  public void checkApiUrlValidity() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: ldc           #74                 // class org/kohsuke/github/GitHubClient$GHApiInfo
         3: ldc           #7                  // String /
         5: invokespecial #75                 // Method fetch:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
         8: checkcast     #74                 // class org/kohsuke/github/GitHubClient$GHApiInfo
        11: aload_0
        12: invokevirtual #23                 // Method getApiUrl:()Ljava/lang/String;
        15: invokevirtual #76                 // Method org/kohsuke/github/GitHubClient$GHApiInfo.check:(Ljava/lang/String;)V
        18: goto          73
        21: astore_1
        22: aload_0
        23: invokespecial #77                 // Method isPrivateModeEnabled:()Z
        26: ifeq          71
        29: new           #21                 // class java/io/IOException
        32: dup
        33: new           #34                 // class java/lang/StringBuilder
        36: dup
        37: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
        40: ldc           #78                 // String GitHub Enterprise server (
        42: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: aload_0
        46: invokevirtual #23                 // Method getApiUrl:()Ljava/lang/String;
        49: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        52: ldc           #79                 // String ) with private mode enabled
        54: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        60: invokespecial #80                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        63: aload_1
        64: invokevirtual #81                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
        67: checkcast     #21                 // class java/io/IOException
        70: athrow
        71: aload_1
        72: athrow
        73: return
      Exception table:
         from    to  target type
             0    18    21   Class java/io/IOException
      LineNumberTable:
        line 323: 0
        line 330: 18
        line 324: 21
        line 325: 22
        line 326: 29
        line 327: 46
        line 329: 71
        line 331: 73
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      51     1     e   Ljava/io/IOException;
            0      74     0  this   Lorg/kohsuke/github/GitHubClient;
      StackMapTable: number_of_entries = 3
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 252 /* append */
          offset_delta = 49
          locals = [ class java/io/IOException ]
        frame_type = 250 /* chop */
          offset_delta = 1
    Exceptions:
      throws java.io.IOException

  public java.lang.String getApiUrl();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #12                 // Field apiUrl:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 334: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GitHubClient;

  public <T extends java.lang.Object> org.kohsuke.github.GitHubResponse<T> sendRequest(org.kohsuke.github.GitHubRequest$Builder<?>, org.kohsuke.github.GitHubClient$BodyHandler<T>) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/GitHubRequest$Builder;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #27                 // Method org/kohsuke/github/GitHubRequest$Builder.build:()Lorg/kohsuke/github/GitHubRequest;
         5: aload_2
         6: invokevirtual #29                 // Method sendRequest:(Lorg/kohsuke/github/GitHubRequest;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
         9: areturn
      LineNumberTable:
        line 355: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/kohsuke/github/GitHubClient;
            0      10     1 builder   Lorg/kohsuke/github/GitHubRequest$Builder;
            0      10     2 handler   Lorg/kohsuke/github/GitHubClient$BodyHandler;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      10     1 builder   Lorg/kohsuke/github/GitHubRequest$Builder<*>;
            0      10     2 handler   Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;
    Exceptions:
      throws java.io.IOException
    Signature: #379                         // <T:Ljava/lang/Object;>(Lorg/kohsuke/github/GitHubRequest$Builder<*>;Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;)Lorg/kohsuke/github/GitHubResponse<TT;>;
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull
      parameter 1:
        0: #353()
          javax.annotation.CheckForNull

  public <T extends java.lang.Object> org.kohsuke.github.GitHubResponse<T> sendRequest(org.kohsuke.github.GitHubRequest, org.kohsuke.github.GitHubClient$BodyHandler<T>) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/GitHubRequest;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=8, args_size=3
         0: iconst_2
         1: istore_3
         2: aload_0
         3: aload_1
         4: invokespecial #83                 // Method prepareConnectorRequest:(Lorg/kohsuke/github/GitHubRequest;)Lorg/kohsuke/github/connector/GitHubConnectorRequest;
         7: astore        4
         9: aconst_null
        10: astore        5
        12: aload_0
        13: aload         4
        15: invokespecial #84                 // Method logRequest:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)V
        18: aload_0
        19: getfield      #17                 // Field rateLimitChecker:Lorg/kohsuke/github/GitHubRateLimitChecker;
        22: aload_0
        23: aload_1
        24: invokevirtual #85                 // Method org/kohsuke/github/GitHubRequest.rateLimitTarget:()Lorg/kohsuke/github/RateLimitTarget;
        27: invokevirtual #86                 // Method org/kohsuke/github/GitHubRateLimitChecker.checkRateLimit:(Lorg/kohsuke/github/GitHubClient;Lorg/kohsuke/github/RateLimitTarget;)V
        30: aload_0
        31: getfield      #13                 // Field connector:Lorg/kohsuke/github/connector/GitHubConnector;
        34: aload         4
        36: invokeinterface #87,  2           // InterfaceMethod org/kohsuke/github/connector/GitHubConnector.send:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Lorg/kohsuke/github/connector/GitHubConnectorResponse;
        41: astore        5
        43: aload_0
        44: aload_1
        45: invokevirtual #85                 // Method org/kohsuke/github/GitHubRequest.rateLimitTarget:()Lorg/kohsuke/github/RateLimitTarget;
        48: aload         5
        50: invokespecial #88                 // Method noteRateLimit:(Lorg/kohsuke/github/RateLimitTarget;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
        53: aload_0
        54: aload         5
        56: aload_1
        57: aload_2
        58: ifnull        65
        61: iconst_1
        62: goto          66
        65: iconst_0
        66: invokespecial #89                 // Method detectKnownErrors:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;Z)V
        69: aload         5
        71: aload_2
        72: invokestatic  #90                 // Method createResponse:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
        75: astore        6
        77: aload         5
        79: invokestatic  #91                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
        82: aload         6
        84: areturn
        85: astore        6
        87: iload_3
        88: ifle          106
        91: aload         6
        93: getfield      #93                 // Field org/kohsuke/github/GitHubClient$RetryRequestException.connectorRequest:Lorg/kohsuke/github/connector/GitHubConnectorRequest;
        96: ifnull        106
        99: aload         6
       101: getfield      #93                 // Field org/kohsuke/github/GitHubClient$RetryRequestException.connectorRequest:Lorg/kohsuke/github/connector/GitHubConnectorRequest;
       104: astore        4
       106: aload         5
       108: invokestatic  #91                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
       111: goto          170
       114: astore        6
       116: iload_3
       117: ifle          138
       120: aload         6
       122: aload_1
       123: invokevirtual #97                 // Method org/kohsuke/github/GitHubRequest.url:()Ljava/net/URL;
       126: iload_3
       127: invokestatic  #98                 // Method logRetryConnectionError:(Ljava/io/IOException;Ljava/net/URL;I)V
       130: aload         5
       132: invokestatic  #91                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
       135: goto          170
       138: aload         6
       140: aload         4
       142: aload         5
       144: invokestatic  #99                 // Method interpretApiError:(Ljava/io/IOException;Lorg/kohsuke/github/connector/GitHubConnectorRequest;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/io/IOException;
       147: athrow
       148: astore        6
       150: aload         6
       152: aload         4
       154: aload         5
       156: invokestatic  #99                 // Method interpretApiError:(Ljava/io/IOException;Lorg/kohsuke/github/connector/GitHubConnectorRequest;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/io/IOException;
       159: athrow
       160: astore        7
       162: aload         5
       164: invokestatic  #91                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
       167: aload         7
       169: athrow
       170: iinc          3, -1
       173: iload_3
       174: ifge          9
       177: new           #100                // class org/kohsuke/github/GHIOException
       180: dup
       181: new           #34                 // class java/lang/StringBuilder
       184: dup
       185: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
       188: ldc           #101                // String Ran out of retries for URL:
       190: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       193: aload_1
       194: invokevirtual #97                 // Method org/kohsuke/github/GitHubRequest.url:()Ljava/net/URL;
       197: invokevirtual #102                // Method java/net/URL.toString:()Ljava/lang/String;
       200: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       203: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       206: invokespecial #103                // Method org/kohsuke/github/GHIOException."<init>":(Ljava/lang/String;)V
       209: athrow
      Exception table:
         from    to  target type
            12    77    85   Class org/kohsuke/github/GitHubClient$RetryRequestException
            12    77   114   Class java/net/SocketException
            12    77   114   Class java/net/SocketTimeoutException
            12    77   114   Class javax/net/ssl/SSLHandshakeException
            12    77   148   Class java/io/IOException
            12    77   160   any
            85   106   160   any
           114   130   160   any
           138   162   160   any
      LineNumberTable:
        line 376: 0
        line 377: 2
        line 380: 9
        line 382: 12
        line 383: 18
        line 384: 30
        line 385: 43
        line 386: 53
        line 387: 69
        line 403: 77
        line 387: 82
        line 388: 85
        line 390: 87
        line 391: 99
        line 403: 106
        line 404: 111
        line 393: 114
        line 395: 116
        line 396: 120
        line 403: 130
        line 397: 135
        line 399: 138
        line 400: 148
        line 401: 150
        line 403: 160
        line 404: 167
        line 405: 170
        line 407: 177
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           87      19     6     e   Lorg/kohsuke/github/GitHubClient$RetryRequestException;
          116      32     6     e   Ljava/io/IOException;
          150      10     6     e   Ljava/io/IOException;
           12     158     5 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            0     210     0  this   Lorg/kohsuke/github/GitHubClient;
            0     210     1 request   Lorg/kohsuke/github/GitHubRequest;
            0     210     2 handler   Lorg/kohsuke/github/GitHubClient$BodyHandler;
            2     208     3 retries   I
            9     201     4 connectorRequest   Lorg/kohsuke/github/connector/GitHubConnectorRequest;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0     210     2 handler   Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;
      StackMapTable: number_of_entries = 10
        frame_type = 253 /* append */
          offset_delta = 9
          locals = [ int, class org/kohsuke/github/connector/GitHubConnectorRequest ]
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class org/kohsuke/github/GitHubClient, class org/kohsuke/github/GitHubRequest, class org/kohsuke/github/GitHubClient$BodyHandler, int, class org/kohsuke/github/connector/GitHubConnectorRequest, class org/kohsuke/github/connector/GitHubConnectorResponse ]
          stack = [ class org/kohsuke/github/GitHubClient, class org/kohsuke/github/connector/GitHubConnectorResponse, class org/kohsuke/github/GitHubRequest ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/kohsuke/github/GitHubClient, class org/kohsuke/github/GitHubRequest, class org/kohsuke/github/GitHubClient$BodyHandler, int, class org/kohsuke/github/connector/GitHubConnectorRequest, class org/kohsuke/github/connector/GitHubConnectorResponse ]
          stack = [ class org/kohsuke/github/GitHubClient, class org/kohsuke/github/connector/GitHubConnectorResponse, class org/kohsuke/github/GitHubRequest, int ]
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class org/kohsuke/github/GitHubClient$RetryRequestException ]
        frame_type = 20 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class java/io/IOException ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/kohsuke/github/GitHubClient, class org/kohsuke/github/GitHubRequest, class org/kohsuke/github/GitHubClient$BodyHandler, int, class org/kohsuke/github/connector/GitHubConnectorRequest, class org/kohsuke/github/connector/GitHubConnectorResponse ]
          stack = [ class java/io/IOException ]
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 9
    Exceptions:
      throws java.io.IOException
    Signature: #388                         // <T:Ljava/lang/Object;>(Lorg/kohsuke/github/GitHubRequest;Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;)Lorg/kohsuke/github/GitHubResponse<TT;>;
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull
    RuntimeVisibleParameterAnnotations:
      parameter 0:
      parameter 1:
        0: #353()
          javax.annotation.CheckForNull

  private void detectKnownErrors(org.kohsuke.github.connector.GitHubConnectorResponse, org.kohsuke.github.GitHubRequest, boolean) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;Z)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=4, args_size=4
         0: aload_1
         1: invokestatic  #104                // Method detectOTPRequired:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
         4: aload_0
         5: aload_1
         6: aload_2
         7: invokespecial #105                // Method detectInvalidCached404Response:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;)V
        10: aload_0
        11: aload_1
        12: invokespecial #106                // Method detectRedirect:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
        15: aload_0
        16: getfield      #15                 // Field rateLimitHandler:Lorg/kohsuke/github/GitHubRateLimitHandler;
        19: aload_1
        20: invokevirtual #107                // Method org/kohsuke/github/GitHubRateLimitHandler.isError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
        23: ifeq          42
        26: aload_0
        27: getfield      #15                 // Field rateLimitHandler:Lorg/kohsuke/github/GitHubRateLimitHandler;
        30: aload_1
        31: invokevirtual #108                // Method org/kohsuke/github/GitHubRateLimitHandler.onError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
        34: new           #92                 // class org/kohsuke/github/GitHubClient$RetryRequestException
        37: dup
        38: invokespecial #109                // Method org/kohsuke/github/GitHubClient$RetryRequestException."<init>":()V
        41: athrow
        42: aload_0
        43: getfield      #16                 // Field abuseLimitHandler:Lorg/kohsuke/github/GitHubAbuseLimitHandler;
        46: aload_1
        47: invokevirtual #110                // Method org/kohsuke/github/GitHubAbuseLimitHandler.isError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
        50: ifeq          69
        53: aload_0
        54: getfield      #16                 // Field abuseLimitHandler:Lorg/kohsuke/github/GitHubAbuseLimitHandler;
        57: aload_1
        58: invokevirtual #111                // Method org/kohsuke/github/GitHubAbuseLimitHandler.onError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
        61: new           #92                 // class org/kohsuke/github/GitHubClient$RetryRequestException
        64: dup
        65: invokespecial #109                // Method org/kohsuke/github/GitHubClient$RetryRequestException."<init>":()V
        68: athrow
        69: iload_3
        70: ifeq          90
        73: getstatic     #112                // Field org/kohsuke/github/GitHubConnectorResponseErrorHandler.STATUS_HTTP_BAD_REQUEST_OR_GREATER:Lorg/kohsuke/github/GitHubConnectorResponseErrorHandler;
        76: aload_1
        77: invokevirtual #113                // Method org/kohsuke/github/GitHubConnectorResponseErrorHandler.isError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
        80: ifeq          90
        83: getstatic     #112                // Field org/kohsuke/github/GitHubConnectorResponseErrorHandler.STATUS_HTTP_BAD_REQUEST_OR_GREATER:Lorg/kohsuke/github/GitHubConnectorResponseErrorHandler;
        86: aload_1
        87: invokevirtual #114                // Method org/kohsuke/github/GitHubConnectorResponseErrorHandler.onError:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
        90: return
      LineNumberTable:
        line 413: 0
        line 414: 4
        line 415: 10
        line 416: 15
        line 417: 26
        line 418: 34
        line 419: 42
        line 420: 53
        line 421: 61
        line 422: 69
        line 423: 77
        line 424: 83
        line 426: 90
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      91     0  this   Lorg/kohsuke/github/GitHubClient;
            0      91     1 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            0      91     2 request   Lorg/kohsuke/github/GitHubRequest;
            0      91     3 detectStatusCodeError   Z
      StackMapTable: number_of_entries = 3
        frame_type = 42 /* same */
        frame_type = 26 /* same */
        frame_type = 20 /* same */
    Exceptions:
      throws java.io.IOException

  private void detectRedirect(org.kohsuke.github.connector.GitHubConnectorResponse) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #115                // Method org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
         4: sipush        301
         7: if_icmpeq     20
        10: aload_1
        11: invokevirtual #115                // Method org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
        14: sipush        302
        17: if_icmpne     48
        20: new           #116                // class org/kohsuke/github/HttpException
        23: dup
        24: ldc           #117                // String GitHubConnnector did not automatically follow redirect.\nChange your http client configuration to automatically follow redirects as appropriate.
        26: aload_1
        27: invokevirtual #115                // Method org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
        30: ldc           #118                // String Redirect
        32: aload_1
        33: invokevirtual #119                // Method org/kohsuke/github/connector/GitHubConnectorResponse.request:()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
        36: invokeinterface #120,  1          // InterfaceMethod org/kohsuke/github/connector/GitHubConnectorRequest.url:()Ljava/net/URL;
        41: invokevirtual #102                // Method java/net/URL.toString:()Ljava/lang/String;
        44: invokespecial #121                // Method org/kohsuke/github/HttpException."<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V
        47: athrow
        48: return
      LineNumberTable:
        line 429: 0
        line 432: 20
        line 435: 27
        line 437: 33
        line 439: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/kohsuke/github/GitHubClient;
            0      49     1 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 27 /* same */
    Exceptions:
      throws java.io.IOException

  private org.kohsuke.github.connector.GitHubConnectorRequest prepareConnectorRequest(org.kohsuke.github.GitHubRequest) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/GitHubRequest;)Lorg/kohsuke/github/connector/GitHubConnectorRequest;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=6, args_size=2
         0: aload_1
         1: invokevirtual #122                // Method org/kohsuke/github/GitHubRequest.toBuilder:()Lorg/kohsuke/github/GitHubRequest$Builder;
         4: astore_2
         5: aload_1
         6: invokevirtual #123                // Method org/kohsuke/github/GitHubRequest.allHeaders:()Ljava/util/Map;
         9: ldc           #124                // String Authorization
        11: invokeinterface #125,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
        16: ifne          36
        19: aload_0
        20: invokevirtual #126                // Method getEncodedAuthorization:()Ljava/lang/String;
        23: astore_3
        24: aload_3
        25: ifnull        36
        28: aload_2
        29: ldc           #124                // String Authorization
        31: aload_3
        32: invokevirtual #127                // Method org/kohsuke/github/GitHubRequest$Builder.setHeader:(Ljava/lang/String;Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
        35: pop
        36: aload_1
        37: ldc           #128                // String Accept
        39: invokevirtual #129                // Method org/kohsuke/github/GitHubRequest.header:(Ljava/lang/String;)Ljava/lang/String;
        42: ifnonnull     54
        45: aload_2
        46: ldc           #128                // String Accept
        48: ldc           #130                // String application/vnd.github.v3+json
        50: invokevirtual #127                // Method org/kohsuke/github/GitHubRequest$Builder.setHeader:(Ljava/lang/String;Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
        53: pop
        54: aload_2
        55: ldc           #131                // String Accept-Encoding
        57: ldc           #132                // String gzip
        59: invokevirtual #127                // Method org/kohsuke/github/GitHubRequest$Builder.setHeader:(Ljava/lang/String;Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
        62: pop
        63: aload_1
        64: invokevirtual #133                // Method org/kohsuke/github/GitHubRequest.hasBody:()Z
        67: ifeq          181
        70: aload_1
        71: invokevirtual #134                // Method org/kohsuke/github/GitHubRequest.body:()Ljava/io/InputStream;
        74: ifnull        94
        77: aload_2
        78: aload_1
        79: invokevirtual #135                // Method org/kohsuke/github/GitHubRequest.contentType:()Ljava/lang/String;
        82: ldc           #136                // String application/x-www-form-urlencoded
        84: invokestatic  #137                // Method org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        87: invokevirtual #138                // Method org/kohsuke/github/GitHubRequest$Builder.contentType:(Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
        90: pop
        91: goto          181
        94: aload_2
        95: ldc           #139                // String application/json
        97: invokevirtual #138                // Method org/kohsuke/github/GitHubRequest$Builder.contentType:(Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
       100: pop
       101: new           #140                // class java/util/HashMap
       104: dup
       105: invokespecial #141                // Method java/util/HashMap."<init>":()V
       108: astore_3
       109: aload_1
       110: invokevirtual #142                // Method org/kohsuke/github/GitHubRequest.args:()Ljava/util/List;
       113: invokeinterface #143,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       118: astore        4
       120: aload         4
       122: invokeinterface #144,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
       127: ifeq          162
       130: aload         4
       132: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       137: checkcast     #146                // class org/kohsuke/github/GitHubRequest$Entry
       140: astore        5
       142: aload_3
       143: aload         5
       145: getfield      #147                // Field org/kohsuke/github/GitHubRequest$Entry.key:Ljava/lang/String;
       148: aload         5
       150: getfield      #148                // Field org/kohsuke/github/GitHubRequest$Entry.value:Ljava/lang/Object;
       153: invokeinterface #149,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       158: pop
       159: goto          120
       162: aload_2
       163: new           #150                // class java/io/ByteArrayInputStream
       166: dup
       167: invokestatic  #151                // Method getMappingObjectWriter:()Lcom/fasterxml/jackson/databind/ObjectWriter;
       170: aload_3
       171: invokevirtual #152                // Method com/fasterxml/jackson/databind/ObjectWriter.writeValueAsBytes:(Ljava/lang/Object;)[B
       174: invokespecial #153                // Method java/io/ByteArrayInputStream."<init>":([B)V
       177: invokevirtual #154                // Method org/kohsuke/github/GitHubRequest$Builder.with:(Ljava/io/InputStream;)Lorg/kohsuke/github/GitHubRequest$Builder;
       180: pop
       181: aload_2
       182: invokevirtual #27                 // Method org/kohsuke/github/GitHubRequest$Builder.build:()Lorg/kohsuke/github/GitHubRequest;
       185: areturn
      LineNumberTable:
        line 442: 0
        line 445: 5
        line 446: 19
        line 447: 24
        line 448: 28
        line 451: 36
        line 452: 45
        line 454: 54
        line 456: 63
        line 457: 70
        line 458: 77
        line 460: 94
        line 461: 101
        line 462: 109
        line 463: 142
        line 464: 159
        line 465: 162
        line 470: 181
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           24      12     3 authorization   Ljava/lang/String;
          142      17     5     e   Lorg/kohsuke/github/GitHubRequest$Entry;
          109      72     3  json   Ljava/util/Map;
            0     186     0  this   Lorg/kohsuke/github/GitHubClient;
            0     186     1 request   Lorg/kohsuke/github/GitHubRequest;
            5     181     2 builder   Lorg/kohsuke/github/GitHubRequest$Builder;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
          109      72     3  json   Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;
            5     181     2 builder   Lorg/kohsuke/github/GitHubRequest$Builder<*>;
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ class org/kohsuke/github/GitHubRequest$Builder ]
        frame_type = 17 /* same */
        frame_type = 39 /* same */
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ class java/util/Map, class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 41
        frame_type = 250 /* chop */
          offset_delta = 18
    Exceptions:
      throws java.io.IOException

  private void logRequest(org.kohsuke.github.connector.GitHubConnectorRequest);
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorRequest;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
         3: getstatic     #33                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
         6: aload_0
         7: aload_1
         8: invokedynamic #155,  0            // InvokeDynamic #3:get:(Lorg/kohsuke/github/GitHubClient;Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/util/function/Supplier;
        13: invokevirtual #156                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/util/function/Supplier;)V
        16: return
      LineNumberTable:
        line 474: 0
        line 477: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/kohsuke/github/GitHubClient;
            0      17     1 request   Lorg/kohsuke/github/connector/GitHubConnectorRequest;
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull

  private static <T extends java.lang.Object> org.kohsuke.github.GitHubResponse<T> createResponse(org.kohsuke.github.connector.GitHubConnectorResponse, org.kohsuke.github.GitHubClient$BodyHandler<T>) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=2
         0: aconst_null
         1: astore_2
         2: aload_1
         3: ifnull        21
         6: aload_0
         7: invokestatic  #157                // Method shouldIgnoreBody:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
        10: ifne          21
        13: aload_1
        14: aload_0
        15: invokeinterface #158,  2          // InterfaceMethod org/kohsuke/github/GitHubClient$BodyHandler.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        20: astore_2
        21: new           #159                // class org/kohsuke/github/GitHubResponse
        24: dup
        25: aload_0
        26: aload_2
        27: invokespecial #160                // Method org/kohsuke/github/GitHubResponse."<init>":(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Ljava/lang/Object;)V
        30: areturn
      LineNumberTable:
        line 482: 0
        line 483: 2
        line 484: 6
        line 485: 13
        line 488: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            0      31     1 handler   Lorg/kohsuke/github/GitHubClient$BodyHandler;
            2      29     2  body   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      31     1 handler   Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;
            2      29     2  body   TT;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ class java/lang/Object ]
    Exceptions:
      throws java.io.IOException
    Signature: #412                         // <T:Ljava/lang/Object;>(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubClient$BodyHandler<TT;>;)Lorg/kohsuke/github/GitHubResponse<TT;>;
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull
      parameter 1:
        0: #353()
          javax.annotation.CheckForNull

  private static boolean shouldIgnoreBody(org.kohsuke.github.connector.GitHubConnectorResponse);
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
         4: sipush        304
         7: if_icmpne     12
        10: iconst_1
        11: ireturn
        12: aload_0
        13: invokevirtual #115                // Method org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
        16: sipush        202
        19: if_icmpne     68
        22: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
        25: getstatic     #33                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
        28: new           #34                 // class java/lang/StringBuilder
        31: dup
        32: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
        35: ldc           #161                // String Received HTTP_ACCEPTED(202) from
        37: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: aload_0
        41: invokevirtual #119                // Method org/kohsuke/github/connector/GitHubConnectorResponse.request:()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
        44: invokeinterface #120,  1          // InterfaceMethod org/kohsuke/github/connector/GitHubConnectorRequest.url:()Ljava/net/URL;
        49: invokevirtual #102                // Method java/net/URL.toString:()Ljava/lang/String;
        52: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        55: ldc           #162                // String  . Please try again in 5 seconds.
        57: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        60: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        63: invokevirtual #61                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
        66: iconst_1
        67: ireturn
        68: iconst_0
        69: ireturn
      LineNumberTable:
        line 492: 0
        line 494: 10
        line 495: 12
        line 503: 22
        line 504: 41
        line 503: 63
        line 506: 66
        line 508: 68
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      70     0 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 55 /* same */
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull

  private static java.io.IOException interpretApiError(java.io.IOException, org.kohsuke.github.connector.GitHubConnectorRequest, org.kohsuke.github.connector.GitHubConnectorResponse) throws java.io.IOException;
    descriptor: (Ljava/io/IOException;Lorg/kohsuke/github/connector/GitHubConnectorRequest;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/io/IOException;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=7, locals=7, args_size=3
         0: aload_0
         1: instanceof    #100                // class org/kohsuke/github/GHIOException
         4: ifeq          9
         7: aload_0
         8: areturn
         9: iconst_m1
        10: istore_3
        11: aconst_null
        12: astore        4
        14: new           #140                // class java/util/HashMap
        17: dup
        18: invokespecial #141                // Method java/util/HashMap."<init>":()V
        21: astore        5
        23: aconst_null
        24: astore        6
        26: aload_2
        27: ifnull        65
        30: aload_2
        31: invokevirtual #115                // Method org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
        34: istore_3
        35: aload_2
        36: ldc           #163                // String Status
        38: invokevirtual #164                // Method org/kohsuke/github/connector/GitHubConnectorResponse.header:(Ljava/lang/String;)Ljava/lang/String;
        41: astore        4
        43: aload_2
        44: invokevirtual #165                // Method org/kohsuke/github/connector/GitHubConnectorResponse.allHeaders:()Ljava/util/Map;
        47: astore        5
        49: aload_2
        50: invokevirtual #115                // Method org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
        53: sipush        400
        56: if_icmplt     65
        59: aload_2
        60: invokestatic  #166                // Method org/kohsuke/github/GitHubResponse.getBodyAsStringOrNull:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/String;
        63: astore        6
        65: aload         6
        67: ifnull        169
        70: aload_0
        71: instanceof    #59                 // class java/io/FileNotFoundException
        74: ifeq          121
        77: new           #167                // class org/kohsuke/github/GHFileNotFoundException
        80: dup
        81: new           #34                 // class java/lang/StringBuilder
        84: dup
        85: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
        88: aload_0
        89: invokevirtual #168                // Method java/io/IOException.getMessage:()Ljava/lang/String;
        92: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        95: ldc           #169                // String
        97: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       100: aload         6
       102: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       105: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       108: aload_0
       109: invokespecial #170                // Method org/kohsuke/github/GHFileNotFoundException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       112: aload         5
       114: invokevirtual #171                // Method org/kohsuke/github/GHFileNotFoundException.withResponseHeaderFields:(Ljava/util/Map;)Lorg/kohsuke/github/GHFileNotFoundException;
       117: astore_0
       118: goto          197
       121: iload_3
       122: iflt          151
       125: new           #116                // class org/kohsuke/github/HttpException
       128: dup
       129: aload         6
       131: iload_3
       132: aload         4
       134: aload_1
       135: invokeinterface #120,  1          // InterfaceMethod org/kohsuke/github/connector/GitHubConnectorRequest.url:()Ljava/net/URL;
       140: invokevirtual #102                // Method java/net/URL.toString:()Ljava/lang/String;
       143: aload_0
       144: invokespecial #172                // Method org/kohsuke/github/HttpException."<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
       147: astore_0
       148: goto          197
       151: new           #100                // class org/kohsuke/github/GHIOException
       154: dup
       155: aload         6
       157: invokespecial #103                // Method org/kohsuke/github/GHIOException."<init>":(Ljava/lang/String;)V
       160: aload         5
       162: invokevirtual #173                // Method org/kohsuke/github/GHIOException.withResponseHeaderFields:(Ljava/util/Map;)Lorg/kohsuke/github/GHIOException;
       165: astore_0
       166: goto          197
       169: aload_0
       170: instanceof    #59                 // class java/io/FileNotFoundException
       173: ifne          197
       176: new           #116                // class org/kohsuke/github/HttpException
       179: dup
       180: iload_3
       181: aload         4
       183: aload_1
       184: invokeinterface #120,  1          // InterfaceMethod org/kohsuke/github/connector/GitHubConnectorRequest.url:()Ljava/net/URL;
       189: invokevirtual #102                // Method java/net/URL.toString:()Ljava/lang/String;
       192: aload_0
       193: invokespecial #174                // Method org/kohsuke/github/HttpException."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
       196: astore_0
       197: aload_0
       198: areturn
      LineNumberTable:
        line 519: 0
        line 520: 7
        line 523: 9
        line 524: 11
        line 525: 14
        line 526: 23
        line 528: 26
        line 529: 30
        line 530: 35
        line 531: 43
        line 532: 49
        line 533: 59
        line 537: 65
        line 538: 70
        line 540: 77
        line 541: 114
        line 542: 121
        line 543: 125
        line 545: 151
        line 547: 169
        line 548: 176
        line 550: 197
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     199     0     e   Ljava/io/IOException;
            0     199     1 connectorRequest   Lorg/kohsuke/github/connector/GitHubConnectorRequest;
            0     199     2 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
           11     188     3 statusCode   I
           14     185     4 message   Ljava/lang/String;
           23     176     5 headers   Ljava/util/Map;
           26     173     6 errorMessage   Ljava/lang/String;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           23     176     5 headers   Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;
      StackMapTable: number_of_entries = 6
        frame_type = 9 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class java/io/IOException, class org/kohsuke/github/connector/GitHubConnectorRequest, class org/kohsuke/github/connector/GitHubConnectorResponse, int, class java/lang/String, class java/util/Map, class java/lang/String ]
          stack = []
        frame_type = 55 /* same */
        frame_type = 29 /* same */
        frame_type = 17 /* same */
        frame_type = 27 /* same */
    Exceptions:
      throws java.io.IOException
    RuntimeVisibleParameterAnnotations:
      parameter 0:
      parameter 1:
        0: #301()
          javax.annotation.Nonnull
      parameter 2:
        0: #353()
          javax.annotation.CheckForNull

  private static void logRetryConnectionError(java.io.IOException, java.net.URL, int) throws java.io.IOException;
    descriptor: (Ljava/io/IOException;Ljava/net/URL;I)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
         3: getstatic     #175                // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
         6: new           #34                 // class java/lang/StringBuilder
         9: dup
        10: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
        13: aload_0
        14: invokevirtual #168                // Method java/io/IOException.getMessage:()Ljava/lang/String;
        17: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc           #176                // String  while connecting to
        22: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: aload_1
        26: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        29: ldc           #177                // String . Sleeping
        31: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: bipush        100
        36: invokevirtual #178                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        39: ldc           #179                // String  milliseconds before retrying... ; will try
        41: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        44: iload_2
        45: invokevirtual #178                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        48: ldc           #180                // String  more time(s)
        50: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        53: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        56: invokevirtual #61                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
        59: ldc2_w        #181                // long 100l
        62: invokestatic  #183                // Method java/lang/Thread.sleep:(J)V
        65: goto          84
        68: astore_3
        69: new           #185                // class java/io/InterruptedIOException
        72: dup
        73: invokespecial #186                // Method java/io/InterruptedIOException."<init>":()V
        76: aload_0
        77: invokevirtual #187                // Method java/io/InterruptedIOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
        80: checkcast     #21                 // class java/io/IOException
        83: athrow
        84: return
      Exception table:
         from    to  target type
            59    65    68   Class java/lang/InterruptedException
      LineNumberTable:
        line 555: 0
        line 556: 14
        line 555: 56
        line 559: 59
        line 562: 65
        line 560: 68
        line 561: 69
        line 563: 84
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           69      15     3    ie   Ljava/lang/InterruptedException;
            0      85     0     e   Ljava/io/IOException;
            0      85     1   url   Ljava/net/URL;
            0      85     2 retries   I
      StackMapTable: number_of_entries = 2
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 68
          stack = [ class java/lang/InterruptedException ]
        frame_type = 15 /* same */
    Exceptions:
      throws java.io.IOException

  private void detectInvalidCached404Response(org.kohsuke.github.connector.GitHubConnectorResponse, org.kohsuke.github.GitHubRequest) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorResponse;Lorg/kohsuke/github/GitHubRequest;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=3, args_size=3
         0: aload_1
         1: invokevirtual #115                // Method org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
         4: sipush        404
         7: if_icmpne     122
        10: aload_1
        11: invokevirtual #119                // Method org/kohsuke/github/connector/GitHubConnectorResponse.request:()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
        14: invokeinterface #188,  1          // InterfaceMethod org/kohsuke/github/connector/GitHubConnectorRequest.method:()Ljava/lang/String;
        19: ldc           #189                // String GET
        21: invokestatic  #190                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        24: ifeq          122
        27: aload_1
        28: ldc           #191                // String ETag
        30: invokevirtual #164                // Method org/kohsuke/github/connector/GitHubConnectorResponse.header:(Ljava/lang/String;)Ljava/lang/String;
        33: ifnull        122
        36: aload_1
        37: invokevirtual #119                // Method org/kohsuke/github/connector/GitHubConnectorResponse.request:()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
        40: ldc           #192                // String Cache-Control
        42: invokeinterface #193,  2          // InterfaceMethod org/kohsuke/github/connector/GitHubConnectorRequest.header:(Ljava/lang/String;)Ljava/lang/String;
        47: ldc           #194                // String no-cache
        49: invokestatic  #190                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        52: ifne          122
        55: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
        58: getstatic     #33                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
        61: new           #34                 // class java/lang/StringBuilder
        64: dup
        65: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
        68: ldc           #195                // String Encountered GitHub invalid cached 404 from
        70: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        73: aload_1
        74: invokevirtual #119                // Method org/kohsuke/github/connector/GitHubConnectorResponse.request:()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
        77: invokeinterface #120,  1          // InterfaceMethod org/kohsuke/github/connector/GitHubConnectorRequest.url:()Ljava/net/URL;
        82: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        85: ldc           #196                // String . Retrying with \"Cache-Control\"=\"no-cache\"...
        87: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        93: invokevirtual #61                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
        96: new           #92                 // class org/kohsuke/github/GitHubClient$RetryRequestException
        99: dup
       100: aload_0
       101: aload_2
       102: invokevirtual #122                // Method org/kohsuke/github/GitHubRequest.toBuilder:()Lorg/kohsuke/github/GitHubRequest$Builder;
       105: ldc           #192                // String Cache-Control
       107: ldc           #194                // String no-cache
       109: invokevirtual #127                // Method org/kohsuke/github/GitHubRequest$Builder.setHeader:(Ljava/lang/String;Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
       112: invokevirtual #27                 // Method org/kohsuke/github/GitHubRequest$Builder.build:()Lorg/kohsuke/github/GitHubRequest;
       115: invokespecial #83                 // Method prepareConnectorRequest:(Lorg/kohsuke/github/GitHubRequest;)Lorg/kohsuke/github/connector/GitHubConnectorRequest;
       118: invokespecial #197                // Method org/kohsuke/github/GitHubClient$RetryRequestException."<init>":(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)V
       121: athrow
       122: return
      LineNumberTable:
        line 577: 0
        line 578: 30
        line 579: 37
        line 580: 55
        line 581: 74
        line 580: 93
        line 586: 96
        line 587: 102
        line 589: 122
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     123     0  this   Lorg/kohsuke/github/GitHubClient;
            0     123     1 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            0     123     2 request   Lorg/kohsuke/github/GitHubRequest;
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 122
    Exceptions:
      throws java.io.IOException

  private void noteRateLimit(org.kohsuke.github.RateLimitTarget, org.kohsuke.github.connector.GitHubConnectorResponse);
    descriptor: (Lorg/kohsuke/github/RateLimitTarget;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=7, args_size=3
         0: aload_2
         1: ldc           #198                // String X-RateLimit-Limit
         3: invokevirtual #199                // Method org/kohsuke/github/connector/GitHubConnectorResponse.parseInt:(Ljava/lang/String;)I
         6: istore_3
         7: aload_2
         8: ldc           #200                // String X-RateLimit-Remaining
        10: invokevirtual #199                // Method org/kohsuke/github/connector/GitHubConnectorResponse.parseInt:(Ljava/lang/String;)I
        13: istore        4
        15: aload_2
        16: ldc           #201                // String X-RateLimit-Reset
        18: invokevirtual #199                // Method org/kohsuke/github/connector/GitHubConnectorResponse.parseInt:(Ljava/lang/String;)I
        21: istore        5
        23: new           #202                // class org/kohsuke/github/GHRateLimit$Record
        26: dup
        27: iload_3
        28: iload         4
        30: iload         5
        32: i2l
        33: aload_2
        34: invokespecial #203                // Method org/kohsuke/github/GHRateLimit$Record."<init>":(IIJLorg/kohsuke/github/connector/GitHubConnectorResponse;)V
        37: astore        6
        39: aload_0
        40: aload         6
        42: aload_1
        43: invokestatic  #63                 // Method org/kohsuke/github/GHRateLimit.fromRecord:(Lorg/kohsuke/github/GHRateLimit$Record;Lorg/kohsuke/github/RateLimitTarget;)Lorg/kohsuke/github/GHRateLimit;
        46: invokespecial #64                 // Method updateRateLimit:(Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
        49: pop
        50: goto          66
        53: astore_3
        54: getstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
        57: getstatic     #71                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
        60: ldc           #205                // String Missing or malformed X-RateLimit header:
        62: aload_3
        63: invokevirtual #43                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        66: return
      Exception table:
         from    to  target type
             0    50    53   Class java/lang/NumberFormatException
      LineNumberTable:
        line 594: 0
        line 595: 7
        line 596: 15
        line 597: 23
        line 598: 39
        line 601: 50
        line 599: 53
        line 600: 54
        line 602: 66
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      43     3 limit   I
           15      35     4 remaining   I
           23      27     5 reset   I
           39      11     6 observed   Lorg/kohsuke/github/GHRateLimit$Record;
           54      12     3     e   Ljava/lang/NumberFormatException;
            0      67     0  this   Lorg/kohsuke/github/GitHubClient;
            0      67     1 rateLimitTarget   Lorg/kohsuke/github/RateLimitTarget;
            0      67     2 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
      StackMapTable: number_of_entries = 2
        frame_type = 117 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 12 /* same */
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull
      parameter 1:
        0: #301()
          javax.annotation.Nonnull

  private static void detectOTPRequired(org.kohsuke.github.connector.GitHubConnectorResponse) throws org.kohsuke.github.GHIOException;
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method org/kohsuke/github/connector/GitHubConnectorResponse.statusCode:()I
         4: sipush        401
         7: if_icmpne     34
        10: aload_0
        11: ldc           #206                // String X-GitHub-OTP
        13: invokevirtual #164                // Method org/kohsuke/github/connector/GitHubConnectorResponse.header:(Ljava/lang/String;)Ljava/lang/String;
        16: ifnull        34
        19: new           #207                // class org/kohsuke/github/GHOTPRequiredException
        22: dup
        23: invokespecial #208                // Method org/kohsuke/github/GHOTPRequiredException."<init>":()V
        26: aload_0
        27: invokevirtual #165                // Method org/kohsuke/github/connector/GitHubConnectorResponse.allHeaders:()Ljava/util/Map;
        30: invokevirtual #209                // Method org/kohsuke/github/GHOTPRequiredException.withResponseHeaderFields:(Ljava/util/Map;)Lorg/kohsuke/github/GHIOException;
        33: athrow
        34: return
      LineNumberTable:
        line 606: 0
        line 609: 10
        line 610: 19
        line 613: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
      StackMapTable: number_of_entries = 1
        frame_type = 34 /* same */
    Exceptions:
      throws org.kohsuke.github.GHIOException
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull

  void requireCredential();
    descriptor: ()V
    flags: (0x0000)
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #210                // Method isAnonymous:()Z
         4: ifeq          17
         7: new           #211                // class java/lang/IllegalStateException
        10: dup
        11: ldc           #212                // String This operation requires a credential but none is given to the GitHub constructor
        13: invokespecial #213                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: return
      LineNumberTable:
        line 616: 0
        line 617: 7
        line 619: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/kohsuke/github/GitHubClient;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */

  private boolean isPrivateModeEnabled();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokestatic  #22                 // Method org/kohsuke/github/GitHubRequest.newBuilder:()Lorg/kohsuke/github/GitHubRequest$Builder;
         4: aload_0
         5: invokevirtual #23                 // Method getApiUrl:()Ljava/lang/String;
         8: invokevirtual #24                 // Method org/kohsuke/github/GitHubRequest$Builder.withApiUrl:(Ljava/lang/String;)Lorg/kohsuke/github/GitHubRequest$Builder;
        11: aconst_null
        12: invokevirtual #214                // Method sendRequest:(Lorg/kohsuke/github/GitHubRequest$Builder;Lorg/kohsuke/github/GitHubClient$BodyHandler;)Lorg/kohsuke/github/GitHubResponse;
        15: astore_1
        16: aload_1
        17: invokevirtual #215                // Method org/kohsuke/github/GitHubResponse.statusCode:()I
        20: sipush        401
        23: if_icmpne     39
        26: aload_1
        27: ldc           #216                // String X-GitHub-Media-Type
        29: invokevirtual #217                // Method org/kohsuke/github/GitHubResponse.header:(Ljava/lang/String;)Ljava/lang/String;
        32: ifnull        39
        35: iconst_1
        36: goto          40
        39: iconst_0
        40: ireturn
        41: astore_1
        42: iconst_0
        43: ireturn
      Exception table:
         from    to  target type
             0    40    41   Class java/io/IOException
      LineNumberTable:
        line 663: 0
        line 664: 16
        line 665: 41
        line 666: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      25     1 response   Lorg/kohsuke/github/GitHubResponse;
           42       2     1     e   Ljava/io/IOException;
            0      44     0  this   Lorg/kohsuke/github/GitHubClient;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           16      25     1 response   Lorg/kohsuke/github/GitHubResponse<*>;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 39
          locals = [ class org/kohsuke/github/GitHubResponse ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/kohsuke/github/GitHubClient ]
          stack = [ class java/io/IOException ]

  static java.net.URL parseURL(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/net/URL;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: ifnonnull     8
         4: aconst_null
         5: goto          16
         8: new           #218                // class java/net/URL
        11: dup
        12: aload_0
        13: invokespecial #219                // Method java/net/URL."<init>":(Ljava/lang/String;)V
        16: areturn
        17: astore_1
        18: new           #211                // class java/lang/IllegalStateException
        21: dup
        22: new           #34                 // class java/lang/StringBuilder
        25: dup
        26: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
        29: ldc           #221                // String Invalid URL:
        31: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: aload_0
        35: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        41: invokespecial #213                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        44: athrow
      Exception table:
         from    to  target type
             0    16    17   Class java/net/MalformedURLException
      LineNumberTable:
        line 672: 0
        line 673: 17
        line 674: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      27     1     e   Ljava/net/MalformedURLException;
            0      45     0     s   Ljava/lang/String;
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/net/URL ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/net/MalformedURLException ]

  static java.util.Date parseDate(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/util/Date;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: invokestatic  #222                // Method parseInstant:(Ljava/lang/String;)Ljava/time/Instant;
        10: invokestatic  #223                // Method java/util/Date.from:(Ljava/time/Instant;)Ljava/util/Date;
        13: areturn
      LineNumberTable:
        line 679: 0
        line 680: 4
        line 682: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 timestamp   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */

  static java.time.Instant parseInstant(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/time/Instant;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: iconst_4
         8: invokevirtual #224                // Method java/lang/String.charAt:(I)C
        11: bipush        47
        13: if_icmpne     27
        16: getstatic     #225                // Field DATE_TIME_PARSER_SLASHES:Ljava/time/format/DateTimeFormatter;
        19: aload_0
        20: invokevirtual #226                // Method java/time/format/DateTimeFormatter.parse:(Ljava/lang/CharSequence;)Ljava/time/temporal/TemporalAccessor;
        23: invokestatic  #227                // Method java/time/Instant.from:(Ljava/time/temporal/TemporalAccessor;)Ljava/time/Instant;
        26: areturn
        27: getstatic     #228                // Field java/time/format/DateTimeFormatter.ISO_OFFSET_DATE_TIME:Ljava/time/format/DateTimeFormatter;
        30: aload_0
        31: invokevirtual #226                // Method java/time/format/DateTimeFormatter.parse:(Ljava/lang/CharSequence;)Ljava/time/temporal/TemporalAccessor;
        34: invokestatic  #227                // Method java/time/Instant.from:(Ljava/time/temporal/TemporalAccessor;)Ljava/time/Instant;
        37: areturn
      LineNumberTable:
        line 686: 0
        line 687: 4
        line 689: 6
        line 691: 16
        line 693: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0 timestamp   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 20 /* same */

  static java.lang.String printDate(java.util.Date);
    descriptor: (Ljava/util/Date;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #229                // Field java/time/format/DateTimeFormatter.ISO_INSTANT:Ljava/time/format/DateTimeFormatter;
         3: aload_0
         4: invokevirtual #230                // Method java/util/Date.getTime:()J
         7: invokestatic  #231                // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
        10: getstatic     #232                // Field java/time/temporal/ChronoUnit.SECONDS:Ljava/time/temporal/ChronoUnit;
        13: invokevirtual #233                // Method java/time/Instant.truncatedTo:(Ljava/time/temporal/TemporalUnit;)Ljava/time/Instant;
        16: invokevirtual #234                // Method java/time/format/DateTimeFormatter.format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
        19: areturn
      LineNumberTable:
        line 698: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0    dt   Ljava/util/Date;

  static com.fasterxml.jackson.databind.ObjectWriter getMappingObjectWriter();
    descriptor: ()Lcom/fasterxml/jackson/databind/ObjectWriter;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #235                // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
         3: invokevirtual #236                // Method com/fasterxml/jackson/databind/ObjectMapper.writer:()Lcom/fasterxml/jackson/databind/ObjectWriter;
         6: areturn
      LineNumberTable:
        line 708: 0
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull

  static com.fasterxml.jackson.databind.ObjectReader getMappingObjectReader(org.kohsuke.github.GitHub);
    descriptor: (Lorg/kohsuke/github/GitHub;)Lcom/fasterxml/jackson/databind/ObjectReader;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: aconst_null
         1: checkcast     #237                // class org/kohsuke/github/connector/GitHubConnectorResponse
         4: invokestatic  #238                // Method getMappingObjectReader:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lcom/fasterxml/jackson/databind/ObjectReader;
         7: astore_1
         8: aload_1
         9: invokevirtual #239                // Method com/fasterxml/jackson/databind/ObjectReader.getInjectableValues:()Lcom/fasterxml/jackson/databind/InjectableValues;
        12: checkcast     #240                // class com/fasterxml/jackson/databind/InjectableValues$Std
        15: ldc           #241                // class org/kohsuke/github/GitHub
        17: aload_0
        18: invokevirtual #242                // Method com/fasterxml/jackson/databind/InjectableValues$Std.addValue:(Ljava/lang/Class;Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/InjectableValues$Std;
        21: pop
        22: aload_1
        23: areturn
      LineNumberTable:
        line 721: 0
        line 722: 8
        line 723: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  root   Lorg/kohsuke/github/GitHub;
            8      16     1 reader   Lcom/fasterxml/jackson/databind/ObjectReader;
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #301()
          javax.annotation.Nonnull

  static com.fasterxml.jackson.databind.ObjectReader getMappingObjectReader(org.kohsuke.github.connector.GitHubConnectorResponse);
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lcom/fasterxml/jackson/databind/ObjectReader;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=3, args_size=1
         0: new           #140                // class java/util/HashMap
         3: dup
         4: invokespecial #141                // Method java/util/HashMap."<init>":()V
         7: astore_1
         8: aload_1
         9: ldc           #237                // class org/kohsuke/github/connector/GitHubConnectorResponse
        11: invokevirtual #243                // Method java/lang/Class.getName:()Ljava/lang/String;
        14: aconst_null
        15: invokeinterface #149,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        20: pop
        21: aload_1
        22: ldc           #241                // class org/kohsuke/github/GitHub
        24: invokevirtual #243                // Method java/lang/Class.getName:()Ljava/lang/String;
        27: aconst_null
        28: invokeinterface #149,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        33: pop
        34: aload_0
        35: ifnull        79
        38: aload_1
        39: ldc           #237                // class org/kohsuke/github/connector/GitHubConnectorResponse
        41: invokevirtual #243                // Method java/lang/Class.getName:()Ljava/lang/String;
        44: aload_0
        45: invokeinterface #149,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        50: pop
        51: aload_0
        52: invokevirtual #119                // Method org/kohsuke/github/connector/GitHubConnectorResponse.request:()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
        55: astore_2
        56: aload_2
        57: instanceof    #244                // class org/kohsuke/github/GitHubRequest
        60: ifeq          79
        63: aload_1
        64: aload_0
        65: invokevirtual #119                // Method org/kohsuke/github/connector/GitHubConnectorResponse.request:()Lorg/kohsuke/github/connector/GitHubConnectorRequest;
        68: checkcast     #244                // class org/kohsuke/github/GitHubRequest
        71: invokevirtual #245                // Method org/kohsuke/github/GitHubRequest.injectedMappingValues:()Ljava/util/Map;
        74: invokeinterface #246,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
        79: getstatic     #235                // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
        82: new           #240                // class com/fasterxml/jackson/databind/InjectableValues$Std
        85: dup
        86: aload_1
        87: invokespecial #247                // Method com/fasterxml/jackson/databind/InjectableValues$Std."<init>":(Ljava/util/Map;)V
        90: invokevirtual #248                // Method com/fasterxml/jackson/databind/ObjectMapper.reader:(Lcom/fasterxml/jackson/databind/InjectableValues;)Lcom/fasterxml/jackson/databind/ObjectReader;
        93: areturn
      LineNumberTable:
        line 742: 0
        line 745: 8
        line 746: 21
        line 748: 34
        line 749: 38
        line 750: 51
        line 752: 56
        line 753: 63
        line 756: 79
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           56      23     2 request   Lorg/kohsuke/github/connector/GitHubConnectorRequest;
            0      94     0 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
            8      86     1 injected   Ljava/util/Map;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            8      86     1 injected   Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 79
          locals = [ class java/util/Map ]
    RuntimeVisibleAnnotations:
      0: #301()
        javax.annotation.Nonnull
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #353()
          javax.annotation.CheckForNull

  static <K extends java.lang.Object, V extends java.lang.Object> java.util.Map<K, V> unmodifiableMapOrNull(java.util.Map<? extends K, ? extends V>);
    descriptor: (Ljava/util/Map;)Ljava/util/Map;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     8
         4: aconst_null
         5: goto          12
         8: aload_0
         9: invokestatic  #249                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
        12: areturn
      LineNumberTable:
        line 760: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0   map   Ljava/util/Map;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      13     0   map   Ljava/util/Map<+TK;+TV;>;
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/util/Map ]
    Signature: #471                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<+TK;+TV;>;)Ljava/util/Map<TK;TV;>;

  static <T extends java.lang.Object> java.util.List<T> unmodifiableListOrNull(java.util.List<? extends T>);
    descriptor: (Ljava/util/List;)Ljava/util/List;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     8
         4: aconst_null
         5: goto          12
         8: aload_0
         9: invokestatic  #250                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
        12: areturn
      LineNumberTable:
        line 764: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  list   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      13     0  list   Ljava/util/List<+TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/util/List ]
    Signature: #478                         // <T:Ljava/lang/Object;>(Ljava/util/List<+TT;>;)Ljava/util/List<TT;>;

  private java.lang.String lambda$logRequest$3(org.kohsuke.github.connector.GitHubConnectorRequest);
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/lang/String;
    flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #34                 // class java/lang/StringBuilder
         3: dup
         4: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
         7: ldc           #251                // String GitHub API request [
         9: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        12: aload_0
        13: invokevirtual #39                 // Method getLogin:()Ljava/lang/String;
        16: ifnonnull     24
        19: ldc           #252                // String anonymous
        21: goto          28
        24: aload_0
        25: invokevirtual #39                 // Method getLogin:()Ljava/lang/String;
        28: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: ldc           #253                // String ]:
        33: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: aload_1
        37: invokeinterface #188,  1          // InterfaceMethod org/kohsuke/github/connector/GitHubConnectorRequest.method:()Ljava/lang/String;
        42: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: ldc           #169                // String
        47: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: aload_1
        51: invokeinterface #120,  1          // InterfaceMethod org/kohsuke/github/connector/GitHubConnectorRequest.url:()Ljava/net/URL;
        56: invokevirtual #102                // Method java/net/URL.toString:()Ljava/lang/String;
        59: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        65: areturn
      LineNumberTable:
        line 475: 0
        line 476: 37
        line 475: 65
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lorg/kohsuke/github/GitHubClient;
            0      66     1 request   Lorg/kohsuke/github/connector/GitHubConnectorRequest;
      StackMapTable: number_of_entries = 2
        frame_type = 88 /* same_locals_1_stack_item */
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class org/kohsuke/github/GitHubClient, class org/kohsuke/github/connector/GitHubConnectorRequest ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]

  private static org.kohsuke.github.GHRateLimit lambda$updateRateLimit$2(org.kohsuke.github.GHRateLimit, org.kohsuke.github.GHRateLimit);
    descriptor: (Lorg/kohsuke/github/GHRateLimit;Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #254                // Method org/kohsuke/github/GHRateLimit.getMergedRateLimit:(Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
         5: areturn
      LineNumberTable:
        line 303: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 current   Lorg/kohsuke/github/GHRateLimit;
            0       6     1     x   Lorg/kohsuke/github/GHRateLimit;

  private static org.kohsuke.github.JsonRateLimit lambda$getRateLimit$1(org.kohsuke.github.connector.GitHubConnectorResponse) throws java.io.IOException;
    descriptor: (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lorg/kohsuke/github/JsonRateLimit;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #57                 // class org/kohsuke/github/JsonRateLimit
         3: invokestatic  #255                // Method org/kohsuke/github/GitHubResponse.parseBody:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Ljava/lang/Class;)Ljava/lang/Object;
         6: checkcast     #57                 // class org/kohsuke/github/JsonRateLimit
         9: areturn
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
    Exceptions:
      throws java.io.IOException

  private static java.lang.Object lambda$fetch$0(java.lang.Class, org.kohsuke.github.connector.GitHubConnectorResponse) throws java.io.IOException;
    descriptor: (Ljava/lang/Class;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokestatic  #255                // Method org/kohsuke/github/GitHubResponse.parseBody:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;Ljava/lang/Class;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  type   Ljava/lang/Class;
            0       6     1 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
    Exceptions:
      throws java.io.IOException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=8, locals=0, args_size=0
         0: ldc           #82                 // class org/kohsuke/github/GitHubClient
         2: invokevirtual #243                // Method java/lang/Class.getName:()Ljava/lang/String;
         5: invokestatic  #256                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
         8: putstatic     #32                 // Field LOGGER:Ljava/util/logging/Logger;
        11: new           #257                // class com/fasterxml/jackson/databind/ObjectMapper
        14: dup
        15: invokespecial #258                // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
        18: putstatic     #235                // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
        21: ldc_w         #259                // String yyyy/MM/dd HH:mm:ss Z
        24: invokestatic  #260                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
        27: putstatic     #225                // Field DATE_TIME_PARSER_SLASHES:Ljava/time/format/DateTimeFormatter;
        30: getstatic     #235                // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
        33: new           #261                // class com/fasterxml/jackson/databind/introspect/VisibilityChecker$Std
        36: dup
        37: getstatic     #262                // Field com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility.NONE:Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
        40: getstatic     #262                // Field com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility.NONE:Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
        43: getstatic     #262                // Field com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility.NONE:Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
        46: getstatic     #262                // Field com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility.NONE:Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
        49: getstatic     #263                // Field com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility.ANY:Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;
        52: invokespecial #264                // Method com/fasterxml/jackson/databind/introspect/VisibilityChecker$Std."<init>":(Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;)V
        55: invokevirtual #265                // Method com/fasterxml/jackson/databind/ObjectMapper.setVisibility:(Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker;)Lcom/fasterxml/jackson/databind/ObjectMapper;
        58: pop
        59: getstatic     #235                // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
        62: getstatic     #266                // Field com/fasterxml/jackson/databind/DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES:Lcom/fasterxml/jackson/databind/DeserializationFeature;
        65: iconst_0
        66: invokevirtual #267                // Method com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/DeserializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
        69: pop
        70: getstatic     #235                // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
        73: getstatic     #268                // Field com/fasterxml/jackson/databind/MapperFeature.ACCEPT_CASE_INSENSITIVE_ENUMS:Lcom/fasterxml/jackson/databind/MapperFeature;
        76: iconst_1
        77: invokevirtual #269                // Method com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/MapperFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
        80: pop
        81: getstatic     #235                // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
        84: getstatic     #270                // Field com/fasterxml/jackson/databind/PropertyNamingStrategy.SNAKE_CASE:Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;
        87: invokevirtual #271                // Method com/fasterxml/jackson/databind/ObjectMapper.setPropertyNamingStrategy:(Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;)Lcom/fasterxml/jackson/databind/ObjectMapper;
        90: pop
        91: return
      LineNumberTable:
        line 65: 0
        line 67: 11
        line 70: 21
        line 71: 24
        line 74: 30
        line 75: 59
        line 76: 70
        line 77: 81
        line 78: 91
}
SourceFile: "GitHubClient.java"
InnerClasses:
  static #274= #273 of #82;               // BodyHandler=class org/kohsuke/github/GitHubClient$BodyHandler of class org/kohsuke/github/GitHubClient
  static #276= #92 of #82;                // RetryRequestException=class org/kohsuke/github/GitHubClient$RetryRequestException of class org/kohsuke/github/GitHubClient
  private static #277= #74 of #82;        // GHApiInfo=class org/kohsuke/github/GitHubClient$GHApiInfo of class org/kohsuke/github/GitHubClient
  static #371= #370 of #244;              // Builder=class org/kohsuke/github/GitHubRequest$Builder of class org/kohsuke/github/GitHubRequest
  protected static #398= #146 of #244;    // Entry=class org/kohsuke/github/GitHubRequest$Entry of class org/kohsuke/github/GitHubRequest
  public static #435= #202 of #66;        // Record=class org/kohsuke/github/GHRateLimit$Record of class org/kohsuke/github/GHRateLimit
  public static #735= #240 of #733;       // Std=class com/fasterxml/jackson/databind/InjectableValues$Std of class com/fasterxml/jackson/databind/InjectableValues
  public static #735= #261 of #757;       // Std=class com/fasterxml/jackson/databind/introspect/VisibilityChecker$Std of class com/fasterxml/jackson/databind/introspect/VisibilityChecker
  public static #831= #561 of #66;        // UnknownLimitRecord=class org/kohsuke/github/GHRateLimit$UnknownLimitRecord of class org/kohsuke/github/GHRateLimit
  public static final #969= #759 of #967; // Visibility=class com/fasterxml/jackson/annotation/JsonAutoDetect$Visibility of class com/fasterxml/jackson/annotation/JsonAutoDetect
  public static final #999= #998 of #1001; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
BootstrapMethods:
  0: #520 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #521 (Ljava/lang/Object;)Ljava/lang/Object;
      #522 REF_invokeStatic org/kohsuke/github/GitHubClient.lambda$fetch$0:(Ljava/lang/Class;Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/Object;
      #523 (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Ljava/lang/Object;
  1: #520 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #521 (Ljava/lang/Object;)Ljava/lang/Object;
      #553 REF_invokeStatic org/kohsuke/github/GitHubClient.lambda$getRateLimit$1:(Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lorg/kohsuke/github/JsonRateLimit;
      #554 (Lorg/kohsuke/github/connector/GitHubConnectorResponse;)Lorg/kohsuke/github/JsonRateLimit;
  2: #520 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #569 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #570 REF_invokeStatic org/kohsuke/github/GitHubClient.lambda$updateRateLimit$2:(Lorg/kohsuke/github/GHRateLimit;Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
      #571 (Lorg/kohsuke/github/GHRateLimit;Lorg/kohsuke/github/GHRateLimit;)Lorg/kohsuke/github/GHRateLimit;
  3: #520 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #651 ()Ljava/lang/Object;
      #652 REF_invokeSpecial org/kohsuke/github/GitHubClient.lambda$logRequest$3:(Lorg/kohsuke/github/connector/GitHubConnectorRequest;)Ljava/lang/String;
      #653 ()Ljava/lang/String;
