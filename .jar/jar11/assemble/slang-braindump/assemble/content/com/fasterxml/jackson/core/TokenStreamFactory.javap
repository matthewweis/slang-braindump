Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/core/TokenStreamFactory.class
  Last modified May 29, 2022; size 3840 bytes
  SHA-256 checksum ef9a46b607ec7010f57657aa7631c7e5d830c058e94d60a1c9cc4751471456f8
  Compiled from "TokenStreamFactory.java"
public abstract class com.fasterxml.jackson.core.TokenStreamFactory implements com.fasterxml.jackson.core.Versioned,java.io.Serializable
  minor version: 0
  major version: 50
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #14                         // com/fasterxml/jackson/core/TokenStreamFactory
  super_class: #15                        // java/lang/Object
  interfaces: 2, fields: 1, methods: 33, attributes: 2
Constant pool:
    #1 = Methodref          #15.#92       // java/lang/Object."<init>":()V
    #2 = Class              #93           // com/fasterxml/jackson/core/io/DataOutputAsStream
    #3 = Methodref          #2.#94        // com/fasterxml/jackson/core/io/DataOutputAsStream."<init>":(Ljava/io/DataOutput;)V
    #4 = String             #95           // file
    #5 = Methodref          #96.#97       // java/net/URL.getProtocol:()Ljava/lang/String;
    #6 = Methodref          #98.#99       // java/lang/String.equals:(Ljava/lang/Object;)Z
    #7 = Methodref          #96.#100      // java/net/URL.getHost:()Ljava/lang/String;
    #8 = Methodref          #98.#101      // java/lang/String.length:()I
    #9 = Methodref          #96.#102      // java/net/URL.getPath:()Ljava/lang/String;
   #10 = Methodref          #98.#103      // java/lang/String.indexOf:(I)I
   #11 = Class              #104          // java/io/FileInputStream
   #12 = Methodref          #11.#105      // java/io/FileInputStream."<init>":(Ljava/lang/String;)V
   #13 = Methodref          #96.#106      // java/net/URL.openStream:()Ljava/io/InputStream;
   #14 = Class              #107          // com/fasterxml/jackson/core/TokenStreamFactory
   #15 = Class              #108          // java/lang/Object
   #16 = Class              #109          // com/fasterxml/jackson/core/Versioned
   #17 = Class              #110          // java/io/Serializable
   #18 = Utf8               serialVersionUID
   #19 = Utf8               J
   #20 = Utf8               ConstantValue
   #21 = Long               2l
   #23 = Utf8               <init>
   #24 = Utf8               ()V
   #25 = Utf8               Code
   #26 = Utf8               LineNumberTable
   #27 = Utf8               LocalVariableTable
   #28 = Utf8               this
   #29 = Utf8               Lcom/fasterxml/jackson/core/TokenStreamFactory;
   #30 = Utf8               requiresPropertyOrdering
   #31 = Utf8               ()Z
   #32 = Utf8               canHandleBinaryNatively
   #33 = Utf8               canParseAsync
   #34 = Utf8               getFormatReadFeatureType
   #35 = Utf8               ()Ljava/lang/Class;
   #36 = Utf8               Signature
   #37 = Utf8               ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;
   #38 = Utf8               getFormatWriteFeatureType
   #39 = Utf8               canUseSchema
   #40 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z
   #41 = Utf8               getFormatName
   #42 = Utf8               ()Ljava/lang/String;
   #43 = Utf8               isEnabled
   #44 = Class              #112          // com/fasterxml/jackson/core/JsonParser$Feature
   #45 = Utf8               Feature
   #46 = Utf8               InnerClasses
   #47 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z
   #48 = Class              #114          // com/fasterxml/jackson/core/JsonGenerator$Feature
   #49 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z
   #50 = Utf8               getParserFeatures
   #51 = Utf8               ()I
   #52 = Utf8               getGeneratorFeatures
   #53 = Utf8               getFormatParserFeatures
   #54 = Utf8               getFormatGeneratorFeatures
   #55 = Utf8               createParser
   #56 = Utf8               ([B)Lcom/fasterxml/jackson/core/JsonParser;
   #57 = Utf8               Exceptions
   #58 = Class              #115          // java/io/IOException
   #59 = Utf8               ([BII)Lcom/fasterxml/jackson/core/JsonParser;
   #60 = Utf8               ([C)Lcom/fasterxml/jackson/core/JsonParser;
   #61 = Utf8               ([CII)Lcom/fasterxml/jackson/core/JsonParser;
   #62 = Utf8               (Ljava/io/DataInput;)Lcom/fasterxml/jackson/core/JsonParser;
   #63 = Utf8               (Ljava/io/File;)Lcom/fasterxml/jackson/core/JsonParser;
   #64 = Utf8               (Ljava/io/InputStream;)Lcom/fasterxml/jackson/core/JsonParser;
   #65 = Utf8               (Ljava/io/Reader;)Lcom/fasterxml/jackson/core/JsonParser;
   #66 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParser;
   #67 = Utf8               (Ljava/net/URL;)Lcom/fasterxml/jackson/core/JsonParser;
   #68 = Utf8               createNonBlockingByteArrayParser
   #69 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser;
   #70 = Utf8               createGenerator
   #71 = Utf8               (Ljava/io/DataOutput;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;
   #72 = Utf8               (Ljava/io/DataOutput;)Lcom/fasterxml/jackson/core/JsonGenerator;
   #73 = Utf8               (Ljava/io/File;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;
   #74 = Utf8               (Ljava/io/OutputStream;)Lcom/fasterxml/jackson/core/JsonGenerator;
   #75 = Utf8               (Ljava/io/OutputStream;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;
   #76 = Utf8               (Ljava/io/Writer;)Lcom/fasterxml/jackson/core/JsonGenerator;
   #77 = Utf8               _createDataOutputWrapper
   #78 = Utf8               (Ljava/io/DataOutput;)Ljava/io/OutputStream;
   #79 = Utf8               out
   #80 = Utf8               Ljava/io/DataOutput;
   #81 = Utf8               _optimizedStreamFromURL
   #82 = Utf8               (Ljava/net/URL;)Ljava/io/InputStream;
   #83 = Utf8               path
   #84 = Utf8               Ljava/lang/String;
   #85 = Utf8               host
   #86 = Utf8               url
   #87 = Utf8               Ljava/net/URL;
   #88 = Utf8               StackMapTable
   #89 = Class              #116          // java/lang/String
   #90 = Utf8               SourceFile
   #91 = Utf8               TokenStreamFactory.java
   #92 = NameAndType        #23:#24       // "<init>":()V
   #93 = Utf8               com/fasterxml/jackson/core/io/DataOutputAsStream
   #94 = NameAndType        #23:#117      // "<init>":(Ljava/io/DataOutput;)V
   #95 = Utf8               file
   #96 = Class              #118          // java/net/URL
   #97 = NameAndType        #119:#42      // getProtocol:()Ljava/lang/String;
   #98 = Class              #116          // java/lang/String
   #99 = NameAndType        #120:#121     // equals:(Ljava/lang/Object;)Z
  #100 = NameAndType        #122:#42      // getHost:()Ljava/lang/String;
  #101 = NameAndType        #123:#51      // length:()I
  #102 = NameAndType        #124:#42      // getPath:()Ljava/lang/String;
  #103 = NameAndType        #125:#126     // indexOf:(I)I
  #104 = Utf8               java/io/FileInputStream
  #105 = NameAndType        #23:#127      // "<init>":(Ljava/lang/String;)V
  #106 = NameAndType        #128:#129     // openStream:()Ljava/io/InputStream;
  #107 = Utf8               com/fasterxml/jackson/core/TokenStreamFactory
  #108 = Utf8               java/lang/Object
  #109 = Utf8               com/fasterxml/jackson/core/Versioned
  #110 = Utf8               java/io/Serializable
  #111 = Class              #130          // com/fasterxml/jackson/core/JsonParser
  #112 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature
  #113 = Class              #131          // com/fasterxml/jackson/core/JsonGenerator
  #114 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature
  #115 = Utf8               java/io/IOException
  #116 = Utf8               java/lang/String
  #117 = Utf8               (Ljava/io/DataOutput;)V
  #118 = Utf8               java/net/URL
  #119 = Utf8               getProtocol
  #120 = Utf8               equals
  #121 = Utf8               (Ljava/lang/Object;)Z
  #122 = Utf8               getHost
  #123 = Utf8               length
  #124 = Utf8               getPath
  #125 = Utf8               indexOf
  #126 = Utf8               (I)I
  #127 = Utf8               (Ljava/lang/String;)V
  #128 = Utf8               openStream
  #129 = Utf8               ()Ljava/io/InputStream;
  #130 = Utf8               com/fasterxml/jackson/core/JsonParser
  #131 = Utf8               com/fasterxml/jackson/core/JsonGenerator
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 2l

  public com.fasterxml.jackson.core.TokenStreamFactory();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;

  public abstract boolean requiresPropertyOrdering();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean canHandleBinaryNatively();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean canParseAsync();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature> getFormatReadFeatureType();
    descriptor: ()Ljava/lang/Class;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #37                          // ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;

  public abstract java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature> getFormatWriteFeatureType();
    descriptor: ()Ljava/lang/Class;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #37                          // ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;

  public abstract boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema);
    descriptor: (Lcom/fasterxml/jackson/core/FormatSchema;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract java.lang.String getFormatName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature);
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature);
    descriptor: (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getParserFeatures();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getGeneratorFeatures();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getFormatParserFeatures();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int getFormatGeneratorFeatures();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract com.fasterxml.jackson.core.JsonParser createParser(byte[]) throws java.io.IOException;
    descriptor: ([B)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createParser(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createParser(char[]) throws java.io.IOException;
    descriptor: ([C)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createParser(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) throws java.io.IOException;
    descriptor: (Ljava/io/DataInput;)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.io.File) throws java.io.IOException;
    descriptor: (Ljava/io/File;)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) throws java.io.IOException;
    descriptor: (Ljava/io/InputStream;)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) throws java.io.IOException;
    descriptor: (Ljava/io/Reader;)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) throws java.io.IOException;
    descriptor: (Ljava/net/URL;)Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() throws java.io.IOException;
    descriptor: ()Lcom/fasterxml/jackson/core/JsonParser;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException;
    descriptor: (Ljava/io/DataOutput;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) throws java.io.IOException;
    descriptor: (Ljava/io/DataOutput;)Lcom/fasterxml/jackson/core/JsonGenerator;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException;
    descriptor: (Ljava/io/File;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) throws java.io.IOException;
    descriptor: (Ljava/io/OutputStream;)Lcom/fasterxml/jackson/core/JsonGenerator;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException;
    descriptor: (Ljava/io/OutputStream;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  public abstract com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) throws java.io.IOException;
    descriptor: (Ljava/io/Writer;)Lcom/fasterxml/jackson/core/JsonGenerator;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException

  protected java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput);
    descriptor: (Ljava/io/DataOutput;)Ljava/io/OutputStream;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class com/fasterxml/jackson/core/io/DataOutputAsStream
         3: dup
         4: aload_1
         5: invokespecial #3                  // Method com/fasterxml/jackson/core/io/DataOutputAsStream."<init>":(Ljava/io/DataOutput;)V
         8: areturn
      LineNumberTable:
        line 179: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;
            0       9     1   out   Ljava/io/DataOutput;

  protected java.io.InputStream _optimizedStreamFromURL(java.net.URL) throws java.io.IOException;
    descriptor: (Ljava/net/URL;)Ljava/io/InputStream;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=4, args_size=2
         0: ldc           #4                  // String file
         2: aload_1
         3: invokevirtual #5                  // Method java/net/URL.getProtocol:()Ljava/lang/String;
         6: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
         9: ifeq          54
        12: aload_1
        13: invokevirtual #7                  // Method java/net/URL.getHost:()Ljava/lang/String;
        16: astore_2
        17: aload_2
        18: ifnull        28
        21: aload_2
        22: invokevirtual #8                  // Method java/lang/String.length:()I
        25: ifne          54
        28: aload_1
        29: invokevirtual #9                  // Method java/net/URL.getPath:()Ljava/lang/String;
        32: astore_3
        33: aload_3
        34: bipush        37
        36: invokevirtual #10                 // Method java/lang/String.indexOf:(I)I
        39: ifge          54
        42: new           #11                 // class java/io/FileInputStream
        45: dup
        46: aload_1
        47: invokevirtual #9                  // Method java/net/URL.getPath:()Ljava/lang/String;
        50: invokespecial #12                 // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
        53: areturn
        54: aload_1
        55: invokevirtual #13                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
        58: areturn
      LineNumberTable:
        line 193: 0
        line 200: 12
        line 201: 17
        line 203: 28
        line 204: 33
        line 205: 42
        line 211: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           33      21     3  path   Ljava/lang/String;
           17      37     2  host   Ljava/lang/String;
            0      59     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;
            0      59     1   url   Ljava/net/URL;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 25
    Exceptions:
      throws java.io.IOException
}
SourceFile: "TokenStreamFactory.java"
InnerClasses:
  public static final #45= #44 of #111;   // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser
  public static final #45= #48 of #113;   // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator
