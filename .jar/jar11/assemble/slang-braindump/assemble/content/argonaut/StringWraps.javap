Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/StringWraps.class
  Last modified May 29, 2022; size 1851 bytes
  SHA-256 checksum 84f588a5deecb5ef627063515fcf041f96fe867e636f42d4eb2ceb36c36b4793
  Compiled from "StringWrap.scala"
public interface argonaut.StringWraps
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // argonaut/StringWraps
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 5, attributes: 5
Constant pool:
   #1 = Utf8               argonaut/StringWraps
   #2 = Class              #1             // argonaut/StringWraps
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               StringWrap.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u000552q\u0001B\u0003\u0011\u0002\u0007\u0005\u0001\u0002C\u0003\u0010\u0001\u0011\u0005\u0001\u0003C\u0003\u0015\u0001\u0011\rQ\u0003C\u0003(\u0001\u0011\r\u0001FA\u0006TiJLgnZ,sCB\u001c(\"\u0001\u0004\u0002\u0011\u0005\u0014xm\u001c8bkR\u001c\u0001a\u0005\u0002\u0001\u0013A\u0011!\"D\u0007\u0002\u0017)\tA\"A\u0003tG\u0006d\u0017-\u0003\u0002\u000f\u0017\t1\u0011I\\=SK\u001a\fa\u0001J5oSR$C#A\t\u0011\u0005)\u0011\u0012BA\n\f\u0005\u0011)f.\u001b;\u0002%M#(/\u001b8h)>\u001cFO]5oO^\u0013\u0018\r\u001d\u000b\u0003-i\u0001\"a\u0006\r\u000e\u0003\u0015I!!G\u0003\u0003\u0015M#(/\u001b8h/J\f\u0007\u000fC\u0003\u001c\u0005\u0001\u0007A$A\u0001t!\tiBE\u0004\u0002\u001fEA\u0011qdC\u0007\u0002A)\u0011\u0011eB\u0001\u0007yI|w\u000e\u001e \n\u0005\rZ\u0011A\u0002)sK\u0012,g-\u0003\u0002&M\t11\u000b\u001e:j]\u001eT!aI\u0006\u0002#M#(/\u001b8h)>\u0004\u0016M]:f/J\f\u0007\u000f\u0006\u0002*YA\u0019qC\u000b\u000f\n\u0005-*!!\u0003)beN,wK]1q\u0011\u0015Y2\u00011\u0001\u001d\u0001
   #9 = Utf8               argonaut/StringWraps$$anon$1
  #10 = Class              #9             // argonaut/StringWraps$$anon$1
  #11 = Utf8               StringToStringWrap$
  #12 = Utf8               (Largonaut/StringWraps;Ljava/lang/String;)Largonaut/StringWrap;
  #13 = Utf8               $this
  #14 = Utf8               s
  #15 = Utf8               StringToStringWrap
  #16 = Utf8               (Ljava/lang/String;)Largonaut/StringWrap;
  #17 = NameAndType        #15:#16        // StringToStringWrap:(Ljava/lang/String;)Largonaut/StringWrap;
  #18 = InterfaceMethodref #2.#17         // argonaut/StringWraps.StringToStringWrap:(Ljava/lang/String;)Largonaut/StringWrap;
  #19 = Utf8               Largonaut/StringWraps;
  #20 = Utf8               Ljava/lang/String;
  #21 = Utf8               <init>
  #22 = Utf8               (Largonaut/StringWraps;Ljava/lang/String;)V
  #23 = NameAndType        #21:#22        // "<init>":(Largonaut/StringWraps;Ljava/lang/String;)V
  #24 = Methodref          #10.#23        // argonaut/StringWraps$$anon$1."<init>":(Largonaut/StringWraps;Ljava/lang/String;)V
  #25 = Utf8               this
  #26 = Utf8               StringToParseWrap$
  #27 = Utf8               (Largonaut/StringWraps;Ljava/lang/String;)Largonaut/ParseWrap;
  #28 = Utf8               StringToParseWrap
  #29 = Utf8               (Ljava/lang/String;)Largonaut/ParseWrap;
  #30 = NameAndType        #28:#29        // StringToParseWrap:(Ljava/lang/String;)Largonaut/ParseWrap;
  #31 = InterfaceMethodref #2.#30         // argonaut/StringWraps.StringToParseWrap:(Ljava/lang/String;)Largonaut/ParseWrap;
  #32 = Utf8               (Ljava/lang/String;)Largonaut/ParseWrap<Ljava/lang/String;>;
  #33 = Utf8               argonaut/ParseWrap
  #34 = Class              #33            // argonaut/ParseWrap
  #35 = Utf8               argonaut/Parse$
  #36 = Class              #35            // argonaut/Parse$
  #37 = Utf8               MODULE$
  #38 = Utf8               Largonaut/Parse$;
  #39 = NameAndType        #37:#38        // MODULE$:Largonaut/Parse$;
  #40 = Fieldref           #36.#39        // argonaut/Parse$.MODULE$:Largonaut/Parse$;
  #41 = Utf8               (Ljava/lang/Object;Largonaut/Parse;)V
  #42 = NameAndType        #21:#41        // "<init>":(Ljava/lang/Object;Largonaut/Parse;)V
  #43 = Methodref          #34.#42        // argonaut/ParseWrap."<init>":(Ljava/lang/Object;Largonaut/Parse;)V
  #44 = Utf8               $init$
  #45 = Utf8               (Largonaut/StringWraps;)V
  #46 = Utf8               Code
  #47 = Utf8               LineNumberTable
  #48 = Utf8               LocalVariableTable
  #49 = Utf8               MethodParameters
  #50 = Utf8               Signature
  #51 = Utf8               InnerClasses
  #52 = Utf8               SourceFile
  #53 = Utf8               RuntimeVisibleAnnotations
  #54 = Utf8               ScalaInlineInfo
  #55 = Utf8               ScalaSig
{
  public static argonaut.StringWrap StringToStringWrap$(argonaut.StringWraps, java.lang.String);
    descriptor: (Largonaut/StringWraps;Ljava/lang/String;)Largonaut/StringWrap;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #18                 // InterfaceMethod StringToStringWrap:(Ljava/lang/String;)Largonaut/StringWrap;
         5: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/StringWraps;
            0       6     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public default argonaut.StringWrap StringToStringWrap(java.lang.String);
    descriptor: (Ljava/lang/String;)Largonaut/StringWrap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #10                 // class argonaut/StringWraps$$anon$1
         3: dup
         4: aconst_null
         5: aload_1
         6: invokespecial #24                 // Method argonaut/StringWraps$$anon$1."<init>":(Largonaut/StringWraps;Ljava/lang/String;)V
         9: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/StringWraps;
            0      10     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public static argonaut.ParseWrap StringToParseWrap$(argonaut.StringWraps, java.lang.String);
    descriptor: (Largonaut/StringWraps;Ljava/lang/String;)Largonaut/ParseWrap;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #31                 // InterfaceMethod StringToParseWrap:(Ljava/lang/String;)Largonaut/ParseWrap;
         5: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/StringWraps;
            0       6     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public default argonaut.ParseWrap<java.lang.String> StringToParseWrap(java.lang.String);
    descriptor: (Ljava/lang/String;)Largonaut/ParseWrap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #34                 // class argonaut/ParseWrap
         3: dup
         4: aload_1
         5: getstatic     #40                 // Field argonaut/Parse$.MODULE$:Largonaut/Parse$;
         8: invokespecial #43                 // Method argonaut/ParseWrap."<init>":(Ljava/lang/Object;Largonaut/Parse;)V
        11: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/StringWraps;
            0      12     1     s   Ljava/lang/String;
    Signature: #32                          // (Ljava/lang/String;)Largonaut/ParseWrap<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public static void $init$(argonaut.StringWraps);
    descriptor: (Largonaut/StringWraps;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Largonaut/StringWraps;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public final #10;                       // class argonaut/StringWraps$$anon$1
SourceFile: "StringWrap.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u000552q\u0001B\u0003\u0011\u0002\u0007\u0005\u0001\u0002C\u0003\u0010\u0001\u0011\u0005\u0001\u0003C\u0003\u0015\u0001\u0011\rQ\u0003C\u0003(\u0001\u0011\r\u0001FA\u0006TiJLgnZ,sCB\u001c(\"\u0001\u0004\u0002\u0011\u0005\u0014xm\u001c8bkR\u001c\u0001a\u0005\u0002\u0001\u0013A\u0011!\"D\u0007\u0002\u0017)\tA\"A\u0003tG\u0006d\u0017-\u0003\u0002\u000f\u0017\t1\u0011I\\=SK\u001a\fa\u0001J5oSR$C#A\t\u0011\u0005)\u0011\u0012BA\n\f\u0005\u0011)f.\u001b;\u0002%M#(/\u001b8h)>\u001cFO]5oO^\u0013\u0018\r\u001d\u000b\u0003-i\u0001\"a\u0006\r\u000e\u0003\u0015I!!G\u0003\u0003\u0015M#(/\u001b8h/J\f\u0007\u000fC\u0003\u001c\u0005\u0001\u0007A$A\u0001t!\tiBE\u0004\u0002\u001fEA\u0011qdC\u0007\u0002A)\u0011\u0011eB\u0001\u0007yI|w\u000e\u001e \n\u0005\rZ\u0011A\u0002)sK\u0012,g-\u0003\u0002&M\t11\u000b\u001e:j]\u001eT!aI\u0006\u0002#M#(/\u001b8h)>\u0004\u0016M]:f/J\f\u0007\u000f\u0006\u0002*YA\u0019qC\u000b\u000f\n\u0005-*!!\u0003)beN,wK]1q\u0011\u0015Y2\u00011\u0001\u001d\u0001"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 2C 00 2D 01 00 1C 00 1D 00 00 1A
   00 1B 01 00 0F 00 10 00 00 0B 00 0C 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
