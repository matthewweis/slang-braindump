Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/util/Try$.class
  Last modified May 29, 2022; size 1423 bytes
  SHA-256 checksum 4683e1e8bb708d4c3ce475e52a64990f250cf24ca50ab02cbd949f55d25f8d05
  Compiled from "Try.scala"
public final class scala.util.Try$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/util/Try$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 4, attributes: 3
Constant pool:
   #1 = Utf8               scala/util/Try$
   #2 = Class              #1             // scala/util/Try$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               java/io/Serializable
   #6 = Class              #5             // java/io/Serializable
   #7 = Utf8               Try.scala
   #8 = Utf8               MODULE$
   #9 = Utf8               Lscala/util/Try$;
  #10 = Utf8               <clinit>
  #11 = Utf8               ()V
  #12 = Utf8               <init>
  #13 = NameAndType        #12:#11        // "<init>":()V
  #14 = Methodref          #2.#13         // scala/util/Try$."<init>":()V
  #15 = NameAndType        #8:#9          // MODULE$:Lscala/util/Try$;
  #16 = Fieldref           #2.#15         // scala/util/Try$.MODULE$:Lscala/util/Try$;
  #17 = Utf8               apply
  #18 = Utf8               (Lscala/Function0;)Lscala/util/Try;
  #19 = Utf8               <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)Lscala/util/Try<TT;>;
  #20 = Utf8               r
  #21 = Utf8               java/lang/Throwable
  #22 = Class              #21            // java/lang/Throwable
  #23 = Utf8               scala/util/Success
  #24 = Class              #23            // scala/util/Success
  #25 = Utf8               scala/Function0
  #26 = Class              #25            // scala/Function0
  #27 = Utf8               ()Ljava/lang/Object;
  #28 = NameAndType        #17:#27        // apply:()Ljava/lang/Object;
  #29 = InterfaceMethodref #26.#28        // scala/Function0.apply:()Ljava/lang/Object;
  #30 = Utf8               (Ljava/lang/Object;)V
  #31 = NameAndType        #12:#30        // "<init>":(Ljava/lang/Object;)V
  #32 = Methodref          #24.#31        // scala/util/Success."<init>":(Ljava/lang/Object;)V
  #33 = Utf8               scala/util/control/NonFatal$
  #34 = Class              #33            // scala/util/control/NonFatal$
  #35 = Utf8               Lscala/util/control/NonFatal$;
  #36 = NameAndType        #8:#35         // MODULE$:Lscala/util/control/NonFatal$;
  #37 = Fieldref           #34.#36        // scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
  #38 = Utf8               unapply
  #39 = Utf8               (Ljava/lang/Throwable;)Lscala/Option;
  #40 = NameAndType        #38:#39        // unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #41 = Methodref          #34.#40        // scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #42 = Utf8               scala/Option
  #43 = Class              #42            // scala/Option
  #44 = Utf8               isEmpty
  #45 = Utf8               ()Z
  #46 = NameAndType        #44:#45        // isEmpty:()Z
  #47 = Methodref          #43.#46        // scala/Option.isEmpty:()Z
  #48 = Utf8               get
  #49 = NameAndType        #48:#27        // get:()Ljava/lang/Object;
  #50 = Methodref          #43.#49        // scala/Option.get:()Ljava/lang/Object;
  #51 = Utf8               scala/util/Failure
  #52 = Class              #51            // scala/util/Failure
  #53 = Utf8               (Ljava/lang/Throwable;)V
  #54 = NameAndType        #12:#53        // "<init>":(Ljava/lang/Throwable;)V
  #55 = Methodref          #52.#54        // scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
  #56 = Utf8               e
  #57 = Utf8               Ljava/lang/Throwable;
  #58 = Utf8               this
  #59 = Utf8               Lscala/Function0;
  #60 = Utf8               writeReplace
  #61 = Utf8               scala/runtime/ModuleSerializationProxy
  #62 = Class              #61            // scala/runtime/ModuleSerializationProxy
  #63 = Utf8               (Ljava/lang/Class;)V
  #64 = NameAndType        #12:#63        // "<init>":(Ljava/lang/Class;)V
  #65 = Methodref          #62.#64        // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #66 = Methodref          #4.#13         // java/lang/Object."<init>":()V
  #67 = Utf8               Code
  #68 = Utf8               LineNumberTable
  #69 = Utf8               StackMapTable
  #70 = Utf8               LocalVariableTable
  #71 = Utf8               Signature
  #72 = Utf8               MethodParameters
  #73 = Utf8               SourceFile
  #74 = Utf8               ScalaInlineInfo
  #75 = Utf8               Scala
{
  public static final scala.util.Try$ MODULE$;
    descriptor: Lscala/util/Try$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/util/Try$
         3: dup
         4: invokespecial #14                 // Method "<init>":()V
         7: putstatic     #16                 // Field MODULE$:Lscala/util/Try$;
        10: return
      LineNumberTable:
        line 204: 0

  public <T extends java.lang.Object> scala.util.Try<T> apply(scala.Function0<T>);
    descriptor: (Lscala/Function0;)Lscala/util/Try;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=2
         0: new           #24                 // class scala/util/Success
         3: dup
         4: aload_1
         5: invokeinterface #29,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        10: invokespecial #32                 // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
        13: areturn
        14: astore_3
        15: aload_3
        16: ifnull        59
        19: getstatic     #37                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
        22: aload_3
        23: invokevirtual #41                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
        26: astore        4
        28: aload         4
        30: invokevirtual #47                 // Method scala/Option.isEmpty:()Z
        33: ifne          59
        36: aload         4
        38: invokevirtual #50                 // Method scala/Option.get:()Ljava/lang/Object;
        41: checkcast     #22                 // class java/lang/Throwable
        44: astore        5
        46: new           #52                 // class scala/util/Failure
        49: dup
        50: aload         5
        52: invokespecial #55                 // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
        55: astore_2
        56: goto          61
        59: aload_3
        60: athrow
        61: aload_2
        62: areturn
      Exception table:
         from    to  target type
             0    13    14   Class java/lang/Throwable
      StackMapTable: number_of_entries = 3
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/util/Try$, class scala/Function0, class scala/util/Failure, class java/lang/Throwable, class scala/Option, class java/lang/Throwable ]
          stack = []
      LineNumberTable:
        line 210: 0
        line 211: 15
        line 210: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           46      13     5     e   Ljava/lang/Throwable;
            0      63     0  this   Lscala/util/Try$;
            0      63     1     r   Lscala/Function0;
    Signature: #19                          // <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)Lscala/util/Try<TT;>;
    MethodParameters:
      Name                           Flags
      r                              final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #62                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class scala/util/Try$
         6: invokespecial #65                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 204: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/Try$;

  private scala.util.Try$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #66                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 204: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Try$;
}
SourceFile: "Try.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 0C 00 0B 01 00 11 00 12 01 00 3C
   00 1B 01
  Scala: length = 0x0 (unknown attribute)

