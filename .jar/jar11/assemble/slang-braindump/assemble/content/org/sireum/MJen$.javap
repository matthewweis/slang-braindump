Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/MJen$.class
  Last modified May 29, 2022; size 6051 bytes
  SHA-256 checksum cf7f6611d2828127985985867d81e619a1c25c006ede225235a1cf471cdf67cb
  Compiled from "MJen.scala"
public final class org.sireum.MJen$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/MJen$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 16, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/MJen$
    #2 = Class              #1            // org/sireum/MJen$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               MJen.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/MJen$Internal$
   #12 = Class              #11           // org/sireum/MJen$Internal$
   #13 = Utf8               org/sireum/MJen
   #14 = Class              #13           // org/sireum/MJen
   #15 = Utf8               Internal$
   #16 = Utf8               org/sireum/MJen$Internal$HashMapImpl
   #17 = Class              #16           // org/sireum/MJen$Internal$HashMapImpl
   #18 = Utf8               HashMapImpl
   #19 = Utf8               org/sireum/MJen$Internal$HashMapImpl$
   #20 = Class              #19           // org/sireum/MJen$Internal$HashMapImpl$
   #21 = Utf8               HashMapImpl$
   #22 = Utf8               org/sireum/MJen$Internal$ISImpl
   #23 = Class              #22           // org/sireum/MJen$Internal$ISImpl
   #24 = Utf8               ISImpl
   #25 = Utf8               org/sireum/MJen$Internal$ISImpl$
   #26 = Class              #25           // org/sireum/MJen$Internal$ISImpl$
   #27 = Utf8               ISImpl$
   #28 = Utf8               org/sireum/MJen$Internal$MSImpl
   #29 = Class              #28           // org/sireum/MJen$Internal$MSImpl
   #30 = Utf8               MSImpl
   #31 = Utf8               org/sireum/MJen$Internal$MSImpl$
   #32 = Class              #31           // org/sireum/MJen$Internal$MSImpl$
   #33 = Utf8               MSImpl$
   #34 = Utf8               org/sireum/MJen$Internal$MapImpl
   #35 = Class              #34           // org/sireum/MJen$Internal$MapImpl
   #36 = Utf8               MapImpl
   #37 = Utf8               org/sireum/MJen$Internal$MapImpl$
   #38 = Class              #37           // org/sireum/MJen$Internal$MapImpl$
   #39 = Utf8               MapImpl$
   #40 = Utf8               MODULE$
   #41 = Utf8               Lorg/sireum/MJen$;
   #42 = Utf8               Continue
   #43 = Utf8               Z
   #44 = Utf8               End
   #45 = Utf8               <clinit>
   #46 = Utf8               ()V
   #47 = Utf8               <init>
   #48 = NameAndType        #47:#46       // "<init>":()V
   #49 = Methodref          #2.#48        // org/sireum/MJen$."<init>":()V
   #50 = NameAndType        #40:#41       // MODULE$:Lorg/sireum/MJen$;
   #51 = Fieldref           #2.#50        // org/sireum/MJen$.MODULE$:Lorg/sireum/MJen$;
   #52 = Utf8               org/sireum/package$
   #53 = Class              #52           // org/sireum/package$
   #54 = Utf8               Lorg/sireum/package$;
   #55 = NameAndType        #40:#54       // MODULE$:Lorg/sireum/package$;
   #56 = Fieldref           #53.#55       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #57 = Utf8               T
   #58 = Utf8               ()Z
   #59 = NameAndType        #57:#58       // T:()Z
   #60 = Methodref          #53.#59       // org/sireum/package$.T:()Z
   #61 = NameAndType        #42:#43       // Continue:Z
   #62 = Fieldref           #2.#61        // org/sireum/MJen$.Continue:Z
   #63 = Utf8               F
   #64 = NameAndType        #63:#58       // F:()Z
   #65 = Methodref          #53.#64       // org/sireum/package$.F:()Z
   #66 = NameAndType        #44:#43       // End:Z
   #67 = Fieldref           #2.#66        // org/sireum/MJen$.End:Z
   #68 = Utf8               this
   #69 = Utf8               IS
   #70 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/MJen;
   #71 = Utf8               <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;)Lorg/sireum/MJen<TT;>;
   #72 = Utf8               s
   #73 = Utf8               org/sireum/helper$
   #74 = Class              #73           // org/sireum/helper$
   #75 = Utf8               Lorg/sireum/helper$;
   #76 = NameAndType        #40:#75       // MODULE$:Lorg/sireum/helper$;
   #77 = Fieldref           #74.#76       // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
   #78 = Utf8               Lorg/sireum/MJen$Internal$ISImpl$;
   #79 = NameAndType        #40:#78       // MODULE$:Lorg/sireum/MJen$Internal$ISImpl$;
   #80 = Fieldref           #26.#79       // org/sireum/MJen$Internal$ISImpl$.MODULE$:Lorg/sireum/MJen$Internal$ISImpl$;
   #81 = Utf8               apply
   #82 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/MJen$Internal$ISImpl;
   #83 = NameAndType        #81:#82       // apply:(Lorg/sireum/IS;)Lorg/sireum/MJen$Internal$ISImpl;
   #84 = Methodref          #26.#83       // org/sireum/MJen$Internal$ISImpl$.apply:(Lorg/sireum/IS;)Lorg/sireum/MJen$Internal$ISImpl;
   #85 = Utf8               retMut
   #86 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
   #87 = NameAndType        #85:#86       // retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
   #88 = Methodref          #74.#87       // org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
   #89 = Utf8               Lorg/sireum/IS;
   #90 = Utf8               MS
   #91 = Utf8               (Lorg/sireum/MS;)Lorg/sireum/MJen;
   #92 = Utf8               <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TT;>;)Lorg/sireum/MJen<TT;>;
   #93 = Utf8               Lorg/sireum/MJen$Internal$MSImpl$;
   #94 = NameAndType        #40:#93       // MODULE$:Lorg/sireum/MJen$Internal$MSImpl$;
   #95 = Fieldref           #32.#94       // org/sireum/MJen$Internal$MSImpl$.MODULE$:Lorg/sireum/MJen$Internal$MSImpl$;
   #96 = Utf8               (Lorg/sireum/MS;)Lorg/sireum/MJen$Internal$MSImpl;
   #97 = NameAndType        #81:#96       // apply:(Lorg/sireum/MS;)Lorg/sireum/MJen$Internal$MSImpl;
   #98 = Methodref          #32.#97       // org/sireum/MJen$Internal$MSImpl$.apply:(Lorg/sireum/MS;)Lorg/sireum/MJen$Internal$MSImpl;
   #99 = Utf8               Lorg/sireum/MS;
  #100 = Utf8               Map
  #101 = Utf8               (Lorg/sireum/Map;)Lorg/sireum/MJen;
  #102 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TT;>;)Lorg/sireum/MJen<Lscala/Tuple2<TK;TT;>;>;
  #103 = Utf8               m
  #104 = Utf8               Lorg/sireum/MJen$Internal$MapImpl$;
  #105 = NameAndType        #40:#104      // MODULE$:Lorg/sireum/MJen$Internal$MapImpl$;
  #106 = Fieldref           #38.#105      // org/sireum/MJen$Internal$MapImpl$.MODULE$:Lorg/sireum/MJen$Internal$MapImpl$;
  #107 = Utf8               (Lorg/sireum/Map;)Lorg/sireum/MJen$Internal$MapImpl;
  #108 = NameAndType        #81:#107      // apply:(Lorg/sireum/Map;)Lorg/sireum/MJen$Internal$MapImpl;
  #109 = Methodref          #38.#108      // org/sireum/MJen$Internal$MapImpl$.apply:(Lorg/sireum/Map;)Lorg/sireum/MJen$Internal$MapImpl;
  #110 = Utf8               Lorg/sireum/Map;
  #111 = Utf8               Set
  #112 = Utf8               (Lorg/sireum/Set;)Lorg/sireum/MJen;
  #113 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/Set<TT;>;)Lorg/sireum/MJen<TT;>;
  #114 = Utf8               org/sireum/Set
  #115 = Class              #114          // org/sireum/Set
  #116 = Utf8               elements
  #117 = Utf8               ()Lorg/sireum/IS;
  #118 = NameAndType        #116:#117     // elements:()Lorg/sireum/IS;
  #119 = Methodref          #115.#118     // org/sireum/Set.elements:()Lorg/sireum/IS;
  #120 = Utf8               Lorg/sireum/Set;
  #121 = Utf8               HashMap
  #122 = Utf8               (Lorg/sireum/HashMap;)Lorg/sireum/MJen;
  #123 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashMap<TK;TT;>;)Lorg/sireum/MJen<Lscala/Tuple2<TK;TT;>;>;
  #124 = Utf8               Lorg/sireum/MJen$Internal$HashMapImpl$;
  #125 = NameAndType        #40:#124      // MODULE$:Lorg/sireum/MJen$Internal$HashMapImpl$;
  #126 = Fieldref           #20.#125      // org/sireum/MJen$Internal$HashMapImpl$.MODULE$:Lorg/sireum/MJen$Internal$HashMapImpl$;
  #127 = Utf8               (Lorg/sireum/HashMap;)Lorg/sireum/MJen$Internal$HashMapImpl;
  #128 = NameAndType        #81:#127      // apply:(Lorg/sireum/HashMap;)Lorg/sireum/MJen$Internal$HashMapImpl;
  #129 = Methodref          #20.#128      // org/sireum/MJen$Internal$HashMapImpl$.apply:(Lorg/sireum/HashMap;)Lorg/sireum/MJen$Internal$HashMapImpl;
  #130 = Utf8               Lorg/sireum/HashMap;
  #131 = Utf8               HashSet
  #132 = Utf8               (Lorg/sireum/HashSet;)Lorg/sireum/MJen;
  #133 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/HashSet<TT;>;)Lorg/sireum/MJen<TT;>;
  #134 = Utf8               org/sireum/HashSet
  #135 = Class              #134          // org/sireum/HashSet
  #136 = Utf8               map
  #137 = Utf8               ()Lorg/sireum/HashMap;
  #138 = NameAndType        #136:#137     // map:()Lorg/sireum/HashMap;
  #139 = Methodref          #135.#138     // org/sireum/HashSet.map:()Lorg/sireum/HashMap;
  #140 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #141 = MethodType         #140          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #142 = Utf8               $anonfun$HashSet$1
  #143 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #144 = NameAndType        #142:#143     // $anonfun$HashSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
  #145 = Methodref          #2.#144       // org/sireum/MJen$.$anonfun$HashSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
  #146 = MethodHandle       6:#145        // REF_invokeStatic org/sireum/MJen$.$anonfun$HashSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
  #147 = MethodType         #143          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #148 = Integer            5
  #149 = Integer            1
  #150 = Utf8               java/lang/invoke/LambdaMetafactory
  #151 = Class              #150          // java/lang/invoke/LambdaMetafactory
  #152 = Utf8               altMetafactory
  #153 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #154 = NameAndType        #152:#153     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #155 = Methodref          #151.#154     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #156 = MethodHandle       6:#155        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #157 = Utf8               ()Lscala/Function1;
  #158 = NameAndType        #81:#157      // apply:()Lscala/Function1;
  #159 = InvokeDynamic      #0:#158       // #0:apply:()Lscala/Function1;
  #160 = Utf8               (Lscala/Function1;)Lorg/sireum/MJen;
  #161 = NameAndType        #136:#160     // map:(Lscala/Function1;)Lorg/sireum/MJen;
  #162 = Methodref          #17.#161      // org/sireum/MJen$Internal$HashMapImpl.map:(Lscala/Function1;)Lorg/sireum/MJen;
  #163 = Utf8               Lorg/sireum/HashSet;
  #164 = Utf8               HashSMap
  #165 = Utf8               (Lorg/sireum/HashSMap;)Lorg/sireum/MJen;
  #166 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashSMap<TK;TT;>;)Lorg/sireum/MJen<Lscala/Tuple2<TK;TT;>;>;
  #167 = Utf8               org/sireum/HashSMap
  #168 = Class              #167          // org/sireum/HashSMap
  #169 = Utf8               keys
  #170 = NameAndType        #169:#117     // keys:()Lorg/sireum/IS;
  #171 = Methodref          #168.#170     // org/sireum/HashSMap.keys:()Lorg/sireum/IS;
  #172 = NameAndType        #69:#70       // IS:(Lorg/sireum/IS;)Lorg/sireum/MJen;
  #173 = Methodref          #2.#172       // org/sireum/MJen$.IS:(Lorg/sireum/IS;)Lorg/sireum/MJen;
  #174 = Utf8               $anonfun$HashSMap$1
  #175 = Utf8               (Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
  #176 = NameAndType        #174:#175     // $anonfun$HashSMap$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
  #177 = Methodref          #2.#176       // org/sireum/MJen$.$anonfun$HashSMap$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
  #178 = MethodHandle       6:#177        // REF_invokeStatic org/sireum/MJen$.$anonfun$HashSMap$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
  #179 = Utf8               (Ljava/lang/Object;)Lscala/Tuple2;
  #180 = MethodType         #179          //  (Ljava/lang/Object;)Lscala/Tuple2;
  #181 = Utf8               (Lorg/sireum/HashSMap;)Lscala/Function1;
  #182 = NameAndType        #81:#181      // apply:(Lorg/sireum/HashSMap;)Lscala/Function1;
  #183 = InvokeDynamic      #1:#182       // #1:apply:(Lorg/sireum/HashSMap;)Lscala/Function1;
  #184 = InterfaceMethodref #14.#161      // org/sireum/MJen.map:(Lscala/Function1;)Lorg/sireum/MJen;
  #185 = Utf8               Lorg/sireum/HashSMap;
  #186 = Utf8               HashSSet
  #187 = Utf8               (Lorg/sireum/HashSSet;)Lorg/sireum/MJen;
  #188 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/HashSSet<TT;>;)Lorg/sireum/MJen<TT;>;
  #189 = Utf8               org/sireum/HashSSet
  #190 = Class              #189          // org/sireum/HashSSet
  #191 = Utf8               ()Lorg/sireum/HashSMap;
  #192 = NameAndType        #136:#191     // map:()Lorg/sireum/HashSMap;
  #193 = Methodref          #190.#192     // org/sireum/HashSSet.map:()Lorg/sireum/HashSMap;
  #194 = NameAndType        #164:#165     // HashSMap:(Lorg/sireum/HashSMap;)Lorg/sireum/MJen;
  #195 = Methodref          #2.#194       // org/sireum/MJen$.HashSMap:(Lorg/sireum/HashSMap;)Lorg/sireum/MJen;
  #196 = Utf8               $anonfun$HashSSet$1
  #197 = NameAndType        #196:#143     // $anonfun$HashSSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
  #198 = Methodref          #2.#197       // org/sireum/MJen$.$anonfun$HashSSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
  #199 = MethodHandle       6:#198        // REF_invokeStatic org/sireum/MJen$.$anonfun$HashSSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
  #200 = InvokeDynamic      #2:#158       // #2:apply:()Lscala/Function1;
  #201 = Utf8               Lorg/sireum/HashSSet;
  #202 = Utf8               p
  #203 = Utf8               scala/Tuple2
  #204 = Class              #203          // scala/Tuple2
  #205 = Utf8               _1
  #206 = Utf8               ()Ljava/lang/Object;
  #207 = NameAndType        #205:#206     // _1:()Ljava/lang/Object;
  #208 = Methodref          #204.#207     // scala/Tuple2._1:()Ljava/lang/Object;
  #209 = Utf8               Lscala/Tuple2;
  #210 = Utf8               m$1
  #211 = Utf8               k
  #212 = Utf8               get
  #213 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
  #214 = NameAndType        #212:#213     // get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #215 = Methodref          #168.#214     // org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #216 = Utf8               org/sireum/Option
  #217 = Class              #216          // org/sireum/Option
  #218 = NameAndType        #212:#206     // get:()Ljava/lang/Object;
  #219 = InterfaceMethodref #217.#218     // org/sireum/Option.get:()Ljava/lang/Object;
  #220 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #221 = NameAndType        #47:#220      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #222 = Methodref          #204.#221     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #223 = Utf8               Ljava/lang/Object;
  #224 = Methodref          #4.#48        // java/lang/Object."<init>":()V
  #225 = Utf8               $deserializeLambda$
  #226 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #227 = Utf8               scala/runtime/LambdaDeserialize
  #228 = Class              #227          // scala/runtime/LambdaDeserialize
  #229 = Utf8               bootstrap
  #230 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #231 = NameAndType        #229:#230     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #232 = Methodref          #228.#231     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #233 = MethodHandle       6:#232        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #234 = Utf8               lambdaDeserialize
  #235 = NameAndType        #234:#226     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #236 = InvokeDynamic      #3:#235       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #237 = Utf8               Code
  #238 = Utf8               LineNumberTable
  #239 = Utf8               LocalVariableTable
  #240 = Utf8               Signature
  #241 = Utf8               MethodParameters
  #242 = Utf8               InnerClasses
  #243 = Utf8               SourceFile
  #244 = Utf8               BootstrapMethods
  #245 = Utf8               ScalaInlineInfo
  #246 = Utf8               Scala
{
  public static final org.sireum.MJen$ MODULE$;
    descriptor: Lorg/sireum/MJen$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final boolean Continue;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean End;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/MJen$
         3: dup
         4: invokespecial #49                 // Method "<init>":()V
         7: putstatic     #51                 // Field MODULE$:Lorg/sireum/MJen$;
        10: getstatic     #56                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        13: invokevirtual #60                 // Method org/sireum/package$.T:()Z
        16: putstatic     #62                 // Field Continue:Z
        19: getstatic     #56                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        22: invokevirtual #65                 // Method org/sireum/package$.F:()Z
        25: putstatic     #67                 // Field End:Z
        28: return
      LineNumberTable:
        line 223: 0
        line 226: 10
        line 227: 19
        line 223: 28

  public boolean Continue();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #62                 // Field Continue:Z
         3: ireturn
      LineNumberTable:
        line 226: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MJen$;

  public boolean End();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #67                 // Field End:Z
         3: ireturn
      LineNumberTable:
        line 227: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MJen$;

  public <I extends java.lang.Object, T extends java.lang.Object> org.sireum.MJen<T> IS(org.sireum.IS<I, T>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #77                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #80                 // Field org/sireum/MJen$Internal$ISImpl$.MODULE$:Lorg/sireum/MJen$Internal$ISImpl$;
         6: aload_1
         7: invokevirtual #84                 // Method org/sireum/MJen$Internal$ISImpl$.apply:(Lorg/sireum/IS;)Lorg/sireum/MJen$Internal$ISImpl;
        10: invokevirtual #88                 // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        13: checkcast     #23                 // class org/sireum/MJen$Internal$ISImpl
        16: areturn
      LineNumberTable:
        line 526: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/MJen$;
            0      17     1     s   Lorg/sireum/IS;
    Signature: #71                          // <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;)Lorg/sireum/MJen<TT;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public <I extends java.lang.Object, T extends java.lang.Object> org.sireum.MJen<T> MS(org.sireum.MS<I, T>);
    descriptor: (Lorg/sireum/MS;)Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #77                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #95                 // Field org/sireum/MJen$Internal$MSImpl$.MODULE$:Lorg/sireum/MJen$Internal$MSImpl$;
         6: aload_1
         7: invokevirtual #98                 // Method org/sireum/MJen$Internal$MSImpl$.apply:(Lorg/sireum/MS;)Lorg/sireum/MJen$Internal$MSImpl;
        10: invokevirtual #88                 // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        13: checkcast     #29                 // class org/sireum/MJen$Internal$MSImpl
        16: areturn
      LineNumberTable:
        line 530: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/MJen$;
            0      17     1     s   Lorg/sireum/MS;
    Signature: #92                          // <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TT;>;)Lorg/sireum/MJen<TT;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public <K extends java.lang.Object, T extends java.lang.Object> org.sireum.MJen<scala.Tuple2<K, T>> Map(org.sireum.Map<K, T>);
    descriptor: (Lorg/sireum/Map;)Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #77                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #106                // Field org/sireum/MJen$Internal$MapImpl$.MODULE$:Lorg/sireum/MJen$Internal$MapImpl$;
         6: aload_1
         7: invokevirtual #109                // Method org/sireum/MJen$Internal$MapImpl$.apply:(Lorg/sireum/Map;)Lorg/sireum/MJen$Internal$MapImpl;
        10: invokevirtual #88                 // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        13: checkcast     #35                 // class org/sireum/MJen$Internal$MapImpl
        16: areturn
      LineNumberTable:
        line 534: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/MJen$;
            0      17     1     m   Lorg/sireum/Map;
    Signature: #102                         // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TT;>;)Lorg/sireum/MJen<Lscala/Tuple2<TK;TT;>;>;
    MethodParameters:
      Name                           Flags
      m                              final

  public <T extends java.lang.Object> org.sireum.MJen<T> Set(org.sireum.Set<T>);
    descriptor: (Lorg/sireum/Set;)Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #77                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #80                 // Field org/sireum/MJen$Internal$ISImpl$.MODULE$:Lorg/sireum/MJen$Internal$ISImpl$;
         6: aload_1
         7: invokevirtual #119                // Method org/sireum/Set.elements:()Lorg/sireum/IS;
        10: invokevirtual #84                 // Method org/sireum/MJen$Internal$ISImpl$.apply:(Lorg/sireum/IS;)Lorg/sireum/MJen$Internal$ISImpl;
        13: invokevirtual #88                 // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        16: checkcast     #23                 // class org/sireum/MJen$Internal$ISImpl
        19: areturn
      LineNumberTable:
        line 538: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/sireum/MJen$;
            0      20     1     s   Lorg/sireum/Set;
    Signature: #113                         // <T:Ljava/lang/Object;>(Lorg/sireum/Set<TT;>;)Lorg/sireum/MJen<TT;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public <K extends java.lang.Object, T extends java.lang.Object> org.sireum.MJen<scala.Tuple2<K, T>> HashMap(org.sireum.HashMap<K, T>);
    descriptor: (Lorg/sireum/HashMap;)Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #77                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #126                // Field org/sireum/MJen$Internal$HashMapImpl$.MODULE$:Lorg/sireum/MJen$Internal$HashMapImpl$;
         6: aload_1
         7: invokevirtual #129                // Method org/sireum/MJen$Internal$HashMapImpl$.apply:(Lorg/sireum/HashMap;)Lorg/sireum/MJen$Internal$HashMapImpl;
        10: invokevirtual #88                 // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        13: checkcast     #17                 // class org/sireum/MJen$Internal$HashMapImpl
        16: areturn
      LineNumberTable:
        line 542: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/MJen$;
            0      17     1     m   Lorg/sireum/HashMap;
    Signature: #123                         // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashMap<TK;TT;>;)Lorg/sireum/MJen<Lscala/Tuple2<TK;TT;>;>;
    MethodParameters:
      Name                           Flags
      m                              final

  public <T extends java.lang.Object> org.sireum.MJen<T> HashSet(org.sireum.HashSet<T>);
    descriptor: (Lorg/sireum/HashSet;)Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #77                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #126                // Field org/sireum/MJen$Internal$HashMapImpl$.MODULE$:Lorg/sireum/MJen$Internal$HashMapImpl$;
         6: aload_1
         7: invokevirtual #139                // Method org/sireum/HashSet.map:()Lorg/sireum/HashMap;
        10: invokevirtual #129                // Method org/sireum/MJen$Internal$HashMapImpl$.apply:(Lorg/sireum/HashMap;)Lorg/sireum/MJen$Internal$HashMapImpl;
        13: invokedynamic #159,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        18: invokevirtual #162                // Method org/sireum/MJen$Internal$HashMapImpl.map:(Lscala/Function1;)Lorg/sireum/MJen;
        21: invokevirtual #88                 // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        24: checkcast     #14                 // class org/sireum/MJen
        27: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lorg/sireum/MJen$;
            0      28     1     s   Lorg/sireum/HashSet;
    Signature: #133                         // <T:Ljava/lang/Object;>(Lorg/sireum/HashSet<TT;>;)Lorg/sireum/MJen<TT;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public <K extends java.lang.Object, T extends java.lang.Object> org.sireum.MJen<scala.Tuple2<K, T>> HashSMap(org.sireum.HashSMap<K, T>);
    descriptor: (Lorg/sireum/HashSMap;)Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #77                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: aload_0
         4: aload_1
         5: invokevirtual #171                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
         8: invokevirtual #173                // Method IS:(Lorg/sireum/IS;)Lorg/sireum/MJen;
        11: aload_1
        12: invokedynamic #183,  0            // InvokeDynamic #1:apply:(Lorg/sireum/HashSMap;)Lscala/Function1;
        17: invokeinterface #184,  2          // InterfaceMethod org/sireum/MJen.map:(Lscala/Function1;)Lorg/sireum/MJen;
        22: invokevirtual #88                 // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        25: checkcast     #14                 // class org/sireum/MJen
        28: areturn
      LineNumberTable:
        line 550: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/sireum/MJen$;
            0      29     1     m   Lorg/sireum/HashSMap;
    Signature: #166                         // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashSMap<TK;TT;>;)Lorg/sireum/MJen<Lscala/Tuple2<TK;TT;>;>;
    MethodParameters:
      Name                           Flags
      m                              final

  public <T extends java.lang.Object> org.sireum.MJen<T> HashSSet(org.sireum.HashSSet<T>);
    descriptor: (Lorg/sireum/HashSSet;)Lorg/sireum/MJen;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #77                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: aload_0
         4: aload_1
         5: invokevirtual #193                // Method org/sireum/HashSSet.map:()Lorg/sireum/HashSMap;
         8: invokevirtual #195                // Method HashSMap:(Lorg/sireum/HashSMap;)Lorg/sireum/MJen;
        11: invokedynamic #200,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        16: invokeinterface #184,  2          // InterfaceMethod org/sireum/MJen.map:(Lscala/Function1;)Lorg/sireum/MJen;
        21: invokevirtual #88                 // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        24: checkcast     #14                 // class org/sireum/MJen
        27: areturn
      LineNumberTable:
        line 554: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lorg/sireum/MJen$;
            0      28     1     s   Lorg/sireum/HashSSet;
    Signature: #188                         // <T:Ljava/lang/Object;>(Lorg/sireum/HashSSet<TT;>;)Lorg/sireum/MJen<TT;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public static final java.lang.Object $anonfun$HashSet$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #208                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      p                              final

  public static final scala.Tuple2 $anonfun$HashSMap$1(org.sireum.HashSMap, java.lang.Object);
    descriptor: (Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #204                // class scala/Tuple2
         3: dup
         4: aload_1
         5: aload_0
         6: aload_1
         7: invokevirtual #215                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        10: invokeinterface #219,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        15: invokespecial #222                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        18: areturn
      LineNumberTable:
        line 550: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0   m$1   Lorg/sireum/HashSMap;
            0      19     1     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      m$1                            final
      k                              final

  public static final java.lang.Object $anonfun$HashSSet$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #208                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 554: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      p                              final

  private org.sireum.MJen$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #224                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MJen$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #236,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // Internal$=class org/sireum/MJen$Internal$ of class org/sireum/MJen
  public static final #18= #17 of #12;    // HashMapImpl=class org/sireum/MJen$Internal$HashMapImpl of class org/sireum/MJen$Internal$
  public static #21= #20 of #12;          // HashMapImpl$=class org/sireum/MJen$Internal$HashMapImpl$ of class org/sireum/MJen$Internal$
  public static final #24= #23 of #12;    // ISImpl=class org/sireum/MJen$Internal$ISImpl of class org/sireum/MJen$Internal$
  public static #27= #26 of #12;          // ISImpl$=class org/sireum/MJen$Internal$ISImpl$ of class org/sireum/MJen$Internal$
  public static final #30= #29 of #12;    // MSImpl=class org/sireum/MJen$Internal$MSImpl of class org/sireum/MJen$Internal$
  public static #33= #32 of #12;          // MSImpl$=class org/sireum/MJen$Internal$MSImpl$ of class org/sireum/MJen$Internal$
  public static final #36= #35 of #12;    // MapImpl=class org/sireum/MJen$Internal$MapImpl of class org/sireum/MJen$Internal$
  public static #39= #38 of #12;          // MapImpl$=class org/sireum/MJen$Internal$MapImpl$ of class org/sireum/MJen$Internal$
SourceFile: "MJen.scala"
BootstrapMethods:
  0: #156 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #146 REF_invokeStatic org/sireum/MJen$.$anonfun$HashSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
      #147 (Lscala/Tuple2;)Ljava/lang/Object;
      #148 5
      #149 1
      #147 (Lscala/Tuple2;)Ljava/lang/Object;
  1: #156 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #178 REF_invokeStatic org/sireum/MJen$.$anonfun$HashSMap$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
      #180 (Ljava/lang/Object;)Lscala/Tuple2;
      #148 5
      #149 1
      #180 (Ljava/lang/Object;)Lscala/Tuple2;
  2: #156 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #199 REF_invokeStatic org/sireum/MJen$.$anonfun$HashSSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
      #147 (Lscala/Tuple2;)Ljava/lang/Object;
      #148 5
      #149 1
      #147 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #233 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 REF_invokeStatic org/sireum/MJen$.$anonfun$HashSMap$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
      #199 REF_invokeStatic org/sireum/MJen$.$anonfun$HashSSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
      #146 REF_invokeStatic org/sireum/MJen$.$anonfun$HashSet$1:(Lscala/Tuple2;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x4A (unknown attribute)
   01 01 00 0E 00 AE 00 AF 01 00 C4 00 8F 01 00 8E
   00 8F 01 00 2F 00 2E 01 00 2A 00 3A 01 00 2C 00
   3A 01 00 79 00 7A 01 00 A4 00 A5 01 00 BA 00 BB
   01 00 83 00 84 01 00 45 00 46 01 00 5A 00 5B 01
   00 64 00 65 01 00 6F 00 70 01
  Scala: length = 0x0 (unknown attribute)

