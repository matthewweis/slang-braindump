Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/OrElse.class
  Last modified May 29, 2022; size 3228 bytes
  SHA-256 checksum b2054a5551574a3ee7c17df414a6eccc8e7de9c2ec08b3f093f640174eded194
  Compiled from "orelse.scala"
public interface shapeless.OrElse<A extends java.lang.Object, B extends java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // shapeless/OrElse
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 8, attributes: 7
Constant pool:
    #1 = Utf8               shapeless/OrElse
    #2 = Class              #1            // shapeless/OrElse
    #3 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               orelse.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005a3q\u0001C\u0005\u0011\u0002\u0007\u0005B\u0002C\u0003\u0015\u0001\u0011\u0005Q\u0003C\u0003\u001a\u0001\u0019\u0005!\u0004C\u00036\u0001\u0011\u0005agB\u0003F\u0013!\u0005aIB\u0003\t\u0013!\u0005\u0001\nC\u0003M\u000b\u0011\u0005Q\nC\u0003O\u000b\u0011\rqJ\u0001\u0004Pe\u0016c7/\u001a\u0006\u0002\u0015\u0005I1\u000f[1qK2,7o]\u0002\u0001+\riQfM\n\u0003\u00019\u0001\"a\u0004\n\u000e\u0003AQ\u0011!E\u0001\u0006g\u000e\fG.Y\u0005\u0003\'A\u0011a!\u00118z%\u00164\u0017A\u0002\u0013j]&$H\u0005F\u0001\u0017!\tyq#\u0003\u0002\u0019!\t!QK\\5u\u0003\u00111w\u000e\u001c3\u0016\u0005mqBc\u0001\u000f(_A\u0011QD\b\u0007\u0001\t\u0015y\"A1\u0001!\u0005\u0005\u0019\u0015CA\u0011%!\ty!%\u0003\u0002$!\t9aj\u001c;iS:<\u0007CA\b&\u0013\t1\u0003CA\u0002B]fDQ\u0001\u000b\u0002A\u0002%\nA\u0001\u001d:j[B!qB\u000b\u0017\u001d\u0013\tY\u0003CA\u0005Gk:\u001cG/[8ocA\u0011Q$\f\u0003\u0007]\u0001!)\u0019\u0001\u0011\u0003\u0003\u0005CQ\u0001\r\u0002A\u0002E\n1a]3d!\u0011y!F\r\u000f\u0011\u0005u\u0019DA\u0002\u001b\u0001\t\u000b\u0007\u0001EA\u0001C\u0003\u0015)h.\u001b4z+\t9\u0014\b\u0006\u00029wA\u0011Q$\u000f\u0003\u0006?\r\u0011\rAO\t\u0003Y\u0011BQ\u0001P\u0002A\u0004u\n!!\u001a<\u0011\t=q$\u0007O\u0005\u0003\u007fA\u0011\u0001\u0003\n7fgN$3m\u001c7p]\u0012bWm]:*\u0007\u0001\t5)\u0003\u0002C\u0013\t9\u0001K]5nCJL\u0018B\u0001#\n\u0005%\u0019VmY8oI\u0006\u0014\u00180\u0001\u0004Pe\u0016c7/\u001a\t\u0003\u000f\u0016i\u0011!C\n\u0003\u000b%\u0003\"a\u0012&\n\u0005-K!aB(s\u000b2\u001cX\rM\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003\u0019\u000bq\u0001\u001d:j[\u0006\u0014\u00180F\u0002Q\'V#\"!\u0015,\u0011\t\u001d\u0003!\u000b\u0016\t\u0003;M#QAL\u0004C\u0002\u0001\u0002\"!H+\u0005\u000bQ:!\u0019\u0001\u0011\t\u000b];\u00019\u0001*\u0002\u0003\u0005\u0004
   #10 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #11 = Class              #10           // java/lang/invoke/MethodHandles$Lookup
   #12 = Utf8               java/lang/invoke/MethodHandles
   #13 = Class              #12           // java/lang/invoke/MethodHandles
   #14 = Utf8               Lookup
   #15 = Utf8               primary
   #16 = Utf8               (Ljava/lang/Object;)Lshapeless/OrElse;
   #17 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(TA;)Lshapeless/OrElse<TA;TB;>;
   #18 = Utf8               a
   #19 = Utf8               shapeless/OrElse$
   #20 = Class              #19           // shapeless/OrElse$
   #21 = Utf8               MODULE$
   #22 = Utf8               Lshapeless/OrElse$;
   #23 = NameAndType        #21:#22       // MODULE$:Lshapeless/OrElse$;
   #24 = Fieldref           #20.#23       // shapeless/OrElse$.MODULE$:Lshapeless/OrElse$;
   #25 = NameAndType        #15:#16       // primary:(Ljava/lang/Object;)Lshapeless/OrElse;
   #26 = Methodref          #20.#25       // shapeless/OrElse$.primary:(Ljava/lang/Object;)Lshapeless/OrElse;
   #27 = Utf8               secondary
   #28 = Utf8               (Lshapeless/Lazy;)Lshapeless/OrElse;
   #29 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lshapeless/Lazy<TB;>;)Lshapeless/OrElse<TA;TB;>;
   #30 = Utf8               b
   #31 = NameAndType        #27:#28       // secondary:(Lshapeless/Lazy;)Lshapeless/OrElse;
   #32 = Methodref          #20.#31       // shapeless/OrElse$.secondary:(Lshapeless/Lazy;)Lshapeless/OrElse;
   #33 = Utf8               fold
   #34 = Utf8               (Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
   #35 = Utf8               <C:Ljava/lang/Object;>(Lscala/Function1<TA;TC;>;Lscala/Function1<TB;TC;>;)TC;
   #36 = Utf8               prim
   #37 = Utf8               sec
   #38 = Utf8               unify$
   #39 = Utf8               (Lshapeless/OrElse;Lscala/$less$colon$less;)Ljava/lang/Object;
   #40 = Utf8               $this
   #41 = Utf8               ev
   #42 = Utf8               unify
   #43 = Utf8               (Lscala/$less$colon$less;)Ljava/lang/Object;
   #44 = NameAndType        #42:#43       // unify:(Lscala/$less$colon$less;)Ljava/lang/Object;
   #45 = InterfaceMethodref #2.#44        // shapeless/OrElse.unify:(Lscala/$less$colon$less;)Ljava/lang/Object;
   #46 = Utf8               Lshapeless/OrElse;
   #47 = Utf8               Lscala/$less$colon$less;
   #48 = Utf8               <C:Ljava/lang/Object;>(Lscala/$less$colon$less<TB;TC;>;)TC;
   #49 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #50 = MethodType         #49           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #51 = Utf8               $anonfun$unify$1
   #52 = NameAndType        #51:#49       // $anonfun$unify$1:(Ljava/lang/Object;)Ljava/lang/Object;
   #53 = InterfaceMethodref #2.#52        // shapeless/OrElse.$anonfun$unify$1:(Ljava/lang/Object;)Ljava/lang/Object;
   #54 = MethodHandle       6:#53         // REF_invokeStatic shapeless/OrElse.$anonfun$unify$1:(Ljava/lang/Object;)Ljava/lang/Object;
   #55 = Integer            1
   #56 = Utf8               java/lang/invoke/LambdaMetafactory
   #57 = Class              #56           // java/lang/invoke/LambdaMetafactory
   #58 = Utf8               altMetafactory
   #59 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #60 = NameAndType        #58:#59       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #61 = Methodref          #57.#60       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #62 = MethodHandle       6:#61         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #63 = Utf8               apply
   #64 = Utf8               ()Lscala/Function1;
   #65 = NameAndType        #63:#64       // apply:()Lscala/Function1;
   #66 = InvokeDynamic      #0:#65        // #0:apply:()Lscala/Function1;
   #67 = NameAndType        #33:#34       // fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
   #68 = InterfaceMethodref #2.#67        // shapeless/OrElse.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
   #69 = Utf8               this
   #70 = Utf8               x
   #71 = Utf8               scala/Predef$
   #72 = Class              #71           // scala/Predef$
   #73 = Utf8               Lscala/Predef$;
   #74 = NameAndType        #21:#73       // MODULE$:Lscala/Predef$;
   #75 = Fieldref           #72.#74       // scala/Predef$.MODULE$:Lscala/Predef$;
   #76 = Utf8               identity
   #77 = NameAndType        #76:#49       // identity:(Ljava/lang/Object;)Ljava/lang/Object;
   #78 = Methodref          #72.#77       // scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
   #79 = Utf8               Ljava/lang/Object;
   #80 = Utf8               $init$
   #81 = Utf8               (Lshapeless/OrElse;)V
   #82 = Utf8               $deserializeLambda$
   #83 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #84 = Utf8               scala/runtime/LambdaDeserialize
   #85 = Class              #84           // scala/runtime/LambdaDeserialize
   #86 = Utf8               bootstrap
   #87 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #88 = NameAndType        #86:#87       // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #89 = Methodref          #85.#88       // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #90 = MethodHandle       6:#89         // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #91 = Utf8               lambdaDeserialize
   #92 = NameAndType        #91:#83       // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #93 = InvokeDynamic      #1:#92        // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #94 = Utf8               Code
   #95 = Utf8               Signature
   #96 = Utf8               MethodParameters
   #97 = Utf8               LineNumberTable
   #98 = Utf8               LocalVariableTable
   #99 = Utf8               InnerClasses
  #100 = Utf8               SourceFile
  #101 = Utf8               RuntimeVisibleAnnotations
  #102 = Utf8               BootstrapMethods
  #103 = Utf8               ScalaInlineInfo
  #104 = Utf8               ScalaSig
{
  public static <A extends java.lang.Object, B extends java.lang.Object> shapeless.OrElse<A, B> primary(A);
    descriptor: (Ljava/lang/Object;)Lshapeless/OrElse;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #24                 // Field shapeless/OrElse$.MODULE$:Lshapeless/OrElse$;
         3: aload_0
         4: invokevirtual #26                 // Method shapeless/OrElse$.primary:(Ljava/lang/Object;)Lshapeless/OrElse;
         7: areturn
    Signature: #17                          // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(TA;)Lshapeless/OrElse<TA;TB;>;
    MethodParameters:
      Name                           Flags
      a                              final

  public static <A extends java.lang.Object, B extends java.lang.Object> shapeless.OrElse<A, B> secondary(shapeless.Lazy<B>);
    descriptor: (Lshapeless/Lazy;)Lshapeless/OrElse;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #24                 // Field shapeless/OrElse$.MODULE$:Lshapeless/OrElse$;
         3: aload_0
         4: invokevirtual #32                 // Method shapeless/OrElse$.secondary:(Lshapeless/Lazy;)Lshapeless/OrElse;
         7: areturn
    Signature: #29                          // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lshapeless/Lazy<TB;>;)Lshapeless/OrElse<TA;TB;>;
    MethodParameters:
      Name                           Flags
      b                              final

  public abstract <C extends java.lang.Object> C fold(scala.Function1<A, C>, scala.Function1<B, C>);
    descriptor: (Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #35                          // <C:Ljava/lang/Object;>(Lscala/Function1<TA;TC;>;Lscala/Function1<TB;TC;>;)TC;
    MethodParameters:
      Name                           Flags
      prim                           final
      sec                            final

  public static java.lang.Object unify$(shapeless.OrElse, scala.$less$colon$less);
    descriptor: (Lshapeless/OrElse;Lscala/$less$colon$less;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #45                 // InterfaceMethod unify:(Lscala/$less$colon$less;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lshapeless/OrElse;
            0       6     1    ev   Lscala/$less$colon$less;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      ev                             final

  public default <C extends java.lang.Object> C unify(scala.$less$colon$less<B, C>);
    descriptor: (Lscala/$less$colon$less;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokedynamic #66,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
         6: aload_1
         7: invokeinterface #68,  3           // InterfaceMethod fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lshapeless/OrElse;
            0      13     1    ev   Lscala/$less$colon$less;
    Signature: #48                          // <C:Ljava/lang/Object;>(Lscala/$less$colon$less<TB;TC;>;)TC;
    MethodParameters:
      Name                           Flags
      ev                             final

  public static java.lang.Object $anonfun$unify$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #78                 // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public static void $init$(shapeless.OrElse);
    descriptor: (Lshapeless/OrElse;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lshapeless/OrElse;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #93,  0             // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #14= #11 of #13;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // <A:Ljava/lang/Object;B:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "orelse.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005a3q\u0001C\u0005\u0011\u0002\u0007\u0005B\u0002C\u0003\u0015\u0001\u0011\u0005Q\u0003C\u0003\u001a\u0001\u0019\u0005!\u0004C\u00036\u0001\u0011\u0005agB\u0003F\u0013!\u0005aIB\u0003\t\u0013!\u0005\u0001\nC\u0003M\u000b\u0011\u0005Q\nC\u0003O\u000b\u0011\rqJ\u0001\u0004Pe\u0016c7/\u001a\u0006\u0002\u0015\u0005I1\u000f[1qK2,7o]\u0002\u0001+\riQfM\n\u0003\u00019\u0001\"a\u0004\n\u000e\u0003AQ\u0011!E\u0001\u0006g\u000e\fG.Y\u0005\u0003\'A\u0011a!\u00118z%\u00164\u0017A\u0002\u0013j]&$H\u0005F\u0001\u0017!\tyq#\u0003\u0002\u0019!\t!QK\\5u\u0003\u00111w\u000e\u001c3\u0016\u0005mqBc\u0001\u000f(_A\u0011QD\b\u0007\u0001\t\u0015y\"A1\u0001!\u0005\u0005\u0019\u0015CA\u0011%!\ty!%\u0003\u0002$!\t9aj\u001c;iS:<\u0007CA\b&\u0013\t1\u0003CA\u0002B]fDQ\u0001\u000b\u0002A\u0002%\nA\u0001\u001d:j[B!qB\u000b\u0017\u001d\u0013\tY\u0003CA\u0005Gk:\u001cG/[8ocA\u0011Q$\f\u0003\u0007]\u0001!)\u0019\u0001\u0011\u0003\u0003\u0005CQ\u0001\r\u0002A\u0002E\n1a]3d!\u0011y!F\r\u000f\u0011\u0005u\u0019DA\u0002\u001b\u0001\t\u000b\u0007\u0001EA\u0001C\u0003\u0015)h.\u001b4z+\t9\u0014\b\u0006\u00029wA\u0011Q$\u000f\u0003\u0006?\r\u0011\rAO\t\u0003Y\u0011BQ\u0001P\u0002A\u0004u\n!!\u001a<\u0011\t=q$\u0007O\u0005\u0003\u007fA\u0011\u0001\u0003\n7fgN$3m\u001c7p]\u0012bWm]:*\u0007\u0001\t5)\u0003\u0002C\u0013\t9\u0001K]5nCJL\u0018B\u0001#\n\u0005%\u0019VmY8oI\u0006\u0014\u00180\u0001\u0004Pe\u0016c7/\u001a\t\u0003\u000f\u0016i\u0011!C\n\u0003\u000b%\u0003\"a\u0012&\n\u0005-K!aB(s\u000b2\u001cX\rM\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003\u0019\u000bq\u0001\u001d:j[\u0006\u0014\u00180F\u0002Q\'V#\"!\u0015,\u0011\t\u001d\u0003!\u000b\u0016\t\u0003;M#QAL\u0004C\u0002\u0001\u0002\"!H+\u0005\u000bQ:!\u0019\u0001\u0011\t\u000b];\u00019\u0001*\u0002\u0003\u0005\u0004"
    )
BootstrapMethods:
  0: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #50 (Ljava/lang/Object;)Ljava/lang/Object;
      #54 REF_invokeStatic shapeless/OrElse.$anonfun$unify$1:(Ljava/lang/Object;)Ljava/lang/Object;
      #50 (Ljava/lang/Object;)Ljava/lang/Object;
      #55 1
  1: #90 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #54 REF_invokeStatic shapeless/OrElse.$anonfun$unify$1:(Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 33 00 31 01 00 50 00 51 01 00 21
   00 22 00 00 26 00 27 01 00 2A 00 2B 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
