Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalactic/NormMethods$Normalizer.class
  Last modified May 29, 2022; size 1136 bytes
  SHA-256 checksum 643d662a5fca5a7a63dcfac86a7c9e8e75a027302a0ff30436b82d26776f0495
  Compiled from "NormMethods.scala"
public final class org.scalactic.NormMethods$Normalizer<T extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalactic/NormMethods$Normalizer
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 2, attributes: 5
Constant pool:
   #1 = Utf8               org/scalactic/NormMethods$Normalizer
   #2 = Class              #1             // org/scalactic/NormMethods$Normalizer
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               NormMethods.scala
   #7 = Utf8               org/scalactic/NormMethods
   #8 = Class              #7             // org/scalactic/NormMethods
   #9 = Utf8               Normalizer
  #10 = Utf8               o
  #11 = Utf8               Ljava/lang/Object;
  #12 = Utf8               TT;
  #13 = Utf8               normalization
  #14 = Utf8               Lorg/scalactic/Normalization;
  #15 = Utf8               Lorg/scalactic/Normalization<TT;>;
  #16 = Utf8               norm
  #17 = Utf8               ()Ljava/lang/Object;
  #18 = Utf8               ()TT;
  #19 = NameAndType        #13:#14        // normalization:Lorg/scalactic/Normalization;
  #20 = Fieldref           #2.#19         // org/scalactic/NormMethods$Normalizer.normalization:Lorg/scalactic/Normalization;
  #21 = NameAndType        #10:#11        // o:Ljava/lang/Object;
  #22 = Fieldref           #2.#21         // org/scalactic/NormMethods$Normalizer.o:Ljava/lang/Object;
  #23 = Utf8               org/scalactic/Normalization
  #24 = Class              #23            // org/scalactic/Normalization
  #25 = Utf8               normalized
  #26 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #27 = NameAndType        #25:#26        // normalized:(Ljava/lang/Object;)Ljava/lang/Object;
  #28 = InterfaceMethodref #24.#27        // org/scalactic/Normalization.normalized:(Ljava/lang/Object;)Ljava/lang/Object;
  #29 = Utf8               this
  #30 = Utf8               Lorg/scalactic/NormMethods$Normalizer;
  #31 = Utf8               <init>
  #32 = Utf8               (Lorg/scalactic/NormMethods;Ljava/lang/Object;Lorg/scalactic/Normalization;)V
  #33 = Utf8               (TT;Lorg/scalactic/Normalization<TT;>;)V
  #34 = Utf8               $outer
  #35 = Utf8               ()V
  #36 = NameAndType        #31:#35        // "<init>":()V
  #37 = Methodref          #5.#36         // java/lang/Object."<init>":()V
  #38 = Utf8               Lorg/scalactic/NormMethods;
  #39 = Utf8               Signature
  #40 = Utf8               Code
  #41 = Utf8               LineNumberTable
  #42 = Utf8               LocalVariableTable
  #43 = Utf8               MethodParameters
  #44 = Utf8               InnerClasses
  #45 = Utf8               SourceFile
  #46 = Utf8               ScalaInlineInfo
  #47 = Utf8               Scala
{
  private final T o;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // TT;

  private final org.scalactic.Normalization<T> normalization;
    descriptor: Lorg/scalactic/Normalization;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #15                          // Lorg/scalactic/Normalization<TT;>;

  public T norm();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #20                 // Field normalization:Lorg/scalactic/Normalization;
         4: aload_0
         5: getfield      #22                 // Field o:Ljava/lang/Object;
         8: invokeinterface #28,  2           // InterfaceMethod org/scalactic/Normalization.normalized:(Ljava/lang/Object;)Ljava/lang/Object;
        13: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/scalactic/NormMethods$Normalizer;
    Signature: #18                          // ()TT;

  public org.scalactic.NormMethods$Normalizer(T, org.scalactic.Normalization<T>);
    descriptor: (Lorg/scalactic/NormMethods;Ljava/lang/Object;Lorg/scalactic/Normalization;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_2
         2: putfield      #22                 // Field o:Ljava/lang/Object;
         5: aload_0
         6: aload_3
         7: putfield      #20                 // Field normalization:Lorg/scalactic/Normalization;
        10: aload_0
        11: invokespecial #37                 // Method java/lang/Object."<init>":()V
        14: return
      LineNumberTable:
        line 55: 0
        line 66: 10
        line 55: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/scalactic/NormMethods$Normalizer;
            0      15     1 $outer   Lorg/scalactic/NormMethods;
            0      15     2     o   Ljava/lang/Object;
            0      15     3 normalization   Lorg/scalactic/Normalization;
    Signature: #33                          // (TT;Lorg/scalactic/Normalization<TT;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      o                              final
      normalization                  final
}
InnerClasses:
  public final #9= #2 of #8;              // Normalizer=class org/scalactic/NormMethods$Normalizer of class org/scalactic/NormMethods
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "NormMethods.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 01 00 02 00 1F 00 20 01 00 10 00 11 01
  Scala: length = 0x0 (unknown attribute)

