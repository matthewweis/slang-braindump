Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/Asm_Ext$SecurityManager$MVisitor.class
  Last modified May 29, 2022; size 1446 bytes
  SHA-256 checksum e97b24ea86ee7fa2e7c09db69491c6332d9526abae3b1e47276b0e7253102aca
  Compiled from "Asm_Ext.scala"
public class org.sireum.Asm_Ext$SecurityManager$MVisitor extends org.objectweb.asm.MethodVisitor
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/Asm_Ext$SecurityManager$MVisitor
  super_class: #4                         // org/objectweb/asm/MethodVisitor
  interfaces: 0, fields: 1, methods: 2, attributes: 4
Constant pool:
   #1 = Utf8               org/sireum/Asm_Ext$SecurityManager$MVisitor
   #2 = Class              #1             // org/sireum/Asm_Ext$SecurityManager$MVisitor
   #3 = Utf8               org/objectweb/asm/MethodVisitor
   #4 = Class              #3             // org/objectweb/asm/MethodVisitor
   #5 = Utf8               Asm_Ext.scala
   #6 = Utf8               org/sireum/Asm_Ext$SecurityManager$
   #7 = Class              #6             // org/sireum/Asm_Ext$SecurityManager$
   #8 = Utf8               org/sireum/Asm_Ext
   #9 = Class              #8             // org/sireum/Asm_Ext
  #10 = Utf8               SecurityManager$
  #11 = Utf8               MVisitor
  #12 = Utf8               visitor
  #13 = Utf8               Lorg/objectweb/asm/MethodVisitor;
  #14 = Utf8               visitMethodInsn
  #15 = Utf8               (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
  #16 = Utf8               opcode
  #17 = Utf8               owner
  #18 = Utf8               name
  #19 = Utf8               descriptor
  #20 = Utf8               isInterface
  #21 = Utf8               java/lang/System
  #22 = String             #21            // java/lang/System
  #23 = Utf8               java/lang/Object
  #24 = Class              #23            // java/lang/Object
  #25 = Utf8               equals
  #26 = Utf8               (Ljava/lang/Object;)Z
  #27 = NameAndType        #25:#26        // equals:(Ljava/lang/Object;)Z
  #28 = Methodref          #24.#27        // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #29 = Utf8               setSecurityManager
  #30 = String             #29            // setSecurityManager
  #31 = NameAndType        #12:#13        // visitor:Lorg/objectweb/asm/MethodVisitor;
  #32 = Fieldref           #2.#31         // org/sireum/Asm_Ext$SecurityManager$MVisitor.visitor:Lorg/objectweb/asm/MethodVisitor;
  #33 = Utf8               visitInsn
  #34 = Utf8               (I)V
  #35 = NameAndType        #33:#34        // visitInsn:(I)V
  #36 = Methodref          #4.#35         // org/objectweb/asm/MethodVisitor.visitInsn:(I)V
  #37 = NameAndType        #14:#15        // visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
  #38 = Methodref          #4.#37         // org/objectweb/asm/MethodVisitor.visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
  #39 = Utf8               this
  #40 = Utf8               Lorg/sireum/Asm_Ext$SecurityManager$MVisitor;
  #41 = Utf8               I
  #42 = Utf8               Ljava/lang/String;
  #43 = Utf8               Z
  #44 = Utf8               java/lang/String
  #45 = Class              #44            // java/lang/String
  #46 = Utf8               <init>
  #47 = Utf8               (Lorg/objectweb/asm/MethodVisitor;)V
  #48 = Utf8               org/sireum/Asm_Ext$
  #49 = Class              #48            // org/sireum/Asm_Ext$
  #50 = Utf8               MODULE$
  #51 = Utf8               Lorg/sireum/Asm_Ext$;
  #52 = NameAndType        #50:#51        // MODULE$:Lorg/sireum/Asm_Ext$;
  #53 = Fieldref           #49.#52        // org/sireum/Asm_Ext$.MODULE$:Lorg/sireum/Asm_Ext$;
  #54 = Utf8               api
  #55 = Utf8               ()I
  #56 = NameAndType        #54:#55        // api:()I
  #57 = Methodref          #49.#56        // org/sireum/Asm_Ext$.api:()I
  #58 = Utf8               (ILorg/objectweb/asm/MethodVisitor;)V
  #59 = NameAndType        #46:#58        // "<init>":(ILorg/objectweb/asm/MethodVisitor;)V
  #60 = Methodref          #4.#59         // org/objectweb/asm/MethodVisitor."<init>":(ILorg/objectweb/asm/MethodVisitor;)V
  #61 = Utf8               Code
  #62 = Utf8               StackMapTable
  #63 = Utf8               LineNumberTable
  #64 = Utf8               LocalVariableTable
  #65 = Utf8               MethodParameters
  #66 = Utf8               InnerClasses
  #67 = Utf8               SourceFile
  #68 = Utf8               ScalaInlineInfo
  #69 = Utf8               Scala
{
  private final org.objectweb.asm.MethodVisitor visitor;
    descriptor: Lorg/objectweb/asm/MethodVisitor;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean);
    descriptor: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=8, args_size=6
         0: iload_1
         1: sipush        184
         4: if_icmpne     71
         7: aload_2
         8: ldc           #22                 // String java/lang/System
        10: astore        6
        12: dup
        13: ifnonnull     25
        16: pop
        17: aload         6
        19: ifnull        33
        22: goto          71
        25: aload         6
        27: invokevirtual #28                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        30: ifeq          71
        33: aload_3
        34: ldc           #30                 // String setSecurityManager
        36: astore        7
        38: dup
        39: ifnonnull     51
        42: pop
        43: aload         7
        45: ifnull        59
        48: goto          71
        51: aload         7
        53: invokevirtual #28                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          71
        59: aload_0
        60: getfield      #32                 // Field visitor:Lorg/objectweb/asm/MethodVisitor;
        63: bipush        87
        65: invokevirtual #36                 // Method org/objectweb/asm/MethodVisitor.visitInsn:(I)V
        68: goto          85
        71: aload_0
        72: getfield      #32                 // Field visitor:Lorg/objectweb/asm/MethodVisitor;
        75: iload_1
        76: aload_2
        77: aload_3
        78: aload         4
        80: iload         5
        82: invokevirtual #38                 // Method org/objectweb/asm/MethodVisitor.visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
        85: return
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class org/sireum/Asm_Ext$SecurityManager$MVisitor, int, class java/lang/String, class java/lang/String, class java/lang/String, int, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class org/sireum/Asm_Ext$SecurityManager$MVisitor, int, class java/lang/String, class java/lang/String, class java/lang/String, int, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 11
        frame_type = 13 /* same */
      LineNumberTable:
        line 146: 0
        line 147: 59
        line 149: 71
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      86     0  this   Lorg/sireum/Asm_Ext$SecurityManager$MVisitor;
            0      86     1 opcode   I
            0      86     2 owner   Ljava/lang/String;
            0      86     3  name   Ljava/lang/String;
            0      86     4 descriptor   Ljava/lang/String;
            0      86     5 isInterface   Z
    MethodParameters:
      Name                           Flags
      opcode                         final
      owner                          final
      name                           final
      descriptor                     final
      isInterface                    final

  public org.sireum.Asm_Ext$SecurityManager$MVisitor(org.objectweb.asm.MethodVisitor);
    descriptor: (Lorg/objectweb/asm/MethodVisitor;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #32                 // Field visitor:Lorg/objectweb/asm/MethodVisitor;
         5: aload_0
         6: getstatic     #53                 // Field org/sireum/Asm_Ext$.MODULE$:Lorg/sireum/Asm_Ext$;
         9: invokevirtual #57                 // Method org/sireum/Asm_Ext$.api:()I
        12: aload_1
        13: invokespecial #60                 // Method org/objectweb/asm/MethodVisitor."<init>":(ILorg/objectweb/asm/MethodVisitor;)V
        16: return
      LineNumberTable:
        line 144: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/Asm_Ext$SecurityManager$MVisitor;
            0      17     1 visitor   Lorg/objectweb/asm/MethodVisitor;
    MethodParameters:
      Name                           Flags
      visitor                        final
}
InnerClasses:
  public static #10= #7 of #9;            // SecurityManager$=class org/sireum/Asm_Ext$SecurityManager$ of class org/sireum/Asm_Ext
  public static #11= #2 of #7;            // MVisitor=class org/sireum/Asm_Ext$SecurityManager$MVisitor of class org/sireum/Asm_Ext$SecurityManager$
SourceFile: "Asm_Ext.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 00 00 02 00 2E 00 2F 00 00 0E 00 0F 00
  Scala: length = 0x0 (unknown attribute)

