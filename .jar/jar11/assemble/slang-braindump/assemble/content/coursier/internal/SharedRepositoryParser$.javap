Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/internal/SharedRepositoryParser$.class
  Last modified May 29, 2022; size 4949 bytes
  SHA-256 checksum 30d4d1ef6fd5340d0aaa7aad39a3f30ed13730cd65cd8fb0c7c6d9c785b8a382
  Compiled from "SharedRepositoryParser.scala"
public final class coursier.internal.SharedRepositoryParser$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/internal/SharedRepositoryParser$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 3
Constant pool:
    #1 = Utf8               coursier/internal/SharedRepositoryParser$
    #2 = Class              #1            // coursier/internal/SharedRepositoryParser$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               SharedRepositoryParser.scala
    #6 = Utf8               MODULE$
    #7 = Utf8               Lcoursier/internal/SharedRepositoryParser$;
    #8 = Utf8               <clinit>
    #9 = Utf8               ()V
   #10 = Utf8               <init>
   #11 = NameAndType        #10:#9        // "<init>":()V
   #12 = Methodref          #2.#11        // coursier/internal/SharedRepositoryParser$."<init>":()V
   #13 = NameAndType        #6:#7         // MODULE$:Lcoursier/internal/SharedRepositoryParser$;
   #14 = Fieldref           #2.#13        // coursier/internal/SharedRepositoryParser$.MODULE$:Lcoursier/internal/SharedRepositoryParser$;
   #15 = Utf8               repository
   #16 = Utf8               (Ljava/lang/String;)Lscala/util/Either;
   #17 = Utf8               (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/core/Repository;>;
   #18 = Utf8               s
   #19 = Utf8               central
   #20 = String             #19           // central
   #21 = Utf8               java/lang/String
   #22 = Class              #21           // java/lang/String
   #23 = Utf8               equals
   #24 = Utf8               (Ljava/lang/Object;)Z
   #25 = NameAndType        #23:#24       // equals:(Ljava/lang/Object;)Z
   #26 = Methodref          #4.#25        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #27 = Utf8               scala/package$
   #28 = Class              #27           // scala/package$
   #29 = Utf8               Lscala/package$;
   #30 = NameAndType        #6:#29        // MODULE$:Lscala/package$;
   #31 = Fieldref           #28.#30       // scala/package$.MODULE$:Lscala/package$;
   #32 = Utf8               Right
   #33 = Utf8               ()Lscala/util/Right$;
   #34 = NameAndType        #32:#33       // Right:()Lscala/util/Right$;
   #35 = Methodref          #28.#34       // scala/package$.Right:()Lscala/util/Right$;
   #36 = Utf8               coursier/Repositories$
   #37 = Class              #36           // coursier/Repositories$
   #38 = Utf8               Lcoursier/Repositories$;
   #39 = NameAndType        #6:#38        // MODULE$:Lcoursier/Repositories$;
   #40 = Fieldref           #37.#39       // coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
   #41 = Utf8               ()Lcoursier/maven/MavenRepository;
   #42 = NameAndType        #19:#41       // central:()Lcoursier/maven/MavenRepository;
   #43 = Methodref          #37.#42       // coursier/Repositories$.central:()Lcoursier/maven/MavenRepository;
   #44 = Utf8               scala/util/Right$
   #45 = Class              #44           // scala/util/Right$
   #46 = Utf8               apply
   #47 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
   #48 = NameAndType        #46:#47       // apply:(Ljava/lang/Object;)Lscala/util/Right;
   #49 = Methodref          #45.#48       // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
   #50 = Utf8               sonatype:
   #51 = String             #50           // sonatype:
   #52 = Utf8               startsWith
   #53 = Utf8               (Ljava/lang/String;)Z
   #54 = NameAndType        #52:#53       // startsWith:(Ljava/lang/String;)Z
   #55 = Methodref          #22.#54       // java/lang/String.startsWith:(Ljava/lang/String;)Z
   #56 = Utf8               scala/collection/StringOps$
   #57 = Class              #56           // scala/collection/StringOps$
   #58 = Utf8               Lscala/collection/StringOps$;
   #59 = NameAndType        #6:#58        // MODULE$:Lscala/collection/StringOps$;
   #60 = Fieldref           #57.#59       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #61 = Utf8               scala/Predef$
   #62 = Class              #61           // scala/Predef$
   #63 = Utf8               Lscala/Predef$;
   #64 = NameAndType        #6:#63        // MODULE$:Lscala/Predef$;
   #65 = Fieldref           #62.#64       // scala/Predef$.MODULE$:Lscala/Predef$;
   #66 = Utf8               augmentString
   #67 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #68 = NameAndType        #66:#67       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #69 = Methodref          #62.#68       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #70 = Utf8               stripPrefix$extension
   #71 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #72 = NameAndType        #70:#71       // stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #73 = Methodref          #57.#72       // scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #74 = Utf8               sonatype
   #75 = Utf8               (Ljava/lang/String;)Lcoursier/maven/MavenRepository;
   #76 = NameAndType        #74:#75       // sonatype:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
   #77 = Methodref          #37.#76       // coursier/Repositories$.sonatype:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
   #78 = Utf8               bintray:
   #79 = String             #78           // bintray:
   #80 = Utf8               /
   #81 = String             #80           // /
   #82 = Utf8               contains
   #83 = Utf8               (Ljava/lang/CharSequence;)Z
   #84 = NameAndType        #82:#83       // contains:(Ljava/lang/CharSequence;)Z
   #85 = Methodref          #22.#84       // java/lang/String.contains:(Ljava/lang/CharSequence;)Z
   #86 = Utf8               java/lang/StringBuilder
   #87 = Class              #86           // java/lang/StringBuilder
   #88 = Integer            6
   #89 = Utf8               (I)V
   #90 = NameAndType        #10:#89       // "<init>":(I)V
   #91 = Methodref          #87.#90       // java/lang/StringBuilder."<init>":(I)V
   #92 = Utf8               append
   #93 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #94 = NameAndType        #92:#93       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #95 = Methodref          #87.#94       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #96 = Utf8               /maven
   #97 = String             #96           // /maven
   #98 = Utf8               toString
   #99 = Utf8               ()Ljava/lang/String;
  #100 = NameAndType        #98:#99       // toString:()Ljava/lang/String;
  #101 = Methodref          #87.#100      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #102 = Utf8               bintray
  #103 = NameAndType        #102:#75      // bintray:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #104 = Methodref          #37.#103      // coursier/Repositories$.bintray:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #105 = Utf8               bintray-ivy:
  #106 = String             #105          // bintray-ivy:
  #107 = Utf8               bintrayIvy
  #108 = Utf8               (Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
  #109 = NameAndType        #107:#108     // bintrayIvy:(Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
  #110 = Methodref          #37.#109      // coursier/Repositories$.bintrayIvy:(Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
  #111 = Utf8               typesafe:ivy-
  #112 = String             #111          // typesafe:ivy-
  #113 = Utf8               typesafeIvy
  #114 = NameAndType        #113:#108     // typesafeIvy:(Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
  #115 = Methodref          #37.#114      // coursier/Repositories$.typesafeIvy:(Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
  #116 = Utf8               typesafe:
  #117 = String             #116          // typesafe:
  #118 = Utf8               typesafe
  #119 = NameAndType        #118:#75      // typesafe:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #120 = Methodref          #37.#119      // coursier/Repositories$.typesafe:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #121 = Utf8               sbt-maven:
  #122 = String             #121          // sbt-maven:
  #123 = Utf8               sbtMaven
  #124 = NameAndType        #123:#75      // sbtMaven:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #125 = Methodref          #37.#124      // coursier/Repositories$.sbtMaven:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #126 = Utf8               sbt-plugin:
  #127 = String             #126          // sbt-plugin:
  #128 = Utf8               sbtPlugin
  #129 = NameAndType        #128:#108     // sbtPlugin:(Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
  #130 = Methodref          #37.#129      // coursier/Repositories$.sbtPlugin:(Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
  #131 = Utf8               scala-integration
  #132 = String             #131          // scala-integration
  #133 = Utf8               scala-nightlies
  #134 = String             #133          // scala-nightlies
  #135 = Utf8               scalaIntegration
  #136 = NameAndType        #135:#41      // scalaIntegration:()Lcoursier/maven/MavenRepository;
  #137 = Methodref          #37.#136      // coursier/Repositories$.scalaIntegration:()Lcoursier/maven/MavenRepository;
  #138 = Utf8               ivy:
  #139 = String             #138          // ivy:
  #140 = Utf8               indexOf
  #141 = Utf8               (I)I
  #142 = NameAndType        #140:#141     // indexOf:(I)I
  #143 = Methodref          #22.#142      // java/lang/String.indexOf:(I)I
  #144 = Utf8               coursier/ivy/IvyRepository$
  #145 = Class              #144          // coursier/ivy/IvyRepository$
  #146 = Utf8               Lcoursier/ivy/IvyRepository$;
  #147 = NameAndType        #6:#146       // MODULE$:Lcoursier/ivy/IvyRepository$;
  #148 = Fieldref           #145.#147     // coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
  #149 = Utf8               parse$default$2
  #150 = Utf8               ()Lscala/Option;
  #151 = NameAndType        #149:#150     // parse$default$2:()Lscala/Option;
  #152 = Methodref          #145.#151     // coursier/ivy/IvyRepository$.parse$default$2:()Lscala/Option;
  #153 = Utf8               parse$default$3
  #154 = NameAndType        #153:#150     // parse$default$3:()Lscala/Option;
  #155 = Methodref          #145.#154     // coursier/ivy/IvyRepository$.parse$default$3:()Lscala/Option;
  #156 = Utf8               parse$default$4
  #157 = Utf8               ()Lscala/collection/immutable/Map;
  #158 = NameAndType        #156:#157     // parse$default$4:()Lscala/collection/immutable/Map;
  #159 = Methodref          #145.#158     // coursier/ivy/IvyRepository$.parse$default$4:()Lscala/collection/immutable/Map;
  #160 = Utf8               parse$default$5
  #161 = Utf8               ()Z
  #162 = NameAndType        #160:#161     // parse$default$5:()Z
  #163 = Methodref          #145.#162     // coursier/ivy/IvyRepository$.parse$default$5:()Z
  #164 = Utf8               parse$default$6
  #165 = NameAndType        #164:#161     // parse$default$6:()Z
  #166 = Methodref          #145.#165     // coursier/ivy/IvyRepository$.parse$default$6:()Z
  #167 = Utf8               parse$default$7
  #168 = NameAndType        #167:#161     // parse$default$7:()Z
  #169 = Methodref          #145.#168     // coursier/ivy/IvyRepository$.parse$default$7:()Z
  #170 = Utf8               parse$default$8
  #171 = NameAndType        #170:#161     // parse$default$8:()Z
  #172 = Methodref          #145.#171     // coursier/ivy/IvyRepository$.parse$default$8:()Z
  #173 = Utf8               parse$default$9
  #174 = NameAndType        #173:#150     // parse$default$9:()Lscala/Option;
  #175 = Methodref          #145.#174     // coursier/ivy/IvyRepository$.parse$default$9:()Lscala/Option;
  #176 = Utf8               parse$default$10
  #177 = NameAndType        #176:#161     // parse$default$10:()Z
  #178 = Methodref          #145.#177     // coursier/ivy/IvyRepository$.parse$default$10:()Z
  #179 = Utf8               parse
  #180 = Utf8               (Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/collection/immutable/Map;ZZZZLscala/Option;Z)Lscala/util/Either;
  #181 = NameAndType        #179:#180     // parse:(Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/collection/immutable/Map;ZZZZLscala/Option;Z)Lscala/util/Either;
  #182 = Methodref          #145.#181     // coursier/ivy/IvyRepository$.parse:(Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/collection/immutable/Map;ZZZZLscala/Option;Z)Lscala/util/Either;
  #183 = Utf8               substring
  #184 = Utf8               (II)Ljava/lang/String;
  #185 = NameAndType        #183:#184     // substring:(II)Ljava/lang/String;
  #186 = Methodref          #22.#185      // java/lang/String.substring:(II)Ljava/lang/String;
  #187 = Utf8               (I)Ljava/lang/String;
  #188 = NameAndType        #183:#187     // substring:(I)Ljava/lang/String;
  #189 = Methodref          #22.#188      // java/lang/String.substring:(I)Ljava/lang/String;
  #190 = Utf8               scala/Some
  #191 = Class              #190          // scala/Some
  #192 = Utf8               (Ljava/lang/Object;)V
  #193 = NameAndType        #10:#192      // "<init>":(Ljava/lang/Object;)V
  #194 = Methodref          #191.#193     // scala/Some."<init>":(Ljava/lang/Object;)V
  #195 = Utf8               scala/util/Either
  #196 = Class              #195          // scala/util/Either
  #197 = Utf8               jitpack
  #198 = String             #197          // jitpack
  #199 = NameAndType        #197:#41      // jitpack:()Lcoursier/maven/MavenRepository;
  #200 = Methodref          #37.#199      // coursier/Repositories$.jitpack:()Lcoursier/maven/MavenRepository;
  #201 = Utf8               clojars
  #202 = String             #201          // clojars
  #203 = NameAndType        #201:#41      // clojars:()Lcoursier/maven/MavenRepository;
  #204 = Methodref          #37.#203      // coursier/Repositories$.clojars:()Lcoursier/maven/MavenRepository;
  #205 = Utf8               jcenter
  #206 = String             #205          // jcenter
  #207 = NameAndType        #205:#41      // jcenter:()Lcoursier/maven/MavenRepository;
  #208 = Methodref          #37.#207      // coursier/Repositories$.jcenter:()Lcoursier/maven/MavenRepository;
  #209 = Utf8               google
  #210 = String             #209          // google
  #211 = NameAndType        #209:#41      // google:()Lcoursier/maven/MavenRepository;
  #212 = Methodref          #37.#211      // coursier/Repositories$.google:()Lcoursier/maven/MavenRepository;
  #213 = Utf8               gcs
  #214 = String             #213          // gcs
  #215 = Utf8               centralGcs
  #216 = NameAndType        #215:#41      // centralGcs:()Lcoursier/maven/MavenRepository;
  #217 = Methodref          #37.#216      // coursier/Repositories$.centralGcs:()Lcoursier/maven/MavenRepository;
  #218 = Utf8               gcs-eu
  #219 = String             #218          // gcs-eu
  #220 = Utf8               centralGcsEu
  #221 = NameAndType        #220:#41      // centralGcsEu:()Lcoursier/maven/MavenRepository;
  #222 = Methodref          #37.#221      // coursier/Repositories$.centralGcsEu:()Lcoursier/maven/MavenRepository;
  #223 = Utf8               gcs-asia
  #224 = String             #223          // gcs-asia
  #225 = Utf8               centralGcsAsia
  #226 = NameAndType        #225:#41      // centralGcsAsia:()Lcoursier/maven/MavenRepository;
  #227 = Methodref          #37.#226      // coursier/Repositories$.centralGcsAsia:()Lcoursier/maven/MavenRepository;
  #228 = Utf8               apache:
  #229 = String             #228          // apache:
  #230 = Utf8               apache
  #231 = NameAndType        #230:#75      // apache:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #232 = Methodref          #37.#231      // coursier/Repositories$.apache:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #233 = Utf8               coursier/maven/MavenRepository$
  #234 = Class              #233          // coursier/maven/MavenRepository$
  #235 = Utf8               Lcoursier/maven/MavenRepository$;
  #236 = NameAndType        #6:#235       // MODULE$:Lcoursier/maven/MavenRepository$;
  #237 = Fieldref           #234.#236     // coursier/maven/MavenRepository$.MODULE$:Lcoursier/maven/MavenRepository$;
  #238 = NameAndType        #46:#75       // apply:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #239 = Methodref          #234.#238     // coursier/maven/MavenRepository$.apply:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
  #240 = Utf8               s0
  #241 = Utf8               Ljava/lang/String;
  #242 = Utf8               id
  #243 = Utf8               mainPart
  #244 = Utf8               metadataPart
  #245 = Utf8               sepIdx
  #246 = Utf8               I
  #247 = Utf8               this
  #248 = Methodref          #4.#11        // java/lang/Object."<init>":()V
  #249 = Utf8               Code
  #250 = Utf8               LineNumberTable
  #251 = Utf8               StackMapTable
  #252 = Utf8               LocalVariableTable
  #253 = Utf8               Signature
  #254 = Utf8               MethodParameters
  #255 = Utf8               SourceFile
  #256 = Utf8               ScalaInlineInfo
  #257 = Utf8               Scala
{
  public static final coursier.internal.SharedRepositoryParser$ MODULE$;
    descriptor: Lcoursier/internal/SharedRepositoryParser$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/internal/SharedRepositoryParser$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Lcoursier/internal/SharedRepositoryParser$;
        10: return
      LineNumberTable:
        line 8: 0

  public scala.util.Either<java.lang.String, coursier.core.Repository> repository(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=18, args_size=2
         0: aload_1
         1: ldc           #20                 // String central
         3: astore_2
         4: dup
         5: ifnonnull     16
         8: pop
         9: aload_2
        10: ifnull        23
        13: goto          41
        16: aload_2
        17: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        20: ifeq          41
        23: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
        26: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
        29: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
        32: invokevirtual #43                 // Method coursier/Repositories$.central:()Lcoursier/maven/MavenRepository;
        35: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        38: goto          1005
        41: aload_1
        42: ldc           #51                 // String sonatype:
        44: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        47: ifeq          83
        50: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
        53: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
        56: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
        59: getstatic     #60                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        62: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        65: aload_1
        66: invokevirtual #69                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        69: ldc           #51                 // String sonatype:
        71: invokevirtual #73                 // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        74: invokevirtual #77                 // Method coursier/Repositories$.sonatype:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
        77: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        80: goto          1005
        83: aload_1
        84: ldc           #79                 // String bintray:
        86: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        89: ifeq          164
        92: getstatic     #60                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        95: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        98: aload_1
        99: invokevirtual #69                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       102: ldc           #79                 // String bintray:
       104: invokevirtual #73                 // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       107: astore_3
       108: aload_1
       109: ldc           #81                 // String /
       111: invokevirtual #85                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       114: ifeq          121
       117: aload_3
       118: goto          142
       121: new           #87                 // class java/lang/StringBuilder
       124: dup
       125: ldc           #88                 // int 6
       127: invokespecial #91                 // Method java/lang/StringBuilder."<init>":(I)V
       130: aload_3
       131: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       134: ldc           #97                 // String /maven
       136: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       139: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       142: astore        4
       144: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       147: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       150: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       153: aload         4
       155: invokevirtual #104                // Method coursier/Repositories$.bintray:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
       158: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       161: goto          1005
       164: aload_1
       165: ldc           #106                // String bintray-ivy:
       167: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       170: ifeq          206
       173: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       176: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       179: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       182: getstatic     #60                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       185: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       188: aload_1
       189: invokevirtual #69                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       192: ldc           #106                // String bintray-ivy:
       194: invokevirtual #73                 // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       197: invokevirtual #110                // Method coursier/Repositories$.bintrayIvy:(Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
       200: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       203: goto          1005
       206: aload_1
       207: ldc           #112                // String typesafe:ivy-
       209: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       212: ifeq          248
       215: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       218: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       221: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       224: getstatic     #60                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       227: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       230: aload_1
       231: invokevirtual #69                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       234: ldc           #112                // String typesafe:ivy-
       236: invokevirtual #73                 // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       239: invokevirtual #115                // Method coursier/Repositories$.typesafeIvy:(Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
       242: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       245: goto          1005
       248: aload_1
       249: ldc           #117                // String typesafe:
       251: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       254: ifeq          290
       257: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       260: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       263: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       266: getstatic     #60                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       269: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       272: aload_1
       273: invokevirtual #69                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       276: ldc           #117                // String typesafe:
       278: invokevirtual #73                 // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       281: invokevirtual #120                // Method coursier/Repositories$.typesafe:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
       284: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       287: goto          1005
       290: aload_1
       291: ldc           #122                // String sbt-maven:
       293: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       296: ifeq          332
       299: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       302: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       305: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       308: getstatic     #60                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       311: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       314: aload_1
       315: invokevirtual #69                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       318: ldc           #122                // String sbt-maven:
       320: invokevirtual #73                 // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       323: invokevirtual #125                // Method coursier/Repositories$.sbtMaven:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
       326: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       329: goto          1005
       332: aload_1
       333: ldc           #127                // String sbt-plugin:
       335: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       338: ifeq          374
       341: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       344: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       347: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       350: getstatic     #60                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       353: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       356: aload_1
       357: invokevirtual #69                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       360: ldc           #127                // String sbt-plugin:
       362: invokevirtual #73                 // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       365: invokevirtual #130                // Method coursier/Repositories$.sbtPlugin:(Ljava/lang/String;)Lcoursier/ivy/IvyRepository;
       368: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       371: goto          1005
       374: aload_1
       375: ldc           #132                // String scala-integration
       377: astore        5
       379: dup
       380: ifnonnull     392
       383: pop
       384: aload         5
       386: ifnull        426
       389: goto          400
       392: aload         5
       394: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       397: ifne          426
       400: aload_1
       401: ldc           #134                // String scala-nightlies
       403: astore        6
       405: dup
       406: ifnonnull     418
       409: pop
       410: aload         6
       412: ifnull        426
       415: goto          444
       418: aload         6
       420: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       423: ifeq          444
       426: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       429: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       432: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       435: invokevirtual #137                // Method coursier/Repositories$.scalaIntegration:()Lcoursier/maven/MavenRepository;
       438: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       441: goto          1005
       444: aload_1
       445: ldc           #139                // String ivy:
       447: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       450: ifeq          639
       453: getstatic     #60                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       456: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       459: aload_1
       460: invokevirtual #69                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       463: ldc           #139                // String ivy:
       465: invokevirtual #73                 // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       468: astore        7
       470: aload         7
       472: bipush        124
       474: invokevirtual #143                // Method java/lang/String.indexOf:(I)I
       477: istore        8
       479: iload         8
       481: iconst_0
       482: if_icmpge     550
       485: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       488: aload         7
       490: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       493: invokevirtual #152                // Method coursier/ivy/IvyRepository$.parse$default$2:()Lscala/Option;
       496: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       499: invokevirtual #155                // Method coursier/ivy/IvyRepository$.parse$default$3:()Lscala/Option;
       502: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       505: invokevirtual #159                // Method coursier/ivy/IvyRepository$.parse$default$4:()Lscala/collection/immutable/Map;
       508: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       511: invokevirtual #163                // Method coursier/ivy/IvyRepository$.parse$default$5:()Z
       514: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       517: invokevirtual #166                // Method coursier/ivy/IvyRepository$.parse$default$6:()Z
       520: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       523: invokevirtual #169                // Method coursier/ivy/IvyRepository$.parse$default$7:()Z
       526: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       529: invokevirtual #172                // Method coursier/ivy/IvyRepository$.parse$default$8:()Z
       532: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       535: invokevirtual #175                // Method coursier/ivy/IvyRepository$.parse$default$9:()Lscala/Option;
       538: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       541: invokevirtual #178                // Method coursier/ivy/IvyRepository$.parse$default$10:()Z
       544: invokevirtual #182                // Method coursier/ivy/IvyRepository$.parse:(Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/collection/immutable/Map;ZZZZLscala/Option;Z)Lscala/util/Either;
       547: goto          636
       550: aload         7
       552: iconst_0
       553: iload         8
       555: invokevirtual #186                // Method java/lang/String.substring:(II)Ljava/lang/String;
       558: astore        9
       560: aload         7
       562: iload         8
       564: iconst_1
       565: iadd
       566: invokevirtual #189                // Method java/lang/String.substring:(I)Ljava/lang/String;
       569: astore        10
       571: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       574: aload         9
       576: new           #191                // class scala/Some
       579: dup
       580: aload         10
       582: invokespecial #194                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       585: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       588: invokevirtual #155                // Method coursier/ivy/IvyRepository$.parse$default$3:()Lscala/Option;
       591: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       594: invokevirtual #159                // Method coursier/ivy/IvyRepository$.parse$default$4:()Lscala/collection/immutable/Map;
       597: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       600: invokevirtual #163                // Method coursier/ivy/IvyRepository$.parse$default$5:()Z
       603: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       606: invokevirtual #166                // Method coursier/ivy/IvyRepository$.parse$default$6:()Z
       609: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       612: invokevirtual #169                // Method coursier/ivy/IvyRepository$.parse$default$7:()Z
       615: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       618: invokevirtual #172                // Method coursier/ivy/IvyRepository$.parse$default$8:()Z
       621: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       624: invokevirtual #175                // Method coursier/ivy/IvyRepository$.parse$default$9:()Lscala/Option;
       627: getstatic     #148                // Field coursier/ivy/IvyRepository$.MODULE$:Lcoursier/ivy/IvyRepository$;
       630: invokevirtual #178                // Method coursier/ivy/IvyRepository$.parse$default$10:()Z
       633: invokevirtual #182                // Method coursier/ivy/IvyRepository$.parse:(Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/collection/immutable/Map;ZZZZLscala/Option;Z)Lscala/util/Either;
       636: goto          1005
       639: aload_1
       640: ldc           #198                // String jitpack
       642: astore        11
       644: dup
       645: ifnonnull     657
       648: pop
       649: aload         11
       651: ifnull        665
       654: goto          683
       657: aload         11
       659: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       662: ifeq          683
       665: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       668: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       671: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       674: invokevirtual #200                // Method coursier/Repositories$.jitpack:()Lcoursier/maven/MavenRepository;
       677: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       680: goto          1005
       683: aload_1
       684: ldc           #202                // String clojars
       686: astore        12
       688: dup
       689: ifnonnull     701
       692: pop
       693: aload         12
       695: ifnull        709
       698: goto          727
       701: aload         12
       703: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       706: ifeq          727
       709: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       712: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       715: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       718: invokevirtual #204                // Method coursier/Repositories$.clojars:()Lcoursier/maven/MavenRepository;
       721: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       724: goto          1005
       727: aload_1
       728: ldc           #206                // String jcenter
       730: astore        13
       732: dup
       733: ifnonnull     745
       736: pop
       737: aload         13
       739: ifnull        753
       742: goto          771
       745: aload         13
       747: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       750: ifeq          771
       753: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       756: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       759: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       762: invokevirtual #208                // Method coursier/Repositories$.jcenter:()Lcoursier/maven/MavenRepository;
       765: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       768: goto          1005
       771: aload_1
       772: ldc           #210                // String google
       774: astore        14
       776: dup
       777: ifnonnull     789
       780: pop
       781: aload         14
       783: ifnull        797
       786: goto          815
       789: aload         14
       791: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       794: ifeq          815
       797: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       800: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       803: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       806: invokevirtual #212                // Method coursier/Repositories$.google:()Lcoursier/maven/MavenRepository;
       809: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       812: goto          1005
       815: aload_1
       816: ldc           #214                // String gcs
       818: astore        15
       820: dup
       821: ifnonnull     833
       824: pop
       825: aload         15
       827: ifnull        841
       830: goto          859
       833: aload         15
       835: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       838: ifeq          859
       841: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       844: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       847: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       850: invokevirtual #217                // Method coursier/Repositories$.centralGcs:()Lcoursier/maven/MavenRepository;
       853: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       856: goto          1005
       859: aload_1
       860: ldc           #219                // String gcs-eu
       862: astore        16
       864: dup
       865: ifnonnull     877
       868: pop
       869: aload         16
       871: ifnull        885
       874: goto          903
       877: aload         16
       879: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       882: ifeq          903
       885: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       888: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       891: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       894: invokevirtual #222                // Method coursier/Repositories$.centralGcsEu:()Lcoursier/maven/MavenRepository;
       897: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       900: goto          1005
       903: aload_1
       904: ldc           #224                // String gcs-asia
       906: astore        17
       908: dup
       909: ifnonnull     921
       912: pop
       913: aload         17
       915: ifnull        929
       918: goto          947
       921: aload         17
       923: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       926: ifeq          947
       929: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       932: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       935: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       938: invokevirtual #227                // Method coursier/Repositories$.centralGcsAsia:()Lcoursier/maven/MavenRepository;
       941: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       944: goto          1005
       947: aload_1
       948: ldc           #229                // String apache:
       950: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       953: ifeq          989
       956: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       959: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       962: getstatic     #40                 // Field coursier/Repositories$.MODULE$:Lcoursier/Repositories$;
       965: getstatic     #60                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       968: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       971: aload_1
       972: invokevirtual #69                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       975: ldc           #229                // String apache:
       977: invokevirtual #73                 // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       980: invokevirtual #232                // Method coursier/Repositories$.apache:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
       983: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       986: goto          1005
       989: getstatic     #31                 // Field scala/package$.MODULE$:Lscala/package$;
       992: invokevirtual #35                 // Method scala/package$.Right:()Lscala/util/Right$;
       995: getstatic     #237                // Field coursier/maven/MavenRepository$.MODULE$:Lcoursier/maven/MavenRepository$;
       998: aload_1
       999: invokevirtual #239                // Method coursier/maven/MavenRepository$.apply:(Ljava/lang/String;)Lcoursier/maven/MavenRepository;
      1002: invokevirtual #49                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
      1005: areturn
      StackMapTable: number_of_entries = 43
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 17 /* same */
        frame_type = 41 /* same */
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class java/lang/String ]
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 21
        frame_type = 41 /* same */
        frame_type = 41 /* same */
        frame_type = 41 /* same */
        frame_type = 41 /* same */
        frame_type = 41 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String, top, top, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String, top, top, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 7
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ class java/lang/String ]
        frame_type = 253 /* append */
          offset_delta = 105
          locals = [ class java/lang/String, int ]
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 85
          stack = [ class scala/util/Either ]
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String, top, top, class java/lang/String, class java/lang/String, top, top, top, top, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String, top, top, class java/lang/String, class java/lang/String, top, top, top, top, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String, top, top, class java/lang/String, class java/lang/String, top, top, top, top, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String, top, top, class java/lang/String, class java/lang/String, top, top, top, top, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String, top, top, class java/lang/String, class java/lang/String, top, top, top, top, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String, top, top, class java/lang/String, class java/lang/String, top, top, top, top, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String, top, top, class java/lang/String, class java/lang/String, top, top, top, top, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 17 /* same */
        frame_type = 41 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class coursier/internal/SharedRepositoryParser$, class java/lang/String, class java/lang/String ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 11: 0
        line 12: 23
        line 13: 41
        line 14: 50
        line 15: 83
        line 16: 92
        line 18: 108
        line 19: 121
        line 21: 144
        line 22: 164
        line 23: 173
        line 24: 206
        line 25: 215
        line 26: 248
        line 27: 257
        line 28: 290
        line 29: 299
        line 30: 332
        line 31: 341
        line 32: 374
        line 33: 426
        line 34: 444
        line 35: 453
        line 36: 470
        line 37: 479
        line 38: 485
        line 40: 550
        line 41: 560
        line 42: 571
        line 44: 639
        line 45: 665
        line 46: 683
        line 47: 709
        line 48: 727
        line 49: 753
        line 50: 771
        line 51: 797
        line 52: 815
        line 53: 841
        line 54: 859
        line 55: 885
        line 56: 903
        line 57: 929
        line 58: 947
        line 59: 956
        line 61: 989
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          108      53     3    s0   Ljava/lang/String;
          144      17     4    id   Ljava/lang/String;
          560      76     9 mainPart   Ljava/lang/String;
          571      65    10 metadataPart   Ljava/lang/String;
          470     166     7    s0   Ljava/lang/String;
          479     157     8 sepIdx   I
            0    1006     0  this   Lcoursier/internal/SharedRepositoryParser$;
            0    1006     1     s   Ljava/lang/String;
    Signature: #17                          // (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/core/Repository;>;
    MethodParameters:
      Name                           Flags
      s                              final

  private coursier.internal.SharedRepositoryParser$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #248                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 63: 0
        line 8: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/internal/SharedRepositoryParser$;
}
SourceFile: "SharedRepositoryParser.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 01 00 02 00 0A 00 09 01 00 0F 00 10 01
  Scala: length = 0x0 (unknown attribute)

