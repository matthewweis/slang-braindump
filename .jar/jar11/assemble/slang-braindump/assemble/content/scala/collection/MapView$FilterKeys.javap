Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/MapView$FilterKeys.class
  Last modified May 29, 2022; size 3559 bytes
  SHA-256 checksum 9929c7af47e7ab7b80f8b657bb53bc5d9fe61f15ab5eb0b3e7893d9ff7b4acc9
  Compiled from "MapView.scala"
public class scala.collection.MapView$FilterKeys<K extends java.lang.Object, V extends java.lang.Object> extends scala.collection.AbstractMapView<K, V>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/MapView$FilterKeys
  super_class: #5                         // scala/collection/AbstractMapView
  interfaces: 0, fields: 3, methods: 8, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/MapView$FilterKeys
    #2 = Class              #1            // scala/collection/MapView$FilterKeys
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/AbstractMapView<TK;TV;>;
    #4 = Utf8               scala/collection/AbstractMapView
    #5 = Class              #4            // scala/collection/AbstractMapView
    #6 = Utf8               MapView.scala
    #7 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #8 = Class              #7            // java/lang/invoke/MethodHandles$Lookup
    #9 = Utf8               java/lang/invoke/MethodHandles
   #10 = Class              #9            // java/lang/invoke/MethodHandles
   #11 = Utf8               Lookup
   #12 = Utf8               scala/collection/MapView
   #13 = Class              #12           // scala/collection/MapView
   #14 = Utf8               FilterKeys
   #15 = Utf8               serialVersionUID
   #16 = Utf8               J
   #17 = Long               3l
   #19 = Utf8               underlying
   #20 = Utf8               Lscala/collection/MapOps;
   #21 = Utf8               Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;
   #22 = Utf8               p
   #23 = Utf8               Lscala/Function1;
   #24 = Utf8               Lscala/Function1<TK;Ljava/lang/Object;>;
   #25 = Utf8               iterator
   #26 = Utf8               ()Lscala/collection/Iterator;
   #27 = Utf8               ()Lscala/collection/Iterator<Lscala/Tuple2<TK;TV;>;>;
   #28 = NameAndType        #19:#20       // underlying:Lscala/collection/MapOps;
   #29 = Fieldref           #2.#28        // scala/collection/MapView$FilterKeys.underlying:Lscala/collection/MapOps;
   #30 = Utf8               scala/collection/MapOps
   #31 = Class              #30           // scala/collection/MapOps
   #32 = NameAndType        #25:#26       // iterator:()Lscala/collection/Iterator;
   #33 = InterfaceMethodref #31.#32       // scala/collection/MapOps.iterator:()Lscala/collection/Iterator;
   #34 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #35 = MethodType         #34           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #36 = Utf8               $anonfun$iterator$2$adapted
   #37 = Utf8               (Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Ljava/lang/Object;
   #38 = NameAndType        #36:#37       // $anonfun$iterator$2$adapted:(Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Ljava/lang/Object;
   #39 = Methodref          #2.#38        // scala/collection/MapView$FilterKeys.$anonfun$iterator$2$adapted:(Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Ljava/lang/Object;
   #40 = MethodHandle       6:#39         // REF_invokeStatic scala/collection/MapView$FilterKeys.$anonfun$iterator$2$adapted:(Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Ljava/lang/Object;
   #41 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
   #42 = MethodType         #41           //  (Lscala/Tuple2;)Ljava/lang/Object;
   #43 = Integer            5
   #44 = Integer            1
   #45 = Utf8               java/lang/invoke/LambdaMetafactory
   #46 = Class              #45           // java/lang/invoke/LambdaMetafactory
   #47 = Utf8               altMetafactory
   #48 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #49 = NameAndType        #47:#48       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #50 = Methodref          #46.#49       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #51 = MethodHandle       6:#50         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #52 = Utf8               apply
   #53 = Utf8               (Lscala/collection/MapView$FilterKeys;)Lscala/Function1;
   #54 = NameAndType        #52:#53       // apply:(Lscala/collection/MapView$FilterKeys;)Lscala/Function1;
   #55 = InvokeDynamic      #0:#54        // #0:apply:(Lscala/collection/MapView$FilterKeys;)Lscala/Function1;
   #56 = Utf8               scala/collection/Iterator
   #57 = Class              #56           // scala/collection/Iterator
   #58 = Utf8               filter
   #59 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
   #60 = NameAndType        #58:#59       // filter:(Lscala/Function1;)Lscala/collection/Iterator;
   #61 = InterfaceMethodref #57.#60       // scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
   #62 = Utf8               this
   #63 = Utf8               Lscala/collection/MapView$FilterKeys;
   #64 = Utf8               get
   #65 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #66 = Utf8               (TK;)Lscala/Option<TV;>;
   #67 = Utf8               key
   #68 = NameAndType        #22:#23       // p:Lscala/Function1;
   #69 = Fieldref           #2.#68        // scala/collection/MapView$FilterKeys.p:Lscala/Function1;
   #70 = Utf8               scala/Function1
   #71 = Class              #70           // scala/Function1
   #72 = NameAndType        #52:#34       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #73 = InterfaceMethodref #71.#72       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #74 = Utf8               scala/runtime/BoxesRunTime
   #75 = Class              #74           // scala/runtime/BoxesRunTime
   #76 = Utf8               unboxToBoolean
   #77 = Utf8               (Ljava/lang/Object;)Z
   #78 = NameAndType        #76:#77       // unboxToBoolean:(Ljava/lang/Object;)Z
   #79 = Methodref          #75.#78       // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
   #80 = NameAndType        #64:#65       // get:(Ljava/lang/Object;)Lscala/Option;
   #81 = InterfaceMethodref #31.#80       // scala/collection/MapOps.get:(Ljava/lang/Object;)Lscala/Option;
   #82 = Utf8               scala/None$
   #83 = Class              #82           // scala/None$
   #84 = Utf8               MODULE$
   #85 = Utf8               Lscala/None$;
   #86 = NameAndType        #84:#85       // MODULE$:Lscala/None$;
   #87 = Fieldref           #83.#86       // scala/None$.MODULE$:Lscala/None$;
   #88 = Utf8               Ljava/lang/Object;
   #89 = Utf8               knownSize
   #90 = Utf8               ()I
   #91 = NameAndType        #89:#90       // knownSize:()I
   #92 = InterfaceMethodref #31.#91       // scala/collection/MapOps.knownSize:()I
   #93 = Utf8               isEmpty
   #94 = Utf8               ()Z
   #95 = Methodref          #2.#32        // scala/collection/MapView$FilterKeys.iterator:()Lscala/collection/Iterator;
   #96 = NameAndType        #93:#94       // isEmpty:()Z
   #97 = InterfaceMethodref #57.#96       // scala/collection/Iterator.isEmpty:()Z
   #98 = Utf8               $anonfun$iterator$2
   #99 = Utf8               (Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Z
  #100 = Utf8               $this
  #101 = Utf8               x0$1
  #102 = Utf8               scala/Tuple2
  #103 = Class              #102          // scala/Tuple2
  #104 = Utf8               _1
  #105 = Utf8               ()Ljava/lang/Object;
  #106 = NameAndType        #104:#105     // _1:()Ljava/lang/Object;
  #107 = Methodref          #103.#106     // scala/Tuple2._1:()Ljava/lang/Object;
  #108 = Utf8               scala/MatchError
  #109 = Class              #108          // scala/MatchError
  #110 = Utf8               <init>
  #111 = Utf8               (Ljava/lang/Object;)V
  #112 = NameAndType        #110:#111     // "<init>":(Ljava/lang/Object;)V
  #113 = Methodref          #109.#112     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #114 = Utf8               k
  #115 = Utf8               Lscala/Tuple2;
  #116 = Utf8               java/lang/Object
  #117 = Class              #116          // java/lang/Object
  #118 = Utf8               (Lscala/collection/MapOps;Lscala/Function1;)V
  #119 = Utf8               (Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;Lscala/Function1<TK;Ljava/lang/Object;>;)V
  #120 = Utf8               ()V
  #121 = NameAndType        #110:#120     // "<init>":()V
  #122 = Methodref          #5.#121       // scala/collection/AbstractMapView."<init>":()V
  #123 = NameAndType        #98:#99       // $anonfun$iterator$2:(Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Z
  #124 = Methodref          #2.#123       // scala/collection/MapView$FilterKeys.$anonfun$iterator$2:(Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Z
  #125 = Utf8               boxToBoolean
  #126 = Utf8               (Z)Ljava/lang/Boolean;
  #127 = NameAndType        #125:#126     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #128 = Methodref          #75.#127      // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #129 = Utf8               $deserializeLambda$
  #130 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #131 = Utf8               scala/runtime/LambdaDeserialize
  #132 = Class              #131          // scala/runtime/LambdaDeserialize
  #133 = Utf8               bootstrap
  #134 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #135 = NameAndType        #133:#134     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #136 = Methodref          #132.#135     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #137 = MethodHandle       6:#136        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #138 = Utf8               lambdaDeserialize
  #139 = NameAndType        #138:#130     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #140 = InvokeDynamic      #1:#139       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #141 = Utf8               ConstantValue
  #142 = Utf8               Signature
  #143 = Utf8               Code
  #144 = Utf8               LineNumberTable
  #145 = Utf8               LocalVariableTable
  #146 = Utf8               StackMapTable
  #147 = Utf8               MethodParameters
  #148 = Utf8               InnerClasses
  #149 = Utf8               SourceFile
  #150 = Utf8               BootstrapMethods
  #151 = Utf8               ScalaInlineInfo
  #152 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 3l

  private final scala.collection.MapOps<K, V, ?, java.lang.Object> underlying;
    descriptor: Lscala/collection/MapOps;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #21                          // Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;

  private final scala.Function1<K, java.lang.Object> p;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #24                          // Lscala/Function1<TK;Ljava/lang/Object;>;

  public scala.collection.Iterator<scala.Tuple2<K, V>> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field underlying:Lscala/collection/MapOps;
         4: invokeinterface #33,  1           // InterfaceMethod scala/collection/MapOps.iterator:()Lscala/collection/Iterator;
         9: aload_0
        10: invokedynamic #55,  0             // InvokeDynamic #0:apply:(Lscala/collection/MapView$FilterKeys;)Lscala/Function1;
        15: invokeinterface #61,  2           // InterfaceMethod scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
        20: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/MapView$FilterKeys;
    Signature: #27                          // ()Lscala/collection/Iterator<Lscala/Tuple2<TK;TV;>;>;

  public scala.Option<V> get(K);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #69                 // Field p:Lscala/Function1;
         4: aload_1
         5: invokeinterface #73,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        10: invokestatic  #79                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        13: ifeq          27
        16: aload_0
        17: getfield      #29                 // Field underlying:Lscala/collection/MapOps;
        20: aload_1
        21: invokeinterface #81,  2           // InterfaceMethod scala/collection/MapOps.get:(Ljava/lang/Object;)Lscala/Option;
        26: areturn
        27: getstatic     #87                 // Field scala/None$.MODULE$:Lscala/None$;
        30: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 27 /* same */
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/MapView$FilterKeys;
            0      31     1   key   Ljava/lang/Object;
    Signature: #66                          // (TK;)Lscala/Option<TV;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public int knownSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field underlying:Lscala/collection/MapOps;
         4: invokeinterface #92,  1           // InterfaceMethod scala/collection/MapOps.knownSize:()I
         9: iconst_0
        10: if_icmpne     15
        13: iconst_0
        14: ireturn
        15: iconst_m1
        16: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/MapView$FilterKeys;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #95                 // Method iterator:()Lscala/collection/Iterator;
         4: invokeinterface #97,  1           // InterfaceMethod scala/collection/Iterator.isEmpty:()Z
         9: ireturn
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/MapView$FilterKeys;

  public static final boolean $anonfun$iterator$2(scala.collection.MapView$FilterKeys, scala.Tuple2);
    descriptor: (Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_1
         1: ifnull        26
         4: aload_1
         5: invokevirtual #107                // Method scala/Tuple2._1:()Ljava/lang/Object;
         8: astore_3
         9: aload_0
        10: getfield      #69                 // Field p:Lscala/Function1;
        13: aload_3
        14: invokeinterface #73,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        19: invokestatic  #79                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        22: istore_2
        23: goto          35
        26: new           #109                // class scala/MatchError
        29: dup
        30: aconst_null
        31: invokespecial #113                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        34: athrow
        35: iload_2
        36: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 26 /* same */
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ int, class java/lang/Object ]
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      17     3     k   Ljava/lang/Object;
            0      37     0 $this   Lscala/collection/MapView$FilterKeys;
            0      37     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x0$1                           final

  public scala.collection.MapView$FilterKeys(scala.collection.MapOps<K, V, ?, java.lang.Object>, scala.Function1<K, java.lang.Object>);
    descriptor: (Lscala/collection/MapOps;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #29                 // Field underlying:Lscala/collection/MapOps;
         5: aload_0
         6: aload_2
         7: putfield      #69                 // Field p:Lscala/Function1;
        10: aload_0
        11: invokespecial #122                // Method scala/collection/AbstractMapView."<init>":()V
        14: return
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/collection/MapView$FilterKeys;
            0      15     1 underlying   Lscala/collection/MapOps;
            0      15     2     p   Lscala/Function1;
    Signature: #119                         // (Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;Lscala/Function1<TK;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      underlying                     final
      p                              final

  public static final java.lang.Object $anonfun$iterator$2$adapted(scala.collection.MapView$FilterKeys, scala.Tuple2);
    descriptor: (Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #124                // Method $anonfun$iterator$2:(Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Z
         5: invokestatic  #128                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lscala/collection/MapView$FilterKeys;
            0       9     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      x0$1                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #140,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #11= #8 of #10;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #14= #2 of #13;           // FilterKeys=class scala/collection/MapView$FilterKeys of class scala/collection/MapView
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/AbstractMapView<TK;TV;>;
SourceFile: "MapView.scala"
BootstrapMethods:
  0: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #35 (Ljava/lang/Object;)Ljava/lang/Object;
      #40 REF_invokeStatic scala/collection/MapView$FilterKeys.$anonfun$iterator$2$adapted:(Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Ljava/lang/Object;
      #42 (Lscala/Tuple2;)Ljava/lang/Object;
      #43 5
      #44 1
      #42 (Lscala/Tuple2;)Ljava/lang/Object;
  1: #137 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #40 REF_invokeStatic scala/collection/MapView$FilterKeys.$anonfun$iterator$2$adapted:(Lscala/collection/MapView$FilterKeys;Lscala/Tuple2;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 00 00 07 00 62 00 63 01 00 24 00 25 01 00 6E
   00 76 00 00 40 00 41 00 00 5D 00 5E 00 00 19 00
   1A 00 00 59 00 5A 00
  Scala: length = 0x0 (unknown attribute)

