Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/shapeless/NatMacros.class
  Last modified May 29, 2022; size 3842 bytes
  SHA-256 checksum e91443085ba2fc02e948c07ee4cb38f593625142e6971bacac0dc281f72e2c49
  Compiled from "nat.scala"
public class shapeless.NatMacros implements shapeless.NatMacroDefns
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // shapeless/NatMacros
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 8, attributes: 5
Constant pool:
    #1 = Utf8               shapeless/NatMacros
    #2 = Class              #1            // shapeless/NatMacros
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               shapeless/NatMacroDefns
    #6 = Class              #5            // shapeless/NatMacroDefns
    #7 = Utf8               nat.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005a2A!\u0002\u0004\u0001\u0013!AA\u0003\u0001BC\u0002\u0013\u0005Q\u0003\u0003\u0005!\u0001\t\u0005\t\u0015!\u0003\u0017\u0011\u0015\t\u0003\u0001\"\u0001#\u0011\u0015)\u0003\u0001\"\u0001\'\u0005%q\u0015\r^\'bGJ|7OC\u0001\b\u0003%\u0019\b.\u00199fY\u0016\u001c8o\u0001\u0001\u0014\u0007\u0001Q\u0001\u0003\u0005\u0002\f\u001d5\tABC\u0001\u000e\u0003\u0015\u00198-\u00197b\u0013\tyAB\u0001\u0004B]f\u0014VM\u001a\t\u0003#Ii\u0011AB\u0005\u0003\'\u0019\u0011QBT1u\u001b\u0006\u001c\'o\u001c#fM:\u001c\u0018!A2\u0016\u0003Y\u0001\"a\u0006\u0010\u000e\u0003aQ!!\u0007\u000e\u0002\u0011]D\u0017\u000e^3c_bT!a\u0007\u000f\u0002\r5\f7M]8t\u0015\tiB\"A\u0004sK\u001adWm\u0019;\n\u0005}A\"aB\"p]R,\u0007\u0010^\u0001\u0003G\u0002\na\u0001P5oSRtDCA\u0012%!\t\t\u0002\u0001C\u0003\u0015\u0007\u0001\u0007a#\u0001\nnCR,\'/[1mSj,w+\u001b3f]\u0016$GCA\u00147!\tA\u0003G\u0004\u0002*W9\u0011!&A\u0007\u0002\u0001%\u0011A&L\u0001\tk:Lg/\u001a:tK&\u0011qD\f\u0006\u0003_i\t\u0001B\u00197bG.\u0014w\u000e_\u0005\u0003cI\u0012A\u0001\u0016:fK&\u00111\u0007\u000e\u0002\u0006)J,Wm\u001d\u0006\u0003kq\t1!\u00199j\u0011\u00159D\u00011\u0001(\u0003\u0005I\u0007
   #11 = Utf8               scala/reflect/api/Trees$TreeApi
   #12 = Class              #11           // scala/reflect/api/Trees$TreeApi
   #13 = Utf8               scala/reflect/api/Trees
   #14 = Class              #13           // scala/reflect/api/Trees
   #15 = Utf8               TreeApi
   #16 = Utf8               scala/reflect/api/Types$TypeApi
   #17 = Class              #16           // scala/reflect/api/Types$TypeApi
   #18 = Utf8               scala/reflect/api/Types
   #19 = Class              #18           // scala/reflect/api/Types
   #20 = Utf8               TypeApi
   #21 = Utf8               shapeless/NatMacroDefns$NatLiteral$
   #22 = Class              #21           // shapeless/NatMacroDefns$NatLiteral$
   #23 = Utf8               NatLiteral$
   #24 = Utf8               c
   #25 = Utf8               Lscala/reflect/macros/whitebox/Context;
   #26 = Utf8               NatLiteral$module
   #27 = Utf8               Lshapeless/NatMacroDefns$NatLiteral$;
   #28 = Utf8               mkNatTpt
   #29 = Utf8               (I)Lscala/reflect/api/Trees$TreeApi;
   #30 = Utf8               i
   #31 = Utf8               mkNatTpt$
   #32 = Utf8               (Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Trees$TreeApi;
   #33 = NameAndType        #31:#32       // mkNatTpt$:(Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Trees$TreeApi;
   #34 = InterfaceMethodref #6.#33        // shapeless/NatMacroDefns.mkNatTpt$:(Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Trees$TreeApi;
   #35 = Utf8               this
   #36 = Utf8               Lshapeless/NatMacros;
   #37 = Utf8               I
   #38 = Utf8               mkNatTpe
   #39 = Utf8               (I)Lscala/reflect/api/Types$TypeApi;
   #40 = Utf8               mkNatTpe$
   #41 = Utf8               (Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Types$TypeApi;
   #42 = NameAndType        #40:#41       // mkNatTpe$:(Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Types$TypeApi;
   #43 = InterfaceMethodref #6.#42        // shapeless/NatMacroDefns.mkNatTpe$:(Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Types$TypeApi;
   #44 = Utf8               mkNatValue
   #45 = Utf8               mkNatValue$
   #46 = NameAndType        #45:#32       // mkNatValue$:(Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Trees$TreeApi;
   #47 = InterfaceMethodref #6.#46        // shapeless/NatMacroDefns.mkNatValue$:(Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Trees$TreeApi;
   #48 = Utf8               NatLiteral
   #49 = Utf8               ()Lshapeless/NatMacroDefns$NatLiteral$;
   #50 = NameAndType        #26:#27       // NatLiteral$module:Lshapeless/NatMacroDefns$NatLiteral$;
   #51 = Fieldref           #2.#50        // shapeless/NatMacros.NatLiteral$module:Lshapeless/NatMacroDefns$NatLiteral$;
   #52 = Utf8               NatLiteral$lzycompute$1
   #53 = Utf8               ()V
   #54 = NameAndType        #52:#53       // NatLiteral$lzycompute$1:()V
   #55 = Methodref          #2.#54        // shapeless/NatMacros.NatLiteral$lzycompute$1:()V
   #56 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #57 = NameAndType        #24:#25       // c:Lscala/reflect/macros/whitebox/Context;
   #58 = Fieldref           #2.#57        // shapeless/NatMacros.c:Lscala/reflect/macros/whitebox/Context;
   #59 = Utf8               materializeWidened
   #60 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #61 = NameAndType        #24:#56       // c:()Lscala/reflect/macros/whitebox/Context;
   #62 = Methodref          #2.#61        // shapeless/NatMacros.c:()Lscala/reflect/macros/whitebox/Context;
   #63 = Utf8               scala/reflect/macros/whitebox/Context
   #64 = Class              #63           // scala/reflect/macros/whitebox/Context
   #65 = Utf8               universe
   #66 = Utf8               ()Lscala/reflect/macros/Universe;
   #67 = NameAndType        #65:#66       // universe:()Lscala/reflect/macros/Universe;
   #68 = InterfaceMethodref #64.#67       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
   #69 = Utf8               scala/reflect/macros/Universe
   #70 = Class              #69           // scala/reflect/macros/Universe
   #71 = Utf8               TreeTag
   #72 = Utf8               ()Lscala/reflect/ClassTag;
   #73 = NameAndType        #71:#72       // TreeTag:()Lscala/reflect/ClassTag;
   #74 = Methodref          #70.#73       // scala/reflect/macros/Universe.TreeTag:()Lscala/reflect/ClassTag;
   #75 = Utf8               scala/reflect/ClassTag
   #76 = Class              #75           // scala/reflect/ClassTag
   #77 = Utf8               unapply
   #78 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #79 = NameAndType        #77:#78       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #80 = InterfaceMethodref #76.#79       // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
   #81 = Utf8               scala/Option
   #82 = Class              #81           // scala/Option
   #83 = Utf8               isEmpty
   #84 = Utf8               ()Z
   #85 = NameAndType        #83:#84       // isEmpty:()Z
   #86 = Methodref          #82.#85       // scala/Option.isEmpty:()Z
   #87 = Utf8               get
   #88 = Utf8               ()Ljava/lang/Object;
   #89 = NameAndType        #87:#88       // get:()Ljava/lang/Object;
   #90 = Methodref          #82.#89       // scala/Option.get:()Ljava/lang/Object;
   #91 = NameAndType        #48:#49       // NatLiteral:()Lshapeless/NatMacroDefns$NatLiteral$;
   #92 = Methodref          #2.#91        // shapeless/NatMacros.NatLiteral:()Lshapeless/NatMacroDefns$NatLiteral$;
   #93 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
   #94 = NameAndType        #77:#93       // unapply:(Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
   #95 = Methodref          #22.#94       // shapeless/NatMacroDefns$NatLiteral$.unapply:(Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
   #96 = Utf8               scala/runtime/BoxesRunTime
   #97 = Class              #96           // scala/runtime/BoxesRunTime
   #98 = Utf8               unboxToInt
   #99 = Utf8               (Ljava/lang/Object;)I
  #100 = NameAndType        #98:#99       // unboxToInt:(Ljava/lang/Object;)I
  #101 = Methodref          #97.#100      // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #102 = NameAndType        #44:#29       // mkNatValue:(I)Lscala/reflect/api/Trees$TreeApi;
  #103 = Methodref          #2.#102       // shapeless/NatMacros.mkNatValue:(I)Lscala/reflect/api/Trees$TreeApi;
  #104 = Utf8               enclosingPosition
  #105 = Utf8               ()Lscala/reflect/api/Position;
  #106 = NameAndType        #104:#105     // enclosingPosition:()Lscala/reflect/api/Position;
  #107 = InterfaceMethodref #64.#106      // scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
  #108 = Utf8               java/lang/StringBuilder
  #109 = Class              #108          // java/lang/StringBuilder
  #110 = Integer            59
  #111 = Utf8               <init>
  #112 = Utf8               (I)V
  #113 = NameAndType        #111:#112     // "<init>":(I)V
  #114 = Methodref          #109.#113     // java/lang/StringBuilder."<init>":(I)V
  #115 = Utf8               Expression
  #116 = String             #115          // Expression
  #117 = Utf8               append
  #118 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #119 = NameAndType        #117:#118     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #120 = Methodref          #109.#119     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #121 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #122 = NameAndType        #117:#121     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #123 = Methodref          #109.#122     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #124 = Utf8                does not evaluate to a non-negative Int literal
  #125 = String             #124          //  does not evaluate to a non-negative Int literal
  #126 = Utf8               toString
  #127 = Utf8               ()Ljava/lang/String;
  #128 = NameAndType        #126:#127     // toString:()Ljava/lang/String;
  #129 = Methodref          #109.#128     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #130 = Utf8               abort
  #131 = Utf8               (Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #132 = NameAndType        #130:#131     // abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #133 = InterfaceMethodref #64.#132      // scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #134 = Utf8               n
  #135 = Utf8               Lscala/reflect/api/Trees$TreeApi;
  #136 = Utf8               (Lshapeless/NatMacroDefns;)V
  #137 = NameAndType        #111:#136     // "<init>":(Lshapeless/NatMacroDefns;)V
  #138 = Methodref          #22.#137      // shapeless/NatMacroDefns$NatLiteral$."<init>":(Lshapeless/NatMacroDefns;)V
  #139 = Utf8               java/lang/Throwable
  #140 = Class              #139          // java/lang/Throwable
  #141 = Utf8               (Lscala/reflect/macros/whitebox/Context;)V
  #142 = NameAndType        #111:#53      // "<init>":()V
  #143 = Methodref          #4.#142       // java/lang/Object."<init>":()V
  #144 = Utf8               $init$
  #145 = NameAndType        #144:#136     // $init$:(Lshapeless/NatMacroDefns;)V
  #146 = InterfaceMethodref #6.#145       // shapeless/NatMacroDefns.$init$:(Lshapeless/NatMacroDefns;)V
  #147 = Utf8               Code
  #148 = Utf8               LineNumberTable
  #149 = Utf8               LocalVariableTable
  #150 = Utf8               MethodParameters
  #151 = Utf8               StackMapTable
  #152 = Utf8               InnerClasses
  #153 = Utf8               SourceFile
  #154 = Utf8               RuntimeVisibleAnnotations
  #155 = Utf8               ScalaInlineInfo
  #156 = Utf8               ScalaSig
{
  private final scala.reflect.macros.whitebox.Context c;
    descriptor: Lscala/reflect/macros/whitebox/Context;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile shapeless.NatMacroDefns$NatLiteral$ NatLiteral$module;
    descriptor: Lshapeless/NatMacroDefns$NatLiteral$;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public scala.reflect.api.Trees$TreeApi mkNatTpt(int);
    descriptor: (I)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #34                 // InterfaceMethod shapeless/NatMacroDefns.mkNatTpt$:(Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Trees$TreeApi;
         5: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lshapeless/NatMacros;
            0       6     1     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public scala.reflect.api.Types$TypeApi mkNatTpe(int);
    descriptor: (I)Lscala/reflect/api/Types$TypeApi;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #43                 // InterfaceMethod shapeless/NatMacroDefns.mkNatTpe$:(Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Types$TypeApi;
         5: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lshapeless/NatMacros;
            0       6     1     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public scala.reflect.api.Trees$TreeApi mkNatValue(int);
    descriptor: (I)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #47                 // InterfaceMethod shapeless/NatMacroDefns.mkNatValue$:(Lshapeless/NatMacroDefns;I)Lscala/reflect/api/Trees$TreeApi;
         5: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lshapeless/NatMacros;
            0       6     1     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public shapeless.NatMacroDefns$NatLiteral$ NatLiteral();
    descriptor: ()Lshapeless/NatMacroDefns$NatLiteral$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #51                 // Field NatLiteral$module:Lshapeless/NatMacroDefns$NatLiteral$;
         4: ifnonnull     11
         7: aload_0
         8: invokespecial #55                 // Method NatLiteral$lzycompute$1:()V
        11: aload_0
        12: getfield      #51                 // Field NatLiteral$module:Lshapeless/NatMacroDefns$NatLiteral$;
        15: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lshapeless/NatMacros;

  public scala.reflect.macros.whitebox.Context c();
    descriptor: ()Lscala/reflect/macros/whitebox/Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #58                 // Field c:Lscala/reflect/macros/whitebox/Context;
         4: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lshapeless/NatMacros;

  public scala.reflect.api.Trees$TreeApi materializeWidened(scala.reflect.api.Trees$TreeApi);
    descriptor: (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=8, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        97
         6: aload_0
         7: invokevirtual #62                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        10: invokeinterface #68,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        15: invokevirtual #74                 // Method scala/reflect/macros/Universe.TreeTag:()Lscala/reflect/ClassTag;
        18: aload_3
        19: invokeinterface #80,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        24: astore        4
        26: aload         4
        28: invokevirtual #86                 // Method scala/Option.isEmpty:()Z
        31: ifne          94
        34: aload         4
        36: invokevirtual #90                 // Method scala/Option.get:()Ljava/lang/Object;
        39: checkcast     #12                 // class scala/reflect/api/Trees$TreeApi
        42: astore        5
        44: aload         5
        46: ifnull        91
        49: aload_0
        50: invokevirtual #92                 // Method NatLiteral:()Lshapeless/NatMacroDefns$NatLiteral$;
        53: aload         5
        55: invokevirtual #95                 // Method shapeless/NatMacroDefns$NatLiteral$.unapply:(Lscala/reflect/api/Trees$TreeApi;)Lscala/Option;
        58: astore        6
        60: aload         6
        62: invokevirtual #86                 // Method scala/Option.isEmpty:()Z
        65: ifne          88
        68: aload         6
        70: invokevirtual #90                 // Method scala/Option.get:()Ljava/lang/Object;
        73: invokestatic  #101                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        76: istore        7
        78: aload_0
        79: iload         7
        81: invokevirtual #103                // Method mkNatValue:(I)Lscala/reflect/api/Trees$TreeApi;
        84: astore_2
        85: goto          145
        88: goto          100
        91: goto          100
        94: goto          100
        97: goto          100
       100: aload_0
       101: invokevirtual #62                 // Method c:()Lscala/reflect/macros/whitebox/Context;
       104: aload_0
       105: invokevirtual #62                 // Method c:()Lscala/reflect/macros/whitebox/Context;
       108: invokeinterface #107,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       113: new           #109                // class java/lang/StringBuilder
       116: dup
       117: ldc           #110                // int 59
       119: invokespecial #114                // Method java/lang/StringBuilder."<init>":(I)V
       122: ldc           #116                // String Expression
       124: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       127: aload_1
       128: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       131: ldc           #125                // String  does not evaluate to a non-negative Int literal
       133: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       136: invokevirtual #129                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       139: invokeinterface #133,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       144: athrow
       145: aload_2
       146: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 88
          locals = [ class shapeless/NatMacros, class scala/reflect/api/Trees$TreeApi, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class shapeless/NatMacros, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, int ]
          stack = []
      LineNumberTable:
        line 78: 0
        line 79: 2
        line 78: 34
        line 79: 44
        line 78: 68
        line 79: 78
        line 81: 100
        line 78: 145
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           76      12     7     n   I
            0     147     0  this   Lshapeless/NatMacros;
            0     147     1     i   Lscala/reflect/api/Trees$TreeApi;
    MethodParameters:
      Name                           Flags
      i                              final

  private final void NatLiteral$lzycompute$1();
    descriptor: ()V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #51                 // Field NatLiteral$module:Lshapeless/NatMacroDefns$NatLiteral$;
         8: ifnonnull     23
        11: aload_0
        12: new           #22                 // class shapeless/NatMacroDefns$NatLiteral$
        15: dup
        16: aload_0
        17: invokespecial #138                // Method shapeless/NatMacroDefns$NatLiteral$."<init>":(Lshapeless/NatMacroDefns;)V
        20: putfield      #51                 // Field NatLiteral$module:Lshapeless/NatMacroDefns$NatLiteral$;
        23: aload_1
        24: monitorexit
        25: goto          31
        28: aload_1
        29: monitorexit
        30: athrow
        31: return
      Exception table:
         from    to  target type
             4    23    28   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class shapeless/NatMacros ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lshapeless/NatMacros;

  public shapeless.NatMacros(scala.reflect.macros.whitebox.Context);
    descriptor: (Lscala/reflect/macros/whitebox/Context;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #58                 // Field c:Lscala/reflect/macros/whitebox/Context;
         5: aload_0
         6: invokespecial #143                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #146                // InterfaceMethod shapeless/NatMacroDefns.$init$:(Lshapeless/NatMacroDefns;)V
        13: return
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lshapeless/NatMacros;
            0      14     1     c   Lscala/reflect/macros/whitebox/Context;
    MethodParameters:
      Name                           Flags
      c                              final
}
InnerClasses:
  public #15= #12 of #14;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public abstract #20= #17 of #19;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public #23= #22 of #6;                  // NatLiteral$=class shapeless/NatMacroDefns$NatLiteral$ of class shapeless/NatMacroDefns
SourceFile: "nat.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005a2A!\u0002\u0004\u0001\u0013!AA\u0003\u0001BC\u0002\u0013\u0005Q\u0003\u0003\u0005!\u0001\t\u0005\t\u0015!\u0003\u0017\u0011\u0015\t\u0003\u0001\"\u0001#\u0011\u0015)\u0003\u0001\"\u0001\'\u0005%q\u0015\r^\'bGJ|7OC\u0001\b\u0003%\u0019\b.\u00199fY\u0016\u001c8o\u0001\u0001\u0014\u0007\u0001Q\u0001\u0003\u0005\u0002\f\u001d5\tABC\u0001\u000e\u0003\u0015\u00198-\u00197b\u0013\tyAB\u0001\u0004B]f\u0014VM\u001a\t\u0003#Ii\u0011AB\u0005\u0003\'\u0019\u0011QBT1u\u001b\u0006\u001c\'o\u001c#fM:\u001c\u0018!A2\u0016\u0003Y\u0001\"a\u0006\u0010\u000e\u0003aQ!!\u0007\u000e\u0002\u0011]D\u0017\u000e^3c_bT!a\u0007\u000f\u0002\r5\f7M]8t\u0015\tiB\"A\u0004sK\u001adWm\u0019;\n\u0005}A\"aB\"p]R,\u0007\u0010^\u0001\u0003G\u0002\na\u0001P5oSRtDCA\u0012%!\t\t\u0002\u0001C\u0003\u0015\u0007\u0001\u0007a#\u0001\nnCR,\'/[1mSj,w+\u001b3f]\u0016$GCA\u00147!\tA\u0003G\u0004\u0002*W9\u0011!&A\u0007\u0002\u0001%\u0011A&L\u0001\tk:Lg/\u001a:tK&\u0011qD\f\u0006\u0003_i\t\u0001B\u00197bG.\u0014w\u000e_\u0005\u0003cI\u0012A\u0001\u0016:fK&\u00111\u0007\u000e\u0002\u0006)J,Wm\u001d\u0006\u0003kq\t1!\u00199j\u0011\u00159D\u00011\u0001(\u0003\u0005I\u0007"
    )
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 00 00 08 00 6F 00 8D 00 00 34 00 35 01 00 30
   00 31 01 00 18 00 38 00 00 3B 00 3C 00 00 26 00
   27 00 00 1C 00 1D 00 00 2C 00 1D 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
