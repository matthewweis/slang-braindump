Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/cli/JSON$Parser.class
  Last modified May 29, 2022; size 23653 bytes
  SHA-256 checksum 073c4ca3f5501c9c0d3957660358fefb4eed6f08edd31fd7b2f45ac1e429d229
  Compiled from "JSON.scala"
public final class org.sireum.cli.JSON$Parser implements org.sireum.RecordSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/cli/JSON$Parser
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 77, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/cli/JSON$Parser
    #2 = Class              #1            // org/sireum/cli/JSON$Parser
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/RecordSig
    #6 = Class              #5            // org/sireum/RecordSig
    #7 = Utf8               JSON.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #14 = Class              #13           // org/sireum/$internal/PackageTrait$ISZ$
   #15 = Utf8               org/sireum/$internal/PackageTrait
   #16 = Class              #15           // org/sireum/$internal/PackageTrait
   #17 = Utf8               ISZ$
   #18 = Utf8               org/sireum/Json$ErrorMsg
   #19 = Class              #18           // org/sireum/Json$ErrorMsg
   #20 = Utf8               org/sireum/Json
   #21 = Class              #20           // org/sireum/Json
   #22 = Utf8               ErrorMsg
   #23 = Utf8               org/sireum/Json$Parser
   #24 = Class              #23           // org/sireum/Json$Parser
   #25 = Utf8               Parser
   #26 = Utf8               org/sireum/Json$Parser$
   #27 = Class              #26           // org/sireum/Json$Parser$
   #28 = Utf8               Parser$
   #29 = Utf8               org/sireum/cli/CliOpt$Group
   #30 = Class              #29           // org/sireum/cli/CliOpt$Group
   #31 = Utf8               org/sireum/cli/CliOpt
   #32 = Class              #31           // org/sireum/cli/CliOpt
   #33 = Utf8               Group
   #34 = Utf8               org/sireum/cli/CliOpt$Group$
   #35 = Class              #34           // org/sireum/cli/CliOpt$Group$
   #36 = Utf8               Group$
   #37 = Utf8               org/sireum/cli/CliOpt$Opt
   #38 = Class              #37           // org/sireum/cli/CliOpt$Opt
   #39 = Utf8               Opt
   #40 = Utf8               org/sireum/cli/CliOpt$Opt$
   #41 = Class              #40           // org/sireum/cli/CliOpt$Opt$
   #42 = Utf8               Opt$
   #43 = Utf8               org/sireum/cli/CliOpt$OptGroup
   #44 = Class              #43           // org/sireum/cli/CliOpt$OptGroup
   #45 = Utf8               OptGroup
   #46 = Utf8               org/sireum/cli/CliOpt$OptGroup$
   #47 = Class              #46           // org/sireum/cli/CliOpt$OptGroup$
   #48 = Utf8               OptGroup$
   #49 = Utf8               org/sireum/cli/CliOpt$Tool
   #50 = Class              #49           // org/sireum/cli/CliOpt$Tool
   #51 = Utf8               Tool
   #52 = Utf8               org/sireum/cli/CliOpt$Tool$
   #53 = Class              #52           // org/sireum/cli/CliOpt$Tool$
   #54 = Utf8               Tool$
   #55 = Utf8               org/sireum/cli/CliOpt$Type
   #56 = Class              #55           // org/sireum/cli/CliOpt$Type
   #57 = Utf8               Type
   #58 = Utf8               org/sireum/cli/CliOpt$Type$
   #59 = Class              #58           // org/sireum/cli/CliOpt$Type$
   #60 = Utf8               Type$
   #61 = Utf8               org/sireum/cli/CliOpt$Type$Choice
   #62 = Class              #61           // org/sireum/cli/CliOpt$Type$Choice
   #63 = Utf8               Choice
   #64 = Utf8               org/sireum/cli/CliOpt$Type$Choice$
   #65 = Class              #64           // org/sireum/cli/CliOpt$Type$Choice$
   #66 = Utf8               Choice$
   #67 = Utf8               org/sireum/cli/CliOpt$Type$Flag
   #68 = Class              #67           // org/sireum/cli/CliOpt$Type$Flag
   #69 = Utf8               Flag
   #70 = Utf8               org/sireum/cli/CliOpt$Type$Flag$
   #71 = Class              #70           // org/sireum/cli/CliOpt$Type$Flag$
   #72 = Utf8               Flag$
   #73 = Utf8               org/sireum/cli/CliOpt$Type$Num
   #74 = Class              #73           // org/sireum/cli/CliOpt$Type$Num
   #75 = Utf8               Num
   #76 = Utf8               org/sireum/cli/CliOpt$Type$Num$
   #77 = Class              #76           // org/sireum/cli/CliOpt$Type$Num$
   #78 = Utf8               Num$
   #79 = Utf8               org/sireum/cli/CliOpt$Type$NumChoice
   #80 = Class              #79           // org/sireum/cli/CliOpt$Type$NumChoice
   #81 = Utf8               NumChoice
   #82 = Utf8               org/sireum/cli/CliOpt$Type$NumChoice$
   #83 = Class              #82           // org/sireum/cli/CliOpt$Type$NumChoice$
   #84 = Utf8               NumChoice$
   #85 = Utf8               org/sireum/cli/CliOpt$Type$NumFlag
   #86 = Class              #85           // org/sireum/cli/CliOpt$Type$NumFlag
   #87 = Utf8               NumFlag
   #88 = Utf8               org/sireum/cli/CliOpt$Type$NumFlag$
   #89 = Class              #88           // org/sireum/cli/CliOpt$Type$NumFlag$
   #90 = Utf8               NumFlag$
   #91 = Utf8               org/sireum/cli/CliOpt$Type$Path
   #92 = Class              #91           // org/sireum/cli/CliOpt$Type$Path
   #93 = Utf8               Path
   #94 = Utf8               org/sireum/cli/CliOpt$Type$Path$
   #95 = Class              #94           // org/sireum/cli/CliOpt$Type$Path$
   #96 = Utf8               Path$
   #97 = Utf8               org/sireum/cli/CliOpt$Type$Str
   #98 = Class              #97           // org/sireum/cli/CliOpt$Type$Str
   #99 = Utf8               Str
  #100 = Utf8               org/sireum/cli/CliOpt$Type$Str$
  #101 = Class              #100          // org/sireum/cli/CliOpt$Type$Str$
  #102 = Utf8               Str$
  #103 = Utf8               org/sireum/cli/JSON
  #104 = Class              #103          // org/sireum/cli/JSON
  #105 = Utf8               _input
  #106 = Utf8               Ljava/lang/String;
  #107 = Utf8               parser
  #108 = Utf8               Lorg/sireum/Json$Parser;
  #109 = Utf8               org$sireum$RecordSig$$$isOwned
  #110 = Utf8               Z
  #111 = Utf8               $owned
  #112 = Utf8               ()Z
  #113 = Utf8               $owned$
  #114 = Utf8               (Lorg/sireum/RecordSig;)Z
  #115 = NameAndType        #113:#114     // $owned$:(Lorg/sireum/RecordSig;)Z
  #116 = InterfaceMethodref #6.#115       // org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
  #117 = Utf8               this
  #118 = Utf8               Lorg/sireum/cli/JSON$Parser;
  #119 = Utf8               $owned_$eq
  #120 = Utf8               (Z)Lorg/sireum/RecordSig;
  #121 = Utf8               b
  #122 = Utf8               $owned_$eq$
  #123 = Utf8               (Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
  #124 = NameAndType        #122:#123     // $owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
  #125 = InterfaceMethodref #6.#124       // org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
  #126 = Utf8               hash
  #127 = Utf8               ()Lorg/sireum/Z;
  #128 = Utf8               hash$
  #129 = Utf8               (Lorg/sireum/RecordSig;)Lorg/sireum/Z;
  #130 = NameAndType        #128:#129     // hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
  #131 = InterfaceMethodref #6.#130       // org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
  #132 = Utf8               $cannotMixImmutableAndMutable
  #133 = Utf8               ()Lscala/runtime/Nothing$;
  #134 = Utf8               org/sireum/Mutable
  #135 = Class              #134          // org/sireum/Mutable
  #136 = Utf8               $cannotMixImmutableAndMutable$
  #137 = Utf8               (Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
  #138 = NameAndType        #136:#137     // $cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
  #139 = InterfaceMethodref #135.#138     // org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
  #140 = Utf8               $hasEquals
  #141 = Utf8               $hasEquals$
  #142 = Utf8               (Lorg/sireum/Mutable;)Z
  #143 = NameAndType        #141:#142     // $hasEquals$:(Lorg/sireum/Mutable;)Z
  #144 = InterfaceMethodref #135.#143     // org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
  #145 = Utf8               $hasString
  #146 = Utf8               $hasString$
  #147 = NameAndType        #146:#142     // $hasString$:(Lorg/sireum/Mutable;)Z
  #148 = InterfaceMethodref #135.#147     // org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
  #149 = NameAndType        #109:#110     // org$sireum$RecordSig$$$isOwned:Z
  #150 = Fieldref           #2.#149       // org/sireum/cli/JSON$Parser.org$sireum$RecordSig$$$isOwned:Z
  #151 = Utf8               org$sireum$RecordSig$$$isOwned_$eq
  #152 = Utf8               (Z)V
  #153 = Utf8               x$1
  #154 = Utf8               input
  #155 = Utf8               ()Ljava/lang/String;
  #156 = NameAndType        #105:#106     // _input:Ljava/lang/String;
  #157 = Fieldref           #2.#156       // org/sireum/cli/JSON$Parser._input:Ljava/lang/String;
  #158 = Utf8               getInput
  #159 = Utf8               toString
  #160 = NameAndType        #145:#112     // $hasString:()Z
  #161 = Methodref          #2.#160       // org/sireum/cli/JSON$Parser.$hasString:()Z
  #162 = Utf8               string$
  #163 = Utf8               (Lorg/sireum/RecordSig;)Ljava/lang/String;
  #164 = NameAndType        #162:#163     // string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #165 = InterfaceMethodref #6.#164       // org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #166 = Utf8               java/lang/StringBuilder
  #167 = Class              #166          // java/lang/StringBuilder
  #168 = Utf8               <init>
  #169 = Utf8               ()V
  #170 = NameAndType        #168:#169     // "<init>":()V
  #171 = Methodref          #167.#170     // java/lang/StringBuilder."<init>":()V
  #172 = String             #25           // Parser
  #173 = Utf8               append
  #174 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #175 = NameAndType        #173:#174     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #176 = Methodref          #167.#175     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #177 = Utf8               (C)Ljava/lang/StringBuilder;
  #178 = NameAndType        #173:#177     // append:(C)Ljava/lang/StringBuilder;
  #179 = Methodref          #167.#178     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #180 = Utf8               org/sireum/String$
  #181 = Class              #180          // org/sireum/String$
  #182 = Utf8               MODULE$
  #183 = Utf8               Lorg/sireum/String$;
  #184 = NameAndType        #182:#183     // MODULE$:Lorg/sireum/String$;
  #185 = Fieldref           #181.#184     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #186 = Utf8               org/sireum/String
  #187 = Class              #186          // org/sireum/String
  #188 = NameAndType        #154:#155     // input:()Ljava/lang/String;
  #189 = Methodref          #2.#188       // org/sireum/cli/JSON$Parser.input:()Ljava/lang/String;
  #190 = Utf8               (Ljava/lang/String;)V
  #191 = NameAndType        #168:#190     // "<init>":(Ljava/lang/String;)V
  #192 = Methodref          #187.#191     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #193 = Utf8               escape
  #194 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #195 = NameAndType        #193:#194     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #196 = Methodref          #181.#195     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #197 = NameAndType        #159:#155     // toString:()Ljava/lang/String;
  #198 = Methodref          #167.#197     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #199 = Utf8               sb
  #200 = Utf8               Ljava/lang/StringBuilder;
  #201 = Utf8               java/lang/String
  #202 = Class              #201          // java/lang/String
  #203 = Utf8               string
  #204 = Methodref          #2.#197       // org/sireum/cli/JSON$Parser.toString:()Ljava/lang/String;
  #205 = Utf8               apply
  #206 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #207 = NameAndType        #205:#206     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #208 = Methodref          #181.#207     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #209 = Utf8               hashCode
  #210 = Utf8               ()I
  #211 = NameAndType        #140:#112     // $hasEquals:()Z
  #212 = Methodref          #2.#211       // org/sireum/cli/JSON$Parser.$hasEquals:()Z
  #213 = NameAndType        #209:#210     // hashCode:()I
  #214 = Methodref          #4.#213       // java/lang/Object.hashCode:()I
  #215 = Utf8               scala/package$
  #216 = Class              #215          // scala/package$
  #217 = Utf8               Lscala/package$;
  #218 = NameAndType        #182:#217     // MODULE$:Lscala/package$;
  #219 = Fieldref           #216.#218     // scala/package$.MODULE$:Lscala/package$;
  #220 = Utf8               Seq
  #221 = Utf8               ()Lscala/collection/immutable/Seq$;
  #222 = NameAndType        #220:#221     // Seq:()Lscala/collection/immutable/Seq$;
  #223 = Methodref          #216.#222     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #224 = Utf8               scala/runtime/ScalaRunTime$
  #225 = Class              #224          // scala/runtime/ScalaRunTime$
  #226 = Utf8               Lscala/runtime/ScalaRunTime$;
  #227 = NameAndType        #182:#226     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #228 = Fieldref           #225.#227     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #229 = Utf8               getClass
  #230 = Utf8               ()Ljava/lang/Class;
  #231 = NameAndType        #229:#230     // getClass:()Ljava/lang/Class;
  #232 = Methodref          #2.#231       // org/sireum/cli/JSON$Parser.getClass:()Ljava/lang/Class;
  #233 = Utf8               java/lang/Class
  #234 = Class              #233          // java/lang/Class
  #235 = Utf8               getName
  #236 = NameAndType        #235:#155     // getName:()Ljava/lang/String;
  #237 = Methodref          #234.#236     // java/lang/Class.getName:()Ljava/lang/String;
  #238 = Utf8               genericWrapArray
  #239 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #240 = NameAndType        #238:#239     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #241 = Methodref          #225.#240     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #242 = Utf8               scala/collection/immutable/Seq$
  #243 = Class              #242          // scala/collection/immutable/Seq$
  #244 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #245 = NameAndType        #205:#244     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #246 = Methodref          #243.#245     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #247 = Utf8               scala/collection/Seq
  #248 = Class              #247          // scala/collection/Seq
  #249 = InterfaceMethodref #248.#213     // scala/collection/Seq.hashCode:()I
  #250 = Utf8               equals
  #251 = Utf8               (Ljava/lang/Object;)Z
  #252 = Utf8               o
  #253 = NameAndType        #250:#251     // equals:(Ljava/lang/Object;)Z
  #254 = Methodref          #4.#253       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #255 = Methodref          #2.#213       // org/sireum/cli/JSON$Parser.hashCode:()I
  #256 = Utf8               Ljava/lang/Object;
  #257 = Utf8               (Ljava/lang/String;)Lorg/sireum/cli/JSON$Parser;
  #258 = Methodref          #2.#191       // org/sireum/cli/JSON$Parser."<init>":(Ljava/lang/String;)V
  #259 = Utf8               apply$default$1
  #260 = Utf8               $content
  #261 = Utf8               ()Lscala/collection/immutable/Seq;
  #262 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #263 = Utf8               scala/Tuple2
  #264 = Class              #263          // scala/Tuple2
  #265 = Utf8               type
  #266 = String             #265          // type
  #267 = Utf8               List
  #268 = Utf8               ()Lscala/collection/immutable/List$;
  #269 = NameAndType        #267:#268     // List:()Lscala/collection/immutable/List$;
  #270 = Methodref          #216.#269     // scala/package$.List:()Lscala/collection/immutable/List$;
  #271 = Utf8               org
  #272 = String             #271          // org
  #273 = Utf8               sireum
  #274 = String             #273          // sireum
  #275 = Utf8               cli
  #276 = String             #275          // cli
  #277 = Utf8               [Ljava/lang/Object;
  #278 = Class              #277          // "[Ljava/lang/Object;"
  #279 = Utf8               wrapRefArray
  #280 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #281 = NameAndType        #279:#280     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #282 = Methodref          #225.#281     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #283 = Utf8               scala/collection/immutable/List$
  #284 = Class              #283          // scala/collection/immutable/List$
  #285 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #286 = NameAndType        #205:#285     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #287 = Methodref          #284.#286     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #288 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #289 = NameAndType        #168:#288     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #290 = Methodref          #264.#289     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #291 = String             #154          // input
  #292 = Utf8               scala/collection/immutable/Seq
  #293 = Class              #292          // scala/collection/immutable/Seq
  #294 = Utf8               $clone
  #295 = Utf8               ()Lorg/sireum/cli/JSON$Parser;
  #296 = Utf8               org/sireum/helper$
  #297 = Class              #296          // org/sireum/helper$
  #298 = Utf8               Lorg/sireum/helper$;
  #299 = NameAndType        #182:#298     // MODULE$:Lorg/sireum/helper$;
  #300 = Fieldref           #297.#299     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #301 = Utf8               cloneAssign
  #302 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #303 = NameAndType        #301:#302     // cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #304 = Methodref          #297.#303     // org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #305 = Utf8               value
  #306 = NameAndType        #305:#155     // value:()Ljava/lang/String;
  #307 = Methodref          #187.#306     // org/sireum/String.value:()Ljava/lang/String;
  #308 = Utf8               r
  #309 = Utf8               ()Lorg/sireum/Json$Parser;
  #310 = NameAndType        #107:#108     // parser:Lorg/sireum/Json$Parser;
  #311 = Fieldref           #2.#310       // org/sireum/cli/JSON$Parser.parser:Lorg/sireum/Json$Parser;
  #312 = Utf8               errorOpt
  #313 = Utf8               ()Lorg/sireum/Option;
  #314 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/Json$ErrorMsg;>;
  #315 = NameAndType        #107:#309     // parser:()Lorg/sireum/Json$Parser;
  #316 = Methodref          #2.#315       // org/sireum/cli/JSON$Parser.parser:()Lorg/sireum/Json$Parser;
  #317 = NameAndType        #312:#313     // errorOpt:()Lorg/sireum/Option;
  #318 = Methodref          #24.#317      // org/sireum/Json$Parser.errorOpt:()Lorg/sireum/Option;
  #319 = Utf8               parseCliOpt
  #320 = Utf8               ()Lorg/sireum/cli/CliOpt;
  #321 = Utf8               org/sireum/package$
  #322 = Class              #321          // org/sireum/package$
  #323 = Utf8               Lorg/sireum/package$;
  #324 = NameAndType        #182:#323     // MODULE$:Lorg/sireum/package$;
  #325 = Fieldref           #322.#324     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #326 = Utf8               ISZ
  #327 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #328 = NameAndType        #326:#327     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #329 = Methodref          #322.#328     // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #330 = Utf8               CliOpt.Group
  #331 = String             #330          // CliOpt.Group
  #332 = Utf8               CliOpt.Tool
  #333 = String             #332          // CliOpt.Tool
  #334 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #335 = NameAndType        #205:#334     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #336 = Methodref          #14.#335      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #337 = Utf8               parseObjectTypes
  #338 = Utf8               (Lorg/sireum/IS;)Ljava/lang/String;
  #339 = NameAndType        #337:#338     // parseObjectTypes:(Lorg/sireum/IS;)Ljava/lang/String;
  #340 = Methodref          #24.#339      // org/sireum/Json$Parser.parseObjectTypes:(Lorg/sireum/IS;)Ljava/lang/String;
  #341 = Utf8               native$extension
  #342 = NameAndType        #341:#206     // native$extension:(Ljava/lang/String;)Ljava/lang/String;
  #343 = Methodref          #181.#342     // org/sireum/String$.native$extension:(Ljava/lang/String;)Ljava/lang/String;
  #344 = Methodref          #202.#213     // java/lang/String.hashCode:()I
  #345 = Methodref          #202.#253     // java/lang/String.equals:(Ljava/lang/Object;)Z
  #346 = Utf8               T
  #347 = NameAndType        #346:#112     // T:()Z
  #348 = Methodref          #322.#347     // org/sireum/package$.T:()Z
  #349 = Utf8               parseCliOptGroupT
  #350 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Group;
  #351 = NameAndType        #349:#350     // parseCliOptGroupT:(Z)Lorg/sireum/cli/CliOpt$Group;
  #352 = Methodref          #2.#351       // org/sireum/cli/JSON$Parser.parseCliOptGroupT:(Z)Lorg/sireum/cli/CliOpt$Group;
  #353 = Utf8               parseCliOptToolT
  #354 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Tool;
  #355 = NameAndType        #353:#354     // parseCliOptToolT:(Z)Lorg/sireum/cli/CliOpt$Tool;
  #356 = Methodref          #2.#355       // org/sireum/cli/JSON$Parser.parseCliOptToolT:(Z)Lorg/sireum/cli/CliOpt$Tool;
  #357 = Utf8               Lorg/sireum/cli/CliOpt$Group;
  #358 = Utf8               Lorg/sireum/cli/CliOpt$Tool;
  #359 = Utf8               t
  #360 = Utf8               parseCliOptGroup
  #361 = Utf8               ()Lorg/sireum/cli/CliOpt$Group;
  #362 = Utf8               F
  #363 = NameAndType        #362:#112     // F:()Z
  #364 = Methodref          #322.#363     // org/sireum/package$.F:()Z
  #365 = Utf8               typeParsed
  #366 = Utf8               org/sireum/B$
  #367 = Class              #366          // org/sireum/B$
  #368 = Utf8               Lorg/sireum/B$;
  #369 = NameAndType        #182:#368     // MODULE$:Lorg/sireum/B$;
  #370 = Fieldref           #367.#369     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #371 = Utf8               unary_$bang$extension
  #372 = Utf8               (Z)Z
  #373 = NameAndType        #371:#372     // unary_$bang$extension:(Z)Z
  #374 = Methodref          #367.#373     // org/sireum/B$.unary_$bang$extension:(Z)Z
  #375 = Utf8               $4B
  #376 = NameAndType        #375:#372     // $4B:(Z)Z
  #377 = Methodref          #367.#376     // org/sireum/B$.$4B:(Z)Z
  #378 = Utf8               parseObjectType
  #379 = NameAndType        #378:#206     // parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
  #380 = Methodref          #24.#379      // org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
  #381 = Utf8               scala/runtime/BoxedUnit
  #382 = Class              #381          // scala/runtime/BoxedUnit
  #383 = Utf8               UNIT
  #384 = Utf8               Lscala/runtime/BoxedUnit;
  #385 = NameAndType        #383:#384     // UNIT:Lscala/runtime/BoxedUnit;
  #386 = Fieldref           #382.#385     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #387 = Utf8               name
  #388 = String             #387          // name
  #389 = Utf8               parseObjectKey
  #390 = NameAndType        #389:#206     // parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
  #391 = Methodref          #24.#390      // org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
  #392 = Utf8               parseString
  #393 = NameAndType        #392:#155     // parseString:()Ljava/lang/String;
  #394 = Methodref          #24.#393      // org/sireum/Json$Parser.parseString:()Ljava/lang/String;
  #395 = Utf8               parseObjectNext
  #396 = NameAndType        #395:#112     // parseObjectNext:()Z
  #397 = Methodref          #24.#396      // org/sireum/Json$Parser.parseObjectNext:()Z
  #398 = Utf8               description
  #399 = String             #398          // description
  #400 = Utf8               header
  #401 = String             #400          // header
  #402 = Utf8               unlisted
  #403 = String             #402          // unlisted
  #404 = Utf8               parseB
  #405 = NameAndType        #404:#112     // parseB:()Z
  #406 = Methodref          #24.#405      // org/sireum/Json$Parser.parseB:()Z
  #407 = Utf8               subs
  #408 = String             #407          // subs
  #409 = Utf8               ()Ljava/lang/Object;
  #410 = MethodType         #409          //  ()Ljava/lang/Object;
  #411 = Utf8               $anonfun$parseCliOptGroupT$1
  #412 = Utf8               (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt;
  #413 = NameAndType        #411:#412     // $anonfun$parseCliOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt;
  #414 = Methodref          #2.#413       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt;
  #415 = MethodHandle       6:#414        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt;
  #416 = MethodType         #320          //  ()Lorg/sireum/cli/CliOpt;
  #417 = Integer            5
  #418 = Integer            1
  #419 = Utf8               java/lang/invoke/LambdaMetafactory
  #420 = Class              #419          // java/lang/invoke/LambdaMetafactory
  #421 = Utf8               altMetafactory
  #422 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #423 = NameAndType        #421:#422     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #424 = Methodref          #420.#423     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #425 = MethodHandle       6:#424        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #426 = Utf8               (Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #427 = NameAndType        #205:#426     // apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #428 = InvokeDynamic      #0:#427       // #0:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #429 = Utf8               parseISZ
  #430 = Utf8               (Lscala/Function0;)Lorg/sireum/IS;
  #431 = NameAndType        #429:#430     // parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
  #432 = Methodref          #24.#431      // org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
  #433 = Utf8               Lorg/sireum/cli/CliOpt$Group$;
  #434 = NameAndType        #182:#433     // MODULE$:Lorg/sireum/cli/CliOpt$Group$;
  #435 = Fieldref           #35.#434      // org/sireum/cli/CliOpt$Group$.MODULE$:Lorg/sireum/cli/CliOpt$Group$;
  #436 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Group;
  #437 = NameAndType        #205:#436     // apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Group;
  #438 = Methodref          #35.#437      // org/sireum/cli/CliOpt$Group$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Group;
  #439 = Utf8               Lorg/sireum/IS;
  #440 = Utf8               parseCliOptTool
  #441 = Utf8               ()Lorg/sireum/cli/CliOpt$Tool;
  #442 = Utf8               command
  #443 = String             #442          // command
  #444 = Utf8               usage
  #445 = String             #444          // usage
  #446 = Utf8               usageDescOpt
  #447 = String             #446          // usageDescOpt
  #448 = Utf8               $anonfun$parseCliOptToolT$1$adapted
  #449 = Utf8               (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #450 = NameAndType        #448:#449     // $anonfun$parseCliOptToolT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #451 = Methodref          #2.#450       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #452 = MethodHandle       6:#451        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #453 = InvokeDynamic      #1:#427       // #1:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #454 = Utf8               parseOption
  #455 = Utf8               (Lscala/Function0;)Lorg/sireum/Option;
  #456 = NameAndType        #454:#455     // parseOption:(Lscala/Function0;)Lorg/sireum/Option;
  #457 = Methodref          #24.#456      // org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
  #458 = Utf8               opts
  #459 = String             #458          // opts
  #460 = Utf8               $anonfun$parseCliOptToolT$2
  #461 = Utf8               (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
  #462 = NameAndType        #460:#461     // $anonfun$parseCliOptToolT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
  #463 = Methodref          #2.#462       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
  #464 = MethodHandle       6:#463        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
  #465 = Utf8               ()Lorg/sireum/cli/CliOpt$Opt;
  #466 = MethodType         #465          //  ()Lorg/sireum/cli/CliOpt$Opt;
  #467 = InvokeDynamic      #2:#427       // #2:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #468 = Utf8               groups
  #469 = String             #468          // groups
  #470 = Utf8               $anonfun$parseCliOptToolT$3
  #471 = Utf8               (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$OptGroup;
  #472 = NameAndType        #470:#471     // $anonfun$parseCliOptToolT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$OptGroup;
  #473 = Methodref          #2.#472       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$OptGroup;
  #474 = MethodHandle       6:#473        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$OptGroup;
  #475 = Utf8               ()Lorg/sireum/cli/CliOpt$OptGroup;
  #476 = MethodType         #475          //  ()Lorg/sireum/cli/CliOpt$OptGroup;
  #477 = InvokeDynamic      #3:#427       // #3:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #478 = Utf8               Lorg/sireum/cli/CliOpt$Tool$;
  #479 = NameAndType        #182:#478     // MODULE$:Lorg/sireum/cli/CliOpt$Tool$;
  #480 = Fieldref           #53.#479      // org/sireum/cli/CliOpt$Tool$.MODULE$:Lorg/sireum/cli/CliOpt$Tool$;
  #481 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Tool;
  #482 = NameAndType        #205:#481     // apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Tool;
  #483 = Methodref          #53.#482      // org/sireum/cli/CliOpt$Tool$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Tool;
  #484 = Utf8               Lorg/sireum/Option;
  #485 = Utf8               parseCliOptOptGroup
  #486 = Utf8               parseCliOptOptGroupT
  #487 = Utf8               (Z)Lorg/sireum/cli/CliOpt$OptGroup;
  #488 = NameAndType        #486:#487     // parseCliOptOptGroupT:(Z)Lorg/sireum/cli/CliOpt$OptGroup;
  #489 = Methodref          #2.#488       // org/sireum/cli/JSON$Parser.parseCliOptOptGroupT:(Z)Lorg/sireum/cli/CliOpt$OptGroup;
  #490 = Utf8               Lorg/sireum/cli/CliOpt$OptGroup;
  #491 = Utf8               CliOpt.OptGroup
  #492 = String             #491          // CliOpt.OptGroup
  #493 = Utf8               $anonfun$parseCliOptOptGroupT$1
  #494 = NameAndType        #493:#461     // $anonfun$parseCliOptOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
  #495 = Methodref          #2.#494       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
  #496 = MethodHandle       6:#495        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
  #497 = InvokeDynamic      #4:#427       // #4:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #498 = Utf8               Lorg/sireum/cli/CliOpt$OptGroup$;
  #499 = NameAndType        #182:#498     // MODULE$:Lorg/sireum/cli/CliOpt$OptGroup$;
  #500 = Fieldref           #47.#499      // org/sireum/cli/CliOpt$OptGroup$.MODULE$:Lorg/sireum/cli/CliOpt$OptGroup$;
  #501 = Utf8               (Ljava/lang/String;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$OptGroup;
  #502 = NameAndType        #205:#501     // apply:(Ljava/lang/String;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$OptGroup;
  #503 = Methodref          #47.#502      // org/sireum/cli/CliOpt$OptGroup$.apply:(Ljava/lang/String;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$OptGroup;
  #504 = Utf8               parseCliOptOpt
  #505 = Utf8               parseCliOptOptT
  #506 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Opt;
  #507 = NameAndType        #505:#506     // parseCliOptOptT:(Z)Lorg/sireum/cli/CliOpt$Opt;
  #508 = Methodref          #2.#507       // org/sireum/cli/JSON$Parser.parseCliOptOptT:(Z)Lorg/sireum/cli/CliOpt$Opt;
  #509 = Utf8               Lorg/sireum/cli/CliOpt$Opt;
  #510 = Utf8               CliOpt.Opt
  #511 = String             #510          // CliOpt.Opt
  #512 = Utf8               longKey
  #513 = String             #512          // longKey
  #514 = Utf8               shortKey
  #515 = String             #514          // shortKey
  #516 = Utf8               $anonfun$parseCliOptOptT$1$adapted
  #517 = NameAndType        #516:#449     // $anonfun$parseCliOptOptT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #518 = Methodref          #2.#517       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptOptT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #519 = MethodHandle       6:#518        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptOptT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #520 = InvokeDynamic      #5:#427       // #5:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #521 = Utf8               tpe
  #522 = String             #521          // tpe
  #523 = Utf8               parseCliOptType
  #524 = Utf8               ()Lorg/sireum/cli/CliOpt$Type;
  #525 = NameAndType        #523:#524     // parseCliOptType:()Lorg/sireum/cli/CliOpt$Type;
  #526 = Methodref          #2.#525       // org/sireum/cli/JSON$Parser.parseCliOptType:()Lorg/sireum/cli/CliOpt$Type;
  #527 = Utf8               Lorg/sireum/cli/CliOpt$Opt$;
  #528 = NameAndType        #182:#527     // MODULE$:Lorg/sireum/cli/CliOpt$Opt$;
  #529 = Fieldref           #41.#528      // org/sireum/cli/CliOpt$Opt$.MODULE$:Lorg/sireum/cli/CliOpt$Opt$;
  #530 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/cli/CliOpt$Type;Ljava/lang/String;)Lorg/sireum/cli/CliOpt$Opt;
  #531 = NameAndType        #205:#530     // apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/cli/CliOpt$Type;Ljava/lang/String;)Lorg/sireum/cli/CliOpt$Opt;
  #532 = Methodref          #41.#531      // org/sireum/cli/CliOpt$Opt$.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/cli/CliOpt$Type;Ljava/lang/String;)Lorg/sireum/cli/CliOpt$Opt;
  #533 = Utf8               Lorg/sireum/cli/CliOpt$Type;
  #534 = Utf8               CliOpt.Type.Flag
  #535 = String             #534          // CliOpt.Type.Flag
  #536 = Utf8               CliOpt.Type.Num
  #537 = String             #536          // CliOpt.Type.Num
  #538 = Utf8               CliOpt.Type.NumFlag
  #539 = String             #538          // CliOpt.Type.NumFlag
  #540 = Utf8               CliOpt.Type.NumChoice
  #541 = String             #540          // CliOpt.Type.NumChoice
  #542 = Utf8               CliOpt.Type.Str
  #543 = String             #542          // CliOpt.Type.Str
  #544 = Utf8               CliOpt.Type.Choice
  #545 = String             #544          // CliOpt.Type.Choice
  #546 = Utf8               CliOpt.Type.Path
  #547 = String             #546          // CliOpt.Type.Path
  #548 = Utf8               parseCliOptTypeNumFlagT
  #549 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Type$NumFlag;
  #550 = NameAndType        #548:#549     // parseCliOptTypeNumFlagT:(Z)Lorg/sireum/cli/CliOpt$Type$NumFlag;
  #551 = Methodref          #2.#550       // org/sireum/cli/JSON$Parser.parseCliOptTypeNumFlagT:(Z)Lorg/sireum/cli/CliOpt$Type$NumFlag;
  #552 = Utf8               parseCliOptTypeChoiceT
  #553 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Type$Choice;
  #554 = NameAndType        #552:#553     // parseCliOptTypeChoiceT:(Z)Lorg/sireum/cli/CliOpt$Type$Choice;
  #555 = Methodref          #2.#554       // org/sireum/cli/JSON$Parser.parseCliOptTypeChoiceT:(Z)Lorg/sireum/cli/CliOpt$Type$Choice;
  #556 = Utf8               parseCliOptTypeNumChoiceT
  #557 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Type$NumChoice;
  #558 = NameAndType        #556:#557     // parseCliOptTypeNumChoiceT:(Z)Lorg/sireum/cli/CliOpt$Type$NumChoice;
  #559 = Methodref          #2.#558       // org/sireum/cli/JSON$Parser.parseCliOptTypeNumChoiceT:(Z)Lorg/sireum/cli/CliOpt$Type$NumChoice;
  #560 = Utf8               parseCliOptTypeNumT
  #561 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Type$Num;
  #562 = NameAndType        #560:#561     // parseCliOptTypeNumT:(Z)Lorg/sireum/cli/CliOpt$Type$Num;
  #563 = Methodref          #2.#562       // org/sireum/cli/JSON$Parser.parseCliOptTypeNumT:(Z)Lorg/sireum/cli/CliOpt$Type$Num;
  #564 = Utf8               parseCliOptTypeStrT
  #565 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Type$Str;
  #566 = NameAndType        #564:#565     // parseCliOptTypeStrT:(Z)Lorg/sireum/cli/CliOpt$Type$Str;
  #567 = Methodref          #2.#566       // org/sireum/cli/JSON$Parser.parseCliOptTypeStrT:(Z)Lorg/sireum/cli/CliOpt$Type$Str;
  #568 = Utf8               parseCliOptTypeFlagT
  #569 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Type$Flag;
  #570 = NameAndType        #568:#569     // parseCliOptTypeFlagT:(Z)Lorg/sireum/cli/CliOpt$Type$Flag;
  #571 = Methodref          #2.#570       // org/sireum/cli/JSON$Parser.parseCliOptTypeFlagT:(Z)Lorg/sireum/cli/CliOpt$Type$Flag;
  #572 = Utf8               parseCliOptTypePathT
  #573 = Utf8               (Z)Lorg/sireum/cli/CliOpt$Type$Path;
  #574 = NameAndType        #572:#573     // parseCliOptTypePathT:(Z)Lorg/sireum/cli/CliOpt$Type$Path;
  #575 = Methodref          #2.#574       // org/sireum/cli/JSON$Parser.parseCliOptTypePathT:(Z)Lorg/sireum/cli/CliOpt$Type$Path;
  #576 = Utf8               Lorg/sireum/cli/CliOpt$Type$NumFlag;
  #577 = Utf8               Lorg/sireum/cli/CliOpt$Type$Choice;
  #578 = Utf8               Lorg/sireum/cli/CliOpt$Type$NumChoice;
  #579 = Utf8               Lorg/sireum/cli/CliOpt$Type$Num;
  #580 = Utf8               Lorg/sireum/cli/CliOpt$Type$Str;
  #581 = Utf8               Lorg/sireum/cli/CliOpt$Type$Flag;
  #582 = Utf8               Lorg/sireum/cli/CliOpt$Type$Path;
  #583 = Utf8               parseCliOptTypeFlag
  #584 = Utf8               ()Lorg/sireum/cli/CliOpt$Type$Flag;
  #585 = Utf8               default
  #586 = String             #585          // default
  #587 = Utf8               Lorg/sireum/cli/CliOpt$Type$Flag$;
  #588 = NameAndType        #182:#587     // MODULE$:Lorg/sireum/cli/CliOpt$Type$Flag$;
  #589 = Fieldref           #71.#588      // org/sireum/cli/CliOpt$Type$Flag$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Flag$;
  #590 = NameAndType        #205:#569     // apply:(Z)Lorg/sireum/cli/CliOpt$Type$Flag;
  #591 = Methodref          #71.#590      // org/sireum/cli/CliOpt$Type$Flag$.apply:(Z)Lorg/sireum/cli/CliOpt$Type$Flag;
  #592 = Utf8               parseCliOptTypeNum
  #593 = Utf8               ()Lorg/sireum/cli/CliOpt$Type$Num;
  #594 = Utf8               sep
  #595 = String             #594          // sep
  #596 = Utf8               $anonfun$parseCliOptTypeNumT$1$adapted
  #597 = NameAndType        #596:#449     // $anonfun$parseCliOptTypeNumT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #598 = Methodref          #2.#597       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #599 = MethodHandle       6:#598        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #600 = InvokeDynamic      #6:#427       // #6:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #601 = Utf8               parseZ
  #602 = NameAndType        #601:#127     // parseZ:()Lorg/sireum/Z;
  #603 = Methodref          #24.#602      // org/sireum/Json$Parser.parseZ:()Lorg/sireum/Z;
  #604 = Utf8               min
  #605 = String             #604          // min
  #606 = Utf8               $anonfun$parseCliOptTypeNumT$2
  #607 = Utf8               (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #608 = NameAndType        #606:#607     // $anonfun$parseCliOptTypeNumT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #609 = Methodref          #2.#608       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #610 = MethodHandle       6:#609        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #611 = MethodType         #127          //  ()Lorg/sireum/Z;
  #612 = InvokeDynamic      #7:#427       // #7:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #613 = Utf8               max
  #614 = String             #613          // max
  #615 = Utf8               $anonfun$parseCliOptTypeNumT$3
  #616 = NameAndType        #615:#607     // $anonfun$parseCliOptTypeNumT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #617 = Methodref          #2.#616       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #618 = MethodHandle       6:#617        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #619 = InvokeDynamic      #8:#427       // #8:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #620 = Utf8               Lorg/sireum/cli/CliOpt$Type$Num$;
  #621 = NameAndType        #182:#620     // MODULE$:Lorg/sireum/cli/CliOpt$Type$Num$;
  #622 = Fieldref           #77.#621      // org/sireum/cli/CliOpt$Type$Num$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Num$;
  #623 = Utf8               (Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Num;
  #624 = NameAndType        #205:#623     // apply:(Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Num;
  #625 = Methodref          #77.#624      // org/sireum/cli/CliOpt$Type$Num$.apply:(Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Num;
  #626 = Utf8               Lorg/sireum/Z;
  #627 = Utf8               parseCliOptTypeNumFlag
  #628 = Utf8               ()Lorg/sireum/cli/CliOpt$Type$NumFlag;
  #629 = Utf8               $anonfun$parseCliOptTypeNumFlagT$1
  #630 = NameAndType        #629:#607     // $anonfun$parseCliOptTypeNumFlagT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #631 = Methodref          #2.#630       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumFlagT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #632 = MethodHandle       6:#631        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumFlagT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #633 = InvokeDynamic      #9:#427       // #9:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #634 = Utf8               $anonfun$parseCliOptTypeNumFlagT$2
  #635 = NameAndType        #634:#607     // $anonfun$parseCliOptTypeNumFlagT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #636 = Methodref          #2.#635       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumFlagT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #637 = MethodHandle       6:#636        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumFlagT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #638 = InvokeDynamic      #10:#427      // #10:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #639 = Utf8               Lorg/sireum/cli/CliOpt$Type$NumFlag$;
  #640 = NameAndType        #182:#639     // MODULE$:Lorg/sireum/cli/CliOpt$Type$NumFlag$;
  #641 = Fieldref           #89.#640      // org/sireum/cli/CliOpt$Type$NumFlag$.MODULE$:Lorg/sireum/cli/CliOpt$Type$NumFlag$;
  #642 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$NumFlag;
  #643 = NameAndType        #205:#642     // apply:(Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$NumFlag;
  #644 = Methodref          #89.#643      // org/sireum/cli/CliOpt$Type$NumFlag$.apply:(Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$NumFlag;
  #645 = Utf8               parseCliOptTypeNumChoice
  #646 = Utf8               ()Lorg/sireum/cli/CliOpt$Type$NumChoice;
  #647 = Utf8               $anonfun$parseCliOptTypeNumChoiceT$1$adapted
  #648 = NameAndType        #647:#449     // $anonfun$parseCliOptTypeNumChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #649 = Methodref          #2.#648       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #650 = MethodHandle       6:#649        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #651 = InvokeDynamic      #11:#427      // #11:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #652 = Utf8               choices
  #653 = String             #652          // choices
  #654 = Utf8               $anonfun$parseCliOptTypeNumChoiceT$2
  #655 = NameAndType        #654:#607     // $anonfun$parseCliOptTypeNumChoiceT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #656 = Methodref          #2.#655       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumChoiceT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #657 = MethodHandle       6:#656        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumChoiceT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
  #658 = InvokeDynamic      #12:#427      // #12:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #659 = Utf8               Lorg/sireum/cli/CliOpt$Type$NumChoice$;
  #660 = NameAndType        #182:#659     // MODULE$:Lorg/sireum/cli/CliOpt$Type$NumChoice$;
  #661 = Fieldref           #83.#660      // org/sireum/cli/CliOpt$Type$NumChoice$.MODULE$:Lorg/sireum/cli/CliOpt$Type$NumChoice$;
  #662 = Utf8               (Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$NumChoice;
  #663 = NameAndType        #205:#662     // apply:(Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$NumChoice;
  #664 = Methodref          #83.#663      // org/sireum/cli/CliOpt$Type$NumChoice$.apply:(Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$NumChoice;
  #665 = Utf8               parseCliOptTypeStr
  #666 = Utf8               ()Lorg/sireum/cli/CliOpt$Type$Str;
  #667 = Utf8               $anonfun$parseCliOptTypeStrT$1$adapted
  #668 = NameAndType        #667:#449     // $anonfun$parseCliOptTypeStrT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #669 = Methodref          #2.#668       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #670 = MethodHandle       6:#669        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #671 = InvokeDynamic      #13:#427      // #13:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #672 = Utf8               $anonfun$parseCliOptTypeStrT$2$adapted
  #673 = NameAndType        #672:#449     // $anonfun$parseCliOptTypeStrT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #674 = Methodref          #2.#673       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #675 = MethodHandle       6:#674        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #676 = InvokeDynamic      #14:#427      // #14:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #677 = Utf8               Lorg/sireum/cli/CliOpt$Type$Str$;
  #678 = NameAndType        #182:#677     // MODULE$:Lorg/sireum/cli/CliOpt$Type$Str$;
  #679 = Fieldref           #101.#678     // org/sireum/cli/CliOpt$Type$Str$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Str$;
  #680 = Utf8               (Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Str;
  #681 = NameAndType        #205:#680     // apply:(Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Str;
  #682 = Methodref          #101.#681     // org/sireum/cli/CliOpt$Type$Str$.apply:(Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Str;
  #683 = Utf8               parseCliOptTypeChoice
  #684 = Utf8               ()Lorg/sireum/cli/CliOpt$Type$Choice;
  #685 = Utf8               $anonfun$parseCliOptTypeChoiceT$1$adapted
  #686 = NameAndType        #685:#449     // $anonfun$parseCliOptTypeChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #687 = Methodref          #2.#686       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #688 = MethodHandle       6:#687        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #689 = InvokeDynamic      #15:#427      // #15:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #690 = Utf8               elements
  #691 = String             #690          // elements
  #692 = Utf8               $anonfun$parseCliOptTypeChoiceT$2$adapted
  #693 = NameAndType        #692:#449     // $anonfun$parseCliOptTypeChoiceT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #694 = Methodref          #2.#693       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #695 = MethodHandle       6:#694        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #696 = InvokeDynamic      #16:#427      // #16:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #697 = Utf8               Lorg/sireum/cli/CliOpt$Type$Choice$;
  #698 = NameAndType        #182:#697     // MODULE$:Lorg/sireum/cli/CliOpt$Type$Choice$;
  #699 = Fieldref           #65.#698      // org/sireum/cli/CliOpt$Type$Choice$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Choice$;
  #700 = Utf8               (Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$Choice;
  #701 = NameAndType        #205:#700     // apply:(Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$Choice;
  #702 = Methodref          #65.#701      // org/sireum/cli/CliOpt$Type$Choice$.apply:(Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$Choice;
  #703 = Utf8               parseCliOptTypePath
  #704 = Utf8               ()Lorg/sireum/cli/CliOpt$Type$Path;
  #705 = Utf8               multiple
  #706 = String             #705          // multiple
  #707 = Utf8               $anonfun$parseCliOptTypePathT$1$adapted
  #708 = NameAndType        #707:#449     // $anonfun$parseCliOptTypePathT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #709 = Methodref          #2.#708       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypePathT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #710 = MethodHandle       6:#709        // REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypePathT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  #711 = InvokeDynamic      #17:#427      // #17:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
  #712 = Utf8               Lorg/sireum/cli/CliOpt$Type$Path$;
  #713 = NameAndType        #182:#712     // MODULE$:Lorg/sireum/cli/CliOpt$Type$Path$;
  #714 = Fieldref           #95.#713      // org/sireum/cli/CliOpt$Type$Path$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Path$;
  #715 = Utf8               (ZLorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Path;
  #716 = NameAndType        #205:#715     // apply:(ZLorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Path;
  #717 = Methodref          #95.#716      // org/sireum/cli/CliOpt$Type$Path$.apply:(ZLorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Path;
  #718 = Utf8               eof
  #719 = NameAndType        #718:#112     // eof:()Z
  #720 = Methodref          #24.#719      // org/sireum/Json$Parser.eof:()Z
  #721 = Utf8               (Z)Lorg/sireum/$internal/MutableMarker;
  #722 = NameAndType        #119:#120     // $owned_$eq:(Z)Lorg/sireum/RecordSig;
  #723 = Methodref          #2.#722       // org/sireum/cli/JSON$Parser.$owned_$eq:(Z)Lorg/sireum/RecordSig;
  #724 = NameAndType        #294:#295     // $clone:()Lorg/sireum/cli/JSON$Parser;
  #725 = Methodref          #2.#724       // org/sireum/cli/JSON$Parser.$clone:()Lorg/sireum/cli/JSON$Parser;
  #726 = Utf8               ()Lorg/sireum/$internal/MutableMarker;
  #727 = Utf8               $this
  #728 = NameAndType        #319:#320     // parseCliOpt:()Lorg/sireum/cli/CliOpt;
  #729 = Methodref          #2.#728       // org/sireum/cli/JSON$Parser.parseCliOpt:()Lorg/sireum/cli/CliOpt;
  #730 = Utf8               $anonfun$parseCliOptToolT$1
  #731 = Utf8               (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
  #732 = NameAndType        #504:#465     // parseCliOptOpt:()Lorg/sireum/cli/CliOpt$Opt;
  #733 = Methodref          #2.#732       // org/sireum/cli/JSON$Parser.parseCliOptOpt:()Lorg/sireum/cli/CliOpt$Opt;
  #734 = NameAndType        #485:#475     // parseCliOptOptGroup:()Lorg/sireum/cli/CliOpt$OptGroup;
  #735 = Methodref          #2.#734       // org/sireum/cli/JSON$Parser.parseCliOptOptGroup:()Lorg/sireum/cli/CliOpt$OptGroup;
  #736 = Utf8               $anonfun$parseCliOptOptT$1
  #737 = Utf8               (Lorg/sireum/cli/JSON$Parser;)I
  #738 = Utf8               parseC
  #739 = NameAndType        #738:#210     // parseC:()I
  #740 = Methodref          #24.#739      // org/sireum/Json$Parser.parseC:()I
  #741 = Utf8               $anonfun$parseCliOptTypeNumT$1
  #742 = Utf8               $anonfun$parseCliOptTypeNumChoiceT$1
  #743 = Utf8               $anonfun$parseCliOptTypeStrT$1
  #744 = Utf8               $anonfun$parseCliOptTypeStrT$2
  #745 = Utf8               $anonfun$parseCliOptTypeChoiceT$1
  #746 = Utf8               $anonfun$parseCliOptTypeChoiceT$2
  #747 = Utf8               $anonfun$parseCliOptTypePathT$1
  #748 = Utf8               __input
  #749 = Methodref          #4.#170       // java/lang/Object."<init>":()V
  #750 = Utf8               $init$
  #751 = Utf8               (Lorg/sireum/Mutable;)V
  #752 = NameAndType        #750:#751     // $init$:(Lorg/sireum/Mutable;)V
  #753 = InterfaceMethodref #135.#752     // org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
  #754 = Utf8               (Lorg/sireum/RecordSig;)V
  #755 = NameAndType        #750:#754     // $init$:(Lorg/sireum/RecordSig;)V
  #756 = InterfaceMethodref #6.#755       // org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
  #757 = Utf8               Lorg/sireum/Json$Parser$;
  #758 = NameAndType        #182:#757     // MODULE$:Lorg/sireum/Json$Parser$;
  #759 = Fieldref           #27.#758      // org/sireum/Json$Parser$.MODULE$:Lorg/sireum/Json$Parser$;
  #760 = Utf8               create
  #761 = Utf8               (Ljava/lang/String;)Lorg/sireum/Json$Parser;
  #762 = NameAndType        #760:#761     // create:(Ljava/lang/String;)Lorg/sireum/Json$Parser;
  #763 = Methodref          #27.#762      // org/sireum/Json$Parser$.create:(Ljava/lang/String;)Lorg/sireum/Json$Parser;
  #764 = Utf8               assignMut
  #765 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #766 = NameAndType        #764:#765     // assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #767 = Methodref          #297.#766     // org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #768 = NameAndType        #730:#731     // $anonfun$parseCliOptToolT$1:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
  #769 = Methodref          #2.#768       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$1:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
  #770 = Utf8               org/sireum/C
  #771 = Class              #770          // org/sireum/C
  #772 = NameAndType        #736:#737     // $anonfun$parseCliOptOptT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #773 = Methodref          #2.#772       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptOptT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #774 = Utf8               (I)V
  #775 = NameAndType        #168:#774     // "<init>":(I)V
  #776 = Methodref          #771.#775     // org/sireum/C."<init>":(I)V
  #777 = NameAndType        #741:#737     // $anonfun$parseCliOptTypeNumT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #778 = Methodref          #2.#777       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #779 = NameAndType        #742:#737     // $anonfun$parseCliOptTypeNumChoiceT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #780 = Methodref          #2.#779       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumChoiceT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #781 = NameAndType        #743:#737     // $anonfun$parseCliOptTypeStrT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #782 = Methodref          #2.#781       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #783 = NameAndType        #744:#731     // $anonfun$parseCliOptTypeStrT$2:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
  #784 = Methodref          #2.#783       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$2:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
  #785 = NameAndType        #745:#737     // $anonfun$parseCliOptTypeChoiceT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #786 = Methodref          #2.#785       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$1:(Lorg/sireum/cli/JSON$Parser;)I
  #787 = NameAndType        #746:#731     // $anonfun$parseCliOptTypeChoiceT$2:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
  #788 = Methodref          #2.#787       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$2:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
  #789 = NameAndType        #747:#731     // $anonfun$parseCliOptTypePathT$1:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
  #790 = Methodref          #2.#789       // org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypePathT$1:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
  #791 = Utf8               $deserializeLambda$
  #792 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #793 = Utf8               scala/runtime/LambdaDeserialize
  #794 = Class              #793          // scala/runtime/LambdaDeserialize
  #795 = Utf8               bootstrap
  #796 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #797 = NameAndType        #795:#796     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #798 = Methodref          #794.#797     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #799 = MethodHandle       6:#798        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #800 = Utf8               lambdaDeserialize
  #801 = NameAndType        #800:#792     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #802 = InvokeDynamic      #18:#801      // #18:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #803 = Utf8               Code
  #804 = Utf8               LineNumberTable
  #805 = Utf8               LocalVariableTable
  #806 = Utf8               MethodParameters
  #807 = Utf8               StackMapTable
  #808 = Utf8               Signature
  #809 = Utf8               InnerClasses
  #810 = Utf8               SourceFile
  #811 = Utf8               BootstrapMethods
  #812 = Utf8               ScalaInlineInfo
  #813 = Utf8               Scala
{
  private java.lang.String _input;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private final org.sireum.Json$Parser parser;
    descriptor: Lorg/sireum/Json$Parser;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private boolean org$sireum$RecordSig$$$isOwned;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public final boolean $owned();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #116                // InterfaceMethod org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
         4: ireturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public final org.sireum.RecordSig $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/RecordSig;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #125                // InterfaceMethod org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/cli/JSON$Parser;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #131                // InterfaceMethod org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #139                // InterfaceMethod org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #144                // InterfaceMethod org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #148                // InterfaceMethod org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public boolean org$sireum$RecordSig$$$isOwned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #150                // Field org$sireum$RecordSig$$$isOwned:Z
         4: ireturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public void org$sireum$RecordSig$$$isOwned_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #150                // Field org$sireum$RecordSig$$$isOwned:Z
         5: return
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/cli/JSON$Parser;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String input();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #157                // Field _input:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public java.lang.String getInput();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #157                // Field _input:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #161                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #165                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          69
        14: new           #167                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #171                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #172                // String Parser
        25: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #179                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #187                // class org/sireum/String
        43: dup
        44: aload_0
        45: invokevirtual #189                // Method input:()Ljava/lang/String;
        48: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        51: invokevirtual #196                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: bipush        41
        61: invokevirtual #179                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        64: pop
        65: aload_1
        66: invokevirtual #198                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        69: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 118 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      47     1    sb   Ljava/lang/StringBuilder;
            0      70     0  this   Lorg/sireum/cli/JSON$Parser;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #161                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #165                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #204                // Method toString:()Ljava/lang/String;
        21: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/cli/JSON$Parser;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #212                // Method $hasEquals:()Z
         4: ifeq          14
         7: aload_0
         8: invokespecial #214                // Method java/lang/Object.hashCode:()I
        11: goto          65
        14: getstatic     #219                // Field scala/package$.MODULE$:Lscala/package$;
        17: invokevirtual #223                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        20: getstatic     #228                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        23: iconst_2
        24: anewarray     #4                  // class java/lang/Object
        27: dup
        28: iconst_0
        29: aload_0
        30: invokevirtual #232                // Method getClass:()Ljava/lang/Class;
        33: invokevirtual #237                // Method java/lang/Class.getName:()Ljava/lang/String;
        36: aastore
        37: dup
        38: iconst_1
        39: new           #187                // class org/sireum/String
        42: dup
        43: aload_0
        44: invokevirtual #189                // Method input:()Ljava/lang/String;
        47: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        50: aastore
        51: invokevirtual #241                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        54: invokevirtual #246                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        57: checkcast     #248                // class scala/collection/Seq
        60: invokeinterface #249,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        65: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 114 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lorg/sireum/cli/JSON$Parser;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #212                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #254                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          105
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          105
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/cli/JSON$Parser
        30: ifeq          96
        33: aload_3
        34: checkcast     #2                  // class org/sireum/cli/JSON$Parser
        37: astore        4
        39: aload_0
        40: invokevirtual #255                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #255                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          92
        55: aload_0
        56: invokevirtual #189                // Method input:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #189                // Method input:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          91
        79: aload         5
        81: invokevirtual #254                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: istore_2
        93: goto          104
        96: goto          99
        99: iconst_0
       100: istore_2
       101: goto          104
       104: iload_2
       105: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/cli/JSON$Parser ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/cli/JSON$Parser, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/JSON$Parser, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/cli/JSON$Parser, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/JSON$Parser ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/cli/JSON$Parser, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/cli/JSON$Parser, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0  this   Lorg/sireum/cli/JSON$Parser;
            0     106     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.cli.JSON$Parser apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/cli/JSON$Parser;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/sireum/cli/JSON$Parser
         3: dup
         4: aload_1
         5: invokespecial #258                // Method "<init>":(Ljava/lang/String;)V
         8: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/cli/JSON$Parser;
            0       9     1 input   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      input                          final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #189                // Method input:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=1, args_size=1
         0: getstatic     #219                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #223                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         6: getstatic     #228                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: iconst_2
        10: anewarray     #264                // class scala/Tuple2
        13: dup
        14: iconst_0
        15: new           #264                // class scala/Tuple2
        18: dup
        19: ldc_w         #266                // String type
        22: getstatic     #219                // Field scala/package$.MODULE$:Lscala/package$;
        25: invokevirtual #270                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        28: getstatic     #228                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        31: iconst_4
        32: anewarray     #202                // class java/lang/String
        35: dup
        36: iconst_0
        37: ldc_w         #272                // String org
        40: aastore
        41: dup
        42: iconst_1
        43: ldc_w         #274                // String sireum
        46: aastore
        47: dup
        48: iconst_2
        49: ldc_w         #276                // String cli
        52: aastore
        53: dup
        54: iconst_3
        55: ldc           #172                // String Parser
        57: aastore
        58: checkcast     #278                // class "[Ljava/lang/Object;"
        61: invokevirtual #282                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        64: invokevirtual #287                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        67: invokespecial #290                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        70: aastore
        71: dup
        72: iconst_1
        73: new           #264                // class scala/Tuple2
        76: dup
        77: ldc_w         #291                // String input
        80: new           #187                // class org/sireum/String
        83: dup
        84: aload_0
        85: invokevirtual #189                // Method input:()Ljava/lang/String;
        88: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        91: invokespecial #290                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        94: aastore
        95: checkcast     #278                // class "[Ljava/lang/Object;"
        98: invokevirtual #282                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       101: invokevirtual #246                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       104: checkcast     #293                // class scala/collection/immutable/Seq
       107: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     108     0  this   Lorg/sireum/cli/JSON$Parser;
    Signature: #262                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.cli.JSON$Parser $clone();
    descriptor: ()Lorg/sireum/cli/JSON$Parser;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=1
         0: new           #2                  // class org/sireum/cli/JSON$Parser
         3: dup
         4: getstatic     #300                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         7: new           #187                // class org/sireum/String
        10: dup
        11: aload_0
        12: invokevirtual #189                // Method input:()Ljava/lang/String;
        15: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        18: invokevirtual #304                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        21: checkcast     #187                // class org/sireum/String
        24: invokevirtual #307                // Method org/sireum/String.value:()Ljava/lang/String;
        27: invokespecial #258                // Method "<init>":(Ljava/lang/String;)V
        30: astore_1
        31: aload_1
        32: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31       1     1     r   Lorg/sireum/cli/JSON$Parser;
            0      33     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.Json$Parser parser();
    descriptor: ()Lorg/sireum/Json$Parser;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #311                // Field parser:Lorg/sireum/Json$Parser;
         4: areturn
      LineNumberTable:
        line 165: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.Option<org.sireum.Json$ErrorMsg> errorOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #318                // Method org/sireum/Json$Parser.errorOpt:()Lorg/sireum/Option;
         7: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/cli/JSON$Parser;
    Signature: #314                         // ()Lorg/sireum/Option<Lorg/sireum/Json$ErrorMsg;>;

  public org.sireum.cli.CliOpt parseCliOpt();
    descriptor: ()Lorg/sireum/cli/CliOpt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=7, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #329                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        10: getstatic     #228                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        13: iconst_2
        14: anewarray     #187                // class org/sireum/String
        17: dup
        18: iconst_0
        19: new           #187                // class org/sireum/String
        22: dup
        23: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        26: ldc_w         #331                // String CliOpt.Group
        29: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        32: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        35: aastore
        36: dup
        37: iconst_1
        38: new           #187                // class org/sireum/String
        41: dup
        42: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        45: ldc_w         #333                // String CliOpt.Tool
        48: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        51: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        54: aastore
        55: invokevirtual #241                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        58: invokevirtual #336                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        61: invokevirtual #340                // Method org/sireum/Json$Parser.parseObjectTypes:(Lorg/sireum/IS;)Ljava/lang/String;
        64: astore_2
        65: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        68: aload_2
        69: invokevirtual #343                // Method org/sireum/String$.native$extension:(Ljava/lang/String;)Ljava/lang/String;
        72: astore_3
        73: aload_3
        74: ifnonnull     81
        77: iconst_0
        78: goto          85
        81: aload_3
        82: invokevirtual #344                // Method java/lang/String.hashCode:()I
        85: lookupswitch  { // 2
             -2069182908: 112
              -759100109: 140
                 default: 168
            }
       112: ldc_w         #331                // String CliOpt.Group
       115: aload_3
       116: invokevirtual #345                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       119: ifeq          137
       122: aload_0
       123: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       126: invokevirtual #348                // Method org/sireum/package$.T:()Z
       129: invokevirtual #352                // Method parseCliOptGroupT:(Z)Lorg/sireum/cli/CliOpt$Group;
       132: astore        4
       134: aload         4
       136: areturn
       137: goto          171
       140: ldc_w         #333                // String CliOpt.Tool
       143: aload_3
       144: invokevirtual #345                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       147: ifeq          165
       150: aload_0
       151: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       154: invokevirtual #348                // Method org/sireum/package$.T:()Z
       157: invokevirtual #356                // Method parseCliOptToolT:(Z)Lorg/sireum/cli/CliOpt$Tool;
       160: astore        5
       162: aload         5
       164: areturn
       165: goto          171
       168: goto          171
       171: aload_0
       172: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       175: invokevirtual #348                // Method org/sireum/package$.T:()Z
       178: invokevirtual #356                // Method parseCliOptToolT:(Z)Lorg/sireum/cli/CliOpt$Tool;
       181: astore        6
       183: aload         6
       185: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 254 /* append */
          offset_delta = 81
          locals = [ top, class java/lang/String, class java/lang/String ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 26 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 172: 0
        line 173: 65
        line 174: 112
        line 173: 137
        line 175: 140
        line 173: 165
        line 176: 171
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          134       3     4     r   Lorg/sireum/cli/CliOpt$Group;
          162       3     5     r   Lorg/sireum/cli/CliOpt$Tool;
          183       3     6     r   Lorg/sireum/cli/CliOpt$Tool;
           65     121     2     t   Ljava/lang/String;
            0     186     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Group parseCliOptGroup();
    descriptor: ()Lorg/sireum/cli/CliOpt$Group;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #352                // Method parseCliOptGroupT:(Z)Lorg/sireum/cli/CliOpt$Group;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 181: 0
        line 182: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Group;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Group parseCliOptGroupT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Group;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=7, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #331                // String CliOpt.Group
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #388                // String name
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        70: astore_2
        71: aload_0
        72: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #399                // String description
        89: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       100: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       103: astore_3
       104: aload_0
       105: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       108: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       111: pop
       112: aload_0
       113: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       116: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       119: ldc_w         #401                // String header
       122: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       125: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       128: pop
       129: aload_0
       130: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       133: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       136: astore        4
       138: aload_0
       139: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       142: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       145: pop
       146: aload_0
       147: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       150: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       153: ldc_w         #403                // String unlisted
       156: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       159: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       162: pop
       163: aload_0
       164: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       167: invokevirtual #406                // Method org/sireum/Json$Parser.parseB:()Z
       170: istore        5
       172: aload_0
       173: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       176: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       179: pop
       180: aload_0
       181: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       184: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       187: ldc_w         #408                // String subs
       190: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       193: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       196: pop
       197: aload_0
       198: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       201: aload_0
       202: invokedynamic #428,  0            // InvokeDynamic #0:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       207: invokevirtual #432                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       210: astore        6
       212: aload_0
       213: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       216: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       219: pop
       220: getstatic     #435                // Field org/sireum/cli/CliOpt$Group$.MODULE$:Lorg/sireum/cli/CliOpt$Group$;
       223: aload_2
       224: aload_3
       225: aload         4
       227: iload         5
       229: aload         6
       231: invokevirtual #438                // Method org/sireum/cli/CliOpt$Group$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Group;
       234: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 186: 0
        line 187: 16
        line 186: 42
        line 189: 46
        line 190: 63
        line 191: 71
        line 192: 79
        line 193: 96
        line 194: 104
        line 195: 112
        line 196: 129
        line 197: 138
        line 198: 146
        line 199: 163
        line 200: 172
        line 201: 180
        line 202: 197
        line 203: 212
        line 204: 220
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71     164     2  name   Ljava/lang/String;
          104     131     3 description   Ljava/lang/String;
          138      97     4 header   Ljava/lang/String;
          172      63     5 unlisted   Z
          212      23     6  subs   Lorg/sireum/IS;
            0     235     0  this   Lorg/sireum/cli/JSON$Parser;
            0     235     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$Tool parseCliOptTool();
    descriptor: ()Lorg/sireum/cli/CliOpt$Tool;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #356                // Method parseCliOptToolT:(Z)Lorg/sireum/cli/CliOpt$Tool;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 208: 0
        line 209: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Tool;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Tool parseCliOptToolT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Tool;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=10, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #333                // String CliOpt.Tool
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #388                // String name
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        70: astore_2
        71: aload_0
        72: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #443                // String command
        89: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       100: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       103: astore_3
       104: aload_0
       105: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       108: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       111: pop
       112: aload_0
       113: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       116: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       119: ldc_w         #399                // String description
       122: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       125: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       128: pop
       129: aload_0
       130: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       133: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       136: astore        4
       138: aload_0
       139: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       142: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       145: pop
       146: aload_0
       147: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       150: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       153: ldc_w         #401                // String header
       156: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       159: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       162: pop
       163: aload_0
       164: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       167: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       170: astore        5
       172: aload_0
       173: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       176: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       179: pop
       180: aload_0
       181: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       184: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       187: ldc_w         #445                // String usage
       190: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       193: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       196: pop
       197: aload_0
       198: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       201: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       204: astore        6
       206: aload_0
       207: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       210: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       213: pop
       214: aload_0
       215: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       218: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       221: ldc_w         #447                // String usageDescOpt
       224: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       227: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       230: pop
       231: aload_0
       232: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       235: aload_0
       236: invokedynamic #453,  0            // InvokeDynamic #1:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       241: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       244: astore        7
       246: aload_0
       247: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       250: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       253: pop
       254: aload_0
       255: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       258: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       261: ldc_w         #459                // String opts
       264: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       267: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       270: pop
       271: aload_0
       272: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       275: aload_0
       276: invokedynamic #467,  0            // InvokeDynamic #2:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       281: invokevirtual #432                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       284: astore        8
       286: aload_0
       287: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       290: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       293: pop
       294: aload_0
       295: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       298: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       301: ldc_w         #469                // String groups
       304: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       307: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       310: pop
       311: aload_0
       312: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       315: aload_0
       316: invokedynamic #477,  0            // InvokeDynamic #3:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       321: invokevirtual #432                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       324: astore        9
       326: aload_0
       327: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       330: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       333: pop
       334: getstatic     #480                // Field org/sireum/cli/CliOpt$Tool$.MODULE$:Lorg/sireum/cli/CliOpt$Tool$;
       337: aload_2
       338: aload_3
       339: aload         4
       341: aload         5
       343: aload         6
       345: aload         7
       347: aload         8
       349: aload         9
       351: invokevirtual #483                // Method org/sireum/cli/CliOpt$Tool$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Tool;
       354: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 213: 0
        line 214: 16
        line 213: 42
        line 216: 46
        line 217: 63
        line 218: 71
        line 219: 79
        line 220: 96
        line 221: 104
        line 222: 112
        line 223: 129
        line 224: 138
        line 225: 146
        line 226: 163
        line 227: 172
        line 228: 180
        line 229: 197
        line 230: 206
        line 231: 214
        line 232: 231
        line 233: 246
        line 234: 254
        line 235: 271
        line 236: 286
        line 237: 294
        line 238: 311
        line 239: 326
        line 240: 334
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71     284     2  name   Ljava/lang/String;
          104     251     3 command   Ljava/lang/String;
          138     217     4 description   Ljava/lang/String;
          172     183     5 header   Ljava/lang/String;
          206     149     6 usage   Ljava/lang/String;
          246     109     7 usageDescOpt   Lorg/sireum/Option;
          286      69     8  opts   Lorg/sireum/IS;
          326      29     9 groups   Lorg/sireum/IS;
            0     355     0  this   Lorg/sireum/cli/JSON$Parser;
            0     355     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$OptGroup parseCliOptOptGroup();
    descriptor: ()Lorg/sireum/cli/CliOpt$OptGroup;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #489                // Method parseCliOptOptGroupT:(Z)Lorg/sireum/cli/CliOpt$OptGroup;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 244: 0
        line 245: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$OptGroup;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$OptGroup parseCliOptOptGroupT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$OptGroup;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #492                // String CliOpt.OptGroup
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #388                // String name
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        70: astore_2
        71: aload_0
        72: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #459                // String opts
        89: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       100: aload_0
       101: invokedynamic #497,  0            // InvokeDynamic #4:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       106: invokevirtual #432                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       109: astore_3
       110: aload_0
       111: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       114: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       117: pop
       118: getstatic     #500                // Field org/sireum/cli/CliOpt$OptGroup$.MODULE$:Lorg/sireum/cli/CliOpt$OptGroup$;
       121: aload_2
       122: aload_3
       123: invokevirtual #503                // Method org/sireum/cli/CliOpt$OptGroup$.apply:(Ljava/lang/String;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$OptGroup;
       126: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 249: 0
        line 250: 16
        line 249: 42
        line 252: 46
        line 253: 63
        line 254: 71
        line 255: 79
        line 256: 96
        line 257: 110
        line 258: 118
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71      56     2  name   Ljava/lang/String;
          110      17     3  opts   Lorg/sireum/IS;
            0     127     0  this   Lorg/sireum/cli/JSON$Parser;
            0     127     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$Opt parseCliOptOpt();
    descriptor: ()Lorg/sireum/cli/CliOpt$Opt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #508                // Method parseCliOptOptT:(Z)Lorg/sireum/cli/CliOpt$Opt;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 262: 0
        line 263: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Opt;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Opt parseCliOptOptT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Opt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=7, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #511                // String CliOpt.Opt
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #388                // String name
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        70: astore_2
        71: aload_0
        72: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #513                // String longKey
        89: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       100: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       103: astore_3
       104: aload_0
       105: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       108: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       111: pop
       112: aload_0
       113: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       116: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       119: ldc_w         #515                // String shortKey
       122: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       125: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       128: pop
       129: aload_0
       130: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       133: aload_0
       134: invokedynamic #520,  0            // InvokeDynamic #5:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       139: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       142: astore        4
       144: aload_0
       145: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       148: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       151: pop
       152: aload_0
       153: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       156: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       159: ldc_w         #522                // String tpe
       162: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       165: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       168: pop
       169: aload_0
       170: invokevirtual #526                // Method parseCliOptType:()Lorg/sireum/cli/CliOpt$Type;
       173: astore        5
       175: aload_0
       176: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       179: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       182: pop
       183: aload_0
       184: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       187: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       190: ldc_w         #399                // String description
       193: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       196: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       199: pop
       200: aload_0
       201: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       204: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       207: astore        6
       209: aload_0
       210: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       213: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       216: pop
       217: getstatic     #529                // Field org/sireum/cli/CliOpt$Opt$.MODULE$:Lorg/sireum/cli/CliOpt$Opt$;
       220: aload_2
       221: aload_3
       222: aload         4
       224: aload         5
       226: aload         6
       228: invokevirtual #532                // Method org/sireum/cli/CliOpt$Opt$.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/cli/CliOpt$Type;Ljava/lang/String;)Lorg/sireum/cli/CliOpt$Opt;
       231: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 267: 0
        line 268: 16
        line 267: 42
        line 270: 46
        line 271: 63
        line 272: 71
        line 273: 79
        line 274: 96
        line 275: 104
        line 276: 112
        line 277: 129
        line 278: 144
        line 279: 152
        line 280: 169
        line 281: 175
        line 282: 183
        line 283: 200
        line 284: 209
        line 285: 217
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71     161     2  name   Ljava/lang/String;
          104     128     3 longKey   Ljava/lang/String;
          144      88     4 shortKey   Lorg/sireum/Option;
          175      57     5   tpe   Lorg/sireum/cli/CliOpt$Type;
          209      23     6 description   Ljava/lang/String;
            0     232     0  this   Lorg/sireum/cli/JSON$Parser;
            0     232     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$Type parseCliOptType();
    descriptor: ()Lorg/sireum/cli/CliOpt$Type;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=12, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #329                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        10: getstatic     #228                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        13: bipush        7
        15: anewarray     #187                // class org/sireum/String
        18: dup
        19: iconst_0
        20: new           #187                // class org/sireum/String
        23: dup
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #535                // String CliOpt.Type.Flag
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        36: aastore
        37: dup
        38: iconst_1
        39: new           #187                // class org/sireum/String
        42: dup
        43: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        46: ldc_w         #537                // String CliOpt.Type.Num
        49: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        52: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        55: aastore
        56: dup
        57: iconst_2
        58: new           #187                // class org/sireum/String
        61: dup
        62: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        65: ldc_w         #539                // String CliOpt.Type.NumFlag
        68: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        71: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        74: aastore
        75: dup
        76: iconst_3
        77: new           #187                // class org/sireum/String
        80: dup
        81: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        84: ldc_w         #541                // String CliOpt.Type.NumChoice
        87: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        90: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        93: aastore
        94: dup
        95: iconst_4
        96: new           #187                // class org/sireum/String
        99: dup
       100: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       103: ldc_w         #543                // String CliOpt.Type.Str
       106: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       109: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       112: aastore
       113: dup
       114: iconst_5
       115: new           #187                // class org/sireum/String
       118: dup
       119: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       122: ldc_w         #545                // String CliOpt.Type.Choice
       125: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       128: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       131: aastore
       132: dup
       133: bipush        6
       135: new           #187                // class org/sireum/String
       138: dup
       139: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       142: ldc_w         #547                // String CliOpt.Type.Path
       145: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       148: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       151: aastore
       152: invokevirtual #241                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       155: invokevirtual #336                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       158: invokevirtual #340                // Method org/sireum/Json$Parser.parseObjectTypes:(Lorg/sireum/IS;)Ljava/lang/String;
       161: astore_2
       162: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       165: aload_2
       166: invokevirtual #343                // Method org/sireum/String$.native$extension:(Ljava/lang/String;)Ljava/lang/String;
       169: astore_3
       170: aload_3
       171: ifnonnull     178
       174: iconst_0
       175: goto          182
       178: aload_3
       179: invokevirtual #344                // Method java/lang/String.hashCode:()I
       182: lookupswitch  { // 7
              -758898215: 248
               618517242: 276
               754096334: 304
              1453841613: 332
              1453846392: 360
              2119169797: 388
              2119457726: 416
                 default: 444
            }
       248: ldc_w         #539                // String CliOpt.Type.NumFlag
       251: aload_3
       252: invokevirtual #345                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       255: ifeq          273
       258: aload_0
       259: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       262: invokevirtual #348                // Method org/sireum/package$.T:()Z
       265: invokevirtual #551                // Method parseCliOptTypeNumFlagT:(Z)Lorg/sireum/cli/CliOpt$Type$NumFlag;
       268: astore        4
       270: aload         4
       272: areturn
       273: goto          447
       276: ldc_w         #545                // String CliOpt.Type.Choice
       279: aload_3
       280: invokevirtual #345                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       283: ifeq          301
       286: aload_0
       287: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       290: invokevirtual #348                // Method org/sireum/package$.T:()Z
       293: invokevirtual #555                // Method parseCliOptTypeChoiceT:(Z)Lorg/sireum/cli/CliOpt$Type$Choice;
       296: astore        5
       298: aload         5
       300: areturn
       301: goto          447
       304: ldc_w         #541                // String CliOpt.Type.NumChoice
       307: aload_3
       308: invokevirtual #345                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       311: ifeq          329
       314: aload_0
       315: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       318: invokevirtual #348                // Method org/sireum/package$.T:()Z
       321: invokevirtual #559                // Method parseCliOptTypeNumChoiceT:(Z)Lorg/sireum/cli/CliOpt$Type$NumChoice;
       324: astore        6
       326: aload         6
       328: areturn
       329: goto          447
       332: ldc_w         #537                // String CliOpt.Type.Num
       335: aload_3
       336: invokevirtual #345                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       339: ifeq          357
       342: aload_0
       343: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       346: invokevirtual #348                // Method org/sireum/package$.T:()Z
       349: invokevirtual #563                // Method parseCliOptTypeNumT:(Z)Lorg/sireum/cli/CliOpt$Type$Num;
       352: astore        7
       354: aload         7
       356: areturn
       357: goto          447
       360: ldc_w         #543                // String CliOpt.Type.Str
       363: aload_3
       364: invokevirtual #345                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       367: ifeq          385
       370: aload_0
       371: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       374: invokevirtual #348                // Method org/sireum/package$.T:()Z
       377: invokevirtual #567                // Method parseCliOptTypeStrT:(Z)Lorg/sireum/cli/CliOpt$Type$Str;
       380: astore        8
       382: aload         8
       384: areturn
       385: goto          447
       388: ldc_w         #535                // String CliOpt.Type.Flag
       391: aload_3
       392: invokevirtual #345                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       395: ifeq          413
       398: aload_0
       399: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       402: invokevirtual #348                // Method org/sireum/package$.T:()Z
       405: invokevirtual #571                // Method parseCliOptTypeFlagT:(Z)Lorg/sireum/cli/CliOpt$Type$Flag;
       408: astore        9
       410: aload         9
       412: areturn
       413: goto          447
       416: ldc_w         #547                // String CliOpt.Type.Path
       419: aload_3
       420: invokevirtual #345                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       423: ifeq          441
       426: aload_0
       427: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       430: invokevirtual #348                // Method org/sireum/package$.T:()Z
       433: invokevirtual #575                // Method parseCliOptTypePathT:(Z)Lorg/sireum/cli/CliOpt$Type$Path;
       436: astore        10
       438: aload         10
       440: areturn
       441: goto          447
       444: goto          447
       447: aload_0
       448: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       451: invokevirtual #348                // Method org/sireum/package$.T:()Z
       454: invokevirtual #575                // Method parseCliOptTypePathT:(Z)Lorg/sireum/cli/CliOpt$Type$Path;
       457: astore        11
       459: aload         11
       461: areturn
      StackMapTable: number_of_entries = 18
        frame_type = 254 /* append */
          offset_delta = 178
          locals = [ top, class java/lang/String, class java/lang/String ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 65
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 24 /* same */
        frame_type = 2 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 289: 0
        line 290: 162
        line 293: 248
        line 290: 273
        line 296: 276
        line 290: 301
        line 294: 304
        line 290: 329
        line 292: 332
        line 290: 357
        line 295: 360
        line 290: 385
        line 291: 388
        line 290: 413
        line 297: 416
        line 290: 441
        line 298: 447
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          270       3     4     r   Lorg/sireum/cli/CliOpt$Type$NumFlag;
          298       3     5     r   Lorg/sireum/cli/CliOpt$Type$Choice;
          326       3     6     r   Lorg/sireum/cli/CliOpt$Type$NumChoice;
          354       3     7     r   Lorg/sireum/cli/CliOpt$Type$Num;
          382       3     8     r   Lorg/sireum/cli/CliOpt$Type$Str;
          410       3     9     r   Lorg/sireum/cli/CliOpt$Type$Flag;
          438       3    10     r   Lorg/sireum/cli/CliOpt$Type$Path;
          459       3    11     r   Lorg/sireum/cli/CliOpt$Type$Path;
          162     300     2     t   Ljava/lang/String;
            0     462     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Type$Flag parseCliOptTypeFlag();
    descriptor: ()Lorg/sireum/cli/CliOpt$Type$Flag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #571                // Method parseCliOptTypeFlagT:(Z)Lorg/sireum/cli/CliOpt$Type$Flag;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 303: 0
        line 304: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Type$Flag;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Type$Flag parseCliOptTypeFlagT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Type$Flag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #535                // String CliOpt.Type.Flag
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #586                // String default
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #406                // Method org/sireum/Json$Parser.parseB:()Z
        70: istore_2
        71: aload_0
        72: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: getstatic     #589                // Field org/sireum/cli/CliOpt$Type$Flag$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Flag$;
        82: iload_2
        83: invokevirtual #591                // Method org/sireum/cli/CliOpt$Type$Flag$.apply:(Z)Lorg/sireum/cli/CliOpt$Type$Flag;
        86: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 308: 0
        line 309: 16
        line 308: 42
        line 311: 46
        line 312: 63
        line 313: 71
        line 314: 79
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71      16     2 default   Z
            0      87     0  this   Lorg/sireum/cli/JSON$Parser;
            0      87     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$Type$Num parseCliOptTypeNum();
    descriptor: ()Lorg/sireum/cli/CliOpt$Type$Num;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #563                // Method parseCliOptTypeNumT:(Z)Lorg/sireum/cli/CliOpt$Type$Num;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 318: 0
        line 319: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Type$Num;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Type$Num parseCliOptTypeNumT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Type$Num;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #537                // String CliOpt.Type.Num
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #595                // String sep
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: aload_0
        68: invokedynamic #600,  0            // InvokeDynamic #6:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
        73: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
        76: astore_2
        77: aload_0
        78: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        81: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        84: pop
        85: aload_0
        86: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        89: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        92: ldc_w         #586                // String default
        95: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        98: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       101: pop
       102: aload_0
       103: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       106: invokevirtual #603                // Method org/sireum/Json$Parser.parseZ:()Lorg/sireum/Z;
       109: astore_3
       110: aload_0
       111: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       114: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       117: pop
       118: aload_0
       119: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       122: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       125: ldc_w         #605                // String min
       128: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       131: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       134: pop
       135: aload_0
       136: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       139: aload_0
       140: invokedynamic #612,  0            // InvokeDynamic #7:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       145: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       148: astore        4
       150: aload_0
       151: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       154: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       157: pop
       158: aload_0
       159: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       162: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       165: ldc_w         #614                // String max
       168: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       171: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       174: pop
       175: aload_0
       176: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       179: aload_0
       180: invokedynamic #619,  0            // InvokeDynamic #8:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       185: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       188: astore        5
       190: aload_0
       191: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       194: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       197: pop
       198: getstatic     #622                // Field org/sireum/cli/CliOpt$Type$Num$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Num$;
       201: aload_2
       202: aload_3
       203: aload         4
       205: aload         5
       207: invokevirtual #625                // Method org/sireum/cli/CliOpt$Type$Num$.apply:(Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Num;
       210: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 323: 0
        line 324: 16
        line 323: 42
        line 326: 46
        line 327: 63
        line 328: 77
        line 329: 85
        line 330: 102
        line 331: 110
        line 332: 118
        line 333: 135
        line 334: 150
        line 335: 158
        line 336: 175
        line 337: 190
        line 338: 198
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           77     134     2   sep   Lorg/sireum/Option;
          110     101     3 default   Lorg/sireum/Z;
          150      61     4   min   Lorg/sireum/Option;
          190      21     5   max   Lorg/sireum/Option;
            0     211     0  this   Lorg/sireum/cli/JSON$Parser;
            0     211     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$Type$NumFlag parseCliOptTypeNumFlag();
    descriptor: ()Lorg/sireum/cli/CliOpt$Type$NumFlag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #551                // Method parseCliOptTypeNumFlagT:(Z)Lorg/sireum/cli/CliOpt$Type$NumFlag;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 342: 0
        line 343: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Type$NumFlag;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Type$NumFlag parseCliOptTypeNumFlagT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Type$NumFlag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #539                // String CliOpt.Type.NumFlag
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #586                // String default
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #603                // Method org/sireum/Json$Parser.parseZ:()Lorg/sireum/Z;
        70: astore_2
        71: aload_0
        72: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #605                // String min
        89: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       100: aload_0
       101: invokedynamic #633,  0            // InvokeDynamic #9:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       106: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       109: astore_3
       110: aload_0
       111: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       114: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       117: pop
       118: aload_0
       119: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       122: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       125: ldc_w         #614                // String max
       128: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       131: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       134: pop
       135: aload_0
       136: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       139: aload_0
       140: invokedynamic #638,  0            // InvokeDynamic #10:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       145: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       148: astore        4
       150: aload_0
       151: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       154: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       157: pop
       158: getstatic     #641                // Field org/sireum/cli/CliOpt$Type$NumFlag$.MODULE$:Lorg/sireum/cli/CliOpt$Type$NumFlag$;
       161: aload_2
       162: aload_3
       163: aload         4
       165: invokevirtual #644                // Method org/sireum/cli/CliOpt$Type$NumFlag$.apply:(Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$NumFlag;
       168: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 347: 0
        line 348: 16
        line 347: 42
        line 350: 46
        line 351: 63
        line 352: 71
        line 353: 79
        line 354: 96
        line 355: 110
        line 356: 118
        line 357: 135
        line 358: 150
        line 359: 158
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71      98     2 default   Lorg/sireum/Z;
          110      59     3   min   Lorg/sireum/Option;
          150      19     4   max   Lorg/sireum/Option;
            0     169     0  this   Lorg/sireum/cli/JSON$Parser;
            0     169     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$Type$NumChoice parseCliOptTypeNumChoice();
    descriptor: ()Lorg/sireum/cli/CliOpt$Type$NumChoice;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #559                // Method parseCliOptTypeNumChoiceT:(Z)Lorg/sireum/cli/CliOpt$Type$NumChoice;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 363: 0
        line 364: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Type$NumChoice;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Type$NumChoice parseCliOptTypeNumChoiceT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Type$NumChoice;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #541                // String CliOpt.Type.NumChoice
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #595                // String sep
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: aload_0
        68: invokedynamic #651,  0            // InvokeDynamic #11:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
        73: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
        76: astore_2
        77: aload_0
        78: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        81: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        84: pop
        85: aload_0
        86: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        89: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        92: ldc_w         #653                // String choices
        95: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        98: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       101: pop
       102: aload_0
       103: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       106: aload_0
       107: invokedynamic #658,  0            // InvokeDynamic #12:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       112: invokevirtual #432                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       115: astore_3
       116: aload_0
       117: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       120: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       123: pop
       124: getstatic     #661                // Field org/sireum/cli/CliOpt$Type$NumChoice$.MODULE$:Lorg/sireum/cli/CliOpt$Type$NumChoice$;
       127: aload_2
       128: aload_3
       129: invokevirtual #664                // Method org/sireum/cli/CliOpt$Type$NumChoice$.apply:(Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$NumChoice;
       132: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 368: 0
        line 369: 16
        line 368: 42
        line 371: 46
        line 372: 63
        line 373: 77
        line 374: 85
        line 375: 102
        line 376: 116
        line 377: 124
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           77      56     2   sep   Lorg/sireum/Option;
          116      17     3 choices   Lorg/sireum/IS;
            0     133     0  this   Lorg/sireum/cli/JSON$Parser;
            0     133     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$Type$Str parseCliOptTypeStr();
    descriptor: ()Lorg/sireum/cli/CliOpt$Type$Str;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #567                // Method parseCliOptTypeStrT:(Z)Lorg/sireum/cli/CliOpt$Type$Str;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 381: 0
        line 382: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Type$Str;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Type$Str parseCliOptTypeStrT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Type$Str;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #543                // String CliOpt.Type.Str
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #595                // String sep
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: aload_0
        68: invokedynamic #671,  0            // InvokeDynamic #13:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
        73: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
        76: astore_2
        77: aload_0
        78: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        81: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        84: pop
        85: aload_0
        86: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        89: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        92: ldc_w         #586                // String default
        95: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        98: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       101: pop
       102: aload_0
       103: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       106: aload_0
       107: invokedynamic #676,  0            // InvokeDynamic #14:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       112: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       115: astore_3
       116: aload_0
       117: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       120: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       123: pop
       124: getstatic     #679                // Field org/sireum/cli/CliOpt$Type$Str$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Str$;
       127: aload_2
       128: aload_3
       129: invokevirtual #682                // Method org/sireum/cli/CliOpt$Type$Str$.apply:(Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Str;
       132: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 386: 0
        line 387: 16
        line 386: 42
        line 389: 46
        line 390: 63
        line 391: 77
        line 392: 85
        line 393: 102
        line 394: 116
        line 395: 124
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           77      56     2   sep   Lorg/sireum/Option;
          116      17     3 default   Lorg/sireum/Option;
            0     133     0  this   Lorg/sireum/cli/JSON$Parser;
            0     133     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$Type$Choice parseCliOptTypeChoice();
    descriptor: ()Lorg/sireum/cli/CliOpt$Type$Choice;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #555                // Method parseCliOptTypeChoiceT:(Z)Lorg/sireum/cli/CliOpt$Type$Choice;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 399: 0
        line 400: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Type$Choice;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Type$Choice parseCliOptTypeChoiceT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Type$Choice;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #545                // String CliOpt.Type.Choice
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #388                // String name
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        70: astore_2
        71: aload_0
        72: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #595                // String sep
        89: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       100: aload_0
       101: invokedynamic #689,  0            // InvokeDynamic #15:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       106: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       109: astore_3
       110: aload_0
       111: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       114: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       117: pop
       118: aload_0
       119: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       122: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       125: ldc_w         #691                // String elements
       128: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       131: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       134: pop
       135: aload_0
       136: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       139: aload_0
       140: invokedynamic #696,  0            // InvokeDynamic #16:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       145: invokevirtual #432                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       148: astore        4
       150: aload_0
       151: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       154: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       157: pop
       158: getstatic     #699                // Field org/sireum/cli/CliOpt$Type$Choice$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Choice$;
       161: aload_2
       162: aload_3
       163: aload         4
       165: invokevirtual #702                // Method org/sireum/cli/CliOpt$Type$Choice$.apply:(Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;)Lorg/sireum/cli/CliOpt$Type$Choice;
       168: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 404: 0
        line 405: 16
        line 404: 42
        line 407: 46
        line 408: 63
        line 409: 71
        line 410: 79
        line 411: 96
        line 412: 110
        line 413: 118
        line 414: 135
        line 415: 150
        line 416: 158
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71      98     2  name   Ljava/lang/String;
          110      59     3   sep   Lorg/sireum/Option;
          150      19     4 elements   Lorg/sireum/IS;
            0     169     0  this   Lorg/sireum/cli/JSON$Parser;
            0     169     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.cli.CliOpt$Type$Path parseCliOptTypePath();
    descriptor: ()Lorg/sireum/cli/CliOpt$Type$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #325                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #364                // Method org/sireum/package$.F:()Z
         7: invokevirtual #575                // Method parseCliOptTypePathT:(Z)Lorg/sireum/cli/CliOpt$Type$Path;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 420: 0
        line 421: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/cli/CliOpt$Type$Path;
            0      13     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.cli.CliOpt$Type$Path parseCliOptTypePathT(boolean);
    descriptor: (Z)Lorg/sireum/cli/CliOpt$Type$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #370                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #374                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #377                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #187                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #547                // String CliOpt.Type.Path
        30: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #380                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #386                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #706                // String multiple
        56: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #406                // Method org/sireum/Json$Parser.parseB:()Z
        70: istore_2
        71: aload_0
        72: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #185                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #586                // String default
        89: invokevirtual #208                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #391                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       100: aload_0
       101: invokedynamic #711,  0            // InvokeDynamic #17:apply:(Lorg/sireum/cli/JSON$Parser;)Lscala/Function0;
       106: invokevirtual #457                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       109: astore_3
       110: aload_0
       111: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
       114: invokevirtual #397                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       117: pop
       118: getstatic     #714                // Field org/sireum/cli/CliOpt$Type$Path$.MODULE$:Lorg/sireum/cli/CliOpt$Type$Path$;
       121: iload_2
       122: aload_3
       123: invokevirtual #717                // Method org/sireum/cli/CliOpt$Type$Path$.apply:(ZLorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Path;
       126: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 425: 0
        line 426: 16
        line 425: 42
        line 428: 46
        line 429: 63
        line 430: 71
        line 431: 79
        line 432: 96
        line 433: 110
        line 434: 118
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71      56     2 multiple   Z
          110      17     3 default   Lorg/sireum/Option;
            0     127     0  this   Lorg/sireum/cli/JSON$Parser;
            0     127     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public boolean eof();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #720                // Method org/sireum/Json$Parser.eof:()Z
         7: istore_1
         8: iload_1
         9: ireturn
      LineNumberTable:
        line 438: 0
        line 439: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8       2     1     r   Z
            0      10     0  this   Lorg/sireum/cli/JSON$Parser;

  public final org.sireum.$internal.MutableMarker $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/$internal/MutableMarker;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #723                // Method $owned_$eq:(Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/cli/JSON$Parser;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #725                // Method $clone:()Lorg/sireum/cli/JSON$Parser;
         4: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public org.sireum.$internal.MutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/MutableMarker;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #725                // Method $clone:()Lorg/sireum/cli/JSON$Parser;
         4: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/JSON$Parser;

  public static final org.sireum.cli.CliOpt $anonfun$parseCliOptGroupT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #729                // Method parseCliOpt:()Lorg/sireum/cli/CliOpt;
         4: areturn
      LineNumberTable:
        line 202: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseCliOptToolT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 232: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.cli.CliOpt$Opt $anonfun$parseCliOptToolT$2(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #733                // Method parseCliOptOpt:()Lorg/sireum/cli/CliOpt$Opt;
         4: areturn
      LineNumberTable:
        line 235: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.cli.CliOpt$OptGroup $anonfun$parseCliOptToolT$3(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$OptGroup;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #735                // Method parseCliOptOptGroup:()Lorg/sireum/cli/CliOpt$OptGroup;
         4: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.cli.CliOpt$Opt $anonfun$parseCliOptOptGroupT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #733                // Method parseCliOptOpt:()Lorg/sireum/cli/CliOpt$Opt;
         4: areturn
      LineNumberTable:
        line 256: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final int $anonfun$parseCliOptOptT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #740                // Method org/sireum/Json$Parser.parseC:()I
         7: ireturn
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final int $anonfun$parseCliOptTypeNumT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #740                // Method org/sireum/Json$Parser.parseC:()I
         7: ireturn
      LineNumberTable:
        line 327: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.Z $anonfun$parseCliOptTypeNumT$2(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #603                // Method org/sireum/Json$Parser.parseZ:()Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 333: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.Z $anonfun$parseCliOptTypeNumT$3(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #603                // Method org/sireum/Json$Parser.parseZ:()Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 336: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.Z $anonfun$parseCliOptTypeNumFlagT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #603                // Method org/sireum/Json$Parser.parseZ:()Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 354: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.Z $anonfun$parseCliOptTypeNumFlagT$2(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #603                // Method org/sireum/Json$Parser.parseZ:()Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final int $anonfun$parseCliOptTypeNumChoiceT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #740                // Method org/sireum/Json$Parser.parseC:()I
         7: ireturn
      LineNumberTable:
        line 372: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.Z $anonfun$parseCliOptTypeNumChoiceT$2(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #603                // Method org/sireum/Json$Parser.parseZ:()Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 375: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final int $anonfun$parseCliOptTypeStrT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #740                // Method org/sireum/Json$Parser.parseC:()I
         7: ireturn
      LineNumberTable:
        line 390: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseCliOptTypeStrT$2(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 393: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final int $anonfun$parseCliOptTypeChoiceT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #740                // Method org/sireum/Json$Parser.parseC:()I
         7: ireturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseCliOptTypeChoiceT$2(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 414: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseCliOptTypePathT$1(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #394                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 432: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public org.sireum.cli.JSON$Parser(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokespecial #749                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #753                // InterfaceMethod org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
         8: aload_0
         9: invokestatic  #756                // InterfaceMethod org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
        12: aload_0
        13: aload_1
        14: putfield      #157                // Field _input:Ljava/lang/String;
        17: aload_0
        18: getstatic     #300                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        21: getstatic     #759                // Field org/sireum/Json$Parser$.MODULE$:Lorg/sireum/Json$Parser$;
        24: aload_0
        25: invokevirtual #189                // Method input:()Ljava/lang/String;
        28: invokevirtual #763                // Method org/sireum/Json$Parser$.create:(Ljava/lang/String;)Lorg/sireum/Json$Parser;
        31: invokevirtual #767                // Method org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        34: checkcast     #24                 // class org/sireum/Json$Parser
        37: putfield      #311                // Field parser:Lorg/sireum/Json$Parser;
        40: return
      LineNumberTable:
        line 164: 0
        line 165: 17
        line 164: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/cli/JSON$Parser;
            0      41     1 __input   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      __input                        final

  public static final java.lang.Object $anonfun$parseCliOptToolT$1$adapted(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #187                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #769                // Method $anonfun$parseCliOptToolT$1:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 232: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseCliOptOptT$1$adapted(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #771                // class org/sireum/C
         3: dup
         4: aload_0
         5: invokestatic  #773                // Method $anonfun$parseCliOptOptT$1:(Lorg/sireum/cli/JSON$Parser;)I
         8: invokespecial #776                // Method org/sireum/C."<init>":(I)V
        11: areturn
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseCliOptTypeNumT$1$adapted(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #771                // class org/sireum/C
         3: dup
         4: aload_0
         5: invokestatic  #778                // Method $anonfun$parseCliOptTypeNumT$1:(Lorg/sireum/cli/JSON$Parser;)I
         8: invokespecial #776                // Method org/sireum/C."<init>":(I)V
        11: areturn
      LineNumberTable:
        line 327: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseCliOptTypeNumChoiceT$1$adapted(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #771                // class org/sireum/C
         3: dup
         4: aload_0
         5: invokestatic  #780                // Method $anonfun$parseCliOptTypeNumChoiceT$1:(Lorg/sireum/cli/JSON$Parser;)I
         8: invokespecial #776                // Method org/sireum/C."<init>":(I)V
        11: areturn
      LineNumberTable:
        line 372: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseCliOptTypeStrT$1$adapted(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #771                // class org/sireum/C
         3: dup
         4: aload_0
         5: invokestatic  #782                // Method $anonfun$parseCliOptTypeStrT$1:(Lorg/sireum/cli/JSON$Parser;)I
         8: invokespecial #776                // Method org/sireum/C."<init>":(I)V
        11: areturn
      LineNumberTable:
        line 390: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseCliOptTypeStrT$2$adapted(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #187                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #784                // Method $anonfun$parseCliOptTypeStrT$2:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 393: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseCliOptTypeChoiceT$1$adapted(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #771                // class org/sireum/C
         3: dup
         4: aload_0
         5: invokestatic  #786                // Method $anonfun$parseCliOptTypeChoiceT$1:(Lorg/sireum/cli/JSON$Parser;)I
         8: invokespecial #776                // Method org/sireum/C."<init>":(I)V
        11: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseCliOptTypeChoiceT$2$adapted(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #187                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #788                // Method $anonfun$parseCliOptTypeChoiceT$2:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 414: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseCliOptTypePathT$1$adapted(org.sireum.cli.JSON$Parser);
    descriptor: (Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #187                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #790                // Method $anonfun$parseCliOptTypePathT$1:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #192                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 432: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/cli/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #802,  0            // InvokeDynamic #18:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #17= #14 of #16;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static final #22= #19 of #21;    // ErrorMsg=class org/sireum/Json$ErrorMsg of class org/sireum/Json
  public static final #25= #24 of #21;    // Parser=class org/sireum/Json$Parser of class org/sireum/Json
  public static #28= #27 of #21;          // Parser$=class org/sireum/Json$Parser$ of class org/sireum/Json
  public static final #33= #30 of #32;    // Group=class org/sireum/cli/CliOpt$Group of class org/sireum/cli/CliOpt
  public static #36= #35 of #32;          // Group$=class org/sireum/cli/CliOpt$Group$ of class org/sireum/cli/CliOpt
  public static final #39= #38 of #32;    // Opt=class org/sireum/cli/CliOpt$Opt of class org/sireum/cli/CliOpt
  public static #42= #41 of #32;          // Opt$=class org/sireum/cli/CliOpt$Opt$ of class org/sireum/cli/CliOpt
  public static final #45= #44 of #32;    // OptGroup=class org/sireum/cli/CliOpt$OptGroup of class org/sireum/cli/CliOpt
  public static #48= #47 of #32;          // OptGroup$=class org/sireum/cli/CliOpt$OptGroup$ of class org/sireum/cli/CliOpt
  public static final #51= #50 of #32;    // Tool=class org/sireum/cli/CliOpt$Tool of class org/sireum/cli/CliOpt
  public static #54= #53 of #32;          // Tool$=class org/sireum/cli/CliOpt$Tool$ of class org/sireum/cli/CliOpt
  public static #57= #56 of #32;          // Type=class org/sireum/cli/CliOpt$Type of class org/sireum/cli/CliOpt
  public static #60= #59 of #32;          // Type$=class org/sireum/cli/CliOpt$Type$ of class org/sireum/cli/CliOpt
  public static final #63= #62 of #59;    // Choice=class org/sireum/cli/CliOpt$Type$Choice of class org/sireum/cli/CliOpt$Type$
  public static #66= #65 of #59;          // Choice$=class org/sireum/cli/CliOpt$Type$Choice$ of class org/sireum/cli/CliOpt$Type$
  public static final #69= #68 of #59;    // Flag=class org/sireum/cli/CliOpt$Type$Flag of class org/sireum/cli/CliOpt$Type$
  public static #72= #71 of #59;          // Flag$=class org/sireum/cli/CliOpt$Type$Flag$ of class org/sireum/cli/CliOpt$Type$
  public static final #75= #74 of #59;    // Num=class org/sireum/cli/CliOpt$Type$Num of class org/sireum/cli/CliOpt$Type$
  public static #78= #77 of #59;          // Num$=class org/sireum/cli/CliOpt$Type$Num$ of class org/sireum/cli/CliOpt$Type$
  public static final #81= #80 of #59;    // NumChoice=class org/sireum/cli/CliOpt$Type$NumChoice of class org/sireum/cli/CliOpt$Type$
  public static #84= #83 of #59;          // NumChoice$=class org/sireum/cli/CliOpt$Type$NumChoice$ of class org/sireum/cli/CliOpt$Type$
  public static final #87= #86 of #59;    // NumFlag=class org/sireum/cli/CliOpt$Type$NumFlag of class org/sireum/cli/CliOpt$Type$
  public static #90= #89 of #59;          // NumFlag$=class org/sireum/cli/CliOpt$Type$NumFlag$ of class org/sireum/cli/CliOpt$Type$
  public static final #93= #92 of #59;    // Path=class org/sireum/cli/CliOpt$Type$Path of class org/sireum/cli/CliOpt$Type$
  public static #96= #95 of #59;          // Path$=class org/sireum/cli/CliOpt$Type$Path$ of class org/sireum/cli/CliOpt$Type$
  public static final #99= #98 of #59;    // Str=class org/sireum/cli/CliOpt$Type$Str of class org/sireum/cli/CliOpt$Type$
  public static #102= #101 of #59;        // Str$=class org/sireum/cli/CliOpt$Type$Str$ of class org/sireum/cli/CliOpt$Type$
  public static final #25= #2 of #104;    // Parser=class org/sireum/cli/JSON$Parser of class org/sireum/cli/JSON
SourceFile: "JSON.scala"
BootstrapMethods:
  0: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #415 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt;
      #416 ()Lorg/sireum/cli/CliOpt;
      #417 5
      #418 1
      #416 ()Lorg/sireum/cli/CliOpt;
  1: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #452 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #410 ()Ljava/lang/Object;
      #418 1
  2: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #464 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
      #466 ()Lorg/sireum/cli/CliOpt$Opt;
      #417 5
      #418 1
      #466 ()Lorg/sireum/cli/CliOpt$Opt;
  3: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #474 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$OptGroup;
      #476 ()Lorg/sireum/cli/CliOpt$OptGroup;
      #417 5
      #418 1
      #476 ()Lorg/sireum/cli/CliOpt$OptGroup;
  4: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #496 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
      #466 ()Lorg/sireum/cli/CliOpt$Opt;
      #417 5
      #418 1
      #466 ()Lorg/sireum/cli/CliOpt$Opt;
  5: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #519 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptOptT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #410 ()Ljava/lang/Object;
      #418 1
  6: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #599 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #410 ()Ljava/lang/Object;
      #418 1
  7: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #610 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #611 ()Lorg/sireum/Z;
      #417 5
      #418 1
      #611 ()Lorg/sireum/Z;
  8: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #618 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #611 ()Lorg/sireum/Z;
      #417 5
      #418 1
      #611 ()Lorg/sireum/Z;
  9: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #632 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumFlagT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #611 ()Lorg/sireum/Z;
      #417 5
      #418 1
      #611 ()Lorg/sireum/Z;
  10: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #637 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumFlagT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #611 ()Lorg/sireum/Z;
      #417 5
      #418 1
      #611 ()Lorg/sireum/Z;
  11: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #650 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #410 ()Ljava/lang/Object;
      #418 1
  12: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #657 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumChoiceT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #611 ()Lorg/sireum/Z;
      #417 5
      #418 1
      #611 ()Lorg/sireum/Z;
  13: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #670 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #410 ()Ljava/lang/Object;
      #418 1
  14: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #675 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #410 ()Ljava/lang/Object;
      #418 1
  15: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #688 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #410 ()Ljava/lang/Object;
      #418 1
  16: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #695 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #410 ()Ljava/lang/Object;
      #418 1
  17: #425 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #410 ()Ljava/lang/Object;
      #710 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypePathT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #410 ()Ljava/lang/Object;
      #418 1
  18: #799 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #415 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt;
      #496 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptOptGroupT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
      #519 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptOptT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #452 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #464 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$Opt;
      #474 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptToolT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/cli/CliOpt$OptGroup;
      #688 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #695 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeChoiceT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #650 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumChoiceT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #657 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumChoiceT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #632 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumFlagT$1:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #637 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumFlagT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #599 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #610 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$2:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #618 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeNumT$3:(Lorg/sireum/cli/JSON$Parser;)Lorg/sireum/Z;
      #710 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypePathT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #670 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$1$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
      #675 REF_invokeStatic org/sireum/cli/JSON$Parser.$anonfun$parseCliOptTypeStrT$2$adapted:(Lorg/sireum/cli/JSON$Parser;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x180 (unknown attribute)
   01 01 00 4C 01 9B 01 9C 01 01 ED 01 CD 01 02 E0
   02 E1 01 02 04 01 C1 01 02 DA 02 DB 01 01 C0 01
   C1 01 01 CC 01 CD 01 01 D6 01 D7 01 02 E9 02 E1
   01 02 AD 01 C1 01 02 EA 02 DB 01 02 B4 01 C1 01
   02 E6 02 E1 01 02 87 01 C1 01 02 8E 02 5F 01 02
   75 02 5F 01 02 7A 02 5F 01 02 E5 02 E1 01 02 54
   01 C1 01 02 5E 02 5F 01 02 67 02 5F 01 02 EB 02
   DB 01 02 C3 01 C1 01 02 E7 02 E1 01 02 9B 01 C1
   01 02 E8 02 DB 01 02 A0 01 C1 01 00 84 00 85 01
   01 26 01 99 01 01 26 02 D6 01 01 26 01 27 01 01
   04 01 05 01 00 8C 00 70 01 00 91 00 70 01 00 6F
   00 70 01 00 77 02 D1 01 00 77 00 78 01 00 A8 00
   BE 01 00 CD 01 01 01 01 03 00 9B 01 02 CE 00 70
   01 00 FA 00 FB 01 01 38 01 39 01 00 9E 00 9B 01
   00 7E 00 7F 01 00 D1 00 D2 01 00 9A 00 9B 01 00
   6D 00 70 01 00 97 00 98 01 01 3F 01 40 01 01 68
   01 69 01 01 5D 01 5E 01 01 F8 01 D1 01 01 E5 01
   DB 01 01 E6 01 E7 01 01 F9 01 FA 01 01 B8 01 B9
   01 01 61 01 62 01 02 0B 02 0C 01 02 AB 02 AC 01
   02 28 02 29 01 02 47 02 48 01 02 38 02 39 01 02
   50 02 51 01 02 85 02 86 01 02 2C 02 2D 01 02 73
   02 74 01 02 24 02 25 01 02 30 02 31 01 02 BF 02
   C0 01 02 3C 02 3D 01 02 99 02 9A 01 02 34 02 35
   01 00 6B 01 35 01 00 CB 00 9B 01 00 9F 00 9B 01

  Scala: length = 0x0 (unknown attribute)

