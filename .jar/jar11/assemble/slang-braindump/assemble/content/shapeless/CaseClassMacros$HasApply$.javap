Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/CaseClassMacros$HasApply$.class
  Last modified May 29, 2022; size 9329 bytes
  SHA-256 checksum cf1a702b50b1ff02ce416ed9f62c3208d16d5d94604cac471a044fbdfe20632e
  Compiled from "generic.scala"
public class shapeless.CaseClassMacros$HasApply$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // shapeless/CaseClassMacros$HasApply$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 16, attributes: 5
Constant pool:
    #1 = Utf8               shapeless/CaseClassMacros$HasApply$
    #2 = Class              #1            // shapeless/CaseClassMacros$HasApply$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               generic.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/Option$WithFilter
   #12 = Class              #11           // scala/Option$WithFilter
   #13 = Utf8               scala/Option
   #14 = Class              #13           // scala/Option
   #15 = Utf8               WithFilter
   #16 = Utf8               scala/Predef$ArrowAssoc$
   #17 = Class              #16           // scala/Predef$ArrowAssoc$
   #18 = Utf8               scala/Predef
   #19 = Class              #18           // scala/Predef
   #20 = Utf8               ArrowAssoc$
   #21 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper
   #22 = Class              #21           // scala/collection/SeqFactory$UnapplySeqWrapper
   #23 = Utf8               scala/collection/SeqFactory
   #24 = Class              #23           // scala/collection/SeqFactory
   #25 = Utf8               UnapplySeqWrapper
   #26 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper$
   #27 = Class              #26           // scala/collection/SeqFactory$UnapplySeqWrapper$
   #28 = Utf8               UnapplySeqWrapper$
   #29 = Utf8               scala/reflect/api/Names$NameApi
   #30 = Class              #29           // scala/reflect/api/Names$NameApi
   #31 = Utf8               scala/reflect/api/Names
   #32 = Class              #31           // scala/reflect/api/Names
   #33 = Utf8               NameApi
   #34 = Utf8               scala/reflect/api/Names$TermNameApi
   #35 = Class              #34           // scala/reflect/api/Names$TermNameApi
   #36 = Utf8               TermNameApi
   #37 = Utf8               scala/reflect/api/Names$TermNameExtractor
   #38 = Class              #37           // scala/reflect/api/Names$TermNameExtractor
   #39 = Utf8               TermNameExtractor
   #40 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #41 = Class              #40           // scala/reflect/api/Symbols$SymbolApi
   #42 = Utf8               scala/reflect/api/Symbols
   #43 = Class              #42           // scala/reflect/api/Symbols
   #44 = Utf8               SymbolApi
   #45 = Utf8               scala/reflect/api/Symbols$TermSymbolApi
   #46 = Class              #45           // scala/reflect/api/Symbols$TermSymbolApi
   #47 = Utf8               TermSymbolApi
   #48 = Utf8               scala/reflect/api/Types$TypeApi
   #49 = Class              #48           // scala/reflect/api/Types$TypeApi
   #50 = Utf8               scala/reflect/api/Types
   #51 = Class              #50           // scala/reflect/api/Types
   #52 = Utf8               TypeApi
   #53 = Utf8               shapeless/CaseClassMacros
   #54 = Class              #53           // shapeless/CaseClassMacros
   #55 = Utf8               HasApply$
   #56 = Utf8               $outer
   #57 = Utf8               Lshapeless/CaseClassMacros;
   #58 = Utf8               unapply
   #59 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #60 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Lscala/reflect/api/Names$TermNameApi;Lscala/reflect/api/Types$TypeApi;>;>;>;
   #61 = Utf8               tpe
   #62 = Utf8               scala/Option$
   #63 = Class              #62           // scala/Option$
   #64 = Utf8               MODULE$
   #65 = Utf8               Lscala/Option$;
   #66 = NameAndType        #64:#65       // MODULE$:Lscala/Option$;
   #67 = Fieldref           #63.#66       // scala/Option$.MODULE$:Lscala/Option$;
   #68 = NameAndType        #56:#57       // $outer:Lshapeless/CaseClassMacros;
   #69 = Fieldref           #2.#68        // shapeless/CaseClassMacros$HasApply$.$outer:Lshapeless/CaseClassMacros;
   #70 = Utf8               typeSymbol
   #71 = Utf8               ()Lscala/reflect/api/Symbols$SymbolApi;
   #72 = NameAndType        #70:#71       // typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
   #73 = Methodref          #49.#72       // scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
   #74 = Utf8               patchedCompanionSymbolOf
   #75 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Symbols$SymbolApi;
   #76 = NameAndType        #74:#75       // patchedCompanionSymbolOf:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Symbols$SymbolApi;
   #77 = InterfaceMethodref #54.#76       // shapeless/CaseClassMacros.patchedCompanionSymbolOf:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Symbols$SymbolApi;
   #78 = Utf8               typeSignature
   #79 = Utf8               ()Lscala/reflect/api/Types$TypeApi;
   #80 = NameAndType        #78:#79       // typeSignature:()Lscala/reflect/api/Types$TypeApi;
   #81 = InterfaceMethodref #41.#80       // scala/reflect/api/Symbols$SymbolApi.typeSignature:()Lscala/reflect/api/Types$TypeApi;
   #82 = Utf8               apply
   #83 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #84 = NameAndType        #82:#83       // apply:(Ljava/lang/Object;)Lscala/Option;
   #85 = Methodref          #63.#84       // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
   #86 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #87 = MethodType         #86           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #88 = Utf8               $anonfun$unapply$1
   #89 = Utf8               (Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
   #90 = NameAndType        #88:#89       // $anonfun$unapply$1:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
   #91 = Methodref          #2.#90        // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$1:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
   #92 = MethodHandle       6:#91         // REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$1:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
   #93 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
   #94 = MethodType         #93           //  (Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
   #95 = Integer            5
   #96 = Integer            1
   #97 = Utf8               java/lang/invoke/LambdaMetafactory
   #98 = Class              #97           // java/lang/invoke/LambdaMetafactory
   #99 = Utf8               altMetafactory
  #100 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #101 = NameAndType        #99:#100      // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #102 = Methodref          #98.#101      // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #103 = MethodHandle       6:#102        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #104 = Utf8               (Lshapeless/CaseClassMacros$HasApply$;)Lscala/Function1;
  #105 = NameAndType        #82:#104      // apply:(Lshapeless/CaseClassMacros$HasApply$;)Lscala/Function1;
  #106 = InvokeDynamic      #0:#105       // #0:apply:(Lshapeless/CaseClassMacros$HasApply$;)Lscala/Function1;
  #107 = Utf8               map
  #108 = Utf8               (Lscala/Function1;)Lscala/Option;
  #109 = NameAndType        #107:#108     // map:(Lscala/Function1;)Lscala/Option;
  #110 = Methodref          #14.#109      // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #111 = Utf8               $anonfun$unapply$2$adapted
  #112 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #113 = NameAndType        #111:#112     // $anonfun$unapply$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #114 = Methodref          #2.#113       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #115 = MethodHandle       6:#114        // REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #116 = MethodType         #112          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #117 = Utf8               ()Lscala/Function1;
  #118 = NameAndType        #82:#117      // apply:()Lscala/Function1;
  #119 = InvokeDynamic      #1:#118       // #1:apply:()Lscala/Function1;
  #120 = Utf8               withFilter
  #121 = Utf8               (Lscala/Function1;)Lscala/Option$WithFilter;
  #122 = NameAndType        #120:#121     // withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #123 = Methodref          #14.#122      // scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #124 = Utf8               $anonfun$unapply$3$adapted
  #125 = Utf8               (Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
  #126 = NameAndType        #124:#125     // $anonfun$unapply$3$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
  #127 = Methodref          #2.#126       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$3$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
  #128 = MethodHandle       6:#127        // REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$3$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
  #129 = InvokeDynamic      #2:#105       // #2:apply:(Lshapeless/CaseClassMacros$HasApply$;)Lscala/Function1;
  #130 = Methodref          #12.#122      // scala/Option$WithFilter.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #131 = Utf8               $anonfun$unapply$4$adapted
  #132 = NameAndType        #131:#125     // $anonfun$unapply$4$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
  #133 = Methodref          #2.#132       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$4$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
  #134 = MethodHandle       6:#133        // REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$4$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
  #135 = InvokeDynamic      #3:#105       // #3:apply:(Lshapeless/CaseClassMacros$HasApply$;)Lscala/Function1;
  #136 = Utf8               $anonfun$unapply$5
  #137 = Utf8               (Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/Tuple2;)Lscala/Option;
  #138 = NameAndType        #136:#137     // $anonfun$unapply$5:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/Tuple2;)Lscala/Option;
  #139 = Methodref          #2.#138       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$5:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/Tuple2;)Lscala/Option;
  #140 = MethodHandle       6:#139        // REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$5:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/Tuple2;)Lscala/Option;
  #141 = Utf8               (Lscala/Tuple2;)Lscala/Option;
  #142 = MethodType         #141          //  (Lscala/Tuple2;)Lscala/Option;
  #143 = Utf8               (Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
  #144 = NameAndType        #82:#143      // apply:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
  #145 = InvokeDynamic      #4:#144       // #4:apply:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
  #146 = Utf8               flatMap
  #147 = NameAndType        #146:#108     // flatMap:(Lscala/Function1;)Lscala/Option;
  #148 = Methodref          #12.#147      // scala/Option$WithFilter.flatMap:(Lscala/Function1;)Lscala/Option;
  #149 = Utf8               this
  #150 = Utf8               Lshapeless/CaseClassMacros$HasApply$;
  #151 = Utf8               Lscala/reflect/api/Types$TypeApi;
  #152 = Utf8               $this
  #153 = Utf8               companion
  #154 = Utf8               c
  #155 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
  #156 = NameAndType        #154:#155     // c:()Lscala/reflect/macros/whitebox/Context;
  #157 = InterfaceMethodref #54.#156      // shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
  #158 = Utf8               scala/reflect/macros/whitebox/Context
  #159 = Class              #158          // scala/reflect/macros/whitebox/Context
  #160 = Utf8               universe
  #161 = Utf8               ()Lscala/reflect/macros/Universe;
  #162 = NameAndType        #160:#161     // universe:()Lscala/reflect/macros/Universe;
  #163 = InterfaceMethodref #159.#162     // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
  #164 = Utf8               scala/reflect/macros/Universe
  #165 = Class              #164          // scala/reflect/macros/Universe
  #166 = Utf8               TermName
  #167 = Utf8               ()Lscala/reflect/api/Names$TermNameExtractor;
  #168 = NameAndType        #166:#167     // TermName:()Lscala/reflect/api/Names$TermNameExtractor;
  #169 = Methodref          #165.#168     // scala/reflect/macros/Universe.TermName:()Lscala/reflect/api/Names$TermNameExtractor;
  #170 = String             #82           // apply
  #171 = Utf8               (Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #172 = NameAndType        #82:#171      // apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #173 = Methodref          #38.#172      // scala/reflect/api/Names$TermNameExtractor.apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #174 = Utf8               member
  #175 = Utf8               (Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Symbols$SymbolApi;
  #176 = NameAndType        #174:#175     // member:(Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Symbols$SymbolApi;
  #177 = Methodref          #49.#176      // scala/reflect/api/Types$TypeApi.member:(Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Symbols$SymbolApi;
  #178 = Utf8               scala/Tuple2
  #179 = Class              #178          // scala/Tuple2
  #180 = Utf8               <init>
  #181 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #182 = NameAndType        #180:#181     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #183 = Methodref          #179.#182     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #184 = Utf8               Lscala/reflect/api/Symbols$SymbolApi;
  #185 = Utf8               $anonfun$unapply$2
  #186 = Utf8               (Lscala/Tuple2;)Z
  #187 = Utf8               x$19
  #188 = Utf8               _2
  #189 = Utf8               ()Ljava/lang/Object;
  #190 = NameAndType        #188:#189     // _2:()Ljava/lang/Object;
  #191 = Methodref          #179.#190     // scala/Tuple2._2:()Ljava/lang/Object;
  #192 = Utf8               isTerm
  #193 = Utf8               ()Z
  #194 = NameAndType        #192:#193     // isTerm:()Z
  #195 = InterfaceMethodref #41.#194      // scala/reflect/api/Symbols$SymbolApi.isTerm:()Z
  #196 = Utf8               asTerm
  #197 = Utf8               ()Lscala/reflect/api/Symbols$TermSymbolApi;
  #198 = NameAndType        #196:#197     // asTerm:()Lscala/reflect/api/Symbols$TermSymbolApi;
  #199 = InterfaceMethodref #41.#198      // scala/reflect/api/Symbols$SymbolApi.asTerm:()Lscala/reflect/api/Symbols$TermSymbolApi;
  #200 = Utf8               isOverloaded
  #201 = NameAndType        #200:#193     // isOverloaded:()Z
  #202 = InterfaceMethodref #46.#201      // scala/reflect/api/Symbols$TermSymbolApi.isOverloaded:()Z
  #203 = Utf8               scala/MatchError
  #204 = Class              #203          // scala/MatchError
  #205 = Utf8               (Ljava/lang/Object;)V
  #206 = NameAndType        #180:#205     // "<init>":(Ljava/lang/Object;)V
  #207 = Methodref          #204.#206     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #208 = Utf8               Lscala/Tuple2;
  #209 = Utf8               $anonfun$unapply$3
  #210 = Utf8               (Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Z
  #211 = Utf8               x$20
  #212 = Utf8               isMethod
  #213 = NameAndType        #212:#193     // isMethod:()Z
  #214 = InterfaceMethodref #41.#213      // scala/reflect/api/Symbols$SymbolApi.isMethod:()Z
  #215 = Utf8               isNonGeneric
  #216 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Z
  #217 = NameAndType        #215:#216     // isNonGeneric:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #218 = InterfaceMethodref #54.#217      // shapeless/CaseClassMacros.isNonGeneric:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #219 = Utf8               $anonfun$unapply$4
  #220 = Utf8               x$21
  #221 = Utf8               _1
  #222 = NameAndType        #221:#189     // _1:()Ljava/lang/Object;
  #223 = Methodref          #179.#222     // scala/Tuple2._1:()Ljava/lang/Object;
  #224 = Utf8               isAccessible
  #225 = Utf8               (Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Z
  #226 = NameAndType        #224:#225     // isAccessible:(Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Z
  #227 = InterfaceMethodref #54.#226      // shapeless/CaseClassMacros.isAccessible:(Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Z
  #228 = Utf8               $anonfun$unapply$6
  #229 = Utf8               (Lscala/collection/immutable/List;)Z
  #230 = Utf8               check$ifrefutable$2
  #231 = Utf8               scala/collection/immutable/Seq$
  #232 = Class              #231          // scala/collection/immutable/Seq$
  #233 = Utf8               Lscala/collection/immutable/Seq$;
  #234 = NameAndType        #64:#233      // MODULE$:Lscala/collection/immutable/Seq$;
  #235 = Fieldref           #232.#234     // scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
  #236 = Utf8               unapplySeq
  #237 = Utf8               (Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #238 = NameAndType        #236:#237     // unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #239 = Methodref          #232.#238     // scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #240 = Utf8               Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #241 = NameAndType        #64:#240      // MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #242 = Fieldref           #27.#241      // scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #243 = Utf8               isEmpty$extension
  #244 = Utf8               (Lscala/collection/SeqOps;)Z
  #245 = NameAndType        #243:#244     // isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #246 = Methodref          #27.#245      // scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #247 = Utf8               get$extension
  #248 = NameAndType        #247:#237     // get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #249 = Methodref          #27.#248      // scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #250 = Utf8               (Lscala/collection/SeqOps;)V
  #251 = NameAndType        #180:#250     // "<init>":(Lscala/collection/SeqOps;)V
  #252 = Methodref          #22.#251      // scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
  #253 = Utf8               lengthCompare$extension
  #254 = Utf8               (Lscala/collection/SeqOps;I)I
  #255 = NameAndType        #253:#254     // lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #256 = Methodref          #27.#255      // scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #257 = Utf8               Lscala/collection/immutable/List;
  #258 = Utf8               scala/collection/immutable/List
  #259 = Class              #258          // scala/collection/immutable/List
  #260 = Utf8               scala/collection/SeqOps
  #261 = Class              #260          // scala/collection/SeqOps
  #262 = Utf8               $anonfun$unapply$8
  #263 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #264 = Utf8               param
  #265 = Utf8               Lscala/Predef$ArrowAssoc$;
  #266 = NameAndType        #64:#265      // MODULE$:Lscala/Predef$ArrowAssoc$;
  #267 = Fieldref           #17.#266      // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #268 = Utf8               scala/Predef$
  #269 = Class              #268          // scala/Predef$
  #270 = Utf8               Lscala/Predef$;
  #271 = NameAndType        #64:#270      // MODULE$:Lscala/Predef$;
  #272 = Fieldref           #269.#271     // scala/Predef$.MODULE$:Lscala/Predef$;
  #273 = Utf8               name
  #274 = Utf8               ()Lscala/reflect/api/Names$NameApi;
  #275 = NameAndType        #273:#274     // name:()Lscala/reflect/api/Names$NameApi;
  #276 = InterfaceMethodref #41.#275      // scala/reflect/api/Symbols$SymbolApi.name:()Lscala/reflect/api/Names$NameApi;
  #277 = Utf8               toTermName
  #278 = Utf8               ()Lscala/reflect/api/Names$TermNameApi;
  #279 = NameAndType        #277:#278     // toTermName:()Lscala/reflect/api/Names$TermNameApi;
  #280 = Methodref          #30.#279      // scala/reflect/api/Names$NameApi.toTermName:()Lscala/reflect/api/Names$TermNameApi;
  #281 = Utf8               ArrowAssoc
  #282 = NameAndType        #281:#86      // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #283 = Methodref          #269.#282     // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #284 = Utf8               $minus$greater$extension
  #285 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #286 = NameAndType        #284:#285     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #287 = Methodref          #17.#286      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #288 = Utf8               $anonfun$unapply$9
  #289 = Utf8               (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #290 = Utf8               aligned
  #291 = Utf8               $anonfun$unapply$7
  #292 = Utf8               (Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #293 = Utf8               tpe$6
  #294 = Utf8               x$22
  #295 = Utf8               apply$extension
  #296 = Utf8               (Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #297 = NameAndType        #295:#296     // apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #298 = Methodref          #27.#297      // scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #299 = NameAndType        #262:#263     // $anonfun$unapply$8:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #300 = Methodref          #2.#299       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$8:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #301 = MethodHandle       6:#300        // REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$8:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #302 = MethodType         #263          //  (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #303 = InvokeDynamic      #5:#118       // #5:apply:()Lscala/Function1;
  #304 = Utf8               (Lscala/Function1;)Lscala/collection/immutable/List;
  #305 = NameAndType        #107:#304     // map:(Lscala/Function1;)Lscala/collection/immutable/List;
  #306 = Methodref          #259.#305     // scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
  #307 = Utf8               alignFields
  #308 = Utf8               (Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #309 = NameAndType        #307:#308     // alignFields:(Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #310 = InterfaceMethodref #54.#309      // shapeless/CaseClassMacros.alignFields:(Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #311 = NameAndType        #288:#289     // $anonfun$unapply$9:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #312 = Methodref          #2.#311       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$9:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #313 = MethodHandle       6:#312        // REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$9:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #314 = MethodType         #289          //  (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #315 = InvokeDynamic      #6:#118       // #6:apply:()Lscala/Function1;
  #316 = Utf8               params
  #317 = Utf8               x$23
  #318 = Utf8               typeSignatureIn
  #319 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #320 = NameAndType        #318:#319     // typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #321 = InterfaceMethodref #41.#320      // scala/reflect/api/Symbols$SymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #322 = Utf8               paramLists
  #323 = Utf8               ()Lscala/collection/immutable/List;
  #324 = NameAndType        #322:#323     // paramLists:()Lscala/collection/immutable/List;
  #325 = Methodref          #49.#324      // scala/reflect/api/Types$TypeApi.paramLists:()Lscala/collection/immutable/List;
  #326 = Utf8               $anonfun$unapply$6$adapted
  #327 = Utf8               (Lscala/collection/immutable/List;)Ljava/lang/Object;
  #328 = NameAndType        #326:#327     // $anonfun$unapply$6$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
  #329 = Methodref          #2.#328       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$6$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
  #330 = MethodHandle       6:#329        // REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$6$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
  #331 = MethodType         #327          //  (Lscala/collection/immutable/List;)Ljava/lang/Object;
  #332 = InvokeDynamic      #7:#118       // #7:apply:()Lscala/Function1;
  #333 = NameAndType        #291:#292     // $anonfun$unapply$7:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #334 = Methodref          #2.#333       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$7:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #335 = MethodHandle       6:#334        // REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$7:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #336 = Utf8               (Lscala/collection/immutable/List;)Lscala/Option;
  #337 = MethodType         #336          //  (Lscala/collection/immutable/List;)Lscala/Option;
  #338 = InvokeDynamic      #8:#144       // #8:apply:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
  #339 = Utf8               (Lshapeless/CaseClassMacros;)V
  #340 = Utf8               ()V
  #341 = NameAndType        #180:#340     // "<init>":()V
  #342 = Methodref          #4.#341       // java/lang/Object."<init>":()V
  #343 = NameAndType        #185:#186     // $anonfun$unapply$2:(Lscala/Tuple2;)Z
  #344 = Methodref          #2.#343       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$2:(Lscala/Tuple2;)Z
  #345 = Utf8               scala/runtime/BoxesRunTime
  #346 = Class              #345          // scala/runtime/BoxesRunTime
  #347 = Utf8               boxToBoolean
  #348 = Utf8               (Z)Ljava/lang/Boolean;
  #349 = NameAndType        #347:#348     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #350 = Methodref          #346.#349     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #351 = NameAndType        #209:#210     // $anonfun$unapply$3:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Z
  #352 = Methodref          #2.#351       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$3:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Z
  #353 = NameAndType        #219:#210     // $anonfun$unapply$4:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Z
  #354 = Methodref          #2.#353       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$4:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Z
  #355 = NameAndType        #228:#229     // $anonfun$unapply$6:(Lscala/collection/immutable/List;)Z
  #356 = Methodref          #2.#355       // shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$6:(Lscala/collection/immutable/List;)Z
  #357 = Utf8               $deserializeLambda$
  #358 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #359 = Utf8               scala/runtime/LambdaDeserialize
  #360 = Class              #359          // scala/runtime/LambdaDeserialize
  #361 = Utf8               bootstrap
  #362 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #363 = NameAndType        #361:#362     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #364 = Methodref          #360.#363     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #365 = MethodHandle       6:#364        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #366 = Utf8               lambdaDeserialize
  #367 = NameAndType        #366:#358     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #368 = InvokeDynamic      #9:#367       // #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #369 = Utf8               Code
  #370 = Utf8               LineNumberTable
  #371 = Utf8               LocalVariableTable
  #372 = Utf8               Signature
  #373 = Utf8               MethodParameters
  #374 = Utf8               StackMapTable
  #375 = Utf8               InnerClasses
  #376 = Utf8               SourceFile
  #377 = Utf8               BootstrapMethods
  #378 = Utf8               ScalaInlineInfo
  #379 = Utf8               Scala
{
  private final shapeless.CaseClassMacros $outer;
    descriptor: Lshapeless/CaseClassMacros;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public scala.Option<scala.collection.immutable.List<scala.Tuple2<scala.reflect.api.Names$TermNameApi, scala.reflect.api.Types$TypeApi>>> unapply(scala.reflect.api.Types$TypeApi);
    descriptor: (Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #67                 // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: getfield      #69                 // Field $outer:Lshapeless/CaseClassMacros;
         7: aload_1
         8: invokevirtual #73                 // Method scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
        11: invokeinterface #77,  2           // InterfaceMethod shapeless/CaseClassMacros.patchedCompanionSymbolOf:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Symbols$SymbolApi;
        16: invokeinterface #81,  1           // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.typeSignature:()Lscala/reflect/api/Types$TypeApi;
        21: invokevirtual #85                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        24: aload_0
        25: invokedynamic #106,  0            // InvokeDynamic #0:apply:(Lshapeless/CaseClassMacros$HasApply$;)Lscala/Function1;
        30: invokevirtual #110                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        33: invokedynamic #119,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        38: invokevirtual #123                // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        41: aload_0
        42: invokedynamic #129,  0            // InvokeDynamic #2:apply:(Lshapeless/CaseClassMacros$HasApply$;)Lscala/Function1;
        47: invokevirtual #130                // Method scala/Option$WithFilter.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        50: aload_0
        51: invokedynamic #135,  0            // InvokeDynamic #3:apply:(Lshapeless/CaseClassMacros$HasApply$;)Lscala/Function1;
        56: invokevirtual #130                // Method scala/Option$WithFilter.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        59: aload_0
        60: aload_1
        61: invokedynamic #145,  0            // InvokeDynamic #4:apply:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
        66: invokevirtual #148                // Method scala/Option$WithFilter.flatMap:(Lscala/Function1;)Lscala/Option;
        69: areturn
      LineNumberTable:
        line 819: 0
        line 821: 33
        line 819: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      70     0  this   Lshapeless/CaseClassMacros$HasApply$;
            0      70     1   tpe   Lscala/reflect/api/Types$TypeApi;
    Signature: #60                          // (Lscala/reflect/api/Types$TypeApi;)Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Lscala/reflect/api/Names$TermNameApi;Lscala/reflect/api/Types$TypeApi;>;>;>;
    MethodParameters:
      Name                           Flags
      tpe                            final

  public static final scala.Tuple2 $anonfun$unapply$1(shapeless.CaseClassMacros$HasApply$, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: getfield      #69                 // Field $outer:Lshapeless/CaseClassMacros;
         5: invokeinterface #157,  1          // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        10: invokeinterface #163,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        15: invokevirtual #169                // Method scala/reflect/macros/Universe.TermName:()Lscala/reflect/api/Names$TermNameExtractor;
        18: ldc           #170                // String apply
        20: invokevirtual #173                // Method scala/reflect/api/Names$TermNameExtractor.apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
        23: checkcast     #30                 // class scala/reflect/api/Names$NameApi
        26: invokevirtual #177                // Method scala/reflect/api/Types$TypeApi.member:(Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Symbols$SymbolApi;
        29: astore_2
        30: new           #179                // class scala/Tuple2
        33: dup
        34: aload_1
        35: aload_2
        36: invokespecial #183                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        39: areturn
      LineNumberTable:
        line 820: 0
        line 819: 30
        line 820: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      10     2 apply   Lscala/reflect/api/Symbols$SymbolApi;
            0      40     0 $this   Lshapeless/CaseClassMacros$HasApply$;
            0      40     1 companion   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      companion                      final

  public static final boolean $anonfun$unapply$2(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        46
         6: aload_2
         7: invokevirtual #191                // Method scala/Tuple2._2:()Ljava/lang/Object;
        10: checkcast     #41                 // class scala/reflect/api/Symbols$SymbolApi
        13: astore_3
        14: aload_3
        15: invokeinterface #195,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.isTerm:()Z
        20: ifeq          41
        23: aload_3
        24: invokeinterface #199,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.asTerm:()Lscala/reflect/api/Symbols$TermSymbolApi;
        29: invokeinterface #202,  1          // InterfaceMethod scala/reflect/api/Symbols$TermSymbolApi.isOverloaded:()Z
        34: ifne          41
        37: iconst_1
        38: goto          42
        41: iconst_0
        42: istore_1
        43: goto          58
        46: goto          49
        49: new           #204                // class scala/MatchError
        52: dup
        53: aload_2
        54: invokespecial #207                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        57: athrow
        58: iload_1
        59: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 41
          locals = [ top, class scala/Tuple2, class scala/reflect/api/Symbols$SymbolApi ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, int, class scala/Tuple2, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 821: 0
        line 819: 2
        line 820: 6
        line 821: 14
        line 819: 46
        line 821: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      33     3 apply   Lscala/reflect/api/Symbols$SymbolApi;
            0      60     0  x$19   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$19                           final

  public static final boolean $anonfun$unapply$3(shapeless.CaseClassMacros$HasApply$, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        48
         6: aload_3
         7: invokevirtual #191                // Method scala/Tuple2._2:()Ljava/lang/Object;
        10: checkcast     #41                 // class scala/reflect/api/Symbols$SymbolApi
        13: astore        4
        15: aload         4
        17: invokeinterface #214,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.isMethod:()Z
        22: ifeq          43
        25: aload_0
        26: getfield      #69                 // Field $outer:Lshapeless/CaseClassMacros;
        29: aload         4
        31: invokeinterface #218,  2          // InterfaceMethod shapeless/CaseClassMacros.isNonGeneric:(Lscala/reflect/api/Symbols$SymbolApi;)Z
        36: ifne          43
        39: iconst_1
        40: goto          44
        43: iconst_0
        44: istore_2
        45: goto          60
        48: goto          51
        51: new           #204                // class scala/MatchError
        54: dup
        55: aload_3
        56: invokespecial #207                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        59: athrow
        60: iload_2
        61: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ top, class scala/Tuple2, class scala/reflect/api/Symbols$SymbolApi ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class shapeless/CaseClassMacros$HasApply$, class scala/Tuple2, int, class scala/Tuple2, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 821: 0
        line 819: 2
        line 820: 6
        line 822: 15
        line 819: 48
        line 821: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      35     4 apply   Lscala/reflect/api/Symbols$SymbolApi;
            0      62     0 $this   Lshapeless/CaseClassMacros$HasApply$;
            0      62     1  x$20   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$20                           final

  public static final boolean $anonfun$unapply$4(shapeless.CaseClassMacros$HasApply$, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        41
         6: aload_3
         7: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #49                 // class scala/reflect/api/Types$TypeApi
        13: astore        4
        15: aload_3
        16: invokevirtual #191                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #41                 // class scala/reflect/api/Symbols$SymbolApi
        22: astore        5
        24: aload_0
        25: getfield      #69                 // Field $outer:Lshapeless/CaseClassMacros;
        28: aload         4
        30: aload         5
        32: invokeinterface #227,  3          // InterfaceMethod shapeless/CaseClassMacros.isAccessible:(Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Z
        37: istore_2
        38: goto          53
        41: goto          44
        44: new           #204                // class scala/MatchError
        47: dup
        48: aload_3
        49: invokespecial #207                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        52: athrow
        53: iload_2
        54: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class shapeless/CaseClassMacros$HasApply$, class scala/Tuple2, int, class scala/Tuple2, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 821: 0
        line 819: 2
        line 820: 15
        line 823: 24
        line 819: 41
        line 821: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      28     4 companion   Lscala/reflect/api/Types$TypeApi;
           22      19     5 apply   Lscala/reflect/api/Symbols$SymbolApi;
            0      55     0 $this   Lshapeless/CaseClassMacros$HasApply$;
            0      55     1  x$21   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$21                           final

  public static final boolean $anonfun$unapply$6(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        67
         6: getstatic     #235                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
         9: aload_2
        10: invokevirtual #239                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        13: astore_3
        14: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        17: aload_3
        18: invokevirtual #246                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        21: ifne          64
        24: new           #22                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        27: dup
        28: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        31: aload_3
        32: invokevirtual #249                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        35: invokespecial #252                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
        38: ifnull        64
        41: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        44: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        47: aload_3
        48: invokevirtual #249                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        51: iconst_1
        52: invokevirtual #256                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
        55: iconst_0
        56: if_icmpne     64
        59: iconst_1
        60: istore_1
        61: goto          75
        64: goto          70
        67: goto          70
        70: iconst_0
        71: istore_1
        72: goto          75
        75: iload_1
        76: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 64
          locals = [ top, class scala/collection/immutable/List, class scala/collection/SeqOps ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/immutable/List, int, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 824: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0 check$ifrefutable$2   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$2            final

  public static final scala.Tuple2 $anonfun$unapply$8(scala.reflect.api.Symbols$SymbolApi);
    descriptor: (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #267                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
         3: getstatic     #272                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokeinterface #276,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.name:()Lscala/reflect/api/Names$NameApi;
        12: invokevirtual #280                // Method scala/reflect/api/Names$NameApi.toTermName:()Lscala/reflect/api/Names$TermNameApi;
        15: invokevirtual #283                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        18: aload_0
        19: invokeinterface #81,  1           // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.typeSignature:()Lscala/reflect/api/Types$TypeApi;
        24: invokevirtual #287                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        27: areturn
      LineNumberTable:
        line 826: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 param   Lscala/reflect/api/Symbols$SymbolApi;
    MethodParameters:
      Name                           Flags
      param                          final

  public static final scala.collection.immutable.List $anonfun$unapply$9(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 827: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 aligned   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      aligned                        final

  public static final scala.Option $anonfun$unapply$7(shapeless.CaseClassMacros$HasApply$, scala.reflect.api.Types$TypeApi, scala.collection.immutable.List);
    descriptor: (Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: ifnull        121
         8: getstatic     #235                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
        11: aload         4
        13: invokevirtual #239                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        16: astore        5
        18: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        21: aload         5
        23: invokevirtual #246                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        26: ifne          118
        29: new           #22                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        32: dup
        33: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        36: aload         5
        38: invokevirtual #249                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        41: invokespecial #252                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
        44: ifnull        118
        47: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        50: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        53: aload         5
        55: invokevirtual #249                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        58: iconst_1
        59: invokevirtual #256                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
        62: iconst_0
        63: if_icmpne     118
        66: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        69: getstatic     #242                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        72: aload         5
        74: invokevirtual #249                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        77: iconst_0
        78: invokevirtual #298                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
        81: checkcast     #259                // class scala/collection/immutable/List
        84: astore        6
        86: aload_0
        87: getfield      #69                 // Field $outer:Lshapeless/CaseClassMacros;
        90: aload_1
        91: aload         6
        93: invokedynamic #303,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        98: invokevirtual #306                // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
       101: invokeinterface #310,  3          // InterfaceMethod shapeless/CaseClassMacros.alignFields:(Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
       106: invokedynamic #315,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
       111: invokevirtual #110                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       114: astore_3
       115: goto          134
       118: goto          124
       121: goto          124
       124: new           #204                // class scala/MatchError
       127: dup
       128: aload         4
       130: invokespecial #207                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       133: athrow
       134: aload_3
       135: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 118
          locals = [ top, class scala/collection/immutable/List, class scala/collection/SeqOps ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class shapeless/CaseClassMacros$HasApply$, class scala/reflect/api/Types$TypeApi, class scala/collection/immutable/List, class scala/Option, class scala/collection/immutable/List, class scala/collection/SeqOps, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 824: 0
        line 825: 86
        line 824: 118
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           84      34     6 params   Lscala/collection/immutable/List;
            0     136     0 $this   Lshapeless/CaseClassMacros$HasApply$;
            0     136     1 tpe$6   Lscala/reflect/api/Types$TypeApi;
            0     136     2  x$22   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tpe$6                          final
      x$22                           final

  public static final scala.Option $anonfun$unapply$5(shapeless.CaseClassMacros$HasApply$, scala.reflect.api.Types$TypeApi, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/Tuple2;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: ifnull        68
         8: aload         4
        10: invokevirtual #223                // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #49                 // class scala/reflect/api/Types$TypeApi
        16: astore        5
        18: aload         4
        20: invokevirtual #191                // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #41                 // class scala/reflect/api/Symbols$SymbolApi
        26: astore        6
        28: getstatic     #67                 // Field scala/Option$.MODULE$:Lscala/Option$;
        31: aload         6
        33: aload         5
        35: invokeinterface #321,  2          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
        40: invokevirtual #325                // Method scala/reflect/api/Types$TypeApi.paramLists:()Lscala/collection/immutable/List;
        43: invokevirtual #85                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        46: invokedynamic #332,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        51: invokevirtual #123                // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        54: aload_0
        55: aload_1
        56: invokedynamic #338,  0            // InvokeDynamic #8:apply:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
        61: invokevirtual #148                // Method scala/Option$WithFilter.flatMap:(Lscala/Function1;)Lscala/Option;
        64: astore_3
        65: goto          81
        68: goto          71
        71: new           #204                // class scala/MatchError
        74: dup
        75: aload         4
        77: invokespecial #207                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        80: athrow
        81: aload_3
        82: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 68
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class shapeless/CaseClassMacros$HasApply$, class scala/reflect/api/Types$TypeApi, class scala/Tuple2, class scala/Option, class scala/Tuple2, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 819: 0
        line 820: 18
        line 824: 28
        line 819: 68
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      52     5 companion   Lscala/reflect/api/Types$TypeApi;
           26      42     6 apply   Lscala/reflect/api/Symbols$SymbolApi;
            0      83     0 $this   Lshapeless/CaseClassMacros$HasApply$;
            0      83     1 tpe$6   Lscala/reflect/api/Types$TypeApi;
            0      83     2  x$23   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tpe$6                          final
      x$23                           final

  public shapeless.CaseClassMacros$HasApply$(shapeless.CaseClassMacros);
    descriptor: (Lshapeless/CaseClassMacros;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #69                 // Field $outer:Lshapeless/CaseClassMacros;
        11: aload_0
        12: invokespecial #342                // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 817: 0
        line 830: 11
        line 817: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lshapeless/CaseClassMacros$HasApply$;
            0      16     1 $outer   Lshapeless/CaseClassMacros;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic

  public static final java.lang.Object $anonfun$unapply$2$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #344                // Method $anonfun$unapply$2:(Lscala/Tuple2;)Z
         4: invokestatic  #350                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 821: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$19   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$19                           final

  public static final java.lang.Object $anonfun$unapply$3$adapted(shapeless.CaseClassMacros$HasApply$, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #352                // Method $anonfun$unapply$3:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Z
         5: invokestatic  #350                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 821: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lshapeless/CaseClassMacros$HasApply$;
            0       9     1  x$20   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$20                           final

  public static final java.lang.Object $anonfun$unapply$4$adapted(shapeless.CaseClassMacros$HasApply$, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #354                // Method $anonfun$unapply$4:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Z
         5: invokestatic  #350                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 821: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lshapeless/CaseClassMacros$HasApply$;
            0       9     1  x$21   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$21                           final

  public static final java.lang.Object $anonfun$unapply$6$adapted(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #356                // Method $anonfun$unapply$6:(Lscala/collection/immutable/List;)Z
         4: invokestatic  #350                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 824: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$2   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$2            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #368,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // WithFilter=class scala/Option$WithFilter of class scala/Option
  public static #20= #17 of #19;          // ArrowAssoc$=class scala/Predef$ArrowAssoc$ of class scala/Predef
  public static final #25= #22 of #24;    // UnapplySeqWrapper=class scala/collection/SeqFactory$UnapplySeqWrapper of class scala/collection/SeqFactory
  public static #28= #27 of #24;          // UnapplySeqWrapper$=class scala/collection/SeqFactory$UnapplySeqWrapper$ of class scala/collection/SeqFactory
  public abstract #33= #30 of #32;        // NameApi=class scala/reflect/api/Names$NameApi of class scala/reflect/api/Names
  public #36= #35 of #32;                 // TermNameApi=class scala/reflect/api/Names$TermNameApi of class scala/reflect/api/Names
  public abstract #39= #38 of #32;        // TermNameExtractor=class scala/reflect/api/Names$TermNameExtractor of class scala/reflect/api/Names
  public #44= #41 of #43;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public #47= #46 of #43;                 // TermSymbolApi=class scala/reflect/api/Symbols$TermSymbolApi of class scala/reflect/api/Symbols
  public abstract #52= #49 of #51;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public #55= #2 of #54;                  // HasApply$=class shapeless/CaseClassMacros$HasApply$ of class shapeless/CaseClassMacros
SourceFile: "generic.scala"
BootstrapMethods:
  0: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #87 (Ljava/lang/Object;)Ljava/lang/Object;
      #92 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$1:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
      #94 (Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
      #95 5
      #96 1
      #94 (Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
  1: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #87 (Ljava/lang/Object;)Ljava/lang/Object;
      #115 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #116 (Lscala/Tuple2;)Ljava/lang/Object;
      #95 5
      #96 1
      #116 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #87 (Ljava/lang/Object;)Ljava/lang/Object;
      #128 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$3$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
      #116 (Lscala/Tuple2;)Ljava/lang/Object;
      #95 5
      #96 1
      #116 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #87 (Ljava/lang/Object;)Ljava/lang/Object;
      #134 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$4$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
      #116 (Lscala/Tuple2;)Ljava/lang/Object;
      #95 5
      #96 1
      #116 (Lscala/Tuple2;)Ljava/lang/Object;
  4: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #87 (Ljava/lang/Object;)Ljava/lang/Object;
      #140 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$5:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/Tuple2;)Lscala/Option;
      #142 (Lscala/Tuple2;)Lscala/Option;
      #95 5
      #96 1
      #142 (Lscala/Tuple2;)Lscala/Option;
  5: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #87 (Ljava/lang/Object;)Ljava/lang/Object;
      #301 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$8:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
      #302 (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
      #95 5
      #96 1
      #302 (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  6: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #87 (Ljava/lang/Object;)Ljava/lang/Object;
      #313 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$9:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #314 (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #95 5
      #96 1
      #314 (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  7: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #87 (Ljava/lang/Object;)Ljava/lang/Object;
      #330 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$6$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
      #331 (Lscala/collection/immutable/List;)Ljava/lang/Object;
      #95 5
      #96 1
      #331 (Lscala/collection/immutable/List;)Ljava/lang/Object;
  8: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #87 (Ljava/lang/Object;)Ljava/lang/Object;
      #335 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$7:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
      #337 (Lscala/collection/immutable/List;)Lscala/Option;
      #95 5
      #96 1
      #337 (Lscala/collection/immutable/List;)Lscala/Option;
  9: #365 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #92 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$1:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
      #115 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$2$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #128 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$3$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
      #134 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$4$adapted:(Lshapeless/CaseClassMacros$HasApply$;Lscala/Tuple2;)Ljava/lang/Object;
      #140 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$5:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/Tuple2;)Lscala/Option;
      #330 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$6$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
      #335 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$7:(Lshapeless/CaseClassMacros$HasApply$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
      #301 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$8:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
      #313 REF_invokeStatic shapeless/CaseClassMacros$HasApply$.$anonfun$unapply$9:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  ScalaInlineInfo: length = 0x4F (unknown attribute)
   01 01 00 0F 00 58 00 59 01 00 6F 00 70 01 00 B9
   00 BA 01 00 7C 00 7D 01 00 D1 00 D2 01 00 83 00
   7D 01 00 DB 00 D2 01 00 88 00 89 01 01 46 01 47
   01 00 E4 00 E5 01 01 23 01 24 01 01 06 01 07 01
   01 20 01 21 01 00 B4 01 53 01 00 3A 00 3B 01
  Scala: length = 0x0 (unknown attribute)

