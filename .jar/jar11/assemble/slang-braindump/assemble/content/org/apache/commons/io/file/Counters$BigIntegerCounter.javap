Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/file/Counters$BigIntegerCounter.class
  Last modified May 29, 2022; size 2096 bytes
  SHA-256 checksum 5a3e200319d9756584541c3bcbcdf86a663ddf39f3e6d4ad85e35d04d9edaa2c
  Compiled from "Counters.java"
class org.apache.commons.io.file.Counters$BigIntegerCounter implements org.apache.commons.io.file.Counters$Counter
  minor version: 0
  major version: 52
  flags: (0x0020) ACC_SUPER
  this_class: #16                         // org/apache/commons/io/file/Counters$BigIntegerCounter
  super_class: #12                        // java/lang/Object
  interfaces: 1, fields: 1, methods: 10, attributes: 2
Constant pool:
   #1 = Methodref          #16.#57        // org/apache/commons/io/file/Counters$BigIntegerCounter."<init>":()V
   #2 = Methodref          #12.#57        // java/lang/Object."<init>":()V
   #3 = Fieldref           #58.#59        // java/math/BigInteger.ZERO:Ljava/math/BigInteger;
   #4 = Fieldref           #16.#60        // org/apache/commons/io/file/Counters$BigIntegerCounter.value:Ljava/math/BigInteger;
   #5 = Methodref          #58.#61        // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
   #6 = Methodref          #58.#62        // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   #7 = Class              #64            // org/apache/commons/io/file/Counters$Counter
   #8 = InterfaceMethodref #7.#65         // org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;
   #9 = Methodref          #66.#67        // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #10 = Methodref          #58.#68        // java/math/BigInteger.longValueExact:()J
  #11 = Methodref          #69.#70        // java/lang/Long.valueOf:(J)Ljava/lang/Long;
  #12 = Class              #71            // java/lang/Object
  #13 = Methodref          #66.#72        // java/util/Objects.hash:([Ljava/lang/Object;)I
  #14 = Fieldref           #58.#73        // java/math/BigInteger.ONE:Ljava/math/BigInteger;
  #15 = Methodref          #58.#74        // java/math/BigInteger.toString:()Ljava/lang/String;
  #16 = Class              #75            // org/apache/commons/io/file/Counters$BigIntegerCounter
  #17 = Utf8               value
  #18 = Utf8               Ljava/math/BigInteger;
  #19 = Utf8               <init>
  #20 = Utf8               ()V
  #21 = Utf8               Code
  #22 = Utf8               LineNumberTable
  #23 = Utf8               LocalVariableTable
  #24 = Utf8               this
  #25 = Utf8               BigIntegerCounter
  #26 = Utf8               InnerClasses
  #27 = Utf8               Lorg/apache/commons/io/file/Counters$BigIntegerCounter;
  #28 = Utf8               add
  #29 = Utf8               (J)V
  #30 = Utf8               val
  #31 = Utf8               J
  #32 = Utf8               equals
  #33 = Utf8               (Ljava/lang/Object;)Z
  #34 = Utf8               obj
  #35 = Utf8               Ljava/lang/Object;
  #36 = Utf8               other
  #37 = Utf8               Counter
  #38 = Utf8               Lorg/apache/commons/io/file/Counters$Counter;
  #39 = Utf8               StackMapTable
  #40 = Utf8               get
  #41 = Utf8               ()J
  #42 = Utf8               getBigInteger
  #43 = Utf8               ()Ljava/math/BigInteger;
  #44 = Utf8               getLong
  #45 = Utf8               ()Ljava/lang/Long;
  #46 = Utf8               hashCode
  #47 = Utf8               ()I
  #48 = Utf8               increment
  #49 = Utf8               toString
  #50 = Utf8               ()Ljava/lang/String;
  #51 = Class              #76            // org/apache/commons/io/file/Counters$1
  #52 = Utf8               (Lorg/apache/commons/io/file/Counters$1;)V
  #53 = Utf8               x0
  #54 = Utf8               Lorg/apache/commons/io/file/Counters$1;
  #55 = Utf8               SourceFile
  #56 = Utf8               Counters.java
  #57 = NameAndType        #19:#20        // "<init>":()V
  #58 = Class              #77            // java/math/BigInteger
  #59 = NameAndType        #78:#18        // ZERO:Ljava/math/BigInteger;
  #60 = NameAndType        #17:#18        // value:Ljava/math/BigInteger;
  #61 = NameAndType        #79:#80        // valueOf:(J)Ljava/math/BigInteger;
  #62 = NameAndType        #28:#81        // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #63 = Class              #82            // org/apache/commons/io/file/Counters
  #64 = Utf8               org/apache/commons/io/file/Counters$Counter
  #65 = NameAndType        #42:#43        // getBigInteger:()Ljava/math/BigInteger;
  #66 = Class              #83            // java/util/Objects
  #67 = NameAndType        #32:#84        // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #68 = NameAndType        #85:#41        // longValueExact:()J
  #69 = Class              #86            // java/lang/Long
  #70 = NameAndType        #79:#87        // valueOf:(J)Ljava/lang/Long;
  #71 = Utf8               java/lang/Object
  #72 = NameAndType        #88:#89        // hash:([Ljava/lang/Object;)I
  #73 = NameAndType        #90:#18        // ONE:Ljava/math/BigInteger;
  #74 = NameAndType        #49:#50        // toString:()Ljava/lang/String;
  #75 = Utf8               org/apache/commons/io/file/Counters$BigIntegerCounter
  #76 = Utf8               org/apache/commons/io/file/Counters$1
  #77 = Utf8               java/math/BigInteger
  #78 = Utf8               ZERO
  #79 = Utf8               valueOf
  #80 = Utf8               (J)Ljava/math/BigInteger;
  #81 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #82 = Utf8               org/apache/commons/io/file/Counters
  #83 = Utf8               java/util/Objects
  #84 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #85 = Utf8               longValueExact
  #86 = Utf8               java/lang/Long
  #87 = Utf8               (J)Ljava/lang/Long;
  #88 = Utf8               hash
  #89 = Utf8               ([Ljava/lang/Object;)I
  #90 = Utf8               ONE
{
  private java.math.BigInteger value;
    descriptor: Ljava/math/BigInteger;
    flags: (0x0002) ACC_PRIVATE

  private org.apache.commons.io.file.Counters$BigIntegerCounter();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: getstatic     #3                  // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
         8: putfield      #4                  // Field value:Ljava/math/BigInteger;
        11: return
      LineNumberTable:
        line 104: 0
        line 106: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;

  public void add(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #4                  // Field value:Ljava/math/BigInteger;
         5: lload_1
         6: invokestatic  #5                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
         9: invokevirtual #6                  // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
        12: putfield      #4                  // Field value:Ljava/math/BigInteger;
        15: return
      LineNumberTable:
        line 110: 0
        line 112: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;
            0      16     1   val   J

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_1
         8: instanceof    #7                  // class org/apache/commons/io/file/Counters$Counter
        11: ifne          16
        14: iconst_0
        15: ireturn
        16: aload_1
        17: checkcast     #7                  // class org/apache/commons/io/file/Counters$Counter
        20: astore_2
        21: aload_0
        22: getfield      #4                  // Field value:Ljava/math/BigInteger;
        25: aload_2
        26: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;
        31: invokestatic  #9                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        34: ireturn
      LineNumberTable:
        line 116: 0
        line 117: 5
        line 119: 7
        line 120: 14
        line 122: 16
        line 123: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;
            0      35     1   obj   Ljava/lang/Object;
           21      14     2 other   Lorg/apache/commons/io/file/Counters$Counter;
      StackMapTable: number_of_entries = 2
        frame_type = 7 /* same */
        frame_type = 8 /* same */

  public long get();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field value:Ljava/math/BigInteger;
         4: invokevirtual #10                 // Method java/math/BigInteger.longValueExact:()J
         7: lreturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;

  public java.math.BigInteger getBigInteger();
    descriptor: ()Ljava/math/BigInteger;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field value:Ljava/math/BigInteger;
         4: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;

  public java.lang.Long getLong();
    descriptor: ()Ljava/lang/Long;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field value:Ljava/math/BigInteger;
         4: invokevirtual #10                 // Method java/math/BigInteger.longValueExact:()J
         7: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        10: areturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: iconst_1
         1: anewarray     #12                 // class java/lang/Object
         4: dup
         5: iconst_0
         6: aload_0
         7: getfield      #4                  // Field value:Ljava/math/BigInteger;
        10: aastore
        11: invokestatic  #13                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
        14: ireturn
      LineNumberTable:
        line 143: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;

  public void increment();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: getfield      #4                  // Field value:Ljava/math/BigInteger;
         5: getstatic     #14                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
         8: invokevirtual #6                  // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
        11: putfield      #4                  // Field value:Ljava/math/BigInteger;
        14: return
      LineNumberTable:
        line 148: 0
        line 149: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field value:Ljava/math/BigInteger;
         4: invokevirtual #15                 // Method java/math/BigInteger.toString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;

  org.apache.commons.io.file.Counters$BigIntegerCounter(org.apache.commons.io.file.Counters$1);
    descriptor: (Lorg/apache/commons/io/file/Counters$1;)V
    flags: (0x1000) ACC_SYNTHETIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method "<init>":()V
         4: return
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/file/Counters$BigIntegerCounter;
            0       5     1    x0   Lorg/apache/commons/io/file/Counters$1;
}
SourceFile: "Counters.java"
InnerClasses:
  private static #25= #16 of #63;         // BigIntegerCounter=class org/apache/commons/io/file/Counters$BigIntegerCounter of class org/apache/commons/io/file/Counters
  public static #37= #7 of #63;           // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters
  static #51;                             // class org/apache/commons/io/file/Counters$1
