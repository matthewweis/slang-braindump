Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/LongTableStepper.class
  Last modified May 29, 2022; size 6676 bytes
  SHA-256 checksum 846c87a9623de23adbf79554fc308223d1e8d2d373e75a5bc664855ad2e2a056
  Compiled from "TableStepper.scala"
public final class scala.collection.convert.impl.LongTableStepper<I extends java.lang.Object> extends scala.collection.convert.impl.TableStepperBase<java.lang.Object, I, scala.collection.LongStepper, scala.collection.convert.impl.LongTableStepper<I>> implements scala.collection.LongStepper
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/LongTableStepper
  super_class: #5                         // scala/collection/convert/impl/TableStepperBase
  interfaces: 1, fields: 2, methods: 24, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/LongTableStepper
    #2 = Class              #1            // scala/collection/convert/impl/LongTableStepper
    #3 = Utf8               <I:Ljava/lang/Object;>Lscala/collection/convert/impl/TableStepperBase<Ljava/lang/Object;TI;Lscala/collection/LongStepper;Lscala/collection/convert/impl/LongTableStepper<TI;>;>;Lscala/collection/LongStepper;
    #4 = Utf8               scala/collection/convert/impl/TableStepperBase
    #5 = Class              #4            // scala/collection/convert/impl/TableStepperBase
    #6 = Utf8               scala/collection/LongStepper
    #7 = Class              #6            // scala/collection/LongStepper
    #8 = Utf8               TableStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005A3QAC\u0006\u0003\u001fMA\u0001B\f\u0001\u0003\u0002\u0003\u0006Ia\f\u0005\ne\u0001\u0011\t\u0011)A\u0005gYB\u0001\u0002\u000f\u0001\u0003\u0002\u0003\u0006I!\u000f\u0005\ty\u0001\u0011\t\u0011)A\u0005{!Aa\b\u0001B\u0001B\u0003%q\u0006C\u0005@\u0001\t\u0005\t\u0015!\u00030\u0001\")!\t\u0001C\u0001\u0007\")!\n\u0001C\u0001\u0017\")A\n\u0001C\u0001\u001b\n\u0001Bj\u001c8h)\u0006\u0014G.Z*uKB\u0004XM\u001d\u0006\u0003\u00195\tA![7qY*\u0011abD\u0001\bG>tg/\u001a:u\u0015\t\u0001\u0012#\u0001\u0006d_2dWm\u0019;j_:T\u0011AE\u0001\u0006g\u000e\fG.Y\u000b\u0003)}\u00192\u0001A\u000b*!\u00191r#G\u000f*[5\t1\"\u0003\u0002\u0019\u0017\t\u0001B+\u00192mKN#X\r\u001d9fe\n\u000b7/\u001a\t\u00035mi\u0011!E\u0005\u00039E\u0011A\u0001T8oOB\u0011ad\b\u0007\u0001\t\u0015\u0001\u0003A1\u0001#\u0005\u0005I5\u0001A\t\u0003G\u0019\u0002\"A\u0007\u0013\n\u0005\u0015\n\"\u0001\u0002(vY2\u0004\"AG\u0014\n\u0005!\n\"AB!osJ+g\r\u0005\u0002+W5\tq\"\u0003\u0002-\u001f\tYAj\u001c8h\'R,\u0007\u000f]3s!\r1\u0002!H\u0001\u000b?6\f\u0007\u0010T3oORD\u0007C\u0001\u000e1\u0013\t\t\u0014CA\u0002J]R\faa\u0018;bE2,\u0007c\u0001\u000e5;%\u0011Q\'\u0005\u0002\u0006\u0003J\u0014\u0018-_\u0005\u0003o]\tQ\u0001^1cY\u0016\fq!\u001b;fe\u0006$X\r\u0005\u0003\u001buui\u0012BA\u001e\u0012\u0005%1UO\\2uS>t\u0017\'A\u0004fqR\u0014\u0018m\u0019;\u0011\tiQT$G\u0001\u0004?&\u0004\u0014aA0j\u001d&\u0011\u0011iF\u0001\u0003S:\u000ba\u0001P5oSRtDcB\u0017E\u000b\u001a;\u0005*\u0013\u0005\u0006]\u001d\u0001\ra\f\u0005\u0006e\u001d\u0001\ra\r\u0005\u0006q\u001d\u0001\r!\u000f\u0005\u0006y\u001d\u0001\r!\u0010\u0005\u0006}\u001d\u0001\ra\f\u0005\u0006\u007f\u001d\u0001\raL\u0001\t]\u0016DHo\u0015;faR\t\u0011$A\u0005tK6L7\r\\8oKR\u0011QF\u0014\u0005\u0006\u001f&\u0001\raL\u0001\u0005Q\u0006dg\r
   #12 = Utf8               java/util/PrimitiveIterator$OfLong
   #13 = Class              #12           // java/util/PrimitiveIterator$OfLong
   #14 = Utf8               java/util/PrimitiveIterator
   #15 = Class              #14           // java/util/PrimitiveIterator
   #16 = Utf8               OfLong
   #17 = Utf8               java/util/Spliterator$OfLong
   #18 = Class              #17           // java/util/Spliterator$OfLong
   #19 = Utf8               java/util/Spliterator
   #20 = Class              #19           // java/util/Spliterator
   #21 = Utf8               scala$collection$convert$impl$LongTableStepper$$iterate
   #22 = Utf8               Lscala/Function1;
   #23 = Utf8               Lscala/Function1<TI;TI;>;
   #24 = Utf8               scala$collection$convert$impl$LongTableStepper$$extract
   #25 = Utf8               Lscala/Function1<TI;Ljava/lang/Object;>;
   #26 = Utf8               spliterator
   #27 = Utf8               ()Ljava/util/Spliterator$OfLong;
   #28 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfLong;
   #29 = Utf8               spliterator$
   #30 = Utf8               (Lscala/collection/LongStepper;)Ljava/util/Spliterator$OfLong;
   #31 = NameAndType        #29:#30       // spliterator$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator$OfLong;
   #32 = InterfaceMethodref #7.#31        // scala/collection/LongStepper.spliterator$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator$OfLong;
   #33 = Utf8               this
   #34 = Utf8               Lscala/collection/convert/impl/LongTableStepper;
   #35 = Utf8               javaIterator
   #36 = Utf8               ()Ljava/util/PrimitiveIterator$OfLong;
   #37 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfLong;
   #38 = Utf8               javaIterator$
   #39 = Utf8               (Lscala/collection/LongStepper;)Ljava/util/PrimitiveIterator$OfLong;
   #40 = NameAndType        #38:#39       // javaIterator$:(Lscala/collection/LongStepper;)Ljava/util/PrimitiveIterator$OfLong;
   #41 = InterfaceMethodref #7.#40        // scala/collection/LongStepper.javaIterator$:(Lscala/collection/LongStepper;)Ljava/util/PrimitiveIterator$OfLong;
   #42 = Utf8               spliterator$mcJ$sp
   #43 = Utf8               ()Ljava/util/Spliterator;
   #44 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #45 = Utf8               spliterator$mcJ$sp$
   #46 = Utf8               (Lscala/collection/LongStepper;)Ljava/util/Spliterator;
   #47 = NameAndType        #45:#46       // spliterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator;
   #48 = InterfaceMethodref #7.#47        // scala/collection/LongStepper.spliterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator;
   #49 = Utf8               javaIterator$mcJ$sp
   #50 = Utf8               ()Ljava/util/Iterator;
   #51 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
   #52 = Utf8               javaIterator$mcJ$sp$
   #53 = Utf8               (Lscala/collection/LongStepper;)Ljava/util/Iterator;
   #54 = NameAndType        #52:#53       // javaIterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Iterator;
   #55 = InterfaceMethodref #7.#54        // scala/collection/LongStepper.javaIterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Iterator;
   #56 = Utf8               nextStep$mcD$sp
   #57 = Utf8               ()D
   #58 = Utf8               scala/collection/Stepper
   #59 = Class              #58           // scala/collection/Stepper
   #60 = Utf8               nextStep$mcD$sp$
   #61 = Utf8               (Lscala/collection/Stepper;)D
   #62 = NameAndType        #60:#61       // nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #63 = InterfaceMethodref #59.#62       // scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #64 = Utf8               nextStep$mcI$sp
   #65 = Utf8               ()I
   #66 = Utf8               nextStep$mcI$sp$
   #67 = Utf8               (Lscala/collection/Stepper;)I
   #68 = NameAndType        #66:#67       // nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #69 = InterfaceMethodref #59.#68       // scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #70 = Utf8               trySplit$mcD$sp
   #71 = Utf8               ()Lscala/collection/Stepper;
   #72 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
   #73 = Utf8               trySplit$mcD$sp$
   #74 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #75 = NameAndType        #73:#74       // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #76 = InterfaceMethodref #59.#75       // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #77 = Utf8               trySplit$mcI$sp
   #78 = Utf8               trySplit$mcI$sp$
   #79 = NameAndType        #78:#74       // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #80 = InterfaceMethodref #59.#79       // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #81 = Utf8               trySplit$mcJ$sp
   #82 = Utf8               trySplit$mcJ$sp$
   #83 = NameAndType        #82:#74       // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #84 = InterfaceMethodref #59.#83       // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #85 = Utf8               spliterator$mcD$sp
   #86 = Utf8               spliterator$mcD$sp$
   #87 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #88 = NameAndType        #86:#87       // spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #89 = InterfaceMethodref #59.#88       // scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #90 = Utf8               spliterator$mcI$sp
   #91 = Utf8               spliterator$mcI$sp$
   #92 = NameAndType        #91:#87       // spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #93 = InterfaceMethodref #59.#92       // scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #94 = Utf8               javaIterator$mcD$sp
   #95 = Utf8               javaIterator$mcD$sp$
   #96 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
   #97 = NameAndType        #95:#96       // javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #98 = InterfaceMethodref #59.#97       // scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #99 = Utf8               javaIterator$mcI$sp
  #100 = Utf8               javaIterator$mcI$sp$
  #101 = NameAndType        #100:#96      // javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #102 = InterfaceMethodref #59.#101      // scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #103 = Utf8               iterator
  #104 = Utf8               ()Lscala/collection/Iterator;
  #105 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #106 = Utf8               iterator$
  #107 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #108 = NameAndType        #106:#107     // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #109 = InterfaceMethodref #59.#108      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #110 = Utf8               nextStep
  #111 = Utf8               ()J
  #112 = Utf8               nextStep$mcJ$sp
  #113 = NameAndType        #112:#111     // nextStep$mcJ$sp:()J
  #114 = Methodref          #2.#113       // scala/collection/convert/impl/LongTableStepper.nextStep$mcJ$sp:()J
  #115 = Utf8               semiclone
  #116 = Utf8               (I)Lscala/collection/convert/impl/LongTableStepper;
  #117 = Utf8               (I)Lscala/collection/convert/impl/LongTableStepper<TI;>;
  #118 = Utf8               half
  #119 = Utf8               maxLength
  #120 = NameAndType        #119:#65      // maxLength:()I
  #121 = Methodref          #2.#120       // scala/collection/convert/impl/LongTableStepper.maxLength:()I
  #122 = Utf8               table
  #123 = Utf8               ()[Ljava/lang/Object;
  #124 = NameAndType        #122:#123     // table:()[Ljava/lang/Object;
  #125 = Methodref          #2.#124       // scala/collection/convert/impl/LongTableStepper.table:()[Ljava/lang/Object;
  #126 = NameAndType        #21:#22       // scala$collection$convert$impl$LongTableStepper$$iterate:Lscala/Function1;
  #127 = Fieldref           #2.#126       // scala/collection/convert/impl/LongTableStepper.scala$collection$convert$impl$LongTableStepper$$iterate:Lscala/Function1;
  #128 = NameAndType        #24:#22       // scala$collection$convert$impl$LongTableStepper$$extract:Lscala/Function1;
  #129 = Fieldref           #2.#128       // scala/collection/convert/impl/LongTableStepper.scala$collection$convert$impl$LongTableStepper$$extract:Lscala/Function1;
  #130 = Utf8               i0
  #131 = NameAndType        #130:#65      // i0:()I
  #132 = Methodref          #2.#131       // scala/collection/convert/impl/LongTableStepper.i0:()I
  #133 = Utf8               <init>
  #134 = Utf8               (I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
  #135 = NameAndType        #133:#134     // "<init>":(I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
  #136 = Methodref          #2.#135       // scala/collection/convert/impl/LongTableStepper."<init>":(I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
  #137 = Utf8               I
  #138 = Utf8               hasStep
  #139 = Utf8               ()Z
  #140 = NameAndType        #138:#139     // hasStep:()Z
  #141 = Methodref          #2.#140       // scala/collection/convert/impl/LongTableStepper.hasStep:()Z
  #142 = Utf8               myCurrent
  #143 = Utf8               ()Ljava/lang/Object;
  #144 = NameAndType        #142:#143     // myCurrent:()Ljava/lang/Object;
  #145 = Methodref          #2.#144       // scala/collection/convert/impl/LongTableStepper.myCurrent:()Ljava/lang/Object;
  #146 = Utf8               scala/Function1
  #147 = Class              #146          // scala/Function1
  #148 = Utf8               apply
  #149 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #150 = NameAndType        #148:#149     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #151 = InterfaceMethodref #147.#150     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #152 = Utf8               scala/runtime/BoxesRunTime
  #153 = Class              #152          // scala/runtime/BoxesRunTime
  #154 = Utf8               unboxToLong
  #155 = Utf8               (Ljava/lang/Object;)J
  #156 = NameAndType        #154:#155     // unboxToLong:(Ljava/lang/Object;)J
  #157 = Methodref          #153.#156     // scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
  #158 = Utf8               myCurrent_$eq
  #159 = Utf8               (Ljava/lang/Object;)V
  #160 = NameAndType        #158:#159     // myCurrent_$eq:(Ljava/lang/Object;)V
  #161 = Methodref          #2.#160       // scala/collection/convert/impl/LongTableStepper.myCurrent_$eq:(Ljava/lang/Object;)V
  #162 = Utf8               scala/collection/Stepper$
  #163 = Class              #162          // scala/collection/Stepper$
  #164 = Utf8               MODULE$
  #165 = Utf8               Lscala/collection/Stepper$;
  #166 = NameAndType        #164:#165     // MODULE$:Lscala/collection/Stepper$;
  #167 = Fieldref           #163.#166     // scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
  #168 = Utf8               java/util/NoSuchElementException
  #169 = Class              #168          // java/util/NoSuchElementException
  #170 = Utf8               Empty Stepper
  #171 = String             #170          // Empty Stepper
  #172 = Utf8               (Ljava/lang/String;)V
  #173 = NameAndType        #133:#172     // "<init>":(Ljava/lang/String;)V
  #174 = Methodref          #169.#173     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #175 = Utf8               ans
  #176 = Utf8               J
  #177 = Utf8               trySplit
  #178 = NameAndType        #177:#143     // trySplit:()Ljava/lang/Object;
  #179 = Methodref          #2.#178       // scala/collection/convert/impl/LongTableStepper.trySplit:()Ljava/lang/Object;
  #180 = Utf8               ()Lscala/collection/LongStepper;
  #181 = NameAndType        #35:#36       // javaIterator:()Ljava/util/PrimitiveIterator$OfLong;
  #182 = Methodref          #2.#181       // scala/collection/convert/impl/LongTableStepper.javaIterator:()Ljava/util/PrimitiveIterator$OfLong;
  #183 = NameAndType        #26:#27       // spliterator:()Ljava/util/Spliterator$OfLong;
  #184 = Methodref          #2.#183       // scala/collection/convert/impl/LongTableStepper.spliterator:()Ljava/util/Spliterator$OfLong;
  #185 = Utf8               (I)Lscala/collection/convert/impl/TableStepperBase;
  #186 = NameAndType        #115:#116     // semiclone:(I)Lscala/collection/convert/impl/LongTableStepper;
  #187 = Methodref          #2.#186       // scala/collection/convert/impl/LongTableStepper.semiclone:(I)Lscala/collection/convert/impl/LongTableStepper;
  #188 = NameAndType        #110:#111     // nextStep:()J
  #189 = Methodref          #2.#188       // scala/collection/convert/impl/LongTableStepper.nextStep:()J
  #190 = Utf8               boxToLong
  #191 = Utf8               (J)Ljava/lang/Long;
  #192 = NameAndType        #190:#191     // boxToLong:(J)Ljava/lang/Long;
  #193 = Methodref          #153.#192     // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #194 = Utf8               (I[TI;Lscala/Function1<TI;TI;>;Lscala/Function1<TI;Ljava/lang/Object;>;II)V
  #195 = Utf8               _maxLength
  #196 = Utf8               _table
  #197 = Utf8               iterate
  #198 = Utf8               extract
  #199 = Utf8               _i0
  #200 = Utf8               _iN
  #201 = Utf8               (I[Ljava/lang/Object;II)V
  #202 = NameAndType        #133:#201     // "<init>":(I[Ljava/lang/Object;II)V
  #203 = Methodref          #5.#202       // scala/collection/convert/impl/TableStepperBase."<init>":(I[Ljava/lang/Object;II)V
  #204 = Utf8               [Ljava/lang/Object;
  #205 = Utf8               Signature
  #206 = Utf8               Code
  #207 = Utf8               LineNumberTable
  #208 = Utf8               LocalVariableTable
  #209 = Utf8               MethodParameters
  #210 = Utf8               StackMapTable
  #211 = Utf8               InnerClasses
  #212 = Utf8               SourceFile
  #213 = Utf8               RuntimeVisibleAnnotations
  #214 = Utf8               ScalaInlineInfo
  #215 = Utf8               ScalaSig
{
  public final scala.Function1<I, I> scala$collection$convert$impl$LongTableStepper$$iterate;
    descriptor: Lscala/Function1;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Signature: #23                          // Lscala/Function1<TI;TI;>;

  public final scala.Function1<I, java.lang.Object> scala$collection$convert$impl$LongTableStepper$$extract;
    descriptor: Lscala/Function1;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Signature: #25                          // Lscala/Function1<TI;Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator$OfLong spliterator();
    descriptor: ()Ljava/util/Spliterator$OfLong;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #32                 // InterfaceMethod scala/collection/LongStepper.spliterator$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator$OfLong;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #28                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfLong;

  public <B extends java.lang.Object> java.util.PrimitiveIterator$OfLong javaIterator();
    descriptor: ()Ljava/util/PrimitiveIterator$OfLong;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #41                 // InterfaceMethod scala/collection/LongStepper.javaIterator$:(Lscala/collection/LongStepper;)Ljava/util/PrimitiveIterator$OfLong;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #37                          // <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfLong;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #48                 // InterfaceMethod scala/collection/LongStepper.spliterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #44                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #55                 // InterfaceMethod scala/collection/LongStepper.javaIterator$mcJ$sp$:(Lscala/collection/LongStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #51                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #63                 // InterfaceMethod scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
         4: dreturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #69                 // InterfaceMethod scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
         4: ireturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #76                 // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #72                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #80                 // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #72                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #84                 // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #72                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #89                 // InterfaceMethod scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #44                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #93                 // InterfaceMethod scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #44                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #98                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #51                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #102                // InterfaceMethod scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #51                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #109                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;
    Signature: #105                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public long nextStep();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #114                // Method nextStep$mcJ$sp:()J
         4: lreturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;

  public scala.collection.convert.impl.LongTableStepper<I> semiclone(int);
    descriptor: (I)Lscala/collection/convert/impl/LongTableStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class scala/collection/convert/impl/LongTableStepper
         3: dup
         4: aload_0
         5: invokevirtual #121                // Method maxLength:()I
         8: aload_0
         9: invokevirtual #125                // Method table:()[Ljava/lang/Object;
        12: aload_0
        13: getfield      #127                // Field scala$collection$convert$impl$LongTableStepper$$iterate:Lscala/Function1;
        16: aload_0
        17: getfield      #129                // Field scala$collection$convert$impl$LongTableStepper$$extract:Lscala/Function1;
        20: aload_0
        21: invokevirtual #132                // Method i0:()I
        24: iload_1
        25: invokespecial #136                // Method "<init>":(I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
        28: areturn
      LineNumberTable:
        line 136: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lscala/collection/convert/impl/LongTableStepper;
            0      29     1  half   I
    Signature: #117                         // (I)Lscala/collection/convert/impl/LongTableStepper<TI;>;
    MethodParameters:
      Name                           Flags
      half                           final

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #141                // Method hasStep:()Z
         4: ifeq          43
         7: aload_0
         8: getfield      #129                // Field scala$collection$convert$impl$LongTableStepper$$extract:Lscala/Function1;
        11: aload_0
        12: invokevirtual #145                // Method myCurrent:()Ljava/lang/Object;
        15: invokeinterface #151,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        20: invokestatic  #157                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
        23: lstore_1
        24: aload_0
        25: aload_0
        26: getfield      #127                // Field scala$collection$convert$impl$LongTableStepper$$iterate:Lscala/Function1;
        29: aload_0
        30: invokevirtual #145                // Method myCurrent:()Ljava/lang/Object;
        33: invokeinterface #151,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        38: invokevirtual #161                // Method myCurrent_$eq:(Ljava/lang/Object;)V
        41: lload_1
        42: lreturn
        43: getstatic     #167                // Field scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
        46: pop
        47: new           #169                // class java/util/NoSuchElementException
        50: dup
        51: ldc           #171                // String Empty Stepper
        53: invokespecial #174                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        56: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 43 /* same */
      LineNumberTable:
        line 129: 0
        line 130: 7
        line 131: 24
        line 132: 41
        line 134: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           24      18     1   ans   J
            0      57     0  this   Lscala/collection/convert/impl/LongTableStepper;

  public scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #179                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #59                 // class scala/collection/Stepper
         7: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/LongTableStepper;

  public scala.collection.LongStepper trySplit();
    descriptor: ()Lscala/collection/LongStepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #179                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #7                  // class scala/collection/LongStepper
         7: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/LongTableStepper;

  public java.util.Iterator javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #182                // Method javaIterator:()Ljava/util/PrimitiveIterator$OfLong;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;

  public java.util.Spliterator spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #184                // Method spliterator:()Ljava/util/Spliterator$OfLong;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/LongTableStepper;

  public scala.collection.convert.impl.TableStepperBase semiclone(int);
    descriptor: (I)Lscala/collection/convert/impl/TableStepperBase;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #187                // Method semiclone:(I)Lscala/collection/convert/impl/LongTableStepper;
         5: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/LongTableStepper;
            0       6     1  half   I
    MethodParameters:
      Name                           Flags
      half                           final

  public java.lang.Object nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #189                // Method nextStep:()J
         4: invokestatic  #193                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
         7: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/LongTableStepper;

  public scala.collection.convert.impl.LongTableStepper(int, I[], scala.Function1<I, I>, scala.Function1<I, java.lang.Object>, int, int);
    descriptor: (I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=7
         0: aload_0
         1: aload_3
         2: putfield      #127                // Field scala$collection$convert$impl$LongTableStepper$$iterate:Lscala/Function1;
         5: aload_0
         6: aload         4
         8: putfield      #129                // Field scala$collection$convert$impl$LongTableStepper$$extract:Lscala/Function1;
        11: aload_0
        12: iload_1
        13: aload_2
        14: iload         5
        16: iload         6
        18: invokespecial #203                // Method scala/collection/convert/impl/TableStepperBase."<init>":(I[Ljava/lang/Object;II)V
        21: return
      LineNumberTable:
        line 124: 0
        line 126: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/collection/convert/impl/LongTableStepper;
            0      22     1 _maxLength   I
            0      22     2 _table   [Ljava/lang/Object;
            0      22     3 iterate   Lscala/Function1;
            0      22     4 extract   Lscala/Function1;
            0      22     5   _i0   I
            0      22     6   _iN   I
    Signature: #194                         // (I[TI;Lscala/Function1<TI;TI;>;Lscala/Function1<TI;Ljava/lang/Object;>;II)V
    MethodParameters:
      Name                           Flags
      _maxLength                     final
      _table                         final
      iterate                        final
      extract                        final
      _i0                            final
      _iN                            final
}
InnerClasses:
  public static #16= #13 of #15;          // OfLong=class java/util/PrimitiveIterator$OfLong of class java/util/PrimitiveIterator
  public static #16= #18 of #20;          // OfLong=class java/util/Spliterator$OfLong of class java/util/Spliterator
Signature: #3                           // <I:Ljava/lang/Object;>Lscala/collection/convert/impl/TableStepperBase<Ljava/lang/Object;TI;Lscala/collection/LongStepper;Lscala/collection/convert/impl/LongTableStepper<TI;>;>;Lscala/collection/LongStepper;
SourceFile: "TableStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005A3QAC\u0006\u0003\u001fMA\u0001B\f\u0001\u0003\u0002\u0003\u0006Ia\f\u0005\ne\u0001\u0011\t\u0011)A\u0005gYB\u0001\u0002\u000f\u0001\u0003\u0002\u0003\u0006I!\u000f\u0005\ty\u0001\u0011\t\u0011)A\u0005{!Aa\b\u0001B\u0001B\u0003%q\u0006C\u0005@\u0001\t\u0005\t\u0015!\u00030\u0001\")!\t\u0001C\u0001\u0007\")!\n\u0001C\u0001\u0017\")A\n\u0001C\u0001\u001b\n\u0001Bj\u001c8h)\u0006\u0014G.Z*uKB\u0004XM\u001d\u0006\u0003\u00195\tA![7qY*\u0011abD\u0001\bG>tg/\u001a:u\u0015\t\u0001\u0012#\u0001\u0006d_2dWm\u0019;j_:T\u0011AE\u0001\u0006g\u000e\fG.Y\u000b\u0003)}\u00192\u0001A\u000b*!\u00191r#G\u000f*[5\t1\"\u0003\u0002\u0019\u0017\t\u0001B+\u00192mKN#X\r\u001d9fe\n\u000b7/\u001a\t\u00035mi\u0011!E\u0005\u00039E\u0011A\u0001T8oOB\u0011ad\b\u0007\u0001\t\u0015\u0001\u0003A1\u0001#\u0005\u0005I5\u0001A\t\u0003G\u0019\u0002\"A\u0007\u0013\n\u0005\u0015\n\"\u0001\u0002(vY2\u0004\"AG\u0014\n\u0005!\n\"AB!osJ+g\r\u0005\u0002+W5\tq\"\u0003\u0002-\u001f\tYAj\u001c8h\'R,\u0007\u000f]3s!\r1\u0002!H\u0001\u000b?6\f\u0007\u0010T3oORD\u0007C\u0001\u000e1\u0013\t\t\u0014CA\u0002J]R\faa\u0018;bE2,\u0007c\u0001\u000e5;%\u0011Q\'\u0005\u0002\u0006\u0003J\u0014\u0018-_\u0005\u0003o]\tQ\u0001^1cY\u0016\fq!\u001b;fe\u0006$X\r\u0005\u0003\u001buui\u0012BA\u001e\u0012\u0005%1UO\\2uS>t\u0017\'A\u0004fqR\u0014\u0018m\u0019;\u0011\tiQT$G\u0001\u0004?&\u0004\u0014aA0j\u001d&\u0011\u0011iF\u0001\u0003S:\u000ba\u0001P5oSRtDcB\u0017E\u000b\u001a;\u0005*\u0013\u0005\u0006]\u001d\u0001\ra\f\u0005\u0006e\u001d\u0001\ra\r\u0005\u0006q\u001d\u0001\r!\u000f\u0005\u0006y\u001d\u0001\r!\u0010\u0005\u0006}\u001d\u0001\ra\f\u0005\u0006\u007f\u001d\u0001\raL\u0001\t]\u0016DHo\u0015;faR\t\u0011$A\u0005tK6L7\r\\8oKR\u0011QF\u0014\u0005\u0006\u001f&\u0001\raL\u0001\u0005Q\u0006dg\r"
    )
  ScalaInlineInfo: length = 0x7C (unknown attribute)
   01 01 00 18 00 85 00 86 01 00 67 00 68 01 00 23
   00 32 01 00 23 00 24 01 00 5E 00 32 01 00 63 00
   32 01 00 31 00 32 01 00 6E 00 6F 01 00 6E 00 8F
   01 00 38 00 39 01 00 40 00 41 01 00 70 00 6F 01
   00 73 00 74 01 00 73 00 B9 01 00 1A 00 1B 01 00
   1A 00 2B 01 00 55 00 2B 01 00 5A 00 2B 01 00 2A
   00 2B 01 00 B1 00 B4 01 00 B1 00 47 01 00 46 00
   47 01 00 4D 00 47 01 00 51 00 47 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
