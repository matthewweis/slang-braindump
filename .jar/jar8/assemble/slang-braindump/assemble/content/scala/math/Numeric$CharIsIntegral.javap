Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/math/Numeric$CharIsIntegral.class
  Last modified May 29, 2022; size 5293 bytes
  SHA-256 checksum 35b9aeeed1ce49eddc34907537a775984d4eb093d815b86e475140ed74bacfd5
  Compiled from "Numeric.scala"
public interface scala.math.Numeric$CharIsIntegral extends scala.math.Integral<java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/math/Numeric$CharIsIntegral
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 30, attributes: 5
Constant pool:
    #1 = Utf8               scala/math/Numeric$CharIsIntegral
    #2 = Class              #1            // scala/math/Numeric$CharIsIntegral
    #3 = Utf8               Ljava/lang/Object;Lscala/math/Integral<Ljava/lang/Object;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Integral
    #7 = Class              #6            // scala/math/Integral
    #8 = Utf8               Numeric.scala
    #9 = Utf8               scala/math/Numeric
   #10 = Class              #9            // scala/math/Numeric
   #11 = Utf8               CharIsIntegral
   #12 = Utf8               plus$
   #13 = Utf8               (Lscala/math/Numeric$CharIsIntegral;CC)C
   #14 = Utf8               $this
   #15 = Utf8               x
   #16 = Utf8               y
   #17 = Utf8               plus
   #18 = Utf8               (CC)C
   #19 = NameAndType        #17:#18       // plus:(CC)C
   #20 = InterfaceMethodref #2.#19        // scala/math/Numeric$CharIsIntegral.plus:(CC)C
   #21 = Utf8               Lscala/math/Numeric$CharIsIntegral;
   #22 = Utf8               C
   #23 = Utf8               this
   #24 = Utf8               minus$
   #25 = Utf8               minus
   #26 = NameAndType        #25:#18       // minus:(CC)C
   #27 = InterfaceMethodref #2.#26        // scala/math/Numeric$CharIsIntegral.minus:(CC)C
   #28 = Utf8               times$
   #29 = Utf8               times
   #30 = NameAndType        #29:#18       // times:(CC)C
   #31 = InterfaceMethodref #2.#30        // scala/math/Numeric$CharIsIntegral.times:(CC)C
   #32 = Utf8               quot$
   #33 = Utf8               quot
   #34 = NameAndType        #33:#18       // quot:(CC)C
   #35 = InterfaceMethodref #2.#34        // scala/math/Numeric$CharIsIntegral.quot:(CC)C
   #36 = Utf8               rem$
   #37 = Utf8               rem
   #38 = NameAndType        #37:#18       // rem:(CC)C
   #39 = InterfaceMethodref #2.#38        // scala/math/Numeric$CharIsIntegral.rem:(CC)C
   #40 = Utf8               negate$
   #41 = Utf8               (Lscala/math/Numeric$CharIsIntegral;C)C
   #42 = Utf8               negate
   #43 = Utf8               (C)C
   #44 = NameAndType        #42:#43       // negate:(C)C
   #45 = InterfaceMethodref #2.#44        // scala/math/Numeric$CharIsIntegral.negate:(C)C
   #46 = Utf8               fromInt$
   #47 = Utf8               (Lscala/math/Numeric$CharIsIntegral;I)C
   #48 = Utf8               fromInt
   #49 = Utf8               (I)C
   #50 = NameAndType        #48:#49       // fromInt:(I)C
   #51 = InterfaceMethodref #2.#50        // scala/math/Numeric$CharIsIntegral.fromInt:(I)C
   #52 = Utf8               I
   #53 = Utf8               parseString$
   #54 = Utf8               (Lscala/math/Numeric$CharIsIntegral;Ljava/lang/String;)Lscala/Option;
   #55 = Utf8               str
   #56 = Utf8               parseString
   #57 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #58 = NameAndType        #56:#57       // parseString:(Ljava/lang/String;)Lscala/Option;
   #59 = InterfaceMethodref #2.#58        // scala/math/Numeric$CharIsIntegral.parseString:(Ljava/lang/String;)Lscala/Option;
   #60 = Utf8               Ljava/lang/String;
   #61 = Utf8               (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
   #62 = Utf8               java/lang/Throwable
   #63 = Class              #62           // java/lang/Throwable
   #64 = Utf8               scala/util/Try$
   #65 = Class              #64           // scala/util/Try$
   #66 = Utf8               MODULE$
   #67 = Utf8               Lscala/util/Try$;
   #68 = NameAndType        #66:#67       // MODULE$:Lscala/util/Try$;
   #69 = Fieldref           #65.#68       // scala/util/Try$.MODULE$:Lscala/util/Try$;
   #70 = Utf8               scala/util/Success
   #71 = Class              #70           // scala/util/Success
   #72 = Utf8               $anonfun$parseString$2
   #73 = Utf8               (Ljava/lang/String;)C
   #74 = NameAndType        #72:#73       // $anonfun$parseString$2:(Ljava/lang/String;)C
   #75 = InterfaceMethodref #2.#74        // scala/math/Numeric$CharIsIntegral.$anonfun$parseString$2:(Ljava/lang/String;)C
   #76 = Utf8               scala/runtime/BoxesRunTime
   #77 = Class              #76           // scala/runtime/BoxesRunTime
   #78 = Utf8               boxToCharacter
   #79 = Utf8               (C)Ljava/lang/Character;
   #80 = NameAndType        #78:#79       // boxToCharacter:(C)Ljava/lang/Character;
   #81 = Methodref          #77.#80       // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   #82 = Utf8               <init>
   #83 = Utf8               (Ljava/lang/Object;)V
   #84 = NameAndType        #82:#83       // "<init>":(Ljava/lang/Object;)V
   #85 = Methodref          #71.#84       // scala/util/Success."<init>":(Ljava/lang/Object;)V
   #86 = Utf8               scala/util/control/NonFatal$
   #87 = Class              #86           // scala/util/control/NonFatal$
   #88 = Utf8               Lscala/util/control/NonFatal$;
   #89 = NameAndType        #66:#88       // MODULE$:Lscala/util/control/NonFatal$;
   #90 = Fieldref           #87.#89       // scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
   #91 = Utf8               unapply
   #92 = Utf8               (Ljava/lang/Throwable;)Lscala/Option;
   #93 = NameAndType        #91:#92       // unapply:(Ljava/lang/Throwable;)Lscala/Option;
   #94 = Methodref          #87.#93       // scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
   #95 = Utf8               scala/Option
   #96 = Class              #95           // scala/Option
   #97 = Utf8               isEmpty
   #98 = Utf8               ()Z
   #99 = NameAndType        #97:#98       // isEmpty:()Z
  #100 = Methodref          #96.#99       // scala/Option.isEmpty:()Z
  #101 = Utf8               get
  #102 = Utf8               ()Ljava/lang/Object;
  #103 = NameAndType        #101:#102     // get:()Ljava/lang/Object;
  #104 = Methodref          #96.#103      // scala/Option.get:()Ljava/lang/Object;
  #105 = Utf8               scala/util/Failure
  #106 = Class              #105          // scala/util/Failure
  #107 = Utf8               (Ljava/lang/Throwable;)V
  #108 = NameAndType        #82:#107      // "<init>":(Ljava/lang/Throwable;)V
  #109 = Methodref          #106.#108     // scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
  #110 = Utf8               scala/util/Try
  #111 = Class              #110          // scala/util/Try
  #112 = Utf8               toOption
  #113 = Utf8               ()Lscala/Option;
  #114 = NameAndType        #112:#113     // toOption:()Lscala/Option;
  #115 = Methodref          #111.#114     // scala/util/Try.toOption:()Lscala/Option;
  #116 = Utf8               apply_e
  #117 = Utf8               Ljava/lang/Throwable;
  #118 = Utf8               java/lang/String
  #119 = Class              #118          // java/lang/String
  #120 = Utf8               toInt$
  #121 = Utf8               (Lscala/math/Numeric$CharIsIntegral;C)I
  #122 = Utf8               toInt
  #123 = Utf8               (C)I
  #124 = NameAndType        #122:#123     // toInt:(C)I
  #125 = InterfaceMethodref #2.#124       // scala/math/Numeric$CharIsIntegral.toInt:(C)I
  #126 = Utf8               toLong$
  #127 = Utf8               (Lscala/math/Numeric$CharIsIntegral;C)J
  #128 = Utf8               toLong
  #129 = Utf8               (C)J
  #130 = NameAndType        #128:#129     // toLong:(C)J
  #131 = InterfaceMethodref #2.#130       // scala/math/Numeric$CharIsIntegral.toLong:(C)J
  #132 = Utf8               toFloat$
  #133 = Utf8               (Lscala/math/Numeric$CharIsIntegral;C)F
  #134 = Utf8               toFloat
  #135 = Utf8               (C)F
  #136 = NameAndType        #134:#135     // toFloat:(C)F
  #137 = InterfaceMethodref #2.#136       // scala/math/Numeric$CharIsIntegral.toFloat:(C)F
  #138 = Utf8               toDouble$
  #139 = Utf8               (Lscala/math/Numeric$CharIsIntegral;C)D
  #140 = Utf8               toDouble
  #141 = Utf8               (C)D
  #142 = NameAndType        #140:#141     // toDouble:(C)D
  #143 = InterfaceMethodref #2.#142       // scala/math/Numeric$CharIsIntegral.toDouble:(C)D
  #144 = Utf8               signum$
  #145 = Utf8               signum
  #146 = NameAndType        #145:#123     // signum:(C)I
  #147 = InterfaceMethodref #2.#146       // scala/math/Numeric$CharIsIntegral.signum:(C)I
  #148 = Utf8               scala/math/package$
  #149 = Class              #148          // scala/math/package$
  #150 = Utf8               Lscala/math/package$;
  #151 = NameAndType        #66:#150      // MODULE$:Lscala/math/package$;
  #152 = Fieldref           #149.#151     // scala/math/package$.MODULE$:Lscala/math/package$;
  #153 = Utf8               java/lang/Integer
  #154 = Class              #153          // java/lang/Integer
  #155 = Utf8               (I)I
  #156 = NameAndType        #145:#155     // signum:(I)I
  #157 = Methodref          #154.#156     // java/lang/Integer.signum:(I)I
  #158 = Utf8               sign$
  #159 = Utf8               sign
  #160 = NameAndType        #159:#43      // sign:(C)C
  #161 = InterfaceMethodref #2.#160       // scala/math/Numeric$CharIsIntegral.sign:(C)C
  #162 = Utf8               str$2
  #163 = Utf8               parseInt
  #164 = Utf8               (Ljava/lang/String;)I
  #165 = NameAndType        #163:#164     // parseInt:(Ljava/lang/String;)I
  #166 = Methodref          #154.#165     // java/lang/Integer.parseInt:(Ljava/lang/String;)I
  #167 = Utf8               $init$
  #168 = Utf8               (Lscala/math/Numeric$CharIsIntegral;)V
  #169 = Utf8               Code
  #170 = Utf8               LineNumberTable
  #171 = Utf8               LocalVariableTable
  #172 = Utf8               MethodParameters
  #173 = Utf8               StackMapTable
  #174 = Utf8               Signature
  #175 = Utf8               InnerClasses
  #176 = Utf8               SourceFile
  #177 = Utf8               ScalaInlineInfo
  #178 = Utf8               Scala
{
  public static char plus$(scala.math.Numeric$CharIsIntegral, char, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;CC)C
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokespecial #20                 // InterfaceMethod plus:(CC)C
         6: ireturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       7     1     x   C
            0       7     2     y   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default char plus(char, char);
    descriptor: (CC)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_2
         2: iadd
         3: i2c
         4: ireturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       5     1     x   C
            0       5     2     y   C
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static char minus$(scala.math.Numeric$CharIsIntegral, char, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;CC)C
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokespecial #27                 // InterfaceMethod minus:(CC)C
         6: ireturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       7     1     x   C
            0       7     2     y   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default char minus(char, char);
    descriptor: (CC)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_2
         2: isub
         3: i2c
         4: ireturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       5     1     x   C
            0       5     2     y   C
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static char times$(scala.math.Numeric$CharIsIntegral, char, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;CC)C
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokespecial #31                 // InterfaceMethod times:(CC)C
         6: ireturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       7     1     x   C
            0       7     2     y   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default char times(char, char);
    descriptor: (CC)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_2
         2: imul
         3: i2c
         4: ireturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       5     1     x   C
            0       5     2     y   C
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static char quot$(scala.math.Numeric$CharIsIntegral, char, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;CC)C
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokespecial #35                 // InterfaceMethod quot:(CC)C
         6: ireturn
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       7     1     x   C
            0       7     2     y   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default char quot(char, char);
    descriptor: (CC)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_2
         2: idiv
         3: i2c
         4: ireturn
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       5     1     x   C
            0       5     2     y   C
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static char rem$(scala.math.Numeric$CharIsIntegral, char, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;CC)C
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokespecial #39                 // InterfaceMethod rem:(CC)C
         6: ireturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       7     1     x   C
            0       7     2     y   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default char rem(char, char);
    descriptor: (CC)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_2
         2: irem
         3: i2c
         4: ireturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       5     1     x   C
            0       5     2     y   C
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static char negate$(scala.math.Numeric$CharIsIntegral, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;C)C
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #45                 // InterfaceMethod negate:(C)C
         5: ireturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       6     1     x   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default char negate(char);
    descriptor: (C)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: ineg
         2: i2c
         3: ireturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       4     1     x   C
    MethodParameters:
      Name                           Flags
      x                              final

  public static char fromInt$(scala.math.Numeric$CharIsIntegral, int);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;I)C
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #51                 // InterfaceMethod fromInt:(I)C
         5: ireturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       6     1     x   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default char fromInt(int);
    descriptor: (I)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: i2c
         2: ireturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       3     1     x   I
    MethodParameters:
      Name                           Flags
      x                              final

  public static scala.Option parseString$(scala.math.Numeric$CharIsIntegral, java.lang.String);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #59                 // InterfaceMethod parseString:(Ljava/lang/String;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       6     1   str   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      str                            final

  public default scala.Option<java.lang.Object> parseString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=2
         0: getstatic     #69                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
         3: pop
         4: new           #71                 // class scala/util/Success
         7: dup
         8: aload_1
         9: invokestatic  #75                 // InterfaceMethod $anonfun$parseString$2:(Ljava/lang/String;)C
        12: invokestatic  #81                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
        15: invokespecial #85                 // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
        18: goto          69
        21: astore_3
        22: aload_3
        23: ifnull        66
        26: getstatic     #90                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
        29: aload_3
        30: invokevirtual #94                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
        33: astore        4
        35: aload         4
        37: invokevirtual #100                // Method scala/Option.isEmpty:()Z
        40: ifne          66
        43: aload         4
        45: invokevirtual #104                // Method scala/Option.get:()Ljava/lang/Object;
        48: checkcast     #63                 // class java/lang/Throwable
        51: astore        5
        53: new           #106                // class scala/util/Failure
        56: dup
        57: aload         5
        59: invokespecial #109                // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
        62: astore_2
        63: goto          68
        66: aload_3
        67: athrow
        68: aload_2
        69: aconst_null
        70: astore_2
        71: aconst_null
        72: astore_3
        73: aconst_null
        74: astore        4
        76: aconst_null
        77: astore        5
        79: invokevirtual #115                // Method scala/util/Try.toOption:()Lscala/Option;
        82: areturn
      Exception table:
         from    to  target type
             4    18    21   Class java/lang/Throwable
      StackMapTable: number_of_entries = 4
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/math/Numeric$CharIsIntegral, class java/lang/String, class scala/util/Failure, class java/lang/Throwable, class scala/Option, class java/lang/Throwable ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/math/Numeric$CharIsIntegral, class java/lang/String ]
          stack = [ class scala/util/Try ]
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Lscala/math/Numeric$CharIsIntegral;
            0      83     1   str   Ljava/lang/String;
           53      13     5 apply_e   Ljava/lang/Throwable;
    Signature: #61                          // (Ljava/lang/String;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      str                            final

  public static int toInt$(scala.math.Numeric$CharIsIntegral, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;C)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #125                // InterfaceMethod toInt:(C)I
         5: ireturn
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       6     1     x   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default int toInt(char);
    descriptor: (C)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: ireturn
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       2     1     x   C
    MethodParameters:
      Name                           Flags
      x                              final

  public static long toLong$(scala.math.Numeric$CharIsIntegral, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;C)J
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #131                // InterfaceMethod toLong:(C)J
         5: lreturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       6     1     x   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default long toLong(char);
    descriptor: (C)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: i2l
         2: lreturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       3     1     x   C
    MethodParameters:
      Name                           Flags
      x                              final

  public static float toFloat$(scala.math.Numeric$CharIsIntegral, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;C)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #137                // InterfaceMethod toFloat:(C)F
         5: freturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       6     1     x   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default float toFloat(char);
    descriptor: (C)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: i2f
         2: freturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       3     1     x   C
    MethodParameters:
      Name                           Flags
      x                              final

  public static double toDouble$(scala.math.Numeric$CharIsIntegral, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;C)D
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #143                // InterfaceMethod toDouble:(C)D
         5: dreturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       6     1     x   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default double toDouble(char);
    descriptor: (C)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: i2d
         2: dreturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       3     1     x   C
    MethodParameters:
      Name                           Flags
      x                              final

  public static int signum$(scala.math.Numeric$CharIsIntegral, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;C)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #147                // InterfaceMethod signum:(C)I
         5: ireturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       6     1     x   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default int signum(char);
    descriptor: (C)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #152                // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: iload_1
         5: invokestatic  #157                // Method java/lang/Integer.signum:(I)I
         8: ireturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/math/Numeric$CharIsIntegral;
            0       9     1     x   C
    MethodParameters:
      Name                           Flags
      x                              final

  public static char sign$(scala.math.Numeric$CharIsIntegral, char);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;C)C
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #161                // InterfaceMethod sign:(C)C
         5: ireturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Numeric$CharIsIntegral;
            0       6     1     x   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public default char sign(char);
    descriptor: (C)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #152                // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: iload_1
         5: invokestatic  #157                // Method java/lang/Integer.signum:(I)I
         8: i2c
         9: ireturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/Numeric$CharIsIntegral;
            0      10     1     x   C
    MethodParameters:
      Name                           Flags
      x                              final

  public static char $anonfun$parseString$2(java.lang.String);
    descriptor: (Ljava/lang/String;)C
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #166                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
         4: i2c
         5: ireturn
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 str$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      str$2                          final

  public static void $init$(scala.math.Numeric$CharIsIntegral);
    descriptor: (Lscala/math/Numeric$CharIsIntegral;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/math/Numeric$CharIsIntegral;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public static #11= #2 of #10;           // CharIsIntegral=class scala/math/Numeric$CharIsIntegral of class scala/math/Numeric
Signature: #3                           // Ljava/lang/Object;Lscala/math/Integral<Ljava/lang/Object;>;
SourceFile: "Numeric.scala"
  ScalaInlineInfo: length = 0x9A (unknown attribute)
   01 00 00 1E 00 48 00 49 01 00 A7 00 A8 01 00 30
   00 31 00 00 2E 00 2F 01 00 19 00 12 00 00 18 00
   0D 01 00 2A 00 2B 00 00 28 00 29 01 00 38 00 39
   00 00 35 00 36 01 00 11 00 12 00 00 0C 00 0D 01
   00 21 00 12 00 00 20 00 0D 01 00 25 00 12 00 00
   24 00 0D 01 00 9F 00 2B 00 00 9E 00 29 01 00 91
   00 7B 00 00 90 00 79 01 00 1D 00 12 00 00 1C 00
   0D 01 00 8C 00 8D 00 00 8A 00 8B 01 00 86 00 87
   00 00 84 00 85 01 00 7A 00 7B 00 00 78 00 79 01
   00 80 00 81 00 00 7E 00 7F 01
  Scala: length = 0x0 (unknown attribute)

