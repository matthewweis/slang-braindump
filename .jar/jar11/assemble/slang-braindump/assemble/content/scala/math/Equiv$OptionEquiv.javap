Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/math/Equiv$OptionEquiv.class
  Last modified May 29, 2022; size 1858 bytes
  SHA-256 checksum 4b19facc7929ecdbe90f2c32c38e3a31bad9a15bb551ec604ce371e2dc47dc3f
  Compiled from "Equiv.scala"
public final class scala.math.Equiv$OptionEquiv<T extends java.lang.Object> extends java.lang.Object implements scala.math.Equiv<scala.Option<T>>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/math/Equiv$OptionEquiv
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 6, attributes: 5
Constant pool:
   #1 = Utf8               scala/math/Equiv$OptionEquiv
   #2 = Class              #1             // scala/math/Equiv$OptionEquiv
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Option<TT;>;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               scala/math/Equiv
   #7 = Class              #6             // scala/math/Equiv
   #8 = Utf8               Equiv.scala
   #9 = Utf8               OptionEquiv
  #10 = Utf8               eqv
  #11 = Utf8               Lscala/math/Equiv;
  #12 = Utf8               Lscala/math/Equiv<TT;>;
  #13 = Utf8               ()Lscala/math/Equiv;
  #14 = Utf8               ()Lscala/math/Equiv<TT;>;
  #15 = NameAndType        #10:#11        // eqv:Lscala/math/Equiv;
  #16 = Fieldref           #2.#15         // scala/math/Equiv$OptionEquiv.eqv:Lscala/math/Equiv;
  #17 = Utf8               this
  #18 = Utf8               Lscala/math/Equiv$OptionEquiv;
  #19 = Utf8               equiv
  #20 = Utf8               (Lscala/Option;Lscala/Option;)Z
  #21 = Utf8               (Lscala/Option<TT;>;Lscala/Option<TT;>;)Z
  #22 = Utf8               x
  #23 = Utf8               y
  #24 = Utf8               scala/None$
  #25 = Class              #24            // scala/None$
  #26 = Utf8               MODULE$
  #27 = Utf8               Lscala/None$;
  #28 = NameAndType        #26:#27        // MODULE$:Lscala/None$;
  #29 = Fieldref           #25.#28        // scala/None$.MODULE$:Lscala/None$;
  #30 = Utf8               equals
  #31 = Utf8               (Ljava/lang/Object;)Z
  #32 = NameAndType        #30:#31        // equals:(Ljava/lang/Object;)Z
  #33 = Methodref          #5.#32         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #34 = Utf8               scala/Some
  #35 = Class              #34            // scala/Some
  #36 = Utf8               value
  #37 = Utf8               ()Ljava/lang/Object;
  #38 = NameAndType        #36:#37        // value:()Ljava/lang/Object;
  #39 = Methodref          #35.#38        // scala/Some.value:()Ljava/lang/Object;
  #40 = NameAndType        #10:#13        // eqv:()Lscala/math/Equiv;
  #41 = Methodref          #2.#40         // scala/math/Equiv$OptionEquiv.eqv:()Lscala/math/Equiv;
  #42 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #43 = NameAndType        #19:#42        // equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #44 = InterfaceMethodref #7.#43         // scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #45 = Utf8               Ljava/lang/Object;
  #46 = Utf8               Lscala/Option;
  #47 = Utf8               obj
  #48 = Utf8               hashCode
  #49 = Utf8               ()I
  #50 = NameAndType        #48:#49        // hashCode:()I
  #51 = Methodref          #5.#50         // java/lang/Object.hashCode:()I
  #52 = Utf8               scala/Option
  #53 = Class              #52            // scala/Option
  #54 = NameAndType        #19:#20        // equiv:(Lscala/Option;Lscala/Option;)Z
  #55 = Methodref          #2.#54         // scala/math/Equiv$OptionEquiv.equiv:(Lscala/Option;Lscala/Option;)Z
  #56 = Utf8               <init>
  #57 = Utf8               (Lscala/math/Equiv;)V
  #58 = Utf8               (Lscala/math/Equiv<TT;>;)V
  #59 = Utf8               ()V
  #60 = NameAndType        #56:#59        // "<init>":()V
  #61 = Methodref          #5.#60         // java/lang/Object."<init>":()V
  #62 = Utf8               Signature
  #63 = Utf8               Code
  #64 = Utf8               LineNumberTable
  #65 = Utf8               LocalVariableTable
  #66 = Utf8               StackMapTable
  #67 = Utf8               MethodParameters
  #68 = Utf8               InnerClasses
  #69 = Utf8               SourceFile
  #70 = Utf8               ScalaInlineInfo
  #71 = Utf8               Scala
{
  private final scala.math.Equiv<T> eqv;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // Lscala/math/Equiv<TT;>;

  private scala.math.Equiv<T> eqv();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #16                 // Field eqv:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 250: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$OptionEquiv;
    Signature: #14                          // ()Lscala/math/Equiv<TT;>;

  public boolean equiv(scala.Option<T>, scala.Option<T>);
    descriptor: (Lscala/Option;Lscala/Option;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=3
         0: getstatic     #29                 // Field scala/None$.MODULE$:Lscala/None$;
         3: aload_1
         4: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
         7: ifeq          25
        10: getstatic     #29                 // Field scala/None$.MODULE$:Lscala/None$;
        13: aload_2
        14: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        17: ifeq          25
        20: iconst_1
        21: istore_3
        22: goto          76
        25: aload_1
        26: instanceof    #35                 // class scala/Some
        29: ifeq          74
        32: aload_1
        33: checkcast     #35                 // class scala/Some
        36: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        39: astore        4
        41: aload_2
        42: instanceof    #35                 // class scala/Some
        45: ifeq          74
        48: aload_2
        49: checkcast     #35                 // class scala/Some
        52: invokevirtual #39                 // Method scala/Some.value:()Ljava/lang/Object;
        55: astore        5
        57: aload_0
        58: invokespecial #41                 // Method eqv:()Lscala/math/Equiv;
        61: aload         4
        63: aload         5
        65: invokeinterface #44,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        70: istore_3
        71: goto          76
        74: iconst_0
        75: istore_3
        76: iload_3
        77: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 25 /* same */
        frame_type = 48 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 252: 0
        line 253: 25
        line 254: 74
        line 251: 76
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           57      17     5     y   Ljava/lang/Object;
           41      33     4     x   Ljava/lang/Object;
            0      78     0  this   Lscala/math/Equiv$OptionEquiv;
            0      78     1     x   Lscala/Option;
            0      78     2     y   Lscala/Option;
    Signature: #21                          // (Lscala/Option<TT;>;Lscala/Option<TT;>;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: instanceof    #5                  // class java/lang/Object
         4: ifeq          17
         7: aload_0
         8: aload_1
         9: if_acmpne     17
        12: iconst_1
        13: istore_2
        14: goto          71
        17: aload_1
        18: instanceof    #2                  // class scala/math/Equiv$OptionEquiv
        21: ifeq          69
        24: aload_1
        25: checkcast     #2                  // class scala/math/Equiv$OptionEquiv
        28: astore_3
        29: aload_0
        30: invokespecial #41                 // Method eqv:()Lscala/math/Equiv;
        33: aload_3
        34: invokespecial #41                 // Method eqv:()Lscala/math/Equiv;
        37: astore        4
        39: dup
        40: ifnonnull     52
        43: pop
        44: aload         4
        46: ifnull        60
        49: goto          64
        52: aload         4
        54: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        57: ifeq          64
        60: iconst_1
        61: goto          65
        64: iconst_0
        65: istore_2
        66: goto          71
        69: iconst_0
        70: istore_2
        71: iload_2
        72: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class scala/math/Equiv$OptionEquiv, class java/lang/Object, top, class scala/math/Equiv$OptionEquiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 258: 0
        line 259: 17
        line 260: 69
        line 257: 71
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      73     0  this   Lscala/math/Equiv$OptionEquiv;
            0      73     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #41                 // Method eqv:()Lscala/math/Equiv;
         4: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
         7: bipush        43
         9: imul
        10: ireturn
      LineNumberTable:
        line 262: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/math/Equiv$OptionEquiv;

  public boolean equiv(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #53                 // class scala/Option
         5: aload_2
         6: checkcast     #53                 // class scala/Option
         9: invokevirtual #55                 // Method equiv:(Lscala/Option;Lscala/Option;)Z
        12: ireturn
      LineNumberTable:
        line 250: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Equiv$OptionEquiv;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Equiv$OptionEquiv(scala.math.Equiv<T>);
    descriptor: (Lscala/math/Equiv;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #16                 // Field eqv:Lscala/math/Equiv;
         5: aload_0
         6: invokespecial #61                 // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 250: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/Equiv$OptionEquiv;
            0      10     1   eqv   Lscala/math/Equiv;
    Signature: #58                          // (Lscala/math/Equiv<TT;>;)V
    MethodParameters:
      Name                           Flags
      eqv                            final
}
InnerClasses:
  private static final #9= #2 of #7;      // OptionEquiv=class scala/math/Equiv$OptionEquiv of class scala/math/Equiv
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Option<TT;>;>;
SourceFile: "Equiv.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 38 00 39 01 00 1E 00 1F 01 00 13
   00 2A 01 00 13 00 14 01 00 0A 00 0D 01 00 30 00
   31 01
  Scala: length = 0x0 (unknown attribute)

