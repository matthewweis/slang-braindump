Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/Os$Proc$Result$Normal.class
  Last modified May 29, 2022; size 6773 bytes
  SHA-256 checksum 9f33fb556a9281cc50e1bbdf4f0e3b3fcdc9021d8395a45ff4a5fafa63d4930a
  Compiled from "Os.scala"
public final class org.sireum.Os$Proc$Result$Normal implements org.sireum.Os$Proc$Result,org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Os$Proc$Result$Normal
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 6, methods: 25, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/Os$Proc$Result$Normal
    #2 = Class              #1            // org/sireum/Os$Proc$Result$Normal
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/Os$Proc$Result
    #6 = Class              #5            // org/sireum/Os$Proc$Result
    #7 = Utf8               org/sireum/DatatypeSig
    #8 = Class              #7            // org/sireum/DatatypeSig
    #9 = Utf8               Os.scala
   #10 = Utf8               org/sireum/Os$Proc$
   #11 = Class              #10           // org/sireum/Os$Proc$
   #12 = Utf8               org/sireum/Os
   #13 = Class              #12           // org/sireum/Os
   #14 = Utf8               Proc$
   #15 = Utf8               Result
   #16 = Utf8               org/sireum/Os$Proc$Result$
   #17 = Class              #16           // org/sireum/Os$Proc$Result$
   #18 = Utf8               Result$
   #19 = Utf8               Normal
   #20 = Utf8               org/sireum/OsProto$Proc$
   #21 = Class              #20           // org/sireum/OsProto$Proc$
   #22 = Utf8               org/sireum/OsProto
   #23 = Class              #22           // org/sireum/OsProto
   #24 = Utf8               org/sireum/OsProto$Proc$Result
   #25 = Class              #24           // org/sireum/OsProto$Proc$Result
   #26 = Utf8               hashCode
   #27 = Utf8               I
   #28 = Utf8               $content
   #29 = Utf8               Lscala/collection/immutable/Seq;
   #30 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #31 = Utf8               _exitCode
   #32 = Utf8               Lorg/sireum/Z;
   #33 = Utf8               _out
   #34 = Utf8               Ljava/lang/String;
   #35 = Utf8               _err
   #36 = Utf8               bitmap$0
   #37 = Utf8               B
   #38 = Utf8               hash
   #39 = Utf8               ()Lorg/sireum/Z;
   #40 = Utf8               hash$
   #41 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #42 = NameAndType        #40:#41       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #43 = InterfaceMethodref #8.#42        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #44 = Utf8               this
   #45 = Utf8               Lorg/sireum/Os$Proc$Result$Normal;
   #46 = Utf8               ok
   #47 = Utf8               ()Z
   #48 = Utf8               ok$
   #49 = Utf8               (Lorg/sireum/OsProto$Proc$Result;)Z
   #50 = NameAndType        #48:#49       // ok$:(Lorg/sireum/OsProto$Proc$Result;)Z
   #51 = InterfaceMethodref #25.#50       // org/sireum/OsProto$Proc$Result.ok$:(Lorg/sireum/OsProto$Proc$Result;)Z
   #52 = Utf8               $cannotMixImmutableAndMutable
   #53 = Utf8               ()Lscala/runtime/Nothing$;
   #54 = Utf8               org/sireum/Immutable
   #55 = Class              #54           // org/sireum/Immutable
   #56 = Utf8               $cannotMixImmutableAndMutable$
   #57 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #58 = NameAndType        #56:#57       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #59 = InterfaceMethodref #55.#58       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #60 = Utf8               $hasEquals
   #61 = Utf8               $hasEquals$
   #62 = Utf8               (Lorg/sireum/Immutable;)Z
   #63 = NameAndType        #61:#62       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #64 = InterfaceMethodref #55.#63       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #65 = Utf8               $hasString
   #66 = Utf8               $hasString$
   #67 = NameAndType        #66:#62       // $hasString$:(Lorg/sireum/Immutable;)Z
   #68 = InterfaceMethodref #55.#67       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #69 = Utf8               $clone
   #70 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #71 = Utf8               org/sireum/$internal/ImmutableMarker
   #72 = Class              #71           // org/sireum/$internal/ImmutableMarker
   #73 = Utf8               $clone$
   #74 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #75 = NameAndType        #73:#74       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #76 = InterfaceMethodref #72.#75       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #77 = Utf8               exitCode
   #78 = NameAndType        #31:#32       // _exitCode:Lorg/sireum/Z;
   #79 = Fieldref           #2.#78        // org/sireum/Os$Proc$Result$Normal._exitCode:Lorg/sireum/Z;
   #80 = Utf8               getExitCode
   #81 = Utf8               out
   #82 = Utf8               ()Ljava/lang/String;
   #83 = NameAndType        #33:#34       // _out:Ljava/lang/String;
   #84 = Fieldref           #2.#83        // org/sireum/Os$Proc$Result$Normal._out:Ljava/lang/String;
   #85 = Utf8               getOut
   #86 = Utf8               err
   #87 = NameAndType        #35:#34       // _err:Ljava/lang/String;
   #88 = Fieldref           #2.#87        // org/sireum/Os$Proc$Result$Normal._err:Ljava/lang/String;
   #89 = Utf8               getErr
   #90 = Utf8               toString
   #91 = NameAndType        #65:#47       // $hasString:()Z
   #92 = Methodref          #2.#91        // org/sireum/Os$Proc$Result$Normal.$hasString:()Z
   #93 = Utf8               string$
   #94 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #95 = NameAndType        #93:#94       // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #96 = InterfaceMethodref #8.#95        // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #97 = Utf8               java/lang/StringBuilder
   #98 = Class              #97           // java/lang/StringBuilder
   #99 = Utf8               <init>
  #100 = Utf8               ()V
  #101 = NameAndType        #99:#100      // "<init>":()V
  #102 = Methodref          #98.#101      // java/lang/StringBuilder."<init>":()V
  #103 = String             #19           // Normal
  #104 = Utf8               append
  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #106 = NameAndType        #104:#105     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #107 = Methodref          #98.#106      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #108 = Utf8               (C)Ljava/lang/StringBuilder;
  #109 = NameAndType        #104:#108     // append:(C)Ljava/lang/StringBuilder;
  #110 = Methodref          #98.#109      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #111 = Utf8               org/sireum/String$
  #112 = Class              #111          // org/sireum/String$
  #113 = Utf8               MODULE$
  #114 = Utf8               Lorg/sireum/String$;
  #115 = NameAndType        #113:#114     // MODULE$:Lorg/sireum/String$;
  #116 = Fieldref           #112.#115     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #117 = NameAndType        #77:#39       // exitCode:()Lorg/sireum/Z;
  #118 = Methodref          #2.#117       // org/sireum/Os$Proc$Result$Normal.exitCode:()Lorg/sireum/Z;
  #119 = Utf8               escape
  #120 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #121 = NameAndType        #119:#120     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #122 = Methodref          #112.#121     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #123 = Utf8               ,
  #124 = String             #123          // ,
  #125 = Utf8               org/sireum/String
  #126 = Class              #125          // org/sireum/String
  #127 = NameAndType        #81:#82       // out:()Ljava/lang/String;
  #128 = Methodref          #2.#127       // org/sireum/Os$Proc$Result$Normal.out:()Ljava/lang/String;
  #129 = Utf8               (Ljava/lang/String;)V
  #130 = NameAndType        #99:#129      // "<init>":(Ljava/lang/String;)V
  #131 = Methodref          #126.#130     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #132 = NameAndType        #86:#82       // err:()Ljava/lang/String;
  #133 = Methodref          #2.#132       // org/sireum/Os$Proc$Result$Normal.err:()Ljava/lang/String;
  #134 = NameAndType        #90:#82       // toString:()Ljava/lang/String;
  #135 = Methodref          #98.#134      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #136 = Utf8               sb
  #137 = Utf8               Ljava/lang/StringBuilder;
  #138 = Utf8               java/lang/String
  #139 = Class              #138          // java/lang/String
  #140 = Utf8               string
  #141 = Methodref          #2.#134       // org/sireum/Os$Proc$Result$Normal.toString:()Ljava/lang/String;
  #142 = Utf8               apply
  #143 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #144 = NameAndType        #142:#143     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #145 = Methodref          #112.#144     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #146 = Utf8               hashCode$lzycompute
  #147 = Utf8               ()I
  #148 = NameAndType        #36:#37       // bitmap$0:B
  #149 = Fieldref           #2.#148       // org/sireum/Os$Proc$Result$Normal.bitmap$0:B
  #150 = NameAndType        #60:#47       // $hasEquals:()Z
  #151 = Methodref          #2.#150       // org/sireum/Os$Proc$Result$Normal.$hasEquals:()Z
  #152 = NameAndType        #26:#147      // hashCode:()I
  #153 = Methodref          #4.#152       // java/lang/Object.hashCode:()I
  #154 = Utf8               scala/package$
  #155 = Class              #154          // scala/package$
  #156 = Utf8               Lscala/package$;
  #157 = NameAndType        #113:#156     // MODULE$:Lscala/package$;
  #158 = Fieldref           #155.#157     // scala/package$.MODULE$:Lscala/package$;
  #159 = Utf8               Seq
  #160 = Utf8               ()Lscala/collection/immutable/Seq$;
  #161 = NameAndType        #159:#160     // Seq:()Lscala/collection/immutable/Seq$;
  #162 = Methodref          #155.#161     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #163 = Utf8               scala/runtime/ScalaRunTime$
  #164 = Class              #163          // scala/runtime/ScalaRunTime$
  #165 = Utf8               Lscala/runtime/ScalaRunTime$;
  #166 = NameAndType        #113:#165     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #167 = Fieldref           #164.#166     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #168 = Utf8               getClass
  #169 = Utf8               ()Ljava/lang/Class;
  #170 = NameAndType        #168:#169     // getClass:()Ljava/lang/Class;
  #171 = Methodref          #2.#170       // org/sireum/Os$Proc$Result$Normal.getClass:()Ljava/lang/Class;
  #172 = Utf8               java/lang/Class
  #173 = Class              #172          // java/lang/Class
  #174 = Utf8               getName
  #175 = NameAndType        #174:#82      // getName:()Ljava/lang/String;
  #176 = Methodref          #173.#175     // java/lang/Class.getName:()Ljava/lang/String;
  #177 = Utf8               genericWrapArray
  #178 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #179 = NameAndType        #177:#178     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #180 = Methodref          #164.#179     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #181 = Utf8               scala/collection/immutable/Seq$
  #182 = Class              #181          // scala/collection/immutable/Seq$
  #183 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #184 = NameAndType        #142:#183     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #185 = Methodref          #182.#184     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #186 = Utf8               scala/collection/Seq
  #187 = Class              #186          // scala/collection/Seq
  #188 = InterfaceMethodref #187.#152     // scala/collection/Seq.hashCode:()I
  #189 = NameAndType        #26:#27       // hashCode:I
  #190 = Fieldref           #2.#189       // org/sireum/Os$Proc$Result$Normal.hashCode:I
  #191 = Utf8               java/lang/Throwable
  #192 = Class              #191          // java/lang/Throwable
  #193 = NameAndType        #146:#147     // hashCode$lzycompute:()I
  #194 = Methodref          #2.#193       // org/sireum/Os$Proc$Result$Normal.hashCode$lzycompute:()I
  #195 = Utf8               equals
  #196 = Utf8               (Ljava/lang/Object;)Z
  #197 = Utf8               o
  #198 = NameAndType        #195:#196     // equals:(Ljava/lang/Object;)Z
  #199 = Methodref          #4.#198       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #200 = Methodref          #2.#152       // org/sireum/Os$Proc$Result$Normal.hashCode:()I
  #201 = Utf8               Ljava/lang/Object;
  #202 = Utf8               org/sireum/Z
  #203 = Class              #202          // org/sireum/Z
  #204 = Utf8               (Lorg/sireum/Z;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/Os$Proc$Result$Normal;
  #205 = Utf8               (Lorg/sireum/Z;Ljava/lang/String;Ljava/lang/String;)V
  #206 = NameAndType        #99:#205      // "<init>":(Lorg/sireum/Z;Ljava/lang/String;Ljava/lang/String;)V
  #207 = Methodref          #2.#206       // org/sireum/Os$Proc$Result$Normal."<init>":(Lorg/sireum/Z;Ljava/lang/String;Ljava/lang/String;)V
  #208 = Utf8               apply$default$1
  #209 = Utf8               apply$default$2
  #210 = Utf8               apply$default$3
  #211 = Utf8               $content$lzycompute
  #212 = Utf8               ()Lscala/collection/immutable/Seq;
  #213 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #214 = Utf8               scala/Tuple2
  #215 = Class              #214          // scala/Tuple2
  #216 = Utf8               type
  #217 = String             #216          // type
  #218 = Utf8               List
  #219 = Utf8               ()Lscala/collection/immutable/List$;
  #220 = NameAndType        #218:#219     // List:()Lscala/collection/immutable/List$;
  #221 = Methodref          #155.#220     // scala/package$.List:()Lscala/collection/immutable/List$;
  #222 = Utf8               org
  #223 = String             #222          // org
  #224 = Utf8               sireum
  #225 = String             #224          // sireum
  #226 = Utf8               [Ljava/lang/Object;
  #227 = Class              #226          // "[Ljava/lang/Object;"
  #228 = Utf8               wrapRefArray
  #229 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #230 = NameAndType        #228:#229     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #231 = Methodref          #164.#230     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #232 = Utf8               scala/collection/immutable/List$
  #233 = Class              #232          // scala/collection/immutable/List$
  #234 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #235 = NameAndType        #142:#234     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #236 = Methodref          #233.#235     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #237 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #238 = NameAndType        #99:#237      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #239 = Methodref          #215.#238     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #240 = String             #77           // exitCode
  #241 = String             #81           // out
  #242 = String             #86           // err
  #243 = Utf8               scala/collection/immutable/Seq
  #244 = Class              #243          // scala/collection/immutable/Seq
  #245 = NameAndType        #28:#29       // $content:Lscala/collection/immutable/Seq;
  #246 = Fieldref           #2.#245       // org/sireum/Os$Proc$Result$Normal.$content:Lscala/collection/immutable/Seq;
  #247 = NameAndType        #211:#212     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #248 = Methodref          #2.#247       // org/sireum/Os$Proc$Result$Normal.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #249 = Utf8               ()Ljava/lang/Object;
  #250 = NameAndType        #69:#70       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #251 = Methodref          #2.#250       // org/sireum/Os$Proc$Result$Normal.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #252 = Utf8               __exitCode
  #253 = Utf8               __out
  #254 = Utf8               __err
  #255 = Methodref          #4.#101       // java/lang/Object."<init>":()V
  #256 = Utf8               $init$
  #257 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #258 = NameAndType        #256:#257     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #259 = InterfaceMethodref #72.#258      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #260 = Utf8               (Lorg/sireum/Immutable;)V
  #261 = NameAndType        #256:#260     // $init$:(Lorg/sireum/Immutable;)V
  #262 = InterfaceMethodref #55.#261      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #263 = Utf8               (Lorg/sireum/OsProto$Proc$Result;)V
  #264 = NameAndType        #256:#263     // $init$:(Lorg/sireum/OsProto$Proc$Result;)V
  #265 = InterfaceMethodref #25.#264      // org/sireum/OsProto$Proc$Result.$init$:(Lorg/sireum/OsProto$Proc$Result;)V
  #266 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #267 = NameAndType        #256:#266     // $init$:(Lorg/sireum/DatatypeSig;)V
  #268 = InterfaceMethodref #8.#267       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #269 = Utf8               Signature
  #270 = Utf8               Code
  #271 = Utf8               LineNumberTable
  #272 = Utf8               LocalVariableTable
  #273 = Utf8               StackMapTable
  #274 = Utf8               MethodParameters
  #275 = Utf8               InnerClasses
  #276 = Utf8               SourceFile
  #277 = Utf8               ScalaInlineInfo
  #278 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #30                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.Z _exitCode;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _out;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _err;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #43                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public boolean ok();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #51                 // InterfaceMethod org/sireum/OsProto$Proc$Result.ok$:(Lorg/sireum/OsProto$Proc$Result;)Z
         4: ireturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #59                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #76                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public org.sireum.Z exitCode();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #79                 // Field _exitCode:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public org.sireum.Z getExitCode();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #79                 // Field _exitCode:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public java.lang.String out();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field _out:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public java.lang.String getOut();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field _out:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public java.lang.String err();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #88                 // Field _err:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public java.lang.String getErr();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #88                 // Field _err:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #92                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #96                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          120
        14: new           #98                 // class java/lang/StringBuilder
        17: dup
        18: invokespecial #102                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #103                // String Normal
        25: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #110                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #116                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #118                // Method exitCode:()Lorg/sireum/Z;
        44: invokevirtual #122                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #124                // String ,
        54: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #116                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: new           #126                // class org/sireum/String
        65: dup
        66: aload_0
        67: invokevirtual #128                // Method out:()Ljava/lang/String;
        70: invokespecial #131                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        73: invokevirtual #122                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        76: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: ldc           #124                // String ,
        83: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: getstatic     #116                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        91: new           #126                // class org/sireum/String
        94: dup
        95: aload_0
        96: invokevirtual #133                // Method err:()Ljava/lang/String;
        99: invokespecial #131                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       102: invokevirtual #122                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       105: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       108: pop
       109: aload_1
       110: bipush        41
       112: invokevirtual #110                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       115: pop
       116: aload_1
       117: invokevirtual #135                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       120: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 105
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      98     1    sb   Ljava/lang/StringBuilder;
            0     121     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #92                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #96                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #116                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #141                // Method toString:()Ljava/lang/String;
        21: invokevirtual #145                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #149                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     116
        15: aload_0
        16: aload_0
        17: invokevirtual #151                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #153                // Method java/lang/Object.hashCode:()I
        27: goto          102
        30: getstatic     #158                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #162                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #167                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_4
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #171                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #176                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #118                // Method exitCode:()Lorg/sireum/Z;
        59: aastore
        60: dup
        61: iconst_2
        62: new           #126                // class org/sireum/String
        65: dup
        66: aload_0
        67: invokevirtual #128                // Method out:()Ljava/lang/String;
        70: invokespecial #131                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        73: aastore
        74: dup
        75: iconst_3
        76: new           #126                // class org/sireum/String
        79: dup
        80: aload_0
        81: invokevirtual #133                // Method err:()Ljava/lang/String;
        84: invokespecial #131                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        87: aastore
        88: invokevirtual #180                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        91: invokevirtual #185                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        94: checkcast     #187                // class scala/collection/Seq
        97: invokeinterface #188,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
       102: putfield      #190                // Field hashCode:I
       105: aload_0
       106: aload_0
       107: getfield      #149                // Field bitmap$0:B
       110: iconst_1
       111: ior
       112: i2b
       113: putfield      #149                // Field bitmap$0:B
       116: aload_1
       117: monitorexit
       118: goto          124
       121: aload_1
       122: monitorexit
       123: athrow
       124: aload_0
       125: getfield      #190                // Field hashCode:I
       128: ireturn
      Exception table:
         from    to  target type
             4   116   121   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/Os$Proc$Result$Normal, class org/sireum/Os$Proc$Result$Normal ]
          stack = [ class org/sireum/Os$Proc$Result$Normal ]
        frame_type = 255 /* full_frame */
          offset_delta = 71
          locals = [ class org/sireum/Os$Proc$Result$Normal, class org/sireum/Os$Proc$Result$Normal ]
          stack = [ class org/sireum/Os$Proc$Result$Normal, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     129     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #149                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #194                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #190                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=2
         0: aload_0
         1: invokevirtual #151                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #199                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          169
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          169
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/Os$Proc$Result$Normal
        30: ifeq          160
        33: aload_3
        34: checkcast     #2                  // class org/sireum/Os$Proc$Result$Normal
        37: astore        4
        39: aload_0
        40: invokevirtual #200                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #200                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          156
        55: aload_0
        56: invokevirtual #118                // Method exitCode:()Lorg/sireum/Z;
        59: aload         4
        61: invokevirtual #118                // Method exitCode:()Lorg/sireum/Z;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          155
        79: aload         5
        81: invokevirtual #199                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          155
        87: aload_0
        88: invokevirtual #128                // Method out:()Ljava/lang/String;
        91: aload         4
        93: invokevirtual #128                // Method out:()Ljava/lang/String;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          155
       111: aload         6
       113: invokevirtual #199                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          155
       119: aload_0
       120: invokevirtual #133                // Method err:()Ljava/lang/String;
       123: aload         4
       125: invokevirtual #133                // Method err:()Ljava/lang/String;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          155
       143: aload         7
       145: invokevirtual #199                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          155
       151: iconst_1
       152: goto          156
       155: iconst_0
       156: istore_2
       157: goto          168
       160: goto          163
       163: iconst_0
       164: istore_2
       165: goto          168
       168: iload_2
       169: ireturn
      StackMapTable: number_of_entries = 15
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/Os$Proc$Result$Normal ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$Proc$Result$Normal, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc$Result$Normal, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$Proc$Result$Normal, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc$Result$Normal, class org/sireum/Z, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$Proc$Result$Normal, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc$Result$Normal, class org/sireum/Z, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Os$Proc$Result$Normal, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc$Result$Normal ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/Os$Proc$Result$Normal, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Os$Proc$Result$Normal, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     170     0  this   Lorg/sireum/Os$Proc$Result$Normal;
            0     170     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.Os$Proc$Result$Normal apply(org.sireum.Z, java.lang.String, java.lang.String);
    descriptor: (Lorg/sireum/Z;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/Os$Proc$Result$Normal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #2                  // class org/sireum/Os$Proc$Result$Normal
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokespecial #207                // Method "<init>":(Lorg/sireum/Z;Ljava/lang/String;Ljava/lang/String;)V
        10: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/Os$Proc$Result$Normal;
            0      11     1 exitCode   Lorg/sireum/Z;
            0      11     2   out   Ljava/lang/String;
            0      11     3   err   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      exitCode                       final
      out                            final
      err                            final

  public org.sireum.Z apply$default$1();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #118                // Method exitCode:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public java.lang.String apply$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #128                // Method out:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public java.lang.String apply$default$3();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #133                // Method err:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #149                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     166
        15: aload_0
        16: getstatic     #158                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #162                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #167                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_4
        26: anewarray     #215                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #215                // class scala/Tuple2
        34: dup
        35: ldc           #217                // String type
        37: getstatic     #158                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #221                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #167                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #139                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #223                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #225                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #103                // String Normal
        64: aastore
        65: checkcast     #227                // class "[Ljava/lang/Object;"
        68: invokevirtual #231                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #236                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #215                // class scala/Tuple2
        83: dup
        84: ldc           #240                // String exitCode
        86: aload_0
        87: invokevirtual #118                // Method exitCode:()Lorg/sireum/Z;
        90: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: aastore
        94: dup
        95: iconst_2
        96: new           #215                // class scala/Tuple2
        99: dup
       100: ldc           #241                // String out
       102: new           #126                // class org/sireum/String
       105: dup
       106: aload_0
       107: invokevirtual #128                // Method out:()Ljava/lang/String;
       110: invokespecial #131                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       113: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       116: aastore
       117: dup
       118: iconst_3
       119: new           #215                // class scala/Tuple2
       122: dup
       123: ldc           #242                // String err
       125: new           #126                // class org/sireum/String
       128: dup
       129: aload_0
       130: invokevirtual #133                // Method err:()Ljava/lang/String;
       133: invokespecial #131                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       136: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       139: aastore
       140: checkcast     #227                // class "[Ljava/lang/Object;"
       143: invokevirtual #231                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       146: invokevirtual #185                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       149: checkcast     #244                // class scala/collection/immutable/Seq
       152: putfield      #246                // Field $content:Lscala/collection/immutable/Seq;
       155: aload_0
       156: aload_0
       157: getfield      #149                // Field bitmap$0:B
       160: iconst_2
       161: ior
       162: i2b
       163: putfield      #149                // Field bitmap$0:B
       166: aload_1
       167: monitorexit
       168: goto          174
       171: aload_1
       172: monitorexit
       173: athrow
       174: aload_0
       175: getfield      #246                // Field $content:Lscala/collection/immutable/Seq;
       178: areturn
      Exception table:
         from    to  target type
             4   166   171   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 166
          locals = [ class org/sireum/Os$Proc$Result$Normal ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     179     0  this   Lorg/sireum/Os$Proc$Result$Normal;
    Signature: #213                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #149                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #248                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #246                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Os$Proc$Result$Normal;
    Signature: #213                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #251                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc$Result$Normal;

  public org.sireum.Os$Proc$Result$Normal(org.sireum.Z, java.lang.String, java.lang.String);
    descriptor: (Lorg/sireum/Z;Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: invokespecial #255                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #259                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #262                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #265                // InterfaceMethod org/sireum/OsProto$Proc$Result.$init$:(Lorg/sireum/OsProto$Proc$Result;)V
        16: aload_0
        17: invokestatic  #268                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        20: aload_0
        21: aload_1
        22: putfield      #79                 // Field _exitCode:Lorg/sireum/Z;
        25: aload_0
        26: aload_2
        27: putfield      #84                 // Field _out:Ljava/lang/String;
        30: aload_0
        31: aload_3
        32: putfield      #88                 // Field _err:Ljava/lang/String;
        35: return
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/sireum/Os$Proc$Result$Normal;
            0      36     1 __exitCode   Lorg/sireum/Z;
            0      36     2 __out   Ljava/lang/String;
            0      36     3 __err   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      __exitCode                     final
      __out                          final
      __err                          final
}
InnerClasses:
  public static #14= #11 of #13;          // Proc$=class org/sireum/Os$Proc$ of class org/sireum/Os
  public static #15= #6 of #11;           // Result=class org/sireum/Os$Proc$Result of class org/sireum/Os$Proc$
  public static #18= #17 of #11;          // Result$=class org/sireum/Os$Proc$Result$ of class org/sireum/Os$Proc$
  public static final #19= #2 of #17;     // Normal=class org/sireum/Os$Proc$Result$Normal of class org/sireum/Os$Proc$Result$
  public static #14= #21 of #23;          // Proc$=class org/sireum/OsProto$Proc$ of class org/sireum/OsProto
  public static #15= #25 of #21;          // Result=class org/sireum/OsProto$Proc$Result of class org/sireum/OsProto$Proc$
SourceFile: "Os.scala"
  ScalaInlineInfo: length = 0x81 (unknown attribute)
   01 01 00 19 00 34 00 35 01 00 45 00 F9 01 00 45
   00 46 01 00 1C 00 D4 01 00 D3 00 D4 01 00 3C 00
   2F 01 00 41 00 2F 01 00 63 00 CD 01 00 8E 00 CC
   01 00 D0 00 27 01 00 D1 00 52 01 00 D2 00 52 01
   00 C3 00 C4 01 00 56 00 52 01 00 4D 00 27 01 00
   59 00 52 01 00 50 00 27 01 00 55 00 52 01 00 26
   00 27 01 00 1A 00 93 01 00 92 00 93 01 00 2E 00
   2F 01 00 51 00 52 01 00 8C 00 52 01 00 5A 00 52
   01
  Scala: length = 0x0 (unknown attribute)

