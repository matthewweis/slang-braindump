Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/HashMap.class
  Last modified May 29, 2022; size 23602 bytes
  SHA-256 checksum ff93c23f512186db52219978dcc339997cb2895ef45b89676971a4044daacef7
  Compiled from "HashMap.scala"
public final class org.sireum.HashMap<K extends java.lang.Object, T extends java.lang.Object> extends java.lang.Object implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/HashMap
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 5, methods: 65, attributes: 7
Constant pool:
    #1 = Utf8               org/sireum/HashMap
    #2 = Class              #1            // org/sireum/HashMap
    #3 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/DatatypeSig
    #7 = Class              #6            // org/sireum/DatatypeSig
    #8 = Utf8               HashMap.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\teu!\u0002\u0017.\u0011\u0003\u0011d!\u0002\u001b.\u0011\u0003)\u0004\"\u0002\u001f\u0002\t\u0003i\u0004\"\u0002 \u0002\t\u0003y\u0004b\u0002B\u001a\u0003\u0011\u0005!Q\u0007\u0005\b\u0003/\u000bA\u0011\u0001B%\u0011\u001d\t\u0019\"\u0001C\u0001\u0005KBqAa\u001f\u0002\t\u0003\u0011iH\u0002\u00035[\t\u0011\u0005\u0002C$\t\u0005\u0003\u0005\u000b\u0011\u0002%\t\u0011\rD!\u0011!Q\u0001\n\u0011DQ\u0001\u0010\u0005\u0005\u0002\u001dDaa\u001b\u0005!\u0002\u0013A\u0005\"\u00027\t\t\u0003i\u0007\"\u00028\t\t\u0003i\u0007BB8\tA\u0003%A\rC\u0003q\u0011\u0011\u0005\u0011\u000fC\u0003s\u0011\u0011\u0005\u0011\u000fC\u0003t\u0011\u0011\u0005C\u000f\u0003\u0005~\u0011!\u0015\r\u0011\"\u0011\u007f\u0011\u001d\t)\u0001\u0003C!\u0003\u000fAq!a\u0005\t\t\u0003\t)\u0002C\u0005\u0002\u001c!\t\n\u0011\"\u0001\u0002\u001e!I\u00111\u0007\u0005\u0012\u0002\u0013\u0005\u0011Q\u0007\u0005\u000b\u0003sA\u0001R1A\u0005B\u0005m\u0002bBA-\u0011\u0011\u0005\u00111\f\u0005\b\u0003SBA\u0011AA6\u0011\u001d\t\t\b\u0003C\u0001\u0003gBq!!\u001f\t\t\u0003\tY\bC\u0004\u0002\u0006\"!\t!a\"\t\u000f\u00055\u0005\u0002\"\u0001\u0002\u0010\"9\u0011q\u0013\u0005\u0005\u0002\u0005e\u0005bBAW\u0011\u0011\u0005\u0011q\u0016\u0005\b\u0003oCA\u0011AA]\u0011\u001d\t\t\r\u0003C\u0001\u0003\u0007Dq!a4\t\t\u0003\t\t\u000eC\u0004\u0002Z\"!\t!a7\t\u000f\u0005%\b\u0002\"\u0001\u0002l\"9\u0011\u0011\u001f\u0005\u0005\u0002\u0005M\bbBA\u0000\u0011\u0011\u0005!\u0011\u0001\u0005\b\u0005\u000bAA\u0011\u0001B\u0001\u0011\u001d\u0011I\u0001\u0003C!\u0005\u0017AaAa\u0005\t\t\u0003\n\bb\u0002B\f\u0011\u0011\u0005!\u0011D\u0001\b\u0011\u0006\u001c\b.T1q\u0015\tqs&\u0001\u0004tSJ,W/\u001c\u0006\u0002a\u0005\u0019qN]4\u0004\u0001A\u00111\'A\u0007\u0002[\t9\u0001*Y:i\u001b\u0006\u00048CA\u00017!\t9$(D\u00019\u0015\u0005I\u0014!B:dC2\f\u0017BA\u001e9\u0005\u0019\te.\u001f*fM\u00061A(\u001b8jiz\"\u0012AM\u0001\u0006K6\u0004H/_\u000b\u0006\u0001\n-\"qF\u000b\u0002\u0003B11\u0007\u0003B\u0015\u0005[)2aQ,b\'\rAa\u0007\u0012\t\u0003g\u0015K!AR\u0017\u0003\u0017\u0011\u000bG/\u0019;za\u0016\u001c\u0016nZ\u0001\r?~k\u0017\r]#oiJLWm\u001d\t\u0004\u00132\u0013fBA\u001aK\u0013\tYU&A\u0004qC\u000e\\\u0017mZ3\n\u00055s%aA%T5&\u0011q\n\u0015\u0002\r!\u0006\u001c7.Y4f)J\f\u0017\u000e\u001e\u0006\u0003#6\n\u0011\u0002J5oi\u0016\u0014h.\u00197\u0011\tM\u001aV\u000bY\u0005\u0003)6\u00121!T1q!\t1v\u000b\u0004\u0001\u0005\u000baC!\u0019A-\u0003\u0003-\u000b\"AW/\u0011\u0005]Z\u0016B\u0001/9\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"a\u000e0\n\u0005}C$aA!osB\u0011a+\u0019\u0003\u0006E\"\u0011\r!\u0017\u0002\u0002)\u00061qlX:ju\u0016\u0004\"aM3\n\u0005\u0019l#!\u0001.\u0015\u0007!L\'\u000e\u0005\u00034\u0011U\u0003\u0007\"B$\f\u0001\u0004A\u0005\"B2\f\u0001\u0004!\u0017aC0nCB,e\u000e\u001e:jKN\f!\"\\1q\u000b:$(/[3t+\u0005A\u0015!D4fi6\u000b\u0007/\u00128ue&,7/A\u0003`g&TX-\u0001\u0003tSj,W#\u00013\u0002\u000f\u001d,GoU5{K\u0006AAo\\*ue&tw\rF\u0001v!\t180D\u0001x\u0015\tA\u00180\u0001\u0003mC:<\'\"\u0001>\u0002\t)\fg/Y\u0005\u0003y^\u0014aa\u0015;sS:<\u0017\u0001\u00035bg\"\u001cu\u000eZ3\u0016\u0003}\u00042aNA\u0001\u0013\r\t\u0019\u0001\u000f\u0002\u0004\u0013:$\u0018AB3rk\u0006d7\u000f\u0006\u0003\u0002\n\u0005=\u0001cA\u001c\u0002\f%\u0019\u0011Q\u0002\u001d\u0003\u000f\t{w\u000e\\3b]\"1\u0011\u0011\u0003\u000bA\u0002u\u000b\u0011a\\\u0001\u0006CB\u0004H.\u001f\u000b\u0006Q\u0006]\u0011\u0011\u0004\u0005\bYV\u0001\n\u00111\u0001I\u0011\u001d\u0001X\u0003%AA\u0002\u0011\fq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0003\u0003?Q3\u0001SA\u0011W\t\t\u0019\u0003\u0005\u0003\u0002&\u0005=RBAA\u0014\u0015\u0011\tI#a\u000b\u0002\u0013Ut7\r[3dW\u0016$\'bAA\u0017q\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u0005E\u0012q\u0005\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017aD1qa2LH\u0005Z3gCVdG\u000f\n\u001a\u0016\u0005\u0005]\"f\u00013\u0002\"\u0005AAeY8oi\u0016tG/\u0006\u0002\u0002>A1\u0011qHA\'\u0003\'rA!!\u0011\u0002L9!\u00111IA%\u001b\t\t)EC\u0002\u0002HE\na\u0001\u0010:p_Rt\u0014\"A\u001d\n\u0005-C\u0014\u0002BA(\u0003#\u00121aU3r\u0015\tY\u0005\bE\u00038\u0003+*X,C\u0002\u0002Xa\u0012a\u0001V;qY\u0016\u0014\u0014aB3oiJLWm]\u000b\u0003\u0003;\u0002B!\u0013\'\u0002`A)q\'!\u0016VA\"\u001a\u0011$a\u0019\u0011\u0007M\n)\'C\u0002\u0002h5\u0012A\u0001];sK\u0006!1.Z=t+\t\ti\u0007E\u0002J\u0019VC3AGA2\u0003\u00191\u0018\r\\;fgV\u0011\u0011Q\u000f\t\u0004\u00132\u0003\u0007fA\u000e\u0002d\u000511.Z=TKR,\"!! \u0011\tM\ny(V\u0005\u0004\u0003\u0003k#aA*fi\"\u001aA$a\u0019\u0002\u0011Y\fG.^3TKR,\"!!#\u0011\tM\ny\b\u0019\u0015\u0004;\u0005\r\u0014!\u0002\u0013qYV\u001cHc\u00015\u0002\u0012\"9\u00111\u0013\u0010A\u0002\u0005}\u0013!\u00019)\u0007y\t\u0019\'\u0001\u0006%a2,8\u000f\n9mkN,B!a\'\u0002(R\u0019\u0001.!(\t\u000f\u0005es\u00041\u0001\u0002 B91\'!)\u0002&\u0006}\u0013bAAR[\t\u0011\u0011j\u0015\t\u0004-\u0006\u001dFABAU?\t\u0007\u0011LA\u0001JQ\ry\u00121M\u0001\u000fK:\u001cXO]3DCB\f7-\u001b;z)\rA\u0017\u0011\u0017\u0005\u0007\u0003g\u0003\u0003\u0019\u00013\u0002\u0005MT\bf\u0001\u0011\u0002d\u0005I\u0001.Y:i\u0013:$W\r\u001f\u000b\u0004I\u0006m\u0006BBA_C\u0001\u0007Q+A\u0002lKfD3!IA2\u0003\r9W\r\u001e\u000b\u0005\u0003\u000b\fY\r\u0005\u00034\u0003\u000f\u0004\u0017bAAe[\t1q\n\u001d;j_:Da!!0#\u0001\u0004)\u0006f\u0001\u0012\u0002d\u0005)QM\u001c;ssR!\u00111[Ak!\u0015\u0019\u0014qYA0\u0011\u0019\til\ta\u0001+\"\u001a1%a\u0019\u0002\u0019\u0011j\u0017N\\;tI5Lg.^:\u0016\t\u0005u\u0017Q\u001d\u000b\u0004Q\u0006}\u0007bBA5I\u0001\u0007\u0011\u0011\u001d\t\u0007g\u0005\u0005\u00161]+\u0011\u0007Y\u000b)\u000f\u0002\u0004\u0002*\u0012\u0012\r!\u0017\u0015\u0004I\u0005\r\u0014A\u0002\u0013nS:,8\u000fF\u0002i\u0003[Dq!a%&\u0001\u0004\ty\u0006K\u0002&\u0003G\n\u0001bY8oi\u0006Lgn\u001d\u000b\u0005\u0003k\fY\u0010E\u00024\u0003oL1!!?.\u0005\u0005\u0011\u0005BBA_M\u0001\u0007Q\u000bK\u0002\'\u0003G\nq![:F[B$\u00180\u0006\u0002\u0002v\"\u001aq%a\u0019\u0002\u00119|g.R7qifD3\u0001KA2\u0003\u0019\u0019HO]5oOV\u0011!Q\u0002\t\u0004g\t=\u0011B\u0001?.Q\rI\u00131M\u0001\u0005Q\u0006\u001c\b\u000eK\u0002+\u0003G\nq![:FcV\fG\u000e\u0006\u0003\u0002v\nm\u0001B\u0002B\u000fW\u0001\u0007\u0001.A\u0003pi\",\'\u000fK\u0002,\u0003GB3\u0001\u0003B\u0012!\r\u0019$QE\u0005\u0004\u0005Oi#\u0001\u00033bi\u0006$\u0018\u0010]3\u0011\u0007Y\u0013Y\u0003B\u0003Y\u0007\t\u0007\u0011\fE\u0002W\u0005_!QAY\u0002C\u0002eC3aAA2\u0003%)W\u000e\u001d;z\u0013:LG/\u0006\u0004\u00038\tu\"\u0011\t\u000b\u0005\u0005s\u0011\u0019\u0005\u0005\u00044\u0011\tm\"q\b\t\u0004-\nuB!\u0002-\u0005\u0005\u0004I\u0006c\u0001,\u0003B\u0011)!\r\u0002b\u00013\"1!Q\t\u0003A\u0002\u0011\fq\"\u001b8ji&\fGnQ1qC\u000eLG/\u001f\u0015\u0004\t\u0005\rT\u0003\u0003B&\u0005?\u0012\tF!\u0016\u0015\t\t5#q\u000b\t\u0007g!\u0011yEa\u0015\u0011\u0007Y\u0013\t\u0006B\u0003Y\u000b\t\u0007\u0011\fE\u0002W\u0005+\"QAY\u0003C\u0002eCqA!\u0017\u0006\u0001\u0004\u0011Y&A\u0001t!\u001d\u0019\u0014\u0011\u0015B/\u0005C\u00022A\u0016B0\t\u0019\tI+\u0002b\u00013B9q\'!\u0016\u0003P\tM\u0003fA\u0003\u0002dU1!q\rB7\u0005c\"bA!\u001b\u0003t\te\u0004CB\u001a\t\u0005W\u0012y\u0007E\u0002W\u0005[\"Q\u0001\u0017\u0004C\u0002e\u00032A\u0016B9\t\u0015\u0011gA1\u0001Z\u0011\u0019ag\u00011\u0001\u0003vA!\u0011\n\u0014B<!\u0019\u00194Ka\u001b\u0003p!)\u0001O\u0002a\u0001I\u00069QO\\1qa2LXC\u0002B@\u0005\u001f\u0013\u0019\n\u0006\u0003\u0003\u0002\nU\u0005#B\u001c\u0003\u0004\n\u001d\u0015b\u0001BCq\t!1k\\7f!\u00199\u0014Q\u000bBEIB!\u0011\n\u0014BF!\u0019\u00194K!$\u0003\u0012B\u0019aKa$\u0005\u000ba;!\u0019A-\u0011\u0007Y\u0013\u0019\nB\u0003c\u000f\t\u0007\u0011\fC\u0004\u0002\u0012\u001d\u0001\rAa&\u0011\rMB!Q\u0012BI\u0001
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #18 = Class              #17           // org/sireum/$internal/PackageTrait$ISZ$
   #19 = Utf8               org/sireum/$internal/PackageTrait
   #20 = Class              #19           // org/sireum/$internal/PackageTrait
   #21 = Utf8               ISZ$
   #22 = Utf8               org/sireum/ST$Any
   #23 = Class              #22           // org/sireum/ST$Any
   #24 = Utf8               org/sireum/ST
   #25 = Class              #24           // org/sireum/ST
   #26 = Utf8               Any
   #27 = Utf8               org/sireum/ST$Any$
   #28 = Class              #27           // org/sireum/ST$Any$
   #29 = Utf8               Any$
   #30 = Utf8               org/sireum/ST$Arg
   #31 = Class              #30           // org/sireum/ST$Arg
   #32 = Utf8               Arg
   #33 = Utf8               org/sireum/ST$Templ
   #34 = Class              #33           // org/sireum/ST$Templ
   #35 = Utf8               Templ
   #36 = Utf8               org/sireum/ST$Templ$
   #37 = Class              #36           // org/sireum/ST$Templ$
   #38 = Utf8               Templ$
   #39 = Utf8               org/sireum/Z$$String$
   #40 = Class              #39           // org/sireum/Z$$String$
   #41 = Utf8               org/sireum/Z
   #42 = Class              #41           // org/sireum/Z
   #43 = Utf8               $String$
   #44 = Utf8               org/sireum/package$$Arrow$
   #45 = Class              #44           // org/sireum/package$$Arrow$
   #46 = Utf8               org/sireum/package
   #47 = Class              #46           // org/sireum/package
   #48 = Utf8               $Arrow$
   #49 = Utf8               hashCode
   #50 = Utf8               I
   #51 = Utf8               $content
   #52 = Utf8               Lscala/collection/immutable/Seq;
   #53 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #54 = Utf8               _mapEntries
   #55 = Utf8               Lorg/sireum/IS;
   #56 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;
   #57 = Utf8               _size
   #58 = Utf8               Lorg/sireum/Z;
   #59 = Utf8               bitmap$0
   #60 = Utf8               B
   #61 = Utf8               unapply
   #62 = Utf8               (Lorg/sireum/HashMap;)Lscala/Some;
   #63 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashMap<TK;TT;>;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;>;>;
   #64 = Utf8               o
   #65 = Utf8               org/sireum/HashMap$
   #66 = Class              #65           // org/sireum/HashMap$
   #67 = Utf8               MODULE$
   #68 = Utf8               Lorg/sireum/HashMap$;
   #69 = NameAndType        #67:#68       // MODULE$:Lorg/sireum/HashMap$;
   #70 = Fieldref           #66.#69       // org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
   #71 = NameAndType        #61:#62       // unapply:(Lorg/sireum/HashMap;)Lscala/Some;
   #72 = Methodref          #66.#71       // org/sireum/HashMap$.unapply:(Lorg/sireum/HashMap;)Lscala/Some;
   #73 = Utf8               Lorg/sireum/HashMap;
   #74 = Utf8               emptyInit
   #75 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #76 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
   #77 = Utf8               initialCapacity
   #78 = NameAndType        #74:#75       // emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #79 = Methodref          #66.#78       // org/sireum/HashMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #80 = Utf8               empty
   #81 = Utf8               ()Lorg/sireum/HashMap;
   #82 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/HashMap<TK;TT;>;
   #83 = NameAndType        #80:#81       // empty:()Lorg/sireum/HashMap;
   #84 = Methodref          #66.#83       // org/sireum/HashMap$.empty:()Lorg/sireum/HashMap;
   #85 = Utf8               $cannotMixImmutableAndMutable
   #86 = Utf8               ()Lscala/runtime/Nothing$;
   #87 = Utf8               org/sireum/Immutable
   #88 = Class              #87           // org/sireum/Immutable
   #89 = Utf8               $cannotMixImmutableAndMutable$
   #90 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #91 = NameAndType        #89:#90       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #92 = InterfaceMethodref #88.#91       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #93 = Utf8               this
   #94 = Utf8               $hasEquals
   #95 = Utf8               ()Z
   #96 = Utf8               $hasEquals$
   #97 = Utf8               (Lorg/sireum/Immutable;)Z
   #98 = NameAndType        #96:#97       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #99 = InterfaceMethodref #88.#98       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
  #100 = Utf8               $hasString
  #101 = Utf8               $hasString$
  #102 = NameAndType        #101:#97      // $hasString$:(Lorg/sireum/Immutable;)Z
  #103 = InterfaceMethodref #88.#102      // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
  #104 = Utf8               $clone
  #105 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
  #106 = Utf8               org/sireum/$internal/ImmutableMarker
  #107 = Class              #106          // org/sireum/$internal/ImmutableMarker
  #108 = Utf8               $clone$
  #109 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #110 = NameAndType        #108:#109     // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #111 = InterfaceMethodref #107.#110     // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #112 = Utf8               mapEntries
  #113 = Utf8               ()Lorg/sireum/IS;
  #114 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;
  #115 = NameAndType        #54:#55       // _mapEntries:Lorg/sireum/IS;
  #116 = Fieldref           #2.#115       // org/sireum/HashMap._mapEntries:Lorg/sireum/IS;
  #117 = Utf8               getMapEntries
  #118 = Utf8               size
  #119 = Utf8               ()Lorg/sireum/Z;
  #120 = NameAndType        #57:#58       // _size:Lorg/sireum/Z;
  #121 = Fieldref           #2.#120       // org/sireum/HashMap._size:Lorg/sireum/Z;
  #122 = Utf8               getSize
  #123 = Utf8               toString
  #124 = Utf8               ()Ljava/lang/String;
  #125 = Utf8               string
  #126 = NameAndType        #125:#124     // string:()Ljava/lang/String;
  #127 = Methodref          #2.#126       // org/sireum/HashMap.string:()Ljava/lang/String;
  #128 = Utf8               hashCode$lzycompute
  #129 = Utf8               ()I
  #130 = NameAndType        #59:#60       // bitmap$0:B
  #131 = Fieldref           #2.#130       // org/sireum/HashMap.bitmap$0:B
  #132 = Utf8               hash
  #133 = NameAndType        #132:#119     // hash:()Lorg/sireum/Z;
  #134 = Methodref          #2.#133       // org/sireum/HashMap.hash:()Lorg/sireum/Z;
  #135 = NameAndType        #49:#129      // hashCode:()I
  #136 = Methodref          #5.#135       // java/lang/Object.hashCode:()I
  #137 = NameAndType        #49:#50       // hashCode:I
  #138 = Fieldref           #2.#137       // org/sireum/HashMap.hashCode:I
  #139 = Utf8               java/lang/Throwable
  #140 = Class              #139          // java/lang/Throwable
  #141 = NameAndType        #128:#129     // hashCode$lzycompute:()I
  #142 = Methodref          #2.#141       // org/sireum/HashMap.hashCode$lzycompute:()I
  #143 = Utf8               equals
  #144 = Utf8               (Ljava/lang/Object;)Z
  #145 = Utf8               org/sireum/B$
  #146 = Class              #145          // org/sireum/B$
  #147 = Utf8               Lorg/sireum/B$;
  #148 = NameAndType        #67:#147      // MODULE$:Lorg/sireum/B$;
  #149 = Fieldref           #146.#148     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #150 = Utf8               isEqual
  #151 = Utf8               (Lorg/sireum/HashMap;)Z
  #152 = NameAndType        #150:#151     // isEqual:(Lorg/sireum/HashMap;)Z
  #153 = Methodref          #2.#152       // org/sireum/HashMap.isEqual:(Lorg/sireum/HashMap;)Z
  #154 = Utf8               $4B
  #155 = Utf8               (Z)Z
  #156 = NameAndType        #154:#155     // $4B:(Z)Z
  #157 = Methodref          #146.#156     // org/sireum/B$.$4B:(Z)Z
  #158 = Utf8               Ljava/lang/Object;
  #159 = Utf8               apply
  #160 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
  #161 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
  #162 = Utf8               <init>
  #163 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;)V
  #164 = NameAndType        #162:#163     // "<init>":(Lorg/sireum/IS;Lorg/sireum/Z;)V
  #165 = Methodref          #2.#164       // org/sireum/HashMap."<init>":(Lorg/sireum/IS;Lorg/sireum/Z;)V
  #166 = Utf8               apply$default$1
  #167 = NameAndType        #112:#113     // mapEntries:()Lorg/sireum/IS;
  #168 = Methodref          #2.#167       // org/sireum/HashMap.mapEntries:()Lorg/sireum/IS;
  #169 = Utf8               apply$default$2
  #170 = NameAndType        #118:#119     // size:()Lorg/sireum/Z;
  #171 = Methodref          #2.#170       // org/sireum/HashMap.size:()Lorg/sireum/Z;
  #172 = Utf8               $content$lzycompute
  #173 = Utf8               ()Lscala/collection/immutable/Seq;
  #174 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #175 = Utf8               scala/package$
  #176 = Class              #175          // scala/package$
  #177 = Utf8               Lscala/package$;
  #178 = NameAndType        #67:#177      // MODULE$:Lscala/package$;
  #179 = Fieldref           #176.#178     // scala/package$.MODULE$:Lscala/package$;
  #180 = Utf8               Seq
  #181 = Utf8               ()Lscala/collection/immutable/Seq$;
  #182 = NameAndType        #180:#181     // Seq:()Lscala/collection/immutable/Seq$;
  #183 = Methodref          #176.#182     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #184 = Utf8               scala/runtime/ScalaRunTime$
  #185 = Class              #184          // scala/runtime/ScalaRunTime$
  #186 = Utf8               Lscala/runtime/ScalaRunTime$;
  #187 = NameAndType        #67:#186      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #188 = Fieldref           #185.#187     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #189 = Utf8               scala/Tuple2
  #190 = Class              #189          // scala/Tuple2
  #191 = Utf8               type
  #192 = String             #191          // type
  #193 = Utf8               List
  #194 = Utf8               ()Lscala/collection/immutable/List$;
  #195 = NameAndType        #193:#194     // List:()Lscala/collection/immutable/List$;
  #196 = Methodref          #176.#195     // scala/package$.List:()Lscala/collection/immutable/List$;
  #197 = Utf8               java/lang/String
  #198 = Class              #197          // java/lang/String
  #199 = Utf8               org
  #200 = String             #199          // org
  #201 = Utf8               sireum
  #202 = String             #201          // sireum
  #203 = Utf8               HashMap
  #204 = String             #203          // HashMap
  #205 = Utf8               [Ljava/lang/Object;
  #206 = Class              #205          // "[Ljava/lang/Object;"
  #207 = Utf8               wrapRefArray
  #208 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #209 = NameAndType        #207:#208     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #210 = Methodref          #185.#209     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #211 = Utf8               scala/collection/immutable/List$
  #212 = Class              #211          // scala/collection/immutable/List$
  #213 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #214 = NameAndType        #159:#213     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #215 = Methodref          #212.#214     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #216 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #217 = NameAndType        #162:#216     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #218 = Methodref          #190.#217     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #219 = String             #112          // mapEntries
  #220 = String             #118          // size
  #221 = Utf8               scala/collection/immutable/Seq$
  #222 = Class              #221          // scala/collection/immutable/Seq$
  #223 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #224 = NameAndType        #159:#223     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #225 = Methodref          #222.#224     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #226 = Utf8               scala/collection/immutable/Seq
  #227 = Class              #226          // scala/collection/immutable/Seq
  #228 = NameAndType        #51:#52       // $content:Lscala/collection/immutable/Seq;
  #229 = Fieldref           #2.#228       // org/sireum/HashMap.$content:Lscala/collection/immutable/Seq;
  #230 = NameAndType        #172:#173     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #231 = Methodref          #2.#230       // org/sireum/HashMap.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #232 = Utf8               entries
  #233 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;
  #234 = Utf8               org/sireum/package$
  #235 = Class              #234          // org/sireum/package$
  #236 = Utf8               Lorg/sireum/package$;
  #237 = NameAndType        #67:#236      // MODULE$:Lorg/sireum/package$;
  #238 = Fieldref           #235.#237     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #239 = Utf8               ISZ
  #240 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #241 = NameAndType        #239:#240     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #242 = Methodref          #235.#241     // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #243 = Utf8               scala/collection/immutable/Nil$
  #244 = Class              #243          // scala/collection/immutable/Nil$
  #245 = Utf8               Lscala/collection/immutable/Nil$;
  #246 = NameAndType        #67:#245      // MODULE$:Lscala/collection/immutable/Nil$;
  #247 = Fieldref           #244.#246     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #248 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #249 = NameAndType        #159:#248     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #250 = Methodref          #18.#249      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #251 = Utf8               scala/runtime/ObjectRef
  #252 = Class              #251          // scala/runtime/ObjectRef
  #253 = Utf8               create
  #254 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #255 = NameAndType        #253:#254     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #256 = Methodref          #252.#255     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #257 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #258 = MethodType         #257          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #259 = Utf8               $anonfun$entries$1$adapted
  #260 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #261 = NameAndType        #259:#260     // $anonfun$entries$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #262 = Methodref          #2.#261       // org/sireum/HashMap.$anonfun$entries$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #263 = MethodHandle       6:#262        // REF_invokeStatic org/sireum/HashMap.$anonfun$entries$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #264 = Utf8               (Lorg/sireum/Map;)Ljava/lang/Object;
  #265 = MethodType         #264          //  (Lorg/sireum/Map;)Ljava/lang/Object;
  #266 = Integer            5
  #267 = Integer            1
  #268 = Utf8               java/lang/invoke/LambdaMetafactory
  #269 = Class              #268          // java/lang/invoke/LambdaMetafactory
  #270 = Utf8               altMetafactory
  #271 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #272 = NameAndType        #270:#271     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #273 = Methodref          #269.#272     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #274 = MethodHandle       6:#273        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #275 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
  #276 = NameAndType        #159:#275     // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #277 = InvokeDynamic      #0:#276       // #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #278 = Utf8               org/sireum/IS
  #279 = Class              #278          // org/sireum/IS
  #280 = Utf8               foreach
  #281 = Utf8               (Lscala/Function1;)V
  #282 = NameAndType        #280:#281     // foreach:(Lscala/Function1;)V
  #283 = Methodref          #279.#282     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #284 = Utf8               elem
  #285 = NameAndType        #284:#158     // elem:Ljava/lang/Object;
  #286 = Fieldref           #252.#285     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #287 = Utf8               r
  #288 = Utf8               Lscala/runtime/ObjectRef;
  #289 = Utf8               keys
  #290 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TK;>;
  #291 = Utf8               $anonfun$keys$1$adapted
  #292 = NameAndType        #291:#260     // $anonfun$keys$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #293 = Methodref          #2.#292       // org/sireum/HashMap.$anonfun$keys$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #294 = MethodHandle       6:#293        // REF_invokeStatic org/sireum/HashMap.$anonfun$keys$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #295 = InvokeDynamic      #1:#276       // #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #296 = Utf8               values
  #297 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;
  #298 = Utf8               $anonfun$values$1$adapted
  #299 = NameAndType        #298:#260     // $anonfun$values$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #300 = Methodref          #2.#299       // org/sireum/HashMap.$anonfun$values$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #301 = MethodHandle       6:#300        // REF_invokeStatic org/sireum/HashMap.$anonfun$values$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #302 = InvokeDynamic      #2:#276       // #2:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #303 = Utf8               keySet
  #304 = Utf8               ()Lorg/sireum/Set;
  #305 = Utf8               ()Lorg/sireum/Set<TK;>;
  #306 = Utf8               org/sireum/Set$
  #307 = Class              #306          // org/sireum/Set$
  #308 = Utf8               Lorg/sireum/Set$;
  #309 = NameAndType        #67:#308      // MODULE$:Lorg/sireum/Set$;
  #310 = Fieldref           #307.#309     // org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
  #311 = NameAndType        #80:#304      // empty:()Lorg/sireum/Set;
  #312 = Methodref          #307.#311     // org/sireum/Set$.empty:()Lorg/sireum/Set;
  #313 = NameAndType        #289:#113     // keys:()Lorg/sireum/IS;
  #314 = Methodref          #2.#313       // org/sireum/HashMap.keys:()Lorg/sireum/IS;
  #315 = Utf8               org/sireum/Set
  #316 = Class              #315          // org/sireum/Set
  #317 = Utf8               $plus$plus
  #318 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Set;
  #319 = NameAndType        #317:#318     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
  #320 = Methodref          #316.#319     // org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
  #321 = Utf8               valueSet
  #322 = Utf8               ()Lorg/sireum/Set<TT;>;
  #323 = NameAndType        #296:#113     // values:()Lorg/sireum/IS;
  #324 = Methodref          #2.#323       // org/sireum/HashMap.values:()Lorg/sireum/IS;
  #325 = Utf8               $plus
  #326 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashMap;
  #327 = Utf8               (Lscala/Tuple2<TK;TT;>;)Lorg/sireum/HashMap<TK;TT;>;
  #328 = Utf8               p
  #329 = Utf8               org/sireum/helper$
  #330 = Class              #329          // org/sireum/helper$
  #331 = Utf8               Lorg/sireum/helper$;
  #332 = NameAndType        #67:#331      // MODULE$:Lorg/sireum/helper$;
  #333 = Fieldref           #330.#332     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #334 = Utf8               _1
  #335 = Utf8               ()Ljava/lang/Object;
  #336 = NameAndType        #334:#335     // _1:()Ljava/lang/Object;
  #337 = Methodref          #190.#336     // scala/Tuple2._1:()Ljava/lang/Object;
  #338 = Utf8               assign
  #339 = NameAndType        #338:#257     // assign:(Ljava/lang/Object;)Ljava/lang/Object;
  #340 = Methodref          #330.#339     // org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
  #341 = Utf8               _2
  #342 = NameAndType        #341:#335     // _2:()Ljava/lang/Object;
  #343 = Methodref          #190.#342     // scala/Tuple2._2:()Ljava/lang/Object;
  #344 = Utf8               scala/MatchError
  #345 = Class              #344          // scala/MatchError
  #346 = Utf8               (Ljava/lang/Object;)V
  #347 = NameAndType        #162:#346     // "<init>":(Ljava/lang/Object;)V
  #348 = Methodref          #345.#347     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #349 = Utf8               org/sireum/Z$
  #350 = Class              #349          // org/sireum/Z$
  #351 = Utf8               Lorg/sireum/Z$;
  #352 = NameAndType        #67:#351      // MODULE$:Lorg/sireum/Z$;
  #353 = Fieldref           #350.#352     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #354 = Utf8               (I)Lorg/sireum/Z;
  #355 = NameAndType        #159:#354     // apply:(I)Lorg/sireum/Z;
  #356 = Methodref          #350.#355     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #357 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #358 = NameAndType        #325:#357     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #359 = InterfaceMethodref #42.#358      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #360 = Utf8               ensureCapacity
  #361 = NameAndType        #360:#75      // ensureCapacity:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
  #362 = Methodref          #2.#361       // org/sireum/HashMap.ensureCapacity:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
  #363 = Utf8               hashIndex
  #364 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Z;
  #365 = NameAndType        #363:#364     // hashIndex:(Ljava/lang/Object;)Lorg/sireum/Z;
  #366 = Methodref          #2.#365       // org/sireum/HashMap.hashIndex:(Ljava/lang/Object;)Lorg/sireum/Z;
  #367 = NameAndType        #159:#257     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #368 = Methodref          #279.#367     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #369 = Utf8               org/sireum/Map
  #370 = Class              #369          // org/sireum/Map
  #371 = Utf8               contains
  #372 = NameAndType        #371:#144     // contains:(Ljava/lang/Object;)Z
  #373 = Methodref          #370.#372     // org/sireum/Map.contains:(Ljava/lang/Object;)Z
  #374 = Utf8               Lorg/sireum/package$$Arrow$;
  #375 = NameAndType        #67:#374      // MODULE$:Lorg/sireum/package$$Arrow$;
  #376 = Fieldref           #45.#375      // org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
  #377 = Utf8               $Arrow
  #378 = NameAndType        #377:#257     // $Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #379 = Methodref          #235.#378     // org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #380 = Utf8               $tilde$greater$extension
  #381 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #382 = NameAndType        #380:#381     // $tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #383 = Methodref          #45.#382      // org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #384 = Utf8               (Lscala/Tuple2;)Lorg/sireum/Map;
  #385 = NameAndType        #325:#384     // $plus:(Lscala/Tuple2;)Lorg/sireum/Map;
  #386 = Methodref          #370.#385     // org/sireum/Map.$plus:(Lscala/Tuple2;)Lorg/sireum/Map;
  #387 = Methodref          #279.#249     // org/sireum/IS.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #388 = NameAndType        #159:#160     // apply:(Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
  #389 = Methodref          #2.#388       // org/sireum/HashMap.apply:(Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
  #390 = Utf8               x
  #391 = Utf8               Lscala/Tuple2;
  #392 = Utf8               key
  #393 = Utf8               value
  #394 = Utf8               i
  #395 = Utf8               m
  #396 = Utf8               Lorg/sireum/Map;
  #397 = Utf8               newSize
  #398 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashMap;
  #399 = Utf8               <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/HashMap<TK;TT;>;
  #400 = Utf8               isEmpty
  #401 = NameAndType        #400:#95      // isEmpty:()Z
  #402 = Methodref          #279.#401     // org/sireum/IS.isEmpty:()Z
  #403 = Methodref          #279.#170     // org/sireum/IS.size:()Lorg/sireum/Z;
  #404 = Utf8               $anonfun$$plus$plus$1$adapted
  #405 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #406 = NameAndType        #404:#405     // $anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #407 = Methodref          #2.#406       // org/sireum/HashMap.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #408 = MethodHandle       6:#407        // REF_invokeStatic org/sireum/HashMap.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #409 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #410 = MethodType         #409          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #411 = InvokeDynamic      #3:#276       // #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #412 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
  #413 = Utf8               sz
  #414 = Utf8               $times
  #415 = NameAndType        #414:#357     // $times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #416 = InterfaceMethodref #42.#415      // org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #417 = Utf8               $div
  #418 = NameAndType        #417:#357     // $div:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #419 = InterfaceMethodref #42.#418      // org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #420 = Utf8               $greater$eq
  #421 = Utf8               (Lorg/sireum/Z;)Z
  #422 = NameAndType        #420:#421     // $greater$eq:(Lorg/sireum/Z;)Z
  #423 = InterfaceMethodref #42.#422      // org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
  #424 = Utf8               $anonfun$ensureCapacity$1$adapted
  #425 = NameAndType        #424:#260     // $anonfun$ensureCapacity$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #426 = Methodref          #2.#425       // org/sireum/HashMap.$anonfun$ensureCapacity$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #427 = MethodHandle       6:#426        // REF_invokeStatic org/sireum/HashMap.$anonfun$ensureCapacity$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  #428 = InvokeDynamic      #4:#276       // #4:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #429 = Utf8               init
  #430 = Utf8               (TK;)Lorg/sireum/Z;
  #431 = Utf8               $percent
  #432 = NameAndType        #431:#357     // $percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #433 = InterfaceMethodref #42.#432      // org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #434 = Utf8               $less
  #435 = NameAndType        #434:#421     // $less:(Lorg/sireum/Z;)Z
  #436 = InterfaceMethodref #42.#435      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #437 = Utf8               get
  #438 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
  #439 = Utf8               (TK;)Lorg/sireum/Option<TT;>;
  #440 = NameAndType        #437:#438     // get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #441 = Methodref          #370.#440     // org/sireum/Map.get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #442 = Utf8               entry
  #443 = Utf8               (TK;)Lorg/sireum/Option<Lscala/Tuple2<TK;TT;>;>;
  #444 = NameAndType        #442:#438     // entry:(Ljava/lang/Object;)Lorg/sireum/Option;
  #445 = Methodref          #370.#444     // org/sireum/Map.entry:(Ljava/lang/Object;)Lorg/sireum/Option;
  #446 = Utf8               $minus$minus
  #447 = Utf8               <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TK;>;)Lorg/sireum/HashMap<TK;TT;>;
  #448 = Utf8               $anonfun$$minus$minus$1$adapted
  #449 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #450 = NameAndType        #448:#449     // $anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #451 = Methodref          #2.#450       // org/sireum/HashMap.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #452 = MethodHandle       6:#451        // REF_invokeStatic org/sireum/HashMap.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #453 = InvokeDynamic      #5:#276       // #5:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #454 = Utf8               $minus
  #455 = NameAndType        #454:#384     // $minus:(Lscala/Tuple2;)Lorg/sireum/Map;
  #456 = Methodref          #370.#455     // org/sireum/Map.$minus:(Lscala/Tuple2;)Lorg/sireum/Map;
  #457 = NameAndType        #454:#357     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #458 = InterfaceMethodref #42.#457      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #459 = Utf8               (TK;)Z
  #460 = Methodref          #2.#440       // org/sireum/HashMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #461 = Utf8               org/sireum/Option
  #462 = Class              #461          // org/sireum/Option
  #463 = Utf8               nonEmpty
  #464 = NameAndType        #463:#95      // nonEmpty:()Z
  #465 = InterfaceMethodref #462.#464     // org/sireum/Option.nonEmpty:()Z
  #466 = Utf8               Lorg/sireum/Z$$String$;
  #467 = NameAndType        #67:#466      // MODULE$:Lorg/sireum/Z$$String$;
  #468 = Fieldref           #40.#467      // org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
  #469 = Utf8               0
  #470 = String             #469          // 0
  #471 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #472 = NameAndType        #159:#471     // apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #473 = Methodref          #40.#472      // org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #474 = NameAndType        #143:#144     // equals:(Ljava/lang/Object;)Z
  #475 = Methodref          #5.#474       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #476 = NameAndType        #159:#155     // apply:(Z)Z
  #477 = Methodref          #146.#476     // org/sireum/B$.apply:(Z)Z
  #478 = Utf8               org/sireum/ST$
  #479 = Class              #478          // org/sireum/ST$
  #480 = Utf8               Lorg/sireum/ST$;
  #481 = NameAndType        #67:#480      // MODULE$:Lorg/sireum/ST$;
  #482 = Fieldref           #479.#481     // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
  #483 = Utf8               {\n      |
  #484 = String             #483          // {\n      |
  #485 = Utf8               \n      |}
  #486 = String             #485          // \n      |}
  #487 = Utf8               Lorg/sireum/ST$Templ$;
  #488 = NameAndType        #67:#487      // MODULE$:Lorg/sireum/ST$Templ$;
  #489 = Fieldref           #37.#488      // org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
  #490 = NameAndType        #232:#113     // entries:()Lorg/sireum/IS;
  #491 = Methodref          #2.#490       // org/sireum/HashMap.entries:()Lorg/sireum/IS;
  #492 = Utf8               $anonfun$string$1
  #493 = Utf8               (Lscala/Tuple2;)Lorg/sireum/ST;
  #494 = NameAndType        #492:#493     // $anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  #495 = Methodref          #2.#494       // org/sireum/HashMap.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  #496 = MethodHandle       6:#495        // REF_invokeStatic org/sireum/HashMap.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  #497 = MethodType         #493          //  (Lscala/Tuple2;)Lorg/sireum/ST;
  #498 = Utf8               ()Lscala/Function1;
  #499 = NameAndType        #159:#498     // apply:()Lscala/Function1;
  #500 = InvokeDynamic      #6:#499       // #6:apply:()Lscala/Function1;
  #501 = Utf8               map
  #502 = Utf8               (Lscala/Function1;)Lorg/sireum/IS;
  #503 = NameAndType        #501:#502     // map:(Lscala/Function1;)Lorg/sireum/IS;
  #504 = Methodref          #279.#503     // org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
  #505 = Utf8               elements
  #506 = NameAndType        #505:#173     // elements:()Lscala/collection/immutable/Seq;
  #507 = Methodref          #279.#506     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #508 = Utf8               org/sireum/String$
  #509 = Class              #508          // org/sireum/String$
  #510 = Utf8               Lorg/sireum/String$;
  #511 = NameAndType        #67:#510      // MODULE$:Lorg/sireum/String$;
  #512 = Fieldref           #509.#511     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #513 = Utf8               ,\n
  #514 = String             #513          // ,\n
  #515 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #516 = NameAndType        #159:#515     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #517 = Methodref          #509.#516     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #518 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #519 = NameAndType        #159:#518     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #520 = Methodref          #37.#519      // org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #521 = Utf8                     st\"\"\"{\n      |  ${(for (e <- entries) yield st\"${e._1} -> ${e._2}\", \",\\n\")}\n      |}\"\"\"
  #522 = String             #521          //       st\"\"\"{\n      |  ${(for (e <- entries) yield st\"${e._1} -> ${e._2}\", \",\\n\")}\n      |}\"\"\"
  #523 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #524 = NameAndType        #159:#523     // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #525 = Methodref          #479.#524     // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #526 = Utf8               render
  #527 = NameAndType        #526:#124     // render:()Ljava/lang/String;
  #528 = Methodref          #25.#527      // org/sireum/ST.render:()Ljava/lang/String;
  #529 = Utf8               Lorg/sireum/ST;
  #530 = Utf8               (Lorg/sireum/HashMap<TK;TT;>;)Z
  #531 = Utf8               other
  #532 = Utf8               scala/runtime/NonLocalReturnControl
  #533 = Class              #532          // scala/runtime/NonLocalReturnControl
  #534 = Utf8               ()V
  #535 = NameAndType        #162:#534     // "<init>":()V
  #536 = Methodref          #5.#535       // java/lang/Object."<init>":()V
  #537 = Utf8               F
  #538 = NameAndType        #537:#95      // F:()Z
  #539 = Methodref          #235.#538     // org/sireum/package$.F:()Z
  #540 = Utf8               $anonfun$isEqual$1$adapted
  #541 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
  #542 = NameAndType        #540:#541     // $anonfun$isEqual$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
  #543 = Methodref          #2.#542       // org/sireum/HashMap.$anonfun$isEqual$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
  #544 = MethodHandle       6:#543        // REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
  #545 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
  #546 = NameAndType        #159:#545     // apply:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
  #547 = InvokeDynamic      #7:#546       // #7:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
  #548 = NameAndType        #446:#398     // $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashMap;
  #549 = Methodref          #2.#548       // org/sireum/HashMap.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashMap;
  #550 = Utf8               $anonfun$isEqual$3$adapted
  #551 = Utf8               (Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
  #552 = NameAndType        #550:#551     // $anonfun$isEqual$3$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
  #553 = Methodref          #2.#552       // org/sireum/HashMap.$anonfun$isEqual$3$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
  #554 = MethodHandle       6:#553        // REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$3$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
  #555 = Utf8               (Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
  #556 = NameAndType        #159:#555     // apply:(Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
  #557 = InvokeDynamic      #8:#556       // #8:apply:(Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
  #558 = Utf8               T
  #559 = NameAndType        #558:#95      // T:()Z
  #560 = Methodref          #235.#559     // org/sireum/package$.T:()Z
  #561 = NameAndType        #392:#335     // key:()Ljava/lang/Object;
  #562 = Methodref          #533.#561     // scala/runtime/NonLocalReturnControl.key:()Ljava/lang/Object;
  #563 = NameAndType        #393:#335     // value:()Ljava/lang/Object;
  #564 = Methodref          #533.#563     // scala/runtime/NonLocalReturnControl.value:()Ljava/lang/Object;
  #565 = Utf8               org/sireum/B
  #566 = Class              #565          // org/sireum/B
  #567 = NameAndType        #393:#95      // value:()Z
  #568 = Methodref          #566.#567     // org/sireum/B.value:()Z
  #569 = Utf8               comparedKeys
  #570 = Utf8               ex
  #571 = Utf8               Lscala/runtime/NonLocalReturnControl;
  #572 = NameAndType        #104:#105     // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #573 = Methodref          #2.#572       // org/sireum/HashMap.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #574 = Utf8               $anonfun$entries$1
  #575 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
  #576 = Utf8               r$1
  #577 = Utf8               ms
  #578 = Methodref          #370.#464     // org/sireum/Map.nonEmpty:()Z
  #579 = Methodref          #370.#490     // org/sireum/Map.entries:()Lorg/sireum/IS;
  #580 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/IS;
  #581 = NameAndType        #317:#580     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #582 = Methodref          #279.#581     // org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #583 = Utf8               $anonfun$keys$1
  #584 = Utf8               r$2
  #585 = Methodref          #370.#313     // org/sireum/Map.keys:()Lorg/sireum/IS;
  #586 = Utf8               $anonfun$values$1
  #587 = Utf8               r$3
  #588 = Methodref          #370.#323     // org/sireum/Map.values:()Lorg/sireum/IS;
  #589 = Utf8               $anonfun$$plus$plus$1
  #590 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #591 = Utf8               r$4
  #592 = Utf8               kv
  #593 = NameAndType        #325:#326     // $plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #594 = Methodref          #2.#593       // org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #595 = Utf8               $anonfun$ensureCapacity$2
  #596 = Utf8               r$5
  #597 = Utf8               $anonfun$ensureCapacity$1
  #598 = Utf8               $anonfun$ensureCapacity$2$adapted
  #599 = NameAndType        #598:#405     // $anonfun$ensureCapacity$2$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #600 = Methodref          #2.#599       // org/sireum/HashMap.$anonfun$ensureCapacity$2$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #601 = MethodHandle       6:#600        // REF_invokeStatic org/sireum/HashMap.$anonfun$ensureCapacity$2$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #602 = InvokeDynamic      #9:#276       // #9:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #603 = Utf8               $anonfun$$minus$minus$1
  #604 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #605 = Utf8               r$6
  #606 = Utf8               k
  #607 = Utf8               org/sireum/Some
  #608 = Class              #607          // org/sireum/Some
  #609 = Utf8               org/sireum/Some$
  #610 = Class              #609          // org/sireum/Some$
  #611 = Utf8               Lorg/sireum/Some$;
  #612 = NameAndType        #67:#611      // MODULE$:Lorg/sireum/Some$;
  #613 = Fieldref           #610.#612     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #614 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #615 = NameAndType        #61:#614      // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #616 = Methodref          #610.#615     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #617 = Utf8               scala/Some
  #618 = Class              #617          // scala/Some
  #619 = Methodref          #618.#401     // scala/Some.isEmpty:()Z
  #620 = NameAndType        #437:#335     // get:()Ljava/lang/Object;
  #621 = Methodref          #618.#620     // scala/Some.get:()Ljava/lang/Object;
  #622 = NameAndType        #454:#326     // $minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #623 = Methodref          #2.#622       // org/sireum/HashMap.$minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #624 = Utf8               scala/runtime/BoxedUnit
  #625 = Class              #624          // scala/runtime/BoxedUnit
  #626 = Utf8               UNIT
  #627 = Utf8               Lscala/runtime/BoxedUnit;
  #628 = NameAndType        #626:#627     // UNIT:Lscala/runtime/BoxedUnit;
  #629 = Fieldref           #625.#628     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #630 = Utf8               v
  #631 = Utf8               e
  #632 = Utf8               scala/StringContext$
  #633 = Class              #632          // scala/StringContext$
  #634 = Utf8               Lscala/StringContext$;
  #635 = NameAndType        #67:#634      // MODULE$:Lscala/StringContext$;
  #636 = Fieldref           #633.#635     // scala/StringContext$.MODULE$:Lscala/StringContext$;
  #637 = Utf8
  #638 = String             #637          //
  #639 = Utf8               processEscapes
  #640 = NameAndType        #639:#515     // processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #641 = Methodref          #633.#640     // scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #642 = Utf8                ->
  #643 = String             #642          //  ->
  #644 = Utf8               Lorg/sireum/ST$Any$;
  #645 = NameAndType        #67:#644      // MODULE$:Lorg/sireum/ST$Any$;
  #646 = Fieldref           #28.#645      // org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
  #647 = Utf8               org/sireum/$internal/Option$
  #648 = Class              #647          // org/sireum/$internal/Option$
  #649 = Utf8               Lorg/sireum/$internal/Option$;
  #650 = NameAndType        #67:#649      // MODULE$:Lorg/sireum/$internal/Option$;
  #651 = Fieldref           #648.#650     // org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
  #652 = Methodref          #648.#367     // org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #653 = Utf8               genericWrapArray
  #654 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #655 = NameAndType        #653:#654     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #656 = Methodref          #185.#655     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #657 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #658 = NameAndType        #159:#657     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #659 = Methodref          #28.#658      // org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #660 = Utf8                                                    st\"${e._1} -> ${e._2}\"
  #661 = String             #660          //                                      st\"${e._1} -> ${e._2}\"
  #662 = Utf8               $anonfun$isEqual$2
  #663 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
  #664 = Utf8               comparedKeys$1
  #665 = Utf8               other$1
  #666 = Utf8               nonLocalReturnKey1$1
  #667 = Utf8               $colon$plus
  #668 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #669 = NameAndType        #667:#668     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #670 = Methodref          #279.#669     // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #671 = Utf8               scala/runtime/BoxesRunTime
  #672 = Class              #671          // scala/runtime/BoxesRunTime
  #673 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #674 = NameAndType        #143:#673     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #675 = Methodref          #672.#674     // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #676 = Utf8               (Z)V
  #677 = NameAndType        #162:#676     // "<init>":(Z)V
  #678 = Methodref          #566.#677     // org/sireum/B."<init>":(Z)V
  #679 = Methodref          #533.#217     // scala/runtime/NonLocalReturnControl."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #680 = Utf8               $anonfun$isEqual$1
  #681 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
  #682 = Utf8               $anonfun$isEqual$2$adapted
  #683 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #684 = NameAndType        #682:#683     // $anonfun$isEqual$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #685 = Methodref          #2.#684       // org/sireum/HashMap.$anonfun$isEqual$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #686 = MethodHandle       6:#685        // REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #687 = InvokeDynamic      #10:#546      // #10:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
  #688 = Utf8               $anonfun$isEqual$4
  #689 = Utf8               (Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
  #690 = Utf8               $this
  #691 = Utf8               $anonfun$isEqual$3
  #692 = Utf8               (Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
  #693 = Utf8               $anonfun$isEqual$4$adapted
  #694 = Utf8               (Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #695 = NameAndType        #693:#694     // $anonfun$isEqual$4$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #696 = Methodref          #2.#695       // org/sireum/HashMap.$anonfun$isEqual$4$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #697 = MethodHandle       6:#696        // REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$4$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #698 = InvokeDynamic      #11:#556      // #11:apply:(Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
  #699 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;)V
  #700 = Utf8               __mapEntries
  #701 = Utf8               __size
  #702 = Utf8               $init$
  #703 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #704 = NameAndType        #702:#703     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #705 = InterfaceMethodref #107.#704     // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #706 = Utf8               (Lorg/sireum/Immutable;)V
  #707 = NameAndType        #702:#706     // $init$:(Lorg/sireum/Immutable;)V
  #708 = InterfaceMethodref #88.#707      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #709 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #710 = NameAndType        #702:#709     // $init$:(Lorg/sireum/DatatypeSig;)V
  #711 = InterfaceMethodref #7.#710       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #712 = NameAndType        #574:#575     // $anonfun$entries$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
  #713 = Methodref          #2.#712       // org/sireum/HashMap.$anonfun$entries$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
  #714 = NameAndType        #583:#575     // $anonfun$keys$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
  #715 = Methodref          #2.#714       // org/sireum/HashMap.$anonfun$keys$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
  #716 = NameAndType        #586:#575     // $anonfun$values$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
  #717 = Methodref          #2.#716       // org/sireum/HashMap.$anonfun$values$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
  #718 = NameAndType        #589:#590     // $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #719 = Methodref          #2.#718       // org/sireum/HashMap.$anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #720 = NameAndType        #597:#575     // $anonfun$ensureCapacity$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
  #721 = Methodref          #2.#720       // org/sireum/HashMap.$anonfun$ensureCapacity$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
  #722 = NameAndType        #603:#604     // $anonfun$$minus$minus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #723 = Methodref          #2.#722       // org/sireum/HashMap.$anonfun$$minus$minus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #724 = NameAndType        #680:#681     // $anonfun$isEqual$1:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
  #725 = Methodref          #2.#724       // org/sireum/HashMap.$anonfun$isEqual$1:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
  #726 = NameAndType        #691:#692     // $anonfun$isEqual$3:(Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
  #727 = Methodref          #2.#726       // org/sireum/HashMap.$anonfun$isEqual$3:(Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
  #728 = NameAndType        #595:#590     // $anonfun$ensureCapacity$2:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #729 = Methodref          #2.#728       // org/sireum/HashMap.$anonfun$ensureCapacity$2:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #730 = NameAndType        #662:#663     // $anonfun$isEqual$2:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
  #731 = Methodref          #2.#730       // org/sireum/HashMap.$anonfun$isEqual$2:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
  #732 = NameAndType        #688:#689     // $anonfun$isEqual$4:(Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
  #733 = Methodref          #2.#732       // org/sireum/HashMap.$anonfun$isEqual$4:(Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
  #734 = Utf8               $deserializeLambda$
  #735 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #736 = Utf8               scala/runtime/LambdaDeserialize
  #737 = Class              #736          // scala/runtime/LambdaDeserialize
  #738 = Utf8               bootstrap
  #739 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #740 = NameAndType        #738:#739     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #741 = Methodref          #737.#740     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #742 = MethodHandle       6:#741        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #743 = Utf8               lambdaDeserialize
  #744 = NameAndType        #743:#735     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #745 = InvokeDynamic      #12:#744      // #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #746 = Utf8               Signature
  #747 = Utf8               Code
  #748 = Utf8               LocalVariableTable
  #749 = Utf8               MethodParameters
  #750 = Utf8               LineNumberTable
  #751 = Utf8               StackMapTable
  #752 = Utf8               InnerClasses
  #753 = Utf8               SourceFile
  #754 = Utf8               RuntimeVisibleAnnotations
  #755 = Utf8               BootstrapMethods
  #756 = Utf8               ScalaInlineInfo
  #757 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #53                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.Map<K, T>> _mapEntries;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #56                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;

  private final org.sireum.Z _size;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static <K extends java.lang.Object, T extends java.lang.Object> scala.Some<scala.Tuple2<org.sireum.IS<org.sireum.Z, org.sireum.Map<K, T>>, org.sireum.Z>> unapply(org.sireum.HashMap<K, T>);
    descriptor: (Lorg/sireum/HashMap;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #70                 // Field org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
         3: aload_0
         4: invokevirtual #72                 // Method org/sireum/HashMap$.unapply:(Lorg/sireum/HashMap;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/HashMap;
    Signature: #63                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashMap<TK;TT;>;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashMap<K, T> emptyInit(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/HashMap;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #70                 // Field org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
         3: aload_0
         4: invokevirtual #79                 // Method org/sireum/HashMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 initialCapacity   Lorg/sireum/Z;
    Signature: #76                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      initialCapacity                final

  public static <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashMap<K, T> empty();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #70                 // Field org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
         3: invokevirtual #84                 // Method org/sireum/HashMap$.empty:()Lorg/sireum/HashMap;
         6: areturn
    Signature: #82                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/HashMap<TK;TT;>;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #92                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #99                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #103                // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #111                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  public org.sireum.IS<org.sireum.Z, org.sireum.Map<K, T>> mapEntries();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #116                // Field _mapEntries:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;
    Signature: #114                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.Map<K, T>> getMapEntries();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #116                // Field _mapEntries:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;
    Signature: #114                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;

  public org.sireum.Z size();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #121                // Field _size:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  public org.sireum.Z getSize();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #121                // Field _size:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #127                // Method string:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #131                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     37
        15: aload_0
        16: aload_0
        17: invokevirtual #134                // Method hash:()Lorg/sireum/Z;
        20: invokevirtual #136                // Method java/lang/Object.hashCode:()I
        23: putfield      #138                // Field hashCode:I
        26: aload_0
        27: aload_0
        28: getfield      #131                // Field bitmap$0:B
        31: iconst_1
        32: ior
        33: i2b
        34: putfield      #131                // Field bitmap$0:B
        37: aload_1
        38: monitorexit
        39: goto          45
        42: aload_1
        43: monitorexit
        44: athrow
        45: aload_0
        46: getfield      #138                // Field hashCode:I
        49: ireturn
      Exception table:
         from    to  target type
             4    37    42   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class org/sireum/HashMap ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lorg/sireum/HashMap;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #131                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #142                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #138                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashMap;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     9
         5: iconst_1
         6: goto          46
         9: aload_1
        10: astore_3
        11: aload_3
        12: instanceof    #2                  // class org/sireum/HashMap
        15: ifeq          40
        18: aload_3
        19: checkcast     #2                  // class org/sireum/HashMap
        22: astore        4
        24: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        27: aload_0
        28: aload         4
        30: invokevirtual #153                // Method isEqual:(Lorg/sireum/HashMap;)Z
        33: invokevirtual #157                // Method org/sireum/B$.$4B:(Z)Z
        36: istore_2
        37: goto          45
        40: goto          43
        43: iconst_0
        44: ireturn
        45: iload_2
        46: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/HashMap, class java/lang/Object, int, class java/lang/Object, class org/sireum/HashMap ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashMap, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/sireum/HashMap;
            0      47     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.HashMap<K, T> apply(org.sireum.IS<org.sireum.Z, org.sireum.Map<K, T>>, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/sireum/HashMap
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #165                // Method "<init>":(Lorg/sireum/IS;Lorg/sireum/Z;)V
         9: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/HashMap;
            0      10     1 mapEntries   Lorg/sireum/IS;
            0      10     2  size   Lorg/sireum/Z;
    Signature: #161                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      mapEntries                     final
      size                           final

  public org.sireum.IS<org.sireum.Z, org.sireum.Map<K, T>> apply$default$1();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;
    Signature: #114                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;

  public org.sireum.Z apply$default$2();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #171                // Method size:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #131                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     136
        15: aload_0
        16: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #183                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_3
        26: anewarray     #190                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #190                // class scala/Tuple2
        34: dup
        35: ldc           #192                // String type
        37: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #196                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #198                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #200                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #202                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #204                // String HashMap
        64: aastore
        65: checkcast     #206                // class "[Ljava/lang/Object;"
        68: invokevirtual #210                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #215                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #218                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #190                // class scala/Tuple2
        83: dup
        84: ldc           #219                // String mapEntries
        86: aload_0
        87: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
        90: invokespecial #218                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: aastore
        94: dup
        95: iconst_2
        96: new           #190                // class scala/Tuple2
        99: dup
       100: ldc           #220                // String size
       102: aload_0
       103: invokevirtual #171                // Method size:()Lorg/sireum/Z;
       106: invokespecial #218                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       109: aastore
       110: checkcast     #206                // class "[Ljava/lang/Object;"
       113: invokevirtual #210                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       116: invokevirtual #225                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       119: checkcast     #227                // class scala/collection/immutable/Seq
       122: putfield      #229                // Field $content:Lscala/collection/immutable/Seq;
       125: aload_0
       126: aload_0
       127: getfield      #131                // Field bitmap$0:B
       130: iconst_2
       131: ior
       132: i2b
       133: putfield      #131                // Field bitmap$0:B
       136: aload_1
       137: monitorexit
       138: goto          144
       141: aload_1
       142: monitorexit
       143: athrow
       144: aload_0
       145: getfield      #229                // Field $content:Lscala/collection/immutable/Seq;
       148: areturn
      Exception table:
         from    to  target type
             4   136   141   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 136
          locals = [ class org/sireum/HashMap ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     149     0  this   Lorg/sireum/HashMap;
    Signature: #174                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #131                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #231                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #229                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashMap;
    Signature: #174                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>> entries();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #242                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         6: getstatic     #247                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #250                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        12: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        15: astore_1
        16: aload_0
        17: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
        20: aload_1
        21: invokedynamic #277,  0            // InvokeDynamic #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        26: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        29: aload_1
        30: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        33: checkcast     #279                // class org/sireum/IS
        36: areturn
      LineNumberTable:
        line 49: 0
        line 50: 16
        line 55: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      21     1     r   Lscala/runtime/ObjectRef;
            0      37     0  this   Lorg/sireum/HashMap;
    Signature: #233                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;

  public org.sireum.IS<org.sireum.Z, K> keys();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #242                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         6: getstatic     #247                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #250                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        12: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        15: astore_1
        16: aload_0
        17: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
        20: aload_1
        21: invokedynamic #295,  0            // InvokeDynamic #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        26: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        29: aload_1
        30: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        33: checkcast     #279                // class org/sireum/IS
        36: areturn
      LineNumberTable:
        line 59: 0
        line 60: 16
        line 65: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      21     1     r   Lscala/runtime/ObjectRef;
            0      37     0  this   Lorg/sireum/HashMap;
    Signature: #290                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TK;>;

  public org.sireum.IS<org.sireum.Z, T> values();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #242                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         6: getstatic     #247                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #250                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        12: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        15: astore_1
        16: aload_0
        17: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
        20: aload_1
        21: invokedynamic #302,  0            // InvokeDynamic #2:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        26: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        29: aload_1
        30: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        33: checkcast     #279                // class org/sireum/IS
        36: areturn
      LineNumberTable:
        line 69: 0
        line 70: 16
        line 75: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      21     1     r   Lscala/runtime/ObjectRef;
            0      37     0  this   Lorg/sireum/HashMap;
    Signature: #297                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  public org.sireum.Set<K> keySet();
    descriptor: ()Lorg/sireum/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #310                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
         3: invokevirtual #312                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
         6: aload_0
         7: invokevirtual #314                // Method keys:()Lorg/sireum/IS;
        10: invokevirtual #320                // Method org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
        13: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/HashMap;
    Signature: #305                         // ()Lorg/sireum/Set<TK;>;

  public org.sireum.Set<T> valueSet();
    descriptor: ()Lorg/sireum/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #310                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
         3: invokevirtual #312                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
         6: aload_0
         7: invokevirtual #324                // Method values:()Lorg/sireum/IS;
        10: invokevirtual #320                // Method org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
        13: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/HashMap;
    Signature: #322                         // ()Lorg/sireum/Set<TT;>;

  public org.sireum.HashMap<K, T> $plus(scala.Tuple2<K, T>);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=15, args_size=2
         0: aload_1
         1: astore        6
         3: new           #190                // class scala/Tuple2
         6: dup
         7: getstatic     #333                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        10: aload         6
        12: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
        15: invokevirtual #340                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        18: getstatic     #333                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        21: aload         6
        23: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
        26: invokevirtual #340                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        29: invokespecial #218                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        32: astore        5
        34: aload         5
        36: ifnull        68
        39: aload         5
        41: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
        44: astore        7
        46: aload         5
        48: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
        51: astore        8
        53: new           #190                // class scala/Tuple2
        56: dup
        57: aload         7
        59: aload         8
        61: invokespecial #218                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        64: astore_2
        65: goto          81
        68: goto          71
        71: new           #345                // class scala/MatchError
        74: dup
        75: aload         5
        77: invokespecial #348                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        80: athrow
        81: aload_2
        82: astore        4
        84: new           #190                // class scala/Tuple2
        87: dup
        88: getstatic     #333                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        91: aload         4
        93: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
        96: invokevirtual #340                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        99: getstatic     #333                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       102: aload         4
       104: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
       107: invokevirtual #340                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       110: invokespecial #218                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       113: astore_3
       114: aload_3
       115: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
       118: astore        9
       120: aload_3
       121: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
       124: astore        10
       126: aload_0
       127: aload_0
       128: invokevirtual #171                // Method size:()Lorg/sireum/Z;
       131: getstatic     #353                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       134: iconst_1
       135: invokevirtual #356                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       138: invokeinterface #359,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       143: invokevirtual #362                // Method ensureCapacity:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
       146: astore        11
       148: aload         11
       150: aload         9
       152: invokevirtual #366                // Method hashIndex:(Ljava/lang/Object;)Lorg/sireum/Z;
       155: astore        12
       157: aload         11
       159: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
       162: aload         12
       164: invokevirtual #368                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       167: checkcast     #370                // class org/sireum/Map
       170: astore        13
       172: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       175: aload         13
       177: aload         9
       179: invokevirtual #373                // Method org/sireum/Map.contains:(Ljava/lang/Object;)Z
       182: invokevirtual #157                // Method org/sireum/B$.$4B:(Z)Z
       185: ifeq          195
       188: aload_0
       189: invokevirtual #171                // Method size:()Lorg/sireum/Z;
       192: goto          211
       195: aload_0
       196: invokevirtual #171                // Method size:()Lorg/sireum/Z;
       199: getstatic     #353                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       202: iconst_1
       203: invokevirtual #356                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       206: invokeinterface #359,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       211: astore        14
       213: aload         11
       215: aload         11
       217: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
       220: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       223: iconst_1
       224: anewarray     #190                // class scala/Tuple2
       227: dup
       228: iconst_0
       229: getstatic     #376                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
       232: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       235: aload         12
       237: invokevirtual #379                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
       240: aload         13
       242: getstatic     #376                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
       245: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       248: aload         9
       250: invokevirtual #379                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
       253: aload         10
       255: invokevirtual #383                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       258: invokevirtual #386                // Method org/sireum/Map.$plus:(Lscala/Tuple2;)Lorg/sireum/Map;
       261: invokevirtual #383                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       264: aastore
       265: checkcast     #206                // class "[Ljava/lang/Object;"
       268: invokevirtual #210                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       271: invokevirtual #387                // Method org/sireum/IS.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       274: aload         14
       276: invokevirtual #389                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
       279: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class org/sireum/HashMap, class scala/Tuple2, top, top, top, class scala/Tuple2, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/HashMap, class scala/Tuple2, class scala/Tuple2, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 113
          locals = [ class org/sireum/HashMap, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object, class java/lang/Object, class java/lang/Object, class org/sireum/HashMap, class org/sireum/Z, class org/sireum/Map ]
          stack = []
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 87: 0
        line 88: 126
        line 89: 148
        line 90: 157
        line 91: 172
        line 92: 213
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      29     6     x   Lscala/Tuple2;
           46      22     7   key   Ljava/lang/Object;
           53      15     8 value   Ljava/lang/Object;
           84      29     4     x   Lscala/Tuple2;
          120     160     9   key   Ljava/lang/Object;
          126     154    10 value   Ljava/lang/Object;
          148     132    11     r   Lorg/sireum/HashMap;
          157     123    12     i   Lorg/sireum/Z;
          172     108    13     m   Lorg/sireum/Map;
          213      67    14 newSize   Lorg/sireum/Z;
            0     280     0  this   Lorg/sireum/HashMap;
            0     280     1     p   Lscala/Tuple2;
    Signature: #327                         // (Lscala/Tuple2<TK;TT;>;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public <I extends java.lang.Object> org.sireum.HashMap<K, T> $plus$plus(org.sireum.IS<I, scala.Tuple2<K, T>>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #402                // Method org/sireum/IS.isEmpty:()Z
         7: invokevirtual #157                // Method org/sireum/B$.$4B:(Z)Z
        10: ifeq          15
        13: aload_0
        14: areturn
        15: aload_0
        16: aload_0
        17: invokevirtual #171                // Method size:()Lorg/sireum/Z;
        20: aload_1
        21: invokevirtual #403                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        24: invokeinterface #359,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        29: invokevirtual #362                // Method ensureCapacity:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
        32: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        35: astore_2
        36: aload_1
        37: aload_2
        38: invokedynamic #411,  0            // InvokeDynamic #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        43: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        46: aload_2
        47: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        50: checkcast     #2                  // class org/sireum/HashMap
        53: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 96: 0
        line 97: 13
        line 99: 15
        line 100: 36
        line 103: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           36      18     2     r   Lscala/runtime/ObjectRef;
            0      54     0  this   Lorg/sireum/HashMap;
            0      54     1 entries   Lorg/sireum/IS;
    Signature: #399                         // <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      entries                        final

  public org.sireum.HashMap<K, T> ensureCapacity(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
         7: invokevirtual #403                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        10: getstatic     #353                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        13: iconst_3
        14: invokevirtual #356                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        17: invokeinterface #416,  2          // InterfaceMethod org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
        22: getstatic     #353                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        25: iconst_4
        26: invokevirtual #356                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        29: invokeinterface #419,  2          // InterfaceMethod org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
        34: aload_1
        35: invokeinterface #423,  2          // InterfaceMethod org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
        40: invokevirtual #157                // Method org/sireum/B$.$4B:(Z)Z
        43: ifeq          48
        46: aload_0
        47: areturn
        48: aload_1
        49: getstatic     #353                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        52: iconst_2
        53: invokevirtual #356                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        56: invokeinterface #416,  2          // InterfaceMethod org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
        61: astore_2
        62: getstatic     #70                 // Field org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
        65: aload_2
        66: invokevirtual #79                 // Method org/sireum/HashMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
        69: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        72: astore_3
        73: aload_0
        74: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
        77: aload_3
        78: invokedynamic #428,  0            // InvokeDynamic #4:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        83: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        86: aload_3
        87: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        90: checkcast     #2                  // class org/sireum/HashMap
        93: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 48 /* same */
      LineNumberTable:
        line 107: 0
        line 108: 46
        line 110: 48
        line 111: 62
        line 112: 73
        line 117: 86
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           62      32     2  init   Lorg/sireum/Z;
           73      21     3     r   Lscala/runtime/ObjectRef;
            0      94     0  this   Lorg/sireum/HashMap;
            0      94     1    sz   Lorg/sireum/Z;
    Signature: #412                         // (Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      sz                             final

  public org.sireum.Z hashIndex(K);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
         4: invokevirtual #403                // Method org/sireum/IS.size:()Lorg/sireum/Z;
         7: astore_2
         8: getstatic     #353                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        11: aload_1
        12: invokevirtual #136                // Method java/lang/Object.hashCode:()I
        15: invokevirtual #356                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        18: aload_2
        19: invokeinterface #433,  2          // InterfaceMethod org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
        24: astore_3
        25: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        28: aload_3
        29: getstatic     #353                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        32: iconst_0
        33: invokevirtual #356                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        36: invokeinterface #436,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        41: invokevirtual #157                // Method org/sireum/B$.$4B:(Z)Z
        44: ifeq          57
        47: aload_3
        48: aload_2
        49: invokeinterface #359,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        54: goto          58
        57: aload_3
        58: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 57
          locals = [ class org/sireum/Z, class org/sireum/Z ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 121: 0
        line 122: 8
        line 123: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      51     2    sz   Lorg/sireum/Z;
           25      34     3     i   Lorg/sireum/Z;
            0      59     0  this   Lorg/sireum/HashMap;
            0      59     1   key   Ljava/lang/Object;
    Signature: #430                         // (TK;)Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      key                            final

  public org.sireum.Option<T> get(K);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
         4: aload_0
         5: aload_1
         6: invokevirtual #366                // Method hashIndex:(Ljava/lang/Object;)Lorg/sireum/Z;
         9: invokevirtual #368                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        12: checkcast     #370                // class org/sireum/Map
        15: astore_2
        16: aload_2
        17: aload_1
        18: invokevirtual #441                // Method org/sireum/Map.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        21: areturn
      LineNumberTable:
        line 127: 0
        line 128: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16       6     2     m   Lorg/sireum/Map;
            0      22     0  this   Lorg/sireum/HashMap;
            0      22     1   key   Ljava/lang/Object;
    Signature: #439                         // (TK;)Lorg/sireum/Option<TT;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public org.sireum.Option<scala.Tuple2<K, T>> entry(K);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
         4: aload_0
         5: aload_1
         6: invokevirtual #366                // Method hashIndex:(Ljava/lang/Object;)Lorg/sireum/Z;
         9: invokevirtual #368                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        12: checkcast     #370                // class org/sireum/Map
        15: astore_2
        16: aload_2
        17: aload_1
        18: invokevirtual #445                // Method org/sireum/Map.entry:(Ljava/lang/Object;)Lorg/sireum/Option;
        21: areturn
      LineNumberTable:
        line 132: 0
        line 133: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16       6     2     m   Lorg/sireum/Map;
            0      22     0  this   Lorg/sireum/HashMap;
            0      22     1   key   Ljava/lang/Object;
    Signature: #443                         // (TK;)Lorg/sireum/Option<Lscala/Tuple2<TK;TT;>;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public <I extends java.lang.Object> org.sireum.HashMap<K, T> $minus$minus(org.sireum.IS<I, K>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         4: astore_2
         5: aload_1
         6: aload_2
         7: invokedynamic #453,  0            // InvokeDynamic #5:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        12: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        15: aload_2
        16: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: checkcast     #2                  // class org/sireum/HashMap
        22: areturn
      LineNumberTable:
        line 137: 0
        line 138: 5
        line 144: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      18     2     r   Lscala/runtime/ObjectRef;
            0      23     0  this   Lorg/sireum/HashMap;
            0      23     1  keys   Lorg/sireum/IS;
    Signature: #447                         // <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TK;>;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      keys                           final

  public org.sireum.HashMap<K, T> $minus(scala.Tuple2<K, T>);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=12, args_size=2
         0: aload_1
         1: astore        6
         3: new           #190                // class scala/Tuple2
         6: dup
         7: getstatic     #333                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        10: aload         6
        12: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
        15: invokevirtual #340                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        18: getstatic     #333                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        21: aload         6
        23: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
        26: invokevirtual #340                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        29: invokespecial #218                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        32: astore        5
        34: aload         5
        36: ifnull        68
        39: aload         5
        41: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
        44: astore        7
        46: aload         5
        48: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
        51: astore        8
        53: new           #190                // class scala/Tuple2
        56: dup
        57: aload         7
        59: aload         8
        61: invokespecial #218                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        64: astore_2
        65: goto          81
        68: goto          71
        71: new           #345                // class scala/MatchError
        74: dup
        75: aload         5
        77: invokespecial #348                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        80: athrow
        81: aload_2
        82: astore        4
        84: new           #190                // class scala/Tuple2
        87: dup
        88: getstatic     #333                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        91: aload         4
        93: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
        96: invokevirtual #340                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        99: getstatic     #333                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       102: aload         4
       104: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
       107: invokevirtual #340                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       110: invokespecial #218                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       113: astore_3
       114: aload_3
       115: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
       118: astore        9
       120: aload_3
       121: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
       124: astore        10
       126: aload_0
       127: aload         9
       129: invokevirtual #366                // Method hashIndex:(Ljava/lang/Object;)Lorg/sireum/Z;
       132: astore        11
       134: aload_0
       135: aload_0
       136: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
       139: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       142: iconst_1
       143: anewarray     #190                // class scala/Tuple2
       146: dup
       147: iconst_0
       148: getstatic     #376                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
       151: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       154: aload         11
       156: invokevirtual #379                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
       159: aload_0
       160: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
       163: aload         11
       165: invokevirtual #368                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       168: checkcast     #370                // class org/sireum/Map
       171: getstatic     #376                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
       174: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       177: aload         9
       179: invokevirtual #379                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
       182: aload         10
       184: invokevirtual #383                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       187: invokevirtual #456                // Method org/sireum/Map.$minus:(Lscala/Tuple2;)Lorg/sireum/Map;
       190: invokevirtual #383                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       193: aastore
       194: checkcast     #206                // class "[Ljava/lang/Object;"
       197: invokevirtual #210                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       200: invokevirtual #387                // Method org/sireum/IS.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       203: aload_0
       204: invokevirtual #171                // Method size:()Lorg/sireum/Z;
       207: getstatic     #353                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       210: iconst_1
       211: invokevirtual #356                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       214: invokeinterface #458,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       219: invokevirtual #389                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
       222: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class org/sireum/HashMap, class scala/Tuple2, top, top, top, class scala/Tuple2, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/HashMap, class scala/Tuple2, class scala/Tuple2, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 148: 0
        line 149: 126
        line 150: 134
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      29     6     x   Lscala/Tuple2;
           46      22     7   key   Ljava/lang/Object;
           53      15     8 value   Ljava/lang/Object;
           84      29     4     x   Lscala/Tuple2;
          120     103     9   key   Ljava/lang/Object;
          126      97    10 value   Ljava/lang/Object;
          134      89    11     i   Lorg/sireum/Z;
            0     223     0  this   Lorg/sireum/HashMap;
            0     223     1     p   Lscala/Tuple2;
    Signature: #327                         // (Lscala/Tuple2<TK;TT;>;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public boolean contains(K);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #460                // Method get:(Ljava/lang/Object;)Lorg/sireum/Option;
         5: invokeinterface #465,  1          // InterfaceMethod org/sireum/Option.nonEmpty:()Z
        10: ireturn
      LineNumberTable:
        line 154: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/HashMap;
            0      11     1   key   Ljava/lang/Object;
    Signature: #459                         // (TK;)Z
    MethodParameters:
      Name                           Flags
      key                            final

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #171                // Method size:()Lorg/sireum/Z;
         7: getstatic     #468                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
        10: ldc_w         #470                // String 0
        13: invokevirtual #473                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        16: astore_1
        17: dup
        18: ifnonnull     29
        21: pop
        22: aload_1
        23: ifnull        36
        26: goto          40
        29: aload_1
        30: invokevirtual #475                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        33: ifeq          40
        36: iconst_1
        37: goto          41
        40: iconst_0
        41: invokevirtual #477                // Method org/sireum/B$.apply:(Z)Z
        44: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/sireum/HashMap, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashMap, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/HashMap;

  public boolean nonEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #171                // Method size:()Lorg/sireum/Z;
         7: getstatic     #468                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
        10: ldc_w         #470                // String 0
        13: invokevirtual #473                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        16: astore_1
        17: dup
        18: ifnonnull     29
        21: pop
        22: aload_1
        23: ifnull        40
        26: goto          36
        29: aload_1
        30: invokevirtual #475                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        33: ifne          40
        36: iconst_1
        37: goto          41
        40: iconst_0
        41: invokevirtual #477                // Method org/sireum/B$.apply:(Z)Z
        44: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/sireum/HashMap, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashMap, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 162: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/HashMap;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=2, args_size=1
         0: getstatic     #482                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
         6: invokevirtual #183                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         9: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        12: iconst_2
        13: anewarray     #198                // class java/lang/String
        16: dup
        17: iconst_0
        18: ldc_w         #484                // String {\n      |
        21: aastore
        22: dup
        23: iconst_1
        24: ldc_w         #486                // String \n      |}
        27: aastore
        28: checkcast     #206                // class "[Ljava/lang/Object;"
        31: invokevirtual #210                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        34: invokevirtual #225                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        37: checkcast     #227                // class scala/collection/immutable/Seq
        40: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
        43: invokevirtual #183                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        46: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        49: iconst_1
        50: anewarray     #31                 // class org/sireum/ST$Arg
        53: dup
        54: iconst_0
        55: getstatic     #489                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
        58: aload_0
        59: invokevirtual #491                // Method entries:()Lorg/sireum/IS;
        62: invokedynamic #500,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
        67: invokevirtual #504                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        70: invokevirtual #507                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
        73: getstatic     #512                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        76: ldc_w         #514                // String ,\n
        79: invokevirtual #517                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        82: invokevirtual #520                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
        85: aastore
        86: checkcast     #206                // class "[Ljava/lang/Object;"
        89: invokevirtual #210                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        92: invokevirtual #225                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        95: checkcast     #227                // class scala/collection/immutable/Seq
        98: ldc_w         #522                // String       st\"\"\"{\n      |  ${(for (e <- entries) yield st\"${e._1} -> ${e._2}\", \",\\n\")}\n      |}\"\"\"
       101: invokevirtual #525                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       104: astore_1
       105: aload_1
       106: invokevirtual #528                // Method org/sireum/ST.render:()Ljava/lang/String;
       109: areturn
      LineNumberTable:
        line 167: 0
        line 168: 24
        line 167: 40
        line 168: 58
        line 167: 98
        line 170: 105
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          105       5     1     r   Lorg/sireum/ST;
            0     110     0  this   Lorg/sireum/HashMap;

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #171                // Method size:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  public boolean isEqual(org.sireum.HashMap<K, T>);
    descriptor: (Lorg/sireum/HashMap;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: new           #5                  // class java/lang/Object
         3: dup
         4: invokespecial #536                // Method java/lang/Object."<init>":()V
         7: astore_2
         8: aload_0
         9: invokevirtual #171                // Method size:()Lorg/sireum/Z;
        12: aload_1
        13: invokevirtual #171                // Method size:()Lorg/sireum/Z;
        16: astore_3
        17: dup
        18: ifnonnull     29
        21: pop
        22: aload_3
        23: ifnull        43
        26: goto          36
        29: aload_3
        30: invokevirtual #475                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        33: ifne          43
        36: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        39: invokevirtual #539                // Method org/sireum/package$.F:()Z
        42: ireturn
        43: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        46: invokevirtual #242                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        49: getstatic     #247                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        52: invokevirtual #250                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        55: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        58: astore        4
        60: aload_0
        61: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
        64: aload         4
        66: aload_1
        67: aload_2
        68: invokedynamic #547,  0            // InvokeDynamic #7:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
        73: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        76: aload_1
        77: aload         4
        79: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        82: checkcast     #279                // class org/sireum/IS
        85: invokevirtual #549                // Method $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashMap;
        88: invokevirtual #168                // Method mapEntries:()Lorg/sireum/IS;
        91: aload_0
        92: aload_2
        93: invokedynamic #557,  0            // InvokeDynamic #8:apply:(Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
        98: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       101: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       104: invokevirtual #560                // Method org/sireum/package$.T:()Z
       107: ireturn
       108: astore        5
       110: aload         5
       112: invokevirtual #562                // Method scala/runtime/NonLocalReturnControl.key:()Ljava/lang/Object;
       115: aload_2
       116: if_acmpne     133
       119: aload         5
       121: invokevirtual #564                // Method scala/runtime/NonLocalReturnControl.value:()Ljava/lang/Object;
       124: checkcast     #566                // class org/sireum/B
       127: invokevirtual #568                // Method org/sireum/B.value:()Z
       130: goto          136
       133: aload         5
       135: athrow
       136: goto          139
       139: ireturn
      Exception table:
         from    to  target type
             8   108   108   Class scala/runtime/NonLocalReturnControl
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/sireum/HashMap, class org/sireum/HashMap, class java/lang/Object, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class org/sireum/HashMap, class org/sireum/HashMap, class java/lang/Object ]
          stack = [ class scala/runtime/NonLocalReturnControl ]
        frame_type = 254 /* append */
          offset_delta = 24
          locals = [ top, top, class scala/runtime/NonLocalReturnControl ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 177: 0
        line 178: 8
        line 179: 36
        line 182: 43
        line 183: 60
        line 196: 76
        line 209: 101
        line 177: 110
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           60      48     4 comparedKeys   Lscala/runtime/ObjectRef;
          108      28     5    ex   Lscala/runtime/NonLocalReturnControl;
            0     140     0  this   Lorg/sireum/HashMap;
            0     140     1 other   Lorg/sireum/HashMap;
    Signature: #530                         // (Lorg/sireum/HashMap<TK;TT;>;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #573                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap;

  public static final void $anonfun$entries$1(scala.runtime.ObjectRef, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #578                // Method org/sireum/Map.nonEmpty:()Z
         7: invokevirtual #157                // Method org/sireum/B$.$4B:(Z)Z
        10: ifeq          34
        13: aload_0
        14: aload_0
        15: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        18: checkcast     #279                // class org/sireum/IS
        21: aload_1
        22: invokevirtual #579                // Method org/sireum/Map.entries:()Lorg/sireum/IS;
        25: invokevirtual #582                // Method org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        28: putfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        31: goto          34
        34: return
      StackMapTable: number_of_entries = 1
        frame_type = 34 /* same */
      LineNumberTable:
        line 51: 0
        line 52: 13
        line 51: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0   r$1   Lscala/runtime/ObjectRef;
            0      35     1    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      r$1                            final
      ms                             final

  public static final void $anonfun$keys$1(scala.runtime.ObjectRef, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #578                // Method org/sireum/Map.nonEmpty:()Z
         7: invokevirtual #157                // Method org/sireum/B$.$4B:(Z)Z
        10: ifeq          34
        13: aload_0
        14: aload_0
        15: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        18: checkcast     #279                // class org/sireum/IS
        21: aload_1
        22: invokevirtual #585                // Method org/sireum/Map.keys:()Lorg/sireum/IS;
        25: invokevirtual #582                // Method org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        28: putfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        31: goto          34
        34: return
      StackMapTable: number_of_entries = 1
        frame_type = 34 /* same */
      LineNumberTable:
        line 61: 0
        line 62: 13
        line 61: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0   r$2   Lscala/runtime/ObjectRef;
            0      35     1    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      r$2                            final
      ms                             final

  public static final void $anonfun$values$1(scala.runtime.ObjectRef, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #149                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #578                // Method org/sireum/Map.nonEmpty:()Z
         7: invokevirtual #157                // Method org/sireum/B$.$4B:(Z)Z
        10: ifeq          34
        13: aload_0
        14: aload_0
        15: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        18: checkcast     #279                // class org/sireum/IS
        21: aload_1
        22: invokevirtual #588                // Method org/sireum/Map.values:()Lorg/sireum/IS;
        25: invokevirtual #582                // Method org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        28: putfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        31: goto          34
        34: return
      StackMapTable: number_of_entries = 1
        frame_type = 34 /* same */
      LineNumberTable:
        line 71: 0
        line 72: 13
        line 71: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0   r$3   Lscala/runtime/ObjectRef;
            0      35     1    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      r$3                            final
      ms                             final

  public static final void $anonfun$$plus$plus$1(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class org/sireum/HashMap
         8: getstatic     #376                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        11: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        14: aload_1
        15: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
        18: invokevirtual #379                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        21: aload_1
        22: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
        25: invokevirtual #383                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        28: invokevirtual #594                // Method $plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        31: putfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        34: return
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0   r$4   Lscala/runtime/ObjectRef;
            0      35     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$4                            final
      kv                             final

  public static final void $anonfun$ensureCapacity$2(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class org/sireum/HashMap
         8: getstatic     #376                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        11: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        14: aload_1
        15: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
        18: invokevirtual #379                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        21: aload_1
        22: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
        25: invokevirtual #383                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        28: invokevirtual #594                // Method $plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        31: putfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        34: return
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0   r$5   Lscala/runtime/ObjectRef;
            0      35     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$5                            final
      kv                             final

  public static final void $anonfun$ensureCapacity$1(scala.runtime.ObjectRef, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #579                // Method org/sireum/Map.entries:()Lorg/sireum/IS;
         4: aload_0
         5: invokedynamic #602,  0            // InvokeDynamic #9:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        10: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        13: return
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   r$5   Lscala/runtime/ObjectRef;
            0      14     1    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      r$5                            final
      ms                             final

  public static final void $anonfun$$minus$minus$1(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=7, args_size=2
         0: aload_0
         1: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #2                  // class org/sireum/HashMap
         7: aload_1
         8: invokevirtual #460                // Method get:(Ljava/lang/Object;)Lorg/sireum/Option;
        11: astore_3
        12: aload_3
        13: instanceof    #608                // class org/sireum/Some
        16: ifeq          89
        19: aload_3
        20: checkcast     #608                // class org/sireum/Some
        23: astore        4
        25: getstatic     #613                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        28: aload         4
        30: invokevirtual #616                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        33: astore        5
        35: aload         5
        37: invokevirtual #619                // Method scala/Some.isEmpty:()Z
        40: ifne          86
        43: aload         5
        45: invokevirtual #621                // Method scala/Some.get:()Ljava/lang/Object;
        48: astore        6
        50: aload_0
        51: aload_0
        52: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        55: checkcast     #2                  // class org/sireum/HashMap
        58: getstatic     #376                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        61: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        64: aload_1
        65: invokevirtual #379                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        68: aload         6
        70: invokevirtual #383                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        73: invokevirtual #623                // Method $minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        76: putfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        79: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        82: astore_2
        83: goto          99
        86: goto          92
        89: goto          92
        92: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        95: astore_2
        96: goto          99
        99: return
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 86
          locals = [ class scala/runtime/ObjectRef, class java/lang/Object, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/runtime/ObjectRef, class java/lang/Object, class scala/runtime/BoxedUnit, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 139: 0
        line 140: 12
        line 139: 43
        line 140: 50
        line 141: 92
        line 139: 99
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           50      36     6     v   Ljava/lang/Object;
            0     100     0   r$6   Lscala/runtime/ObjectRef;
            0     100     1     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$6                            final
      k                              final

  public static final org.sireum.ST $anonfun$string$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/ST;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=15, locals=1, args_size=1
         0: getstatic     #482                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
         6: invokevirtual #183                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         9: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        12: iconst_3
        13: anewarray     #198                // class java/lang/String
        16: dup
        17: iconst_0
        18: getstatic     #636                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        21: ldc_w         #638                // String
        24: invokevirtual #641                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        27: aastore
        28: dup
        29: iconst_1
        30: getstatic     #636                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        33: ldc_w         #643                // String  ->
        36: invokevirtual #641                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        39: aastore
        40: dup
        41: iconst_2
        42: getstatic     #636                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        45: ldc_w         #638                // String
        48: invokevirtual #641                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        51: aastore
        52: checkcast     #206                // class "[Ljava/lang/Object;"
        55: invokevirtual #210                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        58: invokevirtual #225                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        61: checkcast     #227                // class scala/collection/immutable/Seq
        64: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
        67: invokevirtual #183                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        70: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        73: iconst_2
        74: anewarray     #31                 // class org/sireum/ST$Arg
        77: dup
        78: iconst_0
        79: getstatic     #646                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
        82: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
        85: invokevirtual #183                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        88: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        91: iconst_1
        92: anewarray     #5                  // class java/lang/Object
        95: dup
        96: iconst_0
        97: getstatic     #651                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       100: aload_0
       101: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
       104: invokevirtual #652                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       107: aastore
       108: invokevirtual #656                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       111: invokevirtual #225                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       114: checkcast     #227                // class scala/collection/immutable/Seq
       117: ldc_w         #638                // String
       120: invokevirtual #659                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       123: aastore
       124: dup
       125: iconst_1
       126: getstatic     #646                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
       129: getstatic     #179                // Field scala/package$.MODULE$:Lscala/package$;
       132: invokevirtual #183                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       135: getstatic     #188                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       138: iconst_1
       139: anewarray     #5                  // class java/lang/Object
       142: dup
       143: iconst_0
       144: getstatic     #651                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       147: aload_0
       148: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
       151: invokevirtual #652                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       154: aastore
       155: invokevirtual #656                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       158: invokevirtual #225                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       161: checkcast     #227                // class scala/collection/immutable/Seq
       164: ldc_w         #638                // String
       167: invokevirtual #659                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       170: aastore
       171: checkcast     #206                // class "[Ljava/lang/Object;"
       174: invokevirtual #210                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       177: invokevirtual #225                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       180: checkcast     #227                // class scala/collection/immutable/Seq
       183: ldc_w         #661                // String                                      st\"${e._1} -> ${e._2}\"
       186: invokevirtual #525                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       189: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     190     0     e   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      e                              final

  public static final void $anonfun$isEqual$2(scala.runtime.ObjectRef, org.sireum.HashMap, java.lang.Object, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=10, args_size=4
         0: aload_3
         1: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: astore        5
         6: aload_0
         7: aload_0
         8: getfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        11: checkcast     #279                // class org/sireum/IS
        14: aload         5
        16: invokevirtual #670                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        19: putfield      #286                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        22: aload_1
        23: aload         5
        25: invokevirtual #460                // Method get:(Ljava/lang/Object;)Lorg/sireum/Option;
        28: astore        6
        30: aload         6
        32: instanceof    #608                // class org/sireum/Some
        35: ifeq          115
        38: aload         6
        40: checkcast     #608                // class org/sireum/Some
        43: astore        7
        45: getstatic     #613                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        48: aload         7
        50: invokevirtual #616                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        53: astore        8
        55: aload         8
        57: invokevirtual #619                // Method scala/Some.isEmpty:()Z
        60: ifne          112
        63: aload         8
        65: invokevirtual #621                // Method scala/Some.get:()Ljava/lang/Object;
        68: astore        9
        70: aload_3
        71: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
        74: aload         9
        76: invokestatic  #675                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        79: ifne          104
        82: new           #533                // class scala/runtime/NonLocalReturnControl
        85: dup
        86: aload_2
        87: new           #566                // class org/sireum/B
        90: dup
        91: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        94: invokevirtual #539                // Method org/sireum/package$.F:()Z
        97: invokespecial #678                // Method org/sireum/B."<init>":(Z)V
       100: invokespecial #679                // Method scala/runtime/NonLocalReturnControl."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       103: athrow
       104: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       107: astore        4
       109: goto          140
       112: goto          118
       115: goto          118
       118: new           #533                // class scala/runtime/NonLocalReturnControl
       121: dup
       122: aload_2
       123: new           #566                // class org/sireum/B
       126: dup
       127: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       130: invokevirtual #539                // Method org/sireum/package$.F:()Z
       133: invokespecial #678                // Method org/sireum/B."<init>":(Z)V
       136: invokespecial #679                // Method scala/runtime/NonLocalReturnControl."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       139: athrow
       140: return
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 104
          locals = [ class scala/runtime/ObjectRef, class org/sireum/HashMap, class java/lang/Object, class scala/Tuple2, top, class java/lang/Object, class org/sireum/Option, class org/sireum/Some, class scala/Some, class java/lang/Object ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 7
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class scala/runtime/ObjectRef, class org/sireum/HashMap, class java/lang/Object, class scala/Tuple2, class scala/runtime/BoxedUnit, class java/lang/Object, class org/sireum/Option, class org/sireum/Some, class scala/Some, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 185: 0
        line 186: 6
        line 187: 22
        line 188: 30
        line 187: 63
        line 189: 70
        line 190: 82
        line 189: 104
        line 188: 112
        line 192: 118
        line 187: 140
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           70      42     9     v   Ljava/lang/Object;
            6     134     5     k   Ljava/lang/Object;
            0     141     0 comparedKeys$1   Lscala/runtime/ObjectRef;
            0     141     1 other$1   Lorg/sireum/HashMap;
            0     141     2 nonLocalReturnKey1$1   Ljava/lang/Object;
            0     141     3    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      comparedKeys$1                 final
      other$1                        final
      nonLocalReturnKey1$1           final
      kv                             final

  public static final void $anonfun$isEqual$1(scala.runtime.ObjectRef, org.sireum.HashMap, java.lang.Object, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_3
         1: invokevirtual #579                // Method org/sireum/Map.entries:()Lorg/sireum/IS;
         4: aload_0
         5: aload_1
         6: aload_2
         7: invokedynamic #687,  0            // InvokeDynamic #10:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
        12: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        15: return
      LineNumberTable:
        line 184: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 comparedKeys$1   Lscala/runtime/ObjectRef;
            0      16     1 other$1   Lorg/sireum/HashMap;
            0      16     2 nonLocalReturnKey1$1   Ljava/lang/Object;
            0      16     3    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      comparedKeys$1                 final
      other$1                        final
      nonLocalReturnKey1$1           final
      ms                             final

  public static final void $anonfun$isEqual$4(org.sireum.HashMap, java.lang.Object, scala.Tuple2);
    descriptor: (Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=9, args_size=3
         0: aload_2
         1: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: astore        4
         6: aload_0
         7: aload         4
         9: invokevirtual #460                // Method get:(Ljava/lang/Object;)Lorg/sireum/Option;
        12: astore        5
        14: aload         5
        16: instanceof    #608                // class org/sireum/Some
        19: ifeq          98
        22: aload         5
        24: checkcast     #608                // class org/sireum/Some
        27: astore        6
        29: getstatic     #613                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        32: aload         6
        34: invokevirtual #616                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        37: astore        7
        39: aload         7
        41: invokevirtual #619                // Method scala/Some.isEmpty:()Z
        44: ifne          95
        47: aload         7
        49: invokevirtual #621                // Method scala/Some.get:()Ljava/lang/Object;
        52: astore        8
        54: aload_2
        55: invokevirtual #343                // Method scala/Tuple2._2:()Ljava/lang/Object;
        58: aload         8
        60: invokestatic  #675                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        63: ifne          88
        66: new           #533                // class scala/runtime/NonLocalReturnControl
        69: dup
        70: aload_1
        71: new           #566                // class org/sireum/B
        74: dup
        75: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        78: invokevirtual #539                // Method org/sireum/package$.F:()Z
        81: invokespecial #678                // Method org/sireum/B."<init>":(Z)V
        84: invokespecial #679                // Method scala/runtime/NonLocalReturnControl."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        87: athrow
        88: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        91: astore_3
        92: goto          123
        95: goto          101
        98: goto          101
       101: new           #533                // class scala/runtime/NonLocalReturnControl
       104: dup
       105: aload_1
       106: new           #566                // class org/sireum/B
       109: dup
       110: getstatic     #238                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       113: invokevirtual #539                // Method org/sireum/package$.F:()Z
       116: invokespecial #678                // Method org/sireum/B."<init>":(Z)V
       119: invokespecial #679                // Method scala/runtime/NonLocalReturnControl."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       122: athrow
       123: return
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 88
          locals = [ class org/sireum/HashMap, class java/lang/Object, class scala/Tuple2, top, class java/lang/Object, class org/sireum/Option, class org/sireum/Some, class scala/Some, class java/lang/Object ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class org/sireum/HashMap, class java/lang/Object, class scala/Tuple2, class scala/runtime/BoxedUnit, class java/lang/Object, class org/sireum/Option, class org/sireum/Some, class scala/Some, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 198: 0
        line 199: 6
        line 200: 14
        line 199: 47
        line 201: 54
        line 202: 66
        line 201: 88
        line 200: 95
        line 204: 101
        line 199: 123
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           54      41     8     v   Ljava/lang/Object;
            6     117     4     k   Ljava/lang/Object;
            0     124     0 $this   Lorg/sireum/HashMap;
            0     124     1 nonLocalReturnKey1$1   Ljava/lang/Object;
            0     124     2    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      nonLocalReturnKey1$1           final
      kv                             final

  public static final void $anonfun$isEqual$3(org.sireum.HashMap, java.lang.Object, org.sireum.Map);
    descriptor: (Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_2
         1: invokevirtual #579                // Method org/sireum/Map.entries:()Lorg/sireum/IS;
         4: aload_0
         5: aload_1
         6: invokedynamic #698,  0            // InvokeDynamic #11:apply:(Lorg/sireum/HashMap;Ljava/lang/Object;)Lscala/Function1;
        11: invokevirtual #283                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        14: return
      LineNumberTable:
        line 197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   Lorg/sireum/HashMap;
            0      15     1 nonLocalReturnKey1$1   Ljava/lang/Object;
            0      15     2    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      nonLocalReturnKey1$1           final
      ms                             final

  public org.sireum.HashMap(org.sireum.IS<org.sireum.Z, org.sireum.Map<K, T>>, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: invokespecial #536                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #705                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #708                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #711                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #116                // Field _mapEntries:Lorg/sireum/IS;
        21: aload_0
        22: aload_2
        23: putfield      #121                // Field _size:Lorg/sireum/Z;
        26: return
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/HashMap;
            0      27     1 __mapEntries   Lorg/sireum/IS;
            0      27     2 __size   Lorg/sireum/Z;
    Signature: #699                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;)V
    MethodParameters:
      Name                           Flags
      __mapEntries                   final
      __size                         final

  public static final java.lang.Object $anonfun$entries$1$adapted(scala.runtime.ObjectRef, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #713                // Method $anonfun$entries$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
         5: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$1   Lscala/runtime/ObjectRef;
            0       9     1    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      r$1                            final
      ms                             final

  public static final java.lang.Object $anonfun$keys$1$adapted(scala.runtime.ObjectRef, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #715                // Method $anonfun$keys$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
         5: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$2   Lscala/runtime/ObjectRef;
            0       9     1    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      r$2                            final
      ms                             final

  public static final java.lang.Object $anonfun$values$1$adapted(scala.runtime.ObjectRef, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #717                // Method $anonfun$values$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
         5: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$3   Lscala/runtime/ObjectRef;
            0       9     1    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      r$3                            final
      ms                             final

  public static final java.lang.Object $anonfun$$plus$plus$1$adapted(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #719                // Method $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
         5: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 100: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$4   Lscala/runtime/ObjectRef;
            0       9     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$4                            final
      kv                             final

  public static final java.lang.Object $anonfun$ensureCapacity$1$adapted(scala.runtime.ObjectRef, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #721                // Method $anonfun$ensureCapacity$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)V
         5: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$5   Lscala/runtime/ObjectRef;
            0       9     1    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      r$5                            final
      ms                             final

  public static final java.lang.Object $anonfun$$minus$minus$1$adapted(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #723                // Method $anonfun$$minus$minus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         5: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$6   Lscala/runtime/ObjectRef;
            0       9     1     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$6                            final
      k                              final

  public static final java.lang.Object $anonfun$isEqual$1$adapted(scala.runtime.ObjectRef, org.sireum.HashMap, java.lang.Object, org.sireum.Map);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #725                // Method $anonfun$isEqual$1:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
         7: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        10: areturn
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 comparedKeys$1   Lscala/runtime/ObjectRef;
            0      11     1 other$1   Lorg/sireum/HashMap;
            0      11     2 nonLocalReturnKey1$1   Ljava/lang/Object;
            0      11     3    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      comparedKeys$1                 final
      other$1                        final
      nonLocalReturnKey1$1           final
      ms                             final

  public static final java.lang.Object $anonfun$isEqual$3$adapted(org.sireum.HashMap, java.lang.Object, org.sireum.Map);
    descriptor: (Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #727                // Method $anonfun$isEqual$3:(Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)V
         6: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 196: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lorg/sireum/HashMap;
            0      10     1 nonLocalReturnKey1$1   Ljava/lang/Object;
            0      10     2    ms   Lorg/sireum/Map;
    MethodParameters:
      Name                           Flags
      $this                          final
      nonLocalReturnKey1$1           final
      ms                             final

  public static final java.lang.Object $anonfun$ensureCapacity$2$adapted(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #729                // Method $anonfun$ensureCapacity$2:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
         5: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$5   Lscala/runtime/ObjectRef;
            0       9     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$5                            final
      kv                             final

  public static final java.lang.Object $anonfun$isEqual$2$adapted(scala.runtime.ObjectRef, org.sireum.HashMap, java.lang.Object, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #731                // Method $anonfun$isEqual$2:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
         7: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        10: areturn
      LineNumberTable:
        line 184: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 comparedKeys$1   Lscala/runtime/ObjectRef;
            0      11     1 other$1   Lorg/sireum/HashMap;
            0      11     2 nonLocalReturnKey1$1   Ljava/lang/Object;
            0      11     3    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      comparedKeys$1                 final
      other$1                        final
      nonLocalReturnKey1$1           final
      kv                             final

  public static final java.lang.Object $anonfun$isEqual$4$adapted(org.sireum.HashMap, java.lang.Object, scala.Tuple2);
    descriptor: (Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #733                // Method $anonfun$isEqual$4:(Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)V
         6: getstatic     #629                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lorg/sireum/HashMap;
            0      10     1 nonLocalReturnKey1$1   Ljava/lang/Object;
            0      10     2    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      nonLocalReturnKey1$1           final
      kv                             final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #745,  0            // InvokeDynamic #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #21= #18 of #20;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static final #26= #23 of #25;    // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #29= #28 of #25;          // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #32= #31 of #25;          // Arg=class org/sireum/ST$Arg of class org/sireum/ST
  public static final #35= #34 of #25;    // Templ=class org/sireum/ST$Templ of class org/sireum/ST
  public static #38= #37 of #25;          // Templ$=class org/sireum/ST$Templ$ of class org/sireum/ST
  public static #43= #40 of #42;          // $String$=class org/sireum/Z$$String$ of class org/sireum/Z
  public static #48= #45 of #47;          // $Arrow$=class org/sireum/package$$Arrow$ of class org/sireum/package
Signature: #3                           // <K:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
SourceFile: "HashMap.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\teu!\u0002\u0017.\u0011\u0003\u0011d!\u0002\u001b.\u0011\u0003)\u0004\"\u0002\u001f\u0002\t\u0003i\u0004\"\u0002 \u0002\t\u0003y\u0004b\u0002B\u001a\u0003\u0011\u0005!Q\u0007\u0005\b\u0003/\u000bA\u0011\u0001B%\u0011\u001d\t\u0019\"\u0001C\u0001\u0005KBqAa\u001f\u0002\t\u0003\u0011iH\u0002\u00035[\t\u0011\u0005\u0002C$\t\u0005\u0003\u0005\u000b\u0011\u0002%\t\u0011\rD!\u0011!Q\u0001\n\u0011DQ\u0001\u0010\u0005\u0005\u0002\u001dDaa\u001b\u0005!\u0002\u0013A\u0005\"\u00027\t\t\u0003i\u0007\"\u00028\t\t\u0003i\u0007BB8\tA\u0003%A\rC\u0003q\u0011\u0011\u0005\u0011\u000fC\u0003s\u0011\u0011\u0005\u0011\u000fC\u0003t\u0011\u0011\u0005C\u000f\u0003\u0005~\u0011!\u0015\r\u0011\"\u0011\u007f\u0011\u001d\t)\u0001\u0003C!\u0003\u000fAq!a\u0005\t\t\u0003\t)\u0002C\u0005\u0002\u001c!\t\n\u0011\"\u0001\u0002\u001e!I\u00111\u0007\u0005\u0012\u0002\u0013\u0005\u0011Q\u0007\u0005\u000b\u0003sA\u0001R1A\u0005B\u0005m\u0002bBA-\u0011\u0011\u0005\u00111\f\u0005\b\u0003SBA\u0011AA6\u0011\u001d\t\t\b\u0003C\u0001\u0003gBq!!\u001f\t\t\u0003\tY\bC\u0004\u0002\u0006\"!\t!a\"\t\u000f\u00055\u0005\u0002\"\u0001\u0002\u0010\"9\u0011q\u0013\u0005\u0005\u0002\u0005e\u0005bBAW\u0011\u0011\u0005\u0011q\u0016\u0005\b\u0003oCA\u0011AA]\u0011\u001d\t\t\r\u0003C\u0001\u0003\u0007Dq!a4\t\t\u0003\t\t\u000eC\u0004\u0002Z\"!\t!a7\t\u000f\u0005%\b\u0002\"\u0001\u0002l\"9\u0011\u0011\u001f\u0005\u0005\u0002\u0005M\bbBA\u0000\u0011\u0011\u0005!\u0011\u0001\u0005\b\u0005\u000bAA\u0011\u0001B\u0001\u0011\u001d\u0011I\u0001\u0003C!\u0005\u0017AaAa\u0005\t\t\u0003\n\bb\u0002B\f\u0011\u0011\u0005!\u0011D\u0001\b\u0011\u0006\u001c\b.T1q\u0015\tqs&\u0001\u0004tSJ,W/\u001c\u0006\u0002a\u0005\u0019qN]4\u0004\u0001A\u00111\'A\u0007\u0002[\t9\u0001*Y:i\u001b\u0006\u00048CA\u00017!\t9$(D\u00019\u0015\u0005I\u0014!B:dC2\f\u0017BA\u001e9\u0005\u0019\te.\u001f*fM\u00061A(\u001b8jiz\"\u0012AM\u0001\u0006K6\u0004H/_\u000b\u0006\u0001\n-\"qF\u000b\u0002\u0003B11\u0007\u0003B\u0015\u0005[)2aQ,b\'\rAa\u0007\u0012\t\u0003g\u0015K!AR\u0017\u0003\u0017\u0011\u000bG/\u0019;za\u0016\u001c\u0016nZ\u0001\r?~k\u0017\r]#oiJLWm\u001d\t\u0004\u00132\u0013fBA\u001aK\u0013\tYU&A\u0004qC\u000e\\\u0017mZ3\n\u00055s%aA%T5&\u0011q\n\u0015\u0002\r!\u0006\u001c7.Y4f)J\f\u0017\u000e\u001e\u0006\u0003#6\n\u0011\u0002J5oi\u0016\u0014h.\u00197\u0011\tM\u001aV\u000bY\u0005\u0003)6\u00121!T1q!\t1v\u000b\u0004\u0001\u0005\u000baC!\u0019A-\u0003\u0003-\u000b\"AW/\u0011\u0005]Z\u0016B\u0001/9\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"a\u000e0\n\u0005}C$aA!osB\u0011a+\u0019\u0003\u0006E\"\u0011\r!\u0017\u0002\u0002)\u00061qlX:ju\u0016\u0004\"aM3\n\u0005\u0019l#!\u0001.\u0015\u0007!L\'\u000e\u0005\u00034\u0011U\u0003\u0007\"B$\f\u0001\u0004A\u0005\"B2\f\u0001\u0004!\u0017aC0nCB,e\u000e\u001e:jKN\f!\"\\1q\u000b:$(/[3t+\u0005A\u0015!D4fi6\u000b\u0007/\u00128ue&,7/A\u0003`g&TX-\u0001\u0003tSj,W#\u00013\u0002\u000f\u001d,GoU5{K\u0006AAo\\*ue&tw\rF\u0001v!\t180D\u0001x\u0015\tA\u00180\u0001\u0003mC:<\'\"\u0001>\u0002\t)\fg/Y\u0005\u0003y^\u0014aa\u0015;sS:<\u0017\u0001\u00035bg\"\u001cu\u000eZ3\u0016\u0003}\u00042aNA\u0001\u0013\r\t\u0019\u0001\u000f\u0002\u0004\u0013:$\u0018AB3rk\u0006d7\u000f\u0006\u0003\u0002\n\u0005=\u0001cA\u001c\u0002\f%\u0019\u0011Q\u0002\u001d\u0003\u000f\t{w\u000e\\3b]\"1\u0011\u0011\u0003\u000bA\u0002u\u000b\u0011a\\\u0001\u0006CB\u0004H.\u001f\u000b\u0006Q\u0006]\u0011\u0011\u0004\u0005\bYV\u0001\n\u00111\u0001I\u0011\u001d\u0001X\u0003%AA\u0002\u0011\fq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0003\u0003?Q3\u0001SA\u0011W\t\t\u0019\u0003\u0005\u0003\u0002&\u0005=RBAA\u0014\u0015\u0011\tI#a\u000b\u0002\u0013Ut7\r[3dW\u0016$\'bAA\u0017q\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u0005E\u0012q\u0005\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017aD1qa2LH\u0005Z3gCVdG\u000f\n\u001a\u0016\u0005\u0005]\"f\u00013\u0002\"\u0005AAeY8oi\u0016tG/\u0006\u0002\u0002>A1\u0011qHA\'\u0003\'rA!!\u0011\u0002L9!\u00111IA%\u001b\t\t)EC\u0002\u0002HE\na\u0001\u0010:p_Rt\u0014\"A\u001d\n\u0005-C\u0014\u0002BA(\u0003#\u00121aU3r\u0015\tY\u0005\bE\u00038\u0003+*X,C\u0002\u0002Xa\u0012a\u0001V;qY\u0016\u0014\u0014aB3oiJLWm]\u000b\u0003\u0003;\u0002B!\u0013\'\u0002`A)q\'!\u0016VA\"\u001a\u0011$a\u0019\u0011\u0007M\n)\'C\u0002\u0002h5\u0012A\u0001];sK\u0006!1.Z=t+\t\ti\u0007E\u0002J\u0019VC3AGA2\u0003\u00191\u0018\r\\;fgV\u0011\u0011Q\u000f\t\u0004\u00132\u0003\u0007fA\u000e\u0002d\u000511.Z=TKR,\"!! \u0011\tM\ny(V\u0005\u0004\u0003\u0003k#aA*fi\"\u001aA$a\u0019\u0002\u0011Y\fG.^3TKR,\"!!#\u0011\tM\ny\b\u0019\u0015\u0004;\u0005\r\u0014!\u0002\u0013qYV\u001cHc\u00015\u0002\u0012\"9\u00111\u0013\u0010A\u0002\u0005}\u0013!\u00019)\u0007y\t\u0019\'\u0001\u0006%a2,8\u000f\n9mkN,B!a\'\u0002(R\u0019\u0001.!(\t\u000f\u0005es\u00041\u0001\u0002 B91\'!)\u0002&\u0006}\u0013bAAR[\t\u0011\u0011j\u0015\t\u0004-\u0006\u001dFABAU?\t\u0007\u0011LA\u0001JQ\ry\u00121M\u0001\u000fK:\u001cXO]3DCB\f7-\u001b;z)\rA\u0017\u0011\u0017\u0005\u0007\u0003g\u0003\u0003\u0019\u00013\u0002\u0005MT\bf\u0001\u0011\u0002d\u0005I\u0001.Y:i\u0013:$W\r\u001f\u000b\u0004I\u0006m\u0006BBA_C\u0001\u0007Q+A\u0002lKfD3!IA2\u0003\r9W\r\u001e\u000b\u0005\u0003\u000b\fY\r\u0005\u00034\u0003\u000f\u0004\u0017bAAe[\t1q\n\u001d;j_:Da!!0#\u0001\u0004)\u0006f\u0001\u0012\u0002d\u0005)QM\u001c;ssR!\u00111[Ak!\u0015\u0019\u0014qYA0\u0011\u0019\til\ta\u0001+\"\u001a1%a\u0019\u0002\u0019\u0011j\u0017N\\;tI5Lg.^:\u0016\t\u0005u\u0017Q\u001d\u000b\u0004Q\u0006}\u0007bBA5I\u0001\u0007\u0011\u0011\u001d\t\u0007g\u0005\u0005\u00161]+\u0011\u0007Y\u000b)\u000f\u0002\u0004\u0002*\u0012\u0012\r!\u0017\u0015\u0004I\u0005\r\u0014A\u0002\u0013nS:,8\u000fF\u0002i\u0003[Dq!a%&\u0001\u0004\ty\u0006K\u0002&\u0003G\n\u0001bY8oi\u0006Lgn\u001d\u000b\u0005\u0003k\fY\u0010E\u00024\u0003oL1!!?.\u0005\u0005\u0011\u0005BBA_M\u0001\u0007Q\u000bK\u0002\'\u0003G\nq![:F[B$\u00180\u0006\u0002\u0002v\"\u001aq%a\u0019\u0002\u00119|g.R7qifD3\u0001KA2\u0003\u0019\u0019HO]5oOV\u0011!Q\u0002\t\u0004g\t=\u0011B\u0001?.Q\rI\u00131M\u0001\u0005Q\u0006\u001c\b\u000eK\u0002+\u0003G\nq![:FcV\fG\u000e\u0006\u0003\u0002v\nm\u0001B\u0002B\u000fW\u0001\u0007\u0001.A\u0003pi\",\'\u000fK\u0002,\u0003GB3\u0001\u0003B\u0012!\r\u0019$QE\u0005\u0004\u0005Oi#\u0001\u00033bi\u0006$\u0018\u0010]3\u0011\u0007Y\u0013Y\u0003B\u0003Y\u0007\t\u0007\u0011\fE\u0002W\u0005_!QAY\u0002C\u0002eC3aAA2\u0003%)W\u000e\u001d;z\u0013:LG/\u0006\u0004\u00038\tu\"\u0011\t\u000b\u0005\u0005s\u0011\u0019\u0005\u0005\u00044\u0011\tm\"q\b\t\u0004-\nuB!\u0002-\u0005\u0005\u0004I\u0006c\u0001,\u0003B\u0011)!\r\u0002b\u00013\"1!Q\t\u0003A\u0002\u0011\fq\"\u001b8ji&\fGnQ1qC\u000eLG/\u001f\u0015\u0004\t\u0005\rT\u0003\u0003B&\u0005?\u0012\tF!\u0016\u0015\t\t5#q\u000b\t\u0007g!\u0011yEa\u0015\u0011\u0007Y\u0013\t\u0006B\u0003Y\u000b\t\u0007\u0011\fE\u0002W\u0005+\"QAY\u0003C\u0002eCqA!\u0017\u0006\u0001\u0004\u0011Y&A\u0001t!\u001d\u0019\u0014\u0011\u0015B/\u0005C\u00022A\u0016B0\t\u0019\tI+\u0002b\u00013B9q\'!\u0016\u0003P\tM\u0003fA\u0003\u0002dU1!q\rB7\u0005c\"bA!\u001b\u0003t\te\u0004CB\u001a\t\u0005W\u0012y\u0007E\u0002W\u0005[\"Q\u0001\u0017\u0004C\u0002e\u00032A\u0016B9\t\u0015\u0011gA1\u0001Z\u0011\u0019ag\u00011\u0001\u0003vA!\u0011\n\u0014B<!\u0019\u00194Ka\u001b\u0003p!)\u0001O\u0002a\u0001I\u00069QO\\1qa2LXC\u0002B@\u0005\u001f\u0013\u0019\n\u0006\u0003\u0003\u0002\nU\u0005#B\u001c\u0003\u0004\n\u001d\u0015b\u0001BCq\t!1k\\7f!\u00199\u0014Q\u000bBEIB!\u0011\n\u0014BF!\u0019\u00194K!$\u0003\u0012B\u0019aKa$\u0005\u000ba;!\u0019A-\u0011\u0007Y\u0013\u0019\nB\u0003c\u000f\t\u0007\u0011\fC\u0004\u0002\u0012\u001d\u0001\rAa&\u0011\rMB!Q\u0012BI\u0001"
    )
BootstrapMethods:
  0: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #263 REF_invokeStatic org/sireum/HashMap.$anonfun$entries$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
      #266 5
      #267 1
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
  1: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #294 REF_invokeStatic org/sireum/HashMap.$anonfun$keys$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
      #266 5
      #267 1
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
  2: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #301 REF_invokeStatic org/sireum/HashMap.$anonfun$values$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
      #266 5
      #267 1
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
  3: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #408 REF_invokeStatic org/sireum/HashMap.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #410 (Lscala/Tuple2;)Ljava/lang/Object;
      #266 5
      #267 1
      #410 (Lscala/Tuple2;)Ljava/lang/Object;
  4: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #427 REF_invokeStatic org/sireum/HashMap.$anonfun$ensureCapacity$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
      #266 5
      #267 1
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
  5: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #452 REF_invokeStatic org/sireum/HashMap.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #267 1
  6: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #496 REF_invokeStatic org/sireum/HashMap.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
      #497 (Lscala/Tuple2;)Lorg/sireum/ST;
      #266 5
      #267 1
      #497 (Lscala/Tuple2;)Lorg/sireum/ST;
  7: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #544 REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
      #266 5
      #267 1
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
  8: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #554 REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$3$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
      #266 5
      #267 1
      #265 (Lorg/sireum/Map;)Ljava/lang/Object;
  9: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #601 REF_invokeStatic org/sireum/HashMap.$anonfun$ensureCapacity$2$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #410 (Lscala/Tuple2;)Ljava/lang/Object;
      #266 5
      #267 1
      #410 (Lscala/Tuple2;)Ljava/lang/Object;
  10: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #686 REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #410 (Lscala/Tuple2;)Ljava/lang/Object;
      #266 5
      #267 1
      #410 (Lscala/Tuple2;)Ljava/lang/Object;
  11: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 (Ljava/lang/Object;)Ljava/lang/Object;
      #697 REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$4$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #410 (Lscala/Tuple2;)Ljava/lang/Object;
      #266 5
      #267 1
      #410 (Lscala/Tuple2;)Ljava/lang/Object;
  12: #742 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #452 REF_invokeStatic org/sireum/HashMap.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #408 REF_invokeStatic org/sireum/HashMap.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #427 REF_invokeStatic org/sireum/HashMap.$anonfun$ensureCapacity$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
      #601 REF_invokeStatic org/sireum/HashMap.$anonfun$ensureCapacity$2$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #263 REF_invokeStatic org/sireum/HashMap.$anonfun$entries$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
      #544 REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
      #686 REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$2$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #554 REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$3$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lorg/sireum/Map;)Ljava/lang/Object;
      #697 REF_invokeStatic org/sireum/HashMap.$anonfun$isEqual$4$adapted:(Lorg/sireum/HashMap;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #294 REF_invokeStatic org/sireum/HashMap.$anonfun$keys$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
      #496 REF_invokeStatic org/sireum/HashMap.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
      #301 REF_invokeStatic org/sireum/HashMap.$anonfun$values$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Map;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x135 (unknown attribute)
   01 01 00 3D 02 5B 02 5C 01 01 C0 01 C1 01 02 4D
   02 4E 01 01 94 01 95 01 02 55 02 3F 01 01 A8 01
   04 01 02 53 02 4E 01 02 56 01 95 01 02 3E 02 3F
   01 01 03 01 04 01 02 A8 02 A9 01 02 1C 02 1D 01
   02 96 02 97 01 02 AA 02 AB 01 02 B3 02 B4 01 02
   26 02 27 01 02 B0 02 B1 01 02 B5 02 B6 01 02 47
   02 3F 01 01 23 01 04 01 01 EC 01 ED 01 02 4A 02
   3F 01 01 2A 01 04 01 00 55 00 56 01 00 68 01 4F
   01 00 68 00 69 01 00 33 00 AD 01 00 AC 00 AD 01
   00 5E 00 5F 01 00 64 00 5F 01 01 C6 01 46 01 01
   BE 01 8E 01 01 45 01 46 01 01 3D 01 8E 01 00 A2
   00 A3 01 00 9F 00 A0 01 00 A6 00 71 01 00 A9 00
   77 01 01 73 00 90 01 01 68 00 4B 01 00 E8 00 71
   01 01 BA 01 B6 01 00 8F 00 90 01 01 B5 01 B6 01
   00 75 00 71 01 00 7A 00 77 01 00 84 00 77 01 00
   31 00 81 01 00 80 00 81 01 01 6B 01 6C 01 01 90
   00 5F 01 00 96 00 97 01 01 2F 01 30 01 01 21 00
   71 01 00 70 00 71 01 01 CF 00 5F 01 00 76 00 77
   01 00 7D 00 7C 01 00 7B 00 7C 01 01 41 01 30 01
   01 28 00 71 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
