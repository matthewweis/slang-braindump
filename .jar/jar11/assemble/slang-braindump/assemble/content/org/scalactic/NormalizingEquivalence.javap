Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalactic/NormalizingEquivalence.class
  Last modified May 29, 2022; size 3360 bytes
  SHA-256 checksum 778eacc69cadb61b85efd2229347aeb9821b70e5a2e626b790e62a340c5eeb92
  Compiled from "NormalizingEquivalence.scala"
public interface org.scalactic.NormalizingEquivalence<A extends java.lang.Object> extends org.scalactic.Equivalence<A>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/scalactic/NormalizingEquivalence
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 10, attributes: 6
Constant pool:
   #1 = Utf8               org/scalactic/NormalizingEquivalence
   #2 = Class              #1             // org/scalactic/NormalizingEquivalence
   #3 = Utf8               <A:Ljava/lang/Object;>Ljava/lang/Object;Lorg/scalactic/Equivalence<TA;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               org/scalactic/Equivalence
   #7 = Class              #6             // org/scalactic/Equivalence
   #8 = Utf8               NormalizingEquivalence.scala
   #9 = Utf8               Lscala/reflect/ScalaSignature;
  #10 = Utf8               bytes
  #11 = Utf8               \u0006\u0005\u00053qa\u0002\u0005\u0011\u0002\u0007\u0005Q\u0002C\u0003%\u0001\u0011\u0005Q\u0005C\u0004*\u0001\t\u0007I\u0011\u0001\u0016\t\u000b-\u0002AQ\u0001\u0017\t\u000bQ\u0002a\u0011A\u001b\t\u000b]\u0002AQ\u0001\u001d\t\u000b}\u0002AQ\u0001!\u0003-9{\'/\\1mSjLgnZ#rk&4\u0018\r\\3oG\u0016T!!\u0003\u0006\u0002\u0013M\u001c\u0017\r\\1di&\u001c\'\"A\u0006\u0002\u0007=\u0014xm\u0001\u0001\u0016\u00059Y2c\u0001\u0001\u0010+A\u0011\u0001cE\u0007\u0002#)\t!#A\u0003tG\u0006d\u0017-\u0003\u0002\u0015#\t1\u0011I\\=SK\u001a\u00042AF\f\u001a\u001b\u0005A\u0011B\u0001\r\t\u0005-)\u0015/^5wC2,gnY3\u0011\u0005iYB\u0002\u0001\u0003\u00069\u0001\u0011\r!\b\u0002\u0002\u0003F\u0011a$\t\t\u0003!}I!\u0001I\t\u0003\u000f9{G\u000f[5oOB\u0011\u0001CI\u0005\u0003GE\u00111!\u00118z\u0003\u0019!\u0013N\\5uIQ\ta\u0005\u0005\u0002\u0011O%\u0011\u0001&\u0005\u0002\u0005+:LG/A\u000fbMR,\'OT8s[\u0006d\u0017N_1uS>tW)];jm\u0006dWM\\2f+\u0005)\u0012!D1sK\u0016\u000bX/\u001b<bY\u0016tG\u000fF\u0002.aI\u0002\"\u0001\u0005\u0018\n\u0005=\n\"a\u0002\"p_2,\u0017M\u001c\u0005\u0006c\r\u0001\r!G\u0001\u0002C\")1g\u0001a\u00013\u0005\t!-\u0001\u0006o_Jl\u0017\r\\5{K\u0012$\"!\u0007\u001c\t\u000bE\"\u0001\u0019A\r\u0002\u0007\u0005tG\r\u0006\u0002:uA\u0019a\u0003A\r\t\u000bm*\u0001\u0019\u0001\u001f\u0002\u000b=$\b.\u001a:\u0011\u0007Yi\u0014$\u0003\u0002?\u0011\tiaj\u001c:nC2L\'0\u0019;j_:\fq\u0002^8O_Jl\u0017\r\\5{CRLwN\\\u000b\u0002y\u0001
  #12 = Utf8               org/scalactic/NormalizingEquivalence$$anon$1
  #13 = Class              #12            // org/scalactic/NormalizingEquivalence$$anon$1
  #14 = Utf8               org$scalactic$NormalizingEquivalence$_setter_$afterNormalizationEquivalence_$eq
  #15 = Utf8               (Lorg/scalactic/Equivalence;)V
  #16 = Utf8               (Lorg/scalactic/Equivalence<TA;>;)V
  #17 = Utf8               x$1
  #18 = Utf8               afterNormalizationEquivalence
  #19 = Utf8               ()Lorg/scalactic/Equivalence;
  #20 = Utf8               ()Lorg/scalactic/Equivalence<TA;>;
  #21 = Utf8               areEquivalent$
  #22 = Utf8               (Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
  #23 = Utf8               $this
  #24 = Utf8               a
  #25 = Utf8               b
  #26 = Utf8               areEquivalent
  #27 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #28 = NameAndType        #26:#27        // areEquivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #29 = InterfaceMethodref #2.#28         // org/scalactic/NormalizingEquivalence.areEquivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #30 = Utf8               Lorg/scalactic/NormalizingEquivalence;
  #31 = Utf8               Ljava/lang/Object;
  #32 = Utf8               (TA;TA;)Z
  #33 = NameAndType        #18:#19        // afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
  #34 = InterfaceMethodref #2.#33         // org/scalactic/NormalizingEquivalence.afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
  #35 = Utf8               normalized
  #36 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #37 = NameAndType        #35:#36        // normalized:(Ljava/lang/Object;)Ljava/lang/Object;
  #38 = InterfaceMethodref #2.#37         // org/scalactic/NormalizingEquivalence.normalized:(Ljava/lang/Object;)Ljava/lang/Object;
  #39 = InterfaceMethodref #7.#28         // org/scalactic/Equivalence.areEquivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #40 = Utf8               this
  #41 = Utf8               (TA;)TA;
  #42 = Utf8               and$
  #43 = Utf8               (Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
  #44 = Utf8               other
  #45 = Utf8               and
  #46 = Utf8               (Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
  #47 = NameAndType        #45:#46        // and:(Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
  #48 = InterfaceMethodref #2.#47         // org/scalactic/NormalizingEquivalence.and:(Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
  #49 = Utf8               Lorg/scalactic/Normalization;
  #50 = Utf8               (Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/NormalizingEquivalence<TA;>;
  #51 = Utf8               org/scalactic/ComposedNormalizingEquivalence
  #52 = Class              #51            // org/scalactic/ComposedNormalizingEquivalence
  #53 = Utf8               toNormalization
  #54 = Utf8               ()Lorg/scalactic/Normalization;
  #55 = NameAndType        #53:#54        // toNormalization:()Lorg/scalactic/Normalization;
  #56 = InterfaceMethodref #2.#55         // org/scalactic/NormalizingEquivalence.toNormalization:()Lorg/scalactic/Normalization;
  #57 = Utf8               org/scalactic/Normalization
  #58 = Class              #57            // org/scalactic/Normalization
  #59 = Utf8               (Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
  #60 = NameAndType        #45:#59        // and:(Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
  #61 = InterfaceMethodref #58.#60        // org/scalactic/Normalization.and:(Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
  #62 = Utf8               <init>
  #63 = Utf8               (Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
  #64 = NameAndType        #62:#63        // "<init>":(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
  #65 = Methodref          #52.#64        // org/scalactic/ComposedNormalizingEquivalence."<init>":(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
  #66 = Utf8               toNormalization$
  #67 = Utf8               (Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
  #68 = Utf8               ()Lorg/scalactic/Normalization<TA;>;
  #69 = Utf8               (Lorg/scalactic/NormalizingEquivalence;)V
  #70 = NameAndType        #62:#69        // "<init>":(Lorg/scalactic/NormalizingEquivalence;)V
  #71 = Methodref          #13.#70        // org/scalactic/NormalizingEquivalence$$anon$1."<init>":(Lorg/scalactic/NormalizingEquivalence;)V
  #72 = Utf8               $init$
  #73 = Utf8               org/scalactic/Equivalence$
  #74 = Class              #73            // org/scalactic/Equivalence$
  #75 = Utf8               MODULE$
  #76 = Utf8               Lorg/scalactic/Equivalence$;
  #77 = NameAndType        #75:#76        // MODULE$:Lorg/scalactic/Equivalence$;
  #78 = Fieldref           #74.#77        // org/scalactic/Equivalence$.MODULE$:Lorg/scalactic/Equivalence$;
  #79 = Utf8               default
  #80 = NameAndType        #79:#19        // default:()Lorg/scalactic/Equivalence;
  #81 = Methodref          #74.#80        // org/scalactic/Equivalence$.default:()Lorg/scalactic/Equivalence;
  #82 = NameAndType        #14:#15        // org$scalactic$NormalizingEquivalence$_setter_$afterNormalizationEquivalence_$eq:(Lorg/scalactic/Equivalence;)V
  #83 = InterfaceMethodref #2.#82         // org/scalactic/NormalizingEquivalence.org$scalactic$NormalizingEquivalence$_setter_$afterNormalizationEquivalence_$eq:(Lorg/scalactic/Equivalence;)V
  #84 = Utf8               Signature
  #85 = Utf8               MethodParameters
  #86 = Utf8               Code
  #87 = Utf8               LineNumberTable
  #88 = Utf8               LocalVariableTable
  #89 = Utf8               InnerClasses
  #90 = Utf8               SourceFile
  #91 = Utf8               RuntimeVisibleAnnotations
  #92 = Utf8               ScalaInlineInfo
  #93 = Utf8               ScalaSig
{
  public abstract void org$scalactic$NormalizingEquivalence$_setter_$afterNormalizationEquivalence_$eq(org.scalactic.Equivalence<A>);
    descriptor: (Lorg/scalactic/Equivalence;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #16                          // (Lorg/scalactic/Equivalence<TA;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract org.scalactic.Equivalence<A> afterNormalizationEquivalence();
    descriptor: ()Lorg/scalactic/Equivalence;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #20                          // ()Lorg/scalactic/Equivalence<TA;>;

  public static boolean areEquivalent$(org.scalactic.NormalizingEquivalence, java.lang.Object, java.lang.Object);
    descriptor: (Lorg/scalactic/NormalizingEquivalence;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #29                 // InterfaceMethod areEquivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lorg/scalactic/NormalizingEquivalence;
            0       7     1     a   Ljava/lang/Object;
            0       7     2     b   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      a                              final
      b                              final

  public default boolean areEquivalent(A, A);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: invokeinterface #34,  1           // InterfaceMethod afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
         6: aload_0
         7: aload_1
         8: invokeinterface #38,  2           // InterfaceMethod normalized:(Ljava/lang/Object;)Ljava/lang/Object;
        13: aload_0
        14: aload_2
        15: invokeinterface #38,  2           // InterfaceMethod normalized:(Ljava/lang/Object;)Ljava/lang/Object;
        20: invokeinterface #39,  3           // InterfaceMethod org/scalactic/Equivalence.areEquivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
        25: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/scalactic/NormalizingEquivalence;
            0      26     1     a   Ljava/lang/Object;
            0      26     2     b   Ljava/lang/Object;
    Signature: #32                          // (TA;TA;)Z
    MethodParameters:
      Name                           Flags
      a                              final
      b                              final

  public abstract A normalized(A);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #41                          // (TA;)TA;
    MethodParameters:
      Name                           Flags
      a                              final

  public static org.scalactic.NormalizingEquivalence and$(org.scalactic.NormalizingEquivalence, org.scalactic.Normalization);
    descriptor: (Lorg/scalactic/NormalizingEquivalence;Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #48                 // InterfaceMethod and:(Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
         5: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/scalactic/NormalizingEquivalence;
            0       6     1 other   Lorg/scalactic/Normalization;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      other                          final

  public default org.scalactic.NormalizingEquivalence<A> and(org.scalactic.Normalization<A>);
    descriptor: (Lorg/scalactic/Normalization;)Lorg/scalactic/NormalizingEquivalence;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #52                 // class org/scalactic/ComposedNormalizingEquivalence
         3: dup
         4: aload_0
         5: invokeinterface #34,  1           // InterfaceMethod afterNormalizationEquivalence:()Lorg/scalactic/Equivalence;
        10: aload_0
        11: invokeinterface #56,  1           // InterfaceMethod toNormalization:()Lorg/scalactic/Normalization;
        16: aload_1
        17: invokeinterface #61,  2           // InterfaceMethod org/scalactic/Normalization.and:(Lorg/scalactic/Normalization;)Lorg/scalactic/Normalization;
        22: invokespecial #65                 // Method org/scalactic/ComposedNormalizingEquivalence."<init>":(Lorg/scalactic/Equivalence;Lorg/scalactic/Normalization;)V
        25: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/scalactic/NormalizingEquivalence;
            0      26     1 other   Lorg/scalactic/Normalization;
    Signature: #50                          // (Lorg/scalactic/Normalization<TA;>;)Lorg/scalactic/NormalizingEquivalence<TA;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public static org.scalactic.Normalization toNormalization$(org.scalactic.NormalizingEquivalence);
    descriptor: (Lorg/scalactic/NormalizingEquivalence;)Lorg/scalactic/Normalization;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #56                 // InterfaceMethod toNormalization:()Lorg/scalactic/Normalization;
         4: areturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/scalactic/NormalizingEquivalence;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default org.scalactic.Normalization<A> toNormalization();
    descriptor: ()Lorg/scalactic/Normalization;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #13                 // class org/scalactic/NormalizingEquivalence$$anon$1
         3: dup
         4: aload_0
         5: invokespecial #71                 // Method org/scalactic/NormalizingEquivalence$$anon$1."<init>":(Lorg/scalactic/NormalizingEquivalence;)V
         8: areturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/scalactic/NormalizingEquivalence;
    Signature: #68                          // ()Lorg/scalactic/Normalization<TA;>;

  public static void $init$(org.scalactic.NormalizingEquivalence);
    descriptor: (Lorg/scalactic/NormalizingEquivalence;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #78                 // Field org/scalactic/Equivalence$.MODULE$:Lorg/scalactic/Equivalence$;
         4: invokevirtual #81                 // Method org/scalactic/Equivalence$.default:()Lorg/scalactic/Equivalence;
         7: invokeinterface #83,  2           // InterfaceMethod org$scalactic$NormalizingEquivalence$_setter_$afterNormalizationEquivalence_$eq:(Lorg/scalactic/Equivalence;)V
        12: return
      LineNumberTable:
        line 56: 0
        line 45: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lorg/scalactic/NormalizingEquivalence;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public final #13;                       // class org/scalactic/NormalizingEquivalence$$anon$1
Signature: #3                           // <A:Ljava/lang/Object;>Ljava/lang/Object;Lorg/scalactic/Equivalence<TA;>;
SourceFile: "NormalizingEquivalence.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00053qa\u0002\u0005\u0011\u0002\u0007\u0005Q\u0002C\u0003%\u0001\u0011\u0005Q\u0005C\u0004*\u0001\t\u0007I\u0011\u0001\u0016\t\u000b-\u0002AQ\u0001\u0017\t\u000bQ\u0002a\u0011A\u001b\t\u000b]\u0002AQ\u0001\u001d\t\u000b}\u0002AQ\u0001!\u0003-9{\'/\\1mSjLgnZ#rk&4\u0018\r\\3oG\u0016T!!\u0003\u0006\u0002\u0013M\u001c\u0017\r\\1di&\u001c\'\"A\u0006\u0002\u0007=\u0014xm\u0001\u0001\u0016\u00059Y2c\u0001\u0001\u0010+A\u0011\u0001cE\u0007\u0002#)\t!#A\u0003tG\u0006d\u0017-\u0003\u0002\u0015#\t1\u0011I\\=SK\u001a\u00042AF\f\u001a\u001b\u0005A\u0011B\u0001\r\t\u0005-)\u0015/^5wC2,gnY3\u0011\u0005iYB\u0002\u0001\u0003\u00069\u0001\u0011\r!\b\u0002\u0002\u0003F\u0011a$\t\t\u0003!}I!\u0001I\t\u0003\u000f9{G\u000f[5oOB\u0011\u0001CI\u0005\u0003GE\u00111!\u00118z\u0003\u0019!\u0013N\\5uIQ\ta\u0005\u0005\u0002\u0011O%\u0011\u0001&\u0005\u0002\u0005+:LG/A\u000fbMR,\'OT8s[\u0006d\u0017N_1uS>tW)];jm\u0006dWM\\2f+\u0005)\u0012!D1sK\u0016\u000bX/\u001b<bY\u0016tG\u000fF\u0002.aI\u0002\"\u0001\u0005\u0018\n\u0005=\n\"a\u0002\"p_2,\u0017M\u001c\u0005\u0006c\r\u0001\r!G\u0001\u0002C\")1g\u0001a\u00013\u0005\t!-\u0001\u0006o_Jl\u0017\r\\5{K\u0012$\"!\u0007\u001c\t\u000bE\"\u0001\u0019A\r\u0002\u0007\u0005tG\r\u0006\u0002:uA\u0019a\u0003A\r\t\u000bm*\u0001\u0019\u0001\u001f\u0002\u000b=$\b.\u001a:\u0011\u0007Yi\u0014$\u0003\u0002?\u0011\tiaj\u001c:nC2L\'0\u0019;j_:\fq\u0002^8O_Jl\u0017\r\\5{CRLwN\\\u000b\u0002y\u0001"
    )
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 00 00 0A 00 48 00 45 01 00 12 00 13 00 00 2D
   00 2E 01 00 2A 00 2B 01 00 1A 00 1B 01 00 15 00
   16 01 00 23 00 24 00 00 0E 00 0F 00 00 35 00 36
   01 00 42 00 43 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
