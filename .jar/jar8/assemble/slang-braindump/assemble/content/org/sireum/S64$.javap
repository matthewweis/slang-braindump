Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/S64$.class
  Last modified May 29, 2022; size 10419 bytes
  SHA-256 checksum 4365d553b970329bf64301c0325e0248ff04427d34dbe2ac443d335965217ab9
  Compiled from "BitsRangeTypes.scala"
public final class org.sireum.S64$ extends java.lang.Object implements org.sireum.$ZCompanion<org.sireum.S64>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/S64$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 13, methods: 53, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/S64$
    #2 = Class              #1            // org/sireum/S64$
    #3 = Utf8               Ljava/lang/Object;Lorg/sireum/$ZCompanion<Lorg/sireum/S64;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/$ZCompanion
    #7 = Class              #6            // org/sireum/$ZCompanion
    #8 = Utf8               BitsRangeTypes.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               org/sireum/S64$$String$
   #15 = Class              #14           // org/sireum/S64$$String$
   #16 = Utf8               org/sireum/S64
   #17 = Class              #16           // org/sireum/S64
   #18 = Utf8               $String$
   #19 = Utf8               org/sireum/S64$BigInt$
   #20 = Class              #19           // org/sireum/S64$BigInt$
   #21 = Utf8               BigInt$
   #22 = Utf8               org/sireum/S64$Boxer$
   #23 = Class              #22           // org/sireum/S64$Boxer$
   #24 = Utf8               Boxer$
   #25 = Utf8               org/sireum/S64$Int$
   #26 = Class              #25           // org/sireum/S64$Int$
   #27 = Utf8               Int$
   #28 = Utf8               org/sireum/S64$Long$
   #29 = Class              #28           // org/sireum/S64$Long$
   #30 = Utf8               Long$
   #31 = Utf8               org/sireum/S64$S64$Slang
   #32 = Class              #31           // org/sireum/S64$S64$Slang
   #33 = Utf8               S64$Slang
   #34 = Utf8               org/sireum/Z$MP$
   #35 = Class              #34           // org/sireum/Z$MP$
   #36 = Utf8               org/sireum/Z
   #37 = Class              #36           // org/sireum/Z
   #38 = Utf8               MP$
   #39 = Utf8               org/sireum/Z$MP$BigInt
   #40 = Class              #39           // org/sireum/Z$MP$BigInt
   #41 = Utf8               BigInt
   #42 = Utf8               org/sireum/Z$MP$Long
   #43 = Class              #42           // org/sireum/Z$MP$Long
   #44 = Utf8               Long
   #45 = Utf8               MODULE$
   #46 = Utf8               Lorg/sireum/S64$;
   #47 = Utf8               Name
   #48 = Utf8               Ljava/lang/String;
   #49 = Utf8               BitWidth
   #50 = Utf8               I
   #51 = Utf8               Min
   #52 = Utf8               J
   #53 = Utf8               Max
   #54 = Utf8               Index
   #55 = Utf8               isZeroIndex
   #56 = Utf8               Z
   #57 = Utf8               isSigned
   #58 = Utf8               isWrapped
   #59 = Utf8               isBitVector
   #60 = Utf8               hasMin
   #61 = Utf8               hasMax
   #62 = Utf8               $S64Companion
   #63 = Utf8               Lorg/sireum/$ZCompanion;
   #64 = Utf8               Lorg/sireum/$ZCompanion<Lorg/sireum/S64;>;
   #65 = Utf8               <clinit>
   #66 = Utf8               ()V
   #67 = Utf8               <init>
   #68 = NameAndType        #67:#66       // "<init>":()V
   #69 = Methodref          #2.#68        // org/sireum/S64$."<init>":()V
   #70 = NameAndType        #45:#46       // MODULE$:Lorg/sireum/S64$;
   #71 = Fieldref           #2.#70        // org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
   #72 = Utf8               S64
   #73 = String             #72           // S64
   #74 = NameAndType        #47:#48       // Name:Ljava/lang/String;
   #75 = Fieldref           #2.#74        // org/sireum/S64$.Name:Ljava/lang/String;
   #76 = NameAndType        #49:#50       // BitWidth:I
   #77 = Fieldref           #2.#76        // org/sireum/S64$.BitWidth:I
   #78 = Long               -9223372036854775808l
   #80 = NameAndType        #51:#52       // Min:J
   #81 = Fieldref           #2.#80        // org/sireum/S64$.Min:J
   #82 = Long               9223372036854775807l
   #84 = NameAndType        #53:#52       // Max:J
   #85 = Fieldref           #2.#84        // org/sireum/S64$.Max:J
   #86 = NameAndType        #54:#52       // Index:J
   #87 = Fieldref           #2.#86        // org/sireum/S64$.Index:J
   #88 = NameAndType        #55:#56       // isZeroIndex:Z
   #89 = Fieldref           #2.#88        // org/sireum/S64$.isZeroIndex:Z
   #90 = NameAndType        #57:#56       // isSigned:Z
   #91 = Fieldref           #2.#90        // org/sireum/S64$.isSigned:Z
   #92 = NameAndType        #58:#56       // isWrapped:Z
   #93 = Fieldref           #2.#92        // org/sireum/S64$.isWrapped:Z
   #94 = NameAndType        #59:#56       // isBitVector:Z
   #95 = Fieldref           #2.#94        // org/sireum/S64$.isBitVector:Z
   #96 = NameAndType        #60:#56       // hasMin:Z
   #97 = Fieldref           #2.#96        // org/sireum/S64$.hasMin:Z
   #98 = NameAndType        #61:#56       // hasMax:Z
   #99 = Fieldref           #2.#98        // org/sireum/S64$.hasMax:Z
  #100 = NameAndType        #62:#63       // $S64Companion:Lorg/sireum/$ZCompanion;
  #101 = Fieldref           #2.#100       // org/sireum/S64$.$S64Companion:Lorg/sireum/$ZCompanion;
  #102 = Utf8               Int
  #103 = Utf8               ()Lorg/sireum/S64$Int$;
  #104 = Utf8               Lorg/sireum/S64$Int$;
  #105 = NameAndType        #45:#104      // MODULE$:Lorg/sireum/S64$Int$;
  #106 = Fieldref           #26.#105      // org/sireum/S64$Int$.MODULE$:Lorg/sireum/S64$Int$;
  #107 = Utf8               this
  #108 = Utf8               ()Lorg/sireum/S64$Long$;
  #109 = Utf8               Lorg/sireum/S64$Long$;
  #110 = NameAndType        #45:#109      // MODULE$:Lorg/sireum/S64$Long$;
  #111 = Fieldref           #29.#110      // org/sireum/S64$Long$.MODULE$:Lorg/sireum/S64$Long$;
  #112 = Utf8               $String
  #113 = Utf8               ()Lorg/sireum/S64$$String$;
  #114 = Utf8               Lorg/sireum/S64$$String$;
  #115 = NameAndType        #45:#114      // MODULE$:Lorg/sireum/S64$$String$;
  #116 = Fieldref           #15.#115      // org/sireum/S64$$String$.MODULE$:Lorg/sireum/S64$$String$;
  #117 = Utf8               ()Lorg/sireum/S64$BigInt$;
  #118 = Utf8               Lorg/sireum/S64$BigInt$;
  #119 = NameAndType        #45:#118      // MODULE$:Lorg/sireum/S64$BigInt$;
  #120 = Fieldref           #20.#119      // org/sireum/S64$BigInt$.MODULE$:Lorg/sireum/S64$BigInt$;
  #121 = Utf8               ()Ljava/lang/String;
  #122 = Utf8               ()I
  #123 = Utf8               ()J
  #124 = Utf8               ()Z
  #125 = Utf8               random
  #126 = Utf8               org/sireum/Z$
  #127 = Class              #126          // org/sireum/Z$
  #128 = Utf8               Lorg/sireum/Z$;
  #129 = NameAndType        #45:#128      // MODULE$:Lorg/sireum/Z$;
  #130 = Fieldref           #127.#129     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #131 = NameAndType        #51:#123      // Min:()J
  #132 = Methodref          #2.#131       // org/sireum/S64$.Min:()J
  #133 = Utf8               (J)V
  #134 = NameAndType        #67:#133      // "<init>":(J)V
  #135 = Methodref          #17.#134      // org/sireum/S64."<init>":(J)V
  #136 = Utf8               toBigInt
  #137 = Utf8               ()Lscala/math/BigInt;
  #138 = NameAndType        #136:#137     // toBigInt:()Lscala/math/BigInt;
  #139 = Methodref          #17.#138      // org/sireum/S64.toBigInt:()Lscala/math/BigInt;
  #140 = Utf8               apply
  #141 = Utf8               (Lscala/math/BigInt;)Lorg/sireum/Z;
  #142 = NameAndType        #140:#141     // apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
  #143 = Methodref          #127.#142     // org/sireum/Z$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
  #144 = NameAndType        #53:#123      // Max:()J
  #145 = Methodref          #2.#144       // org/sireum/S64$.Max:()J
  #146 = Utf8               $minus
  #147 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #148 = NameAndType        #146:#147     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #149 = InterfaceMethodref #37.#148      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #150 = Utf8               Lorg/sireum/Z$MP$;
  #151 = NameAndType        #45:#150      // MODULE$:Lorg/sireum/Z$MP$;
  #152 = Fieldref           #35.#151      // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
  #153 = Utf8               one
  #154 = Utf8               ()Lorg/sireum/Z;
  #155 = NameAndType        #153:#154     // one:()Lorg/sireum/Z;
  #156 = Methodref          #35.#155      // org/sireum/Z$MP$.one:()Lorg/sireum/Z;
  #157 = Utf8               $plus
  #158 = NameAndType        #157:#147     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #159 = InterfaceMethodref #37.#158      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #160 = NameAndType        #125:#154     // random:()Lorg/sireum/Z;
  #161 = Methodref          #127.#160     // org/sireum/Z$.random:()Lorg/sireum/Z;
  #162 = Utf8               $percent
  #163 = NameAndType        #162:#147     // $percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #164 = InterfaceMethodref #37.#163      // org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #165 = InterfaceMethodref #37.#138      // org/sireum/Z.toBigInt:()Lscala/math/BigInt;
  #166 = Utf8               scala/math/BigInt
  #167 = Class              #166          // scala/math/BigInt
  #168 = Utf8               toLong
  #169 = NameAndType        #168:#123     // toLong:()J
  #170 = Methodref          #167.#169     // scala/math/BigInt.toLong:()J
  #171 = Utf8               zMin
  #172 = Utf8               Lorg/sireum/Z;
  #173 = Utf8               d
  #174 = Utf8               n
  #175 = Utf8               randomSeed
  #176 = Utf8               (Lorg/sireum/Z;)J
  #177 = Utf8               seed
  #178 = NameAndType        #175:#147     // randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #179 = Methodref          #127.#178     // org/sireum/Z$.randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #180 = Utf8               (I)J
  #181 = NameAndType        #140:#180     // apply:(I)J
  #182 = Methodref          #26.#181      // org/sireum/S64$Int$.apply:(I)J
  #183 = Utf8               (J)J
  #184 = NameAndType        #140:#183     // apply:(J)J
  #185 = Methodref          #29.#184      // org/sireum/S64$Long$.apply:(J)J
  #186 = NameAndType        #58:#124      // isWrapped:()Z
  #187 = Methodref          #2.#186       // org/sireum/S64$.isWrapped:()Z
  #188 = Utf8               scala/Predef$
  #189 = Class              #188          // scala/Predef$
  #190 = Utf8               Lscala/Predef$;
  #191 = NameAndType        #45:#190      // MODULE$:Lscala/Predef$;
  #192 = Fieldref           #189.#191     // scala/Predef$.MODULE$:Lscala/Predef$;
  #193 = Utf8               org/sireum/B$
  #194 = Class              #193          // org/sireum/B$
  #195 = Utf8               Lorg/sireum/B$;
  #196 = NameAndType        #45:#195      // MODULE$:Lorg/sireum/B$;
  #197 = Fieldref           #194.#196     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #198 = Utf8               toMP
  #199 = NameAndType        #198:#154     // toMP:()Lorg/sireum/Z;
  #200 = Methodref          #17.#199      // org/sireum/S64.toMP:()Lorg/sireum/Z;
  #201 = Utf8               $less$eq
  #202 = Utf8               (Lorg/sireum/Z;)Z
  #203 = NameAndType        #201:#202     // $less$eq:(Lorg/sireum/Z;)Z
  #204 = InterfaceMethodref #37.#203      // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #205 = Utf8               $4B
  #206 = Utf8               (Z)Z
  #207 = NameAndType        #205:#206     // $4B:(Z)Z
  #208 = Methodref          #194.#207     // org/sireum/B$.$4B:(Z)Z
  #209 = Utf8               ()Ljava/lang/Object;
  #210 = MethodType         #209          //  ()Ljava/lang/Object;
  #211 = Utf8               $anonfun$apply$13
  #212 = Utf8               (Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
  #213 = NameAndType        #211:#212     // $anonfun$apply$13:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
  #214 = Methodref          #2.#213       // org/sireum/S64$.$anonfun$apply$13:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
  #215 = MethodHandle       6:#214        // REF_invokeStatic org/sireum/S64$.$anonfun$apply$13:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
  #216 = MethodType         #121          //  ()Ljava/lang/String;
  #217 = Integer            5
  #218 = Integer            1
  #219 = Utf8               java/lang/invoke/LambdaMetafactory
  #220 = Class              #219          // java/lang/invoke/LambdaMetafactory
  #221 = Utf8               altMetafactory
  #222 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #223 = NameAndType        #221:#222     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #224 = Methodref          #220.#223     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #225 = MethodHandle       6:#224        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #226 = Utf8               (Lorg/sireum/Z$MP$Long;)Lscala/Function0;
  #227 = NameAndType        #140:#226     // apply:(Lorg/sireum/Z$MP$Long;)Lscala/Function0;
  #228 = InvokeDynamic      #0:#227       // #0:apply:(Lorg/sireum/Z$MP$Long;)Lscala/Function0;
  #229 = Utf8               assert
  #230 = Utf8               (ZLscala/Function0;)V
  #231 = NameAndType        #229:#230     // assert:(ZLscala/Function0;)V
  #232 = Methodref          #189.#231     // scala/Predef$.assert:(ZLscala/Function0;)V
  #233 = Methodref          #43.#203      // org/sireum/Z$MP$Long.$less$eq:(Lorg/sireum/Z;)Z
  #234 = Utf8               $anonfun$apply$14
  #235 = NameAndType        #234:#212     // $anonfun$apply$14:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
  #236 = Methodref          #2.#235       // org/sireum/S64$.$anonfun$apply$14:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
  #237 = MethodHandle       6:#236        // REF_invokeStatic org/sireum/S64$.$anonfun$apply$14:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
  #238 = InvokeDynamic      #1:#227       // #1:apply:(Lorg/sireum/Z$MP$Long;)Lscala/Function0;
  #239 = Utf8               value
  #240 = NameAndType        #239:#123     // value:()J
  #241 = Methodref          #43.#240      // org/sireum/Z$MP$Long.value:()J
  #242 = Utf8               $anonfun$apply$15
  #243 = Utf8               (Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
  #244 = NameAndType        #242:#243     // $anonfun$apply$15:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
  #245 = Methodref          #2.#244       // org/sireum/S64$.$anonfun$apply$15:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
  #246 = MethodHandle       6:#245        // REF_invokeStatic org/sireum/S64$.$anonfun$apply$15:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
  #247 = Utf8               (Lorg/sireum/Z$MP$BigInt;)Lscala/Function0;
  #248 = NameAndType        #140:#247     // apply:(Lorg/sireum/Z$MP$BigInt;)Lscala/Function0;
  #249 = InvokeDynamic      #2:#248       // #2:apply:(Lorg/sireum/Z$MP$BigInt;)Lscala/Function0;
  #250 = Methodref          #40.#203      // org/sireum/Z$MP$BigInt.$less$eq:(Lorg/sireum/Z;)Z
  #251 = Utf8               $anonfun$apply$16
  #252 = NameAndType        #251:#243     // $anonfun$apply$16:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
  #253 = Methodref          #2.#252       // org/sireum/S64$.$anonfun$apply$16:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
  #254 = MethodHandle       6:#253        // REF_invokeStatic org/sireum/S64$.$anonfun$apply$16:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
  #255 = InvokeDynamic      #3:#248       // #3:apply:(Lorg/sireum/Z$MP$BigInt;)Lscala/Function0;
  #256 = NameAndType        #239:#137     // value:()Lscala/math/BigInt;
  #257 = Methodref          #40.#256      // org/sireum/Z$MP$BigInt.value:()Lscala/math/BigInt;
  #258 = Utf8               org/sireum/package$
  #259 = Class              #258          // org/sireum/package$
  #260 = Utf8               Lorg/sireum/package$;
  #261 = NameAndType        #45:#260      // MODULE$:Lorg/sireum/package$;
  #262 = Fieldref           #259.#261     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #263 = Utf8               java/lang/StringBuilder
  #264 = Class              #263          // java/lang/StringBuilder
  #265 = Integer            28
  #266 = Utf8               (I)V
  #267 = NameAndType        #67:#266      // "<init>":(I)V
  #268 = Methodref          #264.#267     // java/lang/StringBuilder."<init>":(I)V
  #269 = Utf8               Unsupported
  #270 = String             #269          // Unsupported
  #271 = Utf8               append
  #272 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #273 = NameAndType        #271:#272     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #274 = Methodref          #264.#273     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #275 = NameAndType        #47:#121      // Name:()Ljava/lang/String;
  #276 = Methodref          #2.#275       // org/sireum/S64$.Name:()Ljava/lang/String;
  #277 = Utf8                creation from
  #278 = String             #277          //  creation from
  #279 = InterfaceMethodref #37.#275      // org/sireum/Z.Name:()Ljava/lang/String;
  #280 = Utf8               .
  #281 = String             #280          // .
  #282 = Utf8               toString
  #283 = NameAndType        #282:#121     // toString:()Ljava/lang/String;
  #284 = Methodref          #264.#283     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #285 = Utf8               halt
  #286 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #287 = NameAndType        #285:#286     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #288 = Methodref          #259.#287     // org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #289 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option;
  #290 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/S64;>;
  #291 = Utf8               s
  #292 = Utf8               java/lang/Throwable
  #293 = Class              #292          // java/lang/Throwable
  #294 = Utf8               org/sireum/Some$
  #295 = Class              #294          // org/sireum/Some$
  #296 = Utf8               Lorg/sireum/Some$;
  #297 = NameAndType        #45:#296      // MODULE$:Lorg/sireum/Some$;
  #298 = Fieldref           #295.#297     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #299 = Utf8               (Ljava/lang/String;)J
  #300 = NameAndType        #140:#299     // apply:(Ljava/lang/String;)J
  #301 = Methodref          #15.#300      // org/sireum/S64$$String$.apply:(Ljava/lang/String;)J
  #302 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #303 = NameAndType        #140:#302     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #304 = Methodref          #295.#303     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #305 = Utf8               org/sireum/None$
  #306 = Class              #305          // org/sireum/None$
  #307 = Utf8               Lorg/sireum/None$;
  #308 = NameAndType        #45:#307      // MODULE$:Lorg/sireum/None$;
  #309 = Fieldref           #306.#308     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #310 = Utf8               ()Lorg/sireum/None;
  #311 = NameAndType        #140:#310     // apply:()Lorg/sireum/None;
  #312 = Methodref          #306.#311     // org/sireum/None$.apply:()Lorg/sireum/None;
  #313 = Utf8               unapply
  #314 = Utf8               (J)Lscala/Option;
  #315 = Utf8               (J)Lscala/Option<Lorg/sireum/Z;>;
  #316 = Utf8               scala/Some
  #317 = Class              #316          // scala/Some
  #318 = Utf8               (Ljava/lang/Object;)V
  #319 = NameAndType        #67:#318      // "<init>":(Ljava/lang/Object;)V
  #320 = Methodref          #317.#319     // scala/Some."<init>":(Ljava/lang/Object;)V
  #321 = Utf8               (Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
  #322 = Utf8               sc
  #323 = Utf8               (Lscala/StringContext;)V
  #324 = NameAndType        #67:#323      // "<init>":(Lscala/StringContext;)V
  #325 = Methodref          #32.#324      // org/sireum/S64$S64$Slang."<init>":(Lscala/StringContext;)V
  #326 = Utf8               Lscala/StringContext;
  #327 = Utf8               ()Lorg/sireum/$ZCompanion;
  #328 = Utf8               ()Lorg/sireum/$ZCompanion<Lorg/sireum/S64;>;
  #329 = Utf8               Name$extension
  #330 = Utf8               (J)Ljava/lang/String;
  #331 = Utf8               $this
  #332 = Utf8               BitWidth$extension
  #333 = Utf8               (J)I
  #334 = NameAndType        #49:#122      // BitWidth:()I
  #335 = Methodref          #2.#334       // org/sireum/S64$.BitWidth:()I
  #336 = Utf8               Min$extension
  #337 = Utf8               Max$extension
  #338 = Utf8               Index$extension
  #339 = NameAndType        #54:#123      // Index:()J
  #340 = Methodref          #2.#339       // org/sireum/S64$.Index:()J
  #341 = Utf8               isZeroIndex$extension
  #342 = Utf8               (J)Z
  #343 = NameAndType        #55:#124      // isZeroIndex:()Z
  #344 = Methodref          #2.#343       // org/sireum/S64$.isZeroIndex:()Z
  #345 = Utf8               isSigned$extension
  #346 = NameAndType        #57:#124      // isSigned:()Z
  #347 = Methodref          #2.#346       // org/sireum/S64$.isSigned:()Z
  #348 = Utf8               isWrapped$extension
  #349 = Utf8               make$extension
  #350 = Utf8               (JJ)J
  #351 = Utf8               v
  #352 = Methodref          #2.#184       // org/sireum/S64$.apply:(J)J
  #353 = Utf8               boxer$extension
  #354 = Utf8               (J)Lorg/sireum/S64$Boxer$;
  #355 = Utf8               Lorg/sireum/S64$Boxer$;
  #356 = NameAndType        #45:#355      // MODULE$:Lorg/sireum/S64$Boxer$;
  #357 = Fieldref           #23.#356      // org/sireum/S64$Boxer$.MODULE$:Lorg/sireum/S64$Boxer$;
  #358 = Utf8               hashCode$extension
  #359 = Utf8               java/lang/Long
  #360 = Class              #359          // java/lang/Long
  #361 = Utf8               hashCode
  #362 = NameAndType        #361:#333     // hashCode:(J)I
  #363 = Methodref          #360.#362     // java/lang/Long.hashCode:(J)I
  #364 = Utf8               equals$extension
  #365 = Utf8               (JLjava/lang/Object;)Z
  #366 = Utf8               x$1
  #367 = Methodref          #17.#240      // org/sireum/S64.value:()J
  #368 = Utf8               Ljava/lang/Object;
  #369 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #370 = NameAndType        #140:#176     // apply:(Lorg/sireum/Z;)J
  #371 = Methodref          #2.#370       // org/sireum/S64$.apply:(Lorg/sireum/Z;)J
  #372 = NameAndType        #175:#176     // randomSeed:(Lorg/sireum/Z;)J
  #373 = Methodref          #2.#372       // org/sireum/S64$.randomSeed:(Lorg/sireum/Z;)J
  #374 = NameAndType        #125:#123     // random:()J
  #375 = Methodref          #2.#374       // org/sireum/S64$.random:()J
  #376 = Utf8               ()Lorg/sireum/$ZCompanionBigInt;
  #377 = NameAndType        #41:#117      // BigInt:()Lorg/sireum/S64$BigInt$;
  #378 = Methodref          #2.#377       // org/sireum/S64$.BigInt:()Lorg/sireum/S64$BigInt$;
  #379 = Utf8               ()Lorg/sireum/$ZCompanionString;
  #380 = NameAndType        #112:#113     // $String:()Lorg/sireum/S64$$String$;
  #381 = Methodref          #2.#380       // org/sireum/S64$.$String:()Lorg/sireum/S64$$String$;
  #382 = Utf8               ()Lorg/sireum/$ZCompanionLong;
  #383 = NameAndType        #44:#108      // Long:()Lorg/sireum/S64$Long$;
  #384 = Methodref          #2.#383       // org/sireum/S64$.Long:()Lorg/sireum/S64$Long$;
  #385 = Utf8               ()Lorg/sireum/$ZCompanionInt;
  #386 = NameAndType        #102:#103     // Int:()Lorg/sireum/S64$Int$;
  #387 = Methodref          #2.#386       // org/sireum/S64$.Int:()Lorg/sireum/S64$Int$;
  #388 = Utf8               x2$4
  #389 = Integer            44
  #390 = Methodref          #43.#283      // org/sireum/Z$MP$Long.toString:()Ljava/lang/String;
  #391 = Utf8                is less than S64.Min (-9223372036854775808)
  #392 = String             #391          //  is less than S64.Min (-9223372036854775808)
  #393 = Utf8               Lorg/sireum/Z$MP$Long;
  #394 = Integer            46
  #395 = Utf8                is greater than S64.Max (9223372036854775807)
  #396 = String             #395          //  is greater than S64.Max (9223372036854775807)
  #397 = Utf8               x3$4
  #398 = Methodref          #40.#283      // org/sireum/Z$MP$BigInt.toString:()Ljava/lang/String;
  #399 = Utf8               Lorg/sireum/Z$MP$BigInt;
  #400 = Methodref          #5.#68        // java/lang/Object."<init>":()V
  #401 = Utf8               $deserializeLambda$
  #402 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #403 = Utf8               scala/runtime/LambdaDeserialize
  #404 = Class              #403          // scala/runtime/LambdaDeserialize
  #405 = Utf8               bootstrap
  #406 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #407 = NameAndType        #405:#406     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #408 = Methodref          #404.#407     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #409 = MethodHandle       6:#408        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #410 = Utf8               lambdaDeserialize
  #411 = NameAndType        #410:#402     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #412 = InvokeDynamic      #4:#411       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #413 = Utf8               Signature
  #414 = Utf8               Code
  #415 = Utf8               LineNumberTable
  #416 = Utf8               LocalVariableTable
  #417 = Utf8               MethodParameters
  #418 = Utf8               StackMapTable
  #419 = Utf8               InnerClasses
  #420 = Utf8               SourceFile
  #421 = Utf8               BootstrapMethods
  #422 = Utf8               ScalaInlineInfo
  #423 = Utf8               Scala
{
  public static final org.sireum.S64$ MODULE$;
    descriptor: Lorg/sireum/S64$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final java.lang.String Name;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int BitWidth;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final long Min;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final long Max;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final long Index;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isZeroIndex;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isSigned;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isWrapped;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isBitVector;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean hasMin;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean hasMax;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final org.sireum.$ZCompanion<org.sireum.S64> $S64Companion;
    descriptor: Lorg/sireum/$ZCompanion;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #64                          // Lorg/sireum/$ZCompanion<Lorg/sireum/S64;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/S64$
         3: dup
         4: invokespecial #69                 // Method "<init>":()V
         7: putstatic     #71                 // Field MODULE$:Lorg/sireum/S64$;
        10: ldc           #73                 // String S64
        12: putstatic     #75                 // Field Name:Ljava/lang/String;
        15: bipush        64
        17: putstatic     #77                 // Field BitWidth:I
        20: ldc2_w        #78                 // long -9223372036854775808l
        23: putstatic     #81                 // Field Min:J
        26: ldc2_w        #82                 // long 9223372036854775807l
        29: putstatic     #85                 // Field Max:J
        32: lconst_0
        33: putstatic     #87                 // Field Index:J
        36: iconst_1
        37: putstatic     #89                 // Field isZeroIndex:Z
        40: iconst_1
        41: putstatic     #91                 // Field isSigned:Z
        44: iconst_1
        45: putstatic     #93                 // Field isWrapped:Z
        48: iconst_1
        49: putstatic     #95                 // Field isBitVector:Z
        52: iconst_1
        53: putstatic     #97                 // Field hasMin:Z
        56: iconst_1
        57: putstatic     #99                 // Field hasMax:Z
        60: getstatic     #71                 // Field MODULE$:Lorg/sireum/S64$;
        63: putstatic     #101                // Field $S64Companion:Lorg/sireum/$ZCompanion;
        66: return
      LineNumberTable:
        line 53: 0

  public org.sireum.S64$Int$ Int();
    descriptor: ()Lorg/sireum/S64$Int$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #106                // Field org/sireum/S64$Int$.MODULE$:Lorg/sireum/S64$Int$;
         3: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public org.sireum.S64$Long$ Long();
    descriptor: ()Lorg/sireum/S64$Long$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #111                // Field org/sireum/S64$Long$.MODULE$:Lorg/sireum/S64$Long$;
         3: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public org.sireum.S64$$String$ $String();
    descriptor: ()Lorg/sireum/S64$$String$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #116                // Field org/sireum/S64$$String$.MODULE$:Lorg/sireum/S64$$String$;
         3: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public org.sireum.S64$BigInt$ BigInt();
    descriptor: ()Lorg/sireum/S64$BigInt$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #120                // Field org/sireum/S64$BigInt$.MODULE$:Lorg/sireum/S64$BigInt$;
         3: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public java.lang.String Name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #75                 // Field Name:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public int BitWidth();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #77                 // Field BitWidth:I
         3: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public long Min();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #81                 // Field Min:J
         3: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public long Max();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #85                 // Field Max:J
         3: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public long Index();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #87                 // Field Index:J
         3: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public boolean isZeroIndex();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #89                 // Field isZeroIndex:Z
         3: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public boolean isSigned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #91                 // Field isSigned:Z
         3: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public boolean isWrapped();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #93                 // Field isWrapped:Z
         3: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public boolean isBitVector();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #95                 // Field isBitVector:Z
         3: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public boolean hasMin();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #97                 // Field hasMin:Z
         3: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public boolean hasMax();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #99                 // Field hasMax:Z
         3: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;

  public long random();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=1
         0: getstatic     #130                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: new           #17                 // class org/sireum/S64
         6: dup
         7: aload_0
         8: invokevirtual #132                // Method Min:()J
        11: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        14: invokevirtual #139                // Method org/sireum/S64.toBigInt:()Lscala/math/BigInt;
        17: invokevirtual #143                // Method org/sireum/Z$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        20: astore_1
        21: getstatic     #130                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        24: new           #17                 // class org/sireum/S64
        27: dup
        28: aload_0
        29: invokevirtual #145                // Method Max:()J
        32: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        35: invokevirtual #139                // Method org/sireum/S64.toBigInt:()Lscala/math/BigInt;
        38: invokevirtual #143                // Method org/sireum/Z$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        41: aload_1
        42: invokeinterface #149,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        47: getstatic     #152                // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        50: invokevirtual #156                // Method org/sireum/Z$MP$.one:()Lorg/sireum/Z;
        53: invokeinterface #159,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        58: astore_2
        59: getstatic     #130                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        62: invokevirtual #161                // Method org/sireum/Z$.random:()Lorg/sireum/Z;
        65: aload_2
        66: invokeinterface #164,  2          // InterfaceMethod org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
        71: astore_3
        72: aload_3
        73: aload_1
        74: invokeinterface #159,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        79: invokeinterface #165,  1          // InterfaceMethod org/sireum/Z.toBigInt:()Lscala/math/BigInt;
        84: invokevirtual #170                // Method scala/math/BigInt.toLong:()J
        87: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      66     1  zMin   Lorg/sireum/Z;
           59      28     2     d   Lorg/sireum/Z;
           72      15     3     n   Lorg/sireum/Z;
            0      88     0  this   Lorg/sireum/S64$;

  public long randomSeed(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: getstatic     #130                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: new           #17                 // class org/sireum/S64
         6: dup
         7: aload_0
         8: invokevirtual #132                // Method Min:()J
        11: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        14: invokevirtual #139                // Method org/sireum/S64.toBigInt:()Lscala/math/BigInt;
        17: invokevirtual #143                // Method org/sireum/Z$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        20: astore_2
        21: getstatic     #130                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        24: new           #17                 // class org/sireum/S64
        27: dup
        28: aload_0
        29: invokevirtual #145                // Method Max:()J
        32: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        35: invokevirtual #139                // Method org/sireum/S64.toBigInt:()Lscala/math/BigInt;
        38: invokevirtual #143                // Method org/sireum/Z$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        41: aload_2
        42: invokeinterface #149,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        47: getstatic     #152                // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        50: invokevirtual #156                // Method org/sireum/Z$MP$.one:()Lorg/sireum/Z;
        53: invokeinterface #159,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        58: astore_3
        59: getstatic     #130                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        62: aload_1
        63: invokevirtual #179                // Method org/sireum/Z$.randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
        66: aload_3
        67: invokeinterface #164,  2          // InterfaceMethod org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
        72: astore        4
        74: aload         4
        76: aload_2
        77: invokeinterface #159,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        82: invokeinterface #165,  1          // InterfaceMethod org/sireum/Z.toBigInt:()Lscala/math/BigInt;
        87: invokevirtual #170                // Method scala/math/BigInt.toLong:()J
        90: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      69     2  zMin   Lorg/sireum/Z;
           59      31     3     d   Lorg/sireum/Z;
           74      16     4     n   Lorg/sireum/Z;
            0      91     0  this   Lorg/sireum/S64$;
            0      91     1  seed   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      seed                           final

  public long apply(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #106                // Field org/sireum/S64$Int$.MODULE$:Lorg/sireum/S64$Int$;
         3: iload_1
         4: invokevirtual #182                // Method org/sireum/S64$Int$.apply:(I)J
         7: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/S64$;
            0       8     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public long apply(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #111                // Field org/sireum/S64$Long$.MODULE$:Lorg/sireum/S64$Long$;
         3: lload_1
         4: invokevirtual #185                // Method org/sireum/S64$Long$.apply:(J)J
         7: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/S64$;
            0       8     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public long apply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=7, args_size=2
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #43                 // class org/sireum/Z$MP$Long
         8: ifeq          115
        11: aload         4
        13: checkcast     #43                 // class org/sireum/Z$MP$Long
        16: astore        5
        18: aload_0
        19: invokevirtual #187                // Method isWrapped:()Z
        22: ifne          106
        25: getstatic     #192                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        28: getstatic     #197                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        31: new           #17                 // class org/sireum/S64
        34: dup
        35: aload_0
        36: invokevirtual #132                // Method Min:()J
        39: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        42: invokevirtual #200                // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        45: aload         5
        47: invokeinterface #204,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        52: invokevirtual #208                // Method org/sireum/B$.$4B:(Z)Z
        55: aload         5
        57: invokedynamic #228,  0            // InvokeDynamic #0:apply:(Lorg/sireum/Z$MP$Long;)Lscala/Function0;
        62: invokevirtual #232                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        65: getstatic     #192                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        68: getstatic     #197                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        71: aload         5
        73: new           #17                 // class org/sireum/S64
        76: dup
        77: aload_0
        78: invokevirtual #145                // Method Max:()J
        81: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        84: invokevirtual #200                // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        87: invokevirtual #233                // Method org/sireum/Z$MP$Long.$less$eq:(Lorg/sireum/Z;)Z
        90: invokevirtual #208                // Method org/sireum/B$.$4B:(Z)Z
        93: aload         5
        95: invokedynamic #238,  0            // InvokeDynamic #1:apply:(Lorg/sireum/Z$MP$Long;)Lscala/Function0;
       100: invokevirtual #232                // Method scala/Predef$.assert:(ZLscala/Function0;)V
       103: goto          106
       106: aload         5
       108: invokevirtual #241                // Method org/sireum/Z$MP$Long.value:()J
       111: lstore_2
       112: goto          290
       115: goto          118
       118: aload         4
       120: instanceof    #40                 // class org/sireum/Z$MP$BigInt
       123: ifeq          233
       126: aload         4
       128: checkcast     #40                 // class org/sireum/Z$MP$BigInt
       131: astore        6
       133: aload_0
       134: invokevirtual #187                // Method isWrapped:()Z
       137: ifne          221
       140: getstatic     #192                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       143: getstatic     #197                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       146: new           #17                 // class org/sireum/S64
       149: dup
       150: aload_0
       151: invokevirtual #132                // Method Min:()J
       154: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
       157: invokevirtual #200                // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
       160: aload         6
       162: invokeinterface #204,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
       167: invokevirtual #208                // Method org/sireum/B$.$4B:(Z)Z
       170: aload         6
       172: invokedynamic #249,  0            // InvokeDynamic #2:apply:(Lorg/sireum/Z$MP$BigInt;)Lscala/Function0;
       177: invokevirtual #232                // Method scala/Predef$.assert:(ZLscala/Function0;)V
       180: getstatic     #192                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       183: getstatic     #197                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       186: aload         6
       188: new           #17                 // class org/sireum/S64
       191: dup
       192: aload_0
       193: invokevirtual #145                // Method Max:()J
       196: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
       199: invokevirtual #200                // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
       202: invokevirtual #250                // Method org/sireum/Z$MP$BigInt.$less$eq:(Lorg/sireum/Z;)Z
       205: invokevirtual #208                // Method org/sireum/B$.$4B:(Z)Z
       208: aload         6
       210: invokedynamic #255,  0            // InvokeDynamic #3:apply:(Lorg/sireum/Z$MP$BigInt;)Lscala/Function0;
       215: invokevirtual #232                // Method scala/Predef$.assert:(ZLscala/Function0;)V
       218: goto          221
       221: aload         6
       223: invokevirtual #257                // Method org/sireum/Z$MP$BigInt.value:()Lscala/math/BigInt;
       226: invokevirtual #170                // Method scala/math/BigInt.toLong:()J
       229: lstore_2
       230: goto          290
       233: goto          236
       236: getstatic     #262                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       239: new           #264                // class java/lang/StringBuilder
       242: dup
       243: ldc_w         #265                // int 28
       246: invokespecial #268                // Method java/lang/StringBuilder."<init>":(I)V
       249: ldc_w         #270                // String Unsupported
       252: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       255: aload_0
       256: invokevirtual #276                // Method Name:()Ljava/lang/String;
       259: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       262: ldc_w         #278                // String  creation from
       265: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       268: aload_1
       269: invokeinterface #279,  1          // InterfaceMethod org/sireum/Z.Name:()Ljava/lang/String;
       274: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       277: ldc_w         #281                // String .
       280: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       283: invokevirtual #284                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       286: invokevirtual #288                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
       289: athrow
       290: lload_2
       291: lreturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 106
          locals = [ class org/sireum/S64$, class org/sireum/Z, top, top, class org/sireum/Z, class org/sireum/Z$MP$Long ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 8
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 102
          locals = [ top, class org/sireum/Z$MP$BigInt ]
        frame_type = 249 /* chop */
          offset_delta = 11
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class org/sireum/S64$, class org/sireum/Z, long, class org/sireum/Z ]
          stack = []
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     292     0  this   Lorg/sireum/S64$;
            0     292     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Option<org.sireum.S64> apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: getstatic     #298                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         3: new           #17                 // class org/sireum/S64
         6: dup
         7: getstatic     #116                // Field org/sireum/S64$$String$.MODULE$:Lorg/sireum/S64$$String$;
        10: aload_1
        11: invokevirtual #301                // Method org/sireum/S64$$String$.apply:(Ljava/lang/String;)J
        14: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        17: invokevirtual #304                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        20: goto          33
        23: pop
        24: getstatic     #309                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        27: invokevirtual #312                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        30: goto          33
        33: areturn
      Exception table:
         from    to  target type
             0    20    23   Class java/lang/Throwable
      StackMapTable: number_of_entries = 2
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/S64$;
            0      34     1     s   Ljava/lang/String;
    Signature: #290                         // (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/S64;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.Option<org.sireum.Z> unapply(long);
    descriptor: (J)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=2
         0: new           #317                // class scala/Some
         3: dup
         4: new           #17                 // class org/sireum/S64
         7: dup
         8: lload_1
         9: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        12: invokevirtual #200                // Method org/sireum/S64.toMP:()Lorg/sireum/Z;
        15: invokespecial #320                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        18: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/sireum/S64$;
            0      19     1     n   J
    Signature: #315                         // (J)Lscala/Option<Lorg/sireum/Z;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.S64$S64$Slang S64$Slang(scala.StringContext);
    descriptor: (Lscala/StringContext;)Lorg/sireum/S64$S64$Slang;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #32                 // class org/sireum/S64$S64$Slang
         3: dup
         4: aload_1
         5: invokespecial #325                // Method org/sireum/S64$S64$Slang."<init>":(Lscala/StringContext;)V
         8: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/S64$;
            0       9     1    sc   Lscala/StringContext;
    MethodParameters:
      Name                           Flags
      sc                             final

  public org.sireum.$ZCompanion<org.sireum.S64> $S64Companion();
    descriptor: ()Lorg/sireum/$ZCompanion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #101                // Field $S64Companion:Lorg/sireum/$ZCompanion;
         3: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;
    Signature: #328                         // ()Lorg/sireum/$ZCompanion<Lorg/sireum/S64;>;

  public final java.lang.String Name$extension(long);
    descriptor: (J)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #276                // Method Name:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;
            0       5     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int BitWidth$extension(long);
    descriptor: (J)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #335                // Method BitWidth:()I
         4: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;
            0       5     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final long Min$extension(long);
    descriptor: (J)J
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #132                // Method Min:()J
         4: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;
            0       5     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final long Max$extension(long);
    descriptor: (J)J
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #145                // Method Max:()J
         4: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;
            0       5     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final long Index$extension(long);
    descriptor: (J)J
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #340                // Method Index:()J
         4: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;
            0       5     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isZeroIndex$extension(long);
    descriptor: (J)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #344                // Method isZeroIndex:()Z
         4: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;
            0       5     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isSigned$extension(long);
    descriptor: (J)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #347                // Method isSigned:()Z
         4: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;
            0       5     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isWrapped$extension(long);
    descriptor: (J)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #187                // Method isWrapped:()Z
         4: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;
            0       5     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final long make$extension(long, long);
    descriptor: (JJ)J
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=3
         0: aload_0
         1: lload_3
         2: invokevirtual #352                // Method apply:(J)J
         5: lreturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/S64$;
            0       6     1 $this   J
            0       6     3     v   J
    MethodParameters:
      Name                           Flags
      $this                          final
      v                              final

  public final org.sireum.S64$Boxer$ boxer$extension(long);
    descriptor: (J)Lorg/sireum/S64$Boxer$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=3, args_size=2
         0: getstatic     #357                // Field org/sireum/S64$Boxer$.MODULE$:Lorg/sireum/S64$Boxer$;
         3: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/S64$;
            0       4     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int hashCode$extension(long);
    descriptor: (J)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: lload_1
         1: invokestatic  #363                // Method java/lang/Long.hashCode:(J)I
         4: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;
            0       5     1 $this   J
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean equals$extension(long, java.lang.Object);
    descriptor: (JLjava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=8, args_size=3
         0: aload_3
         1: astore        5
         3: aload         5
         5: instanceof    #17                 // class org/sireum/S64
         8: ifeq          17
        11: iconst_1
        12: istore        4
        14: goto          26
        17: goto          20
        20: iconst_0
        21: istore        4
        23: goto          26
        26: iload         4
        28: ifeq          59
        31: aload_3
        32: checkcast     #17                 // class org/sireum/S64
        35: invokevirtual #367                // Method org/sireum/S64.value:()J
        38: lstore        6
        40: lload_1
        41: lload         6
        43: lcmp
        44: ifne          51
        47: iconst_1
        48: goto          52
        51: iconst_0
        52: ifeq          59
        55: iconst_1
        56: goto          60
        59: iconst_0
        60: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 17
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class org/sireum/S64$, long, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ long ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0  this   Lorg/sireum/S64$;
            0      61     1 $this   J
            0      61     3   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public java.lang.Object apply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #17                 // class org/sireum/S64
         3: dup
         4: aload_0
         5: aload_1
         6: invokevirtual #371                // Method apply:(Lorg/sireum/Z;)J
         9: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        12: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/S64$;
            0      13     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object randomSeed(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #17                 // class org/sireum/S64
         3: dup
         4: aload_0
         5: aload_1
         6: invokevirtual #373                // Method randomSeed:(Lorg/sireum/Z;)J
         9: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        12: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/S64$;
            0      13     1  seed   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      seed                           final

  public java.lang.Object random();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #17                 // class org/sireum/S64
         3: dup
         4: aload_0
         5: invokevirtual #375                // Method random:()J
         8: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        11: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/S64$;

  public java.lang.Object Index();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #17                 // class org/sireum/S64
         3: dup
         4: aload_0
         5: invokevirtual #340                // Method Index:()J
         8: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        11: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/S64$;

  public java.lang.Object Max();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #17                 // class org/sireum/S64
         3: dup
         4: aload_0
         5: invokevirtual #145                // Method Max:()J
         8: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        11: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/S64$;

  public java.lang.Object Min();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #17                 // class org/sireum/S64
         3: dup
         4: aload_0
         5: invokevirtual #132                // Method Min:()J
         8: invokespecial #135                // Method org/sireum/S64."<init>":(J)V
        11: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/S64$;

  public org.sireum.$ZCompanionBigInt BigInt();
    descriptor: ()Lorg/sireum/$ZCompanionBigInt;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #378                // Method BigInt:()Lorg/sireum/S64$BigInt$;
         4: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;

  public org.sireum.$ZCompanionString $String();
    descriptor: ()Lorg/sireum/$ZCompanionString;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #381                // Method $String:()Lorg/sireum/S64$$String$;
         4: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;

  public org.sireum.$ZCompanionLong Long();
    descriptor: ()Lorg/sireum/$ZCompanionLong;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #384                // Method Long:()Lorg/sireum/S64$Long$;
         4: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;

  public org.sireum.$ZCompanionInt Int();
    descriptor: ()Lorg/sireum/$ZCompanionInt;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #387                // Method Int:()Lorg/sireum/S64$Int$;
         4: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;

  public static final java.lang.String $anonfun$apply$13(org.sireum.Z$MP$Long);
    descriptor: (Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #264                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #389                // int 44
         7: invokespecial #268                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #390                // Method org/sireum/Z$MP$Long.toString:()Ljava/lang/String;
        14: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc_w         #392                // String  is less than S64.Min (-9223372036854775808)
        20: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #284                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  x2$4   Lorg/sireum/Z$MP$Long;
    MethodParameters:
      Name                           Flags
      x2$4                           final

  public static final java.lang.String $anonfun$apply$14(org.sireum.Z$MP$Long);
    descriptor: (Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #264                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #394                // int 46
         7: invokespecial #268                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #390                // Method org/sireum/Z$MP$Long.toString:()Ljava/lang/String;
        14: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc_w         #396                // String  is greater than S64.Max (9223372036854775807)
        20: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #284                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  x2$4   Lorg/sireum/Z$MP$Long;
    MethodParameters:
      Name                           Flags
      x2$4                           final

  public static final java.lang.String $anonfun$apply$15(org.sireum.Z$MP$BigInt);
    descriptor: (Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #264                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #389                // int 44
         7: invokespecial #268                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #398                // Method org/sireum/Z$MP$BigInt.toString:()Ljava/lang/String;
        14: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc_w         #392                // String  is less than S64.Min (-9223372036854775808)
        20: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #284                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  x3$4   Lorg/sireum/Z$MP$BigInt;
    MethodParameters:
      Name                           Flags
      x3$4                           final

  public static final java.lang.String $anonfun$apply$16(org.sireum.Z$MP$BigInt);
    descriptor: (Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #264                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #394                // int 46
         7: invokespecial #268                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #398                // Method org/sireum/Z$MP$BigInt.toString:()Ljava/lang/String;
        14: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc_w         #396                // String  is greater than S64.Max (9223372036854775807)
        20: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #284                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  x3$4   Lorg/sireum/Z$MP$BigInt;
    MethodParameters:
      Name                           Flags
      x3$4                           final

  private org.sireum.S64$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #400                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/S64$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #412,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #18= #15 of #17;          // $String$=class org/sireum/S64$$String$ of class org/sireum/S64
  public static #21= #20 of #17;          // BigInt$=class org/sireum/S64$BigInt$ of class org/sireum/S64
  public static #24= #23 of #17;          // Boxer$=class org/sireum/S64$Boxer$ of class org/sireum/S64
  public static #27= #26 of #17;          // Int$=class org/sireum/S64$Int$ of class org/sireum/S64
  public static #30= #29 of #17;          // Long$=class org/sireum/S64$Long$ of class org/sireum/S64
  public static #33= #32 of #17;          // S64$Slang=class org/sireum/S64$S64$Slang of class org/sireum/S64
  public static #38= #35 of #37;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
  public static final #41= #40 of #35;    // BigInt=class org/sireum/Z$MP$BigInt of class org/sireum/Z$MP$
  public static final #44= #43 of #35;    // Long=class org/sireum/Z$MP$Long of class org/sireum/Z$MP$
Signature: #3                           // Ljava/lang/Object;Lorg/sireum/$ZCompanion<Lorg/sireum/S64;>;
SourceFile: "BitsRangeTypes.scala"
BootstrapMethods:
  0: #225 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #210 ()Ljava/lang/Object;
      #215 REF_invokeStatic org/sireum/S64$.$anonfun$apply$13:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
      #216 ()Ljava/lang/String;
      #217 5
      #218 1
      #216 ()Ljava/lang/String;
  1: #225 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #210 ()Ljava/lang/Object;
      #237 REF_invokeStatic org/sireum/S64$.$anonfun$apply$14:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
      #216 ()Ljava/lang/String;
      #217 5
      #218 1
      #216 ()Ljava/lang/String;
  2: #225 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #210 ()Ljava/lang/Object;
      #246 REF_invokeStatic org/sireum/S64$.$anonfun$apply$15:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
      #216 ()Ljava/lang/String;
      #217 5
      #218 1
      #216 ()Ljava/lang/String;
  3: #225 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #210 ()Ljava/lang/Object;
      #254 REF_invokeStatic org/sireum/S64$.$anonfun$apply$16:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
      #216 ()Ljava/lang/String;
      #217 5
      #218 1
      #216 ()Ljava/lang/String;
  4: #409 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #215 REF_invokeStatic org/sireum/S64$.$anonfun$apply$13:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
      #237 REF_invokeStatic org/sireum/S64$.$anonfun$apply$14:(Lorg/sireum/Z$MP$Long;)Ljava/lang/String;
      #246 REF_invokeStatic org/sireum/S64$.$anonfun$apply$15:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
      #254 REF_invokeStatic org/sireum/S64$.$anonfun$apply$16:(Lorg/sireum/Z$MP$BigInt;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x103 (unknown attribute)
   01 01 00 33 00 3E 01 47 01 00 70 01 7B 01 00 70
   00 71 01 00 D3 00 D4 01 00 EA 00 D4 01 00 F2 00
   F3 01 00 FB 00 F3 01 00 43 00 42 01 00 29 01 78
   01 00 29 00 75 01 00 31 00 7A 01 01 4C 01 4D 05
   00 36 00 7B 01 00 36 00 D1 01 01 52 00 B7 05 00
   66 01 81 01 00 66 00 67 01 00 2C 01 7E 01 00 2C
   00 6C 01 00 35 00 7B 01 00 35 00 D1 01 01 51 00
   B7 05 00 33 00 7B 01 00 33 00 D1 01 01 50 00 B7
   05 00 2F 00 79 01 01 49 01 4A 05 00 21 01 41 01
   00 8C 00 B4 01 00 8C 00 B7 01 00 8C 01 21 01 00
   8C 00 B0 01 00 8C 01 71 01 01 61 01 62 01 01 6C
   01 6D 01 00 3D 00 7C 01 00 3C 00 7C 01 01 66 01
   4D 01 00 3B 00 7C 01 00 39 00 7C 01 01 59 01 56
   05 00 3A 00 7C 01 01 5C 01 56 05 00 37 00 7C 01
   01 55 01 56 05 01 5D 01 5E 01 00 7D 00 7B 01 00
   7D 00 D1 01 00 AF 00 B0 01 00 AF 01 71 01 01 39
   01 3A 01
  Scala: length = 0x0 (unknown attribute)

