Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/xml/XML.class
  Last modified May 29, 2022; size 4834 bytes
  SHA-256 checksum a534ab4e1d76e2c1c0c36e571217282e06c890a6de740722bfeadee3e6e9fb56
  Compiled from "XML.scala"
public final class scala.xml.XML
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/xml/XML
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 26, attributes: 4
Constant pool:
    #1 = Utf8               scala/xml/XML
    #2 = Class              #1            // scala/xml/XML
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               XML.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\u0005\u001ds!\u0002\r\u001a\u0011\u0003qb!\u0002\u0011\u001a\u0011\u0003\t\u0003\"B\u0018\u0002\t\u0003\u0001\u0004b\u0002\u000e\u0002\u0005\u0004%\t!\r\u0005\u0007u\u0005\u0001\u000b\u0011\u0002\u001a\t\u000fm\n!\u0019!C\u0001c!1A(\u0001Q\u0001\nIBq!P\u0001C\u0002\u0013\u0005\u0011\u0007\u0003\u0004?\u0003\u0001\u0006IA\r\u0005\b\u007f\u0005\u0011\r\u0011\"\u00012\u0011\u0019\u0001\u0015\u0001)A\u0005e!9\u0011)\u0001b\u0001\n\u0003\t\u0004B\u0002\"\u0002A\u0003%!\u0007C\u00046\u0003\t\u0007I\u0011A\u0019\t\r\r\u000b\u0001\u0015!\u00033\u0011\u001d!\u0015A1A\u0005\u0002EBa!R\u0001!\u0002\u0013\u0011\u0004\"\u0002$\u0002\t\u00039\u0005\"B)\u0002\t\u000b\u0011\u0006b\u0002<\u0002#\u0003%)a\u001e\u0005\n\u0003\u000b\t\u0011\u0013!C\u0003\u0003\u000fA\u0011\"a\u0003\u0002#\u0003%)!!\u0004\t\u000f\u0005E\u0011\u0001\"\u0002\u0002\u0014!I\u0011\u0011I\u0001\u0012\u0002\u0013\u0015\u00111I\u0001\u000416c%B\u0001\u000e\u001c\u0003\rAX\u000e\u001c\u0006\u00029\u0005)1oY1mC\u000e\u0001\u0001CA\u0010\u0002\u001b\u0005I\"a\u0001-N\u0019N\u0019\u0011A\t\u0014\u0011\u0005\r\"S\"A\u000e\n\u0005\u0015Z\"AB!osJ+g\rE\u0002(U1j\u0011\u0001\u000b\u0006\u0003Se\tqAZ1di>\u0014\u00180\u0003\u0002,Q\tI\u0001,\u0014\'M_\u0006$WM\u001d\t\u0003?5J!AL\r\u0003\t\u0015cW-\\\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003y)\u0012A\r\t\u0003gaj\u0011\u0001\u000e\u0006\u0003kY\nA\u0001\\1oO*\tq\'\u0001\u0003kCZ\f\u0017BA\u001d5\u0005\u0019\u0019FO]5oO\u0006!\u00010\u001c7!\u0003\u0015AX\u000e\u001c8t\u0003\u0019AX\u000e\u001c8tA\u0005Ia.Y7fgB\f7-Z\u0001\u000b]\u0006lWm\u001d9bG\u0016\u0004\u0013\u0001\u00039sKN,\'O^3\u0002\u0013A\u0014Xm]3sm\u0016\u0004\u0013!B:qC\u000e,\u0017AB:qC\u000e,\u0007%A\u0003mC:<\u0007%\u0001\u0005f]\u000e|G-\u001b8h\u0003%)gnY8eS:<\u0007%A\u0007xSRD7+\u0011-QCJ\u001cXM\u001d\u000b\u0003M!CQ!S\tA\u0002)\u000b\u0011\u0001\u001d\t\u0003\u0017:s!a\b\'\n\u00055K\u0012a\u00029bG.\fw-Z\u0005\u0003\u001fB\u0013\u0011bU!Y!\u0006\u00148/\u001a:\u000b\u00055K\u0012\u0001B:bm\u0016$ba\u0015,cO&t\u0007CA\u0012U\u0013\t)6D\u0001\u0003V]&$\b\"B,\u0013\u0001\u0004A\u0016\u0001\u00034jY\u0016t\u0017-\\3\u0011\u0005e\u0003gB\u0001._!\tY6$D\u0001]\u0015\tiV$\u0001\u0004=e>|GOP\u0005\u0003?n\ta\u0001\u0015:fI\u00164\u0017BA\u001db\u0015\ty6\u0004C\u0003d%\u0001\u0007A-\u0001\u0003o_\u0012,\u0007CA\u0010f\u0013\t1\u0017D\u0001\u0003O_\u0012,\u0007b\u00025\u0013!\u0003\u0005\r\u0001W\u0001\u0004K:\u001c\u0007b\u00026\u0013!\u0003\u0005\ra[\u0001\bq6dG)Z2m!\t\u0019C.\u0003\u0002n7\t9!i\\8mK\u0006t\u0007bB8\u0013!\u0003\u0005\r\u0001]\u0001\bI>\u001cG/\u001f9f!\t\tH/D\u0001s\u0015\t\u0019\u0018$A\u0002ei\u0012L!!\u001e:\u0003\u000f\u0011{7\rV=qK\u0006q1/\u0019<fI\u0011,g-Y;mi\u0012\u001aT#\u0001=+\u0005aK8&\u0001>\u0011\u0007m\f\t!D\u0001}\u0015\tih0A\u0005v]\u000eDWmY6fI*\u0011qpG\u0001\u000bC:tw\u000e^1uS>t\u0017bAA\u0002y\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u001dM\fg/\u001a\u0013eK\u001a\fW\u000f\u001c;%iU\u0011\u0011\u0011\u0002\u0016\u0003Wf\fab]1wK\u0012\"WMZ1vYR$S\'\u0006\u0002\u0002\u0010)\u0012\u0001/_\u0001\u0006oJLG/\u001a\u000b\u000e\'\u0006U\u0011QEA\u0014\u0003S\tY#!\f\t\u000f\u0005]a\u00031\u0001\u0002\u001a\u0005\tq\u000f\u0005\u0003\u0002\u001c\u0005\u0005RBAA\u000f\u0015\r\tyBN\u0001\u0003S>LA!a\t\u0002\u001e\t1qK]5uKJDQa\u0019\fA\u0002\u0011DQ\u0001\u001b\fA\u0002aCQA\u001b\fA\u0002-DQa\u001c\fA\u0002AD\u0011\"a\f\u0017!\u0003\u0005\r!!\r\u0002\u00195Lg.[7ju\u0016$\u0016mZ:\u0011\t\u0005M\u0012\u0011\b\b\u0004?\u0005U\u0012bAA\u001c3\u0005aQ*\u001b8j[&TX-T8eK&!\u00111HA\u001f\u0005\u00151\u0016\r\\;f\u0013\r\tyd\u0007\u0002\f\u000b:,X.\u001a:bi&|g.A\bxe&$X\r\n3fM\u0006,H\u000e\u001e\u00137+\t\t)EK\u0002\u00022e\u0004
    #9 = Utf8               scala/Enumeration$Value
   #10 = Class              #9            // scala/Enumeration$Value
   #11 = Utf8               scala/Enumeration
   #12 = Class              #11           // scala/Enumeration
   #13 = Utf8               Value
   #14 = Utf8               write$default$6
   #15 = Utf8               ()Lscala/Enumeration$Value;
   #16 = Utf8               scala/xml/XML$
   #17 = Class              #16           // scala/xml/XML$
   #18 = Utf8               MODULE$
   #19 = Utf8               Lscala/xml/XML$;
   #20 = NameAndType        #18:#19       // MODULE$:Lscala/xml/XML$;
   #21 = Fieldref           #17.#20       // scala/xml/XML$.MODULE$:Lscala/xml/XML$;
   #22 = NameAndType        #14:#15       // write$default$6:()Lscala/Enumeration$Value;
   #23 = Methodref          #17.#22       // scala/xml/XML$.write$default$6:()Lscala/Enumeration$Value;
   #24 = Utf8               write
   #25 = Utf8               (Ljava/io/Writer;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;Lscala/Enumeration$Value;)V
   #26 = Utf8               w
   #27 = Utf8               node
   #28 = Utf8               enc
   #29 = Utf8               xmlDecl
   #30 = Utf8               doctype
   #31 = Utf8               minimizeTags
   #32 = NameAndType        #24:#25       // write:(Ljava/io/Writer;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;Lscala/Enumeration$Value;)V
   #33 = Methodref          #17.#32       // scala/xml/XML$.write:(Ljava/io/Writer;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;Lscala/Enumeration$Value;)V
   #34 = Utf8               Ljava/io/Writer;
   #35 = Utf8               Lscala/xml/Node;
   #36 = Utf8               Ljava/lang/String;
   #37 = Utf8               Z
   #38 = Utf8               Lscala/xml/dtd/DocType;
   #39 = Utf8               Lscala/Enumeration$Value;
   #40 = Utf8               save$default$5
   #41 = Utf8               ()Lscala/xml/dtd/DocType;
   #42 = NameAndType        #40:#41       // save$default$5:()Lscala/xml/dtd/DocType;
   #43 = Methodref          #17.#42       // scala/xml/XML$.save$default$5:()Lscala/xml/dtd/DocType;
   #44 = Utf8               save$default$4
   #45 = Utf8               ()Z
   #46 = NameAndType        #44:#45       // save$default$4:()Z
   #47 = Methodref          #17.#46       // scala/xml/XML$.save$default$4:()Z
   #48 = Utf8               save$default$3
   #49 = Utf8               ()Ljava/lang/String;
   #50 = NameAndType        #48:#49       // save$default$3:()Ljava/lang/String;
   #51 = Methodref          #17.#50       // scala/xml/XML$.save$default$3:()Ljava/lang/String;
   #52 = Utf8               save
   #53 = Utf8               (Ljava/lang/String;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;)V
   #54 = Utf8               filename
   #55 = NameAndType        #52:#53       // save:(Ljava/lang/String;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;)V
   #56 = Methodref          #17.#55       // scala/xml/XML$.save:(Ljava/lang/String;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;)V
   #57 = Utf8               withSAXParser
   #58 = Utf8               (Ljavax/xml/parsers/SAXParser;)Lscala/xml/factory/XMLLoader;
   #59 = Utf8               (Ljavax/xml/parsers/SAXParser;)Lscala/xml/factory/XMLLoader<Lscala/xml/Elem;>;
   #60 = Utf8               p
   #61 = NameAndType        #57:#58       // withSAXParser:(Ljavax/xml/parsers/SAXParser;)Lscala/xml/factory/XMLLoader;
   #62 = Methodref          #17.#61       // scala/xml/XML$.withSAXParser:(Ljavax/xml/parsers/SAXParser;)Lscala/xml/factory/XMLLoader;
   #63 = Utf8               Ljavax/xml/parsers/SAXParser;
   #64 = Utf8               encoding
   #65 = NameAndType        #64:#49       // encoding:()Ljava/lang/String;
   #66 = Methodref          #17.#65       // scala/xml/XML$.encoding:()Ljava/lang/String;
   #67 = Utf8               lang
   #68 = NameAndType        #67:#49       // lang:()Ljava/lang/String;
   #69 = Methodref          #17.#68       // scala/xml/XML$.lang:()Ljava/lang/String;
   #70 = Utf8               space
   #71 = NameAndType        #70:#49       // space:()Ljava/lang/String;
   #72 = Methodref          #17.#71       // scala/xml/XML$.space:()Ljava/lang/String;
   #73 = Utf8               preserve
   #74 = NameAndType        #73:#49       // preserve:()Ljava/lang/String;
   #75 = Methodref          #17.#74       // scala/xml/XML$.preserve:()Ljava/lang/String;
   #76 = Utf8               namespace
   #77 = NameAndType        #76:#49       // namespace:()Ljava/lang/String;
   #78 = Methodref          #17.#77       // scala/xml/XML$.namespace:()Ljava/lang/String;
   #79 = Utf8               xmlns
   #80 = NameAndType        #79:#49       // xmlns:()Ljava/lang/String;
   #81 = Methodref          #17.#80       // scala/xml/XML$.xmlns:()Ljava/lang/String;
   #82 = Utf8               xml
   #83 = NameAndType        #82:#49       // xml:()Ljava/lang/String;
   #84 = Methodref          #17.#83       // scala/xml/XML$.xml:()Ljava/lang/String;
   #85 = Utf8               loadString
   #86 = Utf8               (Ljava/lang/String;)Lscala/xml/Node;
   #87 = Utf8               string
   #88 = NameAndType        #85:#86       // loadString:(Ljava/lang/String;)Lscala/xml/Node;
   #89 = Methodref          #17.#88       // scala/xml/XML$.loadString:(Ljava/lang/String;)Lscala/xml/Node;
   #90 = Utf8               load
   #91 = Utf8               (Ljava/net/URL;)Lscala/xml/Node;
   #92 = Utf8               url
   #93 = NameAndType        #90:#91       // load:(Ljava/net/URL;)Lscala/xml/Node;
   #94 = Methodref          #17.#93       // scala/xml/XML$.load:(Ljava/net/URL;)Lscala/xml/Node;
   #95 = Utf8               Ljava/net/URL;
   #96 = Utf8               (Lorg/xml/sax/InputSource;)Lscala/xml/Node;
   #97 = Utf8               source
   #98 = NameAndType        #90:#96       // load:(Lorg/xml/sax/InputSource;)Lscala/xml/Node;
   #99 = Methodref          #17.#98       // scala/xml/XML$.load:(Lorg/xml/sax/InputSource;)Lscala/xml/Node;
  #100 = Utf8               Lorg/xml/sax/InputSource;
  #101 = Utf8               sysID
  #102 = NameAndType        #90:#86       // load:(Ljava/lang/String;)Lscala/xml/Node;
  #103 = Methodref          #17.#102      // scala/xml/XML$.load:(Ljava/lang/String;)Lscala/xml/Node;
  #104 = Utf8               (Ljava/io/Reader;)Lscala/xml/Node;
  #105 = Utf8               reader
  #106 = NameAndType        #90:#104      // load:(Ljava/io/Reader;)Lscala/xml/Node;
  #107 = Methodref          #17.#106      // scala/xml/XML$.load:(Ljava/io/Reader;)Lscala/xml/Node;
  #108 = Utf8               Ljava/io/Reader;
  #109 = Utf8               (Ljava/io/InputStream;)Lscala/xml/Node;
  #110 = Utf8               is
  #111 = NameAndType        #90:#109      // load:(Ljava/io/InputStream;)Lscala/xml/Node;
  #112 = Methodref          #17.#111      // scala/xml/XML$.load:(Ljava/io/InputStream;)Lscala/xml/Node;
  #113 = Utf8               Ljava/io/InputStream;
  #114 = Utf8               loadFile
  #115 = Utf8               name
  #116 = NameAndType        #114:#86      // loadFile:(Ljava/lang/String;)Lscala/xml/Node;
  #117 = Methodref          #17.#116      // scala/xml/XML$.loadFile:(Ljava/lang/String;)Lscala/xml/Node;
  #118 = Utf8               (Ljava/io/FileDescriptor;)Lscala/xml/Node;
  #119 = Utf8               fd
  #120 = NameAndType        #114:#118     // loadFile:(Ljava/io/FileDescriptor;)Lscala/xml/Node;
  #121 = Methodref          #17.#120      // scala/xml/XML$.loadFile:(Ljava/io/FileDescriptor;)Lscala/xml/Node;
  #122 = Utf8               Ljava/io/FileDescriptor;
  #123 = Utf8               (Ljava/io/File;)Lscala/xml/Node;
  #124 = Utf8               file
  #125 = NameAndType        #114:#123     // loadFile:(Ljava/io/File;)Lscala/xml/Node;
  #126 = Methodref          #17.#125      // scala/xml/XML$.loadFile:(Ljava/io/File;)Lscala/xml/Node;
  #127 = Utf8               Ljava/io/File;
  #128 = Utf8               loadXML
  #129 = Utf8               (Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
  #130 = Utf8               parser
  #131 = NameAndType        #128:#129     // loadXML:(Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
  #132 = Methodref          #17.#131      // scala/xml/XML$.loadXML:(Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
  #133 = Utf8               ()Ljavax/xml/parsers/SAXParser;
  #134 = NameAndType        #130:#133     // parser:()Ljavax/xml/parsers/SAXParser;
  #135 = Methodref          #17.#134      // scala/xml/XML$.parser:()Ljavax/xml/parsers/SAXParser;
  #136 = Utf8               adapter
  #137 = Utf8               ()Lscala/xml/parsing/FactoryAdapter;
  #138 = NameAndType        #136:#137     // adapter:()Lscala/xml/parsing/FactoryAdapter;
  #139 = Methodref          #17.#138      // scala/xml/XML$.adapter:()Lscala/xml/parsing/FactoryAdapter;
  #140 = Utf8               Code
  #141 = Utf8               LocalVariableTable
  #142 = Utf8               MethodParameters
  #143 = Utf8               Signature
  #144 = Utf8               InnerClasses
  #145 = Utf8               SourceFile
  #146 = Utf8               RuntimeVisibleAnnotations
  #147 = Utf8               ScalaSig
{
  public static scala.Enumeration$Value write$default$6();
    descriptor: ()Lscala/Enumeration$Value;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #23                 // Method scala/xml/XML$.write$default$6:()Lscala/Enumeration$Value;
         6: areturn

  public static void write(java.io.Writer, scala.xml.Node, java.lang.String, boolean, scala.xml.dtd.DocType, scala.Enumeration$Value);
    descriptor: (Ljava/io/Writer;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;Lscala/Enumeration$Value;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=6, args_size=6
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: iload_3
         7: aload         4
         9: aload         5
        11: invokevirtual #33                 // Method scala/xml/XML$.write:(Ljava/io/Writer;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;Lscala/Enumeration$Value;)V
        14: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0     w   Ljava/io/Writer;
            0      15     1  node   Lscala/xml/Node;
            0      15     2   enc   Ljava/lang/String;
            0      15     3 xmlDecl   Z
            0      15     4 doctype   Lscala/xml/dtd/DocType;
            0      15     5 minimizeTags   Lscala/Enumeration$Value;
    MethodParameters:
      Name                           Flags
      w                              final
      node                           final
      enc                            final
      xmlDecl                        final
      doctype                        final
      minimizeTags                   final

  public static scala.xml.dtd.DocType save$default$5();
    descriptor: ()Lscala/xml/dtd/DocType;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #43                 // Method scala/xml/XML$.save$default$5:()Lscala/xml/dtd/DocType;
         6: areturn

  public static boolean save$default$4();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #47                 // Method scala/xml/XML$.save$default$4:()Z
         6: ireturn

  public static java.lang.String save$default$3();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #51                 // Method scala/xml/XML$.save$default$3:()Ljava/lang/String;
         6: areturn

  public static void save(java.lang.String, scala.xml.Node, java.lang.String, boolean, scala.xml.dtd.DocType);
    descriptor: (Ljava/lang/String;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=5, args_size=5
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: iload_3
         7: aload         4
         9: invokevirtual #56                 // Method scala/xml/XML$.save:(Ljava/lang/String;Lscala/xml/Node;Ljava/lang/String;ZLscala/xml/dtd/DocType;)V
        12: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 filename   Ljava/lang/String;
            0      13     1  node   Lscala/xml/Node;
            0      13     2   enc   Ljava/lang/String;
            0      13     3 xmlDecl   Z
            0      13     4 doctype   Lscala/xml/dtd/DocType;
    MethodParameters:
      Name                           Flags
      filename                       final
      node                           final
      enc                            final
      xmlDecl                        final
      doctype                        final

  public static scala.xml.factory.XMLLoader<scala.xml.Elem> withSAXParser(javax.xml.parsers.SAXParser);
    descriptor: (Ljavax/xml/parsers/SAXParser;)Lscala/xml/factory/XMLLoader;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #62                 // Method scala/xml/XML$.withSAXParser:(Ljavax/xml/parsers/SAXParser;)Lscala/xml/factory/XMLLoader;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     p   Ljavax/xml/parsers/SAXParser;
    Signature: #59                          // (Ljavax/xml/parsers/SAXParser;)Lscala/xml/factory/XMLLoader<Lscala/xml/Elem;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public static java.lang.String encoding();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #66                 // Method scala/xml/XML$.encoding:()Ljava/lang/String;
         6: areturn

  public static java.lang.String lang();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #69                 // Method scala/xml/XML$.lang:()Ljava/lang/String;
         6: areturn

  public static java.lang.String space();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #72                 // Method scala/xml/XML$.space:()Ljava/lang/String;
         6: areturn

  public static java.lang.String preserve();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #75                 // Method scala/xml/XML$.preserve:()Ljava/lang/String;
         6: areturn

  public static java.lang.String namespace();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #78                 // Method scala/xml/XML$.namespace:()Ljava/lang/String;
         6: areturn

  public static java.lang.String xmlns();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #81                 // Method scala/xml/XML$.xmlns:()Ljava/lang/String;
         6: areturn

  public static java.lang.String xml();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #84                 // Method scala/xml/XML$.xml:()Ljava/lang/String;
         6: areturn

  public static scala.xml.Node loadString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #89                 // Method scala/xml/XML$.loadString:(Ljava/lang/String;)Lscala/xml/Node;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 string   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      string                         final

  public static scala.xml.Node load(java.net.URL);
    descriptor: (Ljava/net/URL;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #94                 // Method scala/xml/XML$.load:(Ljava/net/URL;)Lscala/xml/Node;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   url   Ljava/net/URL;
    MethodParameters:
      Name                           Flags
      url                            final

  public static scala.xml.Node load(org.xml.sax.InputSource);
    descriptor: (Lorg/xml/sax/InputSource;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #99                 // Method scala/xml/XML$.load:(Lorg/xml/sax/InputSource;)Lscala/xml/Node;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 source   Lorg/xml/sax/InputSource;
    MethodParameters:
      Name                           Flags
      source                         final

  public static scala.xml.Node load(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #103                // Method scala/xml/XML$.load:(Ljava/lang/String;)Lscala/xml/Node;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 sysID   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      sysID                          final

  public static scala.xml.Node load(java.io.Reader);
    descriptor: (Ljava/io/Reader;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #107                // Method scala/xml/XML$.load:(Ljava/io/Reader;)Lscala/xml/Node;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 reader   Ljava/io/Reader;
    MethodParameters:
      Name                           Flags
      reader                         final

  public static scala.xml.Node load(java.io.InputStream);
    descriptor: (Ljava/io/InputStream;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #112                // Method scala/xml/XML$.load:(Ljava/io/InputStream;)Lscala/xml/Node;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    is   Ljava/io/InputStream;
    MethodParameters:
      Name                           Flags
      is                             final

  public static scala.xml.Node loadFile(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #117                // Method scala/xml/XML$.loadFile:(Ljava/lang/String;)Lscala/xml/Node;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  name   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      name                           final

  public static scala.xml.Node loadFile(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #121                // Method scala/xml/XML$.loadFile:(Ljava/io/FileDescriptor;)Lscala/xml/Node;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    fd   Ljava/io/FileDescriptor;
    MethodParameters:
      Name                           Flags
      fd                             final

  public static scala.xml.Node loadFile(java.io.File);
    descriptor: (Ljava/io/File;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: invokevirtual #126                // Method scala/xml/XML$.loadFile:(Ljava/io/File;)Lscala/xml/Node;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  file   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      file                           final

  public static scala.xml.Node loadXML(org.xml.sax.InputSource, javax.xml.parsers.SAXParser);
    descriptor: (Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: aload_0
         4: aload_1
         5: invokevirtual #132                // Method scala/xml/XML$.loadXML:(Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 source   Lorg/xml/sax/InputSource;
            0       9     1 parser   Ljavax/xml/parsers/SAXParser;
    MethodParameters:
      Name                           Flags
      source                         final
      parser                         final

  public static javax.xml.parsers.SAXParser parser();
    descriptor: ()Ljavax/xml/parsers/SAXParser;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #135                // Method scala/xml/XML$.parser:()Ljavax/xml/parsers/SAXParser;
         6: areturn

  public static scala.xml.parsing.FactoryAdapter adapter();
    descriptor: ()Lscala/xml/parsing/FactoryAdapter;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #21                 // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
         3: invokevirtual #139                // Method scala/xml/XML$.adapter:()Lscala/xml/parsing/FactoryAdapter;
         6: areturn
}
InnerClasses:
  public abstract #13= #10 of #12;        // Value=class scala/Enumeration$Value of class scala/Enumeration
SourceFile: "XML.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u001ds!\u0002\r\u001a\u0011\u0003qb!\u0002\u0011\u001a\u0011\u0003\t\u0003\"B\u0018\u0002\t\u0003\u0001\u0004b\u0002\u000e\u0002\u0005\u0004%\t!\r\u0005\u0007u\u0005\u0001\u000b\u0011\u0002\u001a\t\u000fm\n!\u0019!C\u0001c!1A(\u0001Q\u0001\nIBq!P\u0001C\u0002\u0013\u0005\u0011\u0007\u0003\u0004?\u0003\u0001\u0006IA\r\u0005\b\u007f\u0005\u0011\r\u0011\"\u00012\u0011\u0019\u0001\u0015\u0001)A\u0005e!9\u0011)\u0001b\u0001\n\u0003\t\u0004B\u0002\"\u0002A\u0003%!\u0007C\u00046\u0003\t\u0007I\u0011A\u0019\t\r\r\u000b\u0001\u0015!\u00033\u0011\u001d!\u0015A1A\u0005\u0002EBa!R\u0001!\u0002\u0013\u0011\u0004\"\u0002$\u0002\t\u00039\u0005\"B)\u0002\t\u000b\u0011\u0006b\u0002<\u0002#\u0003%)a\u001e\u0005\n\u0003\u000b\t\u0011\u0013!C\u0003\u0003\u000fA\u0011\"a\u0003\u0002#\u0003%)!!\u0004\t\u000f\u0005E\u0011\u0001\"\u0002\u0002\u0014!I\u0011\u0011I\u0001\u0012\u0002\u0013\u0015\u00111I\u0001\u000416c%B\u0001\u000e\u001c\u0003\rAX\u000e\u001c\u0006\u00029\u0005)1oY1mC\u000e\u0001\u0001CA\u0010\u0002\u001b\u0005I\"a\u0001-N\u0019N\u0019\u0011A\t\u0014\u0011\u0005\r\"S\"A\u000e\n\u0005\u0015Z\"AB!osJ+g\rE\u0002(U1j\u0011\u0001\u000b\u0006\u0003Se\tqAZ1di>\u0014\u00180\u0003\u0002,Q\tI\u0001,\u0014\'M_\u0006$WM\u001d\t\u0003?5J!AL\r\u0003\t\u0015cW-\\\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003y)\u0012A\r\t\u0003gaj\u0011\u0001\u000e\u0006\u0003kY\nA\u0001\\1oO*\tq\'\u0001\u0003kCZ\f\u0017BA\u001d5\u0005\u0019\u0019FO]5oO\u0006!\u00010\u001c7!\u0003\u0015AX\u000e\u001c8t\u0003\u0019AX\u000e\u001c8tA\u0005Ia.Y7fgB\f7-Z\u0001\u000b]\u0006lWm\u001d9bG\u0016\u0004\u0013\u0001\u00039sKN,\'O^3\u0002\u0013A\u0014Xm]3sm\u0016\u0004\u0013!B:qC\u000e,\u0017AB:qC\u000e,\u0007%A\u0003mC:<\u0007%\u0001\u0005f]\u000e|G-\u001b8h\u0003%)gnY8eS:<\u0007%A\u0007xSRD7+\u0011-QCJ\u001cXM\u001d\u000b\u0003M!CQ!S\tA\u0002)\u000b\u0011\u0001\u001d\t\u0003\u0017:s!a\b\'\n\u00055K\u0012a\u00029bG.\fw-Z\u0005\u0003\u001fB\u0013\u0011bU!Y!\u0006\u00148/\u001a:\u000b\u00055K\u0012\u0001B:bm\u0016$ba\u0015,cO&t\u0007CA\u0012U\u0013\t)6D\u0001\u0003V]&$\b\"B,\u0013\u0001\u0004A\u0016\u0001\u00034jY\u0016t\u0017-\\3\u0011\u0005e\u0003gB\u0001._!\tY6$D\u0001]\u0015\tiV$\u0001\u0004=e>|GOP\u0005\u0003?n\ta\u0001\u0015:fI\u00164\u0017BA\u001db\u0015\ty6\u0004C\u0003d%\u0001\u0007A-\u0001\u0003o_\u0012,\u0007CA\u0010f\u0013\t1\u0017D\u0001\u0003O_\u0012,\u0007b\u00025\u0013!\u0003\u0005\r\u0001W\u0001\u0004K:\u001c\u0007b\u00026\u0013!\u0003\u0005\ra[\u0001\bq6dG)Z2m!\t\u0019C.\u0003\u0002n7\t9!i\\8mK\u0006t\u0007bB8\u0013!\u0003\u0005\r\u0001]\u0001\bI>\u001cG/\u001f9f!\t\tH/D\u0001s\u0015\t\u0019\u0018$A\u0002ei\u0012L!!\u001e:\u0003\u000f\u0011{7\rV=qK\u0006q1/\u0019<fI\u0011,g-Y;mi\u0012\u001aT#\u0001=+\u0005aK8&\u0001>\u0011\u0007m\f\t!D\u0001}\u0015\tih0A\u0005v]\u000eDWmY6fI*\u0011qpG\u0001\u000bC:tw\u000e^1uS>t\u0017bAA\u0002y\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u001dM\fg/\u001a\u0013eK\u001a\fW\u000f\u001c;%iU\u0011\u0011\u0011\u0002\u0016\u0003Wf\fab]1wK\u0012\"WMZ1vYR$S\'\u0006\u0002\u0002\u0010)\u0012\u0001/_\u0001\u0006oJLG/\u001a\u000b\u000e\'\u0006U\u0011QEA\u0014\u0003S\tY#!\f\t\u000f\u0005]a\u00031\u0001\u0002\u001a\u0005\tq\u000f\u0005\u0003\u0002\u001c\u0005\u0005RBAA\u000f\u0015\r\tyBN\u0001\u0003S>LA!a\t\u0002\u001e\t1qK]5uKJDQa\u0019\fA\u0002\u0011DQ\u0001\u001b\fA\u0002aCQA\u001b\fA\u0002-DQa\u001c\fA\u0002AD\u0011\"a\f\u0017!\u0003\u0005\r!!\r\u0002\u00195Lg.[7ju\u0016$\u0016mZ:\u0011\t\u0005M\u0012\u0011\b\b\u0004?\u0005U\u0012bAA\u001c3\u0005aQ*\u001b8j[&TX-T8eK&!\u00111HA\u001f\u0005\u00151\u0016\r\\;f\u0013\r\tyd\u0007\u0002\f\u000b:,X.\u001a:bi&|g.A\bxe&$X\r\n3fM\u0006,H\u000e\u001e\u00137+\t\t)EK\u0002\u00022e\u0004"
    )
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
