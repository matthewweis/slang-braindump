Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/graph/ReverseModuleTree$.class
  Last modified May 29, 2022; size 13419 bytes
  SHA-256 checksum 73cc54785386c62089b7fd24ff73e9d9b3c85c55b5cdcf10ef0c46b6b70ca365
  Compiled from "ReverseModuleTree.scala"
public final class coursier.graph.ReverseModuleTree$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/graph/ReverseModuleTree$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 28, attributes: 5
Constant pool:
    #1 = Utf8               coursier/graph/ReverseModuleTree$
    #2 = Class              #1            // coursier/graph/ReverseModuleTree$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               ReverseModuleTree.scala
    #6 = Utf8               coursier/graph/ReverseModuleTree$Node
    #7 = Class              #6            // coursier/graph/ReverseModuleTree$Node
    #8 = Utf8               coursier/graph/ReverseModuleTree
    #9 = Class              #8            // coursier/graph/ReverseModuleTree
   #10 = Utf8               Node
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/Option$WithFilter
   #17 = Class              #16           // scala/Option$WithFilter
   #18 = Utf8               scala/Option
   #19 = Class              #18           // scala/Option
   #20 = Utf8               WithFilter
   #21 = Utf8               scala/math/Ordering$String$
   #22 = Class              #21           // scala/math/Ordering$String$
   #23 = Utf8               scala/math/Ordering
   #24 = Class              #23           // scala/math/Ordering
   #25 = Utf8
   #26 = Utf8               MODULE$
   #27 = Utf8               Lcoursier/graph/ReverseModuleTree$;
   #28 = Utf8               <clinit>
   #29 = Utf8               ()V
   #30 = Utf8               <init>
   #31 = NameAndType        #30:#29       // "<init>":()V
   #32 = Methodref          #2.#31        // coursier/graph/ReverseModuleTree$."<init>":()V
   #33 = NameAndType        #26:#27       // MODULE$:Lcoursier/graph/ReverseModuleTree$;
   #34 = Fieldref           #2.#33        // coursier/graph/ReverseModuleTree$.MODULE$:Lcoursier/graph/ReverseModuleTree$;
   #35 = Utf8               fromModuleTree
   #36 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #37 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;Lscala/collection/immutable/Seq<Lcoursier/graph/ModuleTree;>;)Lscala/collection/immutable/Seq<Lcoursier/graph/ReverseModuleTree;>;
   #38 = Utf8               roots
   #39 = Utf8               moduleTrees
   #40 = Utf8               scala/collection/mutable/HashSet
   #41 = Class              #40           // scala/collection/mutable/HashSet
   #42 = Methodref          #41.#31       // scala/collection/mutable/HashSet."<init>":()V
   #43 = Utf8               scala/collection/mutable/HashMap
   #44 = Class              #43           // scala/collection/mutable/HashMap
   #45 = Methodref          #44.#31       // scala/collection/mutable/HashMap."<init>":()V
   #46 = Utf8               scala/collection/mutable/Queue
   #47 = Class              #46           // scala/collection/mutable/Queue
   #48 = Utf8               scala/collection/mutable/Queue$
   #49 = Class              #48           // scala/collection/mutable/Queue$
   #50 = Utf8               Lscala/collection/mutable/Queue$;
   #51 = NameAndType        #26:#50       // MODULE$:Lscala/collection/mutable/Queue$;
   #52 = Fieldref           #49.#51       // scala/collection/mutable/Queue$.MODULE$:Lscala/collection/mutable/Queue$;
   #53 = Utf8               $lessinit$greater$default$1
   #54 = Utf8               ()I
   #55 = NameAndType        #53:#54       // $lessinit$greater$default$1:()I
   #56 = Methodref          #49.#55       // scala/collection/mutable/Queue$.$lessinit$greater$default$1:()I
   #57 = Utf8               (I)V
   #58 = NameAndType        #30:#57       // "<init>":(I)V
   #59 = Methodref          #47.#58       // scala/collection/mutable/Queue."<init>":(I)V
   #60 = Utf8               $plus$plus$eq
   #61 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
   #62 = NameAndType        #60:#61       // $plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
   #63 = Methodref          #47.#62       // scala/collection/mutable/Queue.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
   #64 = Utf8               scala/collection/immutable/Seq
   #65 = Class              #64           // scala/collection/immutable/Seq
   #66 = Utf8               nonEmpty
   #67 = Utf8               ()Z
   #68 = NameAndType        #66:#67       // nonEmpty:()Z
   #69 = Methodref          #47.#68       // scala/collection/mutable/Queue.nonEmpty:()Z
   #70 = Utf8               dequeue
   #71 = Utf8               ()Ljava/lang/Object;
   #72 = NameAndType        #70:#71       // dequeue:()Ljava/lang/Object;
   #73 = Methodref          #47.#72       // scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
   #74 = Utf8               coursier/graph/ModuleTree
   #75 = Class              #74           // coursier/graph/ModuleTree
   #76 = Utf8               $plus$eq
   #77 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #78 = NameAndType        #76:#77       // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #79 = Methodref          #41.#78       // scala/collection/mutable/HashSet.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #80 = Utf8               module
   #81 = Utf8               ()Lcoursier/core/Module;
   #82 = NameAndType        #80:#81       // module:()Lcoursier/core/Module;
   #83 = Methodref          #75.#82       // coursier/graph/ModuleTree.module:()Lcoursier/core/Module;
   #84 = Utf8               scala/Tuple2
   #85 = Class              #84           // scala/Tuple2
   #86 = Utf8               reconciledVersion
   #87 = Utf8               ()Ljava/lang/String;
   #88 = NameAndType        #86:#87       // reconciledVersion:()Ljava/lang/String;
   #89 = Methodref          #75.#88       // coursier/graph/ModuleTree.reconciledVersion:()Ljava/lang/String;
   #90 = Utf8               retainedVersion
   #91 = NameAndType        #90:#87       // retainedVersion:()Ljava/lang/String;
   #92 = Methodref          #75.#91       // coursier/graph/ModuleTree.retainedVersion:()Ljava/lang/String;
   #93 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #94 = NameAndType        #30:#93       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #95 = Methodref          #85.#94       // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #96 = Utf8               put
   #97 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
   #98 = NameAndType        #96:#97       // put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
   #99 = Methodref          #44.#98       // scala/collection/mutable/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  #100 = Utf8               children
  #101 = Utf8               ()Lscala/collection/immutable/Seq;
  #102 = NameAndType        #100:#101     // children:()Lscala/collection/immutable/Seq;
  #103 = Methodref          #75.#102      // coursier/graph/ModuleTree.children:()Lscala/collection/immutable/Seq;
  #104 = Utf8               filterNot
  #105 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #106 = NameAndType        #104:#105     // filterNot:(Lscala/Function1;)Ljava/lang/Object;
  #107 = InterfaceMethodref #65.#106      // scala/collection/immutable/Seq.filterNot:(Lscala/Function1;)Ljava/lang/Object;
  #108 = Utf8               scala/collection/IterableOnce
  #109 = Class              #108          // scala/collection/IterableOnce
  #110 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #111 = MethodType         #110          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #112 = Utf8               $anonfun$fromModuleTree$1$adapted
  #113 = Utf8               (Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
  #114 = NameAndType        #112:#113     // $anonfun$fromModuleTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
  #115 = Methodref          #2.#114       // coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
  #116 = MethodHandle       6:#115        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
  #117 = Utf8               (Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
  #118 = MethodType         #117          //  (Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
  #119 = Integer            5
  #120 = Integer            1
  #121 = Utf8               java/lang/invoke/LambdaMetafactory
  #122 = Class              #121          // java/lang/invoke/LambdaMetafactory
  #123 = Utf8               altMetafactory
  #124 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #125 = NameAndType        #123:#124     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #126 = Methodref          #122.#125     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #127 = MethodHandle       6:#126        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #128 = Utf8               apply
  #129 = Utf8               (Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;)Lscala/Function1;
  #130 = NameAndType        #128:#129     // apply:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;)Lscala/Function1;
  #131 = InvokeDynamic      #0:#130       // #0:apply:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;)Lscala/Function1;
  #132 = Utf8               foreach
  #133 = Utf8               (Lscala/Function1;)V
  #134 = NameAndType        #132:#133     // foreach:(Lscala/Function1;)V
  #135 = InterfaceMethodref #65.#134      // scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
  #136 = Utf8               scala/$less$colon$less$
  #137 = Class              #136          // scala/$less$colon$less$
  #138 = Utf8               Lscala/$less$colon$less$;
  #139 = NameAndType        #26:#138      // MODULE$:Lscala/$less$colon$less$;
  #140 = Fieldref           #137.#139     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #141 = Utf8               refl
  #142 = Utf8               ()Lscala/$eq$colon$eq;
  #143 = NameAndType        #141:#142     // refl:()Lscala/$eq$colon$eq;
  #144 = Methodref          #137.#143     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #145 = Utf8               toMap
  #146 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #147 = NameAndType        #145:#146     // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #148 = Methodref          #44.#147      // scala/collection/mutable/HashMap.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #149 = Utf8               scala/collection/immutable/Map
  #150 = Class              #149          // scala/collection/immutable/Map
  #151 = Utf8               view
  #152 = Utf8               ()Lscala/collection/MapView;
  #153 = NameAndType        #151:#152     // view:()Lscala/collection/MapView;
  #154 = InterfaceMethodref #150.#153     // scala/collection/immutable/Map.view:()Lscala/collection/MapView;
  #155 = Utf8               $anonfun$fromModuleTree$3
  #156 = Utf8               (Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  #157 = NameAndType        #155:#156     // $anonfun$fromModuleTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  #158 = Methodref          #2.#157       // coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  #159 = MethodHandle       6:#158        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  #160 = MethodType         #156          //  (Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  #161 = Utf8               ()Lscala/Function1;
  #162 = NameAndType        #128:#161     // apply:()Lscala/Function1;
  #163 = InvokeDynamic      #1:#162       // #1:apply:()Lscala/Function1;
  #164 = Utf8               scala/collection/MapView
  #165 = Class              #164          // scala/collection/MapView
  #166 = Utf8               mapValues
  #167 = Utf8               (Lscala/Function1;)Lscala/collection/MapView;
  #168 = NameAndType        #166:#167     // mapValues:(Lscala/Function1;)Lscala/collection/MapView;
  #169 = InterfaceMethodref #165.#168     // scala/collection/MapView.mapValues:(Lscala/Function1;)Lscala/collection/MapView;
  #170 = Utf8               iterator
  #171 = Utf8               ()Lscala/collection/Iterator;
  #172 = NameAndType        #170:#171     // iterator:()Lscala/collection/Iterator;
  #173 = InterfaceMethodref #165.#172     // scala/collection/MapView.iterator:()Lscala/collection/Iterator;
  #174 = Utf8               scala/collection/Iterator
  #175 = Class              #174          // scala/collection/Iterator
  #176 = InterfaceMethodref #175.#147     // scala/collection/Iterator.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #177 = Utf8               $anonfun$fromModuleTree$5
  #178 = Utf8               (Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
  #179 = NameAndType        #177:#178     // $anonfun$fromModuleTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
  #180 = Methodref          #2.#179       // coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
  #181 = MethodHandle       6:#180        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
  #182 = Utf8               (Lcoursier/core/Module;)Lscala/Option;
  #183 = MethodType         #182          //  (Lcoursier/core/Module;)Lscala/Option;
  #184 = Utf8               (Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
  #185 = NameAndType        #128:#184     // apply:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
  #186 = InvokeDynamic      #2:#185       // #2:apply:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
  #187 = Utf8               flatMap
  #188 = NameAndType        #187:#105     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #189 = InterfaceMethodref #65.#188      // scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #190 = Utf8               elem
  #191 = Utf8               Lcoursier/graph/ModuleTree;
  #192 = Utf8               Lscala/collection/immutable/Seq;
  #193 = Utf8               alreadySeen
  #194 = Utf8               Lscala/collection/mutable/HashSet;
  #195 = Utf8               dependees
  #196 = Utf8               Lscala/collection/mutable/HashMap;
  #197 = Utf8               versions
  #198 = Utf8               toCheck
  #199 = Utf8               Lscala/collection/mutable/Queue;
  #200 = Utf8               dependees0
  #201 = Utf8               Lscala/collection/immutable/Map;
  #202 = Utf8               versions0
  #203 = Utf8               this
  #204 = Utf8               fromDependencyTree
  #205 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;Lscala/collection/immutable/Seq<Lcoursier/graph/DependencyTree;>;)Lscala/collection/immutable/Seq<Lcoursier/graph/ReverseModuleTree;>;
  #206 = Utf8               dependencyTrees
  #207 = Utf8               coursier/graph/DependencyTree
  #208 = Class              #207          // coursier/graph/DependencyTree
  #209 = Utf8               dependency
  #210 = Utf8               ()Lcoursier/core/Dependency;
  #211 = NameAndType        #209:#210     // dependency:()Lcoursier/core/Dependency;
  #212 = Methodref          #208.#211     // coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
  #213 = Utf8               coursier/core/Dependency
  #214 = Class              #213          // coursier/core/Dependency
  #215 = Methodref          #214.#82      // coursier/core/Dependency.module:()Lcoursier/core/Module;
  #216 = Methodref          #208.#88      // coursier/graph/DependencyTree.reconciledVersion:()Ljava/lang/String;
  #217 = Methodref          #208.#91      // coursier/graph/DependencyTree.retainedVersion:()Ljava/lang/String;
  #218 = Methodref          #208.#102     // coursier/graph/DependencyTree.children:()Lscala/collection/immutable/Seq;
  #219 = Utf8               $anonfun$fromDependencyTree$1$adapted
  #220 = Utf8               (Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
  #221 = NameAndType        #219:#220     // $anonfun$fromDependencyTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
  #222 = Methodref          #2.#221       // coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
  #223 = MethodHandle       6:#222        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
  #224 = Utf8               (Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
  #225 = MethodType         #224          //  (Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
  #226 = Utf8               (Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;)Lscala/Function1;
  #227 = NameAndType        #128:#226     // apply:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;)Lscala/Function1;
  #228 = InvokeDynamic      #3:#227       // #3:apply:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;)Lscala/Function1;
  #229 = Utf8               $anonfun$fromDependencyTree$3
  #230 = NameAndType        #229:#156     // $anonfun$fromDependencyTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  #231 = Methodref          #2.#230       // coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  #232 = MethodHandle       6:#231        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  #233 = InvokeDynamic      #4:#162       // #4:apply:()Lscala/Function1;
  #234 = Utf8               $anonfun$fromDependencyTree$5
  #235 = NameAndType        #234:#178     // $anonfun$fromDependencyTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
  #236 = Methodref          #2.#235       // coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
  #237 = MethodHandle       6:#236        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
  #238 = InvokeDynamic      #5:#185       // #5:apply:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
  #239 = Utf8               Lcoursier/graph/DependencyTree;
  #240 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
  #241 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;Z)Lscala/collection/immutable/Seq<Lcoursier/graph/ReverseModuleTree;>;
  #242 = Utf8               resolution
  #243 = Utf8               withExclusions
  #244 = Utf8               coursier/graph/DependencyTree$
  #245 = Class              #244          // coursier/graph/DependencyTree$
  #246 = Utf8               Lcoursier/graph/DependencyTree$;
  #247 = NameAndType        #26:#246      // MODULE$:Lcoursier/graph/DependencyTree$;
  #248 = Fieldref           #245.#247     // coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
  #249 = Utf8               apply$default$2
  #250 = NameAndType        #249:#101     // apply$default$2:()Lscala/collection/immutable/Seq;
  #251 = Methodref          #245.#250     // coursier/graph/DependencyTree$.apply$default$2:()Lscala/collection/immutable/Seq;
  #252 = NameAndType        #128:#240     // apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
  #253 = Methodref          #245.#252     // coursier/graph/DependencyTree$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
  #254 = Utf8               scala/Option$
  #255 = Class              #254          // scala/Option$
  #256 = Utf8               Lscala/Option$;
  #257 = NameAndType        #26:#256      // MODULE$:Lscala/Option$;
  #258 = Fieldref           #255.#257     // scala/Option$.MODULE$:Lscala/Option$;
  #259 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #260 = NameAndType        #128:#259     // apply:(Ljava/lang/Object;)Lscala/Option;
  #261 = Methodref          #255.#260     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #262 = MethodType         #71           //  ()Ljava/lang/Object;
  #263 = Utf8               $anonfun$apply$1
  #264 = Utf8               (Lcoursier/core/Resolution;)Lscala/collection/immutable/Vector;
  #265 = NameAndType        #263:#264     // $anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Vector;
  #266 = Methodref          #2.#265       // coursier/graph/ReverseModuleTree$.$anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Vector;
  #267 = MethodHandle       6:#266        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Vector;
  #268 = Utf8               ()Lscala/collection/immutable/Vector;
  #269 = MethodType         #268          //  ()Lscala/collection/immutable/Vector;
  #270 = Utf8               (Lcoursier/core/Resolution;)Lscala/Function0;
  #271 = NameAndType        #128:#270     // apply:(Lcoursier/core/Resolution;)Lscala/Function0;
  #272 = InvokeDynamic      #6:#271       // #6:apply:(Lcoursier/core/Resolution;)Lscala/Function0;
  #273 = Utf8               getOrElse
  #274 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #275 = NameAndType        #273:#274     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #276 = Methodref          #19.#275      // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #277 = NameAndType        #204:#36      // fromDependencyTree:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #278 = Methodref          #2.#277       // coursier/graph/ReverseModuleTree$.fromDependencyTree:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #279 = Utf8               x$1
  #280 = Utf8               Lcoursier/core/Resolution;
  #281 = Utf8               x$2
  #282 = Utf8               Z
  #283 = Utf8               x$3
  #284 = Utf8               t
  #285 = Utf8               roots0
  #286 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;
  #287 = Utf8               apply$default$3
  #288 = Utf8               $anonfun$fromModuleTree$2
  #289 = Utf8               ()Lscala/collection/mutable/HashSet;
  #290 = Utf8               $anonfun$fromModuleTree$1
  #291 = Utf8               (Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Z
  #292 = Utf8               dependees$1
  #293 = Utf8               elem$1
  #294 = Utf8               c
  #295 = NameAndType        #288:#289     // $anonfun$fromModuleTree$2:()Lscala/collection/mutable/HashSet;
  #296 = Methodref          #2.#295       // coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$2:()Lscala/collection/mutable/HashSet;
  #297 = MethodHandle       6:#296        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$2:()Lscala/collection/mutable/HashSet;
  #298 = MethodType         #289          //  ()Lscala/collection/mutable/HashSet;
  #299 = Utf8               ()Lscala/Function0;
  #300 = NameAndType        #128:#299     // apply:()Lscala/Function0;
  #301 = InvokeDynamic      #7:#300       // #7:apply:()Lscala/Function0;
  #302 = Utf8               getOrElseUpdate
  #303 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #304 = NameAndType        #302:#303     // getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #305 = Methodref          #44.#304      // scala/collection/mutable/HashMap.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #306 = Utf8               scala/Tuple3
  #307 = Class              #306          // scala/Tuple3
  #308 = Utf8               scala/runtime/BoxesRunTime
  #309 = Class              #308          // scala/runtime/BoxesRunTime
  #310 = Utf8               boxToBoolean
  #311 = Utf8               (Z)Ljava/lang/Boolean;
  #312 = NameAndType        #310:#311     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #313 = Methodref          #309.#312     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #314 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #315 = NameAndType        #30:#314      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #316 = Methodref          #307.#315     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #317 = Utf8               add
  #318 = Utf8               (Ljava/lang/Object;)Z
  #319 = NameAndType        #317:#318     // add:(Ljava/lang/Object;)Z
  #320 = Methodref          #41.#319      // scala/collection/mutable/HashSet.add:(Ljava/lang/Object;)Z
  #321 = Utf8               b
  #322 = Utf8               $anonfun$fromModuleTree$4
  #323 = Utf8               (Lscala/Tuple3;)Lscala/Tuple3;
  #324 = Utf8               _1
  #325 = NameAndType        #324:#71      // _1:()Ljava/lang/Object;
  #326 = Methodref          #307.#325     // scala/Tuple3._1:()Ljava/lang/Object;
  #327 = Utf8               coursier/core/Module
  #328 = Class              #327          // coursier/core/Module
  #329 = Utf8               organization
  #330 = NameAndType        #329:#87      // organization:()Ljava/lang/String;
  #331 = Methodref          #328.#330     // coursier/core/Module.organization:()Ljava/lang/String;
  #332 = Utf8               name
  #333 = NameAndType        #332:#87      // name:()Ljava/lang/String;
  #334 = Methodref          #328.#333     // coursier/core/Module.name:()Ljava/lang/String;
  #335 = Utf8               nameWithAttributes
  #336 = NameAndType        #335:#87      // nameWithAttributes:()Ljava/lang/String;
  #337 = Methodref          #328.#336     // coursier/core/Module.nameWithAttributes:()Ljava/lang/String;
  #338 = Utf8               Lscala/Tuple3;
  #339 = Utf8               toVector
  #340 = NameAndType        #339:#268     // toVector:()Lscala/collection/immutable/Vector;
  #341 = Methodref          #41.#340      // scala/collection/mutable/HashSet.toVector:()Lscala/collection/immutable/Vector;
  #342 = NameAndType        #322:#323     // $anonfun$fromModuleTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
  #343 = Methodref          #2.#342       // coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
  #344 = MethodHandle       6:#343        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
  #345 = MethodType         #323          //  (Lscala/Tuple3;)Lscala/Tuple3;
  #346 = InvokeDynamic      #8:#162       // #8:apply:()Lscala/Function1;
  #347 = Utf8               scala/math/Ordering$
  #348 = Class              #347          // scala/math/Ordering$
  #349 = Utf8               Lscala/math/Ordering$;
  #350 = NameAndType        #26:#349      // MODULE$:Lscala/math/Ordering$;
  #351 = Fieldref           #348.#350     // scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
  #352 = Utf8               Lscala/math/Ordering$String$;
  #353 = NameAndType        #26:#352      // MODULE$:Lscala/math/Ordering$String$;
  #354 = Fieldref           #22.#353      // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
  #355 = Utf8               Tuple3
  #356 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #357 = NameAndType        #355:#356     // Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #358 = Methodref          #348.#357     // scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #359 = Utf8               scala/collection/immutable/Vector
  #360 = Class              #359          // scala/collection/immutable/Vector
  #361 = Utf8               sortBy
  #362 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #363 = NameAndType        #361:#362     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #364 = Methodref          #360.#363     // scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #365 = Utf8               $anonfun$fromModuleTree$6
  #366 = Utf8               (Lscala/Tuple2;)Z
  #367 = Utf8               check$ifrefutable$1
  #368 = Utf8               Lscala/Tuple2;
  #369 = Utf8               $anonfun$fromModuleTree$7
  #370 = Utf8               (Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  #371 = Utf8               m$1
  #372 = Utf8               dependees0$1
  #373 = Utf8               versions0$1
  #374 = Methodref          #85.#325      // scala/Tuple2._1:()Ljava/lang/Object;
  #375 = Utf8               java/lang/String
  #376 = Class              #375          // java/lang/String
  #377 = Utf8               _2
  #378 = NameAndType        #377:#71      // _2:()Ljava/lang/Object;
  #379 = Methodref          #85.#378      // scala/Tuple2._2:()Ljava/lang/Object;
  #380 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLscala/collection/immutable/Map;Lscala/collection/immutable/Map;)V
  #381 = NameAndType        #30:#380      // "<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLscala/collection/immutable/Map;Lscala/collection/immutable/Map;)V
  #382 = Methodref          #7.#381       // coursier/graph/ReverseModuleTree$Node."<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLscala/collection/immutable/Map;Lscala/collection/immutable/Map;)V
  #383 = Utf8               scala/MatchError
  #384 = Class              #383          // scala/MatchError
  #385 = Utf8               (Ljava/lang/Object;)V
  #386 = NameAndType        #30:#385      // "<init>":(Ljava/lang/Object;)V
  #387 = Methodref          #384.#386     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #388 = Utf8               reconciled
  #389 = Utf8               Ljava/lang/String;
  #390 = Utf8               retained
  #391 = Utf8               Lcoursier/core/Module;
  #392 = Utf8               versions$1
  #393 = Utf8               m
  #394 = Utf8               get
  #395 = NameAndType        #394:#259     // get:(Ljava/lang/Object;)Lscala/Option;
  #396 = Methodref          #44.#395      // scala/collection/mutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
  #397 = Utf8               $anonfun$fromModuleTree$6$adapted
  #398 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #399 = NameAndType        #397:#398     // $anonfun$fromModuleTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #400 = Methodref          #2.#399       // coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #401 = MethodHandle       6:#400        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #402 = MethodType         #398          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #403 = InvokeDynamic      #9:#162       // #9:apply:()Lscala/Function1;
  #404 = Utf8               withFilter
  #405 = Utf8               (Lscala/Function1;)Lscala/Option$WithFilter;
  #406 = NameAndType        #404:#405     // withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #407 = Methodref          #19.#406      // scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #408 = NameAndType        #369:#370     // $anonfun$fromModuleTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  #409 = Methodref          #2.#408       // coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  #410 = MethodHandle       6:#409        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  #411 = Utf8               (Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  #412 = MethodType         #411          //  (Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  #413 = Utf8               (Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
  #414 = NameAndType        #128:#413     // apply:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
  #415 = InvokeDynamic      #10:#414      // #10:apply:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
  #416 = Utf8               map
  #417 = Utf8               (Lscala/Function1;)Lscala/Option;
  #418 = NameAndType        #416:#417     // map:(Lscala/Function1;)Lscala/Option;
  #419 = Methodref          #17.#418      // scala/Option$WithFilter.map:(Lscala/Function1;)Lscala/Option;
  #420 = Utf8               $anonfun$fromDependencyTree$2
  #421 = Utf8               $anonfun$fromDependencyTree$1
  #422 = Utf8               (Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Z
  #423 = Utf8               dependees$2
  #424 = Utf8               elem$2
  #425 = NameAndType        #420:#289     // $anonfun$fromDependencyTree$2:()Lscala/collection/mutable/HashSet;
  #426 = Methodref          #2.#425       // coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$2:()Lscala/collection/mutable/HashSet;
  #427 = MethodHandle       6:#426        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$2:()Lscala/collection/mutable/HashSet;
  #428 = InvokeDynamic      #11:#300      // #11:apply:()Lscala/Function0;
  #429 = Utf8               version
  #430 = NameAndType        #429:#87      // version:()Ljava/lang/String;
  #431 = Methodref          #214.#430     // coursier/core/Dependency.version:()Ljava/lang/String;
  #432 = Utf8               excluded
  #433 = NameAndType        #432:#67      // excluded:()Z
  #434 = Methodref          #208.#433     // coursier/graph/DependencyTree.excluded:()Z
  #435 = Utf8               $anonfun$fromDependencyTree$4
  #436 = NameAndType        #435:#323     // $anonfun$fromDependencyTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
  #437 = Methodref          #2.#436       // coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
  #438 = MethodHandle       6:#437        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
  #439 = InvokeDynamic      #12:#162      // #12:apply:()Lscala/Function1;
  #440 = Utf8               $anonfun$fromDependencyTree$6
  #441 = Utf8               check$ifrefutable$2
  #442 = Utf8               $anonfun$fromDependencyTree$7
  #443 = Utf8               m$2
  #444 = Utf8               dependees0$2
  #445 = Utf8               versions0$2
  #446 = Utf8               x$4
  #447 = Utf8               versions$2
  #448 = Utf8               $anonfun$fromDependencyTree$6$adapted
  #449 = NameAndType        #448:#398     // $anonfun$fromDependencyTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #450 = Methodref          #2.#449       // coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #451 = MethodHandle       6:#450        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #452 = InvokeDynamic      #13:#162      // #13:apply:()Lscala/Function1;
  #453 = NameAndType        #442:#370     // $anonfun$fromDependencyTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  #454 = Methodref          #2.#453       // coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  #455 = MethodHandle       6:#454        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  #456 = InvokeDynamic      #14:#414      // #14:apply:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
  #457 = Utf8               $anonfun$apply$2
  #458 = Utf8               (Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #459 = Utf8               x$5
  #460 = Utf8               Lcoursier/core/Dependency;
  #461 = Utf8               resolution$1
  #462 = Utf8               coursier/core/Resolution
  #463 = Class              #462          // coursier/core/Resolution
  #464 = Utf8               minDependencies
  #465 = Utf8               ()Lscala/collection/immutable/Set;
  #466 = NameAndType        #464:#465     // minDependencies:()Lscala/collection/immutable/Set;
  #467 = Methodref          #463.#466     // coursier/core/Resolution.minDependencies:()Lscala/collection/immutable/Set;
  #468 = Utf8               scala/collection/immutable/Set
  #469 = Class              #468          // scala/collection/immutable/Set
  #470 = InterfaceMethodref #469.#340     // scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
  #471 = NameAndType        #457:#458     // $anonfun$apply$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #472 = Methodref          #2.#471       // coursier/graph/ReverseModuleTree$.$anonfun$apply$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #473 = MethodHandle       6:#472        // REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$apply$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #474 = MethodType         #458          //  (Lcoursier/core/Dependency;)Lcoursier/core/Module;
  #475 = InvokeDynamic      #15:#162      // #15:apply:()Lscala/Function1;
  #476 = NameAndType        #416:#105     // map:(Lscala/Function1;)Ljava/lang/Object;
  #477 = Methodref          #360.#476     // scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
  #478 = Methodref          #4.#31        // java/lang/Object."<init>":()V
  #479 = NameAndType        #290:#291     // $anonfun$fromModuleTree$1:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Z
  #480 = Methodref          #2.#479       // coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$1:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Z
  #481 = NameAndType        #421:#422     // $anonfun$fromDependencyTree$1:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Z
  #482 = Methodref          #2.#481       // coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$1:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Z
  #483 = NameAndType        #365:#366     // $anonfun$fromModuleTree$6:(Lscala/Tuple2;)Z
  #484 = Methodref          #2.#483       // coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$6:(Lscala/Tuple2;)Z
  #485 = NameAndType        #440:#366     // $anonfun$fromDependencyTree$6:(Lscala/Tuple2;)Z
  #486 = Methodref          #2.#485       // coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$6:(Lscala/Tuple2;)Z
  #487 = Utf8               $deserializeLambda$
  #488 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #489 = Utf8               scala/runtime/LambdaDeserialize
  #490 = Class              #489          // scala/runtime/LambdaDeserialize
  #491 = Utf8               bootstrap
  #492 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #493 = NameAndType        #491:#492     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #494 = Methodref          #490.#493     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #495 = MethodHandle       6:#494        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #496 = Utf8               lambdaDeserialize
  #497 = NameAndType        #496:#488     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #498 = InvokeDynamic      #16:#497      // #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #499 = Utf8               Code
  #500 = Utf8               LineNumberTable
  #501 = Utf8               StackMapTable
  #502 = Utf8               LocalVariableTable
  #503 = Utf8               Signature
  #504 = Utf8               MethodParameters
  #505 = Utf8               InnerClasses
  #506 = Utf8               SourceFile
  #507 = Utf8               BootstrapMethods
  #508 = Utf8               ScalaInlineInfo
  #509 = Utf8               Scala
{
  public static final coursier.graph.ReverseModuleTree$ MODULE$;
    descriptor: Lcoursier/graph/ReverseModuleTree$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/graph/ReverseModuleTree$
         3: dup
         4: invokespecial #32                 // Method "<init>":()V
         7: putstatic     #34                 // Field MODULE$:Lcoursier/graph/ReverseModuleTree$;
        10: return
      LineNumberTable:
        line 55: 0

  public scala.collection.immutable.Seq<coursier.graph.ReverseModuleTree> fromModuleTree(scala.collection.immutable.Seq<coursier.core.Module>, scala.collection.immutable.Seq<coursier.graph.ModuleTree>);
    descriptor: (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=11, args_size=3
         0: new           #41                 // class scala/collection/mutable/HashSet
         3: dup
         4: invokespecial #42                 // Method scala/collection/mutable/HashSet."<init>":()V
         7: astore_3
         8: new           #44                 // class scala/collection/mutable/HashMap
        11: dup
        12: invokespecial #45                 // Method scala/collection/mutable/HashMap."<init>":()V
        15: astore        4
        17: new           #44                 // class scala/collection/mutable/HashMap
        20: dup
        21: invokespecial #45                 // Method scala/collection/mutable/HashMap."<init>":()V
        24: astore        5
        26: new           #47                 // class scala/collection/mutable/Queue
        29: dup
        30: getstatic     #52                 // Field scala/collection/mutable/Queue$.MODULE$:Lscala/collection/mutable/Queue$;
        33: invokevirtual #56                 // Method scala/collection/mutable/Queue$.$lessinit$greater$default$1:()I
        36: invokespecial #59                 // Method scala/collection/mutable/Queue."<init>":(I)V
        39: astore        6
        41: aload         6
        43: aload_2
        44: invokevirtual #63                 // Method scala/collection/mutable/Queue.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
        47: pop
        48: aload         6
        50: invokevirtual #69                 // Method scala/collection/mutable/Queue.nonEmpty:()Z
        53: ifeq          144
        56: aload         6
        58: invokevirtual #73                 // Method scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
        61: checkcast     #75                 // class coursier/graph/ModuleTree
        64: astore        7
        66: aload_3
        67: aload         7
        69: invokevirtual #79                 // Method scala/collection/mutable/HashSet.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        72: pop
        73: aload         5
        75: aload         7
        77: invokevirtual #83                 // Method coursier/graph/ModuleTree.module:()Lcoursier/core/Module;
        80: new           #85                 // class scala/Tuple2
        83: dup
        84: aload         7
        86: invokevirtual #89                 // Method coursier/graph/ModuleTree.reconciledVersion:()Ljava/lang/String;
        89: aload         7
        91: invokevirtual #92                 // Method coursier/graph/ModuleTree.retainedVersion:()Ljava/lang/String;
        94: invokespecial #95                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        97: invokevirtual #99                 // Method scala/collection/mutable/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       100: pop
       101: aload         7
       103: invokevirtual #103                // Method coursier/graph/ModuleTree.children:()Lscala/collection/immutable/Seq;
       106: astore        8
       108: aload         6
       110: aload         8
       112: aload_3
       113: invokeinterface #107,  2          // InterfaceMethod scala/collection/immutable/Seq.filterNot:(Lscala/Function1;)Ljava/lang/Object;
       118: checkcast     #109                // class scala/collection/IterableOnce
       121: invokevirtual #63                 // Method scala/collection/mutable/Queue.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
       124: pop
       125: aload         8
       127: aload         4
       129: aload         7
       131: invokedynamic #131,  0            // InvokeDynamic #0:apply:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;)Lscala/Function1;
       136: invokeinterface #135,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
       141: goto          48
       144: aload         4
       146: getstatic     #140                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       149: invokevirtual #144                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       152: invokevirtual #148                // Method scala/collection/mutable/HashMap.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       155: invokeinterface #154,  1          // InterfaceMethod scala/collection/immutable/Map.view:()Lscala/collection/MapView;
       160: invokedynamic #163,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
       165: invokeinterface #169,  2          // InterfaceMethod scala/collection/MapView.mapValues:(Lscala/Function1;)Lscala/collection/MapView;
       170: invokeinterface #173,  1          // InterfaceMethod scala/collection/MapView.iterator:()Lscala/collection/Iterator;
       175: getstatic     #140                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       178: invokevirtual #144                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       181: invokeinterface #176,  2          // InterfaceMethod scala/collection/Iterator.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       186: astore        9
       188: aload         5
       190: getstatic     #140                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       193: invokevirtual #144                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       196: invokevirtual #148                // Method scala/collection/mutable/HashMap.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       199: astore        10
       201: aload_1
       202: aload         5
       204: aload         9
       206: aload         10
       208: invokedynamic #186,  0            // InvokeDynamic #2:apply:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
       213: invokeinterface #189,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       218: checkcast     #65                 // class scala/collection/immutable/Seq
       221: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class coursier/graph/ReverseModuleTree$, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/mutable/HashSet, class scala/collection/mutable/HashMap, class scala/collection/mutable/HashMap, class scala/collection/mutable/Queue ]
          stack = []
        frame_type = 251 /* same_frame_extended */
          offset_delta = 95
      LineNumberTable:
        line 69: 0
        line 70: 8
        line 71: 17
        line 72: 26
        line 74: 41
        line 76: 48
        line 77: 56
        line 78: 66
        line 79: 73
        line 80: 101
        line 81: 108
        line 82: 125
        line 76: 141
        line 88: 144
        line 89: 146
        line 91: 160
        line 93: 175
        line 94: 188
        line 97: 201
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           66      75     7  elem   Lcoursier/graph/ModuleTree;
          108      33     8 children   Lscala/collection/immutable/Seq;
            8     213     3 alreadySeen   Lscala/collection/mutable/HashSet;
           17     204     4 dependees   Lscala/collection/mutable/HashMap;
           26     195     5 versions   Lscala/collection/mutable/HashMap;
           41     180     6 toCheck   Lscala/collection/mutable/Queue;
          188      33     9 dependees0   Lscala/collection/immutable/Map;
          201      20    10 versions0   Lscala/collection/immutable/Map;
            0     222     0  this   Lcoursier/graph/ReverseModuleTree$;
            0     222     1 roots   Lscala/collection/immutable/Seq;
            0     222     2 moduleTrees   Lscala/collection/immutable/Seq;
    Signature: #37                          // (Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;Lscala/collection/immutable/Seq<Lcoursier/graph/ModuleTree;>;)Lscala/collection/immutable/Seq<Lcoursier/graph/ReverseModuleTree;>;
    MethodParameters:
      Name                           Flags
      roots                          final
      moduleTrees                    final

  public scala.collection.immutable.Seq<coursier.graph.ReverseModuleTree> fromDependencyTree(scala.collection.immutable.Seq<coursier.core.Module>, scala.collection.immutable.Seq<coursier.graph.DependencyTree>);
    descriptor: (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=11, args_size=3
         0: new           #41                 // class scala/collection/mutable/HashSet
         3: dup
         4: invokespecial #42                 // Method scala/collection/mutable/HashSet."<init>":()V
         7: astore_3
         8: new           #44                 // class scala/collection/mutable/HashMap
        11: dup
        12: invokespecial #45                 // Method scala/collection/mutable/HashMap."<init>":()V
        15: astore        4
        17: new           #44                 // class scala/collection/mutable/HashMap
        20: dup
        21: invokespecial #45                 // Method scala/collection/mutable/HashMap."<init>":()V
        24: astore        5
        26: new           #47                 // class scala/collection/mutable/Queue
        29: dup
        30: getstatic     #52                 // Field scala/collection/mutable/Queue$.MODULE$:Lscala/collection/mutable/Queue$;
        33: invokevirtual #56                 // Method scala/collection/mutable/Queue$.$lessinit$greater$default$1:()I
        36: invokespecial #59                 // Method scala/collection/mutable/Queue."<init>":(I)V
        39: astore        6
        41: aload         6
        43: aload_2
        44: invokevirtual #63                 // Method scala/collection/mutable/Queue.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
        47: pop
        48: aload         6
        50: invokevirtual #69                 // Method scala/collection/mutable/Queue.nonEmpty:()Z
        53: ifeq          147
        56: aload         6
        58: invokevirtual #73                 // Method scala/collection/mutable/Queue.dequeue:()Ljava/lang/Object;
        61: checkcast     #208                // class coursier/graph/DependencyTree
        64: astore        7
        66: aload_3
        67: aload         7
        69: invokevirtual #79                 // Method scala/collection/mutable/HashSet.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        72: pop
        73: aload         5
        75: aload         7
        77: invokevirtual #212                // Method coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
        80: invokevirtual #215                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        83: new           #85                 // class scala/Tuple2
        86: dup
        87: aload         7
        89: invokevirtual #216                // Method coursier/graph/DependencyTree.reconciledVersion:()Ljava/lang/String;
        92: aload         7
        94: invokevirtual #217                // Method coursier/graph/DependencyTree.retainedVersion:()Ljava/lang/String;
        97: invokespecial #95                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       100: invokevirtual #99                 // Method scala/collection/mutable/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
       103: pop
       104: aload         7
       106: invokevirtual #218                // Method coursier/graph/DependencyTree.children:()Lscala/collection/immutable/Seq;
       109: astore        8
       111: aload         6
       113: aload         8
       115: aload_3
       116: invokeinterface #107,  2          // InterfaceMethod scala/collection/immutable/Seq.filterNot:(Lscala/Function1;)Ljava/lang/Object;
       121: checkcast     #109                // class scala/collection/IterableOnce
       124: invokevirtual #63                 // Method scala/collection/mutable/Queue.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
       127: pop
       128: aload         8
       130: aload         4
       132: aload         7
       134: invokedynamic #228,  0            // InvokeDynamic #3:apply:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;)Lscala/Function1;
       139: invokeinterface #135,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
       144: goto          48
       147: aload         4
       149: getstatic     #140                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       152: invokevirtual #144                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       155: invokevirtual #148                // Method scala/collection/mutable/HashMap.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       158: invokeinterface #154,  1          // InterfaceMethod scala/collection/immutable/Map.view:()Lscala/collection/MapView;
       163: invokedynamic #233,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       168: invokeinterface #169,  2          // InterfaceMethod scala/collection/MapView.mapValues:(Lscala/Function1;)Lscala/collection/MapView;
       173: invokeinterface #173,  1          // InterfaceMethod scala/collection/MapView.iterator:()Lscala/collection/Iterator;
       178: getstatic     #140                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       181: invokevirtual #144                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       184: invokeinterface #176,  2          // InterfaceMethod scala/collection/Iterator.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       189: astore        9
       191: aload         5
       193: getstatic     #140                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       196: invokevirtual #144                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       199: invokevirtual #148                // Method scala/collection/mutable/HashMap.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       202: astore        10
       204: aload_1
       205: aload         5
       207: aload         9
       209: aload         10
       211: invokedynamic #238,  0            // InvokeDynamic #5:apply:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
       216: invokeinterface #189,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       221: checkcast     #65                 // class scala/collection/immutable/Seq
       224: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class coursier/graph/ReverseModuleTree$, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/mutable/HashSet, class scala/collection/mutable/HashMap, class scala/collection/mutable/HashMap, class scala/collection/mutable/Queue ]
          stack = []
        frame_type = 251 /* same_frame_extended */
          offset_delta = 98
      LineNumberTable:
        line 104: 0
        line 105: 8
        line 106: 17
        line 107: 26
        line 109: 41
        line 111: 48
        line 112: 56
        line 113: 66
        line 114: 73
        line 115: 104
        line 116: 111
        line 117: 128
        line 111: 144
        line 123: 147
        line 124: 149
        line 126: 163
        line 128: 178
        line 129: 191
        line 132: 204
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           66      78     7  elem   Lcoursier/graph/DependencyTree;
          111      33     8 children   Lscala/collection/immutable/Seq;
            8     216     3 alreadySeen   Lscala/collection/mutable/HashSet;
           17     207     4 dependees   Lscala/collection/mutable/HashMap;
           26     198     5 versions   Lscala/collection/mutable/HashMap;
           41     183     6 toCheck   Lscala/collection/mutable/Queue;
          191      33     9 dependees0   Lscala/collection/immutable/Map;
          204      20    10 versions0   Lscala/collection/immutable/Map;
            0     225     0  this   Lcoursier/graph/ReverseModuleTree$;
            0     225     1 roots   Lscala/collection/immutable/Seq;
            0     225     2 dependencyTrees   Lscala/collection/immutable/Seq;
    Signature: #205                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;Lscala/collection/immutable/Seq<Lcoursier/graph/DependencyTree;>;)Lscala/collection/immutable/Seq<Lcoursier/graph/ReverseModuleTree;>;
    MethodParameters:
      Name                           Flags
      roots                          final
      dependencyTrees                final

  public scala.collection.immutable.Seq<coursier.graph.ReverseModuleTree> apply(coursier.core.Resolution, scala.collection.immutable.Seq<coursier.core.Module>, boolean);
    descriptor: (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=9, args_size=4
         0: aload_1
         1: astore        5
         3: iload_3
         4: istore        6
         6: getstatic     #248                // Field coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
         9: invokevirtual #251                // Method coursier/graph/DependencyTree$.apply$default$2:()Lscala/collection/immutable/Seq;
        12: astore        7
        14: getstatic     #248                // Field coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
        17: aload         5
        19: aload         7
        21: iload         6
        23: invokevirtual #253                // Method coursier/graph/DependencyTree$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
        26: astore        4
        28: getstatic     #258                // Field scala/Option$.MODULE$:Lscala/Option$;
        31: aload_2
        32: invokevirtual #261                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        35: aload_1
        36: invokedynamic #272,  0            // InvokeDynamic #6:apply:(Lcoursier/core/Resolution;)Lscala/Function0;
        41: invokevirtual #276                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        44: checkcast     #65                 // class scala/collection/immutable/Seq
        47: astore        8
        49: aload_0
        50: aload         8
        52: aload         4
        54: invokevirtual #278                // Method fromDependencyTree:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        57: areturn
      LineNumberTable:
        line 138: 0
        line 139: 28
        line 140: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      23     5   x$1   Lcoursier/core/Resolution;
            6      20     6   x$2   Z
           14      12     7   x$3   Lscala/collection/immutable/Seq;
           28      29     4     t   Lscala/collection/immutable/Seq;
           49       8     8 roots0   Lscala/collection/immutable/Seq;
            0      58     0  this   Lcoursier/graph/ReverseModuleTree$;
            0      58     1 resolution   Lcoursier/core/Resolution;
            0      58     2 roots   Lscala/collection/immutable/Seq;
            0      58     3 withExclusions   Z
    Signature: #241                         // (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;Z)Lscala/collection/immutable/Seq<Lcoursier/graph/ReverseModuleTree;>;
    MethodParameters:
      Name                           Flags
      resolution                     final
      roots                          final
      withExclusions                 final

  public scala.collection.immutable.Seq<coursier.core.Module> apply$default$2();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/ReverseModuleTree$;
    Signature: #286                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;

  public boolean apply$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/ReverseModuleTree$;

  public static final scala.collection.mutable.HashSet $anonfun$fromModuleTree$2();
    descriptor: ()Lscala/collection/mutable/HashSet;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #41                 // class scala/collection/mutable/HashSet
         3: dup
         4: invokespecial #42                 // Method scala/collection/mutable/HashSet."<init>":()V
         7: areturn
      LineNumberTable:
        line 83: 0

  public static final boolean $anonfun$fromModuleTree$1(scala.collection.mutable.HashMap, coursier.graph.ModuleTree, coursier.graph.ModuleTree);
    descriptor: (Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=4, args_size=3
         0: aload_0
         1: aload_2
         2: invokevirtual #83                 // Method coursier/graph/ModuleTree.module:()Lcoursier/core/Module;
         5: invokedynamic #301,  0            // InvokeDynamic #7:apply:()Lscala/Function0;
        10: invokevirtual #305                // Method scala/collection/mutable/HashMap.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
        13: checkcast     #41                 // class scala/collection/mutable/HashSet
        16: astore_3
        17: aload_3
        18: new           #307                // class scala/Tuple3
        21: dup
        22: aload_1
        23: invokevirtual #83                 // Method coursier/graph/ModuleTree.module:()Lcoursier/core/Module;
        26: aload_2
        27: invokevirtual #92                 // Method coursier/graph/ModuleTree.retainedVersion:()Ljava/lang/String;
        30: iconst_0
        31: invokestatic  #313                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        34: invokespecial #316                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        37: invokevirtual #320                // Method scala/collection/mutable/HashSet.add:(Ljava/lang/Object;)Z
        40: ireturn
      LineNumberTable:
        line 83: 0
        line 84: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      23     3     b   Lscala/collection/mutable/HashSet;
            0      41     0 dependees$1   Lscala/collection/mutable/HashMap;
            0      41     1 elem$1   Lcoursier/graph/ModuleTree;
            0      41     2     c   Lcoursier/graph/ModuleTree;
    MethodParameters:
      Name                           Flags
      dependees$1                    final
      elem$1                         final
      c                              final

  public static final scala.Tuple3 $anonfun$fromModuleTree$4(scala.Tuple3);
    descriptor: (Lscala/Tuple3;)Lscala/Tuple3;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #307                // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokevirtual #326                // Method scala/Tuple3._1:()Ljava/lang/Object;
         8: checkcast     #328                // class coursier/core/Module
        11: invokevirtual #331                // Method coursier/core/Module.organization:()Ljava/lang/String;
        14: aload_0
        15: invokevirtual #326                // Method scala/Tuple3._1:()Ljava/lang/Object;
        18: checkcast     #328                // class coursier/core/Module
        21: invokevirtual #334                // Method coursier/core/Module.name:()Ljava/lang/String;
        24: aload_0
        25: invokevirtual #326                // Method scala/Tuple3._1:()Ljava/lang/Object;
        28: checkcast     #328                // class coursier/core/Module
        31: invokevirtual #337                // Method coursier/core/Module.nameWithAttributes:()Ljava/lang/String;
        34: invokespecial #316                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        37: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0     t   Lscala/Tuple3;
    MethodParameters:
      Name                           Flags
      t                              final

  public static final scala.collection.immutable.Vector $anonfun$fromModuleTree$3(scala.collection.mutable.HashSet);
    descriptor: (Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #341                // Method scala/collection/mutable/HashSet.toVector:()Lscala/collection/immutable/Vector;
         4: invokedynamic #346,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
         9: getstatic     #351                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        12: getstatic     #354                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        15: getstatic     #354                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        18: getstatic     #354                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        21: invokevirtual #358                // Method scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
        24: invokevirtual #364                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        27: checkcast     #360                // class scala/collection/immutable/Vector
        30: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0   x$1   Lscala/collection/mutable/HashSet;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final boolean $anonfun$fromModuleTree$6(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final coursier.graph.ReverseModuleTree $anonfun$fromModuleTree$7(coursier.core.Module, scala.collection.immutable.Map, scala.collection.immutable.Map, scala.Tuple2);
    descriptor: (Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=11, locals=8, args_size=4
         0: aload_3
         1: astore        5
         3: aload         5
         5: ifnull        53
         8: aload         5
        10: invokevirtual #374                // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #376                // class java/lang/String
        16: astore        6
        18: aload         5
        20: invokevirtual #379                // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #376                // class java/lang/String
        26: astore        7
        28: new           #7                  // class coursier/graph/ReverseModuleTree$Node
        31: dup
        32: aload_0
        33: aload         6
        35: aload         7
        37: aload_0
        38: aload         6
        40: aload         6
        42: iconst_0
        43: aload_1
        44: aload_2
        45: invokespecial #382                // Method coursier/graph/ReverseModuleTree$Node."<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLscala/collection/immutable/Map;Lscala/collection/immutable/Map;)V
        48: astore        4
        50: goto          66
        53: goto          56
        56: new           #384                // class scala/MatchError
        59: dup
        60: aload         5
        62: invokespecial #387                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        65: athrow
        66: aload         4
        68: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 53
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Module, class scala/collection/immutable/Map, class scala/collection/immutable/Map, class scala/Tuple2, class coursier/graph/ReverseModuleTree$Node, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 98: 0
        line 99: 28
        line 98: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      35     6 reconciled   Ljava/lang/String;
           28      25     7 retained   Ljava/lang/String;
            0      69     0   m$1   Lcoursier/core/Module;
            0      69     1 dependees0$1   Lscala/collection/immutable/Map;
            0      69     2 versions0$1   Lscala/collection/immutable/Map;
            0      69     3   x$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      m$1                            final
      dependees0$1                   final
      versions0$1                    final
      x$2                            final

  public static final scala.Option $anonfun$fromModuleTree$5(scala.collection.mutable.HashMap, scala.collection.immutable.Map, scala.collection.immutable.Map, coursier.core.Module);
    descriptor: (Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_3
         2: invokevirtual #396                // Method scala/collection/mutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
         5: invokedynamic #403,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
        10: invokevirtual #407                // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        13: aload_3
        14: aload_1
        15: aload_2
        16: invokedynamic #415,  0            // InvokeDynamic #10:apply:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
        21: invokevirtual #419                // Method scala/Option$WithFilter.map:(Lscala/Function1;)Lscala/Option;
        24: areturn
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 versions$1   Lscala/collection/mutable/HashMap;
            0      25     1 dependees0$1   Lscala/collection/immutable/Map;
            0      25     2 versions0$1   Lscala/collection/immutable/Map;
            0      25     3     m   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      versions$1                     final
      dependees0$1                   final
      versions0$1                    final
      m                              final

  public static final scala.collection.mutable.HashSet $anonfun$fromDependencyTree$2();
    descriptor: ()Lscala/collection/mutable/HashSet;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #41                 // class scala/collection/mutable/HashSet
         3: dup
         4: invokespecial #42                 // Method scala/collection/mutable/HashSet."<init>":()V
         7: areturn
      LineNumberTable:
        line 118: 0

  public static final boolean $anonfun$fromDependencyTree$1(scala.collection.mutable.HashMap, coursier.graph.DependencyTree, coursier.graph.DependencyTree);
    descriptor: (Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=4, args_size=3
         0: aload_0
         1: aload_2
         2: invokevirtual #212                // Method coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
         5: invokevirtual #215                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         8: invokedynamic #428,  0            // InvokeDynamic #11:apply:()Lscala/Function0;
        13: invokevirtual #305                // Method scala/collection/mutable/HashMap.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
        16: checkcast     #41                 // class scala/collection/mutable/HashSet
        19: astore_3
        20: aload_3
        21: new           #307                // class scala/Tuple3
        24: dup
        25: aload_1
        26: invokevirtual #212                // Method coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
        29: invokevirtual #215                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        32: aload_2
        33: invokevirtual #212                // Method coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
        36: invokevirtual #431                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        39: aload_2
        40: invokevirtual #434                // Method coursier/graph/DependencyTree.excluded:()Z
        43: invokestatic  #313                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        46: invokespecial #316                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        49: invokevirtual #320                // Method scala/collection/mutable/HashSet.add:(Ljava/lang/Object;)Z
        52: ireturn
      LineNumberTable:
        line 118: 0
        line 119: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      32     3     b   Lscala/collection/mutable/HashSet;
            0      53     0 dependees$2   Lscala/collection/mutable/HashMap;
            0      53     1 elem$2   Lcoursier/graph/DependencyTree;
            0      53     2     c   Lcoursier/graph/DependencyTree;
    MethodParameters:
      Name                           Flags
      dependees$2                    final
      elem$2                         final
      c                              final

  public static final scala.Tuple3 $anonfun$fromDependencyTree$4(scala.Tuple3);
    descriptor: (Lscala/Tuple3;)Lscala/Tuple3;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #307                // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokevirtual #326                // Method scala/Tuple3._1:()Ljava/lang/Object;
         8: checkcast     #328                // class coursier/core/Module
        11: invokevirtual #331                // Method coursier/core/Module.organization:()Ljava/lang/String;
        14: aload_0
        15: invokevirtual #326                // Method scala/Tuple3._1:()Ljava/lang/Object;
        18: checkcast     #328                // class coursier/core/Module
        21: invokevirtual #334                // Method coursier/core/Module.name:()Ljava/lang/String;
        24: aload_0
        25: invokevirtual #326                // Method scala/Tuple3._1:()Ljava/lang/Object;
        28: checkcast     #328                // class coursier/core/Module
        31: invokevirtual #337                // Method coursier/core/Module.nameWithAttributes:()Ljava/lang/String;
        34: invokespecial #316                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        37: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0     t   Lscala/Tuple3;
    MethodParameters:
      Name                           Flags
      t                              final

  public static final scala.collection.immutable.Vector $anonfun$fromDependencyTree$3(scala.collection.mutable.HashSet);
    descriptor: (Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #341                // Method scala/collection/mutable/HashSet.toVector:()Lscala/collection/immutable/Vector;
         4: invokedynamic #439,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
         9: getstatic     #351                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        12: getstatic     #354                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        15: getstatic     #354                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        18: getstatic     #354                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        21: invokevirtual #358                // Method scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
        24: invokevirtual #364                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        27: checkcast     #360                // class scala/collection/immutable/Vector
        30: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0   x$3   Lscala/collection/mutable/HashSet;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final boolean $anonfun$fromDependencyTree$6(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$2            final

  public static final coursier.graph.ReverseModuleTree $anonfun$fromDependencyTree$7(coursier.core.Module, scala.collection.immutable.Map, scala.collection.immutable.Map, scala.Tuple2);
    descriptor: (Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=11, locals=8, args_size=4
         0: aload_3
         1: astore        5
         3: aload         5
         5: ifnull        53
         8: aload         5
        10: invokevirtual #374                // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #376                // class java/lang/String
        16: astore        6
        18: aload         5
        20: invokevirtual #379                // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #376                // class java/lang/String
        26: astore        7
        28: new           #7                  // class coursier/graph/ReverseModuleTree$Node
        31: dup
        32: aload_0
        33: aload         6
        35: aload         7
        37: aload_0
        38: aload         6
        40: aload         6
        42: iconst_0
        43: aload_1
        44: aload_2
        45: invokespecial #382                // Method coursier/graph/ReverseModuleTree$Node."<init>":(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLscala/collection/immutable/Map;Lscala/collection/immutable/Map;)V
        48: astore        4
        50: goto          66
        53: goto          56
        56: new           #384                // class scala/MatchError
        59: dup
        60: aload         5
        62: invokespecial #387                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        65: athrow
        66: aload         4
        68: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 53
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Module, class scala/collection/immutable/Map, class scala/collection/immutable/Map, class scala/Tuple2, class coursier/graph/ReverseModuleTree$Node, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 133: 0
        line 134: 28
        line 133: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      35     6 reconciled   Ljava/lang/String;
           28      25     7 retained   Ljava/lang/String;
            0      69     0   m$2   Lcoursier/core/Module;
            0      69     1 dependees0$2   Lscala/collection/immutable/Map;
            0      69     2 versions0$2   Lscala/collection/immutable/Map;
            0      69     3   x$4   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      m$2                            final
      dependees0$2                   final
      versions0$2                    final
      x$4                            final

  public static final scala.Option $anonfun$fromDependencyTree$5(scala.collection.mutable.HashMap, scala.collection.immutable.Map, scala.collection.immutable.Map, coursier.core.Module);
    descriptor: (Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_3
         2: invokevirtual #396                // Method scala/collection/mutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
         5: invokedynamic #452,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
        10: invokevirtual #407                // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        13: aload_3
        14: aload_1
        15: aload_2
        16: invokedynamic #456,  0            // InvokeDynamic #14:apply:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;)Lscala/Function1;
        21: invokevirtual #419                // Method scala/Option$WithFilter.map:(Lscala/Function1;)Lscala/Option;
        24: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 versions$2   Lscala/collection/mutable/HashMap;
            0      25     1 dependees0$2   Lscala/collection/immutable/Map;
            0      25     2 versions0$2   Lscala/collection/immutable/Map;
            0      25     3     m   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      versions$2                     final
      dependees0$2                   final
      versions0$2                    final
      m                              final

  public static final coursier.core.Module $anonfun$apply$2(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Lcoursier/core/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #215                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         4: areturn
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$5   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final scala.collection.immutable.Vector $anonfun$apply$1(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lscala/collection/immutable/Vector;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #467                // Method coursier/core/Resolution.minDependencies:()Lscala/collection/immutable/Set;
         4: invokeinterface #470,  1          // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
         9: invokedynamic #475,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
        14: invokevirtual #477                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        17: checkcast     #360                // class scala/collection/immutable/Vector
        20: areturn
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 resolution$1   Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      resolution$1                   final

  private coursier.graph.ReverseModuleTree$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #478                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 162: 0
        line 55: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/ReverseModuleTree$;

  public static final java.lang.Object $anonfun$fromModuleTree$1$adapted(scala.collection.mutable.HashMap, coursier.graph.ModuleTree, coursier.graph.ModuleTree);
    descriptor: (Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #480                // Method $anonfun$fromModuleTree$1:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Z
         6: invokestatic  #313                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 dependees$1   Lscala/collection/mutable/HashMap;
            0      10     1 elem$1   Lcoursier/graph/ModuleTree;
            0      10     2     c   Lcoursier/graph/ModuleTree;
    MethodParameters:
      Name                           Flags
      dependees$1                    final
      elem$1                         final
      c                              final

  public static final java.lang.Object $anonfun$fromDependencyTree$1$adapted(scala.collection.mutable.HashMap, coursier.graph.DependencyTree, coursier.graph.DependencyTree);
    descriptor: (Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #482                // Method $anonfun$fromDependencyTree$1:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Z
         6: invokestatic  #313                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 dependees$2   Lscala/collection/mutable/HashMap;
            0      10     1 elem$2   Lcoursier/graph/DependencyTree;
            0      10     2     c   Lcoursier/graph/DependencyTree;
    MethodParameters:
      Name                           Flags
      dependees$2                    final
      elem$2                         final
      c                              final

  public static final java.lang.Object $anonfun$fromModuleTree$6$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #484                // Method $anonfun$fromModuleTree$6:(Lscala/Tuple2;)Z
         4: invokestatic  #313                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final java.lang.Object $anonfun$fromDependencyTree$6$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #486                // Method $anonfun$fromDependencyTree$6:(Lscala/Tuple2;)Z
         4: invokestatic  #313                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$2            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #498,  0            // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Node=class coursier/graph/ReverseModuleTree$Node of class coursier/graph/ReverseModuleTree
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #20= #17 of #19;                 // WithFilter=class scala/Option$WithFilter of class scala/Option
  public static #25= #22 of #24;          // =class scala/math/Ordering$String$ of class scala/math/Ordering
SourceFile: "ReverseModuleTree.scala"
BootstrapMethods:
  0: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #116 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
      #118 (Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
      #119 5
      #120 1
      #118 (Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
  1: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #159 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
      #160 (Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
      #119 5
      #120 1
      #160 (Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  2: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #181 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
      #183 (Lcoursier/core/Module;)Lscala/Option;
      #119 5
      #120 1
      #183 (Lcoursier/core/Module;)Lscala/Option;
  3: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #223 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
      #225 (Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
      #119 5
      #120 1
      #225 (Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
  4: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #232 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
      #160 (Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
      #119 5
      #120 1
      #160 (Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
  5: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #237 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
      #183 (Lcoursier/core/Module;)Lscala/Option;
      #119 5
      #120 1
      #183 (Lcoursier/core/Module;)Lscala/Option;
  6: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #262 ()Ljava/lang/Object;
      #267 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Vector;
      #269 ()Lscala/collection/immutable/Vector;
      #119 5
      #120 1
      #269 ()Lscala/collection/immutable/Vector;
  7: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #262 ()Ljava/lang/Object;
      #297 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$2:()Lscala/collection/mutable/HashSet;
      #298 ()Lscala/collection/mutable/HashSet;
      #119 5
      #120 1
      #298 ()Lscala/collection/mutable/HashSet;
  8: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #344 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
      #345 (Lscala/Tuple3;)Lscala/Tuple3;
      #119 5
      #120 1
      #345 (Lscala/Tuple3;)Lscala/Tuple3;
  9: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #401 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #402 (Lscala/Tuple2;)Ljava/lang/Object;
      #119 5
      #120 1
      #402 (Lscala/Tuple2;)Ljava/lang/Object;
  10: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #410 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
      #412 (Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
      #119 5
      #120 1
      #412 (Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  11: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #262 ()Ljava/lang/Object;
      #427 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$2:()Lscala/collection/mutable/HashSet;
      #298 ()Lscala/collection/mutable/HashSet;
      #119 5
      #120 1
      #298 ()Lscala/collection/mutable/HashSet;
  12: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #438 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
      #345 (Lscala/Tuple3;)Lscala/Tuple3;
      #119 5
      #120 1
      #345 (Lscala/Tuple3;)Lscala/Tuple3;
  13: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #451 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #402 (Lscala/Tuple2;)Ljava/lang/Object;
      #119 5
      #120 1
      #402 (Lscala/Tuple2;)Ljava/lang/Object;
  14: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #455 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
      #412 (Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
      #119 5
      #120 1
      #412 (Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  15: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 (Ljava/lang/Object;)Ljava/lang/Object;
      #473 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$apply$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
      #474 (Lcoursier/core/Dependency;)Lcoursier/core/Module;
      #119 5
      #120 1
      #474 (Lcoursier/core/Dependency;)Lcoursier/core/Module;
  16: #495 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #267 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$apply$1:(Lcoursier/core/Resolution;)Lscala/collection/immutable/Vector;
      #473 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$apply$2:(Lcoursier/core/Dependency;)Lcoursier/core/Module;
      #223 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/DependencyTree;Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
      #427 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$2:()Lscala/collection/mutable/HashSet;
      #232 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
      #438 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
      #237 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
      #451 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #455 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromDependencyTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
      #116 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$1$adapted:(Lscala/collection/mutable/HashMap;Lcoursier/graph/ModuleTree;Lcoursier/graph/ModuleTree;)Ljava/lang/Object;
      #297 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$2:()Lscala/collection/mutable/HashSet;
      #159 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$3:(Lscala/collection/mutable/HashSet;)Lscala/collection/immutable/Vector;
      #344 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$4:(Lscala/Tuple3;)Lscala/Tuple3;
      #181 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$5:(Lscala/collection/mutable/HashMap;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lcoursier/core/Module;)Lscala/Option;
      #401 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$6$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #410 REF_invokeStatic coursier/graph/ReverseModuleTree$.$anonfun$fromModuleTree$7:(Lcoursier/core/Module;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;Lscala/Tuple2;)Lcoursier/graph/ReverseModuleTree;
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 01 00 1A 01 07 01 08 01 01 C9 01 CA 01 01 A5
   01 A6 01 00 DB 00 DC 01 01 A4 01 21 01 00 E5 00
   9C 01 01 B3 01 43 01 00 EA 00 B2 01 01 B8 01 6E
   01 01 C0 01 8E 01 01 BA 01 72 01 01 22 01 23 01
   00 70 00 71 01 01 20 01 21 01 00 9B 00 9C 01 01
   42 01 43 01 00 B1 00 B2 01 01 6D 01 6E 01 01 8D
   01 8E 01 01 71 01 72 01 00 1E 00 1D 01 00 80 00
   F0 01 00 F9 00 63 01 01 1F 00 41 01 00 CC 00 24
   01 00 23 00 24 01
  Scala: length = 0x0 (unknown attribute)

