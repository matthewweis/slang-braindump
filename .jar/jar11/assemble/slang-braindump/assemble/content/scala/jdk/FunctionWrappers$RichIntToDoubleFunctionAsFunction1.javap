Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1.class
  Last modified May 29, 2022; size 2010 bytes
  SHA-256 checksum 7e666f2322f8c4bf778acf462efa22895d2140f1f00ad5d74c1f9881fac48b3b
  Compiled from "FunctionWrappers.scala"
public final class scala.jdk.FunctionWrappers$RichIntToDoubleFunctionAsFunction1
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 5, attributes: 4
Constant pool:
   #1 = Utf8               scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1
   #2 = Class              #1             // scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               FunctionWrappers.scala
   #6 = Utf8               scala/jdk/FunctionWrappers$AsJavaIntToDoubleFunction
   #7 = Class              #6             // scala/jdk/FunctionWrappers$AsJavaIntToDoubleFunction
   #8 = Utf8               scala/jdk/FunctionWrappers
   #9 = Class              #8             // scala/jdk/FunctionWrappers
  #10 = Utf8               AsJavaIntToDoubleFunction
  #11 = Utf8               scala/jdk/FunctionWrappers$FromJavaIntToDoubleFunction
  #12 = Class              #11            // scala/jdk/FunctionWrappers$FromJavaIntToDoubleFunction
  #13 = Utf8               FromJavaIntToDoubleFunction
  #14 = Utf8               RichIntToDoubleFunctionAsFunction1
  #15 = Utf8               scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$
  #16 = Class              #15            // scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$
  #17 = Utf8               RichIntToDoubleFunctionAsFunction1$
  #18 = Utf8               scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying
  #19 = Utf8               Ljava/util/function/IntToDoubleFunction;
  #20 = Utf8               ()Ljava/util/function/IntToDoubleFunction;
  #21 = NameAndType        #18:#19        // scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying:Ljava/util/function/IntToDoubleFunction;
  #22 = Fieldref           #2.#21         // scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1.scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying:Ljava/util/function/IntToDoubleFunction;
  #23 = Utf8               this
  #24 = Utf8               Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1;
  #25 = Utf8               asScala
  #26 = Utf8               ()Lscala/Function1;
  #27 = Utf8               ()Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;
  #28 = Utf8               MODULE$
  #29 = Utf8               Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$;
  #30 = NameAndType        #28:#29        // MODULE$:Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$;
  #31 = Fieldref           #16.#30        // scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$.MODULE$:Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$;
  #32 = NameAndType        #18:#20        // scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying:()Ljava/util/function/IntToDoubleFunction;
  #33 = Methodref          #2.#32         // scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1.scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying:()Ljava/util/function/IntToDoubleFunction;
  #34 = Utf8               sf
  #35 = NameAndType        #34:#26        // sf:()Lscala/Function1;
  #36 = Methodref          #7.#35         // scala/jdk/FunctionWrappers$AsJavaIntToDoubleFunction.sf:()Lscala/Function1;
  #37 = Utf8               <init>
  #38 = Utf8               (Ljava/util/function/IntToDoubleFunction;)V
  #39 = NameAndType        #37:#38        // "<init>":(Ljava/util/function/IntToDoubleFunction;)V
  #40 = Methodref          #12.#39        // scala/jdk/FunctionWrappers$FromJavaIntToDoubleFunction."<init>":(Ljava/util/function/IntToDoubleFunction;)V
  #41 = Utf8               asScala$extension_$this
  #42 = Utf8               java/util/function/IntToDoubleFunction
  #43 = Class              #42            // java/util/function/IntToDoubleFunction
  #44 = Utf8               scala/Function1
  #45 = Class              #44            // scala/Function1
  #46 = Utf8               hashCode
  #47 = Utf8               ()I
  #48 = NameAndType        #46:#47        // hashCode:()I
  #49 = Methodref          #4.#48         // java/lang/Object.hashCode:()I
  #50 = Utf8               equals
  #51 = Utf8               (Ljava/lang/Object;)Z
  #52 = Utf8               x$1
  #53 = Utf8               equals$extension
  #54 = Utf8               (Ljava/util/function/IntToDoubleFunction;Ljava/lang/Object;)Z
  #55 = NameAndType        #53:#54        // equals$extension:(Ljava/util/function/IntToDoubleFunction;Ljava/lang/Object;)Z
  #56 = Methodref          #16.#55        // scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$.equals$extension:(Ljava/util/function/IntToDoubleFunction;Ljava/lang/Object;)Z
  #57 = Utf8               Ljava/lang/Object;
  #58 = Utf8               underlying
  #59 = Utf8               ()V
  #60 = NameAndType        #37:#59        // "<init>":()V
  #61 = Methodref          #4.#60         // java/lang/Object."<init>":()V
  #62 = Utf8               Code
  #63 = Utf8               LineNumberTable
  #64 = Utf8               LocalVariableTable
  #65 = Utf8               StackMapTable
  #66 = Utf8               Signature
  #67 = Utf8               MethodParameters
  #68 = Utf8               InnerClasses
  #69 = Utf8               SourceFile
  #70 = Utf8               ScalaInlineInfo
  #71 = Utf8               Scala
{
  private final java.util.function.IntToDoubleFunction scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying;
    descriptor: Ljava/util/function/IntToDoubleFunction;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public java.util.function.IntToDoubleFunction scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying();
    descriptor: ()Ljava/util/function/IntToDoubleFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #22                 // Field scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying:Ljava/util/function/IntToDoubleFunction;
         4: areturn
      LineNumberTable:
        line 515: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1;

  public scala.Function1<java.lang.Object, java.lang.Object> asScala();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: getstatic     #31                 // Field scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$.MODULE$:Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$;
         3: pop
         4: aload_0
         5: invokevirtual #33                 // Method scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying:()Ljava/util/function/IntToDoubleFunction;
         8: astore_1
         9: aload_1
        10: instanceof    #7                  // class scala/jdk/FunctionWrappers$AsJavaIntToDoubleFunction
        13: ifeq          27
        16: aload_1
        17: checkcast     #7                  // class scala/jdk/FunctionWrappers$AsJavaIntToDoubleFunction
        20: invokevirtual #36                 // Method scala/jdk/FunctionWrappers$AsJavaIntToDoubleFunction.sf:()Lscala/Function1;
        23: astore_2
        24: goto          36
        27: new           #12                 // class scala/jdk/FunctionWrappers$FromJavaIntToDoubleFunction
        30: dup
        31: aload_1
        32: invokespecial #40                 // Method scala/jdk/FunctionWrappers$FromJavaIntToDoubleFunction."<init>":(Ljava/util/function/IntToDoubleFunction;)V
        35: astore_2
        36: aload_2
        37: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ class java/util/function/IntToDoubleFunction ]
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ class scala/Function1 ]
      LineNumberTable:
        line 516: 0
        line 517: 9
        line 518: 27
        line 516: 31
        line 516: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1;
            9      27     1 asScala$extension_$this   Ljava/util/function/IntToDoubleFunction;
    Signature: #27                          // ()Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #31                 // Field scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$.MODULE$:Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$;
         3: pop
         4: aload_0
         5: invokevirtual #33                 // Method scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying:()Ljava/util/function/IntToDoubleFunction;
         8: invokevirtual #49                 // Method java/lang/Object.hashCode:()I
        11: ireturn
      LineNumberTable:
        line 515: 0
        line 515: 8
        line 515: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #31                 // Field scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$.MODULE$:Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$;
         3: aload_0
         4: invokevirtual #33                 // Method scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying:()Ljava/util/function/IntToDoubleFunction;
         7: aload_1
         8: invokevirtual #56                 // Method scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$.equals$extension:(Ljava/util/function/IntToDoubleFunction;Ljava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 515: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1;
            0      12     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.jdk.FunctionWrappers$RichIntToDoubleFunctionAsFunction1(java.util.function.IntToDoubleFunction);
    descriptor: (Ljava/util/function/IntToDoubleFunction;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #22                 // Field scala$jdk$FunctionWrappers$RichIntToDoubleFunctionAsFunction1$$underlying:Ljava/util/function/IntToDoubleFunction;
         5: aload_0
         6: invokespecial #61                 // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 515: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1;
            0      10     1 underlying   Ljava/util/function/IntToDoubleFunction;
    MethodParameters:
      Name                           Flags
      underlying                     final
}
InnerClasses:
  public static #10= #7 of #9;            // AsJavaIntToDoubleFunction=class scala/jdk/FunctionWrappers$AsJavaIntToDoubleFunction of class scala/jdk/FunctionWrappers
  public static #13= #12 of #9;           // FromJavaIntToDoubleFunction=class scala/jdk/FunctionWrappers$FromJavaIntToDoubleFunction of class scala/jdk/FunctionWrappers
  public static final #14= #2 of #9;      // RichIntToDoubleFunctionAsFunction1=class scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1 of class scala/jdk/FunctionWrappers
  public static #17= #16 of #9;           // RichIntToDoubleFunctionAsFunction1$=class scala/jdk/FunctionWrappers$RichIntToDoubleFunctionAsFunction1$ of class scala/jdk/FunctionWrappers
SourceFile: "FunctionWrappers.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 25 00 26 01 00 19 00 1A 05 00 32
   00 33 01 00 2E 00 2F 01 00 12 00 14 01
  Scala: length = 0x0 (unknown attribute)

