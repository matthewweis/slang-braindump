Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/conversions/Z16_Ext$.class
  Last modified May 29, 2022; size 5708 bytes
  SHA-256 checksum 23eae4105844d7f637405d541deb9e00abd0ce5d08b1219aa37121b5a5c4564f
  Compiled from "extension.scala"
public final class org.sireum.conversions.Z16_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/conversions/Z16_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 22, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/conversions/Z16_Ext$
    #2 = Class              #1            // org/sireum/conversions/Z16_Ext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               extension.scala
    #6 = Utf8               org/sireum/R$$String$
    #7 = Class              #6            // org/sireum/R$$String$
    #8 = Utf8               org/sireum/R
    #9 = Class              #8            // org/sireum/R
   #10 = Utf8               $String$
   #11 = Utf8               org/sireum/Z16$Z16$Slang
   #12 = Class              #11           // org/sireum/Z16$Z16$Slang
   #13 = Utf8               org/sireum/Z16
   #14 = Class              #13           // org/sireum/Z16
   #15 = Utf8               Z16$Slang
   #16 = Utf8               org/sireum/Z16$Z16$Slang$z16$
   #17 = Class              #16           // org/sireum/Z16$Z16$Slang$z16$
   #18 = Utf8               z16$
   #19 = Utf8               MODULE$
   #20 = Utf8               Lorg/sireum/conversions/Z16_Ext$;
   #21 = Utf8               <clinit>
   #22 = Utf8               ()V
   #23 = Utf8               <init>
   #24 = NameAndType        #23:#22       // "<init>":()V
   #25 = Methodref          #2.#24        // org/sireum/conversions/Z16_Ext$."<init>":()V
   #26 = NameAndType        #19:#20       // MODULE$:Lorg/sireum/conversions/Z16_Ext$;
   #27 = Fieldref           #2.#26        // org/sireum/conversions/Z16_Ext$.MODULE$:Lorg/sireum/conversions/Z16_Ext$;
   #28 = Utf8               toB
   #29 = Utf8               (Lorg/sireum/Z;)Z
   #30 = Utf8               n
   #31 = Utf8               org/sireum/B$
   #32 = Class              #31           // org/sireum/B$
   #33 = Utf8               Lorg/sireum/B$;
   #34 = NameAndType        #19:#33       // MODULE$:Lorg/sireum/B$;
   #35 = Fieldref           #32.#34       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #36 = Utf8               org/sireum/Z16$
   #37 = Class              #36           // org/sireum/Z16$
   #38 = Utf8               Lorg/sireum/Z16$;
   #39 = NameAndType        #19:#38       // MODULE$:Lorg/sireum/Z16$;
   #40 = Fieldref           #37.#39       // org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
   #41 = Utf8               scala/StringContext
   #42 = Class              #41           // scala/StringContext
   #43 = Utf8               scala/runtime/ScalaRunTime$
   #44 = Class              #43           // scala/runtime/ScalaRunTime$
   #45 = Utf8               Lscala/runtime/ScalaRunTime$;
   #46 = NameAndType        #19:#45       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #47 = Fieldref           #44.#46       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #48 = Utf8               java/lang/String
   #49 = Class              #48           // java/lang/String
   #50 = Utf8               0
   #51 = String             #50           // 0
   #52 = Utf8               [Ljava/lang/Object;
   #53 = Class              #52           // "[Ljava/lang/Object;"
   #54 = Utf8               wrapRefArray
   #55 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #56 = NameAndType        #54:#55       // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #57 = Methodref          #44.#56       // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #58 = Utf8               (Lscala/collection/immutable/Seq;)V
   #59 = NameAndType        #23:#58       // "<init>":(Lscala/collection/immutable/Seq;)V
   #60 = Methodref          #42.#59       // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
   #61 = Utf8               (Lscala/StringContext;)Lorg/sireum/Z16$Z16$Slang;
   #62 = NameAndType        #15:#61       // Z16$Slang:(Lscala/StringContext;)Lorg/sireum/Z16$Z16$Slang;
   #63 = Methodref          #37.#62       // org/sireum/Z16$.Z16$Slang:(Lscala/StringContext;)Lorg/sireum/Z16$Z16$Slang;
   #64 = Utf8               z16
   #65 = Utf8               ()Lorg/sireum/Z16$Z16$Slang$z16$;
   #66 = NameAndType        #64:#65       // z16:()Lorg/sireum/Z16$Z16$Slang$z16$;
   #67 = Methodref          #12.#66       // org/sireum/Z16$Z16$Slang.z16:()Lorg/sireum/Z16$Z16$Slang$z16$;
   #68 = Utf8               scala/collection/immutable/Nil$
   #69 = Class              #68           // scala/collection/immutable/Nil$
   #70 = Utf8               Lscala/collection/immutable/Nil$;
   #71 = NameAndType        #19:#70       // MODULE$:Lscala/collection/immutable/Nil$;
   #72 = Fieldref           #69.#71       // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #73 = Utf8               apply
   #74 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
   #75 = NameAndType        #73:#74       // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
   #76 = Methodref          #17.#75       // org/sireum/Z16$Z16$Slang$z16$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
   #77 = Utf8               equals
   #78 = Utf8               (Ljava/lang/Object;)Z
   #79 = NameAndType        #77:#78       // equals:(Ljava/lang/Object;)Z
   #80 = Methodref          #4.#79        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #81 = Utf8               (Z)Z
   #82 = NameAndType        #73:#81       // apply:(Z)Z
   #83 = Methodref          #32.#82       // org/sireum/B$.apply:(Z)Z
   #84 = Utf8               this
   #85 = Utf8               Lorg/sireum/Z;
   #86 = Utf8               org/sireum/Z
   #87 = Class              #86           // org/sireum/Z
   #88 = Utf8               toZ
   #89 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #90 = Utf8               (Lorg/sireum/Z;)V
   #91 = NameAndType        #23:#90       // "<init>":(Lorg/sireum/Z;)V
   #92 = Methodref          #14.#91       // org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
   #93 = Utf8               toMP
   #94 = Utf8               ()Lorg/sireum/Z;
   #95 = NameAndType        #93:#94       // toMP:()Lorg/sireum/Z;
   #96 = Methodref          #14.#95       // org/sireum/Z16.toMP:()Lorg/sireum/Z;
   #97 = Utf8               toZ8
   #98 = Utf8               org/sireum/Z8$
   #99 = Class              #98           // org/sireum/Z8$
  #100 = Utf8               Lorg/sireum/Z8$;
  #101 = NameAndType        #19:#100      // MODULE$:Lorg/sireum/Z8$;
  #102 = Fieldref           #99.#101      // org/sireum/Z8$.MODULE$:Lorg/sireum/Z8$;
  #103 = NameAndType        #73:#89       // apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #104 = Methodref          #99.#103      // org/sireum/Z8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #105 = Utf8               toZ16
  #106 = Methodref          #37.#103      // org/sireum/Z16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #107 = Utf8               toZ32
  #108 = Utf8               org/sireum/Z32$
  #109 = Class              #108          // org/sireum/Z32$
  #110 = Utf8               Lorg/sireum/Z32$;
  #111 = NameAndType        #19:#110      // MODULE$:Lorg/sireum/Z32$;
  #112 = Fieldref           #109.#111     // org/sireum/Z32$.MODULE$:Lorg/sireum/Z32$;
  #113 = Methodref          #109.#103     // org/sireum/Z32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #114 = Utf8               toZ64
  #115 = Utf8               org/sireum/Z64$
  #116 = Class              #115          // org/sireum/Z64$
  #117 = Utf8               Lorg/sireum/Z64$;
  #118 = NameAndType        #19:#117      // MODULE$:Lorg/sireum/Z64$;
  #119 = Fieldref           #116.#118     // org/sireum/Z64$.MODULE$:Lorg/sireum/Z64$;
  #120 = Methodref          #116.#103     // org/sireum/Z64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #121 = Utf8               toN
  #122 = Utf8               org/sireum/N$
  #123 = Class              #122          // org/sireum/N$
  #124 = Utf8               Lorg/sireum/N$;
  #125 = NameAndType        #19:#124      // MODULE$:Lorg/sireum/N$;
  #126 = Fieldref           #123.#125     // org/sireum/N$.MODULE$:Lorg/sireum/N$;
  #127 = Methodref          #123.#103     // org/sireum/N$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #128 = Utf8               toN8
  #129 = Utf8               org/sireum/N8$
  #130 = Class              #129          // org/sireum/N8$
  #131 = Utf8               Lorg/sireum/N8$;
  #132 = NameAndType        #19:#131      // MODULE$:Lorg/sireum/N8$;
  #133 = Fieldref           #130.#132     // org/sireum/N8$.MODULE$:Lorg/sireum/N8$;
  #134 = Methodref          #130.#103     // org/sireum/N8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #135 = Utf8               toN16
  #136 = Utf8               org/sireum/N16$
  #137 = Class              #136          // org/sireum/N16$
  #138 = Utf8               Lorg/sireum/N16$;
  #139 = NameAndType        #19:#138      // MODULE$:Lorg/sireum/N16$;
  #140 = Fieldref           #137.#139     // org/sireum/N16$.MODULE$:Lorg/sireum/N16$;
  #141 = Methodref          #137.#103     // org/sireum/N16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #142 = Utf8               toN32
  #143 = Utf8               org/sireum/N32$
  #144 = Class              #143          // org/sireum/N32$
  #145 = Utf8               Lorg/sireum/N32$;
  #146 = NameAndType        #19:#145      // MODULE$:Lorg/sireum/N32$;
  #147 = Fieldref           #144.#146     // org/sireum/N32$.MODULE$:Lorg/sireum/N32$;
  #148 = Methodref          #144.#103     // org/sireum/N32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #149 = Utf8               toN64
  #150 = Utf8               org/sireum/N64$
  #151 = Class              #150          // org/sireum/N64$
  #152 = Utf8               Lorg/sireum/N64$;
  #153 = NameAndType        #19:#152      // MODULE$:Lorg/sireum/N64$;
  #154 = Fieldref           #151.#153     // org/sireum/N64$.MODULE$:Lorg/sireum/N64$;
  #155 = Methodref          #151.#103     // org/sireum/N64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #156 = Utf8               toS8
  #157 = Utf8               (Lorg/sireum/Z;)B
  #158 = Utf8               scala/Predef$
  #159 = Class              #158          // scala/Predef$
  #160 = Utf8               Lscala/Predef$;
  #161 = NameAndType        #19:#160      // MODULE$:Lscala/Predef$;
  #162 = Fieldref           #159.#161     // scala/Predef$.MODULE$:Lscala/Predef$;
  #163 = Utf8               org/sireum/conversions/Z_Ext$
  #164 = Class              #163          // org/sireum/conversions/Z_Ext$
  #165 = Utf8               Lorg/sireum/conversions/Z_Ext$;
  #166 = NameAndType        #19:#165      // MODULE$:Lorg/sireum/conversions/Z_Ext$;
  #167 = Fieldref           #164.#166     // org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
  #168 = Utf8               isInRangeSigned8
  #169 = NameAndType        #168:#29      // isInRangeSigned8:(Lorg/sireum/Z;)Z
  #170 = Methodref          #164.#169     // org/sireum/conversions/Z_Ext$.isInRangeSigned8:(Lorg/sireum/Z;)Z
  #171 = Utf8               $4B
  #172 = NameAndType        #171:#81      // $4B:(Z)Z
  #173 = Methodref          #32.#172      // org/sireum/B$.$4B:(Z)Z
  #174 = Utf8               require
  #175 = Utf8               (Z)V
  #176 = NameAndType        #174:#175     // require:(Z)V
  #177 = Methodref          #159.#176     // scala/Predef$.require:(Z)V
  #178 = Utf8               org/sireum/S8$
  #179 = Class              #178          // org/sireum/S8$
  #180 = Utf8               Lorg/sireum/S8$;
  #181 = NameAndType        #19:#180      // MODULE$:Lorg/sireum/S8$;
  #182 = Fieldref           #179.#181     // org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
  #183 = NameAndType        #73:#157      // apply:(Lorg/sireum/Z;)B
  #184 = Methodref          #179.#183     // org/sireum/S8$.apply:(Lorg/sireum/Z;)B
  #185 = Utf8               mp
  #186 = Utf8               toS16
  #187 = Utf8               (Lorg/sireum/Z;)S
  #188 = Utf8               isInRangeSigned16
  #189 = NameAndType        #188:#29      // isInRangeSigned16:(Lorg/sireum/Z;)Z
  #190 = Methodref          #164.#189     // org/sireum/conversions/Z_Ext$.isInRangeSigned16:(Lorg/sireum/Z;)Z
  #191 = Utf8               org/sireum/S16$
  #192 = Class              #191          // org/sireum/S16$
  #193 = Utf8               Lorg/sireum/S16$;
  #194 = NameAndType        #19:#193      // MODULE$:Lorg/sireum/S16$;
  #195 = Fieldref           #192.#194     // org/sireum/S16$.MODULE$:Lorg/sireum/S16$;
  #196 = NameAndType        #73:#187      // apply:(Lorg/sireum/Z;)S
  #197 = Methodref          #192.#196     // org/sireum/S16$.apply:(Lorg/sireum/Z;)S
  #198 = Utf8               toS32
  #199 = Utf8               (Lorg/sireum/Z;)I
  #200 = Utf8               isInRangeSigned32
  #201 = NameAndType        #200:#29      // isInRangeSigned32:(Lorg/sireum/Z;)Z
  #202 = Methodref          #164.#201     // org/sireum/conversions/Z_Ext$.isInRangeSigned32:(Lorg/sireum/Z;)Z
  #203 = Utf8               org/sireum/S32$
  #204 = Class              #203          // org/sireum/S32$
  #205 = Utf8               Lorg/sireum/S32$;
  #206 = NameAndType        #19:#205      // MODULE$:Lorg/sireum/S32$;
  #207 = Fieldref           #204.#206     // org/sireum/S32$.MODULE$:Lorg/sireum/S32$;
  #208 = NameAndType        #73:#199      // apply:(Lorg/sireum/Z;)I
  #209 = Methodref          #204.#208     // org/sireum/S32$.apply:(Lorg/sireum/Z;)I
  #210 = Utf8               toS64
  #211 = Utf8               (Lorg/sireum/Z;)J
  #212 = Utf8               isInRangeSigned64
  #213 = NameAndType        #212:#29      // isInRangeSigned64:(Lorg/sireum/Z;)Z
  #214 = Methodref          #164.#213     // org/sireum/conversions/Z_Ext$.isInRangeSigned64:(Lorg/sireum/Z;)Z
  #215 = Utf8               org/sireum/S64$
  #216 = Class              #215          // org/sireum/S64$
  #217 = Utf8               Lorg/sireum/S64$;
  #218 = NameAndType        #19:#217      // MODULE$:Lorg/sireum/S64$;
  #219 = Fieldref           #216.#218     // org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
  #220 = NameAndType        #73:#211      // apply:(Lorg/sireum/Z;)J
  #221 = Methodref          #216.#220     // org/sireum/S64$.apply:(Lorg/sireum/Z;)J
  #222 = Utf8               toU8
  #223 = Utf8               isInRangeUnsigned8
  #224 = NameAndType        #223:#29      // isInRangeUnsigned8:(Lorg/sireum/Z;)Z
  #225 = Methodref          #164.#224     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned8:(Lorg/sireum/Z;)Z
  #226 = Utf8               org/sireum/U8$
  #227 = Class              #226          // org/sireum/U8$
  #228 = Utf8               Lorg/sireum/U8$;
  #229 = NameAndType        #19:#228      // MODULE$:Lorg/sireum/U8$;
  #230 = Fieldref           #227.#229     // org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
  #231 = Methodref          #227.#183     // org/sireum/U8$.apply:(Lorg/sireum/Z;)B
  #232 = Utf8               toU16
  #233 = Utf8               isInRangeUnsigned16
  #234 = NameAndType        #233:#29      // isInRangeUnsigned16:(Lorg/sireum/Z;)Z
  #235 = Methodref          #164.#234     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned16:(Lorg/sireum/Z;)Z
  #236 = Utf8               org/sireum/U16$
  #237 = Class              #236          // org/sireum/U16$
  #238 = Utf8               Lorg/sireum/U16$;
  #239 = NameAndType        #19:#238      // MODULE$:Lorg/sireum/U16$;
  #240 = Fieldref           #237.#239     // org/sireum/U16$.MODULE$:Lorg/sireum/U16$;
  #241 = Methodref          #237.#196     // org/sireum/U16$.apply:(Lorg/sireum/Z;)S
  #242 = Utf8               toU32
  #243 = Utf8               isInRangeUnsigned32
  #244 = NameAndType        #243:#29      // isInRangeUnsigned32:(Lorg/sireum/Z;)Z
  #245 = Methodref          #164.#244     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned32:(Lorg/sireum/Z;)Z
  #246 = Utf8               org/sireum/U32$
  #247 = Class              #246          // org/sireum/U32$
  #248 = Utf8               Lorg/sireum/U32$;
  #249 = NameAndType        #19:#248      // MODULE$:Lorg/sireum/U32$;
  #250 = Fieldref           #247.#249     // org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
  #251 = Methodref          #247.#208     // org/sireum/U32$.apply:(Lorg/sireum/Z;)I
  #252 = Utf8               toU64
  #253 = Utf8               isInRangeUnsigned64
  #254 = NameAndType        #253:#29      // isInRangeUnsigned64:(Lorg/sireum/Z;)Z
  #255 = Methodref          #164.#254     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned64:(Lorg/sireum/Z;)Z
  #256 = Utf8               org/sireum/U64$
  #257 = Class              #256          // org/sireum/U64$
  #258 = Utf8               Lorg/sireum/U64$;
  #259 = NameAndType        #19:#258      // MODULE$:Lorg/sireum/U64$;
  #260 = Fieldref           #257.#259     // org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
  #261 = Methodref          #257.#220     // org/sireum/U64$.apply:(Lorg/sireum/Z;)J
  #262 = Utf8               toR
  #263 = Utf8               (Lorg/sireum/Z;)Lscala/math/BigDecimal;
  #264 = Utf8               Lorg/sireum/R$$String$;
  #265 = NameAndType        #19:#264      // MODULE$:Lorg/sireum/R$$String$;
  #266 = Fieldref           #7.#265       // org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
  #267 = Utf8               toString
  #268 = Utf8               ()Ljava/lang/String;
  #269 = NameAndType        #267:#268     // toString:()Ljava/lang/String;
  #270 = Methodref          #14.#269      // org/sireum/Z16.toString:()Ljava/lang/String;
  #271 = Utf8               (Ljava/lang/String;)Lscala/math/BigDecimal;
  #272 = NameAndType        #73:#271      // apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #273 = Methodref          #7.#272       // org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #274 = Methodref          #4.#24        // java/lang/Object."<init>":()V
  #275 = Utf8               Code
  #276 = Utf8               LineNumberTable
  #277 = Utf8               StackMapTable
  #278 = Utf8               LocalVariableTable
  #279 = Utf8               MethodParameters
  #280 = Utf8               InnerClasses
  #281 = Utf8               SourceFile
  #282 = Utf8               ScalaInlineInfo
  #283 = Utf8               Scala
{
  public static final org.sireum.conversions.Z16_Ext$ MODULE$;
    descriptor: Lorg/sireum/conversions/Z16_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/conversions/Z16_Ext$
         3: dup
         4: invokespecial #25                 // Method "<init>":()V
         7: putstatic     #27                 // Field MODULE$:Lorg/sireum/conversions/Z16_Ext$;
        10: return
      LineNumberTable:
        line 272: 0

  public boolean toB(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=3, args_size=2
         0: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: getstatic     #40                 // Field org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
         7: new           #42                 // class scala/StringContext
        10: dup
        11: getstatic     #47                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        14: iconst_1
        15: anewarray     #49                 // class java/lang/String
        18: dup
        19: iconst_0
        20: ldc           #51                 // String 0
        22: aastore
        23: checkcast     #53                 // class "[Ljava/lang/Object;"
        26: invokevirtual #57                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        29: invokespecial #60                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        32: invokevirtual #63                 // Method org/sireum/Z16$.Z16$Slang:(Lscala/StringContext;)Lorg/sireum/Z16$Z16$Slang;
        35: invokevirtual #67                 // Method org/sireum/Z16$Z16$Slang.z16:()Lorg/sireum/Z16$Z16$Slang$z16$;
        38: getstatic     #72                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        41: invokevirtual #76                 // Method org/sireum/Z16$Z16$Slang$z16$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
        44: astore_2
        45: dup
        46: ifnonnull     57
        49: pop
        50: aload_2
        51: ifnull        68
        54: goto          64
        57: aload_2
        58: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        61: ifne          68
        64: iconst_1
        65: goto          69
        68: iconst_0
        69: invokevirtual #83                 // Method org/sireum/B$.apply:(Z)Z
        72: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class org/sireum/conversions/Z16_Ext$, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/conversions/Z16_Ext$, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      73     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      73     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #14                 // class org/sireum/Z16
         3: dup
         4: aload_1
         5: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
         8: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        11: areturn
      LineNumberTable:
        line 276: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      12     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ8(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #102                // Field org/sireum/Z8$.MODULE$:Lorg/sireum/Z8$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        14: invokevirtual #104                // Method org/sireum/Z8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 278: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ16(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #40                 // Field org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        14: invokevirtual #106                // Method org/sireum/Z16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 280: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ32(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #112                // Field org/sireum/Z32$.MODULE$:Lorg/sireum/Z32$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        14: invokevirtual #113                // Method org/sireum/Z32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ64(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #119                // Field org/sireum/Z64$.MODULE$:Lorg/sireum/Z64$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        14: invokevirtual #120                // Method org/sireum/Z64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 284: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #126                // Field org/sireum/N$.MODULE$:Lorg/sireum/N$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        14: invokevirtual #127                // Method org/sireum/N$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 286: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN8(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #133                // Field org/sireum/N8$.MODULE$:Lorg/sireum/N8$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        14: invokevirtual #134                // Method org/sireum/N8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 288: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN16(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #140                // Field org/sireum/N16$.MODULE$:Lorg/sireum/N16$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        14: invokevirtual #141                // Method org/sireum/N16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 290: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN32(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #147                // Field org/sireum/N32$.MODULE$:Lorg/sireum/N32$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        14: invokevirtual #148                // Method org/sireum/N32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN64(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #154                // Field org/sireum/N64$.MODULE$:Lorg/sireum/N64$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        14: invokevirtual #155                // Method org/sireum/N64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 294: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public byte toS8(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/Z16
         3: dup
         4: aload_1
         5: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
         8: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #170                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned8:(Lorg/sireum/Z;)Z
        25: invokevirtual #173                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #177                // Method scala/Predef$.require:(Z)V
        31: getstatic     #182                // Field org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
        34: aload_2
        35: invokevirtual #184                // Method org/sireum/S8$.apply:(Lorg/sireum/Z;)B
        38: ireturn
      LineNumberTable:
        line 297: 0
        line 298: 12
        line 299: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      39     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public short toS16(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/Z16
         3: dup
         4: aload_1
         5: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
         8: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #190                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned16:(Lorg/sireum/Z;)Z
        25: invokevirtual #173                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #177                // Method scala/Predef$.require:(Z)V
        31: getstatic     #195                // Field org/sireum/S16$.MODULE$:Lorg/sireum/S16$;
        34: aload_2
        35: invokevirtual #197                // Method org/sireum/S16$.apply:(Lorg/sireum/Z;)S
        38: ireturn
      LineNumberTable:
        line 303: 0
        line 304: 12
        line 305: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      39     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public int toS32(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/Z16
         3: dup
         4: aload_1
         5: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
         8: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #202                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned32:(Lorg/sireum/Z;)Z
        25: invokevirtual #173                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #177                // Method scala/Predef$.require:(Z)V
        31: getstatic     #207                // Field org/sireum/S32$.MODULE$:Lorg/sireum/S32$;
        34: aload_2
        35: invokevirtual #209                // Method org/sireum/S32$.apply:(Lorg/sireum/Z;)I
        38: ireturn
      LineNumberTable:
        line 309: 0
        line 310: 12
        line 311: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      39     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public long toS64(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/Z16
         3: dup
         4: aload_1
         5: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
         8: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #214                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned64:(Lorg/sireum/Z;)Z
        25: invokevirtual #173                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #177                // Method scala/Predef$.require:(Z)V
        31: getstatic     #219                // Field org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
        34: aload_2
        35: invokevirtual #221                // Method org/sireum/S64$.apply:(Lorg/sireum/Z;)J
        38: lreturn
      LineNumberTable:
        line 315: 0
        line 316: 12
        line 317: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      39     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public byte toU8(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/Z16
         3: dup
         4: aload_1
         5: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
         8: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #225                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned8:(Lorg/sireum/Z;)Z
        25: invokevirtual #173                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #177                // Method scala/Predef$.require:(Z)V
        31: getstatic     #230                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        34: aload_2
        35: invokevirtual #231                // Method org/sireum/U8$.apply:(Lorg/sireum/Z;)B
        38: ireturn
      LineNumberTable:
        line 321: 0
        line 322: 12
        line 323: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      39     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public short toU16(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/Z16
         3: dup
         4: aload_1
         5: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
         8: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #235                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned16:(Lorg/sireum/Z;)Z
        25: invokevirtual #173                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #177                // Method scala/Predef$.require:(Z)V
        31: getstatic     #240                // Field org/sireum/U16$.MODULE$:Lorg/sireum/U16$;
        34: aload_2
        35: invokevirtual #241                // Method org/sireum/U16$.apply:(Lorg/sireum/Z;)S
        38: ireturn
      LineNumberTable:
        line 327: 0
        line 328: 12
        line 329: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      39     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public int toU32(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/Z16
         3: dup
         4: aload_1
         5: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
         8: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #245                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned32:(Lorg/sireum/Z;)Z
        25: invokevirtual #173                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #177                // Method scala/Predef$.require:(Z)V
        31: getstatic     #250                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
        34: aload_2
        35: invokevirtual #251                // Method org/sireum/U32$.apply:(Lorg/sireum/Z;)I
        38: ireturn
      LineNumberTable:
        line 333: 0
        line 334: 12
        line 335: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      39     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public long toU64(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/Z16
         3: dup
         4: aload_1
         5: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
         8: invokevirtual #96                 // Method org/sireum/Z16.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #255                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned64:(Lorg/sireum/Z;)Z
        25: invokevirtual #173                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #177                // Method scala/Predef$.require:(Z)V
        31: getstatic     #260                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        34: aload_2
        35: invokevirtual #261                // Method org/sireum/U64$.apply:(Lorg/sireum/Z;)J
        38: lreturn
      LineNumberTable:
        line 339: 0
        line 340: 12
        line 341: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      39     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.math.BigDecimal toR(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #266                // Field org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
         3: new           #14                 // class org/sireum/Z16
         6: dup
         7: aload_1
         8: invokespecial #92                 // Method org/sireum/Z16."<init>":(Lorg/sireum/Z;)V
        11: invokevirtual #270                // Method org/sireum/Z16.toString:()Ljava/lang/String;
        14: invokevirtual #273                // Method org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
        17: areturn
      LineNumberTable:
        line 344: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/Z16_Ext$;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  private org.sireum.conversions.Z16_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #274                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 272: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/conversions/Z16_Ext$;
}
InnerClasses:
  public static #10= #7 of #9;            // $String$=class org/sireum/R$$String$ of class org/sireum/R
  public static #15= #12 of #14;          // Z16$Slang=class org/sireum/Z16$Z16$Slang of class org/sireum/Z16
  public #18= #17 of #12;                 // z16$=class org/sireum/Z16$Z16$Slang$z16$ of class org/sireum/Z16$Z16$Slang
SourceFile: "extension.scala"
  ScalaInlineInfo: length = 0x6D (unknown attribute)
   01 01 00 15 00 17 00 16 01 00 1C 00 1D 01 00 79
   00 59 01 00 87 00 59 01 00 8E 00 59 01 00 95 00
   59 01 00 80 00 59 01 01 06 01 07 01 00 BA 00 BB
   01 00 C6 00 C7 01 00 D2 00 D3 01 00 9C 00 9D 01
   00 E8 00 BB 01 00 F2 00 C7 01 00 FC 00 D3 01 00
   DE 00 9D 01 00 58 00 59 01 00 69 00 59 01 00 6B
   00 59 01 00 72 00 59 01 00 61 00 59 01
  Scala: length = 0x0 (unknown attribute)

