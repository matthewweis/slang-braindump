Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/core/Attributes.class
  Last modified May 29, 2022; size 6471 bytes
  SHA-256 checksum 50b41ceb5ba28f276997ed91ee647c733175cecd48207f5bdd4fc351c279cea5
  Compiled from "Definitions.scala"
public final class coursier.core.Attributes implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/core/Attributes
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 2, methods: 22, attributes: 4
Constant pool:
    #1 = Utf8               coursier/core/Attributes
    #2 = Class              #1            // coursier/core/Attributes
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               Definitions.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005Mc\u0001\u0002\u000f\u001e\u0005\tB\u0001\u0002\u000f\u0001\u0003\u0006\u0004%\t!\u000f\u0005\t}\u0001\u0011\t\u0011)A\u0005u!Aq\b\u0001BC\u0002\u0013\u0005\u0001\t\u0003\u0005E\u0001\t\u0005\t\u0015!\u0003B\u0011\u0015)\u0005\u0001\"\u0001G\u0011\u0015Q\u0005\u0001\"\u0001:\u0011\u0015Y\u0005\u0001\"\u0001M\u0011\u0015)\u0006\u0001\"\u0001W\u0011\u0015\t\u0007\u0001\"\u0001c\u0011\u00151\u0007\u0001\"\u0001h\u0011\u0015I\u0007\u0001\"\u0001k\u0011\u0015a\u0007\u0001\"\u0011n\u0011\u0015)\b\u0001\"\u0011w\u0011\u0015a\b\u0001\"\u0011~\u0011\u0019y\b\u0001\"\u0011\u0002\u0002!9\u0011\u0011\u0002\u0001\u0005\n\u0005-\u0001bBA\n\u0001\u0011\u0005\u0013Q\u0003\u0005\b\u0003/\u0001A\u0011IA\r\u0011\u001d\tY\u0002\u0001C!\u0003;Aq!a\t\u0001\t\u0003\n)cB\u0004\u0002*uA\t!a\u000b\u0007\rqi\u0002\u0012AA\u0017\u0011\u0019)e\u0003\"\u0001\u0002:!I\u00111\b\fC\u0002\u0013\u0005\u0011Q\b\u0005\b\u0003\u007f1\u0002\u0015!\u0003H\u0011\u001d\t\tE\u0006C\u0001\u0003\u0007B\u0011\"!\u0013\u0017\u0003\u0003%I!a\u0013\u0003\u0015\u0005#HO]5ckR,7O\u0003\u0002\u001f?\u0005!1m\u001c:f\u0015\u0005\u0001\u0013\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001M!\u0001aI\u0015-!\t!s%D\u0001&\u0015\u00051\u0013!B:dC2\f\u0017B\u0001\u0015&\u0005\u0019\te.\u001f*fMB\u0011AEK\u0005\u0003W\u0015\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002.k9\u0011af\r\b\u0003_Ij\u0011\u0001\r\u0006\u0003c\u0005\na\u0001\u0010:p_Rt\u0014\"\u0001\u0014\n\u0005Q*\u0013a\u00029bG.\fw-Z\u0005\u0003m]\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001N\u0013\u0002\tQL\b/Z\u000b\u0002uA\u00111\bP\u0007\u0002;%\u0011Q(\b\u0002\u0005)f\u0004X-A\u0003usB,\u0007%\u0001\u0006dY\u0006\u001c8/\u001b4jKJ,\u0012!\u0011\t\u0003w\tK!aQ\u000f\u0003\u0015\rc\u0017m]:jM&,\'/A\u0006dY\u0006\u001c8/\u001b4jKJ\u0004\u0013A\u0002\u001fj]&$h\bF\u0002H\u0011&\u0003\"a\u000f\u0001\t\u000ba*\u0001\u0019\u0001\u001e\t\u000b}*\u0001\u0019A!\u0002\u0013A\f7m[1hS:<\u0017A\u00069bG.\fw-\u001b8h\u0003:$7\t\\1tg&4\u0017.\u001a:\u0016\u00035\u0003\"A\u0014*\u000f\u0005=\u0003\u0006CA\u0018&\u0013\t\tV%\u0001\u0004Qe\u0016$WMZ\u0005\u0003\'R\u0013aa\u0015;sS:<\'BA)&\u0003-\u0001XO\u00197jG\u0006$\u0018n\u001c8\u0015\u0007]SF\f\u0005\u0002<1&\u0011\u0011,\b\u0002\f!V\u0014G.[2bi&|g\u000eC\u0003\\\u0011\u0001\u0007Q*\u0001\u0003oC6,\u0007\"B/\t\u0001\u0004q\u0016aA3yiB\u00111hX\u0005\u0003Av\u0011\u0011\"\u0012=uK:\u001c\u0018n\u001c8\u0002\u000f%\u001cX)\u001c9usV\t1\r\u0005\u0002%I&\u0011Q-\n\u0002\b\u0005>|G.Z1o\u0003!9\u0018\u000e\u001e5UsB,GCA$i\u0011\u0015A$\u00021\u0001;\u000399\u0018\u000e\u001e5DY\u0006\u001c8/\u001b4jKJ$\"aR6\t\u000b}Z\u0001\u0019A!\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012A\u001c\t\u0003_Rl\u0011\u0001\u001d\u0006\u0003cJ\fA\u0001\\1oO*\t1/\u0001\u0003kCZ\f\u0017BA*q\u0003!\u0019\u0017M\\#rk\u0006dGCA2x\u0011\u0015AX\u00021\u0001z\u0003\ry\'M\u001b\t\u0003IiL!a_\u0013\u0003\u0007\u0005s\u00170\u0001\u0004fcV\fGn\u001d\u000b\u0003GzDQ\u0001\u001f\bA\u0002e\f\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u0003\u0003\u0007\u00012\u0001JA\u0003\u0013\r\t9!\n\u0002\u0004\u0013:$\u0018!\u0002;va2,WCAA\u0007!\u0015!\u0013q\u0002\u001eB\u0013\r\t\t\"\n\u0002\u0007)V\u0004H.\u001a\u001a\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\u0005q\u0017\u0001\u00049s_\u0012,8\r^!sSRLXCAA\u0002\u00039\u0001(o\u001c3vGR,E.Z7f]R$2!_A\u0010\u0011\u001d\t\tc\u0005a\u0001\u0003\u0007\t\u0011A\\\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\rF\u0002o\u0003OAq!!\t\u0015\u0001\u0004\t\u0019!\u0001\u0006BiR\u0014\u0018NY;uKN\u0004\"a\u000f\f\u0014\tY\u0019\u0013q\u0006\t\u0005\u0003c\t9$\u0004\u0002\u00024)\u0019\u0011Q\u0007:\u0002\u0005%|\u0017b\u0001\u001c\u00024Q\u0011\u00111F\u0001\u0006K6\u0004H/_\u000b\u0002\u000f\u00061Q-\u001c9us\u0002\nQ!\u00199qYf$RaRA#\u0003\u000fBQ\u0001\u000f\u000eA\u0002iBQa\u0010\u000eA\u0002\u0005\u000bAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!!\u0014\u0011\u0007=\fy%C\u0002\u0002RA\u0014aa\u00142kK\u000e$\b
   #13 = Utf8               type
   #14 = Utf8               Ljava/lang/String;
   #15 = Utf8               classifier
   #16 = Utf8               apply
   #17 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Attributes;
   #18 = Utf8               coursier/core/Attributes$
   #19 = Class              #18           // coursier/core/Attributes$
   #20 = Utf8               MODULE$
   #21 = Utf8               Lcoursier/core/Attributes$;
   #22 = NameAndType        #20:#21       // MODULE$:Lcoursier/core/Attributes$;
   #23 = Fieldref           #19.#22       // coursier/core/Attributes$.MODULE$:Lcoursier/core/Attributes$;
   #24 = NameAndType        #16:#17       // apply:(Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Attributes;
   #25 = Methodref          #19.#24       // coursier/core/Attributes$.apply:(Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Attributes;
   #26 = Utf8               empty
   #27 = Utf8               ()Lcoursier/core/Attributes;
   #28 = NameAndType        #26:#27       // empty:()Lcoursier/core/Attributes;
   #29 = Methodref          #19.#28       // coursier/core/Attributes$.empty:()Lcoursier/core/Attributes;
   #30 = Utf8               productIterator
   #31 = Utf8               ()Lscala/collection/Iterator;
   #32 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #33 = Utf8               productIterator$
   #34 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #35 = NameAndType        #33:#34       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #36 = InterfaceMethodref #6.#35        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #37 = Utf8               this
   #38 = Utf8               Lcoursier/core/Attributes;
   #39 = Utf8               productElementNames
   #40 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #41 = Utf8               productElementNames$
   #42 = NameAndType        #41:#34       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #43 = InterfaceMethodref #6.#42        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #44 = Utf8               ()Ljava/lang/String;
   #45 = NameAndType        #13:#14       // type:Ljava/lang/String;
   #46 = Fieldref           #2.#45        // coursier/core/Attributes.type:Ljava/lang/String;
   #47 = NameAndType        #15:#14       // classifier:Ljava/lang/String;
   #48 = Fieldref           #2.#47        // coursier/core/Attributes.classifier:Ljava/lang/String;
   #49 = Utf8               packaging
   #50 = Utf8               coursier/core/Type$
   #51 = Class              #50           // coursier/core/Type$
   #52 = Utf8               Lcoursier/core/Type$;
   #53 = NameAndType        #20:#52       // MODULE$:Lcoursier/core/Type$;
   #54 = Fieldref           #51.#53       // coursier/core/Type$.MODULE$:Lcoursier/core/Type$;
   #55 = NameAndType        #13:#44       // type:()Ljava/lang/String;
   #56 = Methodref          #2.#55        // coursier/core/Attributes.type:()Ljava/lang/String;
   #57 = Utf8               isEmpty$extension
   #58 = Utf8               (Ljava/lang/String;)Z
   #59 = NameAndType        #57:#58       // isEmpty$extension:(Ljava/lang/String;)Z
   #60 = Methodref          #51.#59       // coursier/core/Type$.isEmpty$extension:(Ljava/lang/String;)Z
   #61 = Utf8               jar
   #62 = NameAndType        #61:#44       // jar:()Ljava/lang/String;
   #63 = Methodref          #51.#62       // coursier/core/Type$.jar:()Ljava/lang/String;
   #64 = Utf8               java/lang/String
   #65 = Class              #64           // java/lang/String
   #66 = Utf8               packagingAndClassifier
   #67 = Utf8               isEmpty
   #68 = Utf8               ()Z
   #69 = NameAndType        #67:#68       // isEmpty:()Z
   #70 = Methodref          #2.#69        // coursier/core/Attributes.isEmpty:()Z
   #71 = Utf8
   #72 = String             #71           //
   #73 = Utf8               coursier/core/Classifier$
   #74 = Class              #73           // coursier/core/Classifier$
   #75 = Utf8               Lcoursier/core/Classifier$;
   #76 = NameAndType        #20:#75       // MODULE$:Lcoursier/core/Classifier$;
   #77 = Fieldref           #74.#76       // coursier/core/Classifier$.MODULE$:Lcoursier/core/Classifier$;
   #78 = NameAndType        #15:#44       // classifier:()Ljava/lang/String;
   #79 = Methodref          #2.#78        // coursier/core/Attributes.classifier:()Ljava/lang/String;
   #80 = Methodref          #74.#59       // coursier/core/Classifier$.isEmpty$extension:(Ljava/lang/String;)Z
   #81 = NameAndType        #49:#44       // packaging:()Ljava/lang/String;
   #82 = Methodref          #2.#81        // coursier/core/Attributes.packaging:()Ljava/lang/String;
   #83 = Utf8               java/lang/StringBuilder
   #84 = Class              #83           // java/lang/StringBuilder
   #85 = Integer            1
   #86 = Utf8               <init>
   #87 = Utf8               (I)V
   #88 = NameAndType        #86:#87       // "<init>":(I)V
   #89 = Methodref          #84.#88       // java/lang/StringBuilder."<init>":(I)V
   #90 = Utf8               append
   #91 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #92 = NameAndType        #90:#91       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #93 = Methodref          #84.#92       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #94 = Utf8               :
   #95 = String             #94           // :
   #96 = Utf8               toString
   #97 = NameAndType        #96:#44       // toString:()Ljava/lang/String;
   #98 = Methodref          #84.#97       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #99 = Utf8               publication
  #100 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
  #101 = Utf8               name
  #102 = Utf8               ext
  #103 = Utf8               coursier/core/Publication$
  #104 = Class              #103          // coursier/core/Publication$
  #105 = Utf8               Lcoursier/core/Publication$;
  #106 = NameAndType        #20:#105      // MODULE$:Lcoursier/core/Publication$;
  #107 = Fieldref           #104.#106     // coursier/core/Publication$.MODULE$:Lcoursier/core/Publication$;
  #108 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
  #109 = NameAndType        #16:#108      // apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
  #110 = Methodref          #104.#109     // coursier/core/Publication$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
  #111 = Utf8               withType
  #112 = Utf8               (Ljava/lang/String;)Lcoursier/core/Attributes;
  #113 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #114 = NameAndType        #86:#113      // "<init>":(Ljava/lang/String;Ljava/lang/String;)V
  #115 = Methodref          #2.#114       // coursier/core/Attributes."<init>":(Ljava/lang/String;Ljava/lang/String;)V
  #116 = Utf8               withClassifier
  #117 = Utf8               Attributes(
  #118 = String             #117          // Attributes(
  #119 = Utf8               (Ljava/lang/String;)V
  #120 = NameAndType        #86:#119      // "<init>":(Ljava/lang/String;)V
  #121 = Methodref          #84.#120      // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #122 = Utf8               coursier/core/Type
  #123 = Class              #122          // coursier/core/Type
  #124 = Methodref          #123.#120     // coursier/core/Type."<init>":(Ljava/lang/String;)V
  #125 = Utf8               valueOf
  #126 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #127 = NameAndType        #125:#126     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #128 = Methodref          #65.#127      // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #129 = Utf8               ,
  #130 = String             #129          // ,
  #131 = Utf8               coursier/core/Classifier
  #132 = Class              #131          // coursier/core/Classifier
  #133 = Methodref          #132.#120     // coursier/core/Classifier."<init>":(Ljava/lang/String;)V
  #134 = Utf8               )
  #135 = String             #134          // )
  #136 = Utf8               b
  #137 = Utf8               Ljava/lang/StringBuilder;
  #138 = Utf8               canEqual
  #139 = Utf8               (Ljava/lang/Object;)Z
  #140 = Utf8               obj
  #141 = Utf8               Ljava/lang/Object;
  #142 = Utf8               equals
  #143 = NameAndType        #138:#139     // canEqual:(Ljava/lang/Object;)Z
  #144 = Methodref          #2.#143       // coursier/core/Attributes.canEqual:(Ljava/lang/Object;)Z
  #145 = NameAndType        #142:#139     // equals:(Ljava/lang/Object;)Z
  #146 = Methodref          #4.#145       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #147 = Utf8               other
  #148 = Utf8               hashCode
  #149 = Utf8               ()I
  #150 = Utf8               Attributes
  #151 = String             #150          // Attributes
  #152 = Utf8               scala/runtime/Statics
  #153 = Class              #152          // scala/runtime/Statics
  #154 = Utf8               anyHash
  #155 = Utf8               (Ljava/lang/Object;)I
  #156 = NameAndType        #154:#155     // anyHash:(Ljava/lang/Object;)I
  #157 = Methodref          #153.#156     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #158 = Utf8               code
  #159 = Utf8               I
  #160 = Utf8               tuple
  #161 = Utf8               ()Lscala/Tuple2;
  #162 = Utf8               ()Lscala/Tuple2<Lcoursier/core/Type;Lcoursier/core/Classifier;>;
  #163 = Utf8               scala/Tuple2
  #164 = Class              #163          // scala/Tuple2
  #165 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #166 = NameAndType        #86:#165      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #167 = Methodref          #164.#166     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #168 = Utf8               productPrefix
  #169 = Utf8               productArity
  #170 = Utf8               productElement
  #171 = Utf8               (I)Ljava/lang/Object;
  #172 = Utf8               n
  #173 = Utf8               java/lang/IndexOutOfBoundsException
  #174 = Class              #173          // java/lang/IndexOutOfBoundsException
  #175 = Utf8               scala/runtime/BoxesRunTime
  #176 = Class              #175          // scala/runtime/BoxesRunTime
  #177 = Utf8               boxToInteger
  #178 = Utf8               (I)Ljava/lang/Integer;
  #179 = NameAndType        #177:#178     // boxToInteger:(I)Ljava/lang/Integer;
  #180 = Methodref          #176.#179     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #181 = Methodref          #4.#97        // java/lang/Object.toString:()Ljava/lang/String;
  #182 = Methodref          #174.#120     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #183 = Utf8               productElementName
  #184 = Utf8               (I)Ljava/lang/String;
  #185 = String             #13           // type
  #186 = String             #15           // classifier
  #187 = Utf8               ()V
  #188 = NameAndType        #86:#187      // "<init>":()V
  #189 = Methodref          #4.#188       // java/lang/Object."<init>":()V
  #190 = Utf8               $init$
  #191 = Utf8               (Lscala/Product;)V
  #192 = NameAndType        #190:#191     // $init$:(Lscala/Product;)V
  #193 = InterfaceMethodref #6.#192       // scala/Product.$init$:(Lscala/Product;)V
  #194 = Utf8               Code
  #195 = Utf8               MethodParameters
  #196 = Utf8               LineNumberTable
  #197 = Utf8               LocalVariableTable
  #198 = Utf8               Signature
  #199 = Utf8               StackMapTable
  #200 = Utf8               SourceFile
  #201 = Utf8               RuntimeVisibleAnnotations
  #202 = Utf8               ScalaInlineInfo
  #203 = Utf8               ScalaSig
{
  private final java.lang.String type;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String classifier;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static coursier.core.Attributes apply(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Attributes;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #23                 // Field coursier/core/Attributes$.MODULE$:Lcoursier/core/Attributes$;
         3: aload_0
         4: aload_1
         5: invokevirtual #25                 // Method coursier/core/Attributes$.apply:(Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Attributes;
         8: areturn
    MethodParameters:
      Name                           Flags
      type                           final
      classifier                     final

  public static coursier.core.Attributes empty();
    descriptor: ()Lcoursier/core/Attributes;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #23                 // Field coursier/core/Attributes$.MODULE$:Lcoursier/core/Attributes$;
         3: invokevirtual #29                 // Method coursier/core/Attributes$.empty:()Lcoursier/core/Attributes;
         6: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #36                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Attributes;
    Signature: #32                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #43                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Attributes;
    Signature: #40                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.lang.String type();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #46                 // Field type:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Attributes;

  public java.lang.String classifier();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #48                 // Field classifier:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Attributes;

  public java.lang.String packaging();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field coursier/core/Type$.MODULE$:Lcoursier/core/Type$;
         3: aload_0
         4: invokevirtual #56                 // Method type:()Ljava/lang/String;
         7: invokevirtual #60                 // Method coursier/core/Type$.isEmpty$extension:(Ljava/lang/String;)Z
        10: ifeq          22
        13: getstatic     #54                 // Field coursier/core/Type$.MODULE$:Lcoursier/core/Type$;
        16: invokevirtual #63                 // Method coursier/core/Type$.jar:()Ljava/lang/String;
        19: goto          26
        22: aload_0
        23: invokevirtual #56                 // Method type:()Ljava/lang/String;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 22 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 206: 0
        line 207: 13
        line 209: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lcoursier/core/Attributes;

  public java.lang.String packagingAndClassifier();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #70                 // Method isEmpty:()Z
         4: ifeq          12
         7: ldc           #72                 // String
         9: goto          63
        12: getstatic     #77                 // Field coursier/core/Classifier$.MODULE$:Lcoursier/core/Classifier$;
        15: aload_0
        16: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        19: invokevirtual #80                 // Method coursier/core/Classifier$.isEmpty$extension:(Ljava/lang/String;)Z
        22: ifeq          32
        25: aload_0
        26: invokevirtual #82                 // Method packaging:()Ljava/lang/String;
        29: goto          63
        32: new           #84                 // class java/lang/StringBuilder
        35: dup
        36: ldc           #85                 // int 1
        38: invokespecial #89                 // Method java/lang/StringBuilder."<init>":(I)V
        41: aload_0
        42: invokevirtual #82                 // Method packaging:()Ljava/lang/String;
        45: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        48: ldc           #95                 // String :
        50: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        53: aload_0
        54: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        57: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        60: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        63: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 12 /* same */
        frame_type = 19 /* same */
        frame_type = 94 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 212: 0
        line 213: 7
        line 214: 12
        line 215: 25
        line 217: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      64     0  this   Lcoursier/core/Attributes;

  public coursier.core.Publication publication(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: getstatic     #107                // Field coursier/core/Publication$.MODULE$:Lcoursier/core/Publication$;
         3: aload_1
         4: aload_0
         5: invokevirtual #56                 // Method type:()Ljava/lang/String;
         8: aload_2
         9: aload_0
        10: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        13: invokevirtual #110                // Method coursier/core/Publication$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
        16: areturn
      LineNumberTable:
        line 220: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/core/Attributes;
            0      17     1  name   Ljava/lang/String;
            0      17     2   ext   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      name                           final
      ext                            final

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field coursier/core/Type$.MODULE$:Lcoursier/core/Type$;
         3: aload_0
         4: invokevirtual #56                 // Method type:()Ljava/lang/String;
         7: invokevirtual #60                 // Method coursier/core/Type$.isEmpty$extension:(Ljava/lang/String;)Z
        10: ifeq          30
        13: getstatic     #77                 // Field coursier/core/Classifier$.MODULE$:Lcoursier/core/Classifier$;
        16: aload_0
        17: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        20: invokevirtual #80                 // Method coursier/core/Classifier$.isEmpty$extension:(Ljava/lang/String;)Z
        23: ifeq          30
        26: iconst_1
        27: goto          31
        30: iconst_0
        31: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 30 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lcoursier/core/Attributes;

  public coursier.core.Attributes withType(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/core/Attributes;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #2                  // class coursier/core/Attributes
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
         9: invokespecial #115                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
        12: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/core/Attributes;
            0      13     1  type   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      type                           final

  public coursier.core.Attributes withClassifier(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/core/Attributes;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #2                  // class coursier/core/Attributes
         3: dup
         4: aload_0
         5: invokevirtual #56                 // Method type:()Ljava/lang/String;
         8: aload_1
         9: invokespecial #115                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
        12: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/core/Attributes;
            0      13     1 classifier   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      classifier                     final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: new           #84                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #118                // String Attributes(
         6: invokespecial #121                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: aload_1
        11: new           #123                // class coursier/core/Type
        14: dup
        15: aload_0
        16: invokevirtual #56                 // Method type:()Ljava/lang/String;
        19: invokespecial #124                // Method coursier/core/Type."<init>":(Ljava/lang/String;)V
        22: invokestatic  #128                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        25: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: ldc           #130                // String ,
        32: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: new           #132                // class coursier/core/Classifier
        40: dup
        41: aload_0
        42: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        45: invokespecial #133                // Method coursier/core/Classifier."<init>":(Ljava/lang/String;)V
        48: invokestatic  #128                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        51: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        54: pop
        55: aload_1
        56: ldc           #135                // String )
        58: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        61: pop
        62: aload_1
        63: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        66: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      56     1     b   Ljava/lang/StringBuilder;
            0      67     0  this   Lcoursier/core/Attributes;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/core/Attributes
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/core/Attributes;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     89
         5: aload_0
         6: aload_1
         7: invokevirtual #144                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          93
        13: aload_1
        14: checkcast     #2                  // class coursier/core/Attributes
        17: astore_2
        18: iconst_1
        19: ifeq          85
        22: aload_0
        23: invokevirtual #56                 // Method type:()Ljava/lang/String;
        26: aload_2
        27: invokevirtual #56                 // Method type:()Ljava/lang/String;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          85
        43: aload_3
        44: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          85
        50: aload_0
        51: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        54: aload_2
        55: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          85
        73: aload         4
        75: invokevirtual #146                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          85
        81: iconst_1
        82: goto          86
        85: iconst_0
        86: ifeq          93
        89: iconst_1
        90: goto          94
        93: iconst_0
        94: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/core/Attributes, class java/lang/Object, class coursier/core/Attributes, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/core/Attributes, class java/lang/Object, class coursier/core/Attributes, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      68     2 other   Lcoursier/core/Attributes;
            0      95     0  this   Lcoursier/core/Attributes;
            0      95     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: bipush        17
         2: ldc           #151                // String Attributes
         4: invokestatic  #157                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         7: iadd
         8: istore_1
         9: bipush        37
        11: iload_1
        12: imul
        13: new           #123                // class coursier/core/Type
        16: dup
        17: aload_0
        18: invokevirtual #56                 // Method type:()Ljava/lang/String;
        21: invokespecial #124                // Method coursier/core/Type."<init>":(Ljava/lang/String;)V
        24: invokestatic  #157                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        27: iadd
        28: istore_1
        29: bipush        37
        31: iload_1
        32: imul
        33: new           #132                // class coursier/core/Classifier
        36: dup
        37: aload_0
        38: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        41: invokespecial #133                // Method coursier/core/Classifier."<init>":(Ljava/lang/String;)V
        44: invokestatic  #157                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        47: iadd
        48: istore_1
        49: bipush        37
        51: iload_1
        52: imul
        53: ireturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      44     1  code   I
            0      54     0  this   Lcoursier/core/Attributes;

  private scala.Tuple2<coursier.core.Type, coursier.core.Classifier> tuple();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=1, args_size=1
         0: new           #164                // class scala/Tuple2
         3: dup
         4: new           #123                // class coursier/core/Type
         7: dup
         8: aload_0
         9: invokevirtual #56                 // Method type:()Ljava/lang/String;
        12: invokespecial #124                // Method coursier/core/Type."<init>":(Ljava/lang/String;)V
        15: new           #132                // class coursier/core/Classifier
        18: dup
        19: aload_0
        20: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        23: invokespecial #133                // Method coursier/core/Classifier."<init>":(Ljava/lang/String;)V
        26: invokespecial #167                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        29: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lcoursier/core/Attributes;
    Signature: #162                         // ()Lscala/Tuple2<Lcoursier/core/Type;Lcoursier/core/Classifier;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #151                // String Attributes
         2: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/core/Attributes;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/Attributes;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 38
                 default: 52
            }
        24: new           #123                // class coursier/core/Type
        27: dup
        28: aload_0
        29: invokevirtual #56                 // Method type:()Ljava/lang/String;
        32: invokespecial #124                // Method coursier/core/Type."<init>":(Ljava/lang/String;)V
        35: goto          67
        38: new           #132                // class coursier/core/Classifier
        41: dup
        42: aload_0
        43: invokevirtual #79                 // Method classifier:()Ljava/lang/String;
        46: invokespecial #133                // Method coursier/core/Classifier."<init>":(Ljava/lang/String;)V
        49: goto          67
        52: new           #174                // class java/lang/IndexOutOfBoundsException
        55: dup
        56: iload_2
        57: invokestatic  #180                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        60: invokevirtual #181                // Method java/lang/Object.toString:()Ljava/lang/String;
        63: invokespecial #182                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        66: athrow
        67: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 13 /* same */
        frame_type = 13 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lcoursier/core/Attributes;
            0      68     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 29
                 default: 34
            }
        24: ldc           #185                // String type
        26: goto          49
        29: ldc           #186                // String classifier
        31: goto          49
        34: new           #174                // class java/lang/IndexOutOfBoundsException
        37: dup
        38: iload_2
        39: invokestatic  #180                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        42: invokevirtual #181                // Method java/lang/Object.toString:()Ljava/lang/String;
        45: invokespecial #182                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        48: athrow
        49: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lcoursier/core/Attributes;
            0      50     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public coursier.core.Attributes(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #46                 // Field type:Ljava/lang/String;
         5: aload_0
         6: aload_2
         7: putfield      #48                 // Field classifier:Ljava/lang/String;
        10: aload_0
        11: invokespecial #189                // Method java/lang/Object."<init>":()V
        14: aload_0
        15: invokestatic  #193                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        18: return
      LineNumberTable:
        line 201: 0
        line 226: 10
        line 201: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/core/Attributes;
            0      19     1  type   Ljava/lang/String;
            0      19     2 classifier   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      type                           final
      classifier                     final
}
SourceFile: "Definitions.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005Mc\u0001\u0002\u000f\u001e\u0005\tB\u0001\u0002\u000f\u0001\u0003\u0006\u0004%\t!\u000f\u0005\t}\u0001\u0011\t\u0011)A\u0005u!Aq\b\u0001BC\u0002\u0013\u0005\u0001\t\u0003\u0005E\u0001\t\u0005\t\u0015!\u0003B\u0011\u0015)\u0005\u0001\"\u0001G\u0011\u0015Q\u0005\u0001\"\u0001:\u0011\u0015Y\u0005\u0001\"\u0001M\u0011\u0015)\u0006\u0001\"\u0001W\u0011\u0015\t\u0007\u0001\"\u0001c\u0011\u00151\u0007\u0001\"\u0001h\u0011\u0015I\u0007\u0001\"\u0001k\u0011\u0015a\u0007\u0001\"\u0011n\u0011\u0015)\b\u0001\"\u0011w\u0011\u0015a\b\u0001\"\u0011~\u0011\u0019y\b\u0001\"\u0011\u0002\u0002!9\u0011\u0011\u0002\u0001\u0005\n\u0005-\u0001bBA\n\u0001\u0011\u0005\u0013Q\u0003\u0005\b\u0003/\u0001A\u0011IA\r\u0011\u001d\tY\u0002\u0001C!\u0003;Aq!a\t\u0001\t\u0003\n)cB\u0004\u0002*uA\t!a\u000b\u0007\rqi\u0002\u0012AA\u0017\u0011\u0019)e\u0003\"\u0001\u0002:!I\u00111\b\fC\u0002\u0013\u0005\u0011Q\b\u0005\b\u0003\u007f1\u0002\u0015!\u0003H\u0011\u001d\t\tE\u0006C\u0001\u0003\u0007B\u0011\"!\u0013\u0017\u0003\u0003%I!a\u0013\u0003\u0015\u0005#HO]5ckR,7O\u0003\u0002\u001f?\u0005!1m\u001c:f\u0015\u0005\u0001\u0013\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001M!\u0001aI\u0015-!\t!s%D\u0001&\u0015\u00051\u0013!B:dC2\f\u0017B\u0001\u0015&\u0005\u0019\te.\u001f*fMB\u0011AEK\u0005\u0003W\u0015\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002.k9\u0011af\r\b\u0003_Ij\u0011\u0001\r\u0006\u0003c\u0005\na\u0001\u0010:p_Rt\u0014\"\u0001\u0014\n\u0005Q*\u0013a\u00029bG.\fw-Z\u0005\u0003m]\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001N\u0013\u0002\tQL\b/Z\u000b\u0002uA\u00111\bP\u0007\u0002;%\u0011Q(\b\u0002\u0005)f\u0004X-A\u0003usB,\u0007%\u0001\u0006dY\u0006\u001c8/\u001b4jKJ,\u0012!\u0011\t\u0003w\tK!aQ\u000f\u0003\u0015\rc\u0017m]:jM&,\'/A\u0006dY\u0006\u001c8/\u001b4jKJ\u0004\u0013A\u0002\u001fj]&$h\bF\u0002H\u0011&\u0003\"a\u000f\u0001\t\u000ba*\u0001\u0019\u0001\u001e\t\u000b}*\u0001\u0019A!\u0002\u0013A\f7m[1hS:<\u0017A\u00069bG.\fw-\u001b8h\u0003:$7\t\\1tg&4\u0017.\u001a:\u0016\u00035\u0003\"A\u0014*\u000f\u0005=\u0003\u0006CA\u0018&\u0013\t\tV%\u0001\u0004Qe\u0016$WMZ\u0005\u0003\'R\u0013aa\u0015;sS:<\'BA)&\u0003-\u0001XO\u00197jG\u0006$\u0018n\u001c8\u0015\u0007]SF\f\u0005\u0002<1&\u0011\u0011,\b\u0002\f!V\u0014G.[2bi&|g\u000eC\u0003\\\u0011\u0001\u0007Q*\u0001\u0003oC6,\u0007\"B/\t\u0001\u0004q\u0016aA3yiB\u00111hX\u0005\u0003Av\u0011\u0011\"\u0012=uK:\u001c\u0018n\u001c8\u0002\u000f%\u001cX)\u001c9usV\t1\r\u0005\u0002%I&\u0011Q-\n\u0002\b\u0005>|G.Z1o\u0003!9\u0018\u000e\u001e5UsB,GCA$i\u0011\u0015A$\u00021\u0001;\u000399\u0018\u000e\u001e5DY\u0006\u001c8/\u001b4jKJ$\"aR6\t\u000b}Z\u0001\u0019A!\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012A\u001c\t\u0003_Rl\u0011\u0001\u001d\u0006\u0003cJ\fA\u0001\\1oO*\t1/\u0001\u0003kCZ\f\u0017BA*q\u0003!\u0019\u0017M\\#rk\u0006dGCA2x\u0011\u0015AX\u00021\u0001z\u0003\ry\'M\u001b\t\u0003IiL!a_\u0013\u0003\u0007\u0005s\u00170\u0001\u0004fcV\fGn\u001d\u000b\u0003GzDQ\u0001\u001f\bA\u0002e\f\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u0003\u0003\u0007\u00012\u0001JA\u0003\u0013\r\t9!\n\u0002\u0004\u0013:$\u0018!\u0002;va2,WCAA\u0007!\u0015!\u0013q\u0002\u001eB\u0013\r\t\t\"\n\u0002\u0007)V\u0004H.\u001a\u001a\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\u0005q\u0017\u0001\u00049s_\u0012,8\r^!sSRLXCAA\u0002\u00039\u0001(o\u001c3vGR,E.Z7f]R$2!_A\u0010\u0011\u001d\t\tc\u0005a\u0001\u0003\u0007\t\u0011A\\\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\rF\u0002o\u0003OAq!!\t\u0015\u0001\u0004\t\u0019!\u0001\u0006BiR\u0014\u0018NY;uKN\u0004\"a\u000f\f\u0014\tY\u0019\u0013q\u0006\t\u0005\u0003c\t9$\u0004\u0002\u00024)\u0019\u0011Q\u0007:\u0002\u0005%|\u0017b\u0001\u001c\u00024Q\u0011\u00111F\u0001\u0006K6\u0004H/_\u000b\u0002\u000f\u00061Q-\u001c9us\u0002\nQ!\u00199qYf$RaRA#\u0003\u000fBQ\u0001\u000f\u000eA\u0002iBQa\u0010\u000eA\u0002\u0005\u000bAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!!\u0014\u0011\u0007=\fy%C\u0002\u0002RA\u0014aa\u00142kK\u000e$\b"
    )
  ScalaInlineInfo: length = 0x68 (unknown attribute)
   01 01 00 14 00 56 00 71 01 00 8A 00 8B 01 00 0F
   00 2C 01 00 8E 00 8B 01 00 94 00 95 01 00 43 00
   44 01 00 31 00 2C 01 00 42 00 2C 01 00 A9 00 95
   01 00 AA 00 AB 01 00 B7 00 B8 01 00 27 00 1F 01
   00 1E 00 1F 01 00 A8 00 2C 01 00 63 00 64 01 00
   60 00 2C 01 00 A0 00 A1 01 00 0D 00 2C 01 00 74
   00 70 01 00 6F 00 70 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
