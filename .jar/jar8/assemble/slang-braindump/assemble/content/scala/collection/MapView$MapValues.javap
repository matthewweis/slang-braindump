Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/MapView$MapValues.class
  Last modified May 29, 2022; size 3351 bytes
  SHA-256 checksum 9a762e8ca29d25146c8d0424a6d5516ed2c9ef5c800466065bdfbc254d12890e
  Compiled from "MapView.scala"
public class scala.collection.MapView$MapValues<K extends java.lang.Object, V extends java.lang.Object, W extends java.lang.Object> extends scala.collection.AbstractMapView<K, W>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/MapView$MapValues
  super_class: #5                         // scala/collection/AbstractMapView
  interfaces: 0, fields: 3, methods: 7, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/MapView$MapValues
    #2 = Class              #1            // scala/collection/MapView$MapValues
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;W:Ljava/lang/Object;>Lscala/collection/AbstractMapView<TK;TW;>;
    #4 = Utf8               scala/collection/AbstractMapView
    #5 = Class              #4            // scala/collection/AbstractMapView
    #6 = Utf8               MapView.scala
    #7 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #8 = Class              #7            // java/lang/invoke/MethodHandles$Lookup
    #9 = Utf8               java/lang/invoke/MethodHandles
   #10 = Class              #9            // java/lang/invoke/MethodHandles
   #11 = Utf8               Lookup
   #12 = Utf8               scala/collection/MapView
   #13 = Class              #12           // scala/collection/MapView
   #14 = Utf8               MapValues
   #15 = Utf8               serialVersionUID
   #16 = Utf8               J
   #17 = Long               3l
   #19 = Utf8               underlying
   #20 = Utf8               Lscala/collection/MapOps;
   #21 = Utf8               Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;
   #22 = Utf8               f
   #23 = Utf8               Lscala/Function1;
   #24 = Utf8               Lscala/Function1<TV;TW;>;
   #25 = Utf8               iterator
   #26 = Utf8               ()Lscala/collection/Iterator;
   #27 = Utf8               ()Lscala/collection/Iterator<Lscala/Tuple2<TK;TW;>;>;
   #28 = NameAndType        #19:#20       // underlying:Lscala/collection/MapOps;
   #29 = Fieldref           #2.#28        // scala/collection/MapView$MapValues.underlying:Lscala/collection/MapOps;
   #30 = Utf8               scala/collection/MapOps
   #31 = Class              #30           // scala/collection/MapOps
   #32 = NameAndType        #25:#26       // iterator:()Lscala/collection/Iterator;
   #33 = InterfaceMethodref #31.#32       // scala/collection/MapOps.iterator:()Lscala/collection/Iterator;
   #34 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #35 = MethodType         #34           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #36 = Utf8               $anonfun$iterator$1
   #37 = Utf8               (Lscala/collection/MapView$MapValues;Lscala/Tuple2;)Lscala/Tuple2;
   #38 = NameAndType        #36:#37       // $anonfun$iterator$1:(Lscala/collection/MapView$MapValues;Lscala/Tuple2;)Lscala/Tuple2;
   #39 = Methodref          #2.#38        // scala/collection/MapView$MapValues.$anonfun$iterator$1:(Lscala/collection/MapView$MapValues;Lscala/Tuple2;)Lscala/Tuple2;
   #40 = MethodHandle       6:#39         // REF_invokeStatic scala/collection/MapView$MapValues.$anonfun$iterator$1:(Lscala/collection/MapView$MapValues;Lscala/Tuple2;)Lscala/Tuple2;
   #41 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
   #42 = MethodType         #41           //  (Lscala/Tuple2;)Lscala/Tuple2;
   #43 = Integer            5
   #44 = Integer            1
   #45 = Utf8               java/lang/invoke/LambdaMetafactory
   #46 = Class              #45           // java/lang/invoke/LambdaMetafactory
   #47 = Utf8               altMetafactory
   #48 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #49 = NameAndType        #47:#48       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #50 = Methodref          #46.#49       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #51 = MethodHandle       6:#50         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #52 = Utf8               apply
   #53 = Utf8               (Lscala/collection/MapView$MapValues;)Lscala/Function1;
   #54 = NameAndType        #52:#53       // apply:(Lscala/collection/MapView$MapValues;)Lscala/Function1;
   #55 = InvokeDynamic      #0:#54        // #0:apply:(Lscala/collection/MapView$MapValues;)Lscala/Function1;
   #56 = Utf8               scala/collection/Iterator
   #57 = Class              #56           // scala/collection/Iterator
   #58 = Utf8               map
   #59 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
   #60 = NameAndType        #58:#59       // map:(Lscala/Function1;)Lscala/collection/Iterator;
   #61 = InterfaceMethodref #57.#60       // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
   #62 = Utf8               this
   #63 = Utf8               Lscala/collection/MapView$MapValues;
   #64 = Utf8               get
   #65 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #66 = Utf8               (TK;)Lscala/Option<TW;>;
   #67 = Utf8               key
   #68 = NameAndType        #64:#65       // get:(Ljava/lang/Object;)Lscala/Option;
   #69 = InterfaceMethodref #31.#68       // scala/collection/MapOps.get:(Ljava/lang/Object;)Lscala/Option;
   #70 = NameAndType        #22:#23       // f:Lscala/Function1;
   #71 = Fieldref           #2.#70        // scala/collection/MapView$MapValues.f:Lscala/Function1;
   #72 = Utf8               scala/Option
   #73 = Class              #72           // scala/Option
   #74 = Utf8               isEmpty
   #75 = Utf8               ()Z
   #76 = NameAndType        #74:#75       // isEmpty:()Z
   #77 = Methodref          #73.#76       // scala/Option.isEmpty:()Z
   #78 = Utf8               scala/None$
   #79 = Class              #78           // scala/None$
   #80 = Utf8               MODULE$
   #81 = Utf8               Lscala/None$;
   #82 = NameAndType        #80:#81       // MODULE$:Lscala/None$;
   #83 = Fieldref           #79.#82       // scala/None$.MODULE$:Lscala/None$;
   #84 = Utf8               scala/Some
   #85 = Class              #84           // scala/Some
   #86 = Utf8               ()Ljava/lang/Object;
   #87 = NameAndType        #64:#86       // get:()Ljava/lang/Object;
   #88 = Methodref          #73.#87       // scala/Option.get:()Ljava/lang/Object;
   #89 = Utf8               scala/Function1
   #90 = Class              #89           // scala/Function1
   #91 = NameAndType        #52:#34       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #92 = InterfaceMethodref #90.#91       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #93 = Utf8               <init>
   #94 = Utf8               (Ljava/lang/Object;)V
   #95 = NameAndType        #93:#94       // "<init>":(Ljava/lang/Object;)V
   #96 = Methodref          #85.#95       // scala/Some."<init>":(Ljava/lang/Object;)V
   #97 = Utf8               Ljava/lang/Object;
   #98 = Utf8               map_this
   #99 = Utf8               Lscala/Option;
  #100 = Utf8               map_f
  #101 = Utf8               java/lang/Object
  #102 = Class              #101          // java/lang/Object
  #103 = Utf8               knownSize
  #104 = Utf8               ()I
  #105 = NameAndType        #103:#104     // knownSize:()I
  #106 = InterfaceMethodref #31.#105      // scala/collection/MapOps.knownSize:()I
  #107 = InterfaceMethodref #31.#76       // scala/collection/MapOps.isEmpty:()Z
  #108 = Utf8               $this
  #109 = Utf8               kv
  #110 = Utf8               scala/Tuple2
  #111 = Class              #110          // scala/Tuple2
  #112 = Utf8               _1
  #113 = NameAndType        #112:#86      // _1:()Ljava/lang/Object;
  #114 = Methodref          #111.#113     // scala/Tuple2._1:()Ljava/lang/Object;
  #115 = Utf8               _2
  #116 = NameAndType        #115:#86      // _2:()Ljava/lang/Object;
  #117 = Methodref          #111.#116     // scala/Tuple2._2:()Ljava/lang/Object;
  #118 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #119 = NameAndType        #93:#118      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #120 = Methodref          #111.#119     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #121 = Utf8               Lscala/Tuple2;
  #122 = Utf8               (Lscala/collection/MapOps;Lscala/Function1;)V
  #123 = Utf8               (Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;Lscala/Function1<TV;TW;>;)V
  #124 = Utf8               ()V
  #125 = NameAndType        #93:#124      // "<init>":()V
  #126 = Methodref          #5.#125       // scala/collection/AbstractMapView."<init>":()V
  #127 = Utf8               $deserializeLambda$
  #128 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #129 = Utf8               scala/runtime/LambdaDeserialize
  #130 = Class              #129          // scala/runtime/LambdaDeserialize
  #131 = Utf8               bootstrap
  #132 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #133 = NameAndType        #131:#132     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #134 = Methodref          #130.#133     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #135 = MethodHandle       6:#134        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #136 = Utf8               lambdaDeserialize
  #137 = NameAndType        #136:#128     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #138 = InvokeDynamic      #1:#137       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #139 = Utf8               ConstantValue
  #140 = Utf8               Signature
  #141 = Utf8               Code
  #142 = Utf8               LineNumberTable
  #143 = Utf8               LocalVariableTable
  #144 = Utf8               StackMapTable
  #145 = Utf8               MethodParameters
  #146 = Utf8               InnerClasses
  #147 = Utf8               SourceFile
  #148 = Utf8               BootstrapMethods
  #149 = Utf8               ScalaInlineInfo
  #150 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 3l

  private final scala.collection.MapOps<K, V, ?, java.lang.Object> underlying;
    descriptor: Lscala/collection/MapOps;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #21                          // Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;

  private final scala.Function1<V, W> f;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #24                          // Lscala/Function1<TV;TW;>;

  public scala.collection.Iterator<scala.Tuple2<K, W>> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field underlying:Lscala/collection/MapOps;
         4: invokeinterface #33,  1           // InterfaceMethod scala/collection/MapOps.iterator:()Lscala/collection/Iterator;
         9: aload_0
        10: invokedynamic #55,  0             // InvokeDynamic #0:apply:(Lscala/collection/MapView$MapValues;)Lscala/Function1;
        15: invokeinterface #61,  2           // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        20: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/MapView$MapValues;
    Signature: #27                          // ()Lscala/collection/Iterator<Lscala/Tuple2<TK;TW;>;>;

  public scala.Option<W> get(K);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: getfield      #29                 // Field underlying:Lscala/collection/MapOps;
         4: aload_1
         5: invokeinterface #69,  2           // InterfaceMethod scala/collection/MapOps.get:(Ljava/lang/Object;)Lscala/Option;
        10: aload_0
        11: getfield      #71                 // Field f:Lscala/Function1;
        14: astore_3
        15: dup
        16: ifnonnull     21
        19: aconst_null
        20: athrow
        21: astore_2
        22: aload_2
        23: invokevirtual #77                 // Method scala/Option.isEmpty:()Z
        26: ifeq          33
        29: getstatic     #83                 // Field scala/None$.MODULE$:Lscala/None$;
        32: areturn
        33: new           #85                 // class scala/Some
        36: dup
        37: aload_3
        38: aload_2
        39: invokevirtual #88                 // Method scala/Option.get:()Ljava/lang/Object;
        42: invokeinterface #92,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        47: invokespecial #96                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        50: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class scala/collection/MapView$MapValues, class java/lang/Object, top, class scala/Function1 ]
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/MapView$MapValues, class java/lang/Object, class scala/Option, class scala/Function1 ]
          stack = []
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lscala/collection/MapView$MapValues;
            0      51     1   key   Ljava/lang/Object;
           22      28     2 map_this   Lscala/Option;
           22      28     3 map_f   Lscala/Function1;
    Signature: #66                          // (TK;)Lscala/Option<TW;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public int knownSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field underlying:Lscala/collection/MapOps;
         4: invokeinterface #106,  1          // InterfaceMethod scala/collection/MapOps.knownSize:()I
         9: ireturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/MapView$MapValues;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field underlying:Lscala/collection/MapOps;
         4: invokeinterface #107,  1          // InterfaceMethod scala/collection/MapOps.isEmpty:()Z
         9: ireturn
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/MapView$MapValues;

  public static final scala.Tuple2 $anonfun$iterator$1(scala.collection.MapView$MapValues, scala.Tuple2);
    descriptor: (Lscala/collection/MapView$MapValues;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #111                // class scala/Tuple2
         3: dup
         4: aload_1
         5: invokevirtual #114                // Method scala/Tuple2._1:()Ljava/lang/Object;
         8: aload_0
         9: getfield      #71                 // Field f:Lscala/Function1;
        12: aload_1
        13: invokevirtual #117                // Method scala/Tuple2._2:()Ljava/lang/Object;
        16: invokeinterface #92,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        21: invokespecial #120                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        24: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 $this   Lscala/collection/MapView$MapValues;
            0      25     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      kv                             final

  public scala.collection.MapView$MapValues(scala.collection.MapOps<K, V, ?, java.lang.Object>, scala.Function1<V, W>);
    descriptor: (Lscala/collection/MapOps;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #29                 // Field underlying:Lscala/collection/MapOps;
         5: aload_0
         6: aload_2
         7: putfield      #71                 // Field f:Lscala/Function1;
        10: aload_0
        11: invokespecial #126                // Method scala/collection/AbstractMapView."<init>":()V
        14: return
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/collection/MapView$MapValues;
            0      15     1 underlying   Lscala/collection/MapOps;
            0      15     2     f   Lscala/Function1;
    Signature: #123                         // (Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;Lscala/Function1<TV;TW;>;)V
    MethodParameters:
      Name                           Flags
      underlying                     final
      f                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #138,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #11= #8 of #10;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #14= #2 of #13;           // MapValues=class scala/collection/MapView$MapValues of class scala/collection/MapView
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;W:Ljava/lang/Object;>Lscala/collection/AbstractMapView<TK;TW;>;
SourceFile: "MapView.scala"
BootstrapMethods:
  0: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #35 (Ljava/lang/Object;)Ljava/lang/Object;
      #40 REF_invokeStatic scala/collection/MapView$MapValues.$anonfun$iterator$1:(Lscala/collection/MapView$MapValues;Lscala/Tuple2;)Lscala/Tuple2;
      #42 (Lscala/Tuple2;)Lscala/Tuple2;
      #43 5
      #44 1
      #42 (Lscala/Tuple2;)Lscala/Tuple2;
  1: #135 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #40 REF_invokeStatic scala/collection/MapView$MapValues.$anonfun$iterator$1:(Lscala/collection/MapView$MapValues;Lscala/Tuple2;)Lscala/Tuple2;
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 00 00 06 00 24 00 25 01 00 5D 00 7A 00 00 40
   00 41 00 00 4A 00 4B 00 00 19 00 1A 00 00 67 00
   68 00
  Scala: length = 0x0 (unknown attribute)

