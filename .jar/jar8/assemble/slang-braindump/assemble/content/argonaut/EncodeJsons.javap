Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/EncodeJsons.class
  Last modified May 29, 2022; size 26337 bytes
  SHA-256 checksum 1480372551cba74157a2dcfc93e6f352f0d71eb33696bc06ad7cef30f33a15ee
  Compiled from "EncodeJson.scala"
public interface argonaut.EncodeJsons extends argonaut.GeneratedEncodeJsons
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // argonaut/EncodeJsons
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 109, attributes: 6
Constant pool:
    #1 = Utf8               argonaut/EncodeJsons
    #2 = Class              #1            // argonaut/EncodeJsons
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               argonaut/GeneratedEncodeJsons
    #6 = Class              #5            // argonaut/GeneratedEncodeJsons
    #7 = Utf8               EncodeJson.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\t-da\u0002\u0011\"!\u0003\r\t\u0001\n\u0005\u0006_\u0001!\t\u0001\r\u0005\bi\u0001\u0011\r\u0011b\u00016\u0011\u001da\u0004A1A\u0005\u0004uBqA\u0011\u0001C\u0002\u0013\r1\tC\u0003F\u0001\u0011\ra\tC\u0003d\u0001\u0011\rA\rC\u0003p\u0001\u0011\r\u0001\u000fC\u0004{\u0001\t\u0007I1A>\t\u0013\u0005-\u0001A1A\u0005\u0004\u00055\u0001\"CA\u0011\u0001\t\u0007I1AA\u0012\u0011%\ti\u0003\u0001b\u0001\n\u0007\ty\u0003C\u0005\u0002:\u0001\u0011\r\u0011b\u0001\u0002<!I\u0011Q\t\u0001C\u0002\u0013\r\u0011q\t\u0005\n\u0003#\u0002!\u0019!C\u0002\u0003\'B\u0011\"!\u0018\u0001\u0005\u0004%\u0019!a\u0018\t\u0013\u0005%\u0004A1A\u0005\u0004\u0005-\u0004\"CA;\u0001\t\u0007I1AA<\u0011%\t\t\t\u0001b\u0001\n\u0007\t\u0019\tC\u0005\u0002\u000e\u0002\u0011\r\u0011b\u0001\u0002\u0010\"I\u0011\u0011\u0014\u0001C\u0002\u0013\r\u00111\u0014\u0005\n\u0003S\u0003!\u0019!C\u0002\u0003WC\u0011\"a-\u0001\u0005\u0004%\u0019!!.\t\u0013\u0005}\u0006A1A\u0005\u0004\u0005\u0005\u0007\"CAe\u0001\t\u0007I1AAf\u0011%\t\u0019\u000e\u0001b\u0001\n\u0007\t)\u000eC\u0005\u0002^\u0002\u0011\r\u0011b\u0001\u0002`\"I\u0011q\u001d\u0001C\u0002\u0013\r\u0011\u0011\u001e\u0005\b\u0003g\u0004A1AA{\u0011\u001d\u0011I\u0001\u0001C\u0002\u0005\u0017AqA!\f\u0001\t\u0007\u0011y\u0003C\u0004\u0003V\u0001!\u0019Aa\u0016\u0003\u0017\u0015s7m\u001c3f\u0015N|gn\u001d\u0006\u0002E\u0005A\u0011M]4p]\u0006,Ho\u0001\u0001\u0014\u0007\u0001)3\u0006\u0005\u0002\'S5\tqEC\u0001)\u0003\u0015\u00198-\u00197b\u0013\tQsE\u0001\u0004B]f\u0014VM\u001a\t\u0003Y5j\u0011!I\u0005\u0003]\u0005\u0012AcR3oKJ\fG/\u001a3F]\u000e|G-\u001a&t_:\u001c\u0018A\u0002\u0013j]&$H\u0005F\u00012!\t1#\'\u0003\u00024O\t!QK\\5u\u00039Q5o\u001c8F]\u000e|G-\u001a&t_:,\u0012A\u000e\t\u0004Y]J\u0014B\u0001\u001d\"\u0005))enY8eK*\u001bxN\u001c\t\u0003YiJ!aO\u0011\u0003\t)\u001bxN\\\u0001\u0012\u0011\u000e+(o]8s\u000b:\u001cw\u000eZ3Kg>tW#\u0001 \u0011\u00071:t\b\u0005\u0002-\u0001&\u0011\u0011)\t\u0002\b\u0011\u000e+(o]8s\u00039)f.\u001b;F]\u000e|G-\u001a&t_:,\u0012\u0001\u0012\t\u0004Y]\n\u0014A\u0004\'jgR,enY8eK*\u001bxN\\\u000b\u0003\u000f^#\"\u0001\u00131\u0011\u00071:\u0014\nE\u0002K%Vs!a\u0013)\u000f\u00051{U\"A\'\u000b\u00059\u001b\u0013A\u0002\u001fs_>$h(C\u0001)\u0013\t\tv%A\u0004qC\u000e\\\u0017mZ3\n\u0005M#&\u0001\u0002\'jgRT!!U\u0014\u0011\u0005Y;F\u0002\u0001\u0003\u00061\u0016\u0011\r!\u0017\u0002\u0002\u0003F\u0011!,\u0018\t\u0003MmK!\u0001X\u0014\u0003\u000f9{G\u000f[5oOB\u0011aEX\u0005\u0003?\u001e\u00121!\u00118z\u0011\u0015\tW\u0001q\u0001c\u0003\u0005)\u0007c\u0001\u00178+\u0006\u0001b+Z2u_J,enY8eK*\u001bxN\\\u000b\u0003K.$\"A\u001a7\u0011\u00071:t\rE\u0002KQ*L!!\u001b+\u0003\rY+7\r^8s!\t16\u000eB\u0003Y\r\t\u0007\u0011\fC\u0003b\r\u0001\u000fQ\u000eE\u0002-o9\u00042A\u0013*k\u0003A\u0019FO]3b[\u0016s7m\u001c3f\u0015N|g.\u0006\u0002roR\u0011!\u000f\u001f\t\u0004Y]\u001a\bc\u0001&um&\u0011Q\u000f\u0016\u0002\u0007\'R\u0014X-Y7\u0011\u0005Y;H!\u0002-\b\u0005\u0004I\u0006\"B1\b\u0001\bI\bc\u0001\u00178m\u0006\u00012\u000b\u001e:j]\u001e,enY8eK*\u001bxN\\\u000b\u0002yB\u0019AfN?\u0011\u0007y\f)AD\u0002\u0000\u0003\u0003\u0001\"\u0001T\u0014\n\u0007\u0005\rq%\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u0003\u000f\tIA\u0001\u0004TiJLgn\u001a\u0006\u0004\u0003\u00079\u0013AD+V\u0013\u0012+enY8eK*\u001bxN\\\u000b\u0003\u0003\u001f\u0001B\u0001L\u001c\u0002\u0012A!\u00111CA\u000f\u001b\t\t)B\u0003\u0003\u0002\u0018\u0005e\u0011\u0001B;uS2T!!a\u0007\u0002\t)\fg/Y\u0005\u0005\u0003?\t)B\u0001\u0003V+&#\u0015\u0001\u0005#pk\ndW-\u00128d_\u0012,\'j]8o+\t\t)\u0003\u0005\u0003-o\u0005\u001d\u0002c\u0001\u0014\u0002*%\u0019\u00111F\u0014\u0003\r\u0011{WO\u00197f\u0003=1En\\1u\u000b:\u001cw\u000eZ3Kg>tWCAA\u0019!\u0011as\'a\r\u0011\u0007\u0019\n)$C\u0002\u00028\u001d\u0012QA\u00127pCR\fQ\"\u00138u\u000b:\u001cw\u000eZ3Kg>tWCAA\u001f!\u0011as\'a\u0010\u0011\u0007\u0019\n\t%C\u0002\u0002D\u001d\u00121!\u00138u\u00039auN\\4F]\u000e|G-\u001a&t_:,\"!!\u0013\u0011\t1:\u00141\n\t\u0004M\u00055\u0013bAA(O\t!Aj\u001c8h\u0003=\u0019\u0006n\u001c:u\u000b:\u001cw\u000eZ3Kg>tWCAA+!\u0011as\'a\u0016\u0011\u0007\u0019\nI&C\u0002\u0002\\\u001d\u0012Qa\u00155peR\faBQ=uK\u0016s7m\u001c3f\u0015N|g.\u0006\u0002\u0002bA!AfNA2!\r1\u0013QM\u0005\u0004\u0003O:#\u0001\u0002\"zi\u0016\fACQ5h\t\u0016\u001c\u0017.\\1m\u000b:\u001cw\u000eZ3Kg>tWCAA7!\u0011as\'a\u001c\u0011\u0007)\u000b\t(C\u0002\u0002tQ\u0013!BQ5h\t\u0016\u001c\u0017.\\1m\u0003A\u0011\u0015nZ%oi\u0016s7m\u001c3f\u0015N|g.\u0006\u0002\u0002zA!AfNA>!\rQ\u0015QP\u0005\u0004\u0003\u007f\"&A\u0002\"jO&sG/A\tC_>dW-\u00198F]\u000e|G-\u001a&t_:,\"!!\"\u0011\t1:\u0014q\u0011\t\u0004M\u0005%\u0015bAAFO\t9!i\\8mK\u0006t\u0017AD\"iCJ,enY8eK*\u001bxN\\\u000b\u0003\u0003#\u0003B\u0001L\u001c\u0002\u0014B\u0019a%!&\n\u0007\u0005]uE\u0001\u0003DQ\u0006\u0014\u0018!\u0005&E_V\u0014G.Z#oG>$WMS:p]V\u0011\u0011Q\u0014\t\u0005Y]\ny\n\u0005\u0003\u0002\"\u0006\u001dVBAAR\u0015\u0011\t)+!\u0007\u0002\t1\fgnZ\u0005\u0005\u0003W\t\u0019+\u0001\tK\r2|\u0017\r^#oG>$WMS:p]V\u0011\u0011Q\u0016\t\u0005Y]\ny\u000b\u0005\u0003\u0002\"\u0006E\u0016\u0002BA\u001c\u0003G\u000b!CS%oi\u0016<WM]#oG>$WMS:p]V\u0011\u0011q\u0017\t\u0005Y]\nI\f\u0005\u0003\u0002\"\u0006m\u0016\u0002BA_\u0003G\u0013q!\u00138uK\u001e,\'/A\bK\u0019>tw-\u00128d_\u0012,\'j]8o+\t\t\u0019\r\u0005\u0003-o\u0005\u0015\u0007\u0003BAQ\u0003\u000fLA!a\u0014\u0002$\u0006\u0001\"j\u00155peR,enY8eK*\u001bxN\\\u000b\u0003\u0003\u001b\u0004B\u0001L\u001c\u0002PB!\u0011\u0011UAi\u0013\u0011\tY&a)\u0002\u001f)\u0013\u0015\u0010^3F]\u000e|G-\u001a&t_:,\"!a6\u0011\t1:\u0014\u0011\u001c\t\u0005\u0003C\u000bY.\u0003\u0003\u0002h\u0005\r\u0016A\u0005&C_>dW-\u00198F]\u000e|G-\u001a&t_:,\"!!9\u0011\t1:\u00141\u001d\t\u0005\u0003C\u000b)/\u0003\u0003\u0002\f\u0006\r\u0016\u0001\u0006&DQ\u0006\u0014\u0018m\u0019;fe\u0016s7m\u001c3f\u0015N|g.\u0006\u0002\u0002lB!AfNAw!\u0011\t\t+a<\n\t\u0005E\u00181\u0015\u0002\n\u0007\"\f\'/Y2uKJ\f\u0001c\u00149uS>tWI\\2pI\u0016T5o\u001c8\u0016\t\u0005](1\u0001\u000b\u0005\u0003s\u0014)\u0001\u0005\u0003-o\u0005m\b#\u0002\u0014\u0002~\n\u0005\u0011bAA\u0000O\t1q\n\u001d;j_:\u00042A\u0016B\u0002\t\u0015AFD1\u0001Z\u0011\u0019\tG\u0004q\u0001\u0003\bA!Af\u000eB\u0001\u0003A)\u0015\u000e\u001e5fe\u0016s7m\u001c3f\u0015N|g.\u0006\u0004\u0003\u000e\te!Q\u0004\u000b\u0007\u0005\u001f\u0011\tCa\n\u0011\t1:$\u0011\u0003\t\b\u0015\nM!q\u0003B\u000e\u0013\r\u0011)\u0002\u0016\u0002\u0007\u000b&$\b.\u001a:\u0011\u0007Y\u0013I\u0002B\u0003Y;\t\u0007\u0011\fE\u0002W\u0005;!aAa\b\u001e\u0005\u0004I&!\u0001\"\t\u000f\t\rR\u0004q\u0001\u0003&\u0005\u0011Q-\u0019\t\u0005Y]\u00129\u0002C\u0004\u0003*u\u0001\u001dAa\u000b\u0002\u0005\u0015\u0014\u0007\u0003\u0002\u00178\u00057\tQ\"T1q\u000b:\u001cw\u000eZ3Kg>tWC\u0002B\u0019\u0005{\u0011\u0019\u0005\u0006\u0004\u00034\t\u001d#\u0011\u000b\t\u0005Y]\u0012)\u0004E\u0004\u007f\u0005o\u0011YD!\u0011\n\t\te\u0012\u0011\u0002\u0002\u0004\u001b\u0006\u0004\bc\u0001,\u0003>\u00111!q\b\u0010C\u0002e\u0013\u0011a\u0013\t\u0004-\n\rCA\u0002B#=\t\u0007\u0011LA\u0001W\u0011\u001d\u0011IE\ba\u0002\u0005\u0017\n\u0011a\u0013\t\u0006Y\t5#1H\u0005\u0004\u0005\u001f\n#!D#oG>$WMS:p].+\u0017\u0010\u0003\u0004b=\u0001\u000f!1\u000b\t\u0005Y]\u0012\t%A\u0007TKR,enY8eK*\u001bxN\\\u000b\u0005\u00053\u0012)\u0007\u0006\u0003\u0003\\\t\u001d\u0004\u0003\u0002\u00178\u0005;\u0002RA B0\u0005GJAA!\u0019\u0002\n\t\u00191+\u001a;\u0011\u0007Y\u0013)\u0007B\u0003Y?\t\u0007\u0011\f\u0003\u0004b?\u0001\u000f!\u0011\u000e\t\u0005Y]\u0012\u0019\u0007
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               argonaut$EncodeJsons$_setter_$JsonEncodeJson_$eq
   #17 = Utf8               (Largonaut/EncodeJson;)V
   #18 = Utf8               (Largonaut/EncodeJson<Largonaut/Json;>;)V
   #19 = Utf8               x$1
   #20 = Utf8               argonaut$EncodeJsons$_setter_$HCursorEncodeJson_$eq
   #21 = Utf8               (Largonaut/EncodeJson<Largonaut/HCursor;>;)V
   #22 = Utf8               argonaut$EncodeJsons$_setter_$UnitEncodeJson_$eq
   #23 = Utf8               (Largonaut/EncodeJson<Lscala/runtime/BoxedUnit;>;)V
   #24 = Utf8               argonaut$EncodeJsons$_setter_$StringEncodeJson_$eq
   #25 = Utf8               (Largonaut/EncodeJson<Ljava/lang/String;>;)V
   #26 = Utf8               argonaut$EncodeJsons$_setter_$UUIDEncodeJson_$eq
   #27 = Utf8               (Largonaut/EncodeJson<Ljava/util/UUID;>;)V
   #28 = Utf8               argonaut$EncodeJsons$_setter_$DoubleEncodeJson_$eq
   #29 = Utf8               (Largonaut/EncodeJson<Ljava/lang/Object;>;)V
   #30 = Utf8               argonaut$EncodeJsons$_setter_$FloatEncodeJson_$eq
   #31 = Utf8               argonaut$EncodeJsons$_setter_$IntEncodeJson_$eq
   #32 = Utf8               argonaut$EncodeJsons$_setter_$LongEncodeJson_$eq
   #33 = Utf8               argonaut$EncodeJsons$_setter_$ShortEncodeJson_$eq
   #34 = Utf8               argonaut$EncodeJsons$_setter_$ByteEncodeJson_$eq
   #35 = Utf8               argonaut$EncodeJsons$_setter_$BigDecimalEncodeJson_$eq
   #36 = Utf8               (Largonaut/EncodeJson<Lscala/math/BigDecimal;>;)V
   #37 = Utf8               argonaut$EncodeJsons$_setter_$BigIntEncodeJson_$eq
   #38 = Utf8               (Largonaut/EncodeJson<Lscala/math/BigInt;>;)V
   #39 = Utf8               argonaut$EncodeJsons$_setter_$BooleanEncodeJson_$eq
   #40 = Utf8               argonaut$EncodeJsons$_setter_$CharEncodeJson_$eq
   #41 = Utf8               argonaut$EncodeJsons$_setter_$JDoubleEncodeJson_$eq
   #42 = Utf8               (Largonaut/EncodeJson<Ljava/lang/Double;>;)V
   #43 = Utf8               argonaut$EncodeJsons$_setter_$JFloatEncodeJson_$eq
   #44 = Utf8               (Largonaut/EncodeJson<Ljava/lang/Float;>;)V
   #45 = Utf8               argonaut$EncodeJsons$_setter_$JIntegerEncodeJson_$eq
   #46 = Utf8               (Largonaut/EncodeJson<Ljava/lang/Integer;>;)V
   #47 = Utf8               argonaut$EncodeJsons$_setter_$JLongEncodeJson_$eq
   #48 = Utf8               (Largonaut/EncodeJson<Ljava/lang/Long;>;)V
   #49 = Utf8               argonaut$EncodeJsons$_setter_$JShortEncodeJson_$eq
   #50 = Utf8               (Largonaut/EncodeJson<Ljava/lang/Short;>;)V
   #51 = Utf8               argonaut$EncodeJsons$_setter_$JByteEncodeJson_$eq
   #52 = Utf8               (Largonaut/EncodeJson<Ljava/lang/Byte;>;)V
   #53 = Utf8               argonaut$EncodeJsons$_setter_$JBooleanEncodeJson_$eq
   #54 = Utf8               (Largonaut/EncodeJson<Ljava/lang/Boolean;>;)V
   #55 = Utf8               argonaut$EncodeJsons$_setter_$JCharacterEncodeJson_$eq
   #56 = Utf8               (Largonaut/EncodeJson<Ljava/lang/Character;>;)V
   #57 = Utf8               JsonEncodeJson
   #58 = Utf8               ()Largonaut/EncodeJson;
   #59 = Utf8               ()Largonaut/EncodeJson<Largonaut/Json;>;
   #60 = Utf8               HCursorEncodeJson
   #61 = Utf8               ()Largonaut/EncodeJson<Largonaut/HCursor;>;
   #62 = Utf8               UnitEncodeJson
   #63 = Utf8               ()Largonaut/EncodeJson<Lscala/runtime/BoxedUnit;>;
   #64 = Utf8               ListEncodeJson$
   #65 = Utf8               (Largonaut/EncodeJsons;Largonaut/EncodeJson;)Largonaut/EncodeJson;
   #66 = Utf8               $this
   #67 = Utf8               e
   #68 = Utf8               ListEncodeJson
   #69 = Utf8               (Largonaut/EncodeJson;)Largonaut/EncodeJson;
   #70 = NameAndType        #68:#69       // ListEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
   #71 = InterfaceMethodref #2.#70        // argonaut/EncodeJsons.ListEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
   #72 = Utf8               Largonaut/EncodeJsons;
   #73 = Utf8               Largonaut/EncodeJson;
   #74 = Utf8               <A:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;)Largonaut/EncodeJson<Lscala/collection/immutable/List<TA;>;>;
   #75 = Utf8               argonaut/EncodeJson$
   #76 = Class              #75           // argonaut/EncodeJson$
   #77 = Utf8               MODULE$
   #78 = Utf8               Largonaut/EncodeJson$;
   #79 = NameAndType        #77:#78       // MODULE$:Largonaut/EncodeJson$;
   #80 = Fieldref           #76.#79       // argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
   #81 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #82 = MethodType         #81           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #83 = Utf8               $anonfun$ListEncodeJson$1
   #84 = Utf8               (Largonaut/EncodeJson;Lscala/collection/immutable/List;)Largonaut/Json;
   #85 = NameAndType        #83:#84       // $anonfun$ListEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/List;)Largonaut/Json;
   #86 = InterfaceMethodref #2.#85        // argonaut/EncodeJsons.$anonfun$ListEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/List;)Largonaut/Json;
   #87 = MethodHandle       6:#86         // REF_invokeStatic argonaut/EncodeJsons.$anonfun$ListEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/List;)Largonaut/Json;
   #88 = Utf8               (Lscala/collection/immutable/List;)Largonaut/Json;
   #89 = MethodType         #88           //  (Lscala/collection/immutable/List;)Largonaut/Json;
   #90 = Integer            5
   #91 = Integer            1
   #92 = Utf8               java/lang/invoke/LambdaMetafactory
   #93 = Class              #92           // java/lang/invoke/LambdaMetafactory
   #94 = Utf8               altMetafactory
   #95 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #96 = NameAndType        #94:#95       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #97 = Methodref          #93.#96       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #98 = MethodHandle       6:#97         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #99 = Utf8               apply
  #100 = Utf8               (Largonaut/EncodeJson;)Lscala/Function1;
  #101 = NameAndType        #99:#100      // apply:(Largonaut/EncodeJson;)Lscala/Function1;
  #102 = InvokeDynamic      #0:#101       // #0:apply:(Largonaut/EncodeJson;)Lscala/Function1;
  #103 = Utf8               (Lscala/Function1;)Largonaut/EncodeJson;
  #104 = NameAndType        #99:#103      // apply:(Lscala/Function1;)Largonaut/EncodeJson;
  #105 = Methodref          #76.#104      // argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
  #106 = Utf8               this
  #107 = Utf8               VectorEncodeJson$
  #108 = Utf8               VectorEncodeJson
  #109 = NameAndType        #108:#69      // VectorEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #110 = InterfaceMethodref #2.#109       // argonaut/EncodeJsons.VectorEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #111 = Utf8               <A:Ljava/lang/Object;>(Largonaut/EncodeJson<Lscala/collection/immutable/List<TA;>;>;)Largonaut/EncodeJson<Lscala/collection/immutable/Vector<TA;>;>;
  #112 = Utf8               $anonfun$VectorEncodeJson$1
  #113 = Utf8               (Largonaut/EncodeJson;Lscala/collection/immutable/Vector;)Largonaut/Json;
  #114 = NameAndType        #112:#113     // $anonfun$VectorEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Vector;)Largonaut/Json;
  #115 = InterfaceMethodref #2.#114       // argonaut/EncodeJsons.$anonfun$VectorEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Vector;)Largonaut/Json;
  #116 = MethodHandle       6:#115        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$VectorEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Vector;)Largonaut/Json;
  #117 = Utf8               (Lscala/collection/immutable/Vector;)Largonaut/Json;
  #118 = MethodType         #117          //  (Lscala/collection/immutable/Vector;)Largonaut/Json;
  #119 = InvokeDynamic      #1:#101       // #1:apply:(Largonaut/EncodeJson;)Lscala/Function1;
  #120 = Utf8               StreamEncodeJson$
  #121 = Utf8               StreamEncodeJson
  #122 = NameAndType        #121:#69      // StreamEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #123 = InterfaceMethodref #2.#122       // argonaut/EncodeJsons.StreamEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #124 = Utf8               <A:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;)Largonaut/EncodeJson<Lscala/collection/immutable/Stream<TA;>;>;
  #125 = Utf8               $anonfun$StreamEncodeJson$1
  #126 = Utf8               (Largonaut/EncodeJson;Lscala/collection/immutable/Stream;)Largonaut/Json;
  #127 = NameAndType        #125:#126     // $anonfun$StreamEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Stream;)Largonaut/Json;
  #128 = InterfaceMethodref #2.#127       // argonaut/EncodeJsons.$anonfun$StreamEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Stream;)Largonaut/Json;
  #129 = MethodHandle       6:#128        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$StreamEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Stream;)Largonaut/Json;
  #130 = Utf8               (Lscala/collection/immutable/Stream;)Largonaut/Json;
  #131 = MethodType         #130          //  (Lscala/collection/immutable/Stream;)Largonaut/Json;
  #132 = InvokeDynamic      #2:#101       // #2:apply:(Largonaut/EncodeJson;)Lscala/Function1;
  #133 = Utf8               StringEncodeJson
  #134 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/String;>;
  #135 = Utf8               UUIDEncodeJson
  #136 = Utf8               ()Largonaut/EncodeJson<Ljava/util/UUID;>;
  #137 = Utf8               DoubleEncodeJson
  #138 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/Object;>;
  #139 = Utf8               FloatEncodeJson
  #140 = Utf8               IntEncodeJson
  #141 = Utf8               LongEncodeJson
  #142 = Utf8               ShortEncodeJson
  #143 = Utf8               ByteEncodeJson
  #144 = Utf8               BigDecimalEncodeJson
  #145 = Utf8               ()Largonaut/EncodeJson<Lscala/math/BigDecimal;>;
  #146 = Utf8               BigIntEncodeJson
  #147 = Utf8               ()Largonaut/EncodeJson<Lscala/math/BigInt;>;
  #148 = Utf8               BooleanEncodeJson
  #149 = Utf8               CharEncodeJson
  #150 = Utf8               JDoubleEncodeJson
  #151 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/Double;>;
  #152 = Utf8               JFloatEncodeJson
  #153 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/Float;>;
  #154 = Utf8               JIntegerEncodeJson
  #155 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/Integer;>;
  #156 = Utf8               JLongEncodeJson
  #157 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/Long;>;
  #158 = Utf8               JShortEncodeJson
  #159 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/Short;>;
  #160 = Utf8               JByteEncodeJson
  #161 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/Byte;>;
  #162 = Utf8               JBooleanEncodeJson
  #163 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/Boolean;>;
  #164 = Utf8               JCharacterEncodeJson
  #165 = Utf8               ()Largonaut/EncodeJson<Ljava/lang/Character;>;
  #166 = Utf8               OptionEncodeJson$
  #167 = Utf8               OptionEncodeJson
  #168 = NameAndType        #167:#69      // OptionEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #169 = InterfaceMethodref #2.#168       // argonaut/EncodeJsons.OptionEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #170 = Utf8               <A:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;)Largonaut/EncodeJson<Lscala/Option<TA;>;>;
  #171 = Utf8               $anonfun$OptionEncodeJson$1
  #172 = Utf8               (Largonaut/EncodeJson;Lscala/Option;)Largonaut/Json;
  #173 = NameAndType        #171:#172     // $anonfun$OptionEncodeJson$1:(Largonaut/EncodeJson;Lscala/Option;)Largonaut/Json;
  #174 = InterfaceMethodref #2.#173       // argonaut/EncodeJsons.$anonfun$OptionEncodeJson$1:(Largonaut/EncodeJson;Lscala/Option;)Largonaut/Json;
  #175 = MethodHandle       6:#174        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$OptionEncodeJson$1:(Largonaut/EncodeJson;Lscala/Option;)Largonaut/Json;
  #176 = Utf8               (Lscala/Option;)Largonaut/Json;
  #177 = MethodType         #176          //  (Lscala/Option;)Largonaut/Json;
  #178 = InvokeDynamic      #3:#101       // #3:apply:(Largonaut/EncodeJson;)Lscala/Function1;
  #179 = Utf8               EitherEncodeJson$
  #180 = Utf8               (Largonaut/EncodeJsons;Largonaut/EncodeJson;Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #181 = Utf8               ea
  #182 = Utf8               eb
  #183 = Utf8               EitherEncodeJson
  #184 = Utf8               (Largonaut/EncodeJson;Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #185 = NameAndType        #183:#184     // EitherEncodeJson:(Largonaut/EncodeJson;Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #186 = InterfaceMethodref #2.#185       // argonaut/EncodeJsons.EitherEncodeJson:(Largonaut/EncodeJson;Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #187 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;Largonaut/EncodeJson<TB;>;)Largonaut/EncodeJson<Lscala/util/Either<TA;TB;>;>;
  #188 = Utf8               $anonfun$EitherEncodeJson$1
  #189 = Utf8               (Largonaut/EncodeJson;Largonaut/EncodeJson;Lscala/util/Either;)Largonaut/Json;
  #190 = NameAndType        #188:#189     // $anonfun$EitherEncodeJson$1:(Largonaut/EncodeJson;Largonaut/EncodeJson;Lscala/util/Either;)Largonaut/Json;
  #191 = InterfaceMethodref #2.#190       // argonaut/EncodeJsons.$anonfun$EitherEncodeJson$1:(Largonaut/EncodeJson;Largonaut/EncodeJson;Lscala/util/Either;)Largonaut/Json;
  #192 = MethodHandle       6:#191        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$EitherEncodeJson$1:(Largonaut/EncodeJson;Largonaut/EncodeJson;Lscala/util/Either;)Largonaut/Json;
  #193 = Utf8               (Lscala/util/Either;)Largonaut/Json;
  #194 = MethodType         #193          //  (Lscala/util/Either;)Largonaut/Json;
  #195 = Utf8               (Largonaut/EncodeJson;Largonaut/EncodeJson;)Lscala/Function1;
  #196 = NameAndType        #99:#195      // apply:(Largonaut/EncodeJson;Largonaut/EncodeJson;)Lscala/Function1;
  #197 = InvokeDynamic      #4:#196       // #4:apply:(Largonaut/EncodeJson;Largonaut/EncodeJson;)Lscala/Function1;
  #198 = Utf8               MapEncodeJson$
  #199 = Utf8               (Largonaut/EncodeJsons;Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #200 = Utf8               K
  #201 = Utf8               MapEncodeJson
  #202 = Utf8               (Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #203 = NameAndType        #201:#202     // MapEncodeJson:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #204 = InterfaceMethodref #2.#203       // argonaut/EncodeJsons.MapEncodeJson:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #205 = Utf8               Largonaut/EncodeJsonKey;
  #206 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Largonaut/EncodeJsonKey<TK;>;Largonaut/EncodeJson<TV;>;)Largonaut/EncodeJson<Lscala/collection/immutable/Map<TK;TV;>;>;
  #207 = Utf8               $anonfun$MapEncodeJson$1
  #208 = Utf8               (Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/collection/immutable/Map;)Largonaut/Json;
  #209 = NameAndType        #207:#208     // $anonfun$MapEncodeJson$1:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/collection/immutable/Map;)Largonaut/Json;
  #210 = InterfaceMethodref #2.#209       // argonaut/EncodeJsons.$anonfun$MapEncodeJson$1:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/collection/immutable/Map;)Largonaut/Json;
  #211 = MethodHandle       6:#210        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$MapEncodeJson$1:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/collection/immutable/Map;)Largonaut/Json;
  #212 = Utf8               (Lscala/collection/immutable/Map;)Largonaut/Json;
  #213 = MethodType         #212          //  (Lscala/collection/immutable/Map;)Largonaut/Json;
  #214 = Utf8               (Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Lscala/Function1;
  #215 = NameAndType        #99:#214      // apply:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Lscala/Function1;
  #216 = InvokeDynamic      #5:#215       // #5:apply:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Lscala/Function1;
  #217 = Utf8               SetEncodeJson$
  #218 = Utf8               SetEncodeJson
  #219 = NameAndType        #218:#69      // SetEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #220 = InterfaceMethodref #2.#219       // argonaut/EncodeJsons.SetEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
  #221 = Utf8               <A:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;)Largonaut/EncodeJson<Lscala/collection/immutable/Set<TA;>;>;
  #222 = Utf8               $anonfun$SetEncodeJson$1
  #223 = Utf8               (Largonaut/EncodeJsons;Largonaut/EncodeJson;Lscala/collection/immutable/Set;)Largonaut/Json;
  #224 = NameAndType        #222:#223     // $anonfun$SetEncodeJson$1:(Largonaut/EncodeJsons;Largonaut/EncodeJson;Lscala/collection/immutable/Set;)Largonaut/Json;
  #225 = InterfaceMethodref #2.#224       // argonaut/EncodeJsons.$anonfun$SetEncodeJson$1:(Largonaut/EncodeJsons;Largonaut/EncodeJson;Lscala/collection/immutable/Set;)Largonaut/Json;
  #226 = MethodHandle       6:#225        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$SetEncodeJson$1:(Largonaut/EncodeJsons;Largonaut/EncodeJson;Lscala/collection/immutable/Set;)Largonaut/Json;
  #227 = Utf8               (Lscala/collection/immutable/Set;)Largonaut/Json;
  #228 = MethodType         #227          //  (Lscala/collection/immutable/Set;)Largonaut/Json;
  #229 = Utf8               (Largonaut/EncodeJsons;Largonaut/EncodeJson;)Lscala/Function1;
  #230 = NameAndType        #99:#229      // apply:(Largonaut/EncodeJsons;Largonaut/EncodeJson;)Lscala/Function1;
  #231 = InvokeDynamic      #6:#230       // #6:apply:(Largonaut/EncodeJsons;Largonaut/EncodeJson;)Lscala/Function1;
  #232 = Utf8               $anonfun$JsonEncodeJson$1
  #233 = Utf8               (Largonaut/Json;)Largonaut/Json;
  #234 = Utf8               q
  #235 = Utf8               Largonaut/Json;
  #236 = Utf8               $anonfun$HCursorEncodeJson$1
  #237 = Utf8               (Largonaut/HCursor;)Largonaut/Json;
  #238 = Utf8               argonaut/HCursor
  #239 = Class              #238          // argonaut/HCursor
  #240 = Utf8               focus
  #241 = Utf8               ()Largonaut/Json;
  #242 = NameAndType        #240:#241     // focus:()Largonaut/Json;
  #243 = Methodref          #239.#242     // argonaut/HCursor.focus:()Largonaut/Json;
  #244 = Utf8               Largonaut/HCursor;
  #245 = Utf8               $anonfun$UnitEncodeJson$1
  #246 = Utf8               (Lscala/runtime/BoxedUnit;)Largonaut/Json;
  #247 = Utf8               argonaut/Json$
  #248 = Class              #247          // argonaut/Json$
  #249 = Utf8               Largonaut/Json$;
  #250 = NameAndType        #77:#249      // MODULE$:Largonaut/Json$;
  #251 = Fieldref           #248.#250     // argonaut/Json$.MODULE$:Largonaut/Json$;
  #252 = Utf8               jEmptyObject
  #253 = NameAndType        #252:#241     // jEmptyObject:()Largonaut/Json;
  #254 = Methodref          #248.#253     // argonaut/Json$.jEmptyObject:()Largonaut/Json;
  #255 = Utf8               Lscala/runtime/BoxedUnit;
  #256 = Utf8               $anonfun$ListEncodeJson$2
  #257 = Utf8               (Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #258 = Utf8               e$1
  #259 = Utf8               x$2
  #260 = Utf8               argonaut/EncodeJson
  #261 = Class              #260          // argonaut/EncodeJson
  #262 = Utf8               (Ljava/lang/Object;)Largonaut/Json;
  #263 = NameAndType        #99:#262      // apply:(Ljava/lang/Object;)Largonaut/Json;
  #264 = InterfaceMethodref #261.#263     // argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
  #265 = Utf8               Ljava/lang/Object;
  #266 = Utf8               a
  #267 = Utf8               jArray
  #268 = Utf8               ()Lscala/Function1;
  #269 = NameAndType        #267:#268     // jArray:()Lscala/Function1;
  #270 = Methodref          #248.#269     // argonaut/Json$.jArray:()Lscala/Function1;
  #271 = NameAndType        #256:#257     // $anonfun$ListEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #272 = InterfaceMethodref #2.#271       // argonaut/EncodeJsons.$anonfun$ListEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #273 = MethodHandle       6:#272        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$ListEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #274 = MethodType         #262          //  (Ljava/lang/Object;)Largonaut/Json;
  #275 = InvokeDynamic      #7:#101       // #7:apply:(Largonaut/EncodeJson;)Lscala/Function1;
  #276 = Utf8               scala/collection/immutable/List
  #277 = Class              #276          // scala/collection/immutable/List
  #278 = Utf8               map
  #279 = Utf8               (Lscala/Function1;)Lscala/collection/immutable/List;
  #280 = NameAndType        #278:#279     // map:(Lscala/Function1;)Lscala/collection/immutable/List;
  #281 = Methodref          #277.#280     // scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
  #282 = Utf8               scala/Function1
  #283 = Class              #282          // scala/Function1
  #284 = NameAndType        #99:#81       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #285 = InterfaceMethodref #283.#284     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #286 = Utf8               argonaut/Json
  #287 = Class              #286          // argonaut/Json
  #288 = Utf8               Lscala/collection/immutable/List;
  #289 = Utf8               e$2
  #290 = Utf8               scala/collection/immutable/Vector
  #291 = Class              #290          // scala/collection/immutable/Vector
  #292 = Utf8               toList
  #293 = Utf8               ()Lscala/collection/immutable/List;
  #294 = NameAndType        #292:#293     // toList:()Lscala/collection/immutable/List;
  #295 = Methodref          #291.#294     // scala/collection/immutable/Vector.toList:()Lscala/collection/immutable/List;
  #296 = Utf8               Lscala/collection/immutable/Vector;
  #297 = Utf8               $anonfun$StreamEncodeJson$2
  #298 = Utf8               e$3
  #299 = Utf8               x$3
  #300 = Utf8               scala/collection/immutable/Stream
  #301 = Class              #300          // scala/collection/immutable/Stream
  #302 = Methodref          #301.#294     // scala/collection/immutable/Stream.toList:()Lscala/collection/immutable/List;
  #303 = NameAndType        #297:#257     // $anonfun$StreamEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #304 = InterfaceMethodref #2.#303       // argonaut/EncodeJsons.$anonfun$StreamEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #305 = MethodHandle       6:#304        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$StreamEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
  #306 = InvokeDynamic      #8:#101       // #8:apply:(Largonaut/EncodeJson;)Lscala/Function1;
  #307 = Utf8               Lscala/collection/immutable/Stream;
  #308 = Utf8               $anonfun$UUIDEncodeJson$1
  #309 = Utf8               (Ljava/util/UUID;)Ljava/lang/String;
  #310 = Utf8               x$4
  #311 = Utf8               java/util/UUID
  #312 = Class              #311          // java/util/UUID
  #313 = Utf8               toString
  #314 = Utf8               ()Ljava/lang/String;
  #315 = NameAndType        #313:#314     // toString:()Ljava/lang/String;
  #316 = Methodref          #312.#315     // java/util/UUID.toString:()Ljava/lang/String;
  #317 = Utf8               Ljava/util/UUID;
  #318 = Utf8               $anonfun$DoubleEncodeJson$2
  #319 = Utf8               jNull
  #320 = NameAndType        #319:#241     // jNull:()Largonaut/Json;
  #321 = Methodref          #248.#320     // argonaut/Json$.jNull:()Largonaut/Json;
  #322 = Utf8               $anonfun$DoubleEncodeJson$3
  #323 = Utf8               (Largonaut/JsonNumber;)Largonaut/Json;
  #324 = Utf8               x$5
  #325 = Utf8               argonaut/JsonNumber
  #326 = Class              #325          // argonaut/JsonNumber
  #327 = Utf8               asJson
  #328 = NameAndType        #327:#241     // asJson:()Largonaut/Json;
  #329 = Methodref          #326.#328     // argonaut/JsonNumber.asJson:()Largonaut/Json;
  #330 = Utf8               Largonaut/JsonNumber;
  #331 = Utf8               $anonfun$DoubleEncodeJson$1
  #332 = Utf8               (D)Largonaut/Json;
  #333 = Utf8               argonaut/JsonIdentity$
  #334 = Class              #333          // argonaut/JsonIdentity$
  #335 = Utf8               Largonaut/JsonIdentity$;
  #336 = NameAndType        #77:#335      // MODULE$:Largonaut/JsonIdentity$;
  #337 = Fieldref           #334.#336     // argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
  #338 = Utf8               scala/runtime/BoxesRunTime
  #339 = Class              #338          // scala/runtime/BoxesRunTime
  #340 = Utf8               boxToDouble
  #341 = Utf8               (D)Ljava/lang/Double;
  #342 = NameAndType        #340:#341     // boxToDouble:(D)Ljava/lang/Double;
  #343 = Methodref          #339.#342     // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
  #344 = Utf8               ToJsonIdentity
  #345 = NameAndType        #344:#81      // ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
  #346 = Methodref          #334.#345     // argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
  #347 = Utf8               argonaut/EncodeJsonNumber$
  #348 = Class              #347          // argonaut/EncodeJsonNumber$
  #349 = Utf8               Largonaut/EncodeJsonNumber$;
  #350 = NameAndType        #77:#349      // MODULE$:Largonaut/EncodeJsonNumber$;
  #351 = Fieldref           #348.#350     // argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
  #352 = Utf8               encodeJsonNumberDouble
  #353 = Utf8               ()Largonaut/EncodePossibleJsonNumber;
  #354 = NameAndType        #352:#353     // encodeJsonNumberDouble:()Largonaut/EncodePossibleJsonNumber;
  #355 = Methodref          #348.#354     // argonaut/EncodeJsonNumber$.encodeJsonNumberDouble:()Largonaut/EncodePossibleJsonNumber;
  #356 = Utf8               asPossibleJsonNumber$extension
  #357 = Utf8               (Ljava/lang/Object;Largonaut/EncodePossibleJsonNumber;)Lscala/Option;
  #358 = NameAndType        #356:#357     // asPossibleJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodePossibleJsonNumber;)Lscala/Option;
  #359 = Methodref          #334.#358     // argonaut/JsonIdentity$.asPossibleJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodePossibleJsonNumber;)Lscala/Option;
  #360 = Utf8               ()Ljava/lang/Object;
  #361 = MethodType         #360          //  ()Ljava/lang/Object;
  #362 = NameAndType        #318:#241     // $anonfun$DoubleEncodeJson$2:()Largonaut/Json;
  #363 = InterfaceMethodref #2.#362       // argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$2:()Largonaut/Json;
  #364 = MethodHandle       6:#363        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$2:()Largonaut/Json;
  #365 = MethodType         #241          //  ()Largonaut/Json;
  #366 = Utf8               ()Lscala/Function0;
  #367 = NameAndType        #99:#366      // apply:()Lscala/Function0;
  #368 = InvokeDynamic      #9:#367       // #9:apply:()Lscala/Function0;
  #369 = NameAndType        #322:#323     // $anonfun$DoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #370 = InterfaceMethodref #2.#369       // argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #371 = MethodHandle       6:#370        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #372 = MethodType         #323          //  (Largonaut/JsonNumber;)Largonaut/Json;
  #373 = NameAndType        #99:#268      // apply:()Lscala/Function1;
  #374 = InvokeDynamic      #10:#373      // #10:apply:()Lscala/Function1;
  #375 = Utf8               scala/Option
  #376 = Class              #375          // scala/Option
  #377 = Utf8               fold
  #378 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #379 = NameAndType        #377:#378     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #380 = Methodref          #376.#379     // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #381 = Utf8               D
  #382 = Utf8               $anonfun$FloatEncodeJson$2
  #383 = Utf8               $anonfun$FloatEncodeJson$3
  #384 = Utf8               x$6
  #385 = Utf8               $anonfun$FloatEncodeJson$1
  #386 = Utf8               (F)Largonaut/Json;
  #387 = Utf8               boxToFloat
  #388 = Utf8               (F)Ljava/lang/Float;
  #389 = NameAndType        #387:#388     // boxToFloat:(F)Ljava/lang/Float;
  #390 = Methodref          #339.#389     // scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
  #391 = Utf8               encodeJsonNumberFloat
  #392 = NameAndType        #391:#353     // encodeJsonNumberFloat:()Largonaut/EncodePossibleJsonNumber;
  #393 = Methodref          #348.#392     // argonaut/EncodeJsonNumber$.encodeJsonNumberFloat:()Largonaut/EncodePossibleJsonNumber;
  #394 = NameAndType        #382:#241     // $anonfun$FloatEncodeJson$2:()Largonaut/Json;
  #395 = InterfaceMethodref #2.#394       // argonaut/EncodeJsons.$anonfun$FloatEncodeJson$2:()Largonaut/Json;
  #396 = MethodHandle       6:#395        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$FloatEncodeJson$2:()Largonaut/Json;
  #397 = InvokeDynamic      #11:#367      // #11:apply:()Lscala/Function0;
  #398 = NameAndType        #383:#323     // $anonfun$FloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #399 = InterfaceMethodref #2.#398       // argonaut/EncodeJsons.$anonfun$FloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #400 = MethodHandle       6:#399        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$FloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #401 = InvokeDynamic      #12:#373      // #12:apply:()Lscala/Function1;
  #402 = Utf8               F
  #403 = Utf8               $anonfun$IntEncodeJson$1
  #404 = Utf8               (I)Largonaut/Json;
  #405 = Utf8               boxToInteger
  #406 = Utf8               (I)Ljava/lang/Integer;
  #407 = NameAndType        #405:#406     // boxToInteger:(I)Ljava/lang/Integer;
  #408 = Methodref          #339.#407     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #409 = Utf8               encodeJsonNumberInt
  #410 = Utf8               ()Largonaut/EncodeJsonNumber;
  #411 = NameAndType        #409:#410     // encodeJsonNumberInt:()Largonaut/EncodeJsonNumber;
  #412 = Methodref          #348.#411     // argonaut/EncodeJsonNumber$.encodeJsonNumberInt:()Largonaut/EncodeJsonNumber;
  #413 = Utf8               asJsonNumber$extension
  #414 = Utf8               (Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
  #415 = NameAndType        #413:#414     // asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
  #416 = Methodref          #334.#415     // argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
  #417 = Utf8               I
  #418 = Utf8               $anonfun$LongEncodeJson$1
  #419 = Utf8               (J)Largonaut/Json;
  #420 = Utf8               boxToLong
  #421 = Utf8               (J)Ljava/lang/Long;
  #422 = NameAndType        #420:#421     // boxToLong:(J)Ljava/lang/Long;
  #423 = Methodref          #339.#422     // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #424 = Utf8               encodeJsonNumberLong
  #425 = NameAndType        #424:#410     // encodeJsonNumberLong:()Largonaut/EncodeJsonNumber;
  #426 = Methodref          #348.#425     // argonaut/EncodeJsonNumber$.encodeJsonNumberLong:()Largonaut/EncodeJsonNumber;
  #427 = Utf8               J
  #428 = Utf8               $anonfun$ShortEncodeJson$1
  #429 = Utf8               (S)Largonaut/Json;
  #430 = Utf8               boxToShort
  #431 = Utf8               (S)Ljava/lang/Short;
  #432 = NameAndType        #430:#431     // boxToShort:(S)Ljava/lang/Short;
  #433 = Methodref          #339.#432     // scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
  #434 = Utf8               encodeJsonNumberShort
  #435 = NameAndType        #434:#410     // encodeJsonNumberShort:()Largonaut/EncodeJsonNumber;
  #436 = Methodref          #348.#435     // argonaut/EncodeJsonNumber$.encodeJsonNumberShort:()Largonaut/EncodeJsonNumber;
  #437 = Utf8               S
  #438 = Utf8               $anonfun$ByteEncodeJson$1
  #439 = Utf8               (B)Largonaut/Json;
  #440 = Utf8               boxToByte
  #441 = Utf8               (B)Ljava/lang/Byte;
  #442 = NameAndType        #440:#441     // boxToByte:(B)Ljava/lang/Byte;
  #443 = Methodref          #339.#442     // scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
  #444 = Utf8               encodeJsonNumberByte
  #445 = NameAndType        #444:#410     // encodeJsonNumberByte:()Largonaut/EncodeJsonNumber;
  #446 = Methodref          #348.#445     // argonaut/EncodeJsonNumber$.encodeJsonNumberByte:()Largonaut/EncodeJsonNumber;
  #447 = Utf8               B
  #448 = Utf8               $anonfun$BigDecimalEncodeJson$1
  #449 = Utf8               (Lscala/math/BigDecimal;)Largonaut/Json;
  #450 = Utf8               encodeJsonNumberBigDecimal
  #451 = NameAndType        #450:#410     // encodeJsonNumberBigDecimal:()Largonaut/EncodeJsonNumber;
  #452 = Methodref          #348.#451     // argonaut/EncodeJsonNumber$.encodeJsonNumberBigDecimal:()Largonaut/EncodeJsonNumber;
  #453 = Utf8               Lscala/math/BigDecimal;
  #454 = Utf8               $anonfun$BigIntEncodeJson$1
  #455 = Utf8               (Lscala/math/BigInt;)Largonaut/Json;
  #456 = Utf8               encodeJsonNumberBigInt
  #457 = NameAndType        #456:#410     // encodeJsonNumberBigInt:()Largonaut/EncodeJsonNumber;
  #458 = Methodref          #348.#457     // argonaut/EncodeJsonNumber$.encodeJsonNumberBigInt:()Largonaut/EncodeJsonNumber;
  #459 = Utf8               Lscala/math/BigInt;
  #460 = Utf8               $anonfun$CharEncodeJson$1
  #461 = Utf8               (C)Largonaut/Json;
  #462 = Utf8               jString
  #463 = NameAndType        #462:#268     // jString:()Lscala/Function1;
  #464 = Methodref          #248.#463     // argonaut/Json$.jString:()Lscala/Function1;
  #465 = Utf8               boxToCharacter
  #466 = Utf8               (C)Ljava/lang/Character;
  #467 = NameAndType        #465:#466     // boxToCharacter:(C)Ljava/lang/Character;
  #468 = Methodref          #339.#467     // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
  #469 = Methodref          #4.#315       // java/lang/Object.toString:()Ljava/lang/String;
  #470 = Utf8               C
  #471 = Utf8               $anonfun$JDoubleEncodeJson$2
  #472 = Utf8               $anonfun$JDoubleEncodeJson$3
  #473 = Utf8               x$7
  #474 = Utf8               $anonfun$JDoubleEncodeJson$1
  #475 = Utf8               (Ljava/lang/Double;)Largonaut/Json;
  #476 = Utf8               encodeJsonNumberJavaDouble
  #477 = NameAndType        #476:#353     // encodeJsonNumberJavaDouble:()Largonaut/EncodePossibleJsonNumber;
  #478 = Methodref          #348.#477     // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaDouble:()Largonaut/EncodePossibleJsonNumber;
  #479 = NameAndType        #471:#241     // $anonfun$JDoubleEncodeJson$2:()Largonaut/Json;
  #480 = InterfaceMethodref #2.#479       // argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$2:()Largonaut/Json;
  #481 = MethodHandle       6:#480        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$2:()Largonaut/Json;
  #482 = InvokeDynamic      #13:#367      // #13:apply:()Lscala/Function0;
  #483 = NameAndType        #472:#323     // $anonfun$JDoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #484 = InterfaceMethodref #2.#483       // argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #485 = MethodHandle       6:#484        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #486 = InvokeDynamic      #14:#373      // #14:apply:()Lscala/Function1;
  #487 = Utf8               Ljava/lang/Double;
  #488 = Utf8               $anonfun$JFloatEncodeJson$2
  #489 = Utf8               $anonfun$JFloatEncodeJson$3
  #490 = Utf8               x$8
  #491 = Utf8               $anonfun$JFloatEncodeJson$1
  #492 = Utf8               (Ljava/lang/Float;)Largonaut/Json;
  #493 = Utf8               encodeJsonNumberJavaFloat
  #494 = NameAndType        #493:#353     // encodeJsonNumberJavaFloat:()Largonaut/EncodePossibleJsonNumber;
  #495 = Methodref          #348.#494     // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaFloat:()Largonaut/EncodePossibleJsonNumber;
  #496 = NameAndType        #488:#241     // $anonfun$JFloatEncodeJson$2:()Largonaut/Json;
  #497 = InterfaceMethodref #2.#496       // argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$2:()Largonaut/Json;
  #498 = MethodHandle       6:#497        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$2:()Largonaut/Json;
  #499 = InvokeDynamic      #15:#367      // #15:apply:()Lscala/Function0;
  #500 = NameAndType        #489:#323     // $anonfun$JFloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #501 = InterfaceMethodref #2.#500       // argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #502 = MethodHandle       6:#501        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
  #503 = InvokeDynamic      #16:#373      // #16:apply:()Lscala/Function1;
  #504 = Utf8               Ljava/lang/Float;
  #505 = Utf8               $anonfun$JIntegerEncodeJson$1
  #506 = Utf8               (Ljava/lang/Integer;)Largonaut/Json;
  #507 = Utf8               encodeJsonNumberJavaInteger
  #508 = NameAndType        #507:#410     // encodeJsonNumberJavaInteger:()Largonaut/EncodeJsonNumber;
  #509 = Methodref          #348.#508     // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaInteger:()Largonaut/EncodeJsonNumber;
  #510 = Utf8               Ljava/lang/Integer;
  #511 = Utf8               $anonfun$JLongEncodeJson$1
  #512 = Utf8               (Ljava/lang/Long;)Largonaut/Json;
  #513 = Utf8               encodeJsonNumberJavaLong
  #514 = NameAndType        #513:#410     // encodeJsonNumberJavaLong:()Largonaut/EncodeJsonNumber;
  #515 = Methodref          #348.#514     // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaLong:()Largonaut/EncodeJsonNumber;
  #516 = Utf8               Ljava/lang/Long;
  #517 = Utf8               $anonfun$JShortEncodeJson$1
  #518 = Utf8               (Ljava/lang/Short;)Largonaut/Json;
  #519 = Utf8               encodeJsonNumberJavaShort
  #520 = NameAndType        #519:#410     // encodeJsonNumberJavaShort:()Largonaut/EncodeJsonNumber;
  #521 = Methodref          #348.#520     // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaShort:()Largonaut/EncodeJsonNumber;
  #522 = Utf8               Ljava/lang/Short;
  #523 = Utf8               $anonfun$JByteEncodeJson$1
  #524 = Utf8               (Ljava/lang/Byte;)Largonaut/Json;
  #525 = Utf8               encodeJsonNumberJavaByte
  #526 = NameAndType        #525:#410     // encodeJsonNumberJavaByte:()Largonaut/EncodeJsonNumber;
  #527 = Methodref          #348.#526     // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaByte:()Largonaut/EncodeJsonNumber;
  #528 = Utf8               Ljava/lang/Byte;
  #529 = Utf8               $anonfun$JBooleanEncodeJson$1
  #530 = Utf8               (Ljava/lang/Boolean;)Largonaut/Json;
  #531 = Utf8               jBool
  #532 = NameAndType        #531:#268     // jBool:()Lscala/Function1;
  #533 = Methodref          #248.#532     // argonaut/Json$.jBool:()Lscala/Function1;
  #534 = Utf8               java/lang/Boolean
  #535 = Class              #534          // java/lang/Boolean
  #536 = Utf8               booleanValue
  #537 = Utf8               ()Z
  #538 = NameAndType        #536:#537     // booleanValue:()Z
  #539 = Methodref          #535.#538     // java/lang/Boolean.booleanValue:()Z
  #540 = Utf8               boxToBoolean
  #541 = Utf8               (Z)Ljava/lang/Boolean;
  #542 = NameAndType        #540:#541     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #543 = Methodref          #339.#542     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #544 = Utf8               Ljava/lang/Boolean;
  #545 = Utf8               $anonfun$JCharacterEncodeJson$1
  #546 = Utf8               (Ljava/lang/Character;)Largonaut/Json;
  #547 = Utf8               java/lang/Character
  #548 = Class              #547          // java/lang/Character
  #549 = Methodref          #548.#315     // java/lang/Character.toString:()Ljava/lang/String;
  #550 = Utf8               Ljava/lang/Character;
  #551 = Utf8               e$4
  #552 = Utf8               x$9
  #553 = Utf8               scala/None$
  #554 = Class              #553          // scala/None$
  #555 = Utf8               Lscala/None$;
  #556 = NameAndType        #77:#555      // MODULE$:Lscala/None$;
  #557 = Fieldref           #554.#556     // scala/None$.MODULE$:Lscala/None$;
  #558 = Utf8               equals
  #559 = Utf8               (Ljava/lang/Object;)Z
  #560 = NameAndType        #558:#559     // equals:(Ljava/lang/Object;)Z
  #561 = Methodref          #4.#560       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #562 = Utf8               scala/Some
  #563 = Class              #562          // scala/Some
  #564 = Utf8               value
  #565 = NameAndType        #564:#360     // value:()Ljava/lang/Object;
  #566 = Methodref          #563.#565     // scala/Some.value:()Ljava/lang/Object;
  #567 = Utf8               scala/MatchError
  #568 = Class              #567          // scala/MatchError
  #569 = Utf8               <init>
  #570 = Utf8               (Ljava/lang/Object;)V
  #571 = NameAndType        #569:#570     // "<init>":(Ljava/lang/Object;)V
  #572 = Methodref          #568.#571     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #573 = Utf8               Lscala/Option;
  #574 = Utf8               ea$1
  #575 = Utf8               eb$1
  #576 = Utf8               x$10
  #577 = Utf8               scala/util/Left
  #578 = Class              #577          // scala/util/Left
  #579 = Methodref          #578.#565     // scala/util/Left.value:()Ljava/lang/Object;
  #580 = Utf8               Left
  #581 = String             #580          // Left
  #582 = Utf8               jSingleObject
  #583 = Utf8               (Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
  #584 = NameAndType        #582:#583     // jSingleObject:(Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
  #585 = Methodref          #248.#584     // argonaut/Json$.jSingleObject:(Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
  #586 = Utf8               scala/util/Right
  #587 = Class              #586          // scala/util/Right
  #588 = Methodref          #587.#565     // scala/util/Right.value:()Ljava/lang/Object;
  #589 = Utf8               Right
  #590 = String             #589          // Right
  #591 = Utf8               b
  #592 = Utf8               Lscala/util/Either;
  #593 = Utf8               scala/util/Either
  #594 = Class              #593          // scala/util/Either
  #595 = Utf8               $anonfun$MapEncodeJson$2
  #596 = Utf8               (Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/Tuple2;)Lscala/Tuple2;
  #597 = Utf8               K$1
  #598 = Utf8               e$5
  #599 = Utf8               x0$1
  #600 = Utf8               scala/Tuple2
  #601 = Class              #600          // scala/Tuple2
  #602 = Utf8               _1
  #603 = NameAndType        #602:#360     // _1:()Ljava/lang/Object;
  #604 = Methodref          #601.#603     // scala/Tuple2._1:()Ljava/lang/Object;
  #605 = Utf8               _2
  #606 = NameAndType        #605:#360     // _2:()Ljava/lang/Object;
  #607 = Methodref          #601.#606     // scala/Tuple2._2:()Ljava/lang/Object;
  #608 = Utf8               argonaut/EncodeJsonKey
  #609 = Class              #608          // argonaut/EncodeJsonKey
  #610 = Utf8               toJsonKey
  #611 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #612 = NameAndType        #610:#611     // toJsonKey:(Ljava/lang/Object;)Ljava/lang/String;
  #613 = InterfaceMethodref #609.#612     // argonaut/EncodeJsonKey.toJsonKey:(Ljava/lang/Object;)Ljava/lang/String;
  #614 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #615 = NameAndType        #569:#614     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #616 = Methodref          #601.#615     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #617 = Utf8               k
  #618 = Utf8               v
  #619 = Utf8               Lscala/Tuple2;
  #620 = Utf8               x
  #621 = Utf8               scala/collection/immutable/Map
  #622 = Class              #621          // scala/collection/immutable/Map
  #623 = InterfaceMethodref #622.#294     // scala/collection/immutable/Map.toList:()Lscala/collection/immutable/List;
  #624 = NameAndType        #595:#596     // $anonfun$MapEncodeJson$2:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/Tuple2;)Lscala/Tuple2;
  #625 = InterfaceMethodref #2.#624       // argonaut/EncodeJsons.$anonfun$MapEncodeJson$2:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/Tuple2;)Lscala/Tuple2;
  #626 = MethodHandle       6:#625        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$MapEncodeJson$2:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/Tuple2;)Lscala/Tuple2;
  #627 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
  #628 = MethodType         #627          //  (Lscala/Tuple2;)Lscala/Tuple2;
  #629 = InvokeDynamic      #17:#215      // #17:apply:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Lscala/Function1;
  #630 = Utf8               jObjectAssocList
  #631 = NameAndType        #630:#88      // jObjectAssocList:(Lscala/collection/immutable/List;)Largonaut/Json;
  #632 = Methodref          #248.#631     // argonaut/Json$.jObjectAssocList:(Lscala/collection/immutable/List;)Largonaut/Json;
  #633 = Utf8               Lscala/collection/immutable/Map;
  #634 = Utf8               $anonfun$SetEncodeJson$2
  #635 = Utf8               (Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
  #636 = Utf8               x$11
  #637 = Utf8               scala/collection/immutable/Set
  #638 = Class              #637          // scala/collection/immutable/Set
  #639 = InterfaceMethodref #638.#294     // scala/collection/immutable/Set.toList:()Lscala/collection/immutable/List;
  #640 = Utf8               Lscala/collection/immutable/Set;
  #641 = Utf8               e$6
  #642 = Utf8               x$12
  #643 = NameAndType        #634:#635     // $anonfun$SetEncodeJson$2:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
  #644 = InterfaceMethodref #2.#643       // argonaut/EncodeJsons.$anonfun$SetEncodeJson$2:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
  #645 = MethodHandle       6:#644        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$SetEncodeJson$2:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
  #646 = MethodType         #635          //  (Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
  #647 = InvokeDynamic      #18:#373      // #18:apply:()Lscala/Function1;
  #648 = Utf8               contramap
  #649 = NameAndType        #648:#103     // contramap:(Lscala/Function1;)Largonaut/EncodeJson;
  #650 = InterfaceMethodref #261.#649     // argonaut/EncodeJson.contramap:(Lscala/Function1;)Largonaut/EncodeJson;
  #651 = Utf8               $init$
  #652 = Utf8               (Largonaut/EncodeJsons;)V
  #653 = NameAndType        #232:#233     // $anonfun$JsonEncodeJson$1:(Largonaut/Json;)Largonaut/Json;
  #654 = InterfaceMethodref #2.#653       // argonaut/EncodeJsons.$anonfun$JsonEncodeJson$1:(Largonaut/Json;)Largonaut/Json;
  #655 = MethodHandle       6:#654        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JsonEncodeJson$1:(Largonaut/Json;)Largonaut/Json;
  #656 = MethodType         #233          //  (Largonaut/Json;)Largonaut/Json;
  #657 = InvokeDynamic      #19:#373      // #19:apply:()Lscala/Function1;
  #658 = NameAndType        #16:#17       // argonaut$EncodeJsons$_setter_$JsonEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #659 = InterfaceMethodref #2.#658       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$JsonEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #660 = NameAndType        #236:#237     // $anonfun$HCursorEncodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
  #661 = InterfaceMethodref #2.#660       // argonaut/EncodeJsons.$anonfun$HCursorEncodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
  #662 = MethodHandle       6:#661        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$HCursorEncodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
  #663 = MethodType         #237          //  (Largonaut/HCursor;)Largonaut/Json;
  #664 = InvokeDynamic      #20:#373      // #20:apply:()Lscala/Function1;
  #665 = NameAndType        #20:#17       // argonaut$EncodeJsons$_setter_$HCursorEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #666 = InterfaceMethodref #2.#665       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$HCursorEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #667 = NameAndType        #245:#246     // $anonfun$UnitEncodeJson$1:(Lscala/runtime/BoxedUnit;)Largonaut/Json;
  #668 = InterfaceMethodref #2.#667       // argonaut/EncodeJsons.$anonfun$UnitEncodeJson$1:(Lscala/runtime/BoxedUnit;)Largonaut/Json;
  #669 = MethodHandle       6:#668        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$UnitEncodeJson$1:(Lscala/runtime/BoxedUnit;)Largonaut/Json;
  #670 = MethodType         #246          //  (Lscala/runtime/BoxedUnit;)Largonaut/Json;
  #671 = InvokeDynamic      #21:#373      // #21:apply:()Lscala/Function1;
  #672 = NameAndType        #22:#17       // argonaut$EncodeJsons$_setter_$UnitEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #673 = InterfaceMethodref #2.#672       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$UnitEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #674 = NameAndType        #24:#17       // argonaut$EncodeJsons$_setter_$StringEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #675 = InterfaceMethodref #2.#674       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$StringEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #676 = NameAndType        #133:#58      // StringEncodeJson:()Largonaut/EncodeJson;
  #677 = InterfaceMethodref #2.#676       // argonaut/EncodeJsons.StringEncodeJson:()Largonaut/EncodeJson;
  #678 = NameAndType        #308:#309     // $anonfun$UUIDEncodeJson$1:(Ljava/util/UUID;)Ljava/lang/String;
  #679 = InterfaceMethodref #2.#678       // argonaut/EncodeJsons.$anonfun$UUIDEncodeJson$1:(Ljava/util/UUID;)Ljava/lang/String;
  #680 = MethodHandle       6:#679        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$UUIDEncodeJson$1:(Ljava/util/UUID;)Ljava/lang/String;
  #681 = MethodType         #309          //  (Ljava/util/UUID;)Ljava/lang/String;
  #682 = InvokeDynamic      #22:#373      // #22:apply:()Lscala/Function1;
  #683 = NameAndType        #26:#17       // argonaut$EncodeJsons$_setter_$UUIDEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #684 = InterfaceMethodref #2.#683       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$UUIDEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #685 = Utf8               $anonfun$DoubleEncodeJson$1$adapted
  #686 = NameAndType        #685:#262     // $anonfun$DoubleEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #687 = InterfaceMethodref #2.#686       // argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #688 = MethodHandle       6:#687        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #689 = InvokeDynamic      #23:#373      // #23:apply:()Lscala/Function1;
  #690 = NameAndType        #28:#17       // argonaut$EncodeJsons$_setter_$DoubleEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #691 = InterfaceMethodref #2.#690       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$DoubleEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #692 = Utf8               $anonfun$FloatEncodeJson$1$adapted
  #693 = NameAndType        #692:#262     // $anonfun$FloatEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #694 = InterfaceMethodref #2.#693       // argonaut/EncodeJsons.$anonfun$FloatEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #695 = MethodHandle       6:#694        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$FloatEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #696 = InvokeDynamic      #24:#373      // #24:apply:()Lscala/Function1;
  #697 = NameAndType        #30:#17       // argonaut$EncodeJsons$_setter_$FloatEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #698 = InterfaceMethodref #2.#697       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$FloatEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #699 = Utf8               $anonfun$IntEncodeJson$1$adapted
  #700 = NameAndType        #699:#262     // $anonfun$IntEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #701 = InterfaceMethodref #2.#700       // argonaut/EncodeJsons.$anonfun$IntEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #702 = MethodHandle       6:#701        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$IntEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #703 = InvokeDynamic      #25:#373      // #25:apply:()Lscala/Function1;
  #704 = NameAndType        #31:#17       // argonaut$EncodeJsons$_setter_$IntEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #705 = InterfaceMethodref #2.#704       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$IntEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #706 = Utf8               $anonfun$LongEncodeJson$1$adapted
  #707 = NameAndType        #706:#262     // $anonfun$LongEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #708 = InterfaceMethodref #2.#707       // argonaut/EncodeJsons.$anonfun$LongEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #709 = MethodHandle       6:#708        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$LongEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #710 = InvokeDynamic      #26:#373      // #26:apply:()Lscala/Function1;
  #711 = NameAndType        #32:#17       // argonaut$EncodeJsons$_setter_$LongEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #712 = InterfaceMethodref #2.#711       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$LongEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #713 = Utf8               $anonfun$ShortEncodeJson$1$adapted
  #714 = NameAndType        #713:#262     // $anonfun$ShortEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #715 = InterfaceMethodref #2.#714       // argonaut/EncodeJsons.$anonfun$ShortEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #716 = MethodHandle       6:#715        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$ShortEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #717 = InvokeDynamic      #27:#373      // #27:apply:()Lscala/Function1;
  #718 = NameAndType        #33:#17       // argonaut$EncodeJsons$_setter_$ShortEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #719 = InterfaceMethodref #2.#718       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$ShortEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #720 = Utf8               $anonfun$ByteEncodeJson$1$adapted
  #721 = NameAndType        #720:#262     // $anonfun$ByteEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #722 = InterfaceMethodref #2.#721       // argonaut/EncodeJsons.$anonfun$ByteEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #723 = MethodHandle       6:#722        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$ByteEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #724 = InvokeDynamic      #28:#373      // #28:apply:()Lscala/Function1;
  #725 = NameAndType        #34:#17       // argonaut$EncodeJsons$_setter_$ByteEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #726 = InterfaceMethodref #2.#725       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$ByteEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #727 = NameAndType        #448:#449     // $anonfun$BigDecimalEncodeJson$1:(Lscala/math/BigDecimal;)Largonaut/Json;
  #728 = InterfaceMethodref #2.#727       // argonaut/EncodeJsons.$anonfun$BigDecimalEncodeJson$1:(Lscala/math/BigDecimal;)Largonaut/Json;
  #729 = MethodHandle       6:#728        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$BigDecimalEncodeJson$1:(Lscala/math/BigDecimal;)Largonaut/Json;
  #730 = MethodType         #449          //  (Lscala/math/BigDecimal;)Largonaut/Json;
  #731 = InvokeDynamic      #29:#373      // #29:apply:()Lscala/Function1;
  #732 = NameAndType        #35:#17       // argonaut$EncodeJsons$_setter_$BigDecimalEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #733 = InterfaceMethodref #2.#732       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$BigDecimalEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #734 = NameAndType        #454:#455     // $anonfun$BigIntEncodeJson$1:(Lscala/math/BigInt;)Largonaut/Json;
  #735 = InterfaceMethodref #2.#734       // argonaut/EncodeJsons.$anonfun$BigIntEncodeJson$1:(Lscala/math/BigInt;)Largonaut/Json;
  #736 = MethodHandle       6:#735        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$BigIntEncodeJson$1:(Lscala/math/BigInt;)Largonaut/Json;
  #737 = MethodType         #455          //  (Lscala/math/BigInt;)Largonaut/Json;
  #738 = InvokeDynamic      #30:#373      // #30:apply:()Lscala/Function1;
  #739 = NameAndType        #37:#17       // argonaut$EncodeJsons$_setter_$BigIntEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #740 = InterfaceMethodref #2.#739       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$BigIntEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #741 = NameAndType        #39:#17       // argonaut$EncodeJsons$_setter_$BooleanEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #742 = InterfaceMethodref #2.#741       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$BooleanEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #743 = Utf8               $anonfun$CharEncodeJson$1$adapted
  #744 = NameAndType        #743:#262     // $anonfun$CharEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #745 = InterfaceMethodref #2.#744       // argonaut/EncodeJsons.$anonfun$CharEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #746 = MethodHandle       6:#745        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$CharEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
  #747 = InvokeDynamic      #31:#373      // #31:apply:()Lscala/Function1;
  #748 = NameAndType        #40:#17       // argonaut$EncodeJsons$_setter_$CharEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #749 = InterfaceMethodref #2.#748       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$CharEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #750 = NameAndType        #474:#475     // $anonfun$JDoubleEncodeJson$1:(Ljava/lang/Double;)Largonaut/Json;
  #751 = InterfaceMethodref #2.#750       // argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$1:(Ljava/lang/Double;)Largonaut/Json;
  #752 = MethodHandle       6:#751        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$1:(Ljava/lang/Double;)Largonaut/Json;
  #753 = MethodType         #475          //  (Ljava/lang/Double;)Largonaut/Json;
  #754 = InvokeDynamic      #32:#373      // #32:apply:()Lscala/Function1;
  #755 = NameAndType        #41:#17       // argonaut$EncodeJsons$_setter_$JDoubleEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #756 = InterfaceMethodref #2.#755       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$JDoubleEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #757 = NameAndType        #491:#492     // $anonfun$JFloatEncodeJson$1:(Ljava/lang/Float;)Largonaut/Json;
  #758 = InterfaceMethodref #2.#757       // argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$1:(Ljava/lang/Float;)Largonaut/Json;
  #759 = MethodHandle       6:#758        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$1:(Ljava/lang/Float;)Largonaut/Json;
  #760 = MethodType         #492          //  (Ljava/lang/Float;)Largonaut/Json;
  #761 = InvokeDynamic      #33:#373      // #33:apply:()Lscala/Function1;
  #762 = NameAndType        #43:#17       // argonaut$EncodeJsons$_setter_$JFloatEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #763 = InterfaceMethodref #2.#762       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$JFloatEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #764 = NameAndType        #505:#506     // $anonfun$JIntegerEncodeJson$1:(Ljava/lang/Integer;)Largonaut/Json;
  #765 = InterfaceMethodref #2.#764       // argonaut/EncodeJsons.$anonfun$JIntegerEncodeJson$1:(Ljava/lang/Integer;)Largonaut/Json;
  #766 = MethodHandle       6:#765        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JIntegerEncodeJson$1:(Ljava/lang/Integer;)Largonaut/Json;
  #767 = MethodType         #506          //  (Ljava/lang/Integer;)Largonaut/Json;
  #768 = InvokeDynamic      #34:#373      // #34:apply:()Lscala/Function1;
  #769 = NameAndType        #45:#17       // argonaut$EncodeJsons$_setter_$JIntegerEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #770 = InterfaceMethodref #2.#769       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$JIntegerEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #771 = NameAndType        #511:#512     // $anonfun$JLongEncodeJson$1:(Ljava/lang/Long;)Largonaut/Json;
  #772 = InterfaceMethodref #2.#771       // argonaut/EncodeJsons.$anonfun$JLongEncodeJson$1:(Ljava/lang/Long;)Largonaut/Json;
  #773 = MethodHandle       6:#772        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JLongEncodeJson$1:(Ljava/lang/Long;)Largonaut/Json;
  #774 = MethodType         #512          //  (Ljava/lang/Long;)Largonaut/Json;
  #775 = InvokeDynamic      #35:#373      // #35:apply:()Lscala/Function1;
  #776 = NameAndType        #47:#17       // argonaut$EncodeJsons$_setter_$JLongEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #777 = InterfaceMethodref #2.#776       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$JLongEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #778 = NameAndType        #517:#518     // $anonfun$JShortEncodeJson$1:(Ljava/lang/Short;)Largonaut/Json;
  #779 = InterfaceMethodref #2.#778       // argonaut/EncodeJsons.$anonfun$JShortEncodeJson$1:(Ljava/lang/Short;)Largonaut/Json;
  #780 = MethodHandle       6:#779        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JShortEncodeJson$1:(Ljava/lang/Short;)Largonaut/Json;
  #781 = MethodType         #518          //  (Ljava/lang/Short;)Largonaut/Json;
  #782 = InvokeDynamic      #36:#373      // #36:apply:()Lscala/Function1;
  #783 = NameAndType        #49:#17       // argonaut$EncodeJsons$_setter_$JShortEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #784 = InterfaceMethodref #2.#783       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$JShortEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #785 = NameAndType        #523:#524     // $anonfun$JByteEncodeJson$1:(Ljava/lang/Byte;)Largonaut/Json;
  #786 = InterfaceMethodref #2.#785       // argonaut/EncodeJsons.$anonfun$JByteEncodeJson$1:(Ljava/lang/Byte;)Largonaut/Json;
  #787 = MethodHandle       6:#786        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JByteEncodeJson$1:(Ljava/lang/Byte;)Largonaut/Json;
  #788 = MethodType         #524          //  (Ljava/lang/Byte;)Largonaut/Json;
  #789 = InvokeDynamic      #37:#373      // #37:apply:()Lscala/Function1;
  #790 = NameAndType        #51:#17       // argonaut$EncodeJsons$_setter_$JByteEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #791 = InterfaceMethodref #2.#790       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$JByteEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #792 = NameAndType        #529:#530     // $anonfun$JBooleanEncodeJson$1:(Ljava/lang/Boolean;)Largonaut/Json;
  #793 = InterfaceMethodref #2.#792       // argonaut/EncodeJsons.$anonfun$JBooleanEncodeJson$1:(Ljava/lang/Boolean;)Largonaut/Json;
  #794 = MethodHandle       6:#793        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JBooleanEncodeJson$1:(Ljava/lang/Boolean;)Largonaut/Json;
  #795 = MethodType         #530          //  (Ljava/lang/Boolean;)Largonaut/Json;
  #796 = InvokeDynamic      #38:#373      // #38:apply:()Lscala/Function1;
  #797 = NameAndType        #53:#17       // argonaut$EncodeJsons$_setter_$JBooleanEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #798 = InterfaceMethodref #2.#797       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$JBooleanEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #799 = NameAndType        #545:#546     // $anonfun$JCharacterEncodeJson$1:(Ljava/lang/Character;)Largonaut/Json;
  #800 = InterfaceMethodref #2.#799       // argonaut/EncodeJsons.$anonfun$JCharacterEncodeJson$1:(Ljava/lang/Character;)Largonaut/Json;
  #801 = MethodHandle       6:#800        // REF_invokeStatic argonaut/EncodeJsons.$anonfun$JCharacterEncodeJson$1:(Ljava/lang/Character;)Largonaut/Json;
  #802 = MethodType         #546          //  (Ljava/lang/Character;)Largonaut/Json;
  #803 = InvokeDynamic      #39:#373      // #39:apply:()Lscala/Function1;
  #804 = NameAndType        #55:#17       // argonaut$EncodeJsons$_setter_$JCharacterEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #805 = InterfaceMethodref #2.#804       // argonaut/EncodeJsons.argonaut$EncodeJsons$_setter_$JCharacterEncodeJson_$eq:(Largonaut/EncodeJson;)V
  #806 = Utf8               unboxToDouble
  #807 = Utf8               (Ljava/lang/Object;)D
  #808 = NameAndType        #806:#807     // unboxToDouble:(Ljava/lang/Object;)D
  #809 = Methodref          #339.#808     // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #810 = NameAndType        #331:#332     // $anonfun$DoubleEncodeJson$1:(D)Largonaut/Json;
  #811 = InterfaceMethodref #2.#810       // argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$1:(D)Largonaut/Json;
  #812 = Utf8               unboxToFloat
  #813 = Utf8               (Ljava/lang/Object;)F
  #814 = NameAndType        #812:#813     // unboxToFloat:(Ljava/lang/Object;)F
  #815 = Methodref          #339.#814     // scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
  #816 = NameAndType        #385:#386     // $anonfun$FloatEncodeJson$1:(F)Largonaut/Json;
  #817 = InterfaceMethodref #2.#816       // argonaut/EncodeJsons.$anonfun$FloatEncodeJson$1:(F)Largonaut/Json;
  #818 = Utf8               unboxToInt
  #819 = Utf8               (Ljava/lang/Object;)I
  #820 = NameAndType        #818:#819     // unboxToInt:(Ljava/lang/Object;)I
  #821 = Methodref          #339.#820     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #822 = NameAndType        #403:#404     // $anonfun$IntEncodeJson$1:(I)Largonaut/Json;
  #823 = InterfaceMethodref #2.#822       // argonaut/EncodeJsons.$anonfun$IntEncodeJson$1:(I)Largonaut/Json;
  #824 = Utf8               unboxToLong
  #825 = Utf8               (Ljava/lang/Object;)J
  #826 = NameAndType        #824:#825     // unboxToLong:(Ljava/lang/Object;)J
  #827 = Methodref          #339.#826     // scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
  #828 = NameAndType        #418:#419     // $anonfun$LongEncodeJson$1:(J)Largonaut/Json;
  #829 = InterfaceMethodref #2.#828       // argonaut/EncodeJsons.$anonfun$LongEncodeJson$1:(J)Largonaut/Json;
  #830 = Utf8               unboxToShort
  #831 = Utf8               (Ljava/lang/Object;)S
  #832 = NameAndType        #830:#831     // unboxToShort:(Ljava/lang/Object;)S
  #833 = Methodref          #339.#832     // scala/runtime/BoxesRunTime.unboxToShort:(Ljava/lang/Object;)S
  #834 = NameAndType        #428:#429     // $anonfun$ShortEncodeJson$1:(S)Largonaut/Json;
  #835 = InterfaceMethodref #2.#834       // argonaut/EncodeJsons.$anonfun$ShortEncodeJson$1:(S)Largonaut/Json;
  #836 = Utf8               unboxToByte
  #837 = Utf8               (Ljava/lang/Object;)B
  #838 = NameAndType        #836:#837     // unboxToByte:(Ljava/lang/Object;)B
  #839 = Methodref          #339.#838     // scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
  #840 = NameAndType        #438:#439     // $anonfun$ByteEncodeJson$1:(B)Largonaut/Json;
  #841 = InterfaceMethodref #2.#840       // argonaut/EncodeJsons.$anonfun$ByteEncodeJson$1:(B)Largonaut/Json;
  #842 = Utf8               unboxToChar
  #843 = Utf8               (Ljava/lang/Object;)C
  #844 = NameAndType        #842:#843     // unboxToChar:(Ljava/lang/Object;)C
  #845 = Methodref          #339.#844     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #846 = NameAndType        #460:#461     // $anonfun$CharEncodeJson$1:(C)Largonaut/Json;
  #847 = InterfaceMethodref #2.#846       // argonaut/EncodeJsons.$anonfun$CharEncodeJson$1:(C)Largonaut/Json;
  #848 = Utf8               $deserializeLambda$
  #849 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #850 = Utf8               scala/runtime/LambdaDeserialize
  #851 = Class              #850          // scala/runtime/LambdaDeserialize
  #852 = Utf8               bootstrap
  #853 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #854 = NameAndType        #852:#853     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #855 = Methodref          #851.#854     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #856 = MethodHandle       6:#855        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #857 = Utf8               lambdaDeserialize
  #858 = NameAndType        #857:#849     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #859 = InvokeDynamic      #40:#858      // #40:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #860 = Utf8               Signature
  #861 = Utf8               MethodParameters
  #862 = Utf8               Code
  #863 = Utf8               LineNumberTable
  #864 = Utf8               LocalVariableTable
  #865 = Utf8               StackMapTable
  #866 = Utf8               InnerClasses
  #867 = Utf8               SourceFile
  #868 = Utf8               RuntimeVisibleAnnotations
  #869 = Utf8               BootstrapMethods
  #870 = Utf8               ScalaInlineInfo
  #871 = Utf8               ScalaSig
{
  public abstract void argonaut$EncodeJsons$_setter_$JsonEncodeJson_$eq(argonaut.EncodeJson<argonaut.Json>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #18                          // (Largonaut/EncodeJson<Largonaut/Json;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$HCursorEncodeJson_$eq(argonaut.EncodeJson<argonaut.HCursor>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #21                          // (Largonaut/EncodeJson<Largonaut/HCursor;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$UnitEncodeJson_$eq(argonaut.EncodeJson<scala.runtime.BoxedUnit>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #23                          // (Largonaut/EncodeJson<Lscala/runtime/BoxedUnit;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$StringEncodeJson_$eq(argonaut.EncodeJson<java.lang.String>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #25                          // (Largonaut/EncodeJson<Ljava/lang/String;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$UUIDEncodeJson_$eq(argonaut.EncodeJson<java.util.UUID>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #27                          // (Largonaut/EncodeJson<Ljava/util/UUID;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$DoubleEncodeJson_$eq(argonaut.EncodeJson<java.lang.Object>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #29                          // (Largonaut/EncodeJson<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$FloatEncodeJson_$eq(argonaut.EncodeJson<java.lang.Object>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #29                          // (Largonaut/EncodeJson<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$IntEncodeJson_$eq(argonaut.EncodeJson<java.lang.Object>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #29                          // (Largonaut/EncodeJson<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$LongEncodeJson_$eq(argonaut.EncodeJson<java.lang.Object>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #29                          // (Largonaut/EncodeJson<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$ShortEncodeJson_$eq(argonaut.EncodeJson<java.lang.Object>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #29                          // (Largonaut/EncodeJson<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$ByteEncodeJson_$eq(argonaut.EncodeJson<java.lang.Object>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #29                          // (Largonaut/EncodeJson<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$BigDecimalEncodeJson_$eq(argonaut.EncodeJson<scala.math.BigDecimal>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #36                          // (Largonaut/EncodeJson<Lscala/math/BigDecimal;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$BigIntEncodeJson_$eq(argonaut.EncodeJson<scala.math.BigInt>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #38                          // (Largonaut/EncodeJson<Lscala/math/BigInt;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$BooleanEncodeJson_$eq(argonaut.EncodeJson<java.lang.Object>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #29                          // (Largonaut/EncodeJson<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$CharEncodeJson_$eq(argonaut.EncodeJson<java.lang.Object>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #29                          // (Largonaut/EncodeJson<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$JDoubleEncodeJson_$eq(argonaut.EncodeJson<java.lang.Double>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #42                          // (Largonaut/EncodeJson<Ljava/lang/Double;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$JFloatEncodeJson_$eq(argonaut.EncodeJson<java.lang.Float>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #44                          // (Largonaut/EncodeJson<Ljava/lang/Float;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$JIntegerEncodeJson_$eq(argonaut.EncodeJson<java.lang.Integer>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #46                          // (Largonaut/EncodeJson<Ljava/lang/Integer;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$JLongEncodeJson_$eq(argonaut.EncodeJson<java.lang.Long>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #48                          // (Largonaut/EncodeJson<Ljava/lang/Long;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$JShortEncodeJson_$eq(argonaut.EncodeJson<java.lang.Short>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #50                          // (Largonaut/EncodeJson<Ljava/lang/Short;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$JByteEncodeJson_$eq(argonaut.EncodeJson<java.lang.Byte>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #52                          // (Largonaut/EncodeJson<Ljava/lang/Byte;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$JBooleanEncodeJson_$eq(argonaut.EncodeJson<java.lang.Boolean>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #54                          // (Largonaut/EncodeJson<Ljava/lang/Boolean;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$EncodeJsons$_setter_$JCharacterEncodeJson_$eq(argonaut.EncodeJson<java.lang.Character>);
    descriptor: (Largonaut/EncodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #56                          // (Largonaut/EncodeJson<Ljava/lang/Character;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract argonaut.EncodeJson<argonaut.Json> JsonEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #59                          // ()Largonaut/EncodeJson<Largonaut/Json;>;

  public abstract argonaut.EncodeJson<argonaut.HCursor> HCursorEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #61                          // ()Largonaut/EncodeJson<Largonaut/HCursor;>;

  public abstract argonaut.EncodeJson<scala.runtime.BoxedUnit> UnitEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #63                          // ()Largonaut/EncodeJson<Lscala/runtime/BoxedUnit;>;

  public static argonaut.EncodeJson ListEncodeJson$(argonaut.EncodeJsons, argonaut.EncodeJson);
    descriptor: (Largonaut/EncodeJsons;Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #71                 // InterfaceMethod ListEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
         5: areturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/EncodeJsons;
            0       6     1     e   Largonaut/EncodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.EncodeJson<scala.collection.immutable.List<A>> ListEncodeJson(argonaut.EncodeJson<A>);
    descriptor: (Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
         3: aload_1
         4: invokedynamic #102,  0            // InvokeDynamic #0:apply:(Largonaut/EncodeJson;)Lscala/Function1;
         9: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        12: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/EncodeJsons;
            0      13     1     e   Largonaut/EncodeJson;
    Signature: #74                          // <A:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;)Largonaut/EncodeJson<Lscala/collection/immutable/List<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.EncodeJson VectorEncodeJson$(argonaut.EncodeJsons, argonaut.EncodeJson);
    descriptor: (Largonaut/EncodeJsons;Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #110                // InterfaceMethod VectorEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
         5: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/EncodeJsons;
            0       6     1     e   Largonaut/EncodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.EncodeJson<scala.collection.immutable.Vector<A>> VectorEncodeJson(argonaut.EncodeJson<scala.collection.immutable.List<A>>);
    descriptor: (Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
         3: aload_1
         4: invokedynamic #119,  0            // InvokeDynamic #1:apply:(Largonaut/EncodeJson;)Lscala/Function1;
         9: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        12: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/EncodeJsons;
            0      13     1     e   Largonaut/EncodeJson;
    Signature: #111                         // <A:Ljava/lang/Object;>(Largonaut/EncodeJson<Lscala/collection/immutable/List<TA;>;>;)Largonaut/EncodeJson<Lscala/collection/immutable/Vector<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.EncodeJson StreamEncodeJson$(argonaut.EncodeJsons, argonaut.EncodeJson);
    descriptor: (Largonaut/EncodeJsons;Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #123                // InterfaceMethod StreamEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
         5: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/EncodeJsons;
            0       6     1     e   Largonaut/EncodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.EncodeJson<scala.collection.immutable.Stream<A>> StreamEncodeJson(argonaut.EncodeJson<A>);
    descriptor: (Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
         3: aload_1
         4: invokedynamic #132,  0            // InvokeDynamic #2:apply:(Largonaut/EncodeJson;)Lscala/Function1;
         9: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        12: areturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/EncodeJsons;
            0      13     1     e   Largonaut/EncodeJson;
    Signature: #124                         // <A:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;)Largonaut/EncodeJson<Lscala/collection/immutable/Stream<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public abstract argonaut.EncodeJson<java.lang.String> StringEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #134                         // ()Largonaut/EncodeJson<Ljava/lang/String;>;

  public abstract argonaut.EncodeJson<java.util.UUID> UUIDEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #136                         // ()Largonaut/EncodeJson<Ljava/util/UUID;>;

  public abstract argonaut.EncodeJson<java.lang.Object> DoubleEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #138                         // ()Largonaut/EncodeJson<Ljava/lang/Object;>;

  public abstract argonaut.EncodeJson<java.lang.Object> FloatEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #138                         // ()Largonaut/EncodeJson<Ljava/lang/Object;>;

  public abstract argonaut.EncodeJson<java.lang.Object> IntEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #138                         // ()Largonaut/EncodeJson<Ljava/lang/Object;>;

  public abstract argonaut.EncodeJson<java.lang.Object> LongEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #138                         // ()Largonaut/EncodeJson<Ljava/lang/Object;>;

  public abstract argonaut.EncodeJson<java.lang.Object> ShortEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #138                         // ()Largonaut/EncodeJson<Ljava/lang/Object;>;

  public abstract argonaut.EncodeJson<java.lang.Object> ByteEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #138                         // ()Largonaut/EncodeJson<Ljava/lang/Object;>;

  public abstract argonaut.EncodeJson<scala.math.BigDecimal> BigDecimalEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #145                         // ()Largonaut/EncodeJson<Lscala/math/BigDecimal;>;

  public abstract argonaut.EncodeJson<scala.math.BigInt> BigIntEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #147                         // ()Largonaut/EncodeJson<Lscala/math/BigInt;>;

  public abstract argonaut.EncodeJson<java.lang.Object> BooleanEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #138                         // ()Largonaut/EncodeJson<Ljava/lang/Object;>;

  public abstract argonaut.EncodeJson<java.lang.Object> CharEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #138                         // ()Largonaut/EncodeJson<Ljava/lang/Object;>;

  public abstract argonaut.EncodeJson<java.lang.Double> JDoubleEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #151                         // ()Largonaut/EncodeJson<Ljava/lang/Double;>;

  public abstract argonaut.EncodeJson<java.lang.Float> JFloatEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #153                         // ()Largonaut/EncodeJson<Ljava/lang/Float;>;

  public abstract argonaut.EncodeJson<java.lang.Integer> JIntegerEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #155                         // ()Largonaut/EncodeJson<Ljava/lang/Integer;>;

  public abstract argonaut.EncodeJson<java.lang.Long> JLongEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #157                         // ()Largonaut/EncodeJson<Ljava/lang/Long;>;

  public abstract argonaut.EncodeJson<java.lang.Short> JShortEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #159                         // ()Largonaut/EncodeJson<Ljava/lang/Short;>;

  public abstract argonaut.EncodeJson<java.lang.Byte> JByteEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #161                         // ()Largonaut/EncodeJson<Ljava/lang/Byte;>;

  public abstract argonaut.EncodeJson<java.lang.Boolean> JBooleanEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #163                         // ()Largonaut/EncodeJson<Ljava/lang/Boolean;>;

  public abstract argonaut.EncodeJson<java.lang.Character> JCharacterEncodeJson();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #165                         // ()Largonaut/EncodeJson<Ljava/lang/Character;>;

  public static argonaut.EncodeJson OptionEncodeJson$(argonaut.EncodeJsons, argonaut.EncodeJson);
    descriptor: (Largonaut/EncodeJsons;Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #169                // InterfaceMethod OptionEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
         5: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/EncodeJsons;
            0       6     1     e   Largonaut/EncodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.EncodeJson<scala.Option<A>> OptionEncodeJson(argonaut.EncodeJson<A>);
    descriptor: (Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
         3: aload_1
         4: invokedynamic #178,  0            // InvokeDynamic #3:apply:(Largonaut/EncodeJson;)Lscala/Function1;
         9: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        12: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/EncodeJsons;
            0      13     1     e   Largonaut/EncodeJson;
    Signature: #170                         // <A:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;)Largonaut/EncodeJson<Lscala/Option<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.EncodeJson EitherEncodeJson$(argonaut.EncodeJsons, argonaut.EncodeJson, argonaut.EncodeJson);
    descriptor: (Largonaut/EncodeJsons;Largonaut/EncodeJson;Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #186                // InterfaceMethod EitherEncodeJson:(Largonaut/EncodeJson;Largonaut/EncodeJson;)Largonaut/EncodeJson;
         6: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Largonaut/EncodeJsons;
            0       7     1    ea   Largonaut/EncodeJson;
            0       7     2    eb   Largonaut/EncodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      ea                             final
      eb                             final

  public default <A extends java.lang.Object, B extends java.lang.Object> argonaut.EncodeJson<scala.util.Either<A, B>> EitherEncodeJson(argonaut.EncodeJson<A>, argonaut.EncodeJson<B>);
    descriptor: (Largonaut/EncodeJson;Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
         3: aload_1
         4: aload_2
         5: invokedynamic #197,  0            // InvokeDynamic #4:apply:(Largonaut/EncodeJson;Largonaut/EncodeJson;)Lscala/Function1;
        10: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        13: areturn
      LineNumberTable:
        line 154: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/EncodeJsons;
            0      14     1    ea   Largonaut/EncodeJson;
            0      14     2    eb   Largonaut/EncodeJson;
    Signature: #187                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;Largonaut/EncodeJson<TB;>;)Largonaut/EncodeJson<Lscala/util/Either<TA;TB;>;>;
    MethodParameters:
      Name                           Flags
      ea                             final
      eb                             final

  public static argonaut.EncodeJson MapEncodeJson$(argonaut.EncodeJsons, argonaut.EncodeJsonKey, argonaut.EncodeJson);
    descriptor: (Largonaut/EncodeJsons;Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #204                // InterfaceMethod MapEncodeJson:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Largonaut/EncodeJson;
         6: areturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Largonaut/EncodeJsons;
            0       7     1     K   Largonaut/EncodeJsonKey;
            0       7     2     e   Largonaut/EncodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      K                              final
      e                              final

  public default <K extends java.lang.Object, V extends java.lang.Object> argonaut.EncodeJson<scala.collection.immutable.Map<K, V>> MapEncodeJson(argonaut.EncodeJsonKey<K>, argonaut.EncodeJson<V>);
    descriptor: (Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
         3: aload_1
         4: aload_2
         5: invokedynamic #216,  0            // InvokeDynamic #5:apply:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Lscala/Function1;
        10: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        13: areturn
      LineNumberTable:
        line 161: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/EncodeJsons;
            0      14     1     K   Largonaut/EncodeJsonKey;
            0      14     2     e   Largonaut/EncodeJson;
    Signature: #206                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Largonaut/EncodeJsonKey<TK;>;Largonaut/EncodeJson<TV;>;)Largonaut/EncodeJson<Lscala/collection/immutable/Map<TK;TV;>;>;
    MethodParameters:
      Name                           Flags
      K                              final
      e                              final

  public static argonaut.EncodeJson SetEncodeJson$(argonaut.EncodeJsons, argonaut.EncodeJson);
    descriptor: (Largonaut/EncodeJsons;Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #220                // InterfaceMethod SetEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
         5: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/EncodeJsons;
            0       6     1     e   Largonaut/EncodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.EncodeJson<scala.collection.immutable.Set<A>> SetEncodeJson(argonaut.EncodeJson<A>);
    descriptor: (Largonaut/EncodeJson;)Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
         3: aload_0
         4: aload_1
         5: invokedynamic #231,  0            // InvokeDynamic #6:apply:(Largonaut/EncodeJsons;Largonaut/EncodeJson;)Lscala/Function1;
        10: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        13: areturn
      LineNumberTable:
        line 169: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/EncodeJsons;
            0      14     1     e   Largonaut/EncodeJson;
    Signature: #221                         // <A:Ljava/lang/Object;>(Largonaut/EncodeJson<TA;>;)Largonaut/EncodeJson<Lscala/collection/immutable/Set<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.Json $anonfun$JsonEncodeJson$1(argonaut.Json);
    descriptor: (Largonaut/Json;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0     q   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      q                              final

  public static argonaut.Json $anonfun$HCursorEncodeJson$1(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #243                // Method argonaut/HCursor.focus:()Largonaut/Json;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     q   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      q                              final

  public static argonaut.Json $anonfun$UnitEncodeJson$1(scala.runtime.BoxedUnit);
    descriptor: (Lscala/runtime/BoxedUnit;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #254                // Method argonaut/Json$.jEmptyObject:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0   x$1   Lscala/runtime/BoxedUnit;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static argonaut.Json $anonfun$ListEncodeJson$2(argonaut.EncodeJson, java.lang.Object);
    descriptor: (Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #264,  2          // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   e$1   Largonaut/EncodeJson;
            0       8     1   x$2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      e$1                            final
      x$2                            final

  public static argonaut.Json $anonfun$ListEncodeJson$1(argonaut.EncodeJson, scala.collection.immutable.List);
    descriptor: (Largonaut/EncodeJson;Lscala/collection/immutable/List;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #270                // Method argonaut/Json$.jArray:()Lscala/Function1;
         6: aload_1
         7: aload_0
         8: invokedynamic #275,  0            // InvokeDynamic #7:apply:(Largonaut/EncodeJson;)Lscala/Function1;
        13: invokevirtual #281                // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
        16: invokeinterface #285,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        21: checkcast     #287                // class argonaut/Json
        24: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0   e$1   Largonaut/EncodeJson;
            0      25     1     a   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      e$1                            final
      a                              final

  public static argonaut.Json $anonfun$VectorEncodeJson$1(argonaut.EncodeJson, scala.collection.immutable.Vector);
    descriptor: (Largonaut/EncodeJson;Lscala/collection/immutable/Vector;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #295                // Method scala/collection/immutable/Vector.toList:()Lscala/collection/immutable/List;
         5: invokeinterface #264,  2          // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
        10: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   e$2   Largonaut/EncodeJson;
            0      11     1     a   Lscala/collection/immutable/Vector;
    MethodParameters:
      Name                           Flags
      e$2                            final
      a                              final

  public static argonaut.Json $anonfun$StreamEncodeJson$2(argonaut.EncodeJson, java.lang.Object);
    descriptor: (Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #264,  2          // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   e$3   Largonaut/EncodeJson;
            0       8     1   x$3   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      e$3                            final
      x$3                            final

  public static argonaut.Json $anonfun$StreamEncodeJson$1(argonaut.EncodeJson, scala.collection.immutable.Stream);
    descriptor: (Largonaut/EncodeJson;Lscala/collection/immutable/Stream;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #270                // Method argonaut/Json$.jArray:()Lscala/Function1;
         6: aload_1
         7: invokevirtual #302                // Method scala/collection/immutable/Stream.toList:()Lscala/collection/immutable/List;
        10: aload_0
        11: invokedynamic #306,  0            // InvokeDynamic #8:apply:(Largonaut/EncodeJson;)Lscala/Function1;
        16: invokevirtual #281                // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
        19: invokeinterface #285,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        24: checkcast     #287                // class argonaut/Json
        27: areturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0   e$3   Largonaut/EncodeJson;
            0      28     1     a   Lscala/collection/immutable/Stream;
    MethodParameters:
      Name                           Flags
      e$3                            final
      a                              final

  public static java.lang.String $anonfun$UUIDEncodeJson$1(java.util.UUID);
    descriptor: (Ljava/util/UUID;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #316                // Method java/util/UUID.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$4   Ljava/util/UUID;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static argonaut.Json $anonfun$DoubleEncodeJson$2();
    descriptor: ()Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #321                // Method argonaut/Json$.jNull:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 93: 0

  public static argonaut.Json $anonfun$DoubleEncodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$5   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static argonaut.Json $anonfun$DoubleEncodeJson$1(double);
    descriptor: (D)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: dload_0
         7: invokestatic  #343                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
        10: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        13: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        16: invokevirtual #355                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberDouble:()Largonaut/EncodePossibleJsonNumber;
        19: invokevirtual #359                // Method argonaut/JsonIdentity$.asPossibleJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodePossibleJsonNumber;)Lscala/Option;
        22: invokedynamic #368,  0            // InvokeDynamic #9:apply:()Lscala/Function0;
        27: invokedynamic #374,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
        32: invokevirtual #380                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        35: checkcast     #287                // class argonaut/Json
        38: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0     a   D
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$FloatEncodeJson$2();
    descriptor: ()Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #321                // Method argonaut/Json$.jNull:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 96: 0

  public static argonaut.Json $anonfun$FloatEncodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
         4: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$6   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static argonaut.Json $anonfun$FloatEncodeJson$1(float);
    descriptor: (F)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: fload_0
         7: invokestatic  #390                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
        10: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        13: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        16: invokevirtual #393                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberFloat:()Largonaut/EncodePossibleJsonNumber;
        19: invokevirtual #359                // Method argonaut/JsonIdentity$.asPossibleJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodePossibleJsonNumber;)Lscala/Option;
        22: invokedynamic #397,  0            // InvokeDynamic #11:apply:()Lscala/Function0;
        27: invokedynamic #401,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
        32: invokevirtual #380                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        35: checkcast     #287                // class argonaut/Json
        38: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0     a   F
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$IntEncodeJson$1(int);
    descriptor: (I)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: iload_0
         7: invokestatic  #408                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        10: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        13: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        16: invokevirtual #412                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberInt:()Largonaut/EncodeJsonNumber;
        19: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        22: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        25: areturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0     a   I
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$LongEncodeJson$1(long);
    descriptor: (J)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: lload_0
         7: invokestatic  #423                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        10: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        13: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        16: invokevirtual #426                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberLong:()Largonaut/EncodeJsonNumber;
        19: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        22: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        25: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0     a   J
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$ShortEncodeJson$1(short);
    descriptor: (S)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: iload_0
         7: invokestatic  #433                // Method scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
        10: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        13: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        16: invokevirtual #436                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberShort:()Largonaut/EncodeJsonNumber;
        19: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        22: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        25: areturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0     a   S
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$ByteEncodeJson$1(byte);
    descriptor: (B)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: iload_0
         7: invokestatic  #443                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
        10: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        13: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        16: invokevirtual #446                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberByte:()Largonaut/EncodeJsonNumber;
        19: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        22: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        25: areturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0     a   B
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$BigDecimalEncodeJson$1(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: aload_0
         7: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        10: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        13: invokevirtual #452                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberBigDecimal:()Largonaut/EncodeJsonNumber;
        16: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        19: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        22: areturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0     a   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$BigIntEncodeJson$1(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: aload_0
         7: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        10: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        13: invokevirtual #458                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberBigInt:()Largonaut/EncodeJsonNumber;
        16: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        19: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        22: areturn
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0     a   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$CharEncodeJson$1(char);
    descriptor: (C)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #464                // Method argonaut/Json$.jString:()Lscala/Function1;
         6: iload_0
         7: invokestatic  #468                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
        10: invokevirtual #469                // Method java/lang/Object.toString:()Ljava/lang/String;
        13: invokeinterface #285,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        18: checkcast     #287                // class argonaut/Json
        21: areturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0     a   C
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$JDoubleEncodeJson$2();
    descriptor: ()Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #321                // Method argonaut/Json$.jNull:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 123: 0

  public static argonaut.Json $anonfun$JDoubleEncodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$7   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static argonaut.Json $anonfun$JDoubleEncodeJson$1(java.lang.Double);
    descriptor: (Ljava/lang/Double;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: aload_0
         7: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        10: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        13: invokevirtual #478                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberJavaDouble:()Largonaut/EncodePossibleJsonNumber;
        16: invokevirtual #359                // Method argonaut/JsonIdentity$.asPossibleJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodePossibleJsonNumber;)Lscala/Option;
        19: invokedynamic #482,  0            // InvokeDynamic #13:apply:()Lscala/Function0;
        24: invokedynamic #486,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
        29: invokevirtual #380                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        32: checkcast     #287                // class argonaut/Json
        35: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0     a   Ljava/lang/Double;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$JFloatEncodeJson$2();
    descriptor: ()Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #321                // Method argonaut/Json$.jNull:()Largonaut/Json;
         6: areturn
      LineNumberTable:
        line 126: 0

  public static argonaut.Json $anonfun$JFloatEncodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
         4: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$8   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public static argonaut.Json $anonfun$JFloatEncodeJson$1(java.lang.Float);
    descriptor: (Ljava/lang/Float;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: aload_0
         7: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        10: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        13: invokevirtual #495                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberJavaFloat:()Largonaut/EncodePossibleJsonNumber;
        16: invokevirtual #359                // Method argonaut/JsonIdentity$.asPossibleJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodePossibleJsonNumber;)Lscala/Option;
        19: invokedynamic #499,  0            // InvokeDynamic #15:apply:()Lscala/Function0;
        24: invokedynamic #503,  0            // InvokeDynamic #16:apply:()Lscala/Function1;
        29: invokevirtual #380                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        32: checkcast     #287                // class argonaut/Json
        35: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0     a   Ljava/lang/Float;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$JIntegerEncodeJson$1(java.lang.Integer);
    descriptor: (Ljava/lang/Integer;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: aload_0
         7: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        10: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        13: invokevirtual #509                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberJavaInteger:()Largonaut/EncodeJsonNumber;
        16: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        19: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        22: areturn
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0     a   Ljava/lang/Integer;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$JLongEncodeJson$1(java.lang.Long);
    descriptor: (Ljava/lang/Long;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: aload_0
         7: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        10: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        13: invokevirtual #515                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberJavaLong:()Largonaut/EncodeJsonNumber;
        16: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        19: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        22: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0     a   Ljava/lang/Long;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$JShortEncodeJson$1(java.lang.Short);
    descriptor: (Ljava/lang/Short;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: aload_0
         7: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        10: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        13: invokevirtual #521                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberJavaShort:()Largonaut/EncodeJsonNumber;
        16: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        19: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        22: areturn
      LineNumberTable:
        line 135: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0     a   Ljava/lang/Short;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$JByteEncodeJson$1(java.lang.Byte);
    descriptor: (Ljava/lang/Byte;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         3: getstatic     #337                // Field argonaut/JsonIdentity$.MODULE$:Largonaut/JsonIdentity$;
         6: aload_0
         7: invokevirtual #346                // Method argonaut/JsonIdentity$.ToJsonIdentity:(Ljava/lang/Object;)Ljava/lang/Object;
        10: getstatic     #351                // Field argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
        13: invokevirtual #527                // Method argonaut/EncodeJsonNumber$.encodeJsonNumberJavaByte:()Largonaut/EncodeJsonNumber;
        16: invokevirtual #416                // Method argonaut/JsonIdentity$.asJsonNumber$extension:(Ljava/lang/Object;Largonaut/EncodeJsonNumber;)Largonaut/JsonNumber;
        19: invokevirtual #329                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
        22: areturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0     a   Ljava/lang/Byte;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$JBooleanEncodeJson$1(java.lang.Boolean);
    descriptor: (Ljava/lang/Boolean;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #533                // Method argonaut/Json$.jBool:()Lscala/Function1;
         6: aload_0
         7: invokevirtual #539                // Method java/lang/Boolean.booleanValue:()Z
        10: invokestatic  #543                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        13: invokeinterface #285,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        18: checkcast     #287                // class argonaut/Json
        21: areturn
      LineNumberTable:
        line 141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0     a   Ljava/lang/Boolean;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$JCharacterEncodeJson$1(java.lang.Character);
    descriptor: (Ljava/lang/Character;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: invokevirtual #464                // Method argonaut/Json$.jString:()Lscala/Function1;
         6: aload_0
         7: invokevirtual #549                // Method java/lang/Character.toString:()Ljava/lang/String;
        10: invokeinterface #285,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        15: checkcast     #287                // class argonaut/Json
        18: areturn
      LineNumberTable:
        line 144: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0     a   Ljava/lang/Character;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$OptionEncodeJson$1(argonaut.EncodeJson, scala.Option);
    descriptor: (Largonaut/EncodeJson;Lscala/Option;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: getstatic     #557                // Field scala/None$.MODULE$:Lscala/None$;
         5: aload_3
         6: invokevirtual #561                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
         9: ifeq          22
        12: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        15: invokevirtual #321                // Method argonaut/Json$.jNull:()Largonaut/Json;
        18: astore_2
        19: goto          69
        22: goto          25
        25: aload_3
        26: instanceof    #563                // class scala/Some
        29: ifeq          57
        32: aload_3
        33: checkcast     #563                // class scala/Some
        36: astore        4
        38: aload         4
        40: invokevirtual #566                // Method scala/Some.value:()Ljava/lang/Object;
        43: astore        5
        45: aload_0
        46: aload         5
        48: invokeinterface #264,  2          // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
        53: astore_2
        54: goto          69
        57: goto          60
        60: new           #568                // class scala/MatchError
        63: dup
        64: aload_3
        65: invokespecial #572                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        68: athrow
        69: aload_2
        70: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 22
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 31 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class argonaut/EncodeJson, class scala/Option, class argonaut/Json, class scala/Option ]
          stack = []
      LineNumberTable:
        line 147: 0
        line 148: 2
        line 149: 25
        line 147: 60
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           43      14     5     a   Ljava/lang/Object;
            0      71     0   e$4   Largonaut/EncodeJson;
            0      71     1   x$9   Lscala/Option;
    MethodParameters:
      Name                           Flags
      e$4                            final
      x$9                            final

  public static argonaut.Json $anonfun$EitherEncodeJson$1(argonaut.EncodeJson, argonaut.EncodeJson, scala.util.Either);
    descriptor: (Largonaut/EncodeJson;Largonaut/EncodeJson;Lscala/util/Either;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=9, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #578                // class scala/util/Left
         8: ifeq          46
        11: aload         4
        13: checkcast     #578                // class scala/util/Left
        16: astore        5
        18: aload         5
        20: invokevirtual #579                // Method scala/util/Left.value:()Ljava/lang/Object;
        23: astore        6
        25: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        28: ldc_w         #581                // String Left
        31: aload_0
        32: aload         6
        34: invokeinterface #264,  2          // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
        39: invokevirtual #585                // Method argonaut/Json$.jSingleObject:(Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
        42: astore_3
        43: goto          105
        46: goto          49
        49: aload         4
        51: instanceof    #587                // class scala/util/Right
        54: ifeq          92
        57: aload         4
        59: checkcast     #587                // class scala/util/Right
        62: astore        7
        64: aload         7
        66: invokevirtual #588                // Method scala/util/Right.value:()Ljava/lang/Object;
        69: astore        8
        71: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        74: ldc_w         #590                // String Right
        77: aload_1
        78: aload         8
        80: invokeinterface #264,  2          // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
        85: invokevirtual #585                // Method argonaut/Json$.jSingleObject:(Ljava/lang/String;Largonaut/Json;)Largonaut/Json;
        88: astore_3
        89: goto          105
        92: goto          95
        95: new           #568                // class scala/MatchError
        98: dup
        99: aload         4
       101: invokespecial #572                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       104: athrow
       105: aload_3
       106: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 46
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 42 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/EncodeJson, class argonaut/EncodeJson, class scala/util/Either, class argonaut/Json, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 154: 0
        line 155: 3
        line 156: 49
        line 154: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      23     6     a   Ljava/lang/Object;
           69      23     8     b   Ljava/lang/Object;
            0     107     0  ea$1   Largonaut/EncodeJson;
            0     107     1  eb$1   Largonaut/EncodeJson;
            0     107     2  x$10   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      ea$1                           final
      eb$1                           final
      x$10                           final

  public static scala.Tuple2 $anonfun$MapEncodeJson$2(argonaut.EncodeJsonKey, argonaut.EncodeJson, scala.Tuple2);
    descriptor: (Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: ifnull        49
         8: aload         4
        10: invokevirtual #604                // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: astore        5
        15: aload         4
        17: invokevirtual #607                // Method scala/Tuple2._2:()Ljava/lang/Object;
        20: astore        6
        22: new           #601                // class scala/Tuple2
        25: dup
        26: aload_0
        27: aload         5
        29: invokeinterface #613,  2          // InterfaceMethod argonaut/EncodeJsonKey.toJsonKey:(Ljava/lang/Object;)Ljava/lang/String;
        34: aload_1
        35: aload         6
        37: invokeinterface #264,  2          // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
        42: invokespecial #616                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        45: astore_3
        46: goto          62
        49: goto          52
        52: new           #568                // class scala/MatchError
        55: dup
        56: aload         4
        58: invokespecial #572                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        61: athrow
        62: aload_3
        63: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 49
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/EncodeJsonKey, class argonaut/EncodeJson, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 162: 0
        line 163: 3
        line 162: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      36     5     k   Ljava/lang/Object;
           20      29     6     v   Ljava/lang/Object;
            0      64     0   K$1   Largonaut/EncodeJsonKey;
            0      64     1   e$5   Largonaut/EncodeJson;
            0      64     2  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      K$1                            final
      e$5                            final
      x0$1                           final

  public static argonaut.Json $anonfun$MapEncodeJson$1(argonaut.EncodeJsonKey, argonaut.EncodeJson, scala.collection.immutable.Map);
    descriptor: (Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/collection/immutable/Map;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
         3: aload_2
         4: invokeinterface #623,  1          // InterfaceMethod scala/collection/immutable/Map.toList:()Lscala/collection/immutable/List;
         9: aload_0
        10: aload_1
        11: invokedynamic #629,  0            // InvokeDynamic #17:apply:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;)Lscala/Function1;
        16: invokevirtual #281                // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
        19: invokevirtual #632                // Method argonaut/Json$.jObjectAssocList:(Lscala/collection/immutable/List;)Largonaut/Json;
        22: areturn
      LineNumberTable:
        line 161: 0
        line 162: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0   K$1   Largonaut/EncodeJsonKey;
            0      23     1   e$5   Largonaut/EncodeJson;
            0      23     2     x   Lscala/collection/immutable/Map;
    MethodParameters:
      Name                           Flags
      K$1                            final
      e$5                            final
      x                              final

  public static scala.collection.immutable.List $anonfun$SetEncodeJson$2(scala.collection.immutable.Set);
    descriptor: (Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #639,  1          // InterfaceMethod scala/collection/immutable/Set.toList:()Lscala/collection/immutable/List;
         6: areturn
      LineNumberTable:
        line 169: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  x$11   Lscala/collection/immutable/Set;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static argonaut.Json $anonfun$SetEncodeJson$1(argonaut.EncodeJsons, argonaut.EncodeJson, scala.collection.immutable.Set);
    descriptor: (Largonaut/EncodeJsons;Largonaut/EncodeJson;Lscala/collection/immutable/Set;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokeinterface #71,  2           // InterfaceMethod ListEncodeJson:(Largonaut/EncodeJson;)Largonaut/EncodeJson;
         7: invokedynamic #647,  0            // InvokeDynamic #18:apply:()Lscala/Function1;
        12: invokeinterface #650,  2          // InterfaceMethod argonaut/EncodeJson.contramap:(Lscala/Function1;)Largonaut/EncodeJson;
        17: aload_2
        18: invokeinterface #264,  2          // InterfaceMethod argonaut/EncodeJson.apply:(Ljava/lang/Object;)Largonaut/Json;
        23: areturn
      LineNumberTable:
        line 169: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0 $this   Largonaut/EncodeJsons;
            0      24     1   e$6   Largonaut/EncodeJson;
            0      24     2  x$12   Lscala/collection/immutable/Set;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e$6                            final
      x$12                           final

  public static void $init$(argonaut.EncodeJsons);
    descriptor: (Largonaut/EncodeJsons;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
         4: invokedynamic #657,  0            // InvokeDynamic #19:apply:()Lscala/Function1;
         9: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        12: invokeinterface #659,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$JsonEncodeJson_$eq:(Largonaut/EncodeJson;)V
        17: aload_0
        18: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
        21: invokedynamic #664,  0            // InvokeDynamic #20:apply:()Lscala/Function1;
        26: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        29: invokeinterface #666,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$HCursorEncodeJson_$eq:(Largonaut/EncodeJson;)V
        34: aload_0
        35: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
        38: invokedynamic #671,  0            // InvokeDynamic #21:apply:()Lscala/Function1;
        43: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        46: invokeinterface #673,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$UnitEncodeJson_$eq:(Largonaut/EncodeJson;)V
        51: aload_0
        52: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
        55: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        58: invokevirtual #464                // Method argonaut/Json$.jString:()Lscala/Function1;
        61: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
        64: invokeinterface #675,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$StringEncodeJson_$eq:(Largonaut/EncodeJson;)V
        69: aload_0
        70: aload_0
        71: invokeinterface #677,  1          // InterfaceMethod StringEncodeJson:()Largonaut/EncodeJson;
        76: invokedynamic #682,  0            // InvokeDynamic #22:apply:()Lscala/Function1;
        81: invokeinterface #650,  2          // InterfaceMethod argonaut/EncodeJson.contramap:(Lscala/Function1;)Largonaut/EncodeJson;
        86: invokeinterface #684,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$UUIDEncodeJson_$eq:(Largonaut/EncodeJson;)V
        91: aload_0
        92: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
        95: invokedynamic #689,  0            // InvokeDynamic #23:apply:()Lscala/Function1;
       100: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       103: invokeinterface #691,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$DoubleEncodeJson_$eq:(Largonaut/EncodeJson;)V
       108: aload_0
       109: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       112: invokedynamic #696,  0            // InvokeDynamic #24:apply:()Lscala/Function1;
       117: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       120: invokeinterface #698,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$FloatEncodeJson_$eq:(Largonaut/EncodeJson;)V
       125: aload_0
       126: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       129: invokedynamic #703,  0            // InvokeDynamic #25:apply:()Lscala/Function1;
       134: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       137: invokeinterface #705,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$IntEncodeJson_$eq:(Largonaut/EncodeJson;)V
       142: aload_0
       143: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       146: invokedynamic #710,  0            // InvokeDynamic #26:apply:()Lscala/Function1;
       151: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       154: invokeinterface #712,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$LongEncodeJson_$eq:(Largonaut/EncodeJson;)V
       159: aload_0
       160: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       163: invokedynamic #717,  0            // InvokeDynamic #27:apply:()Lscala/Function1;
       168: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       171: invokeinterface #719,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$ShortEncodeJson_$eq:(Largonaut/EncodeJson;)V
       176: aload_0
       177: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       180: invokedynamic #724,  0            // InvokeDynamic #28:apply:()Lscala/Function1;
       185: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       188: invokeinterface #726,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$ByteEncodeJson_$eq:(Largonaut/EncodeJson;)V
       193: aload_0
       194: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       197: invokedynamic #731,  0            // InvokeDynamic #29:apply:()Lscala/Function1;
       202: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       205: invokeinterface #733,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$BigDecimalEncodeJson_$eq:(Largonaut/EncodeJson;)V
       210: aload_0
       211: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       214: invokedynamic #738,  0            // InvokeDynamic #30:apply:()Lscala/Function1;
       219: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       222: invokeinterface #740,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$BigIntEncodeJson_$eq:(Largonaut/EncodeJson;)V
       227: aload_0
       228: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       231: getstatic     #251                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
       234: invokevirtual #533                // Method argonaut/Json$.jBool:()Lscala/Function1;
       237: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       240: invokeinterface #742,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$BooleanEncodeJson_$eq:(Largonaut/EncodeJson;)V
       245: aload_0
       246: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       249: invokedynamic #747,  0            // InvokeDynamic #31:apply:()Lscala/Function1;
       254: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       257: invokeinterface #749,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$CharEncodeJson_$eq:(Largonaut/EncodeJson;)V
       262: aload_0
       263: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       266: invokedynamic #754,  0            // InvokeDynamic #32:apply:()Lscala/Function1;
       271: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       274: invokeinterface #756,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$JDoubleEncodeJson_$eq:(Largonaut/EncodeJson;)V
       279: aload_0
       280: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       283: invokedynamic #761,  0            // InvokeDynamic #33:apply:()Lscala/Function1;
       288: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       291: invokeinterface #763,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$JFloatEncodeJson_$eq:(Largonaut/EncodeJson;)V
       296: aload_0
       297: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       300: invokedynamic #768,  0            // InvokeDynamic #34:apply:()Lscala/Function1;
       305: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       308: invokeinterface #770,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$JIntegerEncodeJson_$eq:(Largonaut/EncodeJson;)V
       313: aload_0
       314: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       317: invokedynamic #775,  0            // InvokeDynamic #35:apply:()Lscala/Function1;
       322: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       325: invokeinterface #777,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$JLongEncodeJson_$eq:(Largonaut/EncodeJson;)V
       330: aload_0
       331: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       334: invokedynamic #782,  0            // InvokeDynamic #36:apply:()Lscala/Function1;
       339: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       342: invokeinterface #784,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$JShortEncodeJson_$eq:(Largonaut/EncodeJson;)V
       347: aload_0
       348: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       351: invokedynamic #789,  0            // InvokeDynamic #37:apply:()Lscala/Function1;
       356: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       359: invokeinterface #791,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$JByteEncodeJson_$eq:(Largonaut/EncodeJson;)V
       364: aload_0
       365: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       368: invokedynamic #796,  0            // InvokeDynamic #38:apply:()Lscala/Function1;
       373: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       376: invokeinterface #798,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$JBooleanEncodeJson_$eq:(Largonaut/EncodeJson;)V
       381: aload_0
       382: getstatic     #80                 // Field argonaut/EncodeJson$.MODULE$:Largonaut/EncodeJson$;
       385: invokedynamic #803,  0            // InvokeDynamic #39:apply:()Lscala/Function1;
       390: invokevirtual #105                // Method argonaut/EncodeJson$.apply:(Lscala/Function1;)Largonaut/EncodeJson;
       393: invokeinterface #805,  2          // InterfaceMethod argonaut$EncodeJsons$_setter_$JCharacterEncodeJson_$eq:(Largonaut/EncodeJson;)V
       398: return
      LineNumberTable:
        line 68: 0
        line 69: 1
        line 71: 17
        line 72: 18
        line 74: 34
        line 75: 35
        line 86: 51
        line 87: 52
        line 89: 69
        line 90: 70
        line 92: 91
        line 93: 92
        line 95: 108
        line 96: 109
        line 98: 125
        line 99: 126
        line 101: 142
        line 102: 143
        line 104: 159
        line 105: 160
        line 107: 176
        line 108: 177
        line 110: 193
        line 111: 194
        line 113: 210
        line 114: 211
        line 116: 227
        line 117: 228
        line 119: 245
        line 120: 246
        line 122: 262
        line 123: 263
        line 125: 279
        line 126: 280
        line 128: 296
        line 129: 297
        line 131: 313
        line 132: 314
        line 134: 330
        line 135: 331
        line 137: 347
        line 138: 348
        line 140: 364
        line 141: 365
        line 143: 381
        line 144: 382
        line 62: 398
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     399     0 $this   Largonaut/EncodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static argonaut.Json $anonfun$DoubleEncodeJson$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #809                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
         4: invokestatic  #811                // InterfaceMethod $anonfun$DoubleEncodeJson$1:(D)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$FloatEncodeJson$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #815                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
         4: invokestatic  #817                // InterfaceMethod $anonfun$FloatEncodeJson$1:(F)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$IntEncodeJson$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #821                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: invokestatic  #823                // InterfaceMethod $anonfun$IntEncodeJson$1:(I)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$LongEncodeJson$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #827                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
         4: invokestatic  #829                // InterfaceMethod $anonfun$LongEncodeJson$1:(J)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$ShortEncodeJson$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #833                // Method scala/runtime/BoxesRunTime.unboxToShort:(Ljava/lang/Object;)S
         4: invokestatic  #835                // InterfaceMethod $anonfun$ShortEncodeJson$1:(S)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$ByteEncodeJson$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #839                // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
         4: invokestatic  #841                // InterfaceMethod $anonfun$ByteEncodeJson$1:(B)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      a                              final

  public static argonaut.Json $anonfun$CharEncodeJson$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #845                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #847                // InterfaceMethod $anonfun$CharEncodeJson$1:(C)Largonaut/Json;
         7: areturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      a                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #859,  0            // InvokeDynamic #40:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "EncodeJson.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t-da\u0002\u0011\"!\u0003\r\t\u0001\n\u0005\u0006_\u0001!\t\u0001\r\u0005\bi\u0001\u0011\r\u0011b\u00016\u0011\u001da\u0004A1A\u0005\u0004uBqA\u0011\u0001C\u0002\u0013\r1\tC\u0003F\u0001\u0011\ra\tC\u0003d\u0001\u0011\rA\rC\u0003p\u0001\u0011\r\u0001\u000fC\u0004{\u0001\t\u0007I1A>\t\u0013\u0005-\u0001A1A\u0005\u0004\u00055\u0001\"CA\u0011\u0001\t\u0007I1AA\u0012\u0011%\ti\u0003\u0001b\u0001\n\u0007\ty\u0003C\u0005\u0002:\u0001\u0011\r\u0011b\u0001\u0002<!I\u0011Q\t\u0001C\u0002\u0013\r\u0011q\t\u0005\n\u0003#\u0002!\u0019!C\u0002\u0003\'B\u0011\"!\u0018\u0001\u0005\u0004%\u0019!a\u0018\t\u0013\u0005%\u0004A1A\u0005\u0004\u0005-\u0004\"CA;\u0001\t\u0007I1AA<\u0011%\t\t\t\u0001b\u0001\n\u0007\t\u0019\tC\u0005\u0002\u000e\u0002\u0011\r\u0011b\u0001\u0002\u0010\"I\u0011\u0011\u0014\u0001C\u0002\u0013\r\u00111\u0014\u0005\n\u0003S\u0003!\u0019!C\u0002\u0003WC\u0011\"a-\u0001\u0005\u0004%\u0019!!.\t\u0013\u0005}\u0006A1A\u0005\u0004\u0005\u0005\u0007\"CAe\u0001\t\u0007I1AAf\u0011%\t\u0019\u000e\u0001b\u0001\n\u0007\t)\u000eC\u0005\u0002^\u0002\u0011\r\u0011b\u0001\u0002`\"I\u0011q\u001d\u0001C\u0002\u0013\r\u0011\u0011\u001e\u0005\b\u0003g\u0004A1AA{\u0011\u001d\u0011I\u0001\u0001C\u0002\u0005\u0017AqA!\f\u0001\t\u0007\u0011y\u0003C\u0004\u0003V\u0001!\u0019Aa\u0016\u0003\u0017\u0015s7m\u001c3f\u0015N|gn\u001d\u0006\u0002E\u0005A\u0011M]4p]\u0006,Ho\u0001\u0001\u0014\u0007\u0001)3\u0006\u0005\u0002\'S5\tqEC\u0001)\u0003\u0015\u00198-\u00197b\u0013\tQsE\u0001\u0004B]f\u0014VM\u001a\t\u0003Y5j\u0011!I\u0005\u0003]\u0005\u0012AcR3oKJ\fG/\u001a3F]\u000e|G-\u001a&t_:\u001c\u0018A\u0002\u0013j]&$H\u0005F\u00012!\t1#\'\u0003\u00024O\t!QK\\5u\u00039Q5o\u001c8F]\u000e|G-\u001a&t_:,\u0012A\u000e\t\u0004Y]J\u0014B\u0001\u001d\"\u0005))enY8eK*\u001bxN\u001c\t\u0003YiJ!aO\u0011\u0003\t)\u001bxN\\\u0001\u0012\u0011\u000e+(o]8s\u000b:\u001cw\u000eZ3Kg>tW#\u0001 \u0011\u00071:t\b\u0005\u0002-\u0001&\u0011\u0011)\t\u0002\b\u0011\u000e+(o]8s\u00039)f.\u001b;F]\u000e|G-\u001a&t_:,\u0012\u0001\u0012\t\u0004Y]\n\u0014A\u0004\'jgR,enY8eK*\u001bxN\\\u000b\u0003\u000f^#\"\u0001\u00131\u0011\u00071:\u0014\nE\u0002K%Vs!a\u0013)\u000f\u00051{U\"A\'\u000b\u00059\u001b\u0013A\u0002\u001fs_>$h(C\u0001)\u0013\t\tv%A\u0004qC\u000e\\\u0017mZ3\n\u0005M#&\u0001\u0002\'jgRT!!U\u0014\u0011\u0005Y;F\u0002\u0001\u0003\u00061\u0016\u0011\r!\u0017\u0002\u0002\u0003F\u0011!,\u0018\t\u0003MmK!\u0001X\u0014\u0003\u000f9{G\u000f[5oOB\u0011aEX\u0005\u0003?\u001e\u00121!\u00118z\u0011\u0015\tW\u0001q\u0001c\u0003\u0005)\u0007c\u0001\u00178+\u0006\u0001b+Z2u_J,enY8eK*\u001bxN\\\u000b\u0003K.$\"A\u001a7\u0011\u00071:t\rE\u0002KQ*L!!\u001b+\u0003\rY+7\r^8s!\t16\u000eB\u0003Y\r\t\u0007\u0011\fC\u0003b\r\u0001\u000fQ\u000eE\u0002-o9\u00042A\u0013*k\u0003A\u0019FO]3b[\u0016s7m\u001c3f\u0015N|g.\u0006\u0002roR\u0011!\u000f\u001f\t\u0004Y]\u001a\bc\u0001&um&\u0011Q\u000f\u0016\u0002\u0007\'R\u0014X-Y7\u0011\u0005Y;H!\u0002-\b\u0005\u0004I\u0006\"B1\b\u0001\bI\bc\u0001\u00178m\u0006\u00012\u000b\u001e:j]\u001e,enY8eK*\u001bxN\\\u000b\u0002yB\u0019AfN?\u0011\u0007y\f)AD\u0002\u0000\u0003\u0003\u0001\"\u0001T\u0014\n\u0007\u0005\rq%\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u0003\u000f\tIA\u0001\u0004TiJLgn\u001a\u0006\u0004\u0003\u00079\u0013AD+V\u0013\u0012+enY8eK*\u001bxN\\\u000b\u0003\u0003\u001f\u0001B\u0001L\u001c\u0002\u0012A!\u00111CA\u000f\u001b\t\t)B\u0003\u0003\u0002\u0018\u0005e\u0011\u0001B;uS2T!!a\u0007\u0002\t)\fg/Y\u0005\u0005\u0003?\t)B\u0001\u0003V+&#\u0015\u0001\u0005#pk\ndW-\u00128d_\u0012,\'j]8o+\t\t)\u0003\u0005\u0003-o\u0005\u001d\u0002c\u0001\u0014\u0002*%\u0019\u00111F\u0014\u0003\r\u0011{WO\u00197f\u0003=1En\\1u\u000b:\u001cw\u000eZ3Kg>tWCAA\u0019!\u0011as\'a\r\u0011\u0007\u0019\n)$C\u0002\u00028\u001d\u0012QA\u00127pCR\fQ\"\u00138u\u000b:\u001cw\u000eZ3Kg>tWCAA\u001f!\u0011as\'a\u0010\u0011\u0007\u0019\n\t%C\u0002\u0002D\u001d\u00121!\u00138u\u00039auN\\4F]\u000e|G-\u001a&t_:,\"!!\u0013\u0011\t1:\u00141\n\t\u0004M\u00055\u0013bAA(O\t!Aj\u001c8h\u0003=\u0019\u0006n\u001c:u\u000b:\u001cw\u000eZ3Kg>tWCAA+!\u0011as\'a\u0016\u0011\u0007\u0019\nI&C\u0002\u0002\\\u001d\u0012Qa\u00155peR\faBQ=uK\u0016s7m\u001c3f\u0015N|g.\u0006\u0002\u0002bA!AfNA2!\r1\u0013QM\u0005\u0004\u0003O:#\u0001\u0002\"zi\u0016\fACQ5h\t\u0016\u001c\u0017.\\1m\u000b:\u001cw\u000eZ3Kg>tWCAA7!\u0011as\'a\u001c\u0011\u0007)\u000b\t(C\u0002\u0002tQ\u0013!BQ5h\t\u0016\u001c\u0017.\\1m\u0003A\u0011\u0015nZ%oi\u0016s7m\u001c3f\u0015N|g.\u0006\u0002\u0002zA!AfNA>!\rQ\u0015QP\u0005\u0004\u0003\u007f\"&A\u0002\"jO&sG/A\tC_>dW-\u00198F]\u000e|G-\u001a&t_:,\"!!\"\u0011\t1:\u0014q\u0011\t\u0004M\u0005%\u0015bAAFO\t9!i\\8mK\u0006t\u0017AD\"iCJ,enY8eK*\u001bxN\\\u000b\u0003\u0003#\u0003B\u0001L\u001c\u0002\u0014B\u0019a%!&\n\u0007\u0005]uE\u0001\u0003DQ\u0006\u0014\u0018!\u0005&E_V\u0014G.Z#oG>$WMS:p]V\u0011\u0011Q\u0014\t\u0005Y]\ny\n\u0005\u0003\u0002\"\u0006\u001dVBAAR\u0015\u0011\t)+!\u0007\u0002\t1\fgnZ\u0005\u0005\u0003W\t\u0019+\u0001\tK\r2|\u0017\r^#oG>$WMS:p]V\u0011\u0011Q\u0016\t\u0005Y]\ny\u000b\u0005\u0003\u0002\"\u0006E\u0016\u0002BA\u001c\u0003G\u000b!CS%oi\u0016<WM]#oG>$WMS:p]V\u0011\u0011q\u0017\t\u0005Y]\nI\f\u0005\u0003\u0002\"\u0006m\u0016\u0002BA_\u0003G\u0013q!\u00138uK\u001e,\'/A\bK\u0019>tw-\u00128d_\u0012,\'j]8o+\t\t\u0019\r\u0005\u0003-o\u0005\u0015\u0007\u0003BAQ\u0003\u000fLA!a\u0014\u0002$\u0006\u0001\"j\u00155peR,enY8eK*\u001bxN\\\u000b\u0003\u0003\u001b\u0004B\u0001L\u001c\u0002PB!\u0011\u0011UAi\u0013\u0011\tY&a)\u0002\u001f)\u0013\u0015\u0010^3F]\u000e|G-\u001a&t_:,\"!a6\u0011\t1:\u0014\u0011\u001c\t\u0005\u0003C\u000bY.\u0003\u0003\u0002h\u0005\r\u0016A\u0005&C_>dW-\u00198F]\u000e|G-\u001a&t_:,\"!!9\u0011\t1:\u00141\u001d\t\u0005\u0003C\u000b)/\u0003\u0003\u0002\f\u0006\r\u0016\u0001\u0006&DQ\u0006\u0014\u0018m\u0019;fe\u0016s7m\u001c3f\u0015N|g.\u0006\u0002\u0002lB!AfNAw!\u0011\t\t+a<\n\t\u0005E\u00181\u0015\u0002\n\u0007\"\f\'/Y2uKJ\f\u0001c\u00149uS>tWI\\2pI\u0016T5o\u001c8\u0016\t\u0005](1\u0001\u000b\u0005\u0003s\u0014)\u0001\u0005\u0003-o\u0005m\b#\u0002\u0014\u0002~\n\u0005\u0011bAA\u0000O\t1q\n\u001d;j_:\u00042A\u0016B\u0002\t\u0015AFD1\u0001Z\u0011\u0019\tG\u0004q\u0001\u0003\bA!Af\u000eB\u0001\u0003A)\u0015\u000e\u001e5fe\u0016s7m\u001c3f\u0015N|g.\u0006\u0004\u0003\u000e\te!Q\u0004\u000b\u0007\u0005\u001f\u0011\tCa\n\u0011\t1:$\u0011\u0003\t\b\u0015\nM!q\u0003B\u000e\u0013\r\u0011)\u0002\u0016\u0002\u0007\u000b&$\b.\u001a:\u0011\u0007Y\u0013I\u0002B\u0003Y;\t\u0007\u0011\fE\u0002W\u0005;!aAa\b\u001e\u0005\u0004I&!\u0001\"\t\u000f\t\rR\u0004q\u0001\u0003&\u0005\u0011Q-\u0019\t\u0005Y]\u00129\u0002C\u0004\u0003*u\u0001\u001dAa\u000b\u0002\u0005\u0015\u0014\u0007\u0003\u0002\u00178\u00057\tQ\"T1q\u000b:\u001cw\u000eZ3Kg>tWC\u0002B\u0019\u0005{\u0011\u0019\u0005\u0006\u0004\u00034\t\u001d#\u0011\u000b\t\u0005Y]\u0012)\u0004E\u0004\u007f\u0005o\u0011YD!\u0011\n\t\te\u0012\u0011\u0002\u0002\u0004\u001b\u0006\u0004\bc\u0001,\u0003>\u00111!q\b\u0010C\u0002e\u0013\u0011a\u0013\t\u0004-\n\rCA\u0002B#=\t\u0007\u0011LA\u0001W\u0011\u001d\u0011IE\ba\u0002\u0005\u0017\n\u0011a\u0013\t\u0006Y\t5#1H\u0005\u0004\u0005\u001f\n#!D#oG>$WMS:p].+\u0017\u0010\u0003\u0004b=\u0001\u000f!1\u000b\t\u0005Y]\u0012\t%A\u0007TKR,enY8eK*\u001bxN\\\u000b\u0005\u00053\u0012)\u0007\u0006\u0003\u0003\\\t\u001d\u0004\u0003\u0002\u00178\u0005;\u0002RA B0\u0005GJAA!\u0019\u0002\n\t\u00191+\u001a;\u0011\u0007Y\u0013)\u0007B\u0003Y?\t\u0007\u0011\f\u0003\u0004b?\u0001\u000f!\u0011\u000e\t\u0005Y]\u0012\u0019\u0007"
    )
BootstrapMethods:
  0: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #87 REF_invokeStatic argonaut/EncodeJsons.$anonfun$ListEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/List;)Largonaut/Json;
      #89 (Lscala/collection/immutable/List;)Largonaut/Json;
      #90 5
      #91 1
      #89 (Lscala/collection/immutable/List;)Largonaut/Json;
  1: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #116 REF_invokeStatic argonaut/EncodeJsons.$anonfun$VectorEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Vector;)Largonaut/Json;
      #118 (Lscala/collection/immutable/Vector;)Largonaut/Json;
      #90 5
      #91 1
      #118 (Lscala/collection/immutable/Vector;)Largonaut/Json;
  2: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #129 REF_invokeStatic argonaut/EncodeJsons.$anonfun$StreamEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Stream;)Largonaut/Json;
      #131 (Lscala/collection/immutable/Stream;)Largonaut/Json;
      #90 5
      #91 1
      #131 (Lscala/collection/immutable/Stream;)Largonaut/Json;
  3: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #175 REF_invokeStatic argonaut/EncodeJsons.$anonfun$OptionEncodeJson$1:(Largonaut/EncodeJson;Lscala/Option;)Largonaut/Json;
      #177 (Lscala/Option;)Largonaut/Json;
      #90 5
      #91 1
      #177 (Lscala/Option;)Largonaut/Json;
  4: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #192 REF_invokeStatic argonaut/EncodeJsons.$anonfun$EitherEncodeJson$1:(Largonaut/EncodeJson;Largonaut/EncodeJson;Lscala/util/Either;)Largonaut/Json;
      #194 (Lscala/util/Either;)Largonaut/Json;
      #90 5
      #91 1
      #194 (Lscala/util/Either;)Largonaut/Json;
  5: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #211 REF_invokeStatic argonaut/EncodeJsons.$anonfun$MapEncodeJson$1:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/collection/immutable/Map;)Largonaut/Json;
      #213 (Lscala/collection/immutable/Map;)Largonaut/Json;
      #90 5
      #91 1
      #213 (Lscala/collection/immutable/Map;)Largonaut/Json;
  6: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #226 REF_invokeStatic argonaut/EncodeJsons.$anonfun$SetEncodeJson$1:(Largonaut/EncodeJsons;Largonaut/EncodeJson;Lscala/collection/immutable/Set;)Largonaut/Json;
      #228 (Lscala/collection/immutable/Set;)Largonaut/Json;
      #90 5
      #91 1
      #228 (Lscala/collection/immutable/Set;)Largonaut/Json;
  7: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #273 REF_invokeStatic argonaut/EncodeJsons.$anonfun$ListEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
      #274 (Ljava/lang/Object;)Largonaut/Json;
      #90 5
      #91 1
      #274 (Ljava/lang/Object;)Largonaut/Json;
  8: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #305 REF_invokeStatic argonaut/EncodeJsons.$anonfun$StreamEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
      #274 (Ljava/lang/Object;)Largonaut/Json;
      #90 5
      #91 1
      #274 (Ljava/lang/Object;)Largonaut/Json;
  9: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #361 ()Ljava/lang/Object;
      #364 REF_invokeStatic argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$2:()Largonaut/Json;
      #365 ()Largonaut/Json;
      #90 5
      #91 1
      #365 ()Largonaut/Json;
  10: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #371 REF_invokeStatic argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
      #372 (Largonaut/JsonNumber;)Largonaut/Json;
      #90 5
      #91 1
      #372 (Largonaut/JsonNumber;)Largonaut/Json;
  11: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #361 ()Ljava/lang/Object;
      #396 REF_invokeStatic argonaut/EncodeJsons.$anonfun$FloatEncodeJson$2:()Largonaut/Json;
      #365 ()Largonaut/Json;
      #90 5
      #91 1
      #365 ()Largonaut/Json;
  12: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #400 REF_invokeStatic argonaut/EncodeJsons.$anonfun$FloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
      #372 (Largonaut/JsonNumber;)Largonaut/Json;
      #90 5
      #91 1
      #372 (Largonaut/JsonNumber;)Largonaut/Json;
  13: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #361 ()Ljava/lang/Object;
      #481 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$2:()Largonaut/Json;
      #365 ()Largonaut/Json;
      #90 5
      #91 1
      #365 ()Largonaut/Json;
  14: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #485 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
      #372 (Largonaut/JsonNumber;)Largonaut/Json;
      #90 5
      #91 1
      #372 (Largonaut/JsonNumber;)Largonaut/Json;
  15: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #361 ()Ljava/lang/Object;
      #498 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$2:()Largonaut/Json;
      #365 ()Largonaut/Json;
      #90 5
      #91 1
      #365 ()Largonaut/Json;
  16: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #502 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
      #372 (Largonaut/JsonNumber;)Largonaut/Json;
      #90 5
      #91 1
      #372 (Largonaut/JsonNumber;)Largonaut/Json;
  17: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #626 REF_invokeStatic argonaut/EncodeJsons.$anonfun$MapEncodeJson$2:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/Tuple2;)Lscala/Tuple2;
      #628 (Lscala/Tuple2;)Lscala/Tuple2;
      #90 5
      #91 1
      #628 (Lscala/Tuple2;)Lscala/Tuple2;
  18: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #645 REF_invokeStatic argonaut/EncodeJsons.$anonfun$SetEncodeJson$2:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
      #646 (Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
      #90 5
      #91 1
      #646 (Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
  19: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #655 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JsonEncodeJson$1:(Largonaut/Json;)Largonaut/Json;
      #656 (Largonaut/Json;)Largonaut/Json;
      #90 5
      #91 1
      #656 (Largonaut/Json;)Largonaut/Json;
  20: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #662 REF_invokeStatic argonaut/EncodeJsons.$anonfun$HCursorEncodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
      #663 (Largonaut/HCursor;)Largonaut/Json;
      #90 5
      #91 1
      #663 (Largonaut/HCursor;)Largonaut/Json;
  21: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #669 REF_invokeStatic argonaut/EncodeJsons.$anonfun$UnitEncodeJson$1:(Lscala/runtime/BoxedUnit;)Largonaut/Json;
      #670 (Lscala/runtime/BoxedUnit;)Largonaut/Json;
      #90 5
      #91 1
      #670 (Lscala/runtime/BoxedUnit;)Largonaut/Json;
  22: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #680 REF_invokeStatic argonaut/EncodeJsons.$anonfun$UUIDEncodeJson$1:(Ljava/util/UUID;)Ljava/lang/String;
      #681 (Ljava/util/UUID;)Ljava/lang/String;
      #90 5
      #91 1
      #681 (Ljava/util/UUID;)Ljava/lang/String;
  23: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #688 REF_invokeStatic argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #274 (Ljava/lang/Object;)Largonaut/Json;
      #90 5
      #91 1
      #274 (Ljava/lang/Object;)Largonaut/Json;
  24: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #695 REF_invokeStatic argonaut/EncodeJsons.$anonfun$FloatEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #274 (Ljava/lang/Object;)Largonaut/Json;
      #90 5
      #91 1
      #274 (Ljava/lang/Object;)Largonaut/Json;
  25: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #702 REF_invokeStatic argonaut/EncodeJsons.$anonfun$IntEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #274 (Ljava/lang/Object;)Largonaut/Json;
      #90 5
      #91 1
      #274 (Ljava/lang/Object;)Largonaut/Json;
  26: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #709 REF_invokeStatic argonaut/EncodeJsons.$anonfun$LongEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #274 (Ljava/lang/Object;)Largonaut/Json;
      #90 5
      #91 1
      #274 (Ljava/lang/Object;)Largonaut/Json;
  27: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #716 REF_invokeStatic argonaut/EncodeJsons.$anonfun$ShortEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #274 (Ljava/lang/Object;)Largonaut/Json;
      #90 5
      #91 1
      #274 (Ljava/lang/Object;)Largonaut/Json;
  28: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #723 REF_invokeStatic argonaut/EncodeJsons.$anonfun$ByteEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #274 (Ljava/lang/Object;)Largonaut/Json;
      #90 5
      #91 1
      #274 (Ljava/lang/Object;)Largonaut/Json;
  29: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #729 REF_invokeStatic argonaut/EncodeJsons.$anonfun$BigDecimalEncodeJson$1:(Lscala/math/BigDecimal;)Largonaut/Json;
      #730 (Lscala/math/BigDecimal;)Largonaut/Json;
      #90 5
      #91 1
      #730 (Lscala/math/BigDecimal;)Largonaut/Json;
  30: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #736 REF_invokeStatic argonaut/EncodeJsons.$anonfun$BigIntEncodeJson$1:(Lscala/math/BigInt;)Largonaut/Json;
      #737 (Lscala/math/BigInt;)Largonaut/Json;
      #90 5
      #91 1
      #737 (Lscala/math/BigInt;)Largonaut/Json;
  31: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #746 REF_invokeStatic argonaut/EncodeJsons.$anonfun$CharEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #274 (Ljava/lang/Object;)Largonaut/Json;
      #90 5
      #91 1
      #274 (Ljava/lang/Object;)Largonaut/Json;
  32: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #752 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$1:(Ljava/lang/Double;)Largonaut/Json;
      #753 (Ljava/lang/Double;)Largonaut/Json;
      #90 5
      #91 1
      #753 (Ljava/lang/Double;)Largonaut/Json;
  33: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #759 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$1:(Ljava/lang/Float;)Largonaut/Json;
      #760 (Ljava/lang/Float;)Largonaut/Json;
      #90 5
      #91 1
      #760 (Ljava/lang/Float;)Largonaut/Json;
  34: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #766 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JIntegerEncodeJson$1:(Ljava/lang/Integer;)Largonaut/Json;
      #767 (Ljava/lang/Integer;)Largonaut/Json;
      #90 5
      #91 1
      #767 (Ljava/lang/Integer;)Largonaut/Json;
  35: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #773 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JLongEncodeJson$1:(Ljava/lang/Long;)Largonaut/Json;
      #774 (Ljava/lang/Long;)Largonaut/Json;
      #90 5
      #91 1
      #774 (Ljava/lang/Long;)Largonaut/Json;
  36: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #780 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JShortEncodeJson$1:(Ljava/lang/Short;)Largonaut/Json;
      #781 (Ljava/lang/Short;)Largonaut/Json;
      #90 5
      #91 1
      #781 (Ljava/lang/Short;)Largonaut/Json;
  37: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #787 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JByteEncodeJson$1:(Ljava/lang/Byte;)Largonaut/Json;
      #788 (Ljava/lang/Byte;)Largonaut/Json;
      #90 5
      #91 1
      #788 (Ljava/lang/Byte;)Largonaut/Json;
  38: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #794 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JBooleanEncodeJson$1:(Ljava/lang/Boolean;)Largonaut/Json;
      #795 (Ljava/lang/Boolean;)Largonaut/Json;
      #90 5
      #91 1
      #795 (Ljava/lang/Boolean;)Largonaut/Json;
  39: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #801 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JCharacterEncodeJson$1:(Ljava/lang/Character;)Largonaut/Json;
      #802 (Ljava/lang/Character;)Largonaut/Json;
      #90 5
      #91 1
      #802 (Ljava/lang/Character;)Largonaut/Json;
  40: #856 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #729 REF_invokeStatic argonaut/EncodeJsons.$anonfun$BigDecimalEncodeJson$1:(Lscala/math/BigDecimal;)Largonaut/Json;
      #736 REF_invokeStatic argonaut/EncodeJsons.$anonfun$BigIntEncodeJson$1:(Lscala/math/BigInt;)Largonaut/Json;
      #723 REF_invokeStatic argonaut/EncodeJsons.$anonfun$ByteEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #746 REF_invokeStatic argonaut/EncodeJsons.$anonfun$CharEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #688 REF_invokeStatic argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #364 REF_invokeStatic argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$2:()Largonaut/Json;
      #371 REF_invokeStatic argonaut/EncodeJsons.$anonfun$DoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
      #192 REF_invokeStatic argonaut/EncodeJsons.$anonfun$EitherEncodeJson$1:(Largonaut/EncodeJson;Largonaut/EncodeJson;Lscala/util/Either;)Largonaut/Json;
      #695 REF_invokeStatic argonaut/EncodeJsons.$anonfun$FloatEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #396 REF_invokeStatic argonaut/EncodeJsons.$anonfun$FloatEncodeJson$2:()Largonaut/Json;
      #400 REF_invokeStatic argonaut/EncodeJsons.$anonfun$FloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
      #662 REF_invokeStatic argonaut/EncodeJsons.$anonfun$HCursorEncodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
      #702 REF_invokeStatic argonaut/EncodeJsons.$anonfun$IntEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #794 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JBooleanEncodeJson$1:(Ljava/lang/Boolean;)Largonaut/Json;
      #787 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JByteEncodeJson$1:(Ljava/lang/Byte;)Largonaut/Json;
      #801 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JCharacterEncodeJson$1:(Ljava/lang/Character;)Largonaut/Json;
      #752 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$1:(Ljava/lang/Double;)Largonaut/Json;
      #481 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$2:()Largonaut/Json;
      #485 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JDoubleEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
      #759 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$1:(Ljava/lang/Float;)Largonaut/Json;
      #498 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$2:()Largonaut/Json;
      #502 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JFloatEncodeJson$3:(Largonaut/JsonNumber;)Largonaut/Json;
      #766 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JIntegerEncodeJson$1:(Ljava/lang/Integer;)Largonaut/Json;
      #773 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JLongEncodeJson$1:(Ljava/lang/Long;)Largonaut/Json;
      #780 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JShortEncodeJson$1:(Ljava/lang/Short;)Largonaut/Json;
      #655 REF_invokeStatic argonaut/EncodeJsons.$anonfun$JsonEncodeJson$1:(Largonaut/Json;)Largonaut/Json;
      #87 REF_invokeStatic argonaut/EncodeJsons.$anonfun$ListEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/List;)Largonaut/Json;
      #273 REF_invokeStatic argonaut/EncodeJsons.$anonfun$ListEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
      #709 REF_invokeStatic argonaut/EncodeJsons.$anonfun$LongEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #211 REF_invokeStatic argonaut/EncodeJsons.$anonfun$MapEncodeJson$1:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/collection/immutable/Map;)Largonaut/Json;
      #626 REF_invokeStatic argonaut/EncodeJsons.$anonfun$MapEncodeJson$2:(Largonaut/EncodeJsonKey;Largonaut/EncodeJson;Lscala/Tuple2;)Lscala/Tuple2;
      #175 REF_invokeStatic argonaut/EncodeJsons.$anonfun$OptionEncodeJson$1:(Largonaut/EncodeJson;Lscala/Option;)Largonaut/Json;
      #226 REF_invokeStatic argonaut/EncodeJsons.$anonfun$SetEncodeJson$1:(Largonaut/EncodeJsons;Largonaut/EncodeJson;Lscala/collection/immutable/Set;)Largonaut/Json;
      #645 REF_invokeStatic argonaut/EncodeJsons.$anonfun$SetEncodeJson$2:(Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
      #716 REF_invokeStatic argonaut/EncodeJsons.$anonfun$ShortEncodeJson$1$adapted:(Ljava/lang/Object;)Largonaut/Json;
      #129 REF_invokeStatic argonaut/EncodeJsons.$anonfun$StreamEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Stream;)Largonaut/Json;
      #305 REF_invokeStatic argonaut/EncodeJsons.$anonfun$StreamEncodeJson$2:(Largonaut/EncodeJson;Ljava/lang/Object;)Largonaut/Json;
      #680 REF_invokeStatic argonaut/EncodeJsons.$anonfun$UUIDEncodeJson$1:(Ljava/util/UUID;)Ljava/lang/String;
      #669 REF_invokeStatic argonaut/EncodeJsons.$anonfun$UnitEncodeJson$1:(Lscala/runtime/BoxedUnit;)Largonaut/Json;
      #116 REF_invokeStatic argonaut/EncodeJsons.$anonfun$VectorEncodeJson$1:(Largonaut/EncodeJson;Lscala/collection/immutable/Vector;)Largonaut/Json;
  ScalaInlineInfo: length = 0x220 (unknown attribute)
   01 00 00 6C 01 C0 01 C1 01 01 C6 01 C7 01 01 B6
   01 B7 01 02 D0 01 06 01 01 CC 01 CD 01 02 E7 01
   06 01 01 4B 01 4C 01 02 AD 01 06 01 01 3E 00 F1
   01 01 42 01 43 01 00 BC 00 BD 01 01 81 01 82 01
   02 B4 01 06 01 01 7E 00 F1 01 01 7F 01 43 01 00
   EC 00 ED 01 01 93 01 94 01 02 BB 01 06 01 02 11
   02 12 01 02 0B 02 0C 01 02 21 02 22 01 01 DA 01
   DB 01 01 D7 00 F1 01 01 D8 01 43 01 01 EB 01 EC
   01 01 E8 00 F1 01 01 E9 01 43 01 01 F9 01 FA 01
   01 FF 02 00 01 02 05 02 06 01 00 E8 00 E9 01 00
   53 00 54 01 01 00 01 01 01 01 A2 01 A3 01 02 C2
   01 06 01 00 CF 00 D0 01 02 53 02 54 01 00 AB 00
   AC 01 00 DE 00 DF 01 02 7A 02 7B 01 01 AC 01 AD
   01 02 C9 01 06 01 00 7D 00 7E 01 01 29 01 01 01
   01 34 01 35 01 00 F5 00 F6 01 00 70 00 71 01 02
   8B 02 8C 01 00 90 00 3A 00 00 92 00 3A 00 00 94
   00 3A 00 00 8F 00 3A 00 00 95 00 3A 00 00 89 00
   3A 00 00 B7 00 B8 00 00 B3 00 B4 01 00 8B 00 3A
   00 00 3C 00 3A 00 00 8C 00 3A 00 00 A2 00 3A 00
   00 A0 00 3A 00 00 A4 00 3A 00 00 96 00 3A 00 00
   98 00 3A 00 00 9A 00 3A 00 00 9C 00 3A 00 00 9E
   00 3A 00 00 39 00 3A 00 00 44 00 45 00 00 40 00
   41 01 00 8D 00 3A 00 00 C9 00 CA 00 00 C6 00 C7
   01 00 A7 00 45 00 00 A6 00 41 01 00 DA 00 45 00
   00 D9 00 41 01 00 8E 00 3A 00 00 79 00 45 00 00
   78 00 41 01 00 85 00 3A 00 00 87 00 3A 00 00 3E
   00 3A 00 00 6C 00 45 00 00 6B 00 41 01 00 23 00
   11 00 00 25 00 11 00 00 27 00 11 00 00 22 00 11
   00 00 28 00 11 00 00 1C 00 11 00 00 1E 00 11 00
   00 14 00 11 00 00 1F 00 11 00 00 35 00 11 00 00
   33 00 11 00 00 37 00 11 00 00 29 00 11 00 00 2B
   00 11 00 00 2D 00 11 00 00 2F 00 11 00 00 31 00
   11 00 00 10 00 11 00 00 20 00 11 00 00 21 00 11
   00 00 18 00 11 00 00 1A 00 11 00 00 16 00 11 00

  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
