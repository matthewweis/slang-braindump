Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/xml/dtd/PublicID.class
  Last modified May 29, 2022; size 6061 bytes
  SHA-256 checksum 302452ed5f36b4b800dae1061c7006b0eb500b401371893ede34b55845edd52b
  Compiled from "ExternalID.scala"
public class scala.xml.dtd.PublicID extends scala.xml.dtd.ExternalID implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/xml/dtd/PublicID
  super_class: #4                         // scala/xml/dtd/ExternalID
  interfaces: 2, fields: 2, methods: 22, attributes: 4
Constant pool:
    #1 = Utf8               scala/xml/dtd/PublicID
    #2 = Class              #1            // scala/xml/dtd/PublicID
    #3 = Utf8               scala/xml/dtd/ExternalID
    #4 = Class              #3            // scala/xml/dtd/ExternalID
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               ExternalID.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005Md\u0001B\u000e\u001d\u0001\u000eB\u0001\u0002\u000f\u0001\u0003\u0016\u0004%\t!\u000f\u0005\t\u0005\u0002\u0011\t\u0012)A\u0005u!A1\t\u0001BK\u0002\u0013\u0005\u0011\b\u0003\u0005E\u0001\tE\t\u0015!\u0003;\u0011\u0015)\u0005\u0001\"\u0001G\u0011\u0015Q\u0005\u0001\"\u0001L\u0011\u0015\u0019\u0006\u0001\"\u0001U\u0011\u0015I\u0006\u0001\"\u0001[\u0011\u001d\u0019\u0007!!A\u0005\u0002\u0011Dqa\u001a\u0001\u0012\u0002\u0013\u0005\u0001\u000eC\u0004t\u0001E\u0005I\u0011\u00015\t\u000fQ\u0004\u0011\u0011!C!\u0017\"9Q\u000fAA\u0001\n\u00031\bb\u0002>\u0001\u0003\u0003%\ta\u001f\u0005\n\u0003\u0007\u0001\u0011\u0011!C!\u0003\u000bA\u0011\"a\u0004\u0001\u0003\u0003%\t!!\u0005\t\u0013\u0005m\u0001!!A\u0005B\u0005u\u0001\"CA\u0011\u0001\u0005\u0005I\u0011IA\u0012\u0011%\t)\u0003AA\u0001\n\u0003\n9cB\u0005\u0002,q\t\t\u0011#\u0001\u0002.\u0019A1\u0004HA\u0001\u0012\u0003\ty\u0003\u0003\u0004F+\u0011\u0005\u0011q\t\u0005\n\u0003\u0013*\u0012\u0011!C#\u0003\u0017B\u0011\"!\u0014\u0016\u0003\u0003%\t)a\u0014\t\u0013\u0005US#!A\u0005\u0002\u0006]\u0003\"CA5+\u0005\u0005I\u0011BA6\u0005!\u0001VO\u00197jG&#%BA\u000f\u001f\u0003\r!G\u000f\u001a\u0006\u0003?\u0001\n1\u0001_7m\u0015\u0005\t\u0013!B:dC2\f7\u0001A\n\u0005\u0001\u0011BC\u0006\u0005\u0002&M5\tA$\u0003\u0002(9\tQQ\t\u001f;fe:\fG.\u0013#\u0011\u0005%RS\"\u0001\u0011\n\u0005-\u0002#a\u0002)s_\u0012,8\r\u001e\t\u0003[Ur!AL\u001a\u000f\u0005=\u0012T\"\u0001\u0019\u000b\u0005E\u0012\u0013A\u0002\u001fs_>$h(C\u0001\"\u0013\t!\u0004%A\u0004qC\u000e\\\u0017mZ3\n\u0005Y:$\u0001D*fe&\fG.\u001b>bE2,\'B\u0001\u001b!\u0003!\u0001XO\u00197jG&#W#\u0001\u001e\u0011\u0005mzdB\u0001\u001f>!\ty\u0003%\u0003\u0002?A\u00051\u0001K]3eK\u001aL!\u0001Q!\u0003\rM#(/\u001b8h\u0015\tq\u0004%A\u0005qk\nd\u0017nY%eA\u0005A1/_:uK6LE-A\u0005tsN$X-\\%eA\u00051A(\u001b8jiz\"2a\u0012%J!\t)\u0003\u0001C\u00039\u000b\u0001\u0007!\bC\u0003D\u000b\u0001\u0007!(A\u0003mC\n,G.F\u0001M!\ti%+D\u0001O\u0015\ty\u0005+\u0001\u0003mC:<\'\"A)\u0002\t)\fg/Y\u0005\u0003\u0001:\u000b\u0011\"\u0019;ue&\u0014W\u000f^3\u0016\u0003U\u0003\"AV,\u000e\u0003yI!\u0001\u0017\u0010\u0003\u00115+G/\u0019#bi\u0006\fQa\u00195jY\u0012,\u0012a\u0017\t\u00039\u0006l\u0011!\u0018\u0006\u0003=~\u000b\u0011\"[7nkR\f\'\r\\3\u000b\u0005\u0001\u0004\u0013AC2pY2,7\r^5p]*\u0011!-X\u0001\u0004\u001d&d\u0017\u0001B2paf$2aR3g\u0011\u001dA\u0014\u0002%AA\u0002iBqaQ\u0005\u0011\u0002\u0003\u0007!(\u0001\bd_BLH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0003%T#A\u000f6,\u0003-\u0004\"\u0001\\9\u000e\u00035T!A\\8\u0002\u0013Ut7\r[3dW\u0016$\'B\u00019!\u0003)\tgN\\8uCRLwN\\\u0005\u0003e6\u0014\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII\nQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&D\u0018\u0001\u00049s_\u0012,8\r^!sSRLX#A<\u0011\u0005%B\u0018BA=!\u0005\rIe\u000e^\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\tax\u0010\u0005\u0002*{&\u0011a\u0010\t\u0002\u0004\u0003:L\b\u0002CA\u0001\u001d\u0005\u0005\t\u0019A<\u0002\u0007a$\u0013\'A\bqe>$Wo\u0019;Ji\u0016\u0014\u0018\r^8s+\t\t9\u0001E\u0003\u0002\n\u0005-A0D\u0001`\u0013\r\tia\u0018\u0002\t\u0013R,\'/\u0019;pe\u0006A1-\u00198FcV\fG\u000e\u0006\u0003\u0002\u0014\u0005e\u0001cA\u0015\u0002\u0016%\u0019\u0011q\u0003\u0011\u0003\u000f\t{w\u000e\\3b]\"A\u0011\u0011\u0001\t\u0002\u0002\u0003\u0007A0\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,Gc\u0001\'\u0002 !A\u0011\u0011A\t\u0002\u0002\u0003\u0007q/\u0001\u0005iCND7i\u001c3f)\u00059\u0018AB3rk\u0006d7\u000f\u0006\u0003\u0002\u0014\u0005%\u0002\u0002CA\u0001\'\u0005\u0005\t\u0019\u0001?\u0002\u0011A+(\r\\5d\u0013\u0012\u0003\"!J\u000b\u0014\u000bU\t\t$!\u0010\u0011\u000f\u0005M\u0012\u0011\b\u001e;\u000f6\u0011\u0011Q\u0007\u0006\u0004\u0003o\u0001\u0013a\u0002:v]RLW.Z\u0005\u0005\u0003w\t)DA\tBEN$(/Y2u\rVt7\r^5p]J\u0002B!a\u0010\u0002F5\u0011\u0011\u0011\t\u0006\u0004\u0003\u0007\u0002\u0016AA5p\u0013\r1\u0014\u0011\t\u000b\u0003\u0003[\t\u0001\u0002^8TiJLgn\u001a\u000b\u0002\u0019\u0006)\u0011\r\u001d9msR)q)!\u0015\u0002T!)\u0001\b\u0007a\u0001u!)1\t\u0007a\u0001u\u00059QO\\1qa2LH\u0003BA-\u0003K\u0002R!KA.\u0003?J1!!\u0018!\u0005\u0019y\u0005\u000f^5p]B)\u0011&!\u0019;u%\u0019\u00111\r\u0011\u0003\rQ+\b\u000f\\33\u0011!\t9\'GA\u0001\u0002\u00049\u0015a\u0001=%a\u0005aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011Q\u000e\t\u0004\u001b\u0006=\u0014bAA9\u001d\n1qJ\u00196fGR\u0004
   #13 = Utf8               publicId
   #14 = Utf8               Ljava/lang/String;
   #15 = Utf8               systemId
   #16 = Utf8               unapply
   #17 = Utf8               (Lscala/xml/dtd/PublicID;)Lscala/Option;
   #18 = Utf8               (Lscala/xml/dtd/PublicID;)Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;>;
   #19 = Utf8               x$0
   #20 = Utf8               scala/xml/dtd/PublicID$
   #21 = Class              #20           // scala/xml/dtd/PublicID$
   #22 = Utf8               MODULE$
   #23 = Utf8               Lscala/xml/dtd/PublicID$;
   #24 = NameAndType        #22:#23       // MODULE$:Lscala/xml/dtd/PublicID$;
   #25 = Fieldref           #21.#24       // scala/xml/dtd/PublicID$.MODULE$:Lscala/xml/dtd/PublicID$;
   #26 = NameAndType        #16:#17       // unapply:(Lscala/xml/dtd/PublicID;)Lscala/Option;
   #27 = Methodref          #21.#26       // scala/xml/dtd/PublicID$.unapply:(Lscala/xml/dtd/PublicID;)Lscala/Option;
   #28 = Utf8               Lscala/xml/dtd/PublicID;
   #29 = Utf8               apply
   #30 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/xml/dtd/PublicID;
   #31 = NameAndType        #29:#30       // apply:(Ljava/lang/String;Ljava/lang/String;)Lscala/xml/dtd/PublicID;
   #32 = Methodref          #21.#31       // scala/xml/dtd/PublicID$.apply:(Ljava/lang/String;Ljava/lang/String;)Lscala/xml/dtd/PublicID;
   #33 = Utf8               tupled
   #34 = Utf8               ()Lscala/Function1;
   #35 = Utf8               ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;Lscala/xml/dtd/PublicID;>;
   #36 = NameAndType        #33:#34       // tupled:()Lscala/Function1;
   #37 = Methodref          #21.#36       // scala/xml/dtd/PublicID$.tupled:()Lscala/Function1;
   #38 = Utf8               curried
   #39 = Utf8               ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Lscala/xml/dtd/PublicID;>;>;
   #40 = NameAndType        #38:#34       // curried:()Lscala/Function1;
   #41 = Methodref          #21.#40       // scala/xml/dtd/PublicID$.curried:()Lscala/Function1;
   #42 = Utf8               productElementNames
   #43 = Utf8               ()Lscala/collection/Iterator;
   #44 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #45 = Utf8               productElementNames$
   #46 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #47 = NameAndType        #45:#46       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #48 = InterfaceMethodref #6.#47        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #49 = Utf8               this
   #50 = Utf8               ()Ljava/lang/String;
   #51 = NameAndType        #13:#14       // publicId:Ljava/lang/String;
   #52 = Fieldref           #2.#51        // scala/xml/dtd/PublicID.publicId:Ljava/lang/String;
   #53 = NameAndType        #15:#14       // systemId:Ljava/lang/String;
   #54 = Fieldref           #2.#53        // scala/xml/dtd/PublicID.systemId:Ljava/lang/String;
   #55 = Utf8               label
   #56 = Utf8               #PI
   #57 = String             #56           // #PI
   #58 = Utf8               attribute
   #59 = Utf8               ()Lscala/xml/MetaData;
   #60 = Utf8               scala/xml/Node$
   #61 = Class              #60           // scala/xml/Node$
   #62 = Utf8               Lscala/xml/Node$;
   #63 = NameAndType        #22:#62       // MODULE$:Lscala/xml/Node$;
   #64 = Fieldref           #61.#63       // scala/xml/Node$.MODULE$:Lscala/xml/Node$;
   #65 = Utf8               NoAttributes
   #66 = NameAndType        #65:#59       // NoAttributes:()Lscala/xml/MetaData;
   #67 = Methodref          #61.#66       // scala/xml/Node$.NoAttributes:()Lscala/xml/MetaData;
   #68 = Utf8               child
   #69 = Utf8               ()Lscala/collection/immutable/Nil$;
   #70 = Utf8               scala/package$
   #71 = Class              #70           // scala/package$
   #72 = Utf8               Lscala/package$;
   #73 = NameAndType        #22:#72       // MODULE$:Lscala/package$;
   #74 = Fieldref           #71.#73       // scala/package$.MODULE$:Lscala/package$;
   #75 = Utf8               Nil
   #76 = NameAndType        #75:#69       // Nil:()Lscala/collection/immutable/Nil$;
   #77 = Methodref          #71.#76       // scala/package$.Nil:()Lscala/collection/immutable/Nil$;
   #78 = Utf8               copy
   #79 = Utf8               <init>
   #80 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
   #81 = NameAndType        #79:#80       // "<init>":(Ljava/lang/String;Ljava/lang/String;)V
   #82 = Methodref          #2.#81        // scala/xml/dtd/PublicID."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   #83 = Utf8               copy$default$1
   #84 = NameAndType        #13:#50       // publicId:()Ljava/lang/String;
   #85 = Methodref          #2.#84        // scala/xml/dtd/PublicID.publicId:()Ljava/lang/String;
   #86 = Utf8               copy$default$2
   #87 = NameAndType        #15:#50       // systemId:()Ljava/lang/String;
   #88 = Methodref          #2.#87        // scala/xml/dtd/PublicID.systemId:()Ljava/lang/String;
   #89 = Utf8               productPrefix
   #90 = Utf8               PublicID
   #91 = String             #90           // PublicID
   #92 = Utf8               productArity
   #93 = Utf8               ()I
   #94 = Utf8               productElement
   #95 = Utf8               (I)Ljava/lang/Object;
   #96 = Utf8               x$1
   #97 = Utf8               scala/runtime/Statics
   #98 = Class              #97           // scala/runtime/Statics
   #99 = Utf8               ioobe
  #100 = NameAndType        #99:#95       // ioobe:(I)Ljava/lang/Object;
  #101 = Methodref          #98.#100      // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #102 = Utf8               I
  #103 = Utf8               java/lang/Object
  #104 = Class              #103          // java/lang/Object
  #105 = Utf8               productIterator
  #106 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #107 = Utf8               scala/runtime/ScalaRunTime$
  #108 = Class              #107          // scala/runtime/ScalaRunTime$
  #109 = Utf8               Lscala/runtime/ScalaRunTime$;
  #110 = NameAndType        #22:#109      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #111 = Fieldref           #108.#110     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #112 = Utf8               typedProductIterator
  #113 = NameAndType        #112:#46      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #114 = Methodref          #108.#113     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #115 = Utf8               canEqual
  #116 = Utf8               (Ljava/lang/Object;)Z
  #117 = Utf8               Ljava/lang/Object;
  #118 = Utf8               productElementName
  #119 = Utf8               (I)Ljava/lang/String;
  #120 = String             #13           // publicId
  #121 = String             #15           // systemId
  #122 = Utf8               java/lang/String
  #123 = Class              #122          // java/lang/String
  #124 = Utf8               hashCode
  #125 = Utf8               _hashCode
  #126 = Utf8               (Lscala/Product;)I
  #127 = NameAndType        #125:#126     // _hashCode:(Lscala/Product;)I
  #128 = Methodref          #108.#127     // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
  #129 = Utf8               equals
  #130 = NameAndType        #129:#116     // equals:(Ljava/lang/Object;)Z
  #131 = Methodref          #104.#130     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #132 = NameAndType        #115:#116     // canEqual:(Ljava/lang/Object;)Z
  #133 = Methodref          #2.#132       // scala/xml/dtd/PublicID.canEqual:(Ljava/lang/Object;)Z
  #134 = Utf8               ()V
  #135 = NameAndType        #79:#134      // "<init>":()V
  #136 = Methodref          #4.#135       // scala/xml/dtd/ExternalID."<init>":()V
  #137 = Utf8               $init$
  #138 = Utf8               (Lscala/Product;)V
  #139 = NameAndType        #137:#138     // $init$:(Lscala/Product;)V
  #140 = InterfaceMethodref #6.#139       // scala/Product.$init$:(Lscala/Product;)V
  #141 = Utf8               checkPubID
  #142 = Utf8               (Ljava/lang/String;)Z
  #143 = NameAndType        #141:#142     // checkPubID:(Ljava/lang/String;)Z
  #144 = Methodref          #2.#143       // scala/xml/dtd/PublicID.checkPubID:(Ljava/lang/String;)Z
  #145 = Utf8               java/lang/IllegalArgumentException
  #146 = Class              #145          // java/lang/IllegalArgumentException
  #147 = Utf8               publicId must consist of PubidChars
  #148 = String             #147          // publicId must consist of PubidChars
  #149 = Utf8               (Ljava/lang/String;)V
  #150 = NameAndType        #79:#149      // "<init>":(Ljava/lang/String;)V
  #151 = Methodref          #146.#150     // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #152 = Utf8               checkSysID
  #153 = NameAndType        #152:#142     // checkSysID:(Ljava/lang/String;)Z
  #154 = Methodref          #2.#153       // scala/xml/dtd/PublicID.checkSysID:(Ljava/lang/String;)Z
  #155 = Utf8               can\'t use both \" and \' in systemId
  #156 = String             #155          // can\'t use both \" and \' in systemId
  #157 = Utf8               Code
  #158 = Utf8               LocalVariableTable
  #159 = Utf8               Signature
  #160 = Utf8               MethodParameters
  #161 = Utf8               LineNumberTable
  #162 = Utf8               StackMapTable
  #163 = Utf8               SourceFile
  #164 = Utf8               RuntimeVisibleAnnotations
  #165 = Utf8               ScalaInlineInfo
  #166 = Utf8               ScalaSig
{
  private final java.lang.String publicId;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String systemId;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.Option<scala.Tuple2<java.lang.String, java.lang.String>> unapply(scala.xml.dtd.PublicID);
    descriptor: (Lscala/xml/dtd/PublicID;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #25                 // Field scala/xml/dtd/PublicID$.MODULE$:Lscala/xml/dtd/PublicID$;
         3: aload_0
         4: invokevirtual #27                 // Method scala/xml/dtd/PublicID$.unapply:(Lscala/xml/dtd/PublicID;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$0   Lscala/xml/dtd/PublicID;
    Signature: #18                          // (Lscala/xml/dtd/PublicID;)Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static scala.xml.dtd.PublicID apply(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lscala/xml/dtd/PublicID;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #25                 // Field scala/xml/dtd/PublicID$.MODULE$:Lscala/xml/dtd/PublicID$;
         3: aload_0
         4: aload_1
         5: invokevirtual #32                 // Method scala/xml/dtd/PublicID$.apply:(Ljava/lang/String;Ljava/lang/String;)Lscala/xml/dtd/PublicID;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 publicId   Ljava/lang/String;
            0       9     1 systemId   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      publicId                       final
      systemId                       final

  public static scala.Function1<scala.Tuple2<java.lang.String, java.lang.String>, scala.xml.dtd.PublicID> tupled();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #25                 // Field scala/xml/dtd/PublicID$.MODULE$:Lscala/xml/dtd/PublicID$;
         3: invokevirtual #37                 // Method scala/xml/dtd/PublicID$.tupled:()Lscala/Function1;
         6: areturn
    Signature: #35                          // ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;Lscala/xml/dtd/PublicID;>;

  public static scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.xml.dtd.PublicID>> curried();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #25                 // Field scala/xml/dtd/PublicID$.MODULE$:Lscala/xml/dtd/PublicID$;
         3: invokevirtual #41                 // Method scala/xml/dtd/PublicID$.curried:()Lscala/Function1;
         6: areturn
    Signature: #39                          // ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Lscala/xml/dtd/PublicID;>;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #48                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/dtd/PublicID;
    Signature: #44                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.lang.String publicId();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #52                 // Field publicId:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/dtd/PublicID;

  public java.lang.String systemId();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #54                 // Field systemId:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/dtd/PublicID;

  public java.lang.String label();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #57                 // String #PI
         2: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/xml/dtd/PublicID;

  public scala.xml.MetaData attribute();
    descriptor: ()Lscala/xml/MetaData;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #64                 // Field scala/xml/Node$.MODULE$:Lscala/xml/Node$;
         3: invokevirtual #67                 // Method scala/xml/Node$.NoAttributes:()Lscala/xml/MetaData;
         6: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/xml/dtd/PublicID;

  public scala.collection.immutable.Nil$ child();
    descriptor: ()Lscala/collection/immutable/Nil$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #74                 // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #77                 // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
         6: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/xml/dtd/PublicID;

  public scala.xml.dtd.PublicID copy(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lscala/xml/dtd/PublicID;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class scala/xml/dtd/PublicID
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #82                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
         9: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/xml/dtd/PublicID;
            0      10     1 publicId   Ljava/lang/String;
            0      10     2 systemId   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      publicId                       final
      systemId                       final

  public java.lang.String copy$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #85                 // Method publicId:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/dtd/PublicID;

  public java.lang.String copy$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #88                 // Method systemId:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/dtd/PublicID;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #91                 // String PublicID
         2: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/xml/dtd/PublicID;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/xml/dtd/PublicID;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 38
            }
        24: aload_0
        25: invokevirtual #85                 // Method publicId:()Ljava/lang/String;
        28: goto          45
        31: aload_0
        32: invokevirtual #88                 // Method systemId:()Ljava/lang/String;
        35: goto          45
        38: iload_1
        39: invokestatic  #101                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        42: goto          45
        45: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lscala/xml/dtd/PublicID;
            0      46     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #114                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/xml/dtd/PublicID;
    Signature: #106                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class scala/xml/dtd/PublicID
         4: ireturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/dtd/PublicID;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 29
                 default: 34
            }
        24: ldc           #120                // String publicId
        26: goto          44
        29: ldc           #121                // String systemId
        31: goto          44
        34: iload_1
        35: invokestatic  #101                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        38: checkcast     #123                // class java/lang/String
        41: goto          44
        44: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lscala/xml/dtd/PublicID;
            0      45     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #128                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/xml/dtd/PublicID;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     118
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class scala/xml/dtd/PublicID
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          122
        31: aload_1
        32: checkcast     #2                  // class scala/xml/dtd/PublicID
        35: astore        4
        37: aload_0
        38: invokevirtual #85                 // Method publicId:()Ljava/lang/String;
        41: aload         4
        43: invokevirtual #85                 // Method publicId:()Ljava/lang/String;
        46: astore        5
        48: dup
        49: ifnonnull     61
        52: pop
        53: aload         5
        55: ifnull        69
        58: goto          114
        61: aload         5
        63: invokevirtual #131                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        66: ifeq          114
        69: aload_0
        70: invokevirtual #88                 // Method systemId:()Ljava/lang/String;
        73: aload         4
        75: invokevirtual #88                 // Method systemId:()Ljava/lang/String;
        78: astore        6
        80: dup
        81: ifnonnull     93
        84: pop
        85: aload         6
        87: ifnull        101
        90: goto          114
        93: aload         6
        95: invokevirtual #131                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        98: ifeq          114
       101: aload         4
       103: aload_0
       104: invokevirtual #133                // Method canEqual:(Ljava/lang/Object;)Z
       107: ifeq          114
       110: iconst_1
       111: goto          115
       114: iconst_0
       115: ifeq          122
       118: iconst_1
       119: goto          123
       122: iconst_0
       123: ireturn
      StackMapTable: number_of_entries = 12
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/xml/dtd/PublicID, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class scala/xml/dtd/PublicID, class java/lang/Object, int, class java/lang/Object, class scala/xml/dtd/PublicID, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class scala/xml/dtd/PublicID, class java/lang/Object, int, class java/lang/Object, class scala/xml/dtd/PublicID, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/xml/dtd/PublicID, class java/lang/Object ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/xml/dtd/PublicID, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     124     0  this   Lscala/xml/dtd/PublicID;
            0     124     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.xml.dtd.PublicID(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #52                 // Field publicId:Ljava/lang/String;
         5: aload_0
         6: aload_2
         7: putfield      #54                 // Field systemId:Ljava/lang/String;
        10: aload_0
        11: invokespecial #136                // Method scala/xml/dtd/ExternalID."<init>":()V
        14: aload_0
        15: invokestatic  #140                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        18: aload_0
        19: aload_1
        20: invokevirtual #144                // Method checkPubID:(Ljava/lang/String;)Z
        23: ifne          36
        26: new           #146                // class java/lang/IllegalArgumentException
        29: dup
        30: ldc           #148                // String publicId must consist of PubidChars
        32: invokespecial #151                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        35: athrow
        36: aload_2
        37: ifnull        58
        40: aload_0
        41: aload_2
        42: invokevirtual #154                // Method checkSysID:(Ljava/lang/String;)Z
        45: ifne          58
        48: new           #146                // class java/lang/IllegalArgumentException
        51: dup
        52: ldc           #156                // String can\'t use both \" and \' in systemId
        54: invokespecial #151                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        57: athrow
        58: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class scala/xml/dtd/PublicID, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 21 /* same */
      LineNumberTable:
        line 65: 0
        line 66: 18
        line 67: 26
        line 69: 36
        line 70: 48
        line 65: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lscala/xml/dtd/PublicID;
            0      59     1 publicId   Ljava/lang/String;
            0      59     2 systemId   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      publicId                       final
      systemId                       final
}
SourceFile: "ExternalID.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005Md\u0001B\u000e\u001d\u0001\u000eB\u0001\u0002\u000f\u0001\u0003\u0016\u0004%\t!\u000f\u0005\t\u0005\u0002\u0011\t\u0012)A\u0005u!A1\t\u0001BK\u0002\u0013\u0005\u0011\b\u0003\u0005E\u0001\tE\t\u0015!\u0003;\u0011\u0015)\u0005\u0001\"\u0001G\u0011\u0015Q\u0005\u0001\"\u0001L\u0011\u0015\u0019\u0006\u0001\"\u0001U\u0011\u0015I\u0006\u0001\"\u0001[\u0011\u001d\u0019\u0007!!A\u0005\u0002\u0011Dqa\u001a\u0001\u0012\u0002\u0013\u0005\u0001\u000eC\u0004t\u0001E\u0005I\u0011\u00015\t\u000fQ\u0004\u0011\u0011!C!\u0017\"9Q\u000fAA\u0001\n\u00031\bb\u0002>\u0001\u0003\u0003%\ta\u001f\u0005\n\u0003\u0007\u0001\u0011\u0011!C!\u0003\u000bA\u0011\"a\u0004\u0001\u0003\u0003%\t!!\u0005\t\u0013\u0005m\u0001!!A\u0005B\u0005u\u0001\"CA\u0011\u0001\u0005\u0005I\u0011IA\u0012\u0011%\t)\u0003AA\u0001\n\u0003\n9cB\u0005\u0002,q\t\t\u0011#\u0001\u0002.\u0019A1\u0004HA\u0001\u0012\u0003\ty\u0003\u0003\u0004F+\u0011\u0005\u0011q\t\u0005\n\u0003\u0013*\u0012\u0011!C#\u0003\u0017B\u0011\"!\u0014\u0016\u0003\u0003%\t)a\u0014\t\u0013\u0005US#!A\u0005\u0002\u0006]\u0003\"CA5+\u0005\u0005I\u0011BA6\u0005!\u0001VO\u00197jG&#%BA\u000f\u001f\u0003\r!G\u000f\u001a\u0006\u0003?\u0001\n1\u0001_7m\u0015\u0005\t\u0013!B:dC2\f7\u0001A\n\u0005\u0001\u0011BC\u0006\u0005\u0002&M5\tA$\u0003\u0002(9\tQQ\t\u001f;fe:\fG.\u0013#\u0011\u0005%RS\"\u0001\u0011\n\u0005-\u0002#a\u0002)s_\u0012,8\r\u001e\t\u0003[Ur!AL\u001a\u000f\u0005=\u0012T\"\u0001\u0019\u000b\u0005E\u0012\u0013A\u0002\u001fs_>$h(C\u0001\"\u0013\t!\u0004%A\u0004qC\u000e\\\u0017mZ3\n\u0005Y:$\u0001D*fe&\fG.\u001b>bE2,\'B\u0001\u001b!\u0003!\u0001XO\u00197jG&#W#\u0001\u001e\u0011\u0005mzdB\u0001\u001f>!\ty\u0003%\u0003\u0002?A\u00051\u0001K]3eK\u001aL!\u0001Q!\u0003\rM#(/\u001b8h\u0015\tq\u0004%A\u0005qk\nd\u0017nY%eA\u0005A1/_:uK6LE-A\u0005tsN$X-\\%eA\u00051A(\u001b8jiz\"2a\u0012%J!\t)\u0003\u0001C\u00039\u000b\u0001\u0007!\bC\u0003D\u000b\u0001\u0007!(A\u0003mC\n,G.F\u0001M!\ti%+D\u0001O\u0015\ty\u0005+\u0001\u0003mC:<\'\"A)\u0002\t)\fg/Y\u0005\u0003\u0001:\u000b\u0011\"\u0019;ue&\u0014W\u000f^3\u0016\u0003U\u0003\"AV,\u000e\u0003yI!\u0001\u0017\u0010\u0003\u00115+G/\u0019#bi\u0006\fQa\u00195jY\u0012,\u0012a\u0017\t\u00039\u0006l\u0011!\u0018\u0006\u0003=~\u000b\u0011\"[7nkR\f\'\r\\3\u000b\u0005\u0001\u0004\u0013AC2pY2,7\r^5p]*\u0011!-X\u0001\u0004\u001d&d\u0017\u0001B2paf$2aR3g\u0011\u001dA\u0014\u0002%AA\u0002iBqaQ\u0005\u0011\u0002\u0003\u0007!(\u0001\bd_BLH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0003%T#A\u000f6,\u0003-\u0004\"\u0001\\9\u000e\u00035T!A\\8\u0002\u0013Ut7\r[3dW\u0016$\'B\u00019!\u0003)\tgN\\8uCRLwN\\\u0005\u0003e6\u0014\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII\nQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&D\u0018\u0001\u00049s_\u0012,8\r^!sSRLX#A<\u0011\u0005%B\u0018BA=!\u0005\rIe\u000e^\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\tax\u0010\u0005\u0002*{&\u0011a\u0010\t\u0002\u0004\u0003:L\b\u0002CA\u0001\u001d\u0005\u0005\t\u0019A<\u0002\u0007a$\u0013\'A\bqe>$Wo\u0019;Ji\u0016\u0014\u0018\r^8s+\t\t9\u0001E\u0003\u0002\n\u0005-A0D\u0001`\u0013\r\tia\u0018\u0002\t\u0013R,\'/\u0019;pe\u0006A1-\u00198FcV\fG\u000e\u0006\u0003\u0002\u0014\u0005e\u0001cA\u0015\u0002\u0016%\u0019\u0011q\u0003\u0011\u0003\u000f\t{w\u000e\\3b]\"A\u0011\u0011\u0001\t\u0002\u0002\u0003\u0007A0\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,Gc\u0001\'\u0002 !A\u0011\u0011A\t\u0002\u0002\u0003\u0007q/\u0001\u0005iCND7i\u001c3f)\u00059\u0018AB3rk\u0006d7\u000f\u0006\u0003\u0002\u0014\u0005%\u0002\u0002CA\u0001\'\u0005\u0005\t\u0019\u0001?\u0002\u0011A+(\r\\5d\u0013\u0012\u0003\"!J\u000b\u0014\u000bU\t\t$!\u0010\u0011\u000f\u0005M\u0012\u0011\b\u001e;\u000f6\u0011\u0011Q\u0007\u0006\u0004\u0003o\u0001\u0013a\u0002:v]RLW.Z\u0005\u0005\u0003w\t)DA\tBEN$(/Y2u\rVt7\r^5p]J\u0002B!a\u0010\u0002F5\u0011\u0011\u0011\t\u0006\u0004\u0003\u0007\u0002\u0016AA5p\u0013\r1\u0014\u0011\t\u000b\u0003\u0003[\t\u0001\u0002^8TiJLgn\u001a\u000b\u0002\u0019\u0006)\u0011\r\u001d9msR)q)!\u0015\u0002T!)\u0001\b\u0007a\u0001u!)1\t\u0007a\u0001u\u00059QO\\1qa2LH\u0003BA-\u0003K\u0002R!KA.\u0003?J1!!\u0018!\u0005\u0019y\u0005\u000f^5p]B)\u0011&!\u0019;u%\u0019\u00111\r\u0011\u0003\rQ+\b\u000f\\33\u0011!\t9\'GA\u0001\u0002\u00049\u0015a\u0001=%a\u0005aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011Q\u000e\t\u0004\u001b\u0006=\u0014bAA9\u001d\n1qJ\u00196fGR\u0004"
    )
  ScalaInlineInfo: length = 0x5E (unknown attribute)
   01 00 00 12 00 4F 00 50 00 00 3A 00 3B 00 00 73
   00 74 00 00 44 00 45 00 00 4E 00 1E 00 00 53 00
   32 00 00 56 00 32 00 00 81 00 74 00 00 7C 00 5D
   00 00 37 00 32 00 00 5C 00 5D 00 00 5E 00 5F 00
   00 76 00 77 00 00 2A 00 2B 00 00 69 00 2B 00 00
   59 00 32 00 00 0D 00 32 00 00 0F 00 32 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
