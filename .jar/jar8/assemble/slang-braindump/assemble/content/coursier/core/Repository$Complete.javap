Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/Repository$Complete.class
  Last modified May 29, 2022; size 21446 bytes
  SHA-256 checksum e7cdef9e6d24e1d0f8dc7f6cca55498776800d9c67cef507c8ddecdf28f8e988
  Compiled from "Repository.scala"
public interface coursier.core.Repository$Complete<F extends java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // coursier/core/Repository$Complete
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 49, attributes: 6
Constant pool:
    #1 = Utf8               coursier/core/Repository$Complete
    #2 = Class              #1            // coursier/core/Repository$Complete
    #3 = Utf8               <F:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               Repository.scala
    #7 = Utf8               coursier/core/Repository
    #8 = Class              #7            // coursier/core/Repository
    #9 = Utf8               Complete
   #10 = Utf8               coursier/core/Repository$Complete$
   #11 = Class              #10           // coursier/core/Repository$Complete$
   #12 = Utf8
   #13 = Utf8               coursier/core/Repository$Complete$CompletingNameException
   #14 = Class              #13           // coursier/core/Repository$Complete$CompletingNameException
   #15 = Utf8               CompletingNameException
   #16 = Utf8               coursier/core/Repository$Complete$CompletingOrgException
   #17 = Class              #16           // coursier/core/Repository$Complete$CompletingOrgException
   #18 = Utf8               CompletingOrgException
   #19 = Utf8               coursier/core/Repository$Complete$CompletingVersionException
   #20 = Class              #19           // coursier/core/Repository$Complete$CompletingVersionException
   #21 = Utf8               CompletingVersionException
   #22 = Utf8               coursier/core/Repository$Complete$Input
   #23 = Class              #22           // coursier/core/Repository$Complete$Input
   #24 = Utf8               Input
   #25 = Utf8               coursier/core/Repository$Complete$Input$
   #26 = Class              #25           // coursier/core/Repository$Complete$Input$
   #27 = Utf8               coursier/core/Repository$Complete$Input$Name
   #28 = Class              #27           // coursier/core/Repository$Complete$Input$Name
   #29 = Utf8               Name
   #30 = Utf8               coursier/core/Repository$Complete$Input$Name$
   #31 = Class              #30           // coursier/core/Repository$Complete$Input$Name$
   #32 = Utf8               coursier/core/Repository$Complete$Input$Org
   #33 = Class              #32           // coursier/core/Repository$Complete$Input$Org
   #34 = Utf8               Org
   #35 = Utf8               coursier/core/Repository$Complete$Input$Org$
   #36 = Class              #35           // coursier/core/Repository$Complete$Input$Org$
   #37 = Utf8               coursier/core/Repository$Complete$Input$Ver
   #38 = Class              #37           // coursier/core/Repository$Complete$Input$Ver
   #39 = Utf8               Ver
   #40 = Utf8               coursier/core/Repository$Complete$Result
   #41 = Class              #40           // coursier/core/Repository$Complete$Result
   #42 = Utf8               Result
   #43 = Utf8               coursier/core/Repository$Complete$Result$
   #44 = Class              #43           // coursier/core/Repository$Complete$Result$
   #45 = Utf8               coursier/util/Monad$AllOps
   #46 = Class              #45           // coursier/util/Monad$AllOps
   #47 = Utf8               coursier/util/Monad
   #48 = Class              #47           // coursier/util/Monad
   #49 = Utf8               AllOps
   #50 = Utf8               coursier/util/Monad$ops$
   #51 = Class              #50           // coursier/util/Monad$ops$
   #52 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #53 = Class              #52           // java/lang/invoke/MethodHandles$Lookup
   #54 = Utf8               java/lang/invoke/MethodHandles
   #55 = Class              #54           // java/lang/invoke/MethodHandles
   #56 = Utf8               Lookup
   #57 = Utf8               organization
   #58 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
   #59 = Utf8               (Ljava/lang/String;)TF;
   #60 = Utf8               prefix
   #61 = Utf8               moduleName
   #62 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
   #63 = Utf8               (Ljava/lang/String;Ljava/lang/String;)TF;
   #64 = Utf8               versions
   #65 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;)Ljava/lang/Object;
   #66 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;)TF;
   #67 = Utf8               module
   #68 = Utf8               org
   #69 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;)Ljava/lang/Object;
   #70 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad<TF;>;)TF;
   #71 = Utf8               orgInput
   #72 = Utf8               F
   #73 = Utf8               input
   #74 = Utf8               ()Ljava/lang/String;
   #75 = NameAndType        #73:#74       // input:()Ljava/lang/String;
   #76 = Methodref          #33.#75       // coursier/core/Repository$Complete$Input$Org.input:()Ljava/lang/String;
   #77 = NameAndType        #57:#58       // organization:(Ljava/lang/String;)Ljava/lang/Object;
   #78 = InterfaceMethodref #2.#77        // coursier/core/Repository$Complete.organization:(Ljava/lang/String;)Ljava/lang/Object;
   #79 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #80 = MethodType         #79           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #81 = Utf8               $anonfun$org$1
   #82 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;Lscala/util/Either;)Lscala/util/Either;
   #83 = NameAndType        #81:#82       // $anonfun$org$1:(Lcoursier/core/Repository$Complete$Input$Org;Lscala/util/Either;)Lscala/util/Either;
   #84 = InterfaceMethodref #2.#83        // coursier/core/Repository$Complete.$anonfun$org$1:(Lcoursier/core/Repository$Complete$Input$Org;Lscala/util/Either;)Lscala/util/Either;
   #85 = MethodHandle       6:#84         // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$org$1:(Lcoursier/core/Repository$Complete$Input$Org;Lscala/util/Either;)Lscala/util/Either;
   #86 = Utf8               (Lscala/util/Either;)Lscala/util/Either;
   #87 = MethodType         #86           //  (Lscala/util/Either;)Lscala/util/Either;
   #88 = Integer            5
   #89 = Integer            1
   #90 = Utf8               java/lang/invoke/LambdaMetafactory
   #91 = Class              #90           // java/lang/invoke/LambdaMetafactory
   #92 = Utf8               altMetafactory
   #93 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #94 = NameAndType        #92:#93       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #95 = Methodref          #91.#94       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #96 = MethodHandle       6:#95         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #97 = Utf8               apply
   #98 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;)Lscala/Function1;
   #99 = NameAndType        #97:#98       // apply:(Lcoursier/core/Repository$Complete$Input$Org;)Lscala/Function1;
  #100 = InvokeDynamic      #0:#99        // #0:apply:(Lcoursier/core/Repository$Complete$Input$Org;)Lscala/Function1;
  #101 = Utf8               map
  #102 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #103 = NameAndType        #101:#102     // map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #104 = InterfaceMethodref #48.#103      // coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #105 = Utf8               this
  #106 = Utf8               Lcoursier/core/Repository$Complete;
  #107 = Utf8               Lcoursier/core/Repository$Complete$Input$Org;
  #108 = Utf8               Lcoursier/util/Monad;
  #109 = Utf8               name
  #110 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
  #111 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad<TF;>;)TF;
  #112 = Utf8               nameInput
  #113 = NameAndType        #57:#74       // organization:()Ljava/lang/String;
  #114 = Methodref          #28.#113      // coursier/core/Repository$Complete$Input$Name.organization:()Ljava/lang/String;
  #115 = Utf8               scala/collection/StringOps$
  #116 = Class              #115          // scala/collection/StringOps$
  #117 = Utf8               MODULE$
  #118 = Utf8               Lscala/collection/StringOps$;
  #119 = NameAndType        #117:#118     // MODULE$:Lscala/collection/StringOps$;
  #120 = Fieldref           #116.#119     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #121 = Utf8               scala/Predef$
  #122 = Class              #121          // scala/Predef$
  #123 = Utf8               Lscala/Predef$;
  #124 = NameAndType        #117:#123     // MODULE$:Lscala/Predef$;
  #125 = Fieldref           #122.#124     // scala/Predef$.MODULE$:Lscala/Predef$;
  #126 = Methodref          #28.#75       // coursier/core/Repository$Complete$Input$Name.input:()Ljava/lang/String;
  #127 = Utf8               augmentString
  #128 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #129 = NameAndType        #127:#128     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #130 = Methodref          #122.#129     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #131 = Utf8               from
  #132 = Utf8               ()I
  #133 = NameAndType        #131:#132     // from:()I
  #134 = Methodref          #28.#133      // coursier/core/Repository$Complete$Input$Name.from:()I
  #135 = Utf8               drop$extension
  #136 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #137 = NameAndType        #135:#136     // drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #138 = Methodref          #116.#137     // scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #139 = NameAndType        #61:#62       // moduleName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #140 = InterfaceMethodref #2.#139       // coursier/core/Repository$Complete.moduleName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #141 = Utf8               $anonfun$name$1
  #142 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Lscala/util/Either;
  #143 = NameAndType        #141:#142     // $anonfun$name$1:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Lscala/util/Either;
  #144 = InterfaceMethodref #2.#143       // coursier/core/Repository$Complete.$anonfun$name$1:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Lscala/util/Either;
  #145 = MethodHandle       6:#144        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$name$1:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Lscala/util/Either;
  #146 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
  #147 = NameAndType        #97:#146      // apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
  #148 = InvokeDynamic      #1:#147       // #1:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
  #149 = Utf8               Lcoursier/core/Repository$Complete$Input$Name;
  #150 = Utf8               hasOrg
  #151 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #152 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad<TF;>;)TF;
  #153 = Utf8               partial
  #154 = NameAndType        #68:#69       // org:(Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;)Ljava/lang/Object;
  #155 = InterfaceMethodref #2.#154       // coursier/core/Repository$Complete.org:(Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;)Ljava/lang/Object;
  #156 = Utf8               $anonfun$hasOrg$1$adapted
  #157 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Ljava/lang/Object;
  #158 = NameAndType        #156:#157     // $anonfun$hasOrg$1$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Ljava/lang/Object;
  #159 = InterfaceMethodref #2.#158       // coursier/core/Repository$Complete.$anonfun$hasOrg$1$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Ljava/lang/Object;
  #160 = MethodHandle       6:#159        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$1$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Ljava/lang/Object;
  #161 = Utf8               (Lscala/util/Either;)Ljava/lang/Object;
  #162 = MethodType         #161          //  (Lscala/util/Either;)Ljava/lang/Object;
  #163 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;Z)Lscala/Function1;
  #164 = NameAndType        #97:#163      // apply:(Lcoursier/core/Repository$Complete$Input$Org;Z)Lscala/Function1;
  #165 = InvokeDynamic      #2:#164       // #2:apply:(Lcoursier/core/Repository$Complete$Input$Org;Z)Lscala/Function1;
  #166 = Utf8               java/lang/String
  #167 = Class              #166          // java/lang/String
  #168 = Utf8               lastIndexOf
  #169 = Utf8               (I)I
  #170 = NameAndType        #168:#169     // lastIndexOf:(I)I
  #171 = Methodref          #167.#170     // java/lang/String.lastIndexOf:(I)I
  #172 = Utf8               Lcoursier/core/Repository$Complete$Input$Org$;
  #173 = NameAndType        #117:#172     // MODULE$:Lcoursier/core/Repository$Complete$Input$Org$;
  #174 = Fieldref           #36.#173      // coursier/core/Repository$Complete$Input$Org$.MODULE$:Lcoursier/core/Repository$Complete$Input$Org$;
  #175 = Utf8               take$extension
  #176 = NameAndType        #175:#136     // take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #177 = Methodref          #116.#176     // scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #178 = Utf8               (Ljava/lang/String;)Lcoursier/core/Repository$Complete$Input$Org;
  #179 = NameAndType        #97:#178      // apply:(Ljava/lang/String;)Lcoursier/core/Repository$Complete$Input$Org;
  #180 = Methodref          #36.#179      // coursier/core/Repository$Complete$Input$Org$.apply:(Ljava/lang/String;)Lcoursier/core/Repository$Complete$Input$Org;
  #181 = Utf8               Lcoursier/util/Monad$ops$;
  #182 = NameAndType        #117:#181     // MODULE$:Lcoursier/util/Monad$ops$;
  #183 = Fieldref           #51.#182      // coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
  #184 = NameAndType        #150:#151     // hasOrg:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #185 = InterfaceMethodref #2.#184       // coursier/core/Repository$Complete.hasOrg:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #186 = Utf8               toAllMonadOps
  #187 = Utf8               (Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #188 = NameAndType        #186:#187     // toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #189 = Methodref          #51.#188      // coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #190 = Utf8               $anonfun$hasOrg$4$adapted
  #191 = Utf8               (Lcoursier/util/Monad;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #192 = NameAndType        #190:#191     // $anonfun$hasOrg$4$adapted:(Lcoursier/util/Monad;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #193 = InterfaceMethodref #2.#192       // coursier/core/Repository$Complete.$anonfun$hasOrg$4$adapted:(Lcoursier/util/Monad;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #194 = MethodHandle       6:#193        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$4$adapted:(Lcoursier/util/Monad;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #195 = Utf8               (Lcoursier/util/Monad;Ljava/lang/Object;)Lscala/Function1;
  #196 = NameAndType        #97:#195      // apply:(Lcoursier/util/Monad;Ljava/lang/Object;)Lscala/Function1;
  #197 = InvokeDynamic      #3:#196       // #3:apply:(Lcoursier/util/Monad;Ljava/lang/Object;)Lscala/Function1;
  #198 = Utf8               flatMap
  #199 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #200 = NameAndType        #198:#199     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #201 = InterfaceMethodref #46.#200      // coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #202 = Utf8               truncatedInput
  #203 = Utf8               check
  #204 = Utf8               Ljava/lang/Object;
  #205 = Utf8               idx
  #206 = Utf8               I
  #207 = Utf8               Z
  #208 = Utf8               hasName
  #209 = NameAndType        #109:#110     // name:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
  #210 = InterfaceMethodref #2.#209       // coursier/core/Repository$Complete.name:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
  #211 = Utf8               $anonfun$hasName$1$adapted
  #212 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Ljava/lang/Object;
  #213 = NameAndType        #211:#212     // $anonfun$hasName$1$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Ljava/lang/Object;
  #214 = InterfaceMethodref #2.#213       // coursier/core/Repository$Complete.$anonfun$hasName$1$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Ljava/lang/Object;
  #215 = MethodHandle       6:#214        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasName$1$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Ljava/lang/Object;
  #216 = InvokeDynamic      #4:#147       // #4:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
  #217 = Utf8               sbtAttrStub$
  #218 = Utf8               (Lcoursier/core/Repository$Complete;)Z
  #219 = Utf8               $this
  #220 = Utf8               sbtAttrStub
  #221 = Utf8               ()Z
  #222 = NameAndType        #220:#221     // sbtAttrStub:()Z
  #223 = InterfaceMethodref #2.#222       // coursier/core/Repository$Complete.sbtAttrStub:()Z
  #224 = Utf8               hasModule$
  #225 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #226 = Utf8               hasModule
  #227 = Utf8               (Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #228 = NameAndType        #226:#227     // hasModule:(Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #229 = InterfaceMethodref #2.#228       // coursier/core/Repository$Complete.hasModule:(Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #230 = Utf8               Lcoursier/core/Module;
  #231 = Utf8               (Lcoursier/core/Module;ZLcoursier/util/Monad<TF;>;)TF;
  #232 = Utf8               coursier/core/Module
  #233 = Class              #232          // coursier/core/Module
  #234 = Methodref          #233.#113     // coursier/core/Module.organization:()Ljava/lang/String;
  #235 = Utf8               $anonfun$hasModule$1$adapted
  #236 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZLjava/lang/Object;)Ljava/lang/Object;
  #237 = NameAndType        #235:#236     // $anonfun$hasModule$1$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZLjava/lang/Object;)Ljava/lang/Object;
  #238 = InterfaceMethodref #2.#237       // coursier/core/Repository$Complete.$anonfun$hasModule$1$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZLjava/lang/Object;)Ljava/lang/Object;
  #239 = MethodHandle       6:#238        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasModule$1$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZLjava/lang/Object;)Ljava/lang/Object;
  #240 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;Z)Lscala/Function1;
  #241 = NameAndType        #97:#240      // apply:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;Z)Lscala/Function1;
  #242 = InvokeDynamic      #5:#241       // #5:apply:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;Z)Lscala/Function1;
  #243 = Utf8               hasModule$default$2$
  #244 = Utf8               hasModule$default$2
  #245 = NameAndType        #244:#221     // hasModule$default$2:()Z
  #246 = InterfaceMethodref #2.#245       // coursier/core/Repository$Complete.hasModule$default$2:()Z
  #247 = Utf8               complete$
  #248 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #249 = Utf8               complete
  #250 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #251 = NameAndType        #249:#250     // complete:(Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #252 = InterfaceMethodref #2.#251       // coursier/core/Repository$Complete.complete:(Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #253 = Utf8               Lcoursier/core/Repository$Complete$Input;
  #254 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad<TF;>;)TF;
  #255 = Utf8               $anonfun$complete$2$adapted
  #256 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #257 = NameAndType        #255:#256     // $anonfun$complete$2$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #258 = InterfaceMethodref #2.#257       // coursier/core/Repository$Complete.$anonfun$complete$2$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #259 = MethodHandle       6:#258        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$2$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #260 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #261 = NameAndType        #97:#260      // apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #262 = InvokeDynamic      #6:#261       // #6:apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #263 = Utf8               ()Lcoursier/core/Repository$Complete$Input$Org;
  #264 = NameAndType        #71:#263      // orgInput:()Lcoursier/core/Repository$Complete$Input$Org;
  #265 = Methodref          #28.#264      // coursier/core/Repository$Complete$Input$Name.orgInput:()Lcoursier/core/Repository$Complete$Input$Org;
  #266 = Utf8               $anonfun$complete$3$adapted
  #267 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #268 = NameAndType        #266:#267     // $anonfun$complete$3$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #269 = InterfaceMethodref #2.#268       // coursier/core/Repository$Complete.$anonfun$complete$3$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #270 = MethodHandle       6:#269        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$3$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #271 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #272 = NameAndType        #97:#271      // apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #273 = InvokeDynamic      #7:#272       // #7:apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #274 = Methodref          #38.#264      // coursier/core/Repository$Complete$Input$Ver.orgInput:()Lcoursier/core/Repository$Complete$Input$Org;
  #275 = Utf8               $anonfun$complete$4$adapted
  #276 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #277 = NameAndType        #275:#276     // $anonfun$complete$4$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #278 = InterfaceMethodref #2.#277       // coursier/core/Repository$Complete.$anonfun$complete$4$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #279 = MethodHandle       6:#278        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$4$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #280 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #281 = NameAndType        #97:#280      // apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #282 = InvokeDynamic      #8:#281       // #8:apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #283 = Utf8               scala/MatchError
  #284 = Class              #283          // scala/MatchError
  #285 = Utf8               <init>
  #286 = Utf8               (Ljava/lang/Object;)V
  #287 = NameAndType        #285:#286     // "<init>":(Ljava/lang/Object;)V
  #288 = Methodref          #284.#287     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #289 = Utf8               (Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
  #290 = Utf8               scalaVersion
  #291 = Utf8               scalaBinaryVersion
  #292 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
  #293 = NameAndType        #249:#292     // complete:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
  #294 = InterfaceMethodref #2.#293       // coursier/core/Repository$Complete.complete:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
  #295 = Utf8               Ljava/lang/String;
  #296 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad<TF;>;)TF;
  #297 = Utf8               Lcoursier/core/Repository$Complete$;
  #298 = NameAndType        #117:#297     // MODULE$:Lcoursier/core/Repository$Complete$;
  #299 = Fieldref           #11.#298      // coursier/core/Repository$Complete$.MODULE$:Lcoursier/core/Repository$Complete$;
  #300 = Utf8               parse
  #301 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
  #302 = NameAndType        #300:#301     // parse:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
  #303 = Methodref          #11.#302      // coursier/core/Repository$Complete$.parse:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
  #304 = Utf8               scala/util/Left
  #305 = Class              #304          // scala/util/Left
  #306 = Utf8               value
  #307 = Utf8               ()Ljava/lang/Object;
  #308 = NameAndType        #306:#307     // value:()Ljava/lang/Object;
  #309 = Methodref          #305.#308     // scala/util/Left.value:()Ljava/lang/Object;
  #310 = Utf8               java/lang/Throwable
  #311 = Class              #310          // java/lang/Throwable
  #312 = Utf8               scala/package$
  #313 = Class              #312          // scala/package$
  #314 = Utf8               Lscala/package$;
  #315 = NameAndType        #117:#314     // MODULE$:Lscala/package$;
  #316 = Fieldref           #313.#315     // scala/package$.MODULE$:Lscala/package$;
  #317 = Utf8               Left
  #318 = Utf8               ()Lscala/util/Left$;
  #319 = NameAndType        #317:#318     // Left:()Lscala/util/Left$;
  #320 = Methodref          #313.#319     // scala/package$.Left:()Lscala/util/Left$;
  #321 = Utf8               scala/util/Left$
  #322 = Class              #321          // scala/util/Left$
  #323 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #324 = NameAndType        #97:#323      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #325 = Methodref          #322.#324     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #326 = Utf8               point
  #327 = NameAndType        #326:#79      // point:(Ljava/lang/Object;)Ljava/lang/Object;
  #328 = InterfaceMethodref #48.#327      // coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
  #329 = Utf8               scala/util/Either
  #330 = Class              #329          // scala/util/Either
  #331 = Utf8               scala/util/Right
  #332 = Class              #331          // scala/util/Right
  #333 = Methodref          #332.#308     // scala/util/Right.value:()Ljava/lang/Object;
  #334 = Utf8               e
  #335 = Utf8               Ljava/lang/Throwable;
  #336 = Utf8               input0
  #337 = Utf8               orgInput$1
  #338 = Utf8               x0$1
  #339 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V
  #340 = NameAndType        #285:#339     // "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #341 = Methodref          #17.#340      // coursier/core/Repository$Complete$CompletingOrgException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #342 = Utf8               scala/collection/immutable/Seq
  #343 = Class              #342          // scala/collection/immutable/Seq
  #344 = Utf8               Right
  #345 = Utf8               ()Lscala/util/Right$;
  #346 = NameAndType        #344:#345     // Right:()Lscala/util/Right$;
  #347 = Methodref          #313.#346     // scala/package$.Right:()Lscala/util/Right$;
  #348 = Utf8               Lcoursier/core/Repository$Complete$Result$;
  #349 = NameAndType        #117:#348     // MODULE$:Lcoursier/core/Repository$Complete$Result$;
  #350 = Fieldref           #44.#349      // coursier/core/Repository$Complete$Result$.MODULE$:Lcoursier/core/Repository$Complete$Result$;
  #351 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/core/Repository$Complete$Result;
  #352 = NameAndType        #97:#351      // apply:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/core/Repository$Complete$Result;
  #353 = Methodref          #44.#352      // coursier/core/Repository$Complete$Result$.apply:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/core/Repository$Complete$Result;
  #354 = Utf8               scala/util/Right$
  #355 = Class              #354          // scala/util/Right$
  #356 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #357 = NameAndType        #97:#356      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #358 = Methodref          #355.#357     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #359 = Utf8               l
  #360 = Utf8               Lscala/collection/immutable/Seq;
  #361 = Utf8               Lscala/util/Either;
  #362 = Utf8               $anonfun$name$2
  #363 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Z
  #364 = Utf8               nameInput$1
  #365 = Utf8               x$3
  #366 = Utf8               requiredSuffix
  #367 = NameAndType        #366:#74      // requiredSuffix:()Ljava/lang/String;
  #368 = Methodref          #28.#367      // coursier/core/Repository$Complete$Input$Name.requiredSuffix:()Ljava/lang/String;
  #369 = Utf8               endsWith
  #370 = Utf8               (Ljava/lang/String;)Z
  #371 = NameAndType        #369:#370     // endsWith:(Ljava/lang/String;)Z
  #372 = Methodref          #167.#371     // java/lang/String.endsWith:(Ljava/lang/String;)Z
  #373 = Utf8               $anonfun$name$3
  #374 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/String;
  #375 = Utf8               x$4
  #376 = Utf8               stripSuffix$extension
  #377 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #378 = NameAndType        #376:#377     // stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #379 = Methodref          #116.#378     // scala/collection/StringOps$.stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #380 = Utf8               (Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V
  #381 = NameAndType        #285:#380     // "<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V
  #382 = Methodref          #14.#381      // coursier/core/Repository$Complete$CompletingNameException."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V
  #383 = Utf8               $anonfun$name$2$adapted
  #384 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/Object;
  #385 = NameAndType        #383:#384     // $anonfun$name$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/Object;
  #386 = InterfaceMethodref #2.#385       // coursier/core/Repository$Complete.$anonfun$name$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/Object;
  #387 = MethodHandle       6:#386        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$name$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/Object;
  #388 = MethodType         #58           //  (Ljava/lang/String;)Ljava/lang/Object;
  #389 = InvokeDynamic      #9:#147       // #9:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
  #390 = Utf8               filter
  #391 = NameAndType        #390:#199     // filter:(Lscala/Function1;)Ljava/lang/Object;
  #392 = InterfaceMethodref #343.#391     // scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
  #393 = Utf8               scala/collection/IterableOps
  #394 = Class              #393          // scala/collection/IterableOps
  #395 = NameAndType        #373:#374     // $anonfun$name$3:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/String;
  #396 = InterfaceMethodref #2.#395       // coursier/core/Repository$Complete.$anonfun$name$3:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/String;
  #397 = MethodHandle       6:#396        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$name$3:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/String;
  #398 = MethodType         #128          //  (Ljava/lang/String;)Ljava/lang/String;
  #399 = InvokeDynamic      #10:#147      // #10:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
  #400 = NameAndType        #101:#199     // map:(Lscala/Function1;)Ljava/lang/Object;
  #401 = InterfaceMethodref #394.#400     // scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #402 = Utf8               l0
  #403 = Utf8               $anonfun$hasOrg$3
  #404 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Z
  #405 = Utf8               orgInput$2
  #406 = Utf8               x$5
  #407 = Utf8               java/lang/StringBuilder
  #408 = Class              #407          // java/lang/StringBuilder
  #409 = Utf8               (I)V
  #410 = NameAndType        #285:#409     // "<init>":(I)V
  #411 = Methodref          #408.#410     // java/lang/StringBuilder."<init>":(I)V
  #412 = Utf8               append
  #413 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #414 = NameAndType        #412:#413     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #415 = Methodref          #408.#414     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #416 = Utf8               .
  #417 = String             #416          // .
  #418 = Utf8               toString
  #419 = NameAndType        #418:#74      // toString:()Ljava/lang/String;
  #420 = Methodref          #408.#419     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #421 = Utf8               startsWith
  #422 = NameAndType        #421:#370     // startsWith:(Ljava/lang/String;)Z
  #423 = Methodref          #167.#422     // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #424 = Utf8               $anonfun$hasOrg$2
  #425 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Z
  #426 = Utf8               partial$1
  #427 = Utf8               res
  #428 = Utf8               completions
  #429 = Utf8               ()Lscala/collection/immutable/Seq;
  #430 = NameAndType        #428:#429     // completions:()Lscala/collection/immutable/Seq;
  #431 = Methodref          #41.#430      // coursier/core/Repository$Complete$Result.completions:()Lscala/collection/immutable/Seq;
  #432 = Utf8               contains
  #433 = Utf8               (Ljava/lang/Object;)Z
  #434 = NameAndType        #432:#433     // contains:(Ljava/lang/Object;)Z
  #435 = InterfaceMethodref #343.#434     // scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
  #436 = Utf8               $anonfun$hasOrg$3$adapted
  #437 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Ljava/lang/Object;
  #438 = NameAndType        #436:#437     // $anonfun$hasOrg$3$adapted:(Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Ljava/lang/Object;
  #439 = InterfaceMethodref #2.#438       // coursier/core/Repository$Complete.$anonfun$hasOrg$3$adapted:(Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Ljava/lang/Object;
  #440 = MethodHandle       6:#439        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$3$adapted:(Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Ljava/lang/Object;
  #441 = InvokeDynamic      #11:#99       // #11:apply:(Lcoursier/core/Repository$Complete$Input$Org;)Lscala/Function1;
  #442 = Utf8               exists
  #443 = Utf8               (Lscala/Function1;)Z
  #444 = NameAndType        #442:#443     // exists:(Lscala/Function1;)Z
  #445 = InterfaceMethodref #343.#444     // scala/collection/immutable/Seq.exists:(Lscala/Function1;)Z
  #446 = Utf8               Lcoursier/core/Repository$Complete$Result;
  #447 = Utf8               $anonfun$hasOrg$1
  #448 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Z
  #449 = Utf8               toOption
  #450 = Utf8               ()Lscala/Option;
  #451 = NameAndType        #449:#450     // toOption:()Lscala/Option;
  #452 = Methodref          #330.#451     // scala/util/Either.toOption:()Lscala/Option;
  #453 = Utf8               $anonfun$hasOrg$2$adapted
  #454 = Utf8               (Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #455 = NameAndType        #453:#454     // $anonfun$hasOrg$2$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #456 = InterfaceMethodref #2.#455       // coursier/core/Repository$Complete.$anonfun$hasOrg$2$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #457 = MethodHandle       6:#456        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$2$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #458 = Utf8               (Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #459 = MethodType         #458          //  (Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #460 = InvokeDynamic      #12:#164      // #12:apply:(Lcoursier/core/Repository$Complete$Input$Org;Z)Lscala/Function1;
  #461 = Utf8               scala/Option
  #462 = Class              #461          // scala/Option
  #463 = Methodref          #462.#444     // scala/Option.exists:(Lscala/Function1;)Z
  #464 = Utf8               $anonfun$hasOrg$4
  #465 = Utf8               (Lcoursier/util/Monad;Ljava/lang/Object;Z)Ljava/lang/Object;
  #466 = Utf8               F$3
  #467 = Utf8               check$1
  #468 = Utf8               scala/runtime/BoxesRunTime
  #469 = Class              #468          // scala/runtime/BoxesRunTime
  #470 = Utf8               boxToBoolean
  #471 = Utf8               (Z)Ljava/lang/Boolean;
  #472 = NameAndType        #470:#471     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #473 = Methodref          #469.#472     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #474 = Utf8               $anonfun$hasName$2
  #475 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Z
  #476 = Utf8               nameInput$2
  #477 = Utf8               x$6
  #478 = Utf8               $anonfun$hasName$1
  #479 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Z
  #480 = Utf8               $anonfun$hasName$2$adapted
  #481 = Utf8               (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #482 = NameAndType        #480:#481     // $anonfun$hasName$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #483 = InterfaceMethodref #2.#482       // coursier/core/Repository$Complete.$anonfun$hasName$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #484 = MethodHandle       6:#483        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasName$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  #485 = InvokeDynamic      #13:#147      // #13:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
  #486 = Utf8               $anonfun$hasModule$1
  #487 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZZ)Ljava/lang/Object;
  #488 = Utf8               F$4
  #489 = Utf8               module$3
  #490 = Utf8               sbtAttrStub$1
  #491 = Utf8               :
  #492 = String             #491          // :
  #493 = Utf8               coursier/maven/MavenRepository$
  #494 = Class              #493          // coursier/maven/MavenRepository$
  #495 = Utf8               Lcoursier/maven/MavenRepository$;
  #496 = NameAndType        #117:#495     // MODULE$:Lcoursier/maven/MavenRepository$;
  #497 = Fieldref           #494.#496     // coursier/maven/MavenRepository$.MODULE$:Lcoursier/maven/MavenRepository$;
  #498 = Utf8               dirModuleName
  #499 = Utf8               (Lcoursier/core/Module;Z)Ljava/lang/String;
  #500 = NameAndType        #498:#499     // dirModuleName:(Lcoursier/core/Module;Z)Ljava/lang/String;
  #501 = Methodref          #494.#500     // coursier/maven/MavenRepository$.dirModuleName:(Lcoursier/core/Module;Z)Ljava/lang/String;
  #502 = NameAndType        #109:#74      // name:()Ljava/lang/String;
  #503 = Methodref          #233.#502     // coursier/core/Module.name:()Ljava/lang/String;
  #504 = Utf8               Lcoursier/core/Repository$Complete$Input$Name$;
  #505 = NameAndType        #117:#504     // MODULE$:Lcoursier/core/Repository$Complete$Input$Name$;
  #506 = Fieldref           #31.#505      // coursier/core/Repository$Complete$Input$Name$.MODULE$:Lcoursier/core/Repository$Complete$Input$Name$;
  #507 = Integer            0
  #508 = Utf8               length
  #509 = NameAndType        #508:#132     // length:()I
  #510 = Methodref          #167.#509     // java/lang/String.length:()I
  #511 = String             #12           //
  #512 = Utf8               (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Lcoursier/core/Repository$Complete$Input$Name;
  #513 = NameAndType        #97:#512      // apply:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Lcoursier/core/Repository$Complete$Input$Name;
  #514 = Methodref          #31.#513      // coursier/core/Repository$Complete$Input$Name$.apply:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Lcoursier/core/Repository$Complete$Input$Name;
  #515 = NameAndType        #208:#110     // hasName:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
  #516 = InterfaceMethodref #2.#515       // coursier/core/Repository$Complete.hasName:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
  #517 = Utf8               actualModuleName
  #518 = Utf8               $anonfun$complete$1
  #519 = Utf8               (Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;Lscala/util/Either;)Lscala/util/Either;
  #520 = Utf8               versionInput$1
  #521 = Utf8               input$1
  #522 = Utf8               ()Lcoursier/core/Module;
  #523 = NameAndType        #67:#522      // module:()Lcoursier/core/Module;
  #524 = Methodref          #38.#523      // coursier/core/Repository$Complete$Input$Ver.module:()Lcoursier/core/Module;
  #525 = Methodref          #38.#75       // coursier/core/Repository$Complete$Input$Ver.input:()Ljava/lang/String;
  #526 = Methodref          #38.#133      // coursier/core/Repository$Complete$Input$Ver.from:()I
  #527 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;ILjava/lang/Throwable;)V
  #528 = NameAndType        #285:#527     // "<init>":(Lcoursier/core/Module;Ljava/lang/String;ILjava/lang/Throwable;)V
  #529 = Methodref          #20.#528      // coursier/core/Repository$Complete$CompletingVersionException."<init>":(Lcoursier/core/Module;Ljava/lang/String;ILjava/lang/Throwable;)V
  #530 = Utf8               Lcoursier/core/Repository$Complete$Input$Ver;
  #531 = Utf8               ver$1
  #532 = Utf8               (Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #533 = Utf8               versionInput
  #534 = Utf8               F$5
  #535 = NameAndType        #64:#65       // versions:(Lcoursier/core/Module;Ljava/lang/String;)Ljava/lang/Object;
  #536 = InterfaceMethodref #2.#535       // coursier/core/Repository$Complete.versions:(Lcoursier/core/Module;Ljava/lang/String;)Ljava/lang/Object;
  #537 = NameAndType        #518:#519     // $anonfun$complete$1:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;Lscala/util/Either;)Lscala/util/Either;
  #538 = InterfaceMethodref #2.#537       // coursier/core/Repository$Complete.$anonfun$complete$1:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;Lscala/util/Either;)Lscala/util/Either;
  #539 = MethodHandle       6:#538        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$1:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;Lscala/util/Either;)Lscala/util/Either;
  #540 = Utf8               (Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #541 = NameAndType        #97:#540      // apply:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #542 = InvokeDynamic      #14:#541      // #14:apply:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #543 = Utf8               empty$1
  #544 = Utf8               (Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #545 = Utf8               scala/collection/immutable/Nil$
  #546 = Class              #545          // scala/collection/immutable/Nil$
  #547 = Utf8               Lscala/collection/immutable/Nil$;
  #548 = NameAndType        #117:#547     // MODULE$:Lscala/collection/immutable/Nil$;
  #549 = Fieldref           #546.#548     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #550 = Utf8               $anonfun$complete$2
  #551 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #552 = Utf8               x2$1
  #553 = NameAndType        #543:#544     // empty$1:(Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #554 = InterfaceMethodref #2.#553       // coursier/core/Repository$Complete.empty$1:(Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #555 = Utf8               $anonfun$complete$3
  #556 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #557 = Utf8               x3$1
  #558 = Utf8               x0$2
  #559 = Utf8               $anonfun$complete$5
  #560 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #561 = Utf8               x4$1
  #562 = Utf8               x0$4
  #563 = NameAndType        #531:#532     // ver$1:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #564 = InterfaceMethodref #2.#563       // coursier/core/Repository$Complete.ver$1:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #565 = Utf8               $anonfun$complete$4
  #566 = Utf8               x0$3
  #567 = Utf8               ()Lcoursier/core/Repository$Complete$Input$Name;
  #568 = NameAndType        #112:#567     // nameInput:()Lcoursier/core/Repository$Complete$Input$Name;
  #569 = Methodref          #38.#568      // coursier/core/Repository$Complete$Input$Ver.nameInput:()Lcoursier/core/Repository$Complete$Input$Name;
  #570 = Utf8               $anonfun$complete$5$adapted
  #571 = NameAndType        #570:#276     // $anonfun$complete$5$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #572 = InterfaceMethodref #2.#571       // coursier/core/Repository$Complete.$anonfun$complete$5$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #573 = MethodHandle       6:#572        // REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$5$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
  #574 = InvokeDynamic      #15:#281      // #15:apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #575 = Utf8               $init$
  #576 = Utf8               (Lcoursier/core/Repository$Complete;)V
  #577 = NameAndType        #447:#448     // $anonfun$hasOrg$1:(Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Z
  #578 = InterfaceMethodref #2.#577       // coursier/core/Repository$Complete.$anonfun$hasOrg$1:(Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Z
  #579 = Utf8               unboxToBoolean
  #580 = NameAndType        #579:#433     // unboxToBoolean:(Ljava/lang/Object;)Z
  #581 = Methodref          #469.#580     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #582 = NameAndType        #464:#465     // $anonfun$hasOrg$4:(Lcoursier/util/Monad;Ljava/lang/Object;Z)Ljava/lang/Object;
  #583 = InterfaceMethodref #2.#582       // coursier/core/Repository$Complete.$anonfun$hasOrg$4:(Lcoursier/util/Monad;Ljava/lang/Object;Z)Ljava/lang/Object;
  #584 = NameAndType        #478:#479     // $anonfun$hasName$1:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Z
  #585 = InterfaceMethodref #2.#584       // coursier/core/Repository$Complete.$anonfun$hasName$1:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Z
  #586 = NameAndType        #486:#487     // $anonfun$hasModule$1:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZZ)Ljava/lang/Object;
  #587 = InterfaceMethodref #2.#586       // coursier/core/Repository$Complete.$anonfun$hasModule$1:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZZ)Ljava/lang/Object;
  #588 = NameAndType        #550:#551     // $anonfun$complete$2:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #589 = InterfaceMethodref #2.#588       // coursier/core/Repository$Complete.$anonfun$complete$2:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #590 = NameAndType        #555:#556     // $anonfun$complete$3:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #591 = InterfaceMethodref #2.#590       // coursier/core/Repository$Complete.$anonfun$complete$3:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #592 = NameAndType        #565:#560     // $anonfun$complete$4:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #593 = InterfaceMethodref #2.#592       // coursier/core/Repository$Complete.$anonfun$complete$4:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #594 = NameAndType        #362:#363     // $anonfun$name$2:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Z
  #595 = InterfaceMethodref #2.#594       // coursier/core/Repository$Complete.$anonfun$name$2:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Z
  #596 = NameAndType        #403:#404     // $anonfun$hasOrg$3:(Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Z
  #597 = InterfaceMethodref #2.#596       // coursier/core/Repository$Complete.$anonfun$hasOrg$3:(Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Z
  #598 = NameAndType        #424:#425     // $anonfun$hasOrg$2:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Z
  #599 = InterfaceMethodref #2.#598       // coursier/core/Repository$Complete.$anonfun$hasOrg$2:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Z
  #600 = NameAndType        #474:#475     // $anonfun$hasName$2:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Z
  #601 = InterfaceMethodref #2.#600       // coursier/core/Repository$Complete.$anonfun$hasName$2:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Z
  #602 = NameAndType        #559:#560     // $anonfun$complete$5:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #603 = InterfaceMethodref #2.#602       // coursier/core/Repository$Complete.$anonfun$complete$5:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
  #604 = Utf8               $deserializeLambda$
  #605 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #606 = Utf8               scala/runtime/LambdaDeserialize
  #607 = Class              #606          // scala/runtime/LambdaDeserialize
  #608 = Utf8               bootstrap
  #609 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #610 = NameAndType        #608:#609     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #611 = Methodref          #607.#610     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #612 = MethodHandle       6:#611        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #613 = Utf8               lambdaDeserialize
  #614 = NameAndType        #613:#605     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #615 = InvokeDynamic      #16:#614      // #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #616 = Utf8               Signature
  #617 = Utf8               MethodParameters
  #618 = Utf8               Code
  #619 = Utf8               LineNumberTable
  #620 = Utf8               LocalVariableTable
  #621 = Utf8               StackMapTable
  #622 = Utf8               InnerClasses
  #623 = Utf8               SourceFile
  #624 = Utf8               BootstrapMethods
  #625 = Utf8               ScalaInlineInfo
  #626 = Utf8               Scala
{
  public abstract F organization(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #59                          // (Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      prefix                         final

  public abstract F moduleName(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #63                          // (Ljava/lang/String;Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      organization                   final
      prefix                         final

  public abstract F versions(coursier.core.Module, java.lang.String);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #66                          // (Lcoursier/core/Module;Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      module                         final
      prefix                         final

  private F org(coursier.core.Repository$Complete$Input$Org, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=3, args_size=3
         0: aload_2
         1: aload_0
         2: aload_1
         3: invokevirtual #76                 // Method coursier/core/Repository$Complete$Input$Org.input:()Ljava/lang/String;
         6: invokeinterface #78,  2           // InterfaceMethod organization:(Ljava/lang/String;)Ljava/lang/Object;
        11: aload_1
        12: invokedynamic #100,  0            // InvokeDynamic #0:apply:(Lcoursier/core/Repository$Complete$Input$Org;)Lscala/Function1;
        17: invokeinterface #104,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        22: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/core/Repository$Complete;
            0      23     1 orgInput   Lcoursier/core/Repository$Complete$Input$Org;
            0      23     2     F   Lcoursier/util/Monad;
    Signature: #70                          // (Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      orgInput                       final
      F                              final

  private F name(coursier.core.Repository$Complete$Input$Name, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=3, args_size=3
         0: aload_2
         1: aload_0
         2: aload_1
         3: invokevirtual #114                // Method coursier/core/Repository$Complete$Input$Name.organization:()Ljava/lang/String;
         6: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         9: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: aload_1
        13: invokevirtual #126                // Method coursier/core/Repository$Complete$Input$Name.input:()Ljava/lang/String;
        16: invokevirtual #130                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        19: aload_1
        20: invokevirtual #134                // Method coursier/core/Repository$Complete$Input$Name.from:()I
        23: invokevirtual #138                // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
        26: invokeinterface #140,  3          // InterfaceMethod moduleName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
        31: aload_1
        32: invokedynamic #148,  0            // InvokeDynamic #1:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
        37: invokeinterface #104,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        42: areturn
      LineNumberTable:
        line 134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/core/Repository$Complete;
            0      43     1 nameInput   Lcoursier/core/Repository$Complete$Input$Name;
            0      43     2     F   Lcoursier/util/Monad;
    Signature: #111                         // (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      nameInput                      final
      F                              final

  private F hasOrg(coursier.core.Repository$Complete$Input$Org, boolean, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=7, args_size=4
         0: aload_3
         1: aload_0
         2: aload_1
         3: aload_3
         4: invokespecial #155                // InterfaceMethod org:(Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;)Ljava/lang/Object;
         7: aload_1
         8: iload_2
         9: invokedynamic #165,  0            // InvokeDynamic #2:apply:(Lcoursier/core/Repository$Complete$Input$Org;Z)Lscala/Function1;
        14: invokeinterface #104,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        19: astore        4
        21: aload_1
        22: invokevirtual #76                 // Method coursier/core/Repository$Complete$Input$Org.input:()Ljava/lang/String;
        25: bipush        46
        27: invokevirtual #171                // Method java/lang/String.lastIndexOf:(I)I
        30: istore        5
        32: iload         5
        34: iconst_0
        35: if_icmple     95
        38: getstatic     #174                // Field coursier/core/Repository$Complete$Input$Org$.MODULE$:Lcoursier/core/Repository$Complete$Input$Org$;
        41: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        44: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        47: aload_1
        48: invokevirtual #76                 // Method coursier/core/Repository$Complete$Input$Org.input:()Ljava/lang/String;
        51: invokevirtual #130                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        54: iload         5
        56: invokevirtual #177                // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        59: invokevirtual #180                // Method coursier/core/Repository$Complete$Input$Org$.apply:(Ljava/lang/String;)Lcoursier/core/Repository$Complete$Input$Org;
        62: astore        6
        64: getstatic     #183                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        67: aload_0
        68: aload         6
        70: iconst_1
        71: aload_3
        72: invokespecial #185                // InterfaceMethod hasOrg:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad;)Ljava/lang/Object;
        75: aload_3
        76: invokevirtual #189                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        79: aload_3
        80: aload         4
        82: invokedynamic #197,  0            // InvokeDynamic #3:apply:(Lcoursier/util/Monad;Ljava/lang/Object;)Lscala/Function1;
        87: invokeinterface #201,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        92: goto          97
        95: aload         4
        97: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 95
          locals = [ class java/lang/Object, int ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 145: 0
        line 154: 21
        line 155: 32
        line 156: 38
        line 157: 64
        line 164: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64      28     6 truncatedInput   Lcoursier/core/Repository$Complete$Input$Org;
           21      76     4 check   Ljava/lang/Object;
           32      65     5   idx   I
            0      98     0  this   Lcoursier/core/Repository$Complete;
            0      98     1 orgInput   Lcoursier/core/Repository$Complete$Input$Org;
            0      98     2 partial   Z
            0      98     3     F   Lcoursier/util/Monad;
    Signature: #152                         // (Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      orgInput                       final
      partial                        final
      F                              final

  private F hasName(coursier.core.Repository$Complete$Input$Name, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=3
         0: aload_2
         1: aload_0
         2: aload_1
         3: aload_2
         4: invokespecial #210                // InterfaceMethod name:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
         7: aload_1
         8: invokedynamic #216,  0            // InvokeDynamic #4:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
        13: invokeinterface #104,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        18: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/core/Repository$Complete;
            0      19     1 nameInput   Lcoursier/core/Repository$Complete$Input$Name;
            0      19     2     F   Lcoursier/util/Monad;
    Signature: #111                         // (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      nameInput                      final
      F                              final

  public static boolean sbtAttrStub$(coursier.core.Repository$Complete);
    descriptor: (Lcoursier/core/Repository$Complete;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #223                // InterfaceMethod sbtAttrStub:()Z
         4: ireturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lcoursier/core/Repository$Complete;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean sbtAttrStub();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/Repository$Complete;

  public static java.lang.Object hasModule$(coursier.core.Repository$Complete, coursier.core.Module, boolean, coursier.util.Monad);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: iload_2
         3: aload_3
         4: invokespecial #229                // InterfaceMethod hasModule:(Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lcoursier/core/Repository$Complete;
            0       8     1 module   Lcoursier/core/Module;
            0       8     2 sbtAttrStub   Z
            0       8     3     F   Lcoursier/util/Monad;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      module                         final
      sbtAttrStub                    final
      F                              final

  public default F hasModule(coursier.core.Module, boolean, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #183                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         3: aload_0
         4: getstatic     #174                // Field coursier/core/Repository$Complete$Input$Org$.MODULE$:Lcoursier/core/Repository$Complete$Input$Org$;
         7: aload_1
         8: invokevirtual #234                // Method coursier/core/Module.organization:()Ljava/lang/String;
        11: invokevirtual #180                // Method coursier/core/Repository$Complete$Input$Org$.apply:(Ljava/lang/String;)Lcoursier/core/Repository$Complete$Input$Org;
        14: iconst_0
        15: aload_3
        16: invokespecial #185                // InterfaceMethod hasOrg:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad;)Ljava/lang/Object;
        19: aload_3
        20: invokevirtual #189                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        23: aload_0
        24: aload_3
        25: aload_1
        26: iload_2
        27: invokedynamic #242,  0            // InvokeDynamic #5:apply:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;Z)Lscala/Function1;
        32: invokeinterface #201,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        37: areturn
      LineNumberTable:
        line 177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Lcoursier/core/Repository$Complete;
            0      38     1 module   Lcoursier/core/Module;
            0      38     2 sbtAttrStub   Z
            0      38     3     F   Lcoursier/util/Monad;
    Signature: #231                         // (Lcoursier/core/Module;ZLcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      module                         final
      sbtAttrStub                    final
      F                              final

  public static boolean hasModule$default$2$(coursier.core.Repository$Complete);
    descriptor: (Lcoursier/core/Repository$Complete;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #246                // InterfaceMethod hasModule$default$2:()Z
         4: ireturn
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lcoursier/core/Repository$Complete;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean hasModule$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #223,  1          // InterfaceMethod sbtAttrStub:()Z
         6: ireturn
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/core/Repository$Complete;

  public static java.lang.Object complete$(coursier.core.Repository$Complete, coursier.core.Repository$Complete$Input, coursier.util.Monad);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #252                // InterfaceMethod complete:(Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 189: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lcoursier/core/Repository$Complete;
            0       7     1 input   Lcoursier/core/Repository$Complete$Input;
            0       7     2     F   Lcoursier/util/Monad;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      input                          final
      F                              final

  public default F complete(coursier.core.Repository$Complete$Input, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=9, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #33                 // class coursier/core/Repository$Complete$Input$Org
         8: ifeq          103
        11: aload         4
        13: checkcast     #33                 // class coursier/core/Repository$Complete$Input$Org
        16: astore        5
        18: aload         5
        20: invokevirtual #76                 // Method coursier/core/Repository$Complete$Input$Org.input:()Ljava/lang/String;
        23: bipush        46
        25: invokevirtual #171                // Method java/lang/String.lastIndexOf:(I)I
        28: istore        6
        30: iload         6
        32: iconst_0
        33: if_icmpge     46
        36: aload_0
        37: aload         5
        39: aload_2
        40: invokespecial #155                // InterfaceMethod org:(Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;)Ljava/lang/Object;
        43: goto          99
        46: getstatic     #183                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        49: aload_0
        50: getstatic     #174                // Field coursier/core/Repository$Complete$Input$Org$.MODULE$:Lcoursier/core/Repository$Complete$Input$Org$;
        53: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        56: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        59: aload         5
        61: invokevirtual #76                 // Method coursier/core/Repository$Complete$Input$Org.input:()Ljava/lang/String;
        64: invokevirtual #130                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        67: iload         6
        69: invokevirtual #177                // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        72: invokevirtual #180                // Method coursier/core/Repository$Complete$Input$Org$.apply:(Ljava/lang/String;)Lcoursier/core/Repository$Complete$Input$Org;
        75: iconst_1
        76: aload_2
        77: invokespecial #185                // InterfaceMethod hasOrg:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad;)Ljava/lang/Object;
        80: aload_2
        81: invokevirtual #189                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        84: aload_0
        85: aload         5
        87: aload_2
        88: aload_1
        89: invokedynamic #262,  0            // InvokeDynamic #6:apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
        94: invokeinterface #201,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        99: astore_3
       100: goto          226
       103: goto          106
       106: aload         4
       108: instanceof    #28                 // class coursier/core/Repository$Complete$Input$Name
       111: ifeq          158
       114: aload         4
       116: checkcast     #28                 // class coursier/core/Repository$Complete$Input$Name
       119: astore        7
       121: getstatic     #183                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
       124: aload_0
       125: aload         7
       127: invokevirtual #265                // Method coursier/core/Repository$Complete$Input$Name.orgInput:()Lcoursier/core/Repository$Complete$Input$Org;
       130: iconst_0
       131: aload_2
       132: invokespecial #185                // InterfaceMethod hasOrg:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad;)Ljava/lang/Object;
       135: aload_2
       136: invokevirtual #189                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
       139: aload_0
       140: aload         7
       142: aload_2
       143: aload_1
       144: invokedynamic #273,  0            // InvokeDynamic #7:apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
       149: invokeinterface #201,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       154: astore_3
       155: goto          226
       158: goto          161
       161: aload         4
       163: instanceof    #38                 // class coursier/core/Repository$Complete$Input$Ver
       166: ifeq          213
       169: aload         4
       171: checkcast     #38                 // class coursier/core/Repository$Complete$Input$Ver
       174: astore        8
       176: getstatic     #183                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
       179: aload_0
       180: aload         8
       182: invokevirtual #274                // Method coursier/core/Repository$Complete$Input$Ver.orgInput:()Lcoursier/core/Repository$Complete$Input$Org;
       185: iconst_0
       186: aload_2
       187: invokespecial #185                // InterfaceMethod hasOrg:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/util/Monad;)Ljava/lang/Object;
       190: aload_2
       191: invokevirtual #189                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
       194: aload_0
       195: aload         8
       197: aload_2
       198: aload_1
       199: invokedynamic #282,  0            // InvokeDynamic #8:apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
       204: invokeinterface #201,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       209: astore_3
       210: goto          226
       213: goto          216
       216: new           #284                // class scala/MatchError
       219: dup
       220: aload         4
       222: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       225: athrow
       226: aload_3
       227: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class coursier/core/Repository$Complete, class coursier/core/Repository$Complete$Input, class coursier/util/Monad, top, class coursier/core/Repository$Complete$Input, class coursier/core/Repository$Complete$Input$Org, int ]
          stack = []
        frame_type = 116 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 51 /* same */
        frame_type = 2 /* same */
        frame_type = 51 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Repository$Complete, class coursier/core/Repository$Complete$Input, class coursier/util/Monad, class java/lang/Object, class coursier/core/Repository$Complete$Input ]
          stack = []
      LineNumberTable:
        line 211: 0
        line 212: 3
        line 213: 18
        line 214: 30
        line 215: 36
        line 217: 46
        line 212: 103
        line 221: 106
        line 222: 121
        line 221: 158
        line 226: 161
        line 227: 176
        line 226: 213
        line 211: 216
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30      69     6   idx   I
            0     228     0  this   Lcoursier/core/Repository$Complete;
            0     228     1 input   Lcoursier/core/Repository$Complete$Input;
            0     228     2     F   Lcoursier/util/Monad;
    Signature: #254                         // (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      input                          final
      F                              final

  public static java.lang.Object complete$(coursier.core.Repository$Complete, java.lang.String, java.lang.String, java.lang.String, coursier.util.Monad);
    descriptor: (Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokespecial #294                // InterfaceMethod complete:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lcoursier/core/Repository$Complete;
            0      10     1 input   Ljava/lang/String;
            0      10     2 scalaVersion   Ljava/lang/String;
            0      10     3 scalaBinaryVersion   Ljava/lang/String;
            0      10     4     F   Lcoursier/util/Monad;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      input                          final
      scalaVersion                   final
      scalaBinaryVersion             final
      F                              final

  public default F complete(java.lang.String, java.lang.String, java.lang.String, coursier.util.Monad<F>);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=11, args_size=5
         0: getstatic     #299                // Field coursier/core/Repository$Complete$.MODULE$:Lcoursier/core/Repository$Complete$;
         3: aload_1
         4: aload_2
         5: aload_3
         6: invokevirtual #303                // Method coursier/core/Repository$Complete$.parse:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
         9: astore        6
        11: aload         6
        13: instanceof    #305                // class scala/util/Left
        16: ifeq          59
        19: aload         6
        21: checkcast     #305                // class scala/util/Left
        24: astore        7
        26: aload         7
        28: invokevirtual #309                // Method scala/util/Left.value:()Ljava/lang/Object;
        31: checkcast     #311                // class java/lang/Throwable
        34: astore        8
        36: aload         4
        38: getstatic     #316                // Field scala/package$.MODULE$:Lscala/package$;
        41: invokevirtual #320                // Method scala/package$.Left:()Lscala/util/Left$;
        44: aload         8
        46: invokevirtual #325                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        49: invokeinterface #328,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        54: astore        5
        56: goto          115
        59: goto          62
        62: aload         6
        64: instanceof    #332                // class scala/util/Right
        67: ifeq          102
        70: aload         6
        72: checkcast     #332                // class scala/util/Right
        75: astore        9
        77: aload         9
        79: invokevirtual #333                // Method scala/util/Right.value:()Ljava/lang/Object;
        82: checkcast     #23                 // class coursier/core/Repository$Complete$Input
        85: astore        10
        87: aload_0
        88: aload         10
        90: aload         4
        92: invokeinterface #252,  3          // InterfaceMethod complete:(Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
        97: astore        5
        99: goto          115
       102: goto          105
       105: new           #284                // class scala/MatchError
       108: dup
       109: aload         6
       111: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       114: athrow
       115: aload         5
       117: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 59
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 39 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Repository$Complete, class java/lang/String, class java/lang/String, class java/lang/String, class coursier/util/Monad, class java/lang/Object, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 239: 0
        line 240: 11
        line 241: 36
        line 240: 59
        line 242: 62
        line 243: 87
        line 242: 102
        line 239: 105
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           36      23     8     e   Ljava/lang/Throwable;
           87      15    10 input0   Lcoursier/core/Repository$Complete$Input;
            0     118     0  this   Lcoursier/core/Repository$Complete;
            0     118     1 input   Ljava/lang/String;
            0     118     2 scalaVersion   Ljava/lang/String;
            0     118     3 scalaBinaryVersion   Ljava/lang/String;
            0     118     4     F   Lcoursier/util/Monad;
    Signature: #296                         // (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      input                          final
      scalaVersion                   final
      scalaBinaryVersion             final
      F                              final

  public static scala.util.Either $anonfun$org$1(coursier.core.Repository$Complete$Input$Org, scala.util.Either);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Org;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=8, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #305                // class scala/util/Left
         6: ifeq          51
         9: aload_3
        10: checkcast     #305                // class scala/util/Left
        13: astore        4
        15: aload         4
        17: invokevirtual #309                // Method scala/util/Left.value:()Ljava/lang/Object;
        20: checkcast     #311                // class java/lang/Throwable
        23: astore        5
        25: getstatic     #316                // Field scala/package$.MODULE$:Lscala/package$;
        28: invokevirtual #320                // Method scala/package$.Left:()Lscala/util/Left$;
        31: new           #17                 // class coursier/core/Repository$Complete$CompletingOrgException
        34: dup
        35: aload_0
        36: invokevirtual #76                 // Method coursier/core/Repository$Complete$Input$Org.input:()Ljava/lang/String;
        39: aload         5
        41: invokespecial #341                // Method coursier/core/Repository$Complete$CompletingOrgException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
        44: invokevirtual #325                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        47: astore_2
        48: goto          111
        51: goto          54
        54: aload_3
        55: instanceof    #332                // class scala/util/Right
        58: ifeq          99
        61: aload_3
        62: checkcast     #332                // class scala/util/Right
        65: astore        6
        67: aload         6
        69: invokevirtual #333                // Method scala/util/Right.value:()Ljava/lang/Object;
        72: checkcast     #343                // class scala/collection/immutable/Seq
        75: astore        7
        77: getstatic     #316                // Field scala/package$.MODULE$:Lscala/package$;
        80: invokevirtual #347                // Method scala/package$.Right:()Lscala/util/Right$;
        83: getstatic     #350                // Field coursier/core/Repository$Complete$Result$.MODULE$:Lcoursier/core/Repository$Complete$Result$;
        86: aload_0
        87: aload         7
        89: invokevirtual #353                // Method coursier/core/Repository$Complete$Result$.apply:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/core/Repository$Complete$Result;
        92: invokevirtual #358                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        95: astore_2
        96: goto          111
        99: goto          102
       102: new           #284                // class scala/MatchError
       105: dup
       106: aload_3
       107: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       110: athrow
       111: aload_2
       112: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 51
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 44 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/core/Repository$Complete$Input$Org, class scala/util/Either, class scala/util/Either, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 126: 0
        line 127: 2
        line 128: 25
        line 127: 51
        line 129: 54
        line 130: 77
        line 129: 99
        line 126: 102
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      26     5     e   Ljava/lang/Throwable;
           77      22     7     l   Lscala/collection/immutable/Seq;
            0     113     0 orgInput$1   Lcoursier/core/Repository$Complete$Input$Org;
            0     113     1  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      orgInput$1                     final
      x0$1                           final

  public static boolean $anonfun$name$2(coursier.core.Repository$Complete$Input$Name, java.lang.String);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #368                // Method coursier/core/Repository$Complete$Input$Name.requiredSuffix:()Ljava/lang/String;
         5: invokevirtual #372                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
         8: ireturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 nameInput$1   Lcoursier/core/Repository$Complete$Input$Name;
            0       9     1   x$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      nameInput$1                    final
      x$3                            final

  public static java.lang.String $anonfun$name$3(coursier.core.Repository$Complete$Input$Name, java.lang.String);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #130                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: aload_0
        11: invokevirtual #368                // Method coursier/core/Repository$Complete$Input$Name.requiredSuffix:()Ljava/lang/String;
        14: invokevirtual #379                // Method scala/collection/StringOps$.stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        17: areturn
      LineNumberTable:
        line 138: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 nameInput$1   Lcoursier/core/Repository$Complete$Input$Name;
            0      18     1   x$4   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      nameInput$1                    final
      x$4                            final

  public static scala.util.Either $anonfun$name$1(coursier.core.Repository$Complete$Input$Name, scala.util.Either);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=7, locals=9, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #305                // class scala/util/Left
         6: ifeq          59
         9: aload_3
        10: checkcast     #305                // class scala/util/Left
        13: astore        4
        15: aload         4
        17: invokevirtual #309                // Method scala/util/Left.value:()Ljava/lang/Object;
        20: checkcast     #311                // class java/lang/Throwable
        23: astore        5
        25: getstatic     #316                // Field scala/package$.MODULE$:Lscala/package$;
        28: invokevirtual #320                // Method scala/package$.Left:()Lscala/util/Left$;
        31: new           #14                 // class coursier/core/Repository$Complete$CompletingNameException
        34: dup
        35: aload_0
        36: invokevirtual #114                // Method coursier/core/Repository$Complete$Input$Name.organization:()Ljava/lang/String;
        39: aload_0
        40: invokevirtual #126                // Method coursier/core/Repository$Complete$Input$Name.input:()Ljava/lang/String;
        43: aload_0
        44: invokevirtual #134                // Method coursier/core/Repository$Complete$Input$Name.from:()I
        47: aload         5
        49: invokespecial #382                // Method coursier/core/Repository$Complete$CompletingNameException."<init>":(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V
        52: invokevirtual #325                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        55: astore_2
        56: goto          151
        59: goto          62
        62: aload_3
        63: instanceof    #332                // class scala/util/Right
        66: ifeq          139
        69: aload_3
        70: checkcast     #332                // class scala/util/Right
        73: astore        6
        75: aload         6
        77: invokevirtual #333                // Method scala/util/Right.value:()Ljava/lang/Object;
        80: checkcast     #343                // class scala/collection/immutable/Seq
        83: astore        7
        85: aload         7
        87: aload_0
        88: invokedynamic #389,  0            // InvokeDynamic #9:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
        93: invokeinterface #392,  2          // InterfaceMethod scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
        98: checkcast     #394                // class scala/collection/IterableOps
       101: aload_0
       102: invokedynamic #399,  0            // InvokeDynamic #10:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
       107: invokeinterface #401,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
       112: checkcast     #343                // class scala/collection/immutable/Seq
       115: astore        8
       117: getstatic     #316                // Field scala/package$.MODULE$:Lscala/package$;
       120: invokevirtual #347                // Method scala/package$.Right:()Lscala/util/Right$;
       123: getstatic     #350                // Field coursier/core/Repository$Complete$Result$.MODULE$:Lcoursier/core/Repository$Complete$Result$;
       126: aload_0
       127: aload         8
       129: invokevirtual #353                // Method coursier/core/Repository$Complete$Result$.apply:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/core/Repository$Complete$Result;
       132: invokevirtual #358                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       135: astore_2
       136: goto          151
       139: goto          142
       142: new           #284                // class scala/MatchError
       145: dup
       146: aload_3
       147: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       150: athrow
       151: aload_2
       152: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 59
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 76
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/core/Repository$Complete$Input$Name, class scala/util/Either, class scala/util/Either, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 134: 0
        line 135: 2
        line 136: 25
        line 135: 59
        line 137: 62
        line 138: 85
        line 139: 117
        line 137: 139
        line 134: 142
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      34     5     e   Ljava/lang/Throwable;
          117      18     8    l0   Lscala/collection/immutable/Seq;
           85      54     7     l   Lscala/collection/immutable/Seq;
            0     153     0 nameInput$1   Lcoursier/core/Repository$Complete$Input$Name;
            0     153     1  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      nameInput$1                    final
      x0$1                           final

  public static boolean $anonfun$hasOrg$3(coursier.core.Repository$Complete$Input$Org, java.lang.String);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: new           #408                // class java/lang/StringBuilder
         4: dup
         5: ldc           #89                 // int 1
         7: invokespecial #411                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #76                 // Method coursier/core/Repository$Complete$Input$Org.input:()Ljava/lang/String;
        14: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc_w         #417                // String .
        20: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #420                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: invokevirtual #423                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        29: ireturn
      LineNumberTable:
        line 150: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 orgInput$2   Lcoursier/core/Repository$Complete$Input$Org;
            0      30     1   x$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      orgInput$2                     final
      x$5                            final

  public static boolean $anonfun$hasOrg$2(coursier.core.Repository$Complete$Input$Org, boolean, coursier.core.Repository$Complete$Result);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_2
         1: invokevirtual #431                // Method coursier/core/Repository$Complete$Result.completions:()Lscala/collection/immutable/Seq;
         4: aload_0
         5: invokevirtual #76                 // Method coursier/core/Repository$Complete$Input$Org.input:()Ljava/lang/String;
         8: invokeinterface #435,  2          // InterfaceMethod scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
        13: ifne          38
        16: iload_1
        17: ifeq          42
        20: aload_2
        21: invokevirtual #431                // Method coursier/core/Repository$Complete$Result.completions:()Lscala/collection/immutable/Seq;
        24: aload_0
        25: invokedynamic #441,  0            // InvokeDynamic #11:apply:(Lcoursier/core/Repository$Complete$Input$Org;)Lscala/Function1;
        30: invokeinterface #445,  2          // InterfaceMethod scala/collection/immutable/Seq.exists:(Lscala/Function1;)Z
        35: ifeq          42
        38: iconst_1
        39: goto          43
        42: iconst_0
        43: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 38 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 149: 0
        line 150: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0 orgInput$2   Lcoursier/core/Repository$Complete$Input$Org;
            0      44     1 partial$1   Z
            0      44     2   res   Lcoursier/core/Repository$Complete$Result;
    MethodParameters:
      Name                           Flags
      orgInput$2                     final
      partial$1                      final
      res                            final

  public static boolean $anonfun$hasOrg$1(coursier.core.Repository$Complete$Input$Org, boolean, scala.util.Either);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_2
         1: invokevirtual #452                // Method scala/util/Either.toOption:()Lscala/Option;
         4: aload_0
         5: iload_1
         6: invokedynamic #460,  0            // InvokeDynamic #12:apply:(Lcoursier/core/Repository$Complete$Input$Org;Z)Lscala/Function1;
        11: invokevirtual #463                // Method scala/Option.exists:(Lscala/Function1;)Z
        14: ireturn
      LineNumberTable:
        line 146: 0
        line 148: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 orgInput$2   Lcoursier/core/Repository$Complete$Input$Org;
            0      15     1 partial$1   Z
            0      15     2   res   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      orgInput$2                     final
      partial$1                      final
      res                            final

  public static java.lang.Object $anonfun$hasOrg$4(coursier.util.Monad, java.lang.Object, boolean);
    descriptor: (Lcoursier/util/Monad;Ljava/lang/Object;Z)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=3
         0: iload_2
         1: istore        4
         3: iconst_0
         4: iload         4
         6: if_icmpne     23
         9: aload_0
        10: iconst_0
        11: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        14: invokeinterface #328,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        19: astore_3
        20: goto          53
        23: goto          26
        26: iconst_1
        27: iload         4
        29: if_icmpne     37
        32: aload_1
        33: astore_3
        34: goto          53
        37: goto          40
        40: new           #284                // class scala/MatchError
        43: dup
        44: iload         4
        46: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        49: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        52: athrow
        53: aload_3
        54: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [ top, int ]
        frame_type = 2 /* same */
        frame_type = 10 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class coursier/util/Monad, class java/lang/Object, int, class java/lang/Object, int ]
          stack = []
      LineNumberTable:
        line 157: 0
        line 158: 3
        line 159: 9
        line 158: 23
        line 160: 26
        line 161: 32
        line 160: 37
        line 157: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0   F$3   Lcoursier/util/Monad;
            0      55     1 check$1   Ljava/lang/Object;
            0      55     2  x0$1   Z
    MethodParameters:
      Name                           Flags
      F$3                            final
      check$1                        final
      x0$1                           final

  public static boolean $anonfun$hasName$2(coursier.core.Repository$Complete$Input$Name, coursier.core.Repository$Complete$Result);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #431                // Method coursier/core/Repository$Complete$Result.completions:()Lscala/collection/immutable/Seq;
         4: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         7: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        10: aload_0
        11: invokevirtual #126                // Method coursier/core/Repository$Complete$Input$Name.input:()Ljava/lang/String;
        14: invokevirtual #130                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        17: aload_0
        18: invokevirtual #134                // Method coursier/core/Repository$Complete$Input$Name.from:()I
        21: invokevirtual #138                // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
        24: invokeinterface #435,  2          // InterfaceMethod scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
        29: ireturn
      LineNumberTable:
        line 171: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 nameInput$2   Lcoursier/core/Repository$Complete$Input$Name;
            0      30     1   x$6   Lcoursier/core/Repository$Complete$Result;
    MethodParameters:
      Name                           Flags
      nameInput$2                    final
      x$6                            final

  public static boolean $anonfun$hasName$1(coursier.core.Repository$Complete$Input$Name, scala.util.Either);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #452                // Method scala/util/Either.toOption:()Lscala/Option;
         4: aload_0
         5: invokedynamic #485,  0            // InvokeDynamic #13:apply:(Lcoursier/core/Repository$Complete$Input$Name;)Lscala/Function1;
        10: invokevirtual #463                // Method scala/Option.exists:(Lscala/Function1;)Z
        13: ireturn
      LineNumberTable:
        line 169: 0
        line 171: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 nameInput$2   Lcoursier/core/Repository$Complete$Input$Name;
            0      14     1   res   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      nameInput$2                    final
      res                            final

  public static java.lang.Object $anonfun$hasModule$1(coursier.core.Repository$Complete, coursier.util.Monad, coursier.core.Module, boolean, boolean);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZZ)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=6, locals=9, args_size=5
         0: iload         4
         2: istore        6
         4: iconst_0
         5: iload         6
         7: if_icmpne     25
        10: aload_1
        11: iconst_0
        12: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        15: invokeinterface #328,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        20: astore        5
        22: goto          149
        25: goto          28
        28: iconst_1
        29: iload         6
        31: if_icmpne     133
        34: new           #408                // class java/lang/StringBuilder
        37: dup
        38: ldc           #89                 // int 1
        40: invokespecial #411                // Method java/lang/StringBuilder."<init>":(I)V
        43: aload_2
        44: invokevirtual #234                // Method coursier/core/Module.organization:()Ljava/lang/String;
        47: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: ldc_w         #492                // String :
        53: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        56: invokevirtual #420                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        59: astore        7
        61: iload_3
        62: ifeq          76
        65: getstatic     #497                // Field coursier/maven/MavenRepository$.MODULE$:Lcoursier/maven/MavenRepository$;
        68: aload_2
        69: iconst_1
        70: invokevirtual #501                // Method coursier/maven/MavenRepository$.dirModuleName:(Lcoursier/core/Module;Z)Ljava/lang/String;
        73: goto          80
        76: aload_2
        77: invokevirtual #503                // Method coursier/core/Module.name:()Ljava/lang/String;
        80: astore        8
        82: aload_0
        83: getstatic     #506                // Field coursier/core/Repository$Complete$Input$Name$.MODULE$:Lcoursier/core/Repository$Complete$Input$Name$;
        86: aload_2
        87: invokevirtual #234                // Method coursier/core/Module.organization:()Ljava/lang/String;
        90: new           #408                // class java/lang/StringBuilder
        93: dup
        94: ldc_w         #507                // int 0
        97: invokespecial #411                // Method java/lang/StringBuilder."<init>":(I)V
       100: aload         7
       102: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       105: aload         8
       107: invokevirtual #415                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       110: invokevirtual #420                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       113: aload         7
       115: invokevirtual #510                // Method java/lang/String.length:()I
       118: ldc_w         #511                // String
       121: invokevirtual #514                // Method coursier/core/Repository$Complete$Input$Name$.apply:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Lcoursier/core/Repository$Complete$Input$Name;
       124: aload_1
       125: invokespecial #516                // InterfaceMethod hasName:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
       128: astore        5
       130: goto          149
       133: goto          136
       136: new           #284                // class scala/MatchError
       139: dup
       140: iload         6
       142: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       145: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       148: athrow
       149: aload         5
       151: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, int ]
        frame_type = 2 /* same */
        frame_type = 252 /* append */
          offset_delta = 47
          locals = [ class java/lang/String ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 52
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class coursier/core/Repository$Complete, class coursier/util/Monad, class coursier/core/Module, int, int, class java/lang/Object, int ]
          stack = []
      LineNumberTable:
        line 177: 0
        line 178: 4
        line 179: 28
        line 180: 34
        line 182: 61
        line 183: 65
        line 185: 76
        line 186: 82
        line 179: 133
        line 177: 136
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           61      67     7 prefix   Ljava/lang/String;
           82      46     8 actualModuleName   Ljava/lang/String;
            0     152     0 $this   Lcoursier/core/Repository$Complete;
            0     152     1   F$4   Lcoursier/util/Monad;
            0     152     2 module$3   Lcoursier/core/Module;
            0     152     3 sbtAttrStub$1   Z
            0     152     4  x0$1   Z
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      F$4                            final
      module$3                       final
      sbtAttrStub$1                  final
      x0$1                           final

  public static scala.util.Either $anonfun$complete$1(coursier.core.Repository$Complete$Input$Ver, coursier.core.Repository$Complete$Input, scala.util.Either);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=7, locals=9, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #305                // class scala/util/Left
         8: ifeq          62
        11: aload         4
        13: checkcast     #305                // class scala/util/Left
        16: astore        5
        18: aload         5
        20: invokevirtual #309                // Method scala/util/Left.value:()Ljava/lang/Object;
        23: checkcast     #311                // class java/lang/Throwable
        26: astore        6
        28: getstatic     #316                // Field scala/package$.MODULE$:Lscala/package$;
        31: invokevirtual #320                // Method scala/package$.Left:()Lscala/util/Left$;
        34: new           #20                 // class coursier/core/Repository$Complete$CompletingVersionException
        37: dup
        38: aload_0
        39: invokevirtual #524                // Method coursier/core/Repository$Complete$Input$Ver.module:()Lcoursier/core/Module;
        42: aload_0
        43: invokevirtual #525                // Method coursier/core/Repository$Complete$Input$Ver.input:()Ljava/lang/String;
        46: aload_0
        47: invokevirtual #526                // Method coursier/core/Repository$Complete$Input$Ver.from:()I
        50: aload         6
        52: invokespecial #529                // Method coursier/core/Repository$Complete$CompletingVersionException."<init>":(Lcoursier/core/Module;Ljava/lang/String;ILjava/lang/Throwable;)V
        55: invokevirtual #325                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        58: astore_3
        59: goto          125
        62: goto          65
        65: aload         4
        67: instanceof    #332                // class scala/util/Right
        70: ifeq          112
        73: aload         4
        75: checkcast     #332                // class scala/util/Right
        78: astore        7
        80: aload         7
        82: invokevirtual #333                // Method scala/util/Right.value:()Ljava/lang/Object;
        85: checkcast     #343                // class scala/collection/immutable/Seq
        88: astore        8
        90: getstatic     #316                // Field scala/package$.MODULE$:Lscala/package$;
        93: invokevirtual #347                // Method scala/package$.Right:()Lscala/util/Right$;
        96: getstatic     #350                // Field coursier/core/Repository$Complete$Result$.MODULE$:Lcoursier/core/Repository$Complete$Result$;
        99: aload_1
       100: aload         8
       102: invokevirtual #353                // Method coursier/core/Repository$Complete$Result$.apply:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/core/Repository$Complete$Result;
       105: invokevirtual #358                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       108: astore_3
       109: goto          125
       112: goto          115
       115: new           #284                // class scala/MatchError
       118: dup
       119: aload         4
       121: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       124: athrow
       125: aload_3
       126: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 62
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 46 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Repository$Complete$Input$Ver, class coursier/core/Repository$Complete$Input, class scala/util/Either, class scala/util/Either, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 202: 0
        line 203: 3
        line 204: 28
        line 203: 62
        line 205: 65
        line 206: 90
        line 205: 112
        line 202: 115
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           28      34     6     e   Ljava/lang/Throwable;
           90      22     8     l   Lscala/collection/immutable/Seq;
            0     127     0 versionInput$1   Lcoursier/core/Repository$Complete$Input$Ver;
            0     127     1 input$1   Lcoursier/core/Repository$Complete$Input;
            0     127     2  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      versionInput$1                 final
      input$1                        final
      x0$1                           final

  private java.lang.Object ver$1(coursier.core.Repository$Complete$Input$Ver, coursier.util.Monad, coursier.core.Repository$Complete$Input);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=4, args_size=4
         0: aload_2
         1: aload_0
         2: aload_1
         3: invokevirtual #524                // Method coursier/core/Repository$Complete$Input$Ver.module:()Lcoursier/core/Module;
         6: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         9: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: aload_1
        13: invokevirtual #525                // Method coursier/core/Repository$Complete$Input$Ver.input:()Ljava/lang/String;
        16: invokevirtual #130                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        19: aload_1
        20: invokevirtual #526                // Method coursier/core/Repository$Complete$Input$Ver.from:()I
        23: invokevirtual #138                // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
        26: invokeinterface #536,  3          // InterfaceMethod versions:(Lcoursier/core/Module;Ljava/lang/String;)Ljava/lang/Object;
        31: aload_1
        32: aload_3
        33: invokedynamic #542,  0            // InvokeDynamic #14:apply:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
        38: invokeinterface #104,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        43: areturn
      LineNumberTable:
        line 202: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lcoursier/core/Repository$Complete;
            0      44     1 versionInput   Lcoursier/core/Repository$Complete$Input$Ver;
            0      44     2   F$5   Lcoursier/util/Monad;
            0      44     3 input$1   Lcoursier/core/Repository$Complete$Input;
    MethodParameters:
      Name                           Flags
      versionInput                   final
      F$5                            final
      input$1                        final

  private static java.lang.Object empty$1(coursier.util.Monad, coursier.core.Repository$Complete$Input);
    descriptor: (Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: getstatic     #316                // Field scala/package$.MODULE$:Lscala/package$;
         4: invokevirtual #347                // Method scala/package$.Right:()Lscala/util/Right$;
         7: getstatic     #350                // Field coursier/core/Repository$Complete$Result$.MODULE$:Lcoursier/core/Repository$Complete$Result$;
        10: aload_1
        11: getstatic     #549                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        14: invokevirtual #353                // Method coursier/core/Repository$Complete$Result$.apply:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/core/Repository$Complete$Result;
        17: invokevirtual #358                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        20: invokeinterface #328,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        25: areturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0   F$5   Lcoursier/util/Monad;
            0      26     1 input$1   Lcoursier/core/Repository$Complete$Input;
    MethodParameters:
      Name                           Flags
      F$5                            final
      input$1                        final

  public static java.lang.Object $anonfun$complete$2(coursier.core.Repository$Complete, coursier.core.Repository$Complete$Input$Org, coursier.util.Monad, coursier.core.Repository$Complete$Input, boolean);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=7, args_size=5
         0: iload         4
         2: istore        6
         4: iconst_0
         5: iload         6
         7: if_icmpne     20
        10: aload_2
        11: aload_3
        12: invokestatic  #554                // InterfaceMethod empty$1:(Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
        15: astore        5
        17: goto          56
        20: goto          23
        23: iconst_1
        24: iload         6
        26: if_icmpne     40
        29: aload_0
        30: aload_1
        31: aload_2
        32: invokespecial #155                // InterfaceMethod org:(Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;)Ljava/lang/Object;
        35: astore        5
        37: goto          56
        40: goto          43
        43: new           #284                // class scala/MatchError
        46: dup
        47: iload         6
        49: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        52: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        55: athrow
        56: aload         5
        58: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ top, int ]
        frame_type = 2 /* same */
        frame_type = 16 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class coursier/core/Repository$Complete, class coursier/core/Repository$Complete$Input$Org, class coursier/util/Monad, class coursier/core/Repository$Complete$Input, int, class java/lang/Object, int ]
          stack = []
      LineNumberTable:
        line 217: 0
        line 218: 4
        line 219: 23
        line 217: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0 $this   Lcoursier/core/Repository$Complete;
            0      59     1  x2$1   Lcoursier/core/Repository$Complete$Input$Org;
            0      59     2   F$5   Lcoursier/util/Monad;
            0      59     3 input$1   Lcoursier/core/Repository$Complete$Input;
            0      59     4  x0$1   Z
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x2$1                           final
      F$5                            final
      input$1                        final
      x0$1                           final

  public static java.lang.Object $anonfun$complete$3(coursier.core.Repository$Complete, coursier.core.Repository$Complete$Input$Name, coursier.util.Monad, coursier.core.Repository$Complete$Input, boolean);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=7, args_size=5
         0: iload         4
         2: istore        6
         4: iconst_0
         5: iload         6
         7: if_icmpne     20
        10: aload_2
        11: aload_3
        12: invokestatic  #554                // InterfaceMethod empty$1:(Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
        15: astore        5
        17: goto          56
        20: goto          23
        23: iconst_1
        24: iload         6
        26: if_icmpne     40
        29: aload_0
        30: aload_1
        31: aload_2
        32: invokespecial #210                // InterfaceMethod name:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
        35: astore        5
        37: goto          56
        40: goto          43
        43: new           #284                // class scala/MatchError
        46: dup
        47: iload         6
        49: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        52: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        55: athrow
        56: aload         5
        58: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ top, int ]
        frame_type = 2 /* same */
        frame_type = 16 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class coursier/core/Repository$Complete, class coursier/core/Repository$Complete$Input$Name, class coursier/util/Monad, class coursier/core/Repository$Complete$Input, int, class java/lang/Object, int ]
          stack = []
      LineNumberTable:
        line 222: 0
        line 223: 4
        line 224: 23
        line 222: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0 $this   Lcoursier/core/Repository$Complete;
            0      59     1  x3$1   Lcoursier/core/Repository$Complete$Input$Name;
            0      59     2   F$5   Lcoursier/util/Monad;
            0      59     3 input$1   Lcoursier/core/Repository$Complete$Input;
            0      59     4  x0$2   Z
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x3$1                           final
      F$5                            final
      input$1                        final
      x0$2                           final

  public static java.lang.Object $anonfun$complete$5(coursier.core.Repository$Complete, coursier.core.Repository$Complete$Input$Ver, coursier.util.Monad, coursier.core.Repository$Complete$Input, boolean);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=5
         0: iload         4
         2: istore        6
         4: iconst_0
         5: iload         6
         7: if_icmpne     20
        10: aload_2
        11: aload_3
        12: invokestatic  #554                // InterfaceMethod empty$1:(Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
        15: astore        5
        17: goto          57
        20: goto          23
        23: iconst_1
        24: iload         6
        26: if_icmpne     41
        29: aload_0
        30: aload_1
        31: aload_2
        32: aload_3
        33: invokespecial #564                // InterfaceMethod ver$1:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
        36: astore        5
        38: goto          57
        41: goto          44
        44: new           #284                // class scala/MatchError
        47: dup
        48: iload         6
        50: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        53: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        56: athrow
        57: aload         5
        59: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ top, int ]
        frame_type = 2 /* same */
        frame_type = 17 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class coursier/core/Repository$Complete, class coursier/core/Repository$Complete$Input$Ver, class coursier/util/Monad, class coursier/core/Repository$Complete$Input, int, class java/lang/Object, int ]
          stack = []
      LineNumberTable:
        line 230: 0
        line 231: 4
        line 232: 23
        line 230: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0 $this   Lcoursier/core/Repository$Complete;
            0      60     1  x4$1   Lcoursier/core/Repository$Complete$Input$Ver;
            0      60     2   F$5   Lcoursier/util/Monad;
            0      60     3 input$1   Lcoursier/core/Repository$Complete$Input;
            0      60     4  x0$4   Z
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x4$1                           final
      F$5                            final
      input$1                        final
      x0$4                           final

  public static java.lang.Object $anonfun$complete$4(coursier.core.Repository$Complete, coursier.core.Repository$Complete$Input$Ver, coursier.util.Monad, coursier.core.Repository$Complete$Input, boolean);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=7, args_size=5
         0: iload         4
         2: istore        6
         4: iconst_0
         5: iload         6
         7: if_icmpne     20
        10: aload_2
        11: aload_3
        12: invokestatic  #554                // InterfaceMethod empty$1:(Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
        15: astore        5
        17: goto          80
        20: goto          23
        23: iconst_1
        24: iload         6
        26: if_icmpne     64
        29: getstatic     #183                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        32: aload_0
        33: aload_1
        34: invokevirtual #569                // Method coursier/core/Repository$Complete$Input$Ver.nameInput:()Lcoursier/core/Repository$Complete$Input$Name;
        37: aload_2
        38: invokespecial #516                // InterfaceMethod hasName:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;)Ljava/lang/Object;
        41: aload_2
        42: invokevirtual #189                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        45: aload_0
        46: aload_1
        47: aload_2
        48: aload_3
        49: invokedynamic #574,  0            // InvokeDynamic #15:apply:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
        54: invokeinterface #201,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        59: astore        5
        61: goto          80
        64: goto          67
        67: new           #284                // class scala/MatchError
        70: dup
        71: iload         6
        73: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        76: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        79: athrow
        80: aload         5
        82: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ top, int ]
        frame_type = 2 /* same */
        frame_type = 40 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class coursier/core/Repository$Complete, class coursier/core/Repository$Complete$Input$Ver, class coursier/util/Monad, class coursier/core/Repository$Complete$Input, int, class java/lang/Object, int ]
          stack = []
      LineNumberTable:
        line 227: 0
        line 228: 4
        line 229: 23
        line 230: 29
        line 229: 64
        line 227: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0 $this   Lcoursier/core/Repository$Complete;
            0      83     1  x4$1   Lcoursier/core/Repository$Complete$Input$Ver;
            0      83     2   F$5   Lcoursier/util/Monad;
            0      83     3 input$1   Lcoursier/core/Repository$Complete$Input;
            0      83     4  x0$3   Z
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x4$1                           final
      F$5                            final
      input$1                        final
      x0$3                           final

  public static void $init$(coursier.core.Repository$Complete);
    descriptor: (Lcoursier/core/Repository$Complete;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lcoursier/core/Repository$Complete;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static java.lang.Object $anonfun$hasOrg$1$adapted(coursier.core.Repository$Complete$Input$Org, boolean, scala.util.Either);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: aload_2
         3: invokestatic  #578                // InterfaceMethod $anonfun$hasOrg$1:(Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Z
         6: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 orgInput$2   Lcoursier/core/Repository$Complete$Input$Org;
            0      10     1 partial$1   Z
            0      10     2   res   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      orgInput$2                     final
      partial$1                      final
      res                            final

  public static java.lang.Object $anonfun$hasOrg$4$adapted(coursier.util.Monad, java.lang.Object, java.lang.Object);
    descriptor: (Lcoursier/util/Monad;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #581                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         6: invokestatic  #583                // InterfaceMethod $anonfun$hasOrg$4:(Lcoursier/util/Monad;Ljava/lang/Object;Z)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 157: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   F$3   Lcoursier/util/Monad;
            0      10     1 check$1   Ljava/lang/Object;
            0      10     2  x0$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      F$3                            final
      check$1                        final
      x0$1                           final

  public static java.lang.Object $anonfun$hasName$1$adapted(coursier.core.Repository$Complete$Input$Name, scala.util.Either);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #585                // InterfaceMethod $anonfun$hasName$1:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Z
         5: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 nameInput$2   Lcoursier/core/Repository$Complete$Input$Name;
            0       9     1   res   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      nameInput$2                    final
      res                            final

  public static java.lang.Object $anonfun$hasModule$1$adapted(coursier.core.Repository$Complete, coursier.util.Monad, coursier.core.Module, boolean, java.lang.Object);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZLjava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: iload_3
         4: aload         4
         6: invokestatic  #581                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         9: invokestatic  #587                // InterfaceMethod $anonfun$hasModule$1:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZZ)Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lcoursier/core/Repository$Complete;
            0      13     1   F$4   Lcoursier/util/Monad;
            0      13     2 module$3   Lcoursier/core/Module;
            0      13     3 sbtAttrStub$1   Z
            0      13     4  x0$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      F$4                            final
      module$3                       final
      sbtAttrStub$1                  final
      x0$1                           final

  public static java.lang.Object $anonfun$complete$2$adapted(coursier.core.Repository$Complete, coursier.core.Repository$Complete$Input$Org, coursier.util.Monad, coursier.core.Repository$Complete$Input, java.lang.Object);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #581                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         9: invokestatic  #589                // InterfaceMethod $anonfun$complete$2:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 217: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lcoursier/core/Repository$Complete;
            0      13     1  x2$1   Lcoursier/core/Repository$Complete$Input$Org;
            0      13     2   F$5   Lcoursier/util/Monad;
            0      13     3 input$1   Lcoursier/core/Repository$Complete$Input;
            0      13     4  x0$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x2$1                           final
      F$5                            final
      input$1                        final
      x0$1                           final

  public static java.lang.Object $anonfun$complete$3$adapted(coursier.core.Repository$Complete, coursier.core.Repository$Complete$Input$Name, coursier.util.Monad, coursier.core.Repository$Complete$Input, java.lang.Object);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #581                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         9: invokestatic  #591                // InterfaceMethod $anonfun$complete$3:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lcoursier/core/Repository$Complete;
            0      13     1  x3$1   Lcoursier/core/Repository$Complete$Input$Name;
            0      13     2   F$5   Lcoursier/util/Monad;
            0      13     3 input$1   Lcoursier/core/Repository$Complete$Input;
            0      13     4  x0$2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x3$1                           final
      F$5                            final
      input$1                        final
      x0$2                           final

  public static java.lang.Object $anonfun$complete$4$adapted(coursier.core.Repository$Complete, coursier.core.Repository$Complete$Input$Ver, coursier.util.Monad, coursier.core.Repository$Complete$Input, java.lang.Object);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #581                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         9: invokestatic  #593                // InterfaceMethod $anonfun$complete$4:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 227: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lcoursier/core/Repository$Complete;
            0      13     1  x4$1   Lcoursier/core/Repository$Complete$Input$Ver;
            0      13     2   F$5   Lcoursier/util/Monad;
            0      13     3 input$1   Lcoursier/core/Repository$Complete$Input;
            0      13     4  x0$3   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x4$1                           final
      F$5                            final
      input$1                        final
      x0$3                           final

  public static java.lang.Object $anonfun$name$2$adapted(coursier.core.Repository$Complete$Input$Name, java.lang.String);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #595                // InterfaceMethod $anonfun$name$2:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Z
         5: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 nameInput$1   Lcoursier/core/Repository$Complete$Input$Name;
            0       9     1   x$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      nameInput$1                    final
      x$3                            final

  public static java.lang.Object $anonfun$hasOrg$3$adapted(coursier.core.Repository$Complete$Input$Org, java.lang.String);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #597                // InterfaceMethod $anonfun$hasOrg$3:(Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Z
         5: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 150: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 orgInput$2   Lcoursier/core/Repository$Complete$Input$Org;
            0       9     1   x$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      orgInput$2                     final
      x$5                            final

  public static java.lang.Object $anonfun$hasOrg$2$adapted(coursier.core.Repository$Complete$Input$Org, boolean, coursier.core.Repository$Complete$Result);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: aload_2
         3: invokestatic  #599                // InterfaceMethod $anonfun$hasOrg$2:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Z
         6: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 orgInput$2   Lcoursier/core/Repository$Complete$Input$Org;
            0      10     1 partial$1   Z
            0      10     2   res   Lcoursier/core/Repository$Complete$Result;
    MethodParameters:
      Name                           Flags
      orgInput$2                     final
      partial$1                      final
      res                            final

  public static java.lang.Object $anonfun$hasName$2$adapted(coursier.core.Repository$Complete$Input$Name, coursier.core.Repository$Complete$Result);
    descriptor: (Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #601                // InterfaceMethod $anonfun$hasName$2:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Z
         5: invokestatic  #473                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 171: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 nameInput$2   Lcoursier/core/Repository$Complete$Input$Name;
            0       9     1   x$6   Lcoursier/core/Repository$Complete$Result;
    MethodParameters:
      Name                           Flags
      nameInput$2                    final
      x$6                            final

  public static java.lang.Object $anonfun$complete$5$adapted(coursier.core.Repository$Complete, coursier.core.Repository$Complete$Input$Ver, coursier.util.Monad, coursier.core.Repository$Complete$Input, java.lang.Object);
    descriptor: (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #581                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         9: invokestatic  #603                // InterfaceMethod $anonfun$complete$5:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Z)Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 230: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lcoursier/core/Repository$Complete;
            0      13     1  x4$1   Lcoursier/core/Repository$Complete$Input$Ver;
            0      13     2   F$5   Lcoursier/util/Monad;
            0      13     3 input$1   Lcoursier/core/Repository$Complete$Input;
            0      13     4  x0$4   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x4$1                           final
      F$5                            final
      input$1                        final
      x0$4                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #615,  0            // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #9= #2 of #8;             // Complete=class coursier/core/Repository$Complete of class coursier/core/Repository
  public static #12= #11 of #8;           // =class coursier/core/Repository$Complete$ of class coursier/core/Repository
  public static final #15= #14 of #11;    // CompletingNameException=class coursier/core/Repository$Complete$CompletingNameException of class coursier/core/Repository$Complete$
  public static final #18= #17 of #11;    // CompletingOrgException=class coursier/core/Repository$Complete$CompletingOrgException of class coursier/core/Repository$Complete$
  public static final #21= #20 of #11;    // CompletingVersionException=class coursier/core/Repository$Complete$CompletingVersionException of class coursier/core/Repository$Complete$
  public static abstract #24= #23 of #11; // Input=class coursier/core/Repository$Complete$Input of class coursier/core/Repository$Complete$
  public static #12= #26 of #11;          // =class coursier/core/Repository$Complete$Input$ of class coursier/core/Repository$Complete$
  public static final #29= #28 of #26;    // Name=class coursier/core/Repository$Complete$Input$Name of class coursier/core/Repository$Complete$Input$
  public static #12= #31 of #26;          // =class coursier/core/Repository$Complete$Input$Name$ of class coursier/core/Repository$Complete$Input$
  public static final #34= #33 of #26;    // Org=class coursier/core/Repository$Complete$Input$Org of class coursier/core/Repository$Complete$Input$
  public static #12= #36 of #26;          // =class coursier/core/Repository$Complete$Input$Org$ of class coursier/core/Repository$Complete$Input$
  public static final #39= #38 of #26;    // Ver=class coursier/core/Repository$Complete$Input$Ver of class coursier/core/Repository$Complete$Input$
  public static final #42= #41 of #11;    // Result=class coursier/core/Repository$Complete$Result of class coursier/core/Repository$Complete$
  public static #12= #44 of #11;          // =class coursier/core/Repository$Complete$Result$ of class coursier/core/Repository$Complete$
  public static #49= #46 of #48;          // AllOps=class coursier/util/Monad$AllOps of class coursier/util/Monad
  public static #12= #51 of #48;          // =class coursier/util/Monad$ops$ of class coursier/util/Monad
  public static final #56= #53 of #55;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // <F:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "Repository.scala"
BootstrapMethods:
  0: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #85 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$org$1:(Lcoursier/core/Repository$Complete$Input$Org;Lscala/util/Either;)Lscala/util/Either;
      #87 (Lscala/util/Either;)Lscala/util/Either;
      #88 5
      #89 1
      #87 (Lscala/util/Either;)Lscala/util/Either;
  1: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #145 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$name$1:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Lscala/util/Either;
      #87 (Lscala/util/Either;)Lscala/util/Either;
      #88 5
      #89 1
      #87 (Lscala/util/Either;)Lscala/util/Either;
  2: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #160 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$1$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Ljava/lang/Object;
      #162 (Lscala/util/Either;)Ljava/lang/Object;
      #88 5
      #89 1
      #162 (Lscala/util/Either;)Ljava/lang/Object;
  3: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #194 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$4$adapted:(Lcoursier/util/Monad;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #89 1
  4: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #215 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasName$1$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Ljava/lang/Object;
      #162 (Lscala/util/Either;)Ljava/lang/Object;
      #88 5
      #89 1
      #162 (Lscala/util/Either;)Ljava/lang/Object;
  5: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #239 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasModule$1$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZLjava/lang/Object;)Ljava/lang/Object;
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #89 1
  6: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #259 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$2$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #89 1
  7: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #270 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$3$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #89 1
  8: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #279 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$4$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #89 1
  9: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #387 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$name$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/Object;
      #388 (Ljava/lang/String;)Ljava/lang/Object;
      #88 5
      #89 1
      #388 (Ljava/lang/String;)Ljava/lang/Object;
  10: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #397 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$name$3:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/String;
      #398 (Ljava/lang/String;)Ljava/lang/String;
      #88 5
      #89 1
      #398 (Ljava/lang/String;)Ljava/lang/String;
  11: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #440 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$3$adapted:(Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Ljava/lang/Object;
      #388 (Ljava/lang/String;)Ljava/lang/Object;
      #88 5
      #89 1
      #388 (Ljava/lang/String;)Ljava/lang/Object;
  12: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #457 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$2$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
      #459 (Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
      #88 5
      #89 1
      #459 (Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  13: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #484 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasName$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
      #459 (Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
      #88 5
      #89 1
      #459 (Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
  14: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #539 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$1:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;Lscala/util/Either;)Lscala/util/Either;
      #87 (Lscala/util/Either;)Lscala/util/Either;
      #88 5
      #89 1
      #87 (Lscala/util/Either;)Lscala/util/Either;
  15: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #573 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$5$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #89 1
  16: #612 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #539 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$1:(Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/core/Repository$Complete$Input;Lscala/util/Either;)Lscala/util/Either;
      #259 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$2$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Org;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
      #270 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$3$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
      #279 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$4$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
      #573 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$complete$5$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input$Ver;Lcoursier/util/Monad;Lcoursier/core/Repository$Complete$Input;Ljava/lang/Object;)Ljava/lang/Object;
      #239 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasModule$1$adapted:(Lcoursier/core/Repository$Complete;Lcoursier/util/Monad;Lcoursier/core/Module;ZLjava/lang/Object;)Ljava/lang/Object;
      #215 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasName$1$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Ljava/lang/Object;
      #484 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasName$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Lcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
      #160 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$1$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLscala/util/Either;)Ljava/lang/Object;
      #457 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$2$adapted:(Lcoursier/core/Repository$Complete$Input$Org;ZLcoursier/core/Repository$Complete$Result;)Ljava/lang/Object;
      #440 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$3$adapted:(Lcoursier/core/Repository$Complete$Input$Org;Ljava/lang/String;)Ljava/lang/Object;
      #194 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$hasOrg$4$adapted:(Lcoursier/util/Monad;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #145 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$name$1:(Lcoursier/core/Repository$Complete$Input$Name;Lscala/util/Either;)Lscala/util/Either;
      #387 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$name$2$adapted:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/Object;
      #397 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$name$3:(Lcoursier/core/Repository$Complete$Input$Name;Ljava/lang/String;)Ljava/lang/String;
      #85 REF_invokeStatic coursier/core/Repository$Complete.$anonfun$org$1:(Lcoursier/core/Repository$Complete$Input$Org;Lscala/util/Either;)Lscala/util/Either;
  ScalaInlineInfo: length = 0xF4 (unknown attribute)
   01 00 00 30 02 0C 02 0D 01 02 2C 02 2D 01 01 04
   01 05 01 02 31 02 32 01 01 0F 01 10 01 02 3B 02
   36 01 01 18 01 19 01 02 35 02 36 01 02 40 01 19
   01 01 EB 01 EC 01 00 F0 00 F1 01 01 E3 01 E4 01
   00 D8 00 D9 01 01 DF 01 E0 01 01 E5 01 E6 01 01
   C4 01 C5 01 00 A1 00 A2 01 01 AD 01 AE 01 01 CA
   01 CB 01 01 98 01 99 01 01 B9 01 BA 01 01 D5 01
   D6 01 00 C3 00 C4 01 00 92 00 93 01 01 6F 01 70
   01 01 84 01 85 01 01 7A 01 7B 01 00 56 00 57 01
   02 45 02 46 01 00 FE 00 FF 01 00 FE 01 29 01 00
   FC 00 FD 01 00 FC 01 26 01 02 25 02 26 01 00 E7
   00 E8 00 00 E5 00 E6 01 00 F9 00 E2 00 00 F8 00
   DF 01 00 D5 00 73 01 00 9B 00 9C 01 00 42 00 43
   00 00 72 00 73 01 00 49 00 4A 01 00 3E 00 3F 00
   00 E1 00 E2 00 00 DE 00 DF 01 02 19 02 1A 01 00
   45 00 46 00
  Scala: length = 0x0 (unknown attribute)

