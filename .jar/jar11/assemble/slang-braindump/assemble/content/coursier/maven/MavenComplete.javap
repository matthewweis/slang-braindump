Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/maven/MavenComplete.class
  Last modified May 29, 2022; size 16390 bytes
  SHA-256 checksum a26c1645290e57a222871da9f8c1d37d89ec16466c58303f66f246afc211e58c
  Compiled from "MavenComplete.scala"
public final class coursier.maven.MavenComplete<F extends java.lang.Object> extends java.lang.Object implements coursier.core.Repository$Complete<F>, scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/maven/MavenComplete
  super_class: #5                         // java/lang/Object
  interfaces: 3, fields: 3, methods: 36, attributes: 7
Constant pool:
    #1 = Utf8               coursier/maven/MavenComplete
    #2 = Class              #1            // coursier/maven/MavenComplete
    #3 = Utf8               <F:Ljava/lang/Object;>Ljava/lang/Object;Lcoursier/core/Repository$Complete<TF;>;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               coursier/core/Repository$Complete
    #7 = Class              #6            // coursier/core/Repository$Complete
    #8 = Utf8               scala/Product
    #9 = Class              #8            // scala/Product
   #10 = Utf8               java/io/Serializable
   #11 = Class              #10           // java/io/Serializable
   #12 = Utf8               MavenComplete.scala
   #13 = Utf8               Lscala/reflect/ScalaSignature;
   #14 = Utf8               bytes
   #15 = Utf8               \u0006\u0005\u0005-h\u0001B\u0010!\u0005\u0015B\u0001\u0002\u0016\u0001\u0003\u0006\u0004%\t!\u0016\u0005\t5\u0002\u0011\t\u0011)A\u0005-\"A1\f\u0001BC\u0002\u0013\u0005A\f\u0003\u0005a\u0001\t\u0005\t\u0015!\u0003^\u0011!\t\u0007A!b\u0001\n\u0003\u0011\u0007\u0002C5\u0001\u0005\u0003\u0005\u000b\u0011B2\t\u000b)\u0004A\u0011A6\t\u000bA\u0004A\u0011I9\t\u000bU\u0004A\u0011\u0002<\t\u000f\u0005m\u0001\u0001\"\u0001\u0002\u001e!9\u0011\u0011\u0005\u0001\u0005\u0002\u0005\r\u0002bBA\u0018\u0001\u0011\u0005\u0011\u0011\u0007\u0005\b\u0003\u007f\u0001A\u0011AA!\u0011\u001d\t)\u0005\u0001C\u0001\u0003\u000fBq!a\u0013\u0001\t\u0003\ti\u0005C\u0004\u0002R\u0001!\t%a\u0015\t\u000f\u0005\r\u0004\u0001\"\u0011\u0002f!9\u00111\u000e\u0001\u0005B\u00055\u0004bBA9\u0001\u0011\u0005\u00131\u000f\u0005\b\u0003w\u0002A\u0011BA?\u0011\u001d\t)\t\u0001C!\u0003\u000fCq!!#\u0001\t\u0003\nY\tC\u0004\u0002\u000e\u0002!\t%a$\t\u000f\u0005U\u0005\u0001\"\u0011\u0002\u0018\u001e9\u00111\u0014\u0011\t\u0002\u0005ueAB\u0010!\u0011\u0003\ty\n\u0003\u0004k5\u0011\u0005\u00111\u0016\u0005\t\u0003[SB\u0011\u0001\u0012\u00020\"9\u0011q\u0019\u000e\u0005\u0002\u0005%\u0007\"CAq5\u0005\u0005I\u0011BAr\u00055i\u0015M^3o\u0007>l\u0007\u000f\\3uK*\u0011\u0011EI\u0001\u0006[\u00064XM\u001c\u0006\u0002G\u0005A1m\\;sg&,\'o\u0001\u0001\u0016\u0005\u0019J4#\u0002\u0001([\u0015C\u0005C\u0001\u0015,\u001b\u0005I#\"\u0001\u0016\u0002\u000bM\u001c\u0017\r\\1\n\u00051J#AB!osJ+g\rE\u0002/i]r!a\f\u001a\u000e\u0003AR!!\r\u0012\u0002\t\r|\'/Z\u0005\u0003gA\n!BU3q_NLGo\u001c:z\u0013\t)dG\u0001\u0005D_6\u0004H.\u001a;f\u0015\t\u0019\u0004\u0007\u0005\u00029s1\u0001A!\u0002\u001e\u0001\u0005\u0004Y$!\u0001$\u0016\u0005q\u001a\u0015CA\u001fA!\tAc(\u0003\u0002@S\t9aj\u001c;iS:<\u0007C\u0001\u0015B\u0013\t\u0011\u0015FA\u0002B]f$Q\u0001R\u001dC\u0002q\u0012\u0011a\u0018\t\u0003Q\u0019K!aR\u0015\u0003\u000fA\u0013x\u000eZ;diB\u0011\u0011*\u0015\b\u0003\u0015>s!a\u0013(\u000e\u00031S!!\u0014\u0013\u0002\rq\u0012xn\u001c;?\u0013\u0005Q\u0013B\u0001)*\u0003\u001d\u0001\u0018mY6bO\u0016L!AU*\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005AK\u0013\u0001\u0002:fa>,\u0012A\u0016\t\u0003/bk\u0011\u0001I\u0005\u00033\u0002\u0012q\"T1wK:\u0014V\r]8tSR|\'/_\u0001\u0006e\u0016\u0004x\u000eI\u0001\u0006M\u0016$8\r[\u000b\u0002;B\u0019aFX\u001c\n\u0005}3$!\u0002$fi\u000eD\u0017A\u00024fi\u000eD\u0007%A\u0001G+\u0005\u0019\u0007c\u00013ho5\tQM\u0003\u0002gE\u0005!Q\u000f^5m\u0013\tAWMA\u0003N_:\fG-\u0001\u0002GA\u00051A(\u001b8jiz\"B\u0001\\7o_B\u0019q\u000bA\u001c\t\u000bQ;\u0001\u0019\u0001,\t\u000bm;\u0001\u0019A/\t\u000b\u0005<\u0001\u0019A2\u0002\u0017M\u0014G/\u0011;ueN#XOY\u000b\u0002eB\u0011\u0001f]\u0005\u0003i&\u0012qAQ8pY\u0016\fg.\u0001\bge>lG)\u001b:MSN$\u0018N\\4\u0015\u000b]\f\u0019\"a\u0006\u0011\u0007aJ\u0004\u0010\u0005\u0003Jsnt\u0018B\u0001>T\u0005\u0019)\u0015\u000e\u001e5feB\u0011\u0011\n`\u0005\u0003{N\u0013\u0011\u0002\u00165s_^\f\'\r\\3\u0011\t%{\u00181A\u0005\u0004\u0003\u0003\u0019&aA*fcB!\u0011QAA\u0007\u001d\u0011\t9!!\u0003\u0011\u0005-K\u0013bAA\u0006S\u00051\u0001K]3eK\u001aLA!a\u0004\u0002\u0012\t11\u000b\u001e:j]\u001eT1!a\u0003*\u0011\u001d\t)\"\u0003a\u0001\u0003\u0007\ta\u0001Z5s+Jd\u0007bBA\r\u0013\u0001\u0007\u00111A\u0001\u0007aJ,g-\u001b=\u0002\u0019=\u0014x-\u00198ju\u0006$\u0018n\u001c8\u0015\u0007]\fy\u0002C\u0004\u0002\u001a)\u0001\r!a\u0001\u0002\u00155|G-\u001e7f\u001d\u0006lW\rF\u0003x\u0003K\ti\u0003C\u0004\u0002\u001c-\u0001\r!a\n\u0011\u0007=\nI#C\u0002\u0002,A\u0012Ab\u0014:hC:L\'0\u0019;j_:Dq!!\u0007\f\u0001\u0004\t\u0019!\u0001\u0005wKJ\u001c\u0018n\u001c8t)\u00159\u00181GA\u001f\u0011\u001d\t)\u0004\u0004a\u0001\u0003o\ta!\\8ek2,\u0007cA\u0018\u0002:%\u0019\u00111\b\u0019\u0003\r5{G-\u001e7f\u0011\u001d\tI\u0002\u0004a\u0001\u0003\u0007\t\u0001b^5uQJ+\u0007o\u001c\u000b\u0004Y\u0006\r\u0003\"\u0002+\u000e\u0001\u00041\u0016!C<ji\"4U\r^2i)\ra\u0017\u0011\n\u0005\u00067:\u0001\r!X\u0001\u0006o&$\bN\u0012\u000b\u0004Y\u0006=\u0003\"B1\u0010\u0001\u0004\u0019\u0017\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u0005U\u0003\u0003BA,\u0003Cj!!!\u0017\u000b\t\u0005m\u0013QL\u0001\u0005Y\u0006twM\u0003\u0002\u0002`\u0005!!.\u0019<b\u0013\u0011\ty!!\u0017\u0002\u0011\r\fg.R9vC2$2A]A4\u0011\u0019\tI\'\u0005a\u0001\u0001\u0006\u0019qN\u00196\u0002\r\u0015\fX/\u00197t)\r\u0011\u0018q\u000e\u0005\u0007\u0003S\u0012\u0002\u0019\u0001!\u0002\u0011!\f7\u000f[\"pI\u0016$\"!!\u001e\u0011\u0007!\n9(C\u0002\u0002z%\u00121!\u00138u\u0003\u0015!X\u000f\u001d7f+\t\ty\b\u0005\u0004)\u0003\u00033VlY\u0005\u0004\u0003\u0007K#A\u0002+va2,7\'A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0003\u0003+\nA\u0002\u001d:pIV\u001cG/\u0011:jif,\"!!\u001e\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR\u0019\u0001)!%\t\u000f\u0005Mu\u00031\u0001\u0002v\u0005\ta.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,G\u0003BA+\u00033Cq!a%\u0019\u0001\u0004\t)(A\u0007NCZ,gnQ8na2,G/\u001a\t\u0003/j\u0019BAG\u0014\u0002\"B!\u00111UAU\u001b\t\t)K\u0003\u0003\u0002(\u0006u\u0013AA5p\u0013\r\u0011\u0016Q\u0015\u000b\u0003\u0003;\u000baa\u001d9mSR\u0004D\u0003CAY\u0003o\u000bY,!2\u0011\u000b%\u000b\u0019,a\u0001\n\u0007\u0005U6K\u0001\u0004WK\u000e$xN\u001d\u0005\b\u0003sc\u0002\u0019AA\u0002\u0003\u0005\u0019\bbBA_9\u0001\u0007\u0011qX\u0001\u0004g\u0016\u0004\bc\u0001\u0015\u0002B&\u0019\u00111Y\u0015\u0003\t\rC\u0017M\u001d\u0005\b\u00033a\u0002\u0019AA\u0002\u0003\u0015\t\u0007\u000f\u001d7z+\u0011\tY-!5\u0015\u0011\u00055\u0017q[Am\u0003;\u0004Ba\u0016\u0001\u0002PB\u0019\u0001(!5\u0005\rij\"\u0019AAj+\ra\u0014Q\u001b\u0003\u0007\t\u0006E\'\u0019\u0001\u001f\t\u000bQk\u0002\u0019\u0001,\t\rmk\u0002\u0019AAn!\u0011qc,a4\t\r\u0005l\u0002\u0019AAp!\u0011!w-a4\u0002\u0019]\u0014\u0018\u000e^3SKBd\u0017mY3\u0015\u0005\u0005\u0015\b\u0003BA,\u0003OLA!!;\u0002Z\t1qJ\u00196fGR\u0004
   #16 = Utf8               coursier/core/Repository
   #17 = Class              #16           // coursier/core/Repository
   #18 = Utf8               Complete
   #19 = Utf8               coursier/core/Repository$Complete$
   #20 = Class              #19           // coursier/core/Repository$Complete$
   #21 = Utf8
   #22 = Utf8               coursier/core/Repository$Complete$Input
   #23 = Class              #22           // coursier/core/Repository$Complete$Input
   #24 = Utf8               Input
   #25 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #26 = Class              #25           // java/lang/invoke/MethodHandles$Lookup
   #27 = Utf8               java/lang/invoke/MethodHandles
   #28 = Class              #27           // java/lang/invoke/MethodHandles
   #29 = Utf8               Lookup
   #30 = Utf8               repo
   #31 = Utf8               Lcoursier/maven/MavenRepository;
   #32 = Utf8               fetch
   #33 = Utf8               Lscala/Function1;
   #34 = Utf8               Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;
   #35 = Utf8               F
   #36 = Utf8               Lcoursier/util/Monad;
   #37 = Utf8               Lcoursier/util/Monad<TF;>;
   #38 = Utf8               apply
   #39 = Utf8               (Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/maven/MavenComplete;
   #40 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/maven/MavenRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/maven/MavenComplete<TF;>;
   #41 = Utf8               coursier/maven/MavenComplete$
   #42 = Class              #41           // coursier/maven/MavenComplete$
   #43 = Utf8               MODULE$
   #44 = Utf8               Lcoursier/maven/MavenComplete$;
   #45 = NameAndType        #43:#44       // MODULE$:Lcoursier/maven/MavenComplete$;
   #46 = Fieldref           #42.#45       // coursier/maven/MavenComplete$.MODULE$:Lcoursier/maven/MavenComplete$;
   #47 = NameAndType        #38:#39       // apply:(Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/maven/MavenComplete;
   #48 = Methodref          #42.#47       // coursier/maven/MavenComplete$.apply:(Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/maven/MavenComplete;
   #49 = Utf8               productIterator
   #50 = Utf8               ()Lscala/collection/Iterator;
   #51 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #52 = Utf8               productIterator$
   #53 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #54 = NameAndType        #52:#53       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #55 = InterfaceMethodref #9.#54        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #56 = Utf8               this
   #57 = Utf8               Lcoursier/maven/MavenComplete;
   #58 = Utf8               productElementNames
   #59 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #60 = Utf8               productElementNames$
   #61 = NameAndType        #60:#53       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #62 = InterfaceMethodref #9.#61        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #63 = Utf8               hasModule
   #64 = Utf8               (Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
   #65 = Utf8               (Lcoursier/core/Module;ZLcoursier/util/Monad<TF;>;)TF;
   #66 = Utf8               module
   #67 = Utf8               sbtAttrStub
   #68 = Utf8               hasModule$
   #69 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
   #70 = NameAndType        #68:#69       // hasModule$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
   #71 = InterfaceMethodref #7.#70        // coursier/core/Repository$Complete.hasModule$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
   #72 = Utf8               Lcoursier/core/Module;
   #73 = Utf8               Z
   #74 = Utf8               hasModule$default$2
   #75 = Utf8               ()Z
   #76 = Utf8               hasModule$default$2$
   #77 = Utf8               (Lcoursier/core/Repository$Complete;)Z
   #78 = NameAndType        #76:#77       // hasModule$default$2$:(Lcoursier/core/Repository$Complete;)Z
   #79 = InterfaceMethodref #7.#78        // coursier/core/Repository$Complete.hasModule$default$2$:(Lcoursier/core/Repository$Complete;)Z
   #80 = Utf8               complete
   #81 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
   #82 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad<TF;>;)TF;
   #83 = Utf8               input
   #84 = Utf8               complete$
   #85 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
   #86 = NameAndType        #84:#85       // complete$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
   #87 = InterfaceMethodref #7.#86        // coursier/core/Repository$Complete.complete$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
   #88 = Utf8               Lcoursier/core/Repository$Complete$Input;
   #89 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
   #90 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad<TF;>;)TF;
   #91 = Utf8               scalaVersion
   #92 = Utf8               scalaBinaryVersion
   #93 = Utf8               (Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
   #94 = NameAndType        #84:#93       // complete$:(Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
   #95 = InterfaceMethodref #7.#94        // coursier/core/Repository$Complete.complete$:(Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
   #96 = Utf8               Ljava/lang/String;
   #97 = Utf8               ()Lcoursier/maven/MavenRepository;
   #98 = NameAndType        #30:#31       // repo:Lcoursier/maven/MavenRepository;
   #99 = Fieldref           #2.#98        // coursier/maven/MavenComplete.repo:Lcoursier/maven/MavenRepository;
  #100 = Utf8               ()Lscala/Function1;
  #101 = Utf8               ()Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;
  #102 = NameAndType        #32:#33       // fetch:Lscala/Function1;
  #103 = Fieldref           #2.#102       // coursier/maven/MavenComplete.fetch:Lscala/Function1;
  #104 = Utf8               ()Lcoursier/util/Monad;
  #105 = Utf8               ()Lcoursier/util/Monad<TF;>;
  #106 = NameAndType        #35:#36       // F:Lcoursier/util/Monad;
  #107 = Fieldref           #2.#106       // coursier/maven/MavenComplete.F:Lcoursier/util/Monad;
  #108 = NameAndType        #30:#97       // repo:()Lcoursier/maven/MavenRepository;
  #109 = Methodref          #2.#108       // coursier/maven/MavenComplete.repo:()Lcoursier/maven/MavenRepository;
  #110 = Utf8               coursier/maven/MavenRepository
  #111 = Class              #110          // coursier/maven/MavenRepository
  #112 = NameAndType        #67:#75       // sbtAttrStub:()Z
  #113 = Methodref          #111.#112     // coursier/maven/MavenRepository.sbtAttrStub:()Z
  #114 = Utf8               fromDirListing
  #115 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #116 = Utf8               (Ljava/lang/String;Ljava/lang/String;)TF;
  #117 = Utf8               dirUrl
  #118 = Utf8               prefix
  #119 = NameAndType        #35:#104      // F:()Lcoursier/util/Monad;
  #120 = Methodref          #2.#119       // coursier/maven/MavenComplete.F:()Lcoursier/util/Monad;
  #121 = NameAndType        #32:#100      // fetch:()Lscala/Function1;
  #122 = Methodref          #2.#121       // coursier/maven/MavenComplete.fetch:()Lscala/Function1;
  #123 = Utf8               java/lang/StringBuilder
  #124 = Class              #123          // java/lang/StringBuilder
  #125 = Integer            6
  #126 = Utf8               <init>
  #127 = Utf8               (I)V
  #128 = NameAndType        #126:#127     // "<init>":(I)V
  #129 = Methodref          #124.#128     // java/lang/StringBuilder."<init>":(I)V
  #130 = Utf8               append
  #131 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #132 = NameAndType        #130:#131     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #133 = Methodref          #124.#132     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #134 = Utf8               .links
  #135 = String             #134          // .links
  #136 = Utf8               toString
  #137 = Utf8               ()Ljava/lang/String;
  #138 = NameAndType        #136:#137     // toString:()Ljava/lang/String;
  #139 = Methodref          #124.#138     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #140 = Utf8               artifactFor
  #141 = Utf8               (Ljava/lang/String;Z)Lcoursier/util/Artifact;
  #142 = NameAndType        #140:#141     // artifactFor:(Ljava/lang/String;Z)Lcoursier/util/Artifact;
  #143 = Methodref          #111.#142     // coursier/maven/MavenRepository.artifactFor:(Ljava/lang/String;Z)Lcoursier/util/Artifact;
  #144 = Utf8               scala/Function1
  #145 = Class              #144          // scala/Function1
  #146 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #147 = NameAndType        #38:#146      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #148 = InterfaceMethodref #145.#147     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #149 = Utf8               coursier/util/EitherT
  #150 = Class              #149          // coursier/util/EitherT
  #151 = Utf8               run
  #152 = Utf8               ()Ljava/lang/Object;
  #153 = NameAndType        #151:#152     // run:()Ljava/lang/Object;
  #154 = Methodref          #150.#153     // coursier/util/EitherT.run:()Ljava/lang/Object;
  #155 = MethodType         #146          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #156 = Utf8               $anonfun$fromDirListing$1
  #157 = Utf8               (Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #158 = NameAndType        #156:#157     // $anonfun$fromDirListing$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #159 = Methodref          #2.#158       // coursier/maven/MavenComplete.$anonfun$fromDirListing$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #160 = MethodHandle       6:#159        // REF_invokeStatic coursier/maven/MavenComplete.$anonfun$fromDirListing$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #161 = Utf8               (Lscala/util/Either;)Lscala/util/Either;
  #162 = MethodType         #161          //  (Lscala/util/Either;)Lscala/util/Either;
  #163 = Integer            5
  #164 = Integer            1
  #165 = Utf8               java/lang/invoke/LambdaMetafactory
  #166 = Class              #165          // java/lang/invoke/LambdaMetafactory
  #167 = Utf8               altMetafactory
  #168 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #169 = NameAndType        #167:#168     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #170 = Methodref          #166.#169     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #171 = MethodHandle       6:#170        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #172 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #173 = NameAndType        #38:#172      // apply:(Ljava/lang/String;)Lscala/Function1;
  #174 = InvokeDynamic      #0:#173       // #0:apply:(Ljava/lang/String;)Lscala/Function1;
  #175 = Utf8               coursier/util/Monad
  #176 = Class              #175          // coursier/util/Monad
  #177 = Utf8               map
  #178 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #179 = NameAndType        #177:#178     // map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #180 = InterfaceMethodref #176.#179     // coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #181 = Utf8               organization
  #182 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #183 = Utf8               (Ljava/lang/String;)TF;
  #184 = Utf8               java/lang/String
  #185 = Class              #184          // java/lang/String
  #186 = Utf8               lastIndexOf
  #187 = Utf8               (I)I
  #188 = NameAndType        #186:#187     // lastIndexOf:(I)I
  #189 = Methodref          #185.#188     // java/lang/String.lastIndexOf:(I)I
  #190 = Utf8               scala/Tuple3
  #191 = Class              #190          // scala/Tuple3
  #192 = String             #21           //
  #193 = Utf8               scala/collection/immutable/Nil$
  #194 = Class              #193          // scala/collection/immutable/Nil$
  #195 = Utf8               Lscala/collection/immutable/Nil$;
  #196 = NameAndType        #43:#195      // MODULE$:Lscala/collection/immutable/Nil$;
  #197 = Fieldref           #194.#196     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #198 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #199 = NameAndType        #126:#198     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #200 = Methodref          #191.#199     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #201 = Utf8               scala/collection/StringOps$
  #202 = Class              #201          // scala/collection/StringOps$
  #203 = Utf8               Lscala/collection/StringOps$;
  #204 = NameAndType        #43:#203      // MODULE$:Lscala/collection/StringOps$;
  #205 = Fieldref           #202.#204     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #206 = Utf8               scala/Predef$
  #207 = Class              #206          // scala/Predef$
  #208 = Utf8               Lscala/Predef$;
  #209 = NameAndType        #43:#208      // MODULE$:Lscala/Predef$;
  #210 = Fieldref           #207.#209     // scala/Predef$.MODULE$:Lscala/Predef$;
  #211 = Utf8               augmentString
  #212 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #213 = NameAndType        #211:#212     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #214 = Methodref          #207.#213     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #215 = Utf8               take$extension
  #216 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #217 = NameAndType        #215:#216     // take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #218 = Methodref          #202.#217     // scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #219 = Utf8               scala/collection/ArrayOps$
  #220 = Class              #219          // scala/collection/ArrayOps$
  #221 = Utf8               Lscala/collection/ArrayOps$;
  #222 = NameAndType        #43:#221      // MODULE$:Lscala/collection/ArrayOps$;
  #223 = Fieldref           #220.#222     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #224 = Utf8               split$extension
  #225 = Utf8               (Ljava/lang/String;C)[Ljava/lang/String;
  #226 = NameAndType        #224:#225     // split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
  #227 = Methodref          #202.#226     // scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
  #228 = Utf8               [Ljava/lang/Object;
  #229 = Class              #228          // "[Ljava/lang/Object;"
  #230 = Utf8               refArrayOps
  #231 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #232 = NameAndType        #230:#231     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #233 = Methodref          #207.#232     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #234 = Utf8               toSeq$extension
  #235 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/Seq;
  #236 = NameAndType        #234:#235     // toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
  #237 = Methodref          #220.#236     // scala/collection/ArrayOps$.toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
  #238 = Utf8               drop$extension
  #239 = NameAndType        #238:#216     // drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #240 = Methodref          #202.#239     // scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #241 = Utf8               _1
  #242 = NameAndType        #241:#152     // _1:()Ljava/lang/Object;
  #243 = Methodref          #191.#242     // scala/Tuple3._1:()Ljava/lang/Object;
  #244 = Utf8               _2
  #245 = NameAndType        #244:#152     // _2:()Ljava/lang/Object;
  #246 = Methodref          #191.#245     // scala/Tuple3._2:()Ljava/lang/Object;
  #247 = Utf8               scala/collection/immutable/Seq
  #248 = Class              #247          // scala/collection/immutable/Seq
  #249 = Utf8               _3
  #250 = NameAndType        #249:#152     // _3:()Ljava/lang/Object;
  #251 = Methodref          #191.#250     // scala/Tuple3._3:()Ljava/lang/Object;
  #252 = Utf8               scala/MatchError
  #253 = Class              #252          // scala/MatchError
  #254 = Utf8               (Ljava/lang/Object;)V
  #255 = NameAndType        #126:#254     // "<init>":(Ljava/lang/Object;)V
  #256 = Methodref          #253.#255     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #257 = Utf8               urlFor
  #258 = Utf8               (Lscala/collection/immutable/Seq;Z)Ljava/lang/String;
  #259 = NameAndType        #257:#258     // urlFor:(Lscala/collection/immutable/Seq;Z)Ljava/lang/String;
  #260 = Methodref          #111.#259     // coursier/maven/MavenRepository.urlFor:(Lscala/collection/immutable/Seq;Z)Ljava/lang/String;
  #261 = NameAndType        #114:#115     // fromDirListing:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #262 = Methodref          #2.#261       // coursier/maven/MavenComplete.fromDirListing:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #263 = Utf8               $anonfun$organization$1
  #264 = NameAndType        #263:#157     // $anonfun$organization$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #265 = Methodref          #2.#264       // coursier/maven/MavenComplete.$anonfun$organization$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #266 = MethodHandle       6:#265        // REF_invokeStatic coursier/maven/MavenComplete.$anonfun$organization$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #267 = InvokeDynamic      #1:#173       // #1:apply:(Ljava/lang/String;)Lscala/Function1;
  #268 = Utf8               base
  #269 = Utf8               dir
  #270 = Utf8               Lscala/collection/immutable/Seq;
  #271 = Utf8               prefix0
  #272 = Utf8               idx
  #273 = Utf8               I
  #274 = Utf8               moduleName
  #275 = Utf8               versions
  #276 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;)Ljava/lang/Object;
  #277 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;)TF;
  #278 = Utf8               (Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #279 = NameAndType        #275:#278     // versions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #280 = Methodref          #111.#279     // coursier/maven/MavenRepository.versions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #281 = Utf8               $anonfun$versions$1
  #282 = NameAndType        #281:#157     // $anonfun$versions$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #283 = Methodref          #2.#282       // coursier/maven/MavenComplete.$anonfun$versions$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #284 = MethodHandle       6:#283        // REF_invokeStatic coursier/maven/MavenComplete.$anonfun$versions$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
  #285 = InvokeDynamic      #2:#173       // #2:apply:(Ljava/lang/String;)Lscala/Function1;
  #286 = Utf8               withRepo
  #287 = Utf8               (Lcoursier/maven/MavenRepository;)Lcoursier/maven/MavenComplete;
  #288 = Utf8               (Lcoursier/maven/MavenRepository;)Lcoursier/maven/MavenComplete<TF;>;
  #289 = Utf8               (Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)V
  #290 = NameAndType        #126:#289     // "<init>":(Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)V
  #291 = Methodref          #2.#290       // coursier/maven/MavenComplete."<init>":(Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)V
  #292 = Utf8               withFetch
  #293 = Utf8               (Lscala/Function1;)Lcoursier/maven/MavenComplete;
  #294 = Utf8               (Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;)Lcoursier/maven/MavenComplete<TF;>;
  #295 = Utf8               withF
  #296 = Utf8               (Lcoursier/util/Monad;)Lcoursier/maven/MavenComplete;
  #297 = Utf8               (Lcoursier/util/Monad<TF;>;)Lcoursier/maven/MavenComplete<TF;>;
  #298 = Utf8               MavenComplete(
  #299 = String             #298          // MavenComplete(
  #300 = Utf8               (Ljava/lang/String;)V
  #301 = NameAndType        #126:#300     // "<init>":(Ljava/lang/String;)V
  #302 = Methodref          #124.#301     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #303 = Utf8               valueOf
  #304 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #305 = NameAndType        #303:#304     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #306 = Methodref          #185.#305     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #307 = Utf8               ,
  #308 = String             #307          // ,
  #309 = Utf8               )
  #310 = String             #309          // )
  #311 = Utf8               b
  #312 = Utf8               Ljava/lang/StringBuilder;
  #313 = Utf8               canEqual
  #314 = Utf8               (Ljava/lang/Object;)Z
  #315 = Utf8               obj
  #316 = Utf8               Ljava/lang/Object;
  #317 = Utf8               equals
  #318 = NameAndType        #313:#314     // canEqual:(Ljava/lang/Object;)Z
  #319 = Methodref          #2.#318       // coursier/maven/MavenComplete.canEqual:(Ljava/lang/Object;)Z
  #320 = NameAndType        #317:#314     // equals:(Ljava/lang/Object;)Z
  #321 = Methodref          #5.#320       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #322 = Utf8               other
  #323 = Utf8               hashCode
  #324 = Utf8               ()I
  #325 = Utf8               MavenComplete
  #326 = String             #325          // MavenComplete
  #327 = Utf8               scala/runtime/Statics
  #328 = Class              #327          // scala/runtime/Statics
  #329 = Utf8               anyHash
  #330 = Utf8               (Ljava/lang/Object;)I
  #331 = NameAndType        #329:#330     // anyHash:(Ljava/lang/Object;)I
  #332 = Methodref          #328.#331     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #333 = Utf8               code
  #334 = Utf8               tuple
  #335 = Utf8               ()Lscala/Tuple3;
  #336 = Utf8               ()Lscala/Tuple3<Lcoursier/maven/MavenRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;>;
  #337 = Utf8               productPrefix
  #338 = Utf8               productArity
  #339 = Utf8               productElement
  #340 = Utf8               (I)Ljava/lang/Object;
  #341 = Utf8               n
  #342 = Utf8               java/lang/IndexOutOfBoundsException
  #343 = Class              #342          // java/lang/IndexOutOfBoundsException
  #344 = Utf8               scala/runtime/BoxesRunTime
  #345 = Class              #344          // scala/runtime/BoxesRunTime
  #346 = Utf8               boxToInteger
  #347 = Utf8               (I)Ljava/lang/Integer;
  #348 = NameAndType        #346:#347     // boxToInteger:(I)Ljava/lang/Integer;
  #349 = Methodref          #345.#348     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #350 = Methodref          #5.#138       // java/lang/Object.toString:()Ljava/lang/String;
  #351 = Methodref          #343.#301     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #352 = Utf8               productElementName
  #353 = Utf8               (I)Ljava/lang/String;
  #354 = String             #30           // repo
  #355 = String             #32           // fetch
  #356 = String             #35           // F
  #357 = Utf8               prefix$1
  #358 = Utf8               x0$1
  #359 = Utf8               scala/util/Left
  #360 = Class              #359          // scala/util/Left
  #361 = Utf8               value
  #362 = NameAndType        #361:#152     // value:()Ljava/lang/Object;
  #363 = Methodref          #360.#362     // scala/util/Left.value:()Ljava/lang/Object;
  #364 = Utf8               scala/package$
  #365 = Class              #364          // scala/package$
  #366 = Utf8               Lscala/package$;
  #367 = NameAndType        #43:#366      // MODULE$:Lscala/package$;
  #368 = Fieldref           #365.#367     // scala/package$.MODULE$:Lscala/package$;
  #369 = Utf8               Left
  #370 = Utf8               ()Lscala/util/Left$;
  #371 = NameAndType        #369:#370     // Left:()Lscala/util/Left$;
  #372 = Methodref          #365.#371     // scala/package$.Left:()Lscala/util/Left$;
  #373 = Utf8               java/lang/Exception
  #374 = Class              #373          // java/lang/Exception
  #375 = Methodref          #374.#301     // java/lang/Exception."<init>":(Ljava/lang/String;)V
  #376 = Utf8               scala/util/Left$
  #377 = Class              #376          // scala/util/Left$
  #378 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #379 = NameAndType        #38:#378      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #380 = Methodref          #377.#379     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #381 = Utf8               scala/util/Either
  #382 = Class              #381          // scala/util/Either
  #383 = Utf8               scala/util/Right
  #384 = Class              #383          // scala/util/Right
  #385 = Methodref          #384.#362     // scala/util/Right.value:()Ljava/lang/Object;
  #386 = Utf8               split0
  #387 = Utf8               (Ljava/lang/String;CLjava/lang/String;)Lscala/collection/immutable/Vector;
  #388 = NameAndType        #386:#387     // split0:(Ljava/lang/String;CLjava/lang/String;)Lscala/collection/immutable/Vector;
  #389 = Methodref          #42.#388      // coursier/maven/MavenComplete$.split0:(Ljava/lang/String;CLjava/lang/String;)Lscala/collection/immutable/Vector;
  #390 = Utf8               Right
  #391 = Utf8               ()Lscala/util/Right$;
  #392 = NameAndType        #390:#391     // Right:()Lscala/util/Right$;
  #393 = Methodref          #365.#392     // scala/package$.Right:()Lscala/util/Right$;
  #394 = Utf8               scala/util/Right$
  #395 = Class              #394          // scala/util/Right$
  #396 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #397 = NameAndType        #38:#396      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #398 = Methodref          #395.#397     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #399 = Utf8               e
  #400 = Utf8               entries
  #401 = Utf8               Lscala/collection/immutable/Vector;
  #402 = Utf8               rawLinks
  #403 = Utf8               Lscala/util/Either;
  #404 = Utf8               $anonfun$organization$3
  #405 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #406 = Utf8               base$1
  #407 = Utf8               x$4
  #408 = Integer            0
  #409 = Utf8               $anonfun$organization$2
  #410 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #411 = Utf8               x$3
  #412 = NameAndType        #404:#405     // $anonfun$organization$3:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #413 = Methodref          #2.#412       // coursier/maven/MavenComplete.$anonfun$organization$3:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #414 = MethodHandle       6:#413        // REF_invokeStatic coursier/maven/MavenComplete.$anonfun$organization$3:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #415 = MethodType         #212          //  (Ljava/lang/String;)Ljava/lang/String;
  #416 = InvokeDynamic      #3:#173       // #3:apply:(Ljava/lang/String;)Lscala/Function1;
  #417 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #418 = NameAndType        #177:#417     // map:(Lscala/Function1;)Ljava/lang/Object;
  #419 = InterfaceMethodref #248.#418     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #420 = Utf8               x$2
  #421 = NameAndType        #409:#410     // $anonfun$organization$2:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #422 = Methodref          #2.#421       // coursier/maven/MavenComplete.$anonfun$organization$2:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #423 = MethodHandle       6:#422        // REF_invokeStatic coursier/maven/MavenComplete.$anonfun$organization$2:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #424 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #425 = MethodType         #424          //  (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #426 = InvokeDynamic      #4:#173       // #4:apply:(Ljava/lang/String;)Lscala/Function1;
  #427 = Utf8               (Lscala/Function1;)Lscala/util/Either;
  #428 = NameAndType        #177:#427     // map:(Lscala/Function1;)Lscala/util/Either;
  #429 = Methodref          #382.#428     // scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
  #430 = Utf8               $anonfun$versions$2
  #431 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
  #432 = Utf8               prefix$2
  #433 = Utf8               x$5
  #434 = Utf8               startsWith
  #435 = Utf8               (Ljava/lang/String;)Z
  #436 = NameAndType        #434:#435     // startsWith:(Ljava/lang/String;)Z
  #437 = Methodref          #185.#436     // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #438 = Utf8               scala/Tuple2
  #439 = Class              #438          // scala/Tuple2
  #440 = Methodref          #439.#242     // scala/Tuple2._1:()Ljava/lang/Object;
  #441 = Utf8               coursier/core/Versions
  #442 = Class              #441          // coursier/core/Versions
  #443 = Utf8               available
  #444 = Utf8               ()Lscala/collection/immutable/List;
  #445 = NameAndType        #443:#444     // available:()Lscala/collection/immutable/List;
  #446 = Methodref          #442.#445     // coursier/core/Versions.available:()Lscala/collection/immutable/List;
  #447 = Utf8               $anonfun$versions$2$adapted
  #448 = NameAndType        #447:#115     // $anonfun$versions$2$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #449 = Methodref          #2.#448       // coursier/maven/MavenComplete.$anonfun$versions$2$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #450 = MethodHandle       6:#449        // REF_invokeStatic coursier/maven/MavenComplete.$anonfun$versions$2$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #451 = MethodType         #182          //  (Ljava/lang/String;)Ljava/lang/Object;
  #452 = InvokeDynamic      #5:#173       // #5:apply:(Ljava/lang/String;)Lscala/Function1;
  #453 = Utf8               scala/collection/immutable/List
  #454 = Class              #453          // scala/collection/immutable/List
  #455 = Utf8               filter
  #456 = Utf8               (Lscala/Function1;)Lscala/collection/immutable/List;
  #457 = NameAndType        #455:#456     // filter:(Lscala/Function1;)Lscala/collection/immutable/List;
  #458 = Methodref          #454.#457     // scala/collection/immutable/List.filter:(Lscala/Function1;)Lscala/collection/immutable/List;
  #459 = Utf8               v
  #460 = Utf8               Lcoursier/core/Versions;
  #461 = Utf8               (Lcoursier/maven/MavenRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)V
  #462 = Utf8               ()V
  #463 = NameAndType        #126:#462     // "<init>":()V
  #464 = Methodref          #5.#463       // java/lang/Object."<init>":()V
  #465 = Utf8               $init$
  #466 = Utf8               (Lcoursier/core/Repository$Complete;)V
  #467 = NameAndType        #465:#466     // $init$:(Lcoursier/core/Repository$Complete;)V
  #468 = InterfaceMethodref #7.#467       // coursier/core/Repository$Complete.$init$:(Lcoursier/core/Repository$Complete;)V
  #469 = Utf8               (Lscala/Product;)V
  #470 = NameAndType        #465:#469     // $init$:(Lscala/Product;)V
  #471 = InterfaceMethodref #9.#470       // scala/Product.$init$:(Lscala/Product;)V
  #472 = NameAndType        #430:#431     // $anonfun$versions$2:(Ljava/lang/String;Ljava/lang/String;)Z
  #473 = Methodref          #2.#472       // coursier/maven/MavenComplete.$anonfun$versions$2:(Ljava/lang/String;Ljava/lang/String;)Z
  #474 = Utf8               boxToBoolean
  #475 = Utf8               (Z)Ljava/lang/Boolean;
  #476 = NameAndType        #474:#475     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #477 = Methodref          #345.#476     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #478 = Utf8               $deserializeLambda$
  #479 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #480 = Utf8               scala/runtime/LambdaDeserialize
  #481 = Class              #480          // scala/runtime/LambdaDeserialize
  #482 = Utf8               bootstrap
  #483 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #484 = NameAndType        #482:#483     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #485 = Methodref          #481.#484     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #486 = MethodHandle       6:#485        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #487 = Utf8               lambdaDeserialize
  #488 = NameAndType        #487:#479     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #489 = InvokeDynamic      #6:#488       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #490 = Utf8               Signature
  #491 = Utf8               Code
  #492 = Utf8               MethodParameters
  #493 = Utf8               LineNumberTable
  #494 = Utf8               LocalVariableTable
  #495 = Utf8               StackMapTable
  #496 = Utf8               InnerClasses
  #497 = Utf8               SourceFile
  #498 = Utf8               RuntimeVisibleAnnotations
  #499 = Utf8               BootstrapMethods
  #500 = Utf8               ScalaInlineInfo
  #501 = Utf8               ScalaSig
{
  private final coursier.maven.MavenRepository repo;
    descriptor: Lcoursier/maven/MavenRepository;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>> fetch;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #34                          // Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;

  private final coursier.util.Monad<F> F;
    descriptor: Lcoursier/util/Monad;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #37                          // Lcoursier/util/Monad<TF;>;

  public static <F extends java.lang.Object> coursier.maven.MavenComplete<F> apply(coursier.maven.MavenRepository, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/maven/MavenComplete;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #46                 // Field coursier/maven/MavenComplete$.MODULE$:Lcoursier/maven/MavenComplete$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #48                 // Method coursier/maven/MavenComplete$.apply:(Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/maven/MavenComplete;
         9: areturn
    Signature: #40                          // <F:Ljava/lang/Object;>(Lcoursier/maven/MavenRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/maven/MavenComplete<TF;>;
    MethodParameters:
      Name                           Flags
      repo                           final
      fetch                          final
      F                              final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #55                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/maven/MavenComplete;
    Signature: #51                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/maven/MavenComplete;
    Signature: #59                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public F hasModule(coursier.core.Module, boolean, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: iload_2
         3: aload_3
         4: invokestatic  #71                 // InterfaceMethod coursier/core/Repository$Complete.hasModule$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/maven/MavenComplete;
            0       8     1 module   Lcoursier/core/Module;
            0       8     2 sbtAttrStub   Z
            0       8     3     F   Lcoursier/util/Monad;
    Signature: #65                          // (Lcoursier/core/Module;ZLcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      module                         final
      sbtAttrStub                    final
      F                              final

  public boolean hasModule$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod coursier/core/Repository$Complete.hasModule$default$2$:(Lcoursier/core/Repository$Complete;)Z
         4: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/maven/MavenComplete;

  public final F complete(coursier.core.Repository$Complete$Input, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #87                 // InterfaceMethod coursier/core/Repository$Complete.complete$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/maven/MavenComplete;
            0       7     1 input   Lcoursier/core/Repository$Complete$Input;
            0       7     2     F   Lcoursier/util/Monad;
    Signature: #82                          // (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      input                          final
      F                              final

  public final F complete(java.lang.String, java.lang.String, java.lang.String, coursier.util.Monad<F>);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #95                 // InterfaceMethod coursier/core/Repository$Complete.complete$:(Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/maven/MavenComplete;
            0      10     1 input   Ljava/lang/String;
            0      10     2 scalaVersion   Ljava/lang/String;
            0      10     3 scalaBinaryVersion   Ljava/lang/String;
            0      10     4     F   Lcoursier/util/Monad;
    Signature: #90                          // (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      input                          final
      scalaVersion                   final
      scalaBinaryVersion             final
      F                              final

  public coursier.maven.MavenRepository repo();
    descriptor: ()Lcoursier/maven/MavenRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #99                 // Field repo:Lcoursier/maven/MavenRepository;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/maven/MavenComplete;

  public scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>> fetch();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #103                // Field fetch:Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/maven/MavenComplete;
    Signature: #101                         // ()Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;

  public coursier.util.Monad<F> F();
    descriptor: ()Lcoursier/util/Monad;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #107                // Field F:Lcoursier/util/Monad;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/maven/MavenComplete;
    Signature: #105                         // ()Lcoursier/util/Monad<TF;>;

  public boolean sbtAttrStub();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
         4: invokevirtual #113                // Method coursier/maven/MavenRepository.sbtAttrStub:()Z
         7: ireturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/maven/MavenComplete;

  private F fromDirListing(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
         4: aload_0
         5: invokevirtual #122                // Method fetch:()Lscala/Function1;
         8: aload_0
         9: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
        12: new           #124                // class java/lang/StringBuilder
        15: dup
        16: ldc           #125                // int 6
        18: invokespecial #129                // Method java/lang/StringBuilder."<init>":(I)V
        21: aload_1
        22: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: ldc           #135                // String .links
        27: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: invokevirtual #139                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        33: iconst_1
        34: invokevirtual #143                // Method coursier/maven/MavenRepository.artifactFor:(Ljava/lang/String;Z)Lcoursier/util/Artifact;
        37: invokeinterface #148,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        42: checkcast     #150                // class coursier/util/EitherT
        45: invokevirtual #154                // Method coursier/util/EitherT.run:()Ljava/lang/Object;
        48: aload_2
        49: invokedynamic #174,  0            // InvokeDynamic #0:apply:(Ljava/lang/String;)Lscala/Function1;
        54: invokeinterface #180,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        59: areturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0  this   Lcoursier/maven/MavenComplete;
            0      60     1 dirUrl   Ljava/lang/String;
            0      60     2 prefix   Ljava/lang/String;
    Signature: #116                         // (Ljava/lang/String;Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      dirUrl                         final
      prefix                         final

  public F organization(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=13, args_size=2
         0: aload_1
         1: bipush        46
         3: invokevirtual #189                // Method java/lang/String.lastIndexOf:(I)I
         6: istore_3
         7: iload_3
         8: iconst_0
         9: if_icmpge     28
        12: new           #191                // class scala/Tuple3
        15: dup
        16: ldc           #192                // String
        18: getstatic     #197                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        21: aload_1
        22: invokespecial #200                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        25: goto          110
        28: new           #191                // class scala/Tuple3
        31: dup
        32: getstatic     #205                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        35: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        38: aload_1
        39: invokevirtual #214                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        42: iload_3
        43: iconst_1
        44: iadd
        45: invokevirtual #218                // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        48: getstatic     #223                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        51: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        54: getstatic     #205                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        57: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        60: getstatic     #205                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        63: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        66: aload_1
        67: invokevirtual #214                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        70: iload_3
        71: invokevirtual #218                // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        74: invokevirtual #214                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        77: bipush        46
        79: invokevirtual #227                // Method scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
        82: checkcast     #229                // class "[Ljava/lang/Object;"
        85: invokevirtual #233                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        88: invokevirtual #237                // Method scala/collection/ArrayOps$.toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
        91: getstatic     #205                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        94: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        97: aload_1
        98: invokevirtual #214                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       101: iload_3
       102: iconst_1
       103: iadd
       104: invokevirtual #240                // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
       107: invokespecial #200                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       110: astore        5
       112: aload         5
       114: ifnull        164
       117: aload         5
       119: invokevirtual #243                // Method scala/Tuple3._1:()Ljava/lang/Object;
       122: checkcast     #185                // class java/lang/String
       125: astore        6
       127: aload         5
       129: invokevirtual #246                // Method scala/Tuple3._2:()Ljava/lang/Object;
       132: checkcast     #248                // class scala/collection/immutable/Seq
       135: astore        7
       137: aload         5
       139: invokevirtual #251                // Method scala/Tuple3._3:()Ljava/lang/Object;
       142: checkcast     #185                // class java/lang/String
       145: astore        8
       147: new           #191                // class scala/Tuple3
       150: dup
       151: aload         6
       153: aload         7
       155: aload         8
       157: invokespecial #200                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       160: astore_2
       161: goto          177
       164: goto          167
       167: new           #253                // class scala/MatchError
       170: dup
       171: aload         5
       173: invokespecial #256                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       176: athrow
       177: aload_2
       178: astore        4
       180: aload         4
       182: invokevirtual #243                // Method scala/Tuple3._1:()Ljava/lang/Object;
       185: checkcast     #185                // class java/lang/String
       188: astore        9
       190: aload         4
       192: invokevirtual #246                // Method scala/Tuple3._2:()Ljava/lang/Object;
       195: checkcast     #248                // class scala/collection/immutable/Seq
       198: astore        10
       200: aload         4
       202: invokevirtual #251                // Method scala/Tuple3._3:()Ljava/lang/Object;
       205: checkcast     #185                // class java/lang/String
       208: astore        11
       210: aload_0
       211: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
       214: aload         10
       216: iconst_1
       217: invokevirtual #260                // Method coursier/maven/MavenRepository.urlFor:(Lscala/collection/immutable/Seq;Z)Ljava/lang/String;
       220: astore        12
       222: aload_0
       223: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
       226: aload_0
       227: aload         12
       229: aload         11
       231: invokespecial #262                // Method fromDirListing:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
       234: aload         9
       236: invokedynamic #267,  0            // InvokeDynamic #1:apply:(Ljava/lang/String;)Lscala/Function1;
       241: invokeinterface #180,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       246: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 28
          locals = [ top, int ]
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 81
          stack = [ class scala/Tuple3 ]
        frame_type = 253 /* append */
          offset_delta = 53
          locals = [ top, class scala/Tuple3 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/maven/MavenComplete, class java/lang/String, class scala/Tuple3, int, top, class scala/Tuple3, class java/lang/String, class scala/collection/immutable/Seq, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 28: 0
        line 30: 7
        line 31: 12
        line 33: 28
        line 29: 112
        line 30: 167
        line 29: 180
        line 35: 210
        line 37: 222
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          127      37     6  base   Ljava/lang/String;
          137      27     7   dir   Lscala/collection/immutable/Seq;
          147      17     8 prefix0   Ljava/lang/String;
            7     239     3   idx   I
          190      56     9  base   Ljava/lang/String;
          200      46    10   dir   Lscala/collection/immutable/Seq;
          210      36    11 prefix0   Ljava/lang/String;
          222      24    12 dirUrl   Ljava/lang/String;
            0     247     0  this   Lcoursier/maven/MavenComplete;
            0     247     1 prefix   Ljava/lang/String;
    Signature: #183                         // (Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      prefix                         final

  public F moduleName(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=3
         0: getstatic     #223                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         3: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: getstatic     #205                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         9: getstatic     #210                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: aload_1
        13: invokevirtual #214                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        16: bipush        46
        18: invokevirtual #227                // Method scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
        21: checkcast     #229                // class "[Ljava/lang/Object;"
        24: invokevirtual #233                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        27: invokevirtual #237                // Method scala/collection/ArrayOps$.toSeq$extension:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
        30: astore_3
        31: aload_0
        32: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
        35: aload_3
        36: iconst_1
        37: invokevirtual #260                // Method coursier/maven/MavenRepository.urlFor:(Lscala/collection/immutable/Seq;Z)Ljava/lang/String;
        40: astore        4
        42: aload_0
        43: aload         4
        45: aload_2
        46: invokespecial #262                // Method fromDirListing:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
        49: areturn
      LineNumberTable:
        line 41: 0
        line 42: 31
        line 44: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31      18     3   dir   Lscala/collection/immutable/Seq;
           42       7     4 dirUrl   Ljava/lang/String;
            0      50     0  this   Lcoursier/maven/MavenComplete;
            0      50     1 organization   Ljava/lang/String;
            0      50     2 prefix   Ljava/lang/String;
    Signature: #116                         // (Ljava/lang/String;Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      organization                   final
      prefix                         final

  public F versions(coursier.core.Module, java.lang.String);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
         4: aload_0
         5: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
         8: aload_1
         9: aload_0
        10: invokevirtual #122                // Method fetch:()Lscala/Function1;
        13: aload_0
        14: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
        17: invokevirtual #280                // Method coursier/maven/MavenRepository.versions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        20: invokevirtual #154                // Method coursier/util/EitherT.run:()Ljava/lang/Object;
        23: aload_2
        24: invokedynamic #285,  0            // InvokeDynamic #2:apply:(Ljava/lang/String;)Lscala/Function1;
        29: invokeinterface #180,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        34: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lcoursier/maven/MavenComplete;
            0      35     1 module   Lcoursier/core/Module;
            0      35     2 prefix   Ljava/lang/String;
    Signature: #277                         // (Lcoursier/core/Module;Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      module                         final
      prefix                         final

  public coursier.maven.MavenComplete<F> withRepo(coursier.maven.MavenRepository);
    descriptor: (Lcoursier/maven/MavenRepository;)Lcoursier/maven/MavenComplete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/maven/MavenComplete
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #122                // Method fetch:()Lscala/Function1;
         9: aload_0
        10: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
        13: invokespecial #291                // Method "<init>":(Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)V
        16: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/maven/MavenComplete;
            0      17     1  repo   Lcoursier/maven/MavenRepository;
    Signature: #288                         // (Lcoursier/maven/MavenRepository;)Lcoursier/maven/MavenComplete<TF;>;
    MethodParameters:
      Name                           Flags
      repo                           final

  public coursier.maven.MavenComplete<F> withFetch(scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>);
    descriptor: (Lscala/Function1;)Lcoursier/maven/MavenComplete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/maven/MavenComplete
         3: dup
         4: aload_0
         5: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
         8: aload_1
         9: aload_0
        10: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
        13: invokespecial #291                // Method "<init>":(Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)V
        16: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/maven/MavenComplete;
            0      17     1 fetch   Lscala/Function1;
    Signature: #294                         // (Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;)Lcoursier/maven/MavenComplete<TF;>;
    MethodParameters:
      Name                           Flags
      fetch                          final

  public coursier.maven.MavenComplete<F> withF(coursier.util.Monad<F>);
    descriptor: (Lcoursier/util/Monad;)Lcoursier/maven/MavenComplete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/maven/MavenComplete
         3: dup
         4: aload_0
         5: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
         8: aload_0
         9: invokevirtual #122                // Method fetch:()Lscala/Function1;
        12: aload_1
        13: invokespecial #291                // Method "<init>":(Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)V
        16: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/maven/MavenComplete;
            0      17     1     F   Lcoursier/util/Monad;
    Signature: #297                         // (Lcoursier/util/Monad<TF;>;)Lcoursier/maven/MavenComplete<TF;>;
    MethodParameters:
      Name                           Flags
      F                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #124                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #299                // String MavenComplete(
         7: invokespecial #302                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
        16: invokestatic  #306                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #308                // String ,
        27: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: aload_0
        33: invokevirtual #122                // Method fetch:()Lscala/Function1;
        36: invokestatic  #306                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        39: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: pop
        43: aload_1
        44: ldc_w         #308                // String ,
        47: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
        56: invokestatic  #306                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        59: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: pop
        63: aload_1
        64: ldc_w         #310                // String )
        67: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: pop
        71: aload_1
        72: invokevirtual #139                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        75: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      64     1     b   Ljava/lang/StringBuilder;
            0      76     0  this   Lcoursier/maven/MavenComplete;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/maven/MavenComplete
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/maven/MavenComplete;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     120
         5: aload_0
         6: aload_1
         7: invokevirtual #319                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          124
        13: aload_1
        14: checkcast     #2                  // class coursier/maven/MavenComplete
        17: astore_2
        18: iconst_1
        19: ifeq          116
        22: aload_0
        23: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
        26: aload_2
        27: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          116
        43: aload_3
        44: invokevirtual #321                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          116
        50: aload_0
        51: invokevirtual #122                // Method fetch:()Lscala/Function1;
        54: aload_2
        55: invokevirtual #122                // Method fetch:()Lscala/Function1;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          116
        73: aload         4
        75: invokevirtual #321                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          116
        81: aload_0
        82: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
        85: aload_2
        86: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
        89: astore        5
        91: dup
        92: ifnonnull     104
        95: pop
        96: aload         5
        98: ifnull        112
       101: goto          116
       104: aload         5
       106: invokevirtual #321                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       109: ifeq          116
       112: iconst_1
       113: goto          117
       116: iconst_0
       117: ifeq          124
       120: iconst_1
       121: goto          125
       124: iconst_0
       125: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/maven/MavenComplete, class java/lang/Object, class coursier/maven/MavenComplete, class coursier/maven/MavenRepository ]
          stack = [ class coursier/maven/MavenRepository ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/maven/MavenComplete, class java/lang/Object, class coursier/maven/MavenComplete, class coursier/maven/MavenRepository, class scala/Function1 ]
          stack = [ class scala/Function1 ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/maven/MavenComplete, class java/lang/Object, class coursier/maven/MavenComplete, class coursier/maven/MavenRepository, class scala/Function1, class coursier/util/Monad ]
          stack = [ class coursier/util/Monad ]
        frame_type = 7 /* same */
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      99     2 other   Lcoursier/maven/MavenComplete;
            0     126     0  this   Lcoursier/maven/MavenComplete;
            0     126     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #326                // String MavenComplete
         5: invokestatic  #332                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
        18: invokestatic  #332                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: aload_0
        28: invokevirtual #122                // Method fetch:()Lscala/Function1;
        31: invokestatic  #332                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        34: iadd
        35: istore_1
        36: bipush        37
        38: iload_1
        39: imul
        40: aload_0
        41: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
        44: invokestatic  #332                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        47: iadd
        48: istore_1
        49: bipush        37
        51: iload_1
        52: imul
        53: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      43     1  code   I
            0      54     0  this   Lcoursier/maven/MavenComplete;

  private scala.Tuple3<coursier.maven.MavenRepository, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>> tuple();
    descriptor: ()Lscala/Tuple3;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=1, args_size=1
         0: new           #191                // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
         8: aload_0
         9: invokevirtual #122                // Method fetch:()Lscala/Function1;
        12: aload_0
        13: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
        16: invokespecial #200                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        19: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lcoursier/maven/MavenComplete;
    Signature: #336                         // ()Lscala/Tuple3<Lcoursier/maven/MavenRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #326                // String MavenComplete
         3: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/maven/MavenComplete;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_3
         1: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/maven/MavenComplete;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 35
                       2: 42
                 default: 49
            }
        28: aload_0
        29: invokevirtual #109                // Method repo:()Lcoursier/maven/MavenRepository;
        32: goto          64
        35: aload_0
        36: invokevirtual #122                // Method fetch:()Lscala/Function1;
        39: goto          64
        42: aload_0
        43: invokevirtual #120                // Method F:()Lcoursier/util/Monad;
        46: goto          64
        49: new           #343                // class java/lang/IndexOutOfBoundsException
        52: dup
        53: iload_2
        54: invokestatic  #349                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        57: invokevirtual #350                // Method java/lang/Object.toString:()Ljava/lang/String;
        60: invokespecial #351                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        63: athrow
        64: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0  this   Lcoursier/maven/MavenComplete;
            0      65     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 34
                       2: 40
                 default: 46
            }
        28: ldc_w         #354                // String repo
        31: goto          61
        34: ldc_w         #355                // String fetch
        37: goto          61
        40: ldc_w         #356                // String F
        43: goto          61
        46: new           #343                // class java/lang/IndexOutOfBoundsException
        49: dup
        50: iload_2
        51: invokestatic  #349                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        54: invokevirtual #350                // Method java/lang/Object.toString:()Ljava/lang/String;
        57: invokespecial #351                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        60: athrow
        61: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lcoursier/maven/MavenComplete;
            0      62     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.util.Either $anonfun$fromDirListing$1(java.lang.String, scala.util.Either);
    descriptor: (Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=9, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #360                // class scala/util/Left
         6: ifeq          47
         9: aload_3
        10: checkcast     #360                // class scala/util/Left
        13: astore        4
        15: aload         4
        17: invokevirtual #363                // Method scala/util/Left.value:()Ljava/lang/Object;
        20: checkcast     #185                // class java/lang/String
        23: astore        5
        25: getstatic     #368                // Field scala/package$.MODULE$:Lscala/package$;
        28: invokevirtual #372                // Method scala/package$.Left:()Lscala/util/Left$;
        31: new           #374                // class java/lang/Exception
        34: dup
        35: aload         5
        37: invokespecial #375                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
        40: invokevirtual #380                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        43: astore_2
        44: goto          113
        47: goto          50
        50: aload_3
        51: instanceof    #384                // class scala/util/Right
        54: ifeq          101
        57: aload_3
        58: checkcast     #384                // class scala/util/Right
        61: astore        6
        63: aload         6
        65: invokevirtual #385                // Method scala/util/Right.value:()Ljava/lang/Object;
        68: checkcast     #185                // class java/lang/String
        71: astore        7
        73: getstatic     #46                 // Field coursier/maven/MavenComplete$.MODULE$:Lcoursier/maven/MavenComplete$;
        76: aload         7
        78: bipush        10
        80: aload_0
        81: invokevirtual #389                // Method coursier/maven/MavenComplete$.split0:(Ljava/lang/String;CLjava/lang/String;)Lscala/collection/immutable/Vector;
        84: astore        8
        86: getstatic     #368                // Field scala/package$.MODULE$:Lscala/package$;
        89: invokevirtual #393                // Method scala/package$.Right:()Lscala/util/Right$;
        92: aload         8
        94: invokevirtual #398                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        97: astore_2
        98: goto          113
       101: goto          104
       104: new           #253                // class scala/MatchError
       107: dup
       108: aload_3
       109: invokespecial #256                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       112: athrow
       113: aload_2
       114: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 47
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 50 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class java/lang/String, class scala/util/Either, class scala/util/Either, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 17: 0
        line 18: 2
        line 19: 25
        line 18: 47
        line 20: 50
        line 21: 73
        line 22: 86
        line 20: 101
        line 17: 104
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      22     5     e   Ljava/lang/String;
           86      11     8 entries   Lscala/collection/immutable/Vector;
           73      28     7 rawLinks   Ljava/lang/String;
            0     115     0 prefix$1   Ljava/lang/String;
            0     115     1  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      prefix$1                       final
      x0$1                           final

  public static final java.lang.String $anonfun$organization$3(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #124                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #408                // int 0
         7: invokespecial #129                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_1
        15: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        18: invokevirtual #139                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        21: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 base$1   Ljava/lang/String;
            0      22     1   x$4   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      base$1                         final
      x$4                            final

  public static final scala.collection.immutable.Seq $anonfun$organization$2(java.lang.String, scala.collection.immutable.Seq);
    descriptor: (Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokedynamic #416,  0            // InvokeDynamic #3:apply:(Ljava/lang/String;)Lscala/Function1;
         7: invokeinterface #419,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        12: checkcast     #248                // class scala/collection/immutable/Seq
        15: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 base$1   Ljava/lang/String;
            0      16     1   x$3   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      base$1                         final
      x$3                            final

  public static final scala.util.Either $anonfun$organization$1(java.lang.String, scala.util.Either);
    descriptor: (Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokedynamic #426,  0            // InvokeDynamic #4:apply:(Ljava/lang/String;)Lscala/Function1;
         7: invokevirtual #429                // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
        10: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 base$1   Ljava/lang/String;
            0      11     1   x$2   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      base$1                         final
      x$2                            final

  public static final boolean $anonfun$versions$2(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #437                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         5: ireturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 prefix$2   Ljava/lang/String;
            0       6     1   x$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      prefix$2                       final
      x$5                            final

  public static final scala.util.Either $anonfun$versions$1(java.lang.String, scala.util.Either);
    descriptor: (Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=9, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #360                // class scala/util/Left
         6: ifeq          47
         9: aload_3
        10: checkcast     #360                // class scala/util/Left
        13: astore        4
        15: aload         4
        17: invokevirtual #363                // Method scala/util/Left.value:()Ljava/lang/Object;
        20: checkcast     #185                // class java/lang/String
        23: astore        5
        25: getstatic     #368                // Field scala/package$.MODULE$:Lscala/package$;
        28: invokevirtual #372                // Method scala/package$.Left:()Lscala/util/Left$;
        31: new           #374                // class java/lang/Exception
        34: dup
        35: aload         5
        37: invokespecial #375                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
        40: invokevirtual #380                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        43: astore_2
        44: goto          130
        47: goto          50
        50: aload_3
        51: instanceof    #384                // class scala/util/Right
        54: ifeq          118
        57: aload_3
        58: checkcast     #384                // class scala/util/Right
        61: astore        6
        63: aload         6
        65: invokevirtual #385                // Method scala/util/Right.value:()Ljava/lang/Object;
        68: checkcast     #439                // class scala/Tuple2
        71: astore        7
        73: aload         7
        75: ifnull        115
        78: aload         7
        80: invokevirtual #440                // Method scala/Tuple2._1:()Ljava/lang/Object;
        83: checkcast     #442                // class coursier/core/Versions
        86: astore        8
        88: getstatic     #368                // Field scala/package$.MODULE$:Lscala/package$;
        91: invokevirtual #393                // Method scala/package$.Right:()Lscala/util/Right$;
        94: aload         8
        96: invokevirtual #446                // Method coursier/core/Versions.available:()Lscala/collection/immutable/List;
        99: aload_0
       100: invokedynamic #452,  0            // InvokeDynamic #5:apply:(Ljava/lang/String;)Lscala/Function1;
       105: invokevirtual #458                // Method scala/collection/immutable/List.filter:(Lscala/Function1;)Lscala/collection/immutable/List;
       108: invokevirtual #398                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       111: astore_2
       112: goto          130
       115: goto          121
       118: goto          121
       121: new           #253                // class scala/MatchError
       124: dup
       125: aload_3
       126: invokespecial #256                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       129: athrow
       130: aload_2
       131: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 47
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class java/lang/String, class scala/util/Either, top, class scala/util/Either, top, top, class scala/util/Right, class scala/Tuple2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/lang/String, class scala/util/Either, top, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class java/lang/String, class scala/util/Either, class scala/util/Either, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 47: 0
        line 48: 2
        line 49: 25
        line 48: 47
        line 50: 50
        line 51: 88
        line 50: 115
        line 47: 121
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      22     5     e   Ljava/lang/String;
           88      27     8     v   Lcoursier/core/Versions;
            0     132     0 prefix$2   Ljava/lang/String;
            0     132     1  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      prefix$2                       final
      x0$1                           final

  public coursier.maven.MavenComplete(coursier.maven.MavenRepository, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/maven/MavenRepository;Lscala/Function1;Lcoursier/util/Monad;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #99                 // Field repo:Lcoursier/maven/MavenRepository;
         5: aload_0
         6: aload_2
         7: putfield      #103                // Field fetch:Lscala/Function1;
        10: aload_0
        11: aload_3
        12: putfield      #107                // Field F:Lcoursier/util/Monad;
        15: aload_0
        16: invokespecial #464                // Method java/lang/Object."<init>":()V
        19: aload_0
        20: invokestatic  #468                // InterfaceMethod coursier/core/Repository$Complete.$init$:(Lcoursier/core/Repository$Complete;)V
        23: aload_0
        24: invokestatic  #471                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        27: return
      LineNumberTable:
        line 7: 0
        line 11: 15
        line 7: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/maven/MavenComplete;
            0      28     1  repo   Lcoursier/maven/MavenRepository;
            0      28     2 fetch   Lscala/Function1;
            0      28     3     F   Lcoursier/util/Monad;
    Signature: #461                         // (Lcoursier/maven/MavenRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)V
    MethodParameters:
      Name                           Flags
      repo                           final
      fetch                          final
      F                              final

  public static final java.lang.Object $anonfun$versions$2$adapted(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #473                // Method $anonfun$versions$2:(Ljava/lang/String;Ljava/lang/String;)Z
         5: invokestatic  #477                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 prefix$2   Ljava/lang/String;
            0       9     1   x$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      prefix$2                       final
      x$5                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #489,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #18= #7 of #17;           // Complete=class coursier/core/Repository$Complete of class coursier/core/Repository
  public static #21= #20 of #17;          // =class coursier/core/Repository$Complete$ of class coursier/core/Repository
  public static abstract #24= #23 of #20; // Input=class coursier/core/Repository$Complete$Input of class coursier/core/Repository$Complete$
  public static final #29= #26 of #28;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // <F:Ljava/lang/Object;>Ljava/lang/Object;Lcoursier/core/Repository$Complete<TF;>;Lscala/Product;Ljava/io/Serializable;
SourceFile: "MavenComplete.scala"
RuntimeVisibleAnnotations:
  0: #13(#14=s#15)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005-h\u0001B\u0010!\u0005\u0015B\u0001\u0002\u0016\u0001\u0003\u0006\u0004%\t!\u0016\u0005\t5\u0002\u0011\t\u0011)A\u0005-\"A1\f\u0001BC\u0002\u0013\u0005A\f\u0003\u0005a\u0001\t\u0005\t\u0015!\u0003^\u0011!\t\u0007A!b\u0001\n\u0003\u0011\u0007\u0002C5\u0001\u0005\u0003\u0005\u000b\u0011B2\t\u000b)\u0004A\u0011A6\t\u000bA\u0004A\u0011I9\t\u000bU\u0004A\u0011\u0002<\t\u000f\u0005m\u0001\u0001\"\u0001\u0002\u001e!9\u0011\u0011\u0005\u0001\u0005\u0002\u0005\r\u0002bBA\u0018\u0001\u0011\u0005\u0011\u0011\u0007\u0005\b\u0003\u007f\u0001A\u0011AA!\u0011\u001d\t)\u0005\u0001C\u0001\u0003\u000fBq!a\u0013\u0001\t\u0003\ti\u0005C\u0004\u0002R\u0001!\t%a\u0015\t\u000f\u0005\r\u0004\u0001\"\u0011\u0002f!9\u00111\u000e\u0001\u0005B\u00055\u0004bBA9\u0001\u0011\u0005\u00131\u000f\u0005\b\u0003w\u0002A\u0011BA?\u0011\u001d\t)\t\u0001C!\u0003\u000fCq!!#\u0001\t\u0003\nY\tC\u0004\u0002\u000e\u0002!\t%a$\t\u000f\u0005U\u0005\u0001\"\u0011\u0002\u0018\u001e9\u00111\u0014\u0011\t\u0002\u0005ueAB\u0010!\u0011\u0003\ty\n\u0003\u0004k5\u0011\u0005\u00111\u0016\u0005\t\u0003[SB\u0011\u0001\u0012\u00020\"9\u0011q\u0019\u000e\u0005\u0002\u0005%\u0007\"CAq5\u0005\u0005I\u0011BAr\u00055i\u0015M^3o\u0007>l\u0007\u000f\\3uK*\u0011\u0011EI\u0001\u0006[\u00064XM\u001c\u0006\u0002G\u0005A1m\\;sg&,\'o\u0001\u0001\u0016\u0005\u0019J4#\u0002\u0001([\u0015C\u0005C\u0001\u0015,\u001b\u0005I#\"\u0001\u0016\u0002\u000bM\u001c\u0017\r\\1\n\u00051J#AB!osJ+g\rE\u0002/i]r!a\f\u001a\u000e\u0003AR!!\r\u0012\u0002\t\r|\'/Z\u0005\u0003gA\n!BU3q_NLGo\u001c:z\u0013\t)dG\u0001\u0005D_6\u0004H.\u001a;f\u0015\t\u0019\u0004\u0007\u0005\u00029s1\u0001A!\u0002\u001e\u0001\u0005\u0004Y$!\u0001$\u0016\u0005q\u001a\u0015CA\u001fA!\tAc(\u0003\u0002@S\t9aj\u001c;iS:<\u0007C\u0001\u0015B\u0013\t\u0011\u0015FA\u0002B]f$Q\u0001R\u001dC\u0002q\u0012\u0011a\u0018\t\u0003Q\u0019K!aR\u0015\u0003\u000fA\u0013x\u000eZ;diB\u0011\u0011*\u0015\b\u0003\u0015>s!a\u0013(\u000e\u00031S!!\u0014\u0013\u0002\rq\u0012xn\u001c;?\u0013\u0005Q\u0013B\u0001)*\u0003\u001d\u0001\u0018mY6bO\u0016L!AU*\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005AK\u0013\u0001\u0002:fa>,\u0012A\u0016\t\u0003/bk\u0011\u0001I\u0005\u00033\u0002\u0012q\"T1wK:\u0014V\r]8tSR|\'/_\u0001\u0006e\u0016\u0004x\u000eI\u0001\u0006M\u0016$8\r[\u000b\u0002;B\u0019aFX\u001c\n\u0005}3$!\u0002$fi\u000eD\u0017A\u00024fi\u000eD\u0007%A\u0001G+\u0005\u0019\u0007c\u00013ho5\tQM\u0003\u0002gE\u0005!Q\u000f^5m\u0013\tAWMA\u0003N_:\fG-\u0001\u0002GA\u00051A(\u001b8jiz\"B\u0001\\7o_B\u0019q\u000bA\u001c\t\u000bQ;\u0001\u0019\u0001,\t\u000bm;\u0001\u0019A/\t\u000b\u0005<\u0001\u0019A2\u0002\u0017M\u0014G/\u0011;ueN#XOY\u000b\u0002eB\u0011\u0001f]\u0005\u0003i&\u0012qAQ8pY\u0016\fg.\u0001\bge>lG)\u001b:MSN$\u0018N\\4\u0015\u000b]\f\u0019\"a\u0006\u0011\u0007aJ\u0004\u0010\u0005\u0003Jsnt\u0018B\u0001>T\u0005\u0019)\u0015\u000e\u001e5feB\u0011\u0011\n`\u0005\u0003{N\u0013\u0011\u0002\u00165s_^\f\'\r\\3\u0011\t%{\u00181A\u0005\u0004\u0003\u0003\u0019&aA*fcB!\u0011QAA\u0007\u001d\u0011\t9!!\u0003\u0011\u0005-K\u0013bAA\u0006S\u00051\u0001K]3eK\u001aLA!a\u0004\u0002\u0012\t11\u000b\u001e:j]\u001eT1!a\u0003*\u0011\u001d\t)\"\u0003a\u0001\u0003\u0007\ta\u0001Z5s+Jd\u0007bBA\r\u0013\u0001\u0007\u00111A\u0001\u0007aJ,g-\u001b=\u0002\u0019=\u0014x-\u00198ju\u0006$\u0018n\u001c8\u0015\u0007]\fy\u0002C\u0004\u0002\u001a)\u0001\r!a\u0001\u0002\u00155|G-\u001e7f\u001d\u0006lW\rF\u0003x\u0003K\ti\u0003C\u0004\u0002\u001c-\u0001\r!a\n\u0011\u0007=\nI#C\u0002\u0002,A\u0012Ab\u0014:hC:L\'0\u0019;j_:Dq!!\u0007\f\u0001\u0004\t\u0019!\u0001\u0005wKJ\u001c\u0018n\u001c8t)\u00159\u00181GA\u001f\u0011\u001d\t)\u0004\u0004a\u0001\u0003o\ta!\\8ek2,\u0007cA\u0018\u0002:%\u0019\u00111\b\u0019\u0003\r5{G-\u001e7f\u0011\u001d\tI\u0002\u0004a\u0001\u0003\u0007\t\u0001b^5uQJ+\u0007o\u001c\u000b\u0004Y\u0006\r\u0003\"\u0002+\u000e\u0001\u00041\u0016!C<ji\"4U\r^2i)\ra\u0017\u0011\n\u0005\u00067:\u0001\r!X\u0001\u0006o&$\bN\u0012\u000b\u0004Y\u0006=\u0003\"B1\u0010\u0001\u0004\u0019\u0017\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u0005U\u0003\u0003BA,\u0003Cj!!!\u0017\u000b\t\u0005m\u0013QL\u0001\u0005Y\u0006twM\u0003\u0002\u0002`\u0005!!.\u0019<b\u0013\u0011\ty!!\u0017\u0002\u0011\r\fg.R9vC2$2A]A4\u0011\u0019\tI\'\u0005a\u0001\u0001\u0006\u0019qN\u00196\u0002\r\u0015\fX/\u00197t)\r\u0011\u0018q\u000e\u0005\u0007\u0003S\u0012\u0002\u0019\u0001!\u0002\u0011!\f7\u000f[\"pI\u0016$\"!!\u001e\u0011\u0007!\n9(C\u0002\u0002z%\u00121!\u00138u\u0003\u0015!X\u000f\u001d7f+\t\ty\b\u0005\u0004)\u0003\u00033VlY\u0005\u0004\u0003\u0007K#A\u0002+va2,7\'A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0003\u0003+\nA\u0002\u001d:pIV\u001cG/\u0011:jif,\"!!\u001e\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR\u0019\u0001)!%\t\u000f\u0005Mu\u00031\u0001\u0002v\u0005\ta.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,G\u0003BA+\u00033Cq!a%\u0019\u0001\u0004\t)(A\u0007NCZ,gnQ8na2,G/\u001a\t\u0003/j\u0019BAG\u0014\u0002\"B!\u00111UAU\u001b\t\t)K\u0003\u0003\u0002(\u0006u\u0013AA5p\u0013\r\u0011\u0016Q\u0015\u000b\u0003\u0003;\u000baa\u001d9mSR\u0004D\u0003CAY\u0003o\u000bY,!2\u0011\u000b%\u000b\u0019,a\u0001\n\u0007\u0005U6K\u0001\u0004WK\u000e$xN\u001d\u0005\b\u0003sc\u0002\u0019AA\u0002\u0003\u0005\u0019\bbBA_9\u0001\u0007\u0011qX\u0001\u0004g\u0016\u0004\bc\u0001\u0015\u0002B&\u0019\u00111Y\u0015\u0003\t\rC\u0017M\u001d\u0005\b\u00033a\u0002\u0019AA\u0002\u0003\u0015\t\u0007\u000f\u001d7z+\u0011\tY-!5\u0015\u0011\u00055\u0017q[Am\u0003;\u0004Ba\u0016\u0001\u0002PB\u0019\u0001(!5\u0005\rij\"\u0019AAj+\ra\u0014Q\u001b\u0003\u0007\t\u0006E\'\u0019\u0001\u001f\t\u000bQk\u0002\u0019\u0001,\t\rmk\u0002\u0019AAn!\u0011qc,a4\t\r\u0005l\u0002\u0019AAp!\u0011!w-a4\u0002\u0019]\u0014\u0018\u000e^3SKBd\u0017mY3\u0015\u0005\u0005\u0015\b\u0003BA,\u0003OLA!!;\u0002Z\t1qJ\u00196fGR\u0004"
    )
BootstrapMethods:
  0: #171 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #155 (Ljava/lang/Object;)Ljava/lang/Object;
      #160 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$fromDirListing$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
      #162 (Lscala/util/Either;)Lscala/util/Either;
      #163 5
      #164 1
      #162 (Lscala/util/Either;)Lscala/util/Either;
  1: #171 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #155 (Ljava/lang/Object;)Ljava/lang/Object;
      #266 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$organization$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
      #162 (Lscala/util/Either;)Lscala/util/Either;
      #163 5
      #164 1
      #162 (Lscala/util/Either;)Lscala/util/Either;
  2: #171 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #155 (Ljava/lang/Object;)Ljava/lang/Object;
      #284 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$versions$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
      #162 (Lscala/util/Either;)Lscala/util/Either;
      #163 5
      #164 1
      #162 (Lscala/util/Either;)Lscala/util/Either;
  3: #171 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #155 (Ljava/lang/Object;)Ljava/lang/Object;
      #414 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$organization$3:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      #415 (Ljava/lang/String;)Ljava/lang/String;
      #163 5
      #164 1
      #415 (Ljava/lang/String;)Ljava/lang/String;
  4: #171 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #155 (Ljava/lang/Object;)Ljava/lang/Object;
      #423 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$organization$2:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #425 (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #163 5
      #164 1
      #425 (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  5: #171 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #155 (Ljava/lang/Object;)Ljava/lang/Object;
      #450 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$versions$2$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      #451 (Ljava/lang/String;)Ljava/lang/Object;
      #163 5
      #164 1
      #451 (Ljava/lang/String;)Ljava/lang/Object;
  6: #486 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #160 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$fromDirListing$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
      #266 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$organization$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
      #423 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$organization$2:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #414 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$organization$3:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      #284 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$versions$1:(Ljava/lang/String;Lscala/util/Either;)Lscala/util/Either;
      #450 REF_invokeStatic coursier/maven/MavenComplete.$anonfun$versions$2$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xAE (unknown attribute)
   01 01 00 22 00 9C 00 9D 01 01 08 00 9D 01 01 9A
   01 9B 01 01 95 01 96 01 01 1A 00 9D 01 01 AF 01
   B0 01 01 C0 00 73 01 00 7E 01 22 01 00 23 00 68
   01 01 3A 01 3B 01 00 50 00 51 01 00 50 00 59 01
   01 3E 01 3B 01 00 20 00 64 01 00 72 00 73 01 00
   3F 00 40 01 00 4A 00 4B 01 01 44 01 45 01 01 13
   00 73 01 00 B5 00 B6 01 01 53 01 45 01 01 54 01
   55 01 01 61 01 62 01 00 3A 00 32 01 00 31 00 32
   01 01 52 00 89 01 00 1E 00 61 01 00 43 00 4B 01
   00 88 00 89 01 01 4F 01 50 01 01 14 01 15 01 01
   28 01 29 01 01 25 01 26 01 01 1F 01 20 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
