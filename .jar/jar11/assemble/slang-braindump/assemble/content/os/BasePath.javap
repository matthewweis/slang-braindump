Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/BasePath.class
  Last modified May 29, 2022; size 2392 bytes
  SHA-256 checksum 916a24958dd8bac87d9e9245842425027b54b60a17cc2804a3888a943a3f0578
  Compiled from "Path.scala"
public interface os.BasePath
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // os/BasePath
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 13, attributes: 4
Constant pool:
   #1 = Utf8               os/BasePath
   #2 = Class              #1             // os/BasePath
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               Path.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005}4q!\u0005\n\u0011\u0002\u0007\u0005Q\u0003C\u0003\u001d\u0001\u0011\u0005Q\u0004B\u0003\"\u0001\t\u0005!\u0005C\u0003)\u0001\u0019\u0005\u0011\u0006C\u00032\u0001\u0019\u0005!\u0007C\u00039\u0001\u0011\u0005\u0011\bC\u0003?\u0001\u0019\u0005q\bC\u0003E\u0001\u0019\u0005Q\tC\u0003H\u0001\u0019\u0005\u0001\nC\u0003U\u0001\u0019\u0005\u0001\nC\u0003V\u0001\u0019\u0005\u0001\nC\u0003W\u0001\u0019\u0005qkB\u0003b%!\u0005!MB\u0003\u0012%!\u00051\rC\u0003e\u001b\u0011\u0005Q\rC\u0003g\u001b\u0011\u0005q\rC\u0003k\u001b\u0011\u00051N\u0001\u0005CCN,\u0007+\u0019;i\u0015\u0005\u0019\u0012AA8t\u0007\u0001\u0019\"\u0001\u0001\f\u0011\u0005]QR\"\u0001\r\u000b\u0003e\tQa]2bY\u0006L!a\u0007\r\u0003\r\u0005s\u0017PU3g\u0003\u0019!\u0013N\\5uIQ\ta\u0004\u0005\u0002\u0018?%\u0011\u0001\u0005\u0007\u0002\u0005+:LGO\u0001\u0005UQ&\u001cH+\u001f9f#\t\u0019c\u0005\u0005\u0002\u0018I%\u0011Q\u0005\u0007\u0002\b\u001d>$\b.\u001b8h!\t9\u0003!D\u0001\u0013\u0003\u0011!C-\u001b<\u0015\u0005)b\u0003CA\u0016\u0003\u001b\u0005\u0001\u0001\"B\u0017\u0004\u0001\u0004q\u0013!B2ik:\\\u0007CA\u00140\u0013\t\u0001$CA\u0005QCRD7\t[;oW\u0006Q!/\u001a7bi&4X\rV8\u0015\u0005M2\u0004CA\u00145\u0013\t)$CA\u0004SK2\u0004\u0016\r\u001e5\t\u000b]\"\u0001\u0019\u0001\u0016\u0002\rQ\f\'oZ3u\u00035\u0019XO\u0019*fY\u0006$\u0018N^3U_R\u0011!(\u0010\t\u0003OmJ!\u0001\u0010\n\u0003\u000fM+(\rU1uQ\")q\'\u0002a\u0001U\u0005Q1\u000f^1siN<\u0016\u000e\u001e5\u0015\u0005\u0001\u001b\u0005CA\fB\u0013\t\u0011\u0005DA\u0004C_>dW-\u00198\t\u000b]2\u0001\u0019\u0001\u0016\u0002\u0011\u0015tGm],ji\"$\"\u0001\u0011$\t\u000b]:\u0001\u0019A\u001a\u0002\t1\f7\u000f^\u000b\u0002\u0013B\u0011!*\u0015\b\u0003\u0017>\u0003\"\u0001\u0014\r\u000e\u00035S!A\u0014\u000b\u0002\rq\u0012xn\u001c;?\u0013\t\u0001\u0006$\u0001\u0004Qe\u0016$WMZ\u0005\u0003%N\u0013aa\u0015;sS:<\'B\u0001)\u0019\u0003\r)\u0007\u0010^\u0001\tE\u0006\u001cXMT1nK\u0006A1/Z4nK:$8/F\u0001Y!\rIf,\u0013\b\u00035rs!\u0001T.\n\u0003eI!!\u0018\r\u0002\u000fA\f7m[1hK&\u0011q\f\u0019\u0002\u0010)J\fg/\u001a:tC\ndWm\u00148dK*\u0011Q\fG\u0001\t\u0005\u0006\u001cX\rU1uQB\u0011q%D\n\u0003\u001bY\ta\u0001P5oSRtD#\u00012\u0002\u0019\rDWmY6TK\u001elWM\u001c;\u0015\u0005yA\u0007\"B5\u0010\u0001\u0004I\u0015!A:\u0002\u0011\rDWO\\6jMf$\"\u0001\u001c<\u0011\u0007]iw.\u0003\u0002o1\t)\u0011I\u001d:bsB\u0011\u0001/^\u0007\u0002c*\u0011!o]\u0001\u0005Y\u0006twMC\u0001u\u0003\u0011Q\u0017M^1\n\u0005I\u000b\b\"B5\u0011\u0001\u00049\bC\u0001=~\u001b\u0005I(B\u0001>|\u0003\u00111\u0017\u000e\\3\u000b\u0005q\u001c\u0018a\u00018j_&\u0011a0\u001f\u0002\u0005!\u0006$\b\u000e
   #9 = Utf8               chunkify
  #10 = Utf8               (Ljava/nio/file/Path;)[Ljava/lang/String;
  #11 = Utf8               s
  #12 = Utf8               os/BasePath$
  #13 = Class              #12            // os/BasePath$
  #14 = Utf8               MODULE$
  #15 = Utf8               Los/BasePath$;
  #16 = NameAndType        #14:#15        // MODULE$:Los/BasePath$;
  #17 = Fieldref           #13.#16        // os/BasePath$.MODULE$:Los/BasePath$;
  #18 = NameAndType        #9:#10         // chunkify:(Ljava/nio/file/Path;)[Ljava/lang/String;
  #19 = Methodref          #13.#18        // os/BasePath$.chunkify:(Ljava/nio/file/Path;)[Ljava/lang/String;
  #20 = Utf8               checkSegment
  #21 = Utf8               (Ljava/lang/String;)V
  #22 = NameAndType        #20:#21        // checkSegment:(Ljava/lang/String;)V
  #23 = Methodref          #13.#22        // os/BasePath$.checkSegment:(Ljava/lang/String;)V
  #24 = Utf8               $div
  #25 = Utf8               (Los/PathChunk;)Los/BasePath;
  #26 = Utf8               chunk
  #27 = Utf8               relativeTo
  #28 = Utf8               (Los/BasePath;)Los/RelPath;
  #29 = Utf8               target
  #30 = Utf8               subRelativeTo$
  #31 = Utf8               (Los/BasePath;Los/BasePath;)Los/SubPath;
  #32 = Utf8               $this
  #33 = Utf8               subRelativeTo
  #34 = Utf8               (Los/BasePath;)Los/SubPath;
  #35 = NameAndType        #33:#34        // subRelativeTo:(Los/BasePath;)Los/SubPath;
  #36 = InterfaceMethodref #2.#35         // os/BasePath.subRelativeTo:(Los/BasePath;)Los/SubPath;
  #37 = Utf8               Los/BasePath;
  #38 = NameAndType        #27:#28        // relativeTo:(Los/BasePath;)Los/RelPath;
  #39 = InterfaceMethodref #2.#38         // os/BasePath.relativeTo:(Los/BasePath;)Los/RelPath;
  #40 = Utf8               os/RelPath
  #41 = Class              #40            // os/RelPath
  #42 = Utf8               asSubPath
  #43 = Utf8               ()Los/SubPath;
  #44 = NameAndType        #42:#43        // asSubPath:()Los/SubPath;
  #45 = Methodref          #41.#44        // os/RelPath.asSubPath:()Los/SubPath;
  #46 = Utf8               this
  #47 = Utf8               startsWith
  #48 = Utf8               (Los/BasePath;)Z
  #49 = Utf8               endsWith
  #50 = Utf8               (Los/RelPath;)Z
  #51 = Utf8               last
  #52 = Utf8               ()Ljava/lang/String;
  #53 = Utf8               ext
  #54 = Utf8               baseName
  #55 = Utf8               segments
  #56 = Utf8               ()Lscala/collection/IterableOnce;
  #57 = Utf8               ()Lscala/collection/IterableOnce<Ljava/lang/String;>;
  #58 = Utf8               $init$
  #59 = Utf8               (Los/BasePath;)V
  #60 = Utf8               Code
  #61 = Utf8               MethodParameters
  #62 = Utf8               LineNumberTable
  #63 = Utf8               LocalVariableTable
  #64 = Utf8               Signature
  #65 = Utf8               SourceFile
  #66 = Utf8               RuntimeVisibleAnnotations
  #67 = Utf8               ScalaInlineInfo
  #68 = Utf8               ScalaSig
{
  public static java.lang.String[] chunkify(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)[Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #17                 // Field os/BasePath$.MODULE$:Los/BasePath$;
         3: aload_0
         4: invokevirtual #19                 // Method os/BasePath$.chunkify:(Ljava/nio/file/Path;)[Ljava/lang/String;
         7: areturn
    MethodParameters:
      Name                           Flags
      s                              final

  public static void checkSegment(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #17                 // Field os/BasePath$.MODULE$:Los/BasePath$;
         3: aload_0
         4: invokevirtual #23                 // Method os/BasePath$.checkSegment:(Ljava/lang/String;)V
         7: return
    MethodParameters:
      Name                           Flags
      s                              final

  public abstract os.BasePath $div(os.PathChunk);
    descriptor: (Los/PathChunk;)Los/BasePath;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      chunk                          final

  public abstract os.RelPath relativeTo(os.BasePath);
    descriptor: (Los/BasePath;)Los/RelPath;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      target                         final

  public static os.SubPath subRelativeTo$(os.BasePath, os.BasePath);
    descriptor: (Los/BasePath;Los/BasePath;)Los/SubPath;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #36                 // InterfaceMethod subRelativeTo:(Los/BasePath;)Los/SubPath;
         5: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Los/BasePath;
            0       6     1 target   Los/BasePath;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      target                         final

  public default os.SubPath subRelativeTo(os.BasePath);
    descriptor: (Los/BasePath;)Los/SubPath;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #39,  2           // InterfaceMethod relativeTo:(Los/BasePath;)Los/RelPath;
         7: invokevirtual #45                 // Method os/RelPath.asSubPath:()Los/SubPath;
        10: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Los/BasePath;
            0      11     1 target   Los/BasePath;
    MethodParameters:
      Name                           Flags
      target                         final

  public abstract boolean startsWith(os.BasePath);
    descriptor: (Los/BasePath;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      target                         final

  public abstract boolean endsWith(os.RelPath);
    descriptor: (Los/RelPath;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      target                         final

  public abstract java.lang.String last();
    descriptor: ()Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract java.lang.String ext();
    descriptor: ()Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract java.lang.String baseName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract scala.collection.IterableOnce<java.lang.String> segments();
    descriptor: ()Lscala/collection/IterableOnce;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #57                          // ()Lscala/collection/IterableOnce<Ljava/lang/String;>;

  public static void $init$(os.BasePath);
    descriptor: (Los/BasePath;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Los/BasePath;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
SourceFile: "Path.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005}4q!\u0005\n\u0011\u0002\u0007\u0005Q\u0003C\u0003\u001d\u0001\u0011\u0005Q\u0004B\u0003\"\u0001\t\u0005!\u0005C\u0003)\u0001\u0019\u0005\u0011\u0006C\u00032\u0001\u0019\u0005!\u0007C\u00039\u0001\u0011\u0005\u0011\bC\u0003?\u0001\u0019\u0005q\bC\u0003E\u0001\u0019\u0005Q\tC\u0003H\u0001\u0019\u0005\u0001\nC\u0003U\u0001\u0019\u0005\u0001\nC\u0003V\u0001\u0019\u0005\u0001\nC\u0003W\u0001\u0019\u0005qkB\u0003b%!\u0005!MB\u0003\u0012%!\u00051\rC\u0003e\u001b\u0011\u0005Q\rC\u0003g\u001b\u0011\u0005q\rC\u0003k\u001b\u0011\u00051N\u0001\u0005CCN,\u0007+\u0019;i\u0015\u0005\u0019\u0012AA8t\u0007\u0001\u0019\"\u0001\u0001\f\u0011\u0005]QR\"\u0001\r\u000b\u0003e\tQa]2bY\u0006L!a\u0007\r\u0003\r\u0005s\u0017PU3g\u0003\u0019!\u0013N\\5uIQ\ta\u0004\u0005\u0002\u0018?%\u0011\u0001\u0005\u0007\u0002\u0005+:LGO\u0001\u0005UQ&\u001cH+\u001f9f#\t\u0019c\u0005\u0005\u0002\u0018I%\u0011Q\u0005\u0007\u0002\b\u001d>$\b.\u001b8h!\t9\u0003!D\u0001\u0013\u0003\u0011!C-\u001b<\u0015\u0005)b\u0003CA\u0016\u0003\u001b\u0005\u0001\u0001\"B\u0017\u0004\u0001\u0004q\u0013!B2ik:\\\u0007CA\u00140\u0013\t\u0001$CA\u0005QCRD7\t[;oW\u0006Q!/\u001a7bi&4X\rV8\u0015\u0005M2\u0004CA\u00145\u0013\t)$CA\u0004SK2\u0004\u0016\r\u001e5\t\u000b]\"\u0001\u0019\u0001\u0016\u0002\rQ\f\'oZ3u\u00035\u0019XO\u0019*fY\u0006$\u0018N^3U_R\u0011!(\u0010\t\u0003OmJ!\u0001\u0010\n\u0003\u000fM+(\rU1uQ\")q\'\u0002a\u0001U\u0005Q1\u000f^1siN<\u0016\u000e\u001e5\u0015\u0005\u0001\u001b\u0005CA\fB\u0013\t\u0011\u0005DA\u0004C_>dW-\u00198\t\u000b]2\u0001\u0019\u0001\u0016\u0002\u0011\u0015tGm],ji\"$\"\u0001\u0011$\t\u000b]:\u0001\u0019A\u001a\u0002\t1\f7\u000f^\u000b\u0002\u0013B\u0011!*\u0015\b\u0003\u0017>\u0003\"\u0001\u0014\r\u000e\u00035S!A\u0014\u000b\u0002\rq\u0012xn\u001c;?\u0013\t\u0001\u0006$\u0001\u0004Qe\u0016$WMZ\u0005\u0003%N\u0013aa\u0015;sS:<\'B\u0001)\u0019\u0003\r)\u0007\u0010^\u0001\tE\u0006\u001cXMT1nK\u0006A1/Z4nK:$8/F\u0001Y!\rIf,\u0013\b\u00035rs!\u0001T.\n\u0003eI!!\u0018\r\u0002\u000fA\f7m[1hK&\u0011q\f\u0019\u0002\u0010)J\fg/\u001a:tC\ndWm\u00148dK*\u0011Q\fG\u0001\t\u0005\u0006\u001cX\rU1uQB\u0011q%D\n\u0003\u001bY\ta\u0001P5oSRtD#\u00012\u0002\u0019\rDWmY6TK\u001elWM\u001c;\u0015\u0005yA\u0007\"B5\u0010\u0001\u0004I\u0015!A:\u0002\u0011\rDWO\\6jMf$\"\u0001\u001c<\u0011\u0007]iw.\u0003\u0002o1\t)\u0011I\u001d:bsB\u0011\u0001/^\u0007\u0002c*\u0011!o]\u0001\u0005Y\u0006twMC\u0001u\u0003\u0011Q\u0017M^1\n\u0005I\u000b\b\"B5\u0011\u0001\u00049\bC\u0001=~\u001b\u0005I(B\u0001>|\u0003\u00111\u0017\u000e\\3\u000b\u0005q\u001c\u0018a\u00018j_&\u0011a0\u001f\u0002\u0005!\u0006$\b\u000e"
    )
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 00 00 0B 00 18 00 19 00 00 3A 00 3B 01 00 36
   00 34 00 00 31 00 32 00 00 35 00 34 00 00 33 00
   34 00 00 1B 00 1C 00 00 37 00 38 00 00 2F 00 30
   00 00 21 00 22 00 00 1E 00 1F 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
