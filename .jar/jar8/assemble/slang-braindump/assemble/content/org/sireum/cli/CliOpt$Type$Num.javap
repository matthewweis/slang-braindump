Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/cli/CliOpt$Type$Num.class
  Last modified May 29, 2022; size 9033 bytes
  SHA-256 checksum 63dbee1b8af642b20900d967ff837114d07e19f7fc2edd1044fdf4d6f749b127
  Compiled from "CliOpt.scala"
public final class org.sireum.cli.CliOpt$Type$Num implements org.sireum.cli.CliOpt$Type
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/cli/CliOpt$Type$Num
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 10, methods: 32, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/cli/CliOpt$Type$Num
    #2 = Class              #1            // org/sireum/cli/CliOpt$Type$Num
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/cli/CliOpt$Type
    #6 = Class              #5            // org/sireum/cli/CliOpt$Type
    #7 = Utf8               CliOpt.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/cli/CliOpt
   #14 = Class              #13           // org/sireum/cli/CliOpt
   #15 = Utf8               Type
   #16 = Utf8               org/sireum/cli/CliOpt$Type$
   #17 = Class              #16           // org/sireum/cli/CliOpt$Type$
   #18 = Utf8               Type$
   #19 = Utf8               Num
   #20 = Utf8               hashCode
   #21 = Utf8               I
   #22 = Utf8               $content
   #23 = Utf8               Lscala/collection/immutable/Seq;
   #24 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #25 = Utf8               _bsep
   #26 = Utf8               Z
   #27 = Utf8               _sep
   #28 = Utf8               _default
   #29 = Utf8               Lorg/sireum/Z;
   #30 = Utf8               _bmin
   #31 = Utf8               _min
   #32 = Utf8               _bmax
   #33 = Utf8               _max
   #34 = Utf8               bitmap$0
   #35 = Utf8               B
   #36 = Utf8               hash
   #37 = Utf8               ()Lorg/sireum/Z;
   #38 = Utf8               org/sireum/DatatypeSig
   #39 = Class              #38           // org/sireum/DatatypeSig
   #40 = Utf8               hash$
   #41 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #42 = NameAndType        #40:#41       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #43 = InterfaceMethodref #39.#42       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #44 = Utf8               this
   #45 = Utf8               Lorg/sireum/cli/CliOpt$Type$Num;
   #46 = Utf8               $cannotMixImmutableAndMutable
   #47 = Utf8               ()Lscala/runtime/Nothing$;
   #48 = Utf8               org/sireum/Immutable
   #49 = Class              #48           // org/sireum/Immutable
   #50 = Utf8               $cannotMixImmutableAndMutable$
   #51 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #52 = NameAndType        #50:#51       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #53 = InterfaceMethodref #49.#52       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #54 = Utf8               $hasEquals
   #55 = Utf8               ()Z
   #56 = Utf8               $hasEquals$
   #57 = Utf8               (Lorg/sireum/Immutable;)Z
   #58 = NameAndType        #56:#57       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #59 = InterfaceMethodref #49.#58       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #60 = Utf8               $hasString
   #61 = Utf8               $hasString$
   #62 = NameAndType        #61:#57       // $hasString$:(Lorg/sireum/Immutable;)Z
   #63 = InterfaceMethodref #49.#62       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #64 = Utf8               $clone
   #65 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #66 = Utf8               org/sireum/$internal/ImmutableMarker
   #67 = Class              #66           // org/sireum/$internal/ImmutableMarker
   #68 = Utf8               $clone$
   #69 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #70 = NameAndType        #68:#69       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #71 = InterfaceMethodref #67.#70       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #72 = Utf8               sep
   #73 = Utf8               ()Lorg/sireum/Option;
   #74 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/C;>;
   #75 = NameAndType        #25:#26       // _bsep:Z
   #76 = Fieldref           #2.#75        // org/sireum/cli/CliOpt$Type$Num._bsep:Z
   #77 = Utf8               org/sireum/None$
   #78 = Class              #77           // org/sireum/None$
   #79 = Utf8               MODULE$
   #80 = Utf8               Lorg/sireum/None$;
   #81 = NameAndType        #79:#80       // MODULE$:Lorg/sireum/None$;
   #82 = Fieldref           #78.#81       // org/sireum/None$.MODULE$:Lorg/sireum/None$;
   #83 = Utf8               apply
   #84 = Utf8               ()Lorg/sireum/None;
   #85 = NameAndType        #83:#84       // apply:()Lorg/sireum/None;
   #86 = Methodref          #78.#85       // org/sireum/None$.apply:()Lorg/sireum/None;
   #87 = Utf8               org/sireum/Some$
   #88 = Class              #87           // org/sireum/Some$
   #89 = Utf8               Lorg/sireum/Some$;
   #90 = NameAndType        #79:#89       // MODULE$:Lorg/sireum/Some$;
   #91 = Fieldref           #88.#90       // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
   #92 = Utf8               org/sireum/C
   #93 = Class              #92           // org/sireum/C
   #94 = NameAndType        #27:#21       // _sep:I
   #95 = Fieldref           #2.#94        // org/sireum/cli/CliOpt$Type$Num._sep:I
   #96 = Utf8               <init>
   #97 = Utf8               (I)V
   #98 = NameAndType        #96:#97       // "<init>":(I)V
   #99 = Methodref          #93.#98       // org/sireum/C."<init>":(I)V
  #100 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #101 = NameAndType        #83:#100      // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #102 = Methodref          #88.#101      // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #103 = Utf8               getSep
  #104 = NameAndType        #72:#73       // sep:()Lorg/sireum/Option;
  #105 = Methodref          #2.#104       // org/sireum/cli/CliOpt$Type$Num.sep:()Lorg/sireum/Option;
  #106 = Utf8               default
  #107 = NameAndType        #28:#29       // _default:Lorg/sireum/Z;
  #108 = Fieldref           #2.#107       // org/sireum/cli/CliOpt$Type$Num._default:Lorg/sireum/Z;
  #109 = Utf8               getDefault
  #110 = Utf8               min
  #111 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/Z;>;
  #112 = NameAndType        #30:#26       // _bmin:Z
  #113 = Fieldref           #2.#112       // org/sireum/cli/CliOpt$Type$Num._bmin:Z
  #114 = NameAndType        #31:#29       // _min:Lorg/sireum/Z;
  #115 = Fieldref           #2.#114       // org/sireum/cli/CliOpt$Type$Num._min:Lorg/sireum/Z;
  #116 = Utf8               getMin
  #117 = NameAndType        #110:#73      // min:()Lorg/sireum/Option;
  #118 = Methodref          #2.#117       // org/sireum/cli/CliOpt$Type$Num.min:()Lorg/sireum/Option;
  #119 = Utf8               max
  #120 = NameAndType        #32:#26       // _bmax:Z
  #121 = Fieldref           #2.#120       // org/sireum/cli/CliOpt$Type$Num._bmax:Z
  #122 = NameAndType        #33:#29       // _max:Lorg/sireum/Z;
  #123 = Fieldref           #2.#122       // org/sireum/cli/CliOpt$Type$Num._max:Lorg/sireum/Z;
  #124 = Utf8               getMax
  #125 = NameAndType        #119:#73      // max:()Lorg/sireum/Option;
  #126 = Methodref          #2.#125       // org/sireum/cli/CliOpt$Type$Num.max:()Lorg/sireum/Option;
  #127 = Utf8               toString
  #128 = Utf8               ()Ljava/lang/String;
  #129 = NameAndType        #60:#55       // $hasString:()Z
  #130 = Methodref          #2.#129       // org/sireum/cli/CliOpt$Type$Num.$hasString:()Z
  #131 = Utf8               string$
  #132 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #133 = NameAndType        #131:#132     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #134 = InterfaceMethodref #39.#133      // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #135 = Utf8               java/lang/StringBuilder
  #136 = Class              #135          // java/lang/StringBuilder
  #137 = Utf8               ()V
  #138 = NameAndType        #96:#137      // "<init>":()V
  #139 = Methodref          #136.#138     // java/lang/StringBuilder."<init>":()V
  #140 = String             #19           // Num
  #141 = Utf8               append
  #142 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #143 = NameAndType        #141:#142     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #144 = Methodref          #136.#143     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #145 = Utf8               (C)Ljava/lang/StringBuilder;
  #146 = NameAndType        #141:#145     // append:(C)Ljava/lang/StringBuilder;
  #147 = Methodref          #136.#146     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #148 = Utf8               org/sireum/String$
  #149 = Class              #148          // org/sireum/String$
  #150 = Utf8               Lorg/sireum/String$;
  #151 = NameAndType        #79:#150      // MODULE$:Lorg/sireum/String$;
  #152 = Fieldref           #149.#151     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #153 = Utf8               escape
  #154 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #155 = NameAndType        #153:#154     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #156 = Methodref          #149.#155     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #157 = Utf8               ,
  #158 = String             #157          // ,
  #159 = NameAndType        #106:#37      // default:()Lorg/sireum/Z;
  #160 = Methodref          #2.#159       // org/sireum/cli/CliOpt$Type$Num.default:()Lorg/sireum/Z;
  #161 = NameAndType        #127:#128     // toString:()Ljava/lang/String;
  #162 = Methodref          #136.#161     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #163 = Utf8               sb
  #164 = Utf8               Ljava/lang/StringBuilder;
  #165 = Utf8               java/lang/String
  #166 = Class              #165          // java/lang/String
  #167 = Utf8               string
  #168 = Methodref          #2.#161       // org/sireum/cli/CliOpt$Type$Num.toString:()Ljava/lang/String;
  #169 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #170 = NameAndType        #83:#169      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #171 = Methodref          #149.#170     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #172 = Utf8               hashCode$lzycompute
  #173 = Utf8               ()I
  #174 = NameAndType        #34:#35       // bitmap$0:B
  #175 = Fieldref           #2.#174       // org/sireum/cli/CliOpt$Type$Num.bitmap$0:B
  #176 = NameAndType        #54:#55       // $hasEquals:()Z
  #177 = Methodref          #2.#176       // org/sireum/cli/CliOpt$Type$Num.$hasEquals:()Z
  #178 = NameAndType        #20:#173      // hashCode:()I
  #179 = Methodref          #4.#178       // java/lang/Object.hashCode:()I
  #180 = Utf8               scala/package$
  #181 = Class              #180          // scala/package$
  #182 = Utf8               Lscala/package$;
  #183 = NameAndType        #79:#182      // MODULE$:Lscala/package$;
  #184 = Fieldref           #181.#183     // scala/package$.MODULE$:Lscala/package$;
  #185 = Utf8               Seq
  #186 = Utf8               ()Lscala/collection/immutable/Seq$;
  #187 = NameAndType        #185:#186     // Seq:()Lscala/collection/immutable/Seq$;
  #188 = Methodref          #181.#187     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #189 = Utf8               scala/runtime/ScalaRunTime$
  #190 = Class              #189          // scala/runtime/ScalaRunTime$
  #191 = Utf8               Lscala/runtime/ScalaRunTime$;
  #192 = NameAndType        #79:#191      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #193 = Fieldref           #190.#192     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #194 = Utf8               getClass
  #195 = Utf8               ()Ljava/lang/Class;
  #196 = NameAndType        #194:#195     // getClass:()Ljava/lang/Class;
  #197 = Methodref          #2.#196       // org/sireum/cli/CliOpt$Type$Num.getClass:()Ljava/lang/Class;
  #198 = Utf8               java/lang/Class
  #199 = Class              #198          // java/lang/Class
  #200 = Utf8               getName
  #201 = NameAndType        #200:#128     // getName:()Ljava/lang/String;
  #202 = Methodref          #199.#201     // java/lang/Class.getName:()Ljava/lang/String;
  #203 = Utf8               wrapRefArray
  #204 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #205 = NameAndType        #203:#204     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #206 = Methodref          #190.#205     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #207 = Utf8               scala/collection/immutable/Seq$
  #208 = Class              #207          // scala/collection/immutable/Seq$
  #209 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #210 = NameAndType        #83:#209      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #211 = Methodref          #208.#210     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #212 = Utf8               scala/collection/Seq
  #213 = Class              #212          // scala/collection/Seq
  #214 = InterfaceMethodref #213.#178     // scala/collection/Seq.hashCode:()I
  #215 = NameAndType        #20:#21       // hashCode:I
  #216 = Fieldref           #2.#215       // org/sireum/cli/CliOpt$Type$Num.hashCode:I
  #217 = Utf8               java/lang/Throwable
  #218 = Class              #217          // java/lang/Throwable
  #219 = NameAndType        #172:#173     // hashCode$lzycompute:()I
  #220 = Methodref          #2.#219       // org/sireum/cli/CliOpt$Type$Num.hashCode$lzycompute:()I
  #221 = Utf8               equals
  #222 = Utf8               (Ljava/lang/Object;)Z
  #223 = Utf8               o
  #224 = NameAndType        #221:#222     // equals:(Ljava/lang/Object;)Z
  #225 = Methodref          #4.#224       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #226 = Methodref          #2.#178       // org/sireum/cli/CliOpt$Type$Num.hashCode:()I
  #227 = Utf8               Ljava/lang/Object;
  #228 = Utf8               org/sireum/Option
  #229 = Class              #228          // org/sireum/Option
  #230 = Utf8               org/sireum/Z
  #231 = Class              #230          // org/sireum/Z
  #232 = Utf8               (Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Num;
  #233 = Utf8               (Lorg/sireum/Option<Lorg/sireum/C;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;)Lorg/sireum/cli/CliOpt$Type$Num;
  #234 = Utf8               (Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
  #235 = NameAndType        #96:#234      // "<init>":(Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
  #236 = Methodref          #2.#235       // org/sireum/cli/CliOpt$Type$Num."<init>":(Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
  #237 = Utf8               Lorg/sireum/Option;
  #238 = Utf8               apply$default$1
  #239 = Utf8               apply$default$2
  #240 = Utf8               apply$default$3
  #241 = Utf8               apply$default$4
  #242 = Utf8               $content$lzycompute
  #243 = Utf8               ()Lscala/collection/immutable/Seq;
  #244 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #245 = Utf8               scala/Tuple2
  #246 = Class              #245          // scala/Tuple2
  #247 = Utf8               type
  #248 = String             #247          // type
  #249 = Utf8               List
  #250 = Utf8               ()Lscala/collection/immutable/List$;
  #251 = NameAndType        #249:#250     // List:()Lscala/collection/immutable/List$;
  #252 = Methodref          #181.#251     // scala/package$.List:()Lscala/collection/immutable/List$;
  #253 = Utf8               org
  #254 = String             #253          // org
  #255 = Utf8               sireum
  #256 = String             #255          // sireum
  #257 = Utf8               cli
  #258 = String             #257          // cli
  #259 = Utf8               [Ljava/lang/Object;
  #260 = Class              #259          // "[Ljava/lang/Object;"
  #261 = Utf8               scala/collection/immutable/List$
  #262 = Class              #261          // scala/collection/immutable/List$
  #263 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #264 = NameAndType        #83:#263      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #265 = Methodref          #262.#264     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #266 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #267 = NameAndType        #96:#266      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #268 = Methodref          #246.#267     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #269 = String             #72           // sep
  #270 = String             #106          // default
  #271 = String             #110          // min
  #272 = String             #119          // max
  #273 = Utf8               scala/collection/immutable/Seq
  #274 = Class              #273          // scala/collection/immutable/Seq
  #275 = NameAndType        #22:#23       // $content:Lscala/collection/immutable/Seq;
  #276 = Fieldref           #2.#275       // org/sireum/cli/CliOpt$Type$Num.$content:Lscala/collection/immutable/Seq;
  #277 = NameAndType        #242:#243     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #278 = Methodref          #2.#277       // org/sireum/cli/CliOpt$Type$Num.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #279 = Utf8               ()Ljava/lang/Object;
  #280 = NameAndType        #64:#65       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #281 = Methodref          #2.#280       // org/sireum/cli/CliOpt$Type$Num.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #282 = Utf8               $anonfun$_sep$1
  #283 = Utf8               scala/runtime/BoxesRunTime
  #284 = Class              #283          // scala/runtime/BoxesRunTime
  #285 = Utf8               unboxToInt
  #286 = Utf8               (Ljava/lang/Object;)I
  #287 = NameAndType        #285:#286     // unboxToInt:(Ljava/lang/Object;)I
  #288 = Methodref          #284.#287     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #289 = Utf8               $anonfun$_min$1
  #290 = Utf8               $anonfun$_max$1
  #291 = Utf8               (Lorg/sireum/Option<Lorg/sireum/C;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;)V
  #292 = Utf8               __sep
  #293 = Utf8               __default
  #294 = Utf8               __min
  #295 = Utf8               __max
  #296 = Methodref          #4.#138       // java/lang/Object."<init>":()V
  #297 = Utf8               $init$
  #298 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #299 = NameAndType        #297:#298     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #300 = InterfaceMethodref #67.#299      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #301 = Utf8               (Lorg/sireum/Immutable;)V
  #302 = NameAndType        #297:#301     // $init$:(Lorg/sireum/Immutable;)V
  #303 = InterfaceMethodref #49.#302      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #304 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #305 = NameAndType        #297:#304     // $init$:(Lorg/sireum/DatatypeSig;)V
  #306 = InterfaceMethodref #39.#305      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #307 = Utf8               isEmpty
  #308 = NameAndType        #307:#55      // isEmpty:()Z
  #309 = InterfaceMethodref #229.#308     // org/sireum/Option.isEmpty:()Z
  #310 = MethodType         #279          //  ()Ljava/lang/Object;
  #311 = Utf8               $anonfun$_sep$1$adapted
  #312 = NameAndType        #311:#279     // $anonfun$_sep$1$adapted:()Ljava/lang/Object;
  #313 = Methodref          #2.#312       // org/sireum/cli/CliOpt$Type$Num.$anonfun$_sep$1$adapted:()Ljava/lang/Object;
  #314 = MethodHandle       6:#313        // REF_invokeStatic org/sireum/cli/CliOpt$Type$Num.$anonfun$_sep$1$adapted:()Ljava/lang/Object;
  #315 = Integer            1
  #316 = Utf8               java/lang/invoke/LambdaMetafactory
  #317 = Class              #316          // java/lang/invoke/LambdaMetafactory
  #318 = Utf8               altMetafactory
  #319 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #320 = NameAndType        #318:#319     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #321 = Methodref          #317.#320     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #322 = MethodHandle       6:#321        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #323 = Utf8               ()Lscala/Function0;
  #324 = NameAndType        #83:#323      // apply:()Lscala/Function0;
  #325 = InvokeDynamic      #0:#324       // #0:apply:()Lscala/Function0;
  #326 = Utf8               getOrElse
  #327 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #328 = NameAndType        #326:#327     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #329 = InterfaceMethodref #229.#328     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #330 = Utf8               value
  #331 = NameAndType        #330:#173     // value:()I
  #332 = Methodref          #93.#331      // org/sireum/C.value:()I
  #333 = NameAndType        #289:#37      // $anonfun$_min$1:()Lorg/sireum/Z;
  #334 = Methodref          #2.#333       // org/sireum/cli/CliOpt$Type$Num.$anonfun$_min$1:()Lorg/sireum/Z;
  #335 = MethodHandle       6:#334        // REF_invokeStatic org/sireum/cli/CliOpt$Type$Num.$anonfun$_min$1:()Lorg/sireum/Z;
  #336 = MethodType         #37           //  ()Lorg/sireum/Z;
  #337 = Integer            5
  #338 = InvokeDynamic      #1:#324       // #1:apply:()Lscala/Function0;
  #339 = NameAndType        #290:#37      // $anonfun$_max$1:()Lorg/sireum/Z;
  #340 = Methodref          #2.#339       // org/sireum/cli/CliOpt$Type$Num.$anonfun$_max$1:()Lorg/sireum/Z;
  #341 = MethodHandle       6:#340        // REF_invokeStatic org/sireum/cli/CliOpt$Type$Num.$anonfun$_max$1:()Lorg/sireum/Z;
  #342 = InvokeDynamic      #2:#324       // #2:apply:()Lscala/Function0;
  #343 = NameAndType        #282:#173     // $anonfun$_sep$1:()I
  #344 = Methodref          #2.#343       // org/sireum/cli/CliOpt$Type$Num.$anonfun$_sep$1:()I
  #345 = Utf8               $deserializeLambda$
  #346 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #347 = Utf8               scala/runtime/LambdaDeserialize
  #348 = Class              #347          // scala/runtime/LambdaDeserialize
  #349 = Utf8               bootstrap
  #350 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #351 = NameAndType        #349:#350     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #352 = Methodref          #348.#351     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #353 = MethodHandle       6:#352        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #354 = Utf8               lambdaDeserialize
  #355 = NameAndType        #354:#346     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #356 = InvokeDynamic      #3:#355       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #357 = Utf8               Signature
  #358 = Utf8               Code
  #359 = Utf8               LineNumberTable
  #360 = Utf8               LocalVariableTable
  #361 = Utf8               StackMapTable
  #362 = Utf8               MethodParameters
  #363 = Utf8               InnerClasses
  #364 = Utf8               SourceFile
  #365 = Utf8               BootstrapMethods
  #366 = Utf8               ScalaInlineInfo
  #367 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #24                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final boolean _bsep;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int _sep;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _default;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bmin;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _min;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bmax;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _max;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #43                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #59                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #63                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public org.sireum.Option<org.sireum.C> sep();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #76                 // Field _bsep:Z
         4: ifeq          16
         7: getstatic     #82                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #86                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          33
        16: getstatic     #91                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: new           #93                 // class org/sireum/C
        22: dup
        23: aload_0
        24: getfield      #95                 // Field _sep:I
        27: invokespecial #99                 // Method org/sireum/C."<init>":(I)V
        30: invokevirtual #102                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #74                          // ()Lorg/sireum/Option<Lorg/sireum/C;>;

  public org.sireum.Option<org.sireum.C> getSep();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #105                // Method sep:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #74                          // ()Lorg/sireum/Option<Lorg/sireum/C;>;

  public org.sireum.Z default();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _default:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public org.sireum.Z getDefault();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _default:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public org.sireum.Option<org.sireum.Z> min();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #113                // Field _bmin:Z
         4: ifeq          16
         7: getstatic     #82                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #86                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #91                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #115                // Field _min:Lorg/sireum/Z;
        23: invokevirtual #102                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #111                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public org.sireum.Option<org.sireum.Z> getMin();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #118                // Method min:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #111                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public org.sireum.Option<org.sireum.Z> max();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #121                // Field _bmax:Z
         4: ifeq          16
         7: getstatic     #82                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #86                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #91                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #123                // Field _max:Lorg/sireum/Z;
        23: invokevirtual #102                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #111                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public org.sireum.Option<org.sireum.Z> getMax();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #126                // Method max:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #111                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #130                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #134                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          128
        14: new           #136                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #139                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #140                // String Num
        25: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #147                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #152                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #105                // Method sep:()Lorg/sireum/Option;
        44: invokevirtual #156                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #158                // String ,
        54: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #152                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: aload_0
        63: invokevirtual #160                // Method default:()Lorg/sireum/Z;
        66: invokevirtual #156                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        69: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        72: pop
        73: aload_1
        74: ldc           #158                // String ,
        76: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: getstatic     #152                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        84: aload_0
        85: invokevirtual #118                // Method min:()Lorg/sireum/Option;
        88: invokevirtual #156                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        91: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        94: pop
        95: aload_1
        96: ldc           #158                // String ,
        98: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       101: pop
       102: aload_1
       103: getstatic     #152                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       106: aload_0
       107: invokevirtual #126                // Method max:()Lorg/sireum/Option;
       110: invokevirtual #156                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       113: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       116: pop
       117: aload_1
       118: bipush        41
       120: invokevirtual #147                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       123: pop
       124: aload_1
       125: invokevirtual #162                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       128: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 113
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22     106     1    sb   Ljava/lang/StringBuilder;
            0     129     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #130                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #134                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #152                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #168                // Method toString:()Ljava/lang/String;
        21: invokevirtual #171                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #175                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     109
        15: aload_0
        16: aload_0
        17: invokevirtual #177                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #179                // Method java/lang/Object.hashCode:()I
        27: goto          95
        30: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #188                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_5
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #197                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #202                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #105                // Method sep:()Lorg/sireum/Option;
        59: aastore
        60: dup
        61: iconst_2
        62: aload_0
        63: invokevirtual #160                // Method default:()Lorg/sireum/Z;
        66: aastore
        67: dup
        68: iconst_3
        69: aload_0
        70: invokevirtual #118                // Method min:()Lorg/sireum/Option;
        73: aastore
        74: dup
        75: iconst_4
        76: aload_0
        77: invokevirtual #126                // Method max:()Lorg/sireum/Option;
        80: aastore
        81: invokevirtual #206                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        84: invokevirtual #211                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        87: checkcast     #213                // class scala/collection/Seq
        90: invokeinterface #214,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        95: putfield      #216                // Field hashCode:I
        98: aload_0
        99: aload_0
       100: getfield      #175                // Field bitmap$0:B
       103: iconst_1
       104: ior
       105: i2b
       106: putfield      #175                // Field bitmap$0:B
       109: aload_1
       110: monitorexit
       111: goto          117
       114: aload_1
       115: monitorexit
       116: athrow
       117: aload_0
       118: getfield      #216                // Field hashCode:I
       121: ireturn
      Exception table:
         from    to  target type
             4   109   114   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/cli/CliOpt$Type$Num, class org/sireum/cli/CliOpt$Type$Num ]
          stack = [ class org/sireum/cli/CliOpt$Type$Num ]
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class org/sireum/cli/CliOpt$Type$Num, class org/sireum/cli/CliOpt$Type$Num ]
          stack = [ class org/sireum/cli/CliOpt$Type$Num, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     122     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #175                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #220                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #216                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=9, args_size=2
         0: aload_0
         1: invokevirtual #177                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #225                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          201
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          201
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/cli/CliOpt$Type$Num
        30: ifeq          192
        33: aload_3
        34: checkcast     #2                  // class org/sireum/cli/CliOpt$Type$Num
        37: astore        4
        39: aload_0
        40: invokevirtual #226                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #226                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          188
        55: aload_0
        56: invokevirtual #105                // Method sep:()Lorg/sireum/Option;
        59: aload         4
        61: invokevirtual #105                // Method sep:()Lorg/sireum/Option;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          187
        79: aload         5
        81: invokevirtual #225                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          187
        87: aload_0
        88: invokevirtual #160                // Method default:()Lorg/sireum/Z;
        91: aload         4
        93: invokevirtual #160                // Method default:()Lorg/sireum/Z;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          187
       111: aload         6
       113: invokevirtual #225                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          187
       119: aload_0
       120: invokevirtual #118                // Method min:()Lorg/sireum/Option;
       123: aload         4
       125: invokevirtual #118                // Method min:()Lorg/sireum/Option;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          187
       143: aload         7
       145: invokevirtual #225                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          187
       151: aload_0
       152: invokevirtual #126                // Method max:()Lorg/sireum/Option;
       155: aload         4
       157: invokevirtual #126                // Method max:()Lorg/sireum/Option;
       160: astore        8
       162: dup
       163: ifnonnull     175
       166: pop
       167: aload         8
       169: ifnull        183
       172: goto          187
       175: aload         8
       177: invokevirtual #225                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       180: ifeq          187
       183: iconst_1
       184: goto          188
       187: iconst_0
       188: istore_2
       189: goto          200
       192: goto          195
       195: iconst_0
       196: istore_2
       197: goto          200
       200: iload_2
       201: ireturn
      StackMapTable: number_of_entries = 17
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Num ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/cli/CliOpt$Type$Num, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Num, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/cli/CliOpt$Type$Num, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Num, class org/sireum/Option, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/cli/CliOpt$Type$Num, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Num, class org/sireum/Option, class org/sireum/Z, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/cli/CliOpt$Type$Num, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Num, class org/sireum/Option, class org/sireum/Z, class org/sireum/Option, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/cli/CliOpt$Type$Num, class java/lang/Object, top, class java/lang/Object, class org/sireum/cli/CliOpt$Type$Num ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/cli/CliOpt$Type$Num, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/cli/CliOpt$Type$Num, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     202     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
            0     202     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.cli.CliOpt$Type$Num apply(org.sireum.Option<org.sireum.C>, org.sireum.Z, org.sireum.Option<org.sireum.Z>, org.sireum.Option<org.sireum.Z>);
    descriptor: (Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/cli/CliOpt$Type$Num;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #2                  // class org/sireum/cli/CliOpt$Type$Num
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokespecial #236                // Method "<init>":(Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
        12: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
            0      13     1   sep   Lorg/sireum/Option;
            0      13     2 default   Lorg/sireum/Z;
            0      13     3   min   Lorg/sireum/Option;
            0      13     4   max   Lorg/sireum/Option;
    Signature: #233                         // (Lorg/sireum/Option<Lorg/sireum/C;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;)Lorg/sireum/cli/CliOpt$Type$Num;
    MethodParameters:
      Name                           Flags
      sep                            final
      default                        final
      min                            final
      max                            final

  public org.sireum.Option<org.sireum.C> apply$default$1();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #105                // Method sep:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #74                          // ()Lorg/sireum/Option<Lorg/sireum/C;>;

  public org.sireum.Z apply$default$2();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #160                // Method default:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public org.sireum.Option<org.sireum.Z> apply$default$3();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #118                // Method min:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #111                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  public org.sireum.Option<org.sireum.Z> apply$default$4();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #126                // Method max:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #111                         // ()Lorg/sireum/Option<Lorg/sireum/Z;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #175                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     179
        15: aload_0
        16: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #188                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_5
        26: anewarray     #246                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #246                // class scala/Tuple2
        34: dup
        35: ldc           #248                // String type
        37: getstatic     #184                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #252                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #193                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_4
        47: anewarray     #166                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #254                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc_w         #256                // String sireum
        60: aastore
        61: dup
        62: iconst_2
        63: ldc_w         #258                // String cli
        66: aastore
        67: dup
        68: iconst_3
        69: ldc           #140                // String Num
        71: aastore
        72: checkcast     #260                // class "[Ljava/lang/Object;"
        75: invokevirtual #206                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokevirtual #265                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        81: invokespecial #268                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        84: aastore
        85: dup
        86: iconst_1
        87: new           #246                // class scala/Tuple2
        90: dup
        91: ldc_w         #269                // String sep
        94: aload_0
        95: invokevirtual #105                // Method sep:()Lorg/sireum/Option;
        98: invokespecial #268                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       101: aastore
       102: dup
       103: iconst_2
       104: new           #246                // class scala/Tuple2
       107: dup
       108: ldc_w         #270                // String default
       111: aload_0
       112: invokevirtual #160                // Method default:()Lorg/sireum/Z;
       115: invokespecial #268                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       118: aastore
       119: dup
       120: iconst_3
       121: new           #246                // class scala/Tuple2
       124: dup
       125: ldc_w         #271                // String min
       128: aload_0
       129: invokevirtual #118                // Method min:()Lorg/sireum/Option;
       132: invokespecial #268                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       135: aastore
       136: dup
       137: iconst_4
       138: new           #246                // class scala/Tuple2
       141: dup
       142: ldc_w         #272                // String max
       145: aload_0
       146: invokevirtual #126                // Method max:()Lorg/sireum/Option;
       149: invokespecial #268                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       152: aastore
       153: checkcast     #260                // class "[Ljava/lang/Object;"
       156: invokevirtual #206                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       159: invokevirtual #211                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       162: checkcast     #274                // class scala/collection/immutable/Seq
       165: putfield      #276                // Field $content:Lscala/collection/immutable/Seq;
       168: aload_0
       169: aload_0
       170: getfield      #175                // Field bitmap$0:B
       173: iconst_2
       174: ior
       175: i2b
       176: putfield      #175                // Field bitmap$0:B
       179: aload_1
       180: monitorexit
       181: goto          187
       184: aload_1
       185: monitorexit
       186: athrow
       187: aload_0
       188: getfield      #276                // Field $content:Lscala/collection/immutable/Seq;
       191: areturn
      Exception table:
         from    to  target type
             4   179   184   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 179
          locals = [ class org/sireum/cli/CliOpt$Type$Num ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     192     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #244                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #175                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #278                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #276                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
    Signature: #244                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #281                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/cli/CliOpt$Type$Num;

  public static final int $anonfun$_sep$1();
    descriptor: ()I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: invokestatic  #288                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: ireturn
      LineNumberTable:
        line 85: 0

  public static final org.sireum.Z $anonfun$_min$1();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 85: 0

  public static final org.sireum.Z $anonfun$_max$1();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 85: 0

  public org.sireum.cli.CliOpt$Type$Num(org.sireum.Option<org.sireum.C>, org.sireum.Z, org.sireum.Option<org.sireum.Z>, org.sireum.Option<org.sireum.Z>);
    descriptor: (Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=5
         0: aload_0
         1: invokespecial #296                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #300                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #303                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #306                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: invokeinterface #309,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        23: putfield      #76                 // Field _bsep:Z
        26: aload_0
        27: aload_1
        28: invokedynamic #325,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        33: invokeinterface #329,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        38: checkcast     #93                 // class org/sireum/C
        41: invokevirtual #332                // Method org/sireum/C.value:()I
        44: putfield      #95                 // Field _sep:I
        47: aload_0
        48: aload_2
        49: putfield      #108                // Field _default:Lorg/sireum/Z;
        52: aload_0
        53: aload_3
        54: invokeinterface #309,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        59: putfield      #113                // Field _bmin:Z
        62: aload_0
        63: aload_3
        64: invokedynamic #338,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
        69: invokeinterface #329,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        74: checkcast     #231                // class org/sireum/Z
        77: putfield      #115                // Field _min:Lorg/sireum/Z;
        80: aload_0
        81: aload         4
        83: invokeinterface #309,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        88: putfield      #121                // Field _bmax:Z
        91: aload_0
        92: aload         4
        94: invokedynamic #342,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
        99: invokeinterface #329,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       104: checkcast     #231                // class org/sireum/Z
       107: putfield      #123                // Field _max:Lorg/sireum/Z;
       110: return
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     111     0  this   Lorg/sireum/cli/CliOpt$Type$Num;
            0     111     1 __sep   Lorg/sireum/Option;
            0     111     2 __default   Lorg/sireum/Z;
            0     111     3 __min   Lorg/sireum/Option;
            0     111     4 __max   Lorg/sireum/Option;
    Signature: #291                         // (Lorg/sireum/Option<Lorg/sireum/C;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/Z;>;Lorg/sireum/Option<Lorg/sireum/Z;>;)V
    MethodParameters:
      Name                           Flags
      __sep                          final
      __default                      final
      __min                          final
      __max                          final

  public static final java.lang.Object $anonfun$_sep$1$adapted();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #93                 // class org/sireum/C
         3: dup
         4: invokestatic  #344                // Method $anonfun$_sep$1:()I
         7: invokespecial #99                 // Method org/sireum/C."<init>":(I)V
        10: areturn
      LineNumberTable:
        line 85: 0

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #356,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #6 of #14;           // Type=class org/sireum/cli/CliOpt$Type of class org/sireum/cli/CliOpt
  public static #18= #17 of #14;          // Type$=class org/sireum/cli/CliOpt$Type$ of class org/sireum/cli/CliOpt
  public static final #19= #2 of #17;     // Num=class org/sireum/cli/CliOpt$Type$Num of class org/sireum/cli/CliOpt$Type$
SourceFile: "CliOpt.scala"
BootstrapMethods:
  0: #322 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #310 ()Ljava/lang/Object;
      #314 REF_invokeStatic org/sireum/cli/CliOpt$Type$Num.$anonfun$_sep$1$adapted:()Ljava/lang/Object;
      #310 ()Ljava/lang/Object;
      #315 1
  1: #322 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #310 ()Ljava/lang/Object;
      #335 REF_invokeStatic org/sireum/cli/CliOpt$Type$Num.$anonfun$_min$1:()Lorg/sireum/Z;
      #336 ()Lorg/sireum/Z;
      #337 5
      #315 1
      #336 ()Lorg/sireum/Z;
  2: #322 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #310 ()Ljava/lang/Object;
      #341 REF_invokeStatic org/sireum/cli/CliOpt$Type$Num.$anonfun$_max$1:()Lorg/sireum/Z;
      #336 ()Lorg/sireum/Z;
      #337 5
      #315 1
      #336 ()Lorg/sireum/Z;
  3: #353 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #341 REF_invokeStatic org/sireum/cli/CliOpt$Type$Num.$anonfun$_max$1:()Lorg/sireum/Z;
      #335 REF_invokeStatic org/sireum/cli/CliOpt$Type$Num.$anonfun$_min$1:()Lorg/sireum/Z;
      #314 REF_invokeStatic org/sireum/cli/CliOpt$Type$Num.$anonfun$_sep$1$adapted:()Ljava/lang/Object;
  ScalaInlineInfo: length = 0x9F (unknown attribute)
   01 01 00 1F 01 22 00 25 01 01 21 00 25 01 01 1A
   00 AD 01 01 37 01 17 01 00 2E 00 2F 01 00 40 01
   17 01 00 40 00 41 01 00 16 00 F3 01 00 F2 00 F3
   01 00 36 00 37 01 00 3C 00 37 01 00 60 00 EA 01
   00 53 00 E8 01 00 EE 00 49 01 00 EF 00 25 01 00
   F0 00 49 01 00 F1 00 49 01 00 6A 00 25 01 00 DD
   00 DE 01 00 6D 00 25 01 00 7C 00 49 01 00 74 00
   49 01 00 67 00 49 01 00 24 00 25 01 00 14 00 AD
   01 00 AC 00 AD 01 00 77 00 49 01 00 6E 00 49 01
   00 48 00 49 01 00 A7 00 80 01 00 7F 00 80 01
  Scala: length = 0x0 (unknown attribute)

