Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/CharRange.class
  Last modified May 29, 2022; size 3498 bytes
  SHA-256 checksum 85c4d3b1bee149fbe84584d229159caafb53fe3d54043b5f208530601b21e427
  Compiled from "CharRange.java"
final class org.apache.commons.lang3.CharRange extends java.lang.Object implements java.lang.Iterable<java.lang.Character>, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #5                          // org/apache/commons/lang3/CharRange
  super_class: #8                         // java/lang/Object
  interfaces: 2, fields: 5, methods: 17, attributes: 3
Constant pool:
    #1 = Fieldref           #5.#85        // org/apache/commons/lang3/CharRange.end:C
    #2 = Fieldref           #5.#86        // org/apache/commons/lang3/CharRange.start:C
    #3 = Fieldref           #5.#87        // org/apache/commons/lang3/CharRange.negated:Z
    #4 = Methodref          #8.#88        // java/lang/Object."<init>":()V
    #5 = Class              #89           // org/apache/commons/lang3/CharRange
    #6 = Methodref          #5.#90        // org/apache/commons/lang3/CharRange."<init>":(CCZ)V
    #7 = String             #91           // The Range must not be null
    #8 = Class              #92           // java/lang/Object
    #9 = Methodref          #93.#94       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
   #10 = Class              #95           // java/lang/Character
   #11 = Integer            65535
   #12 = Fieldref           #5.#96        // org/apache/commons/lang3/CharRange.iToString:Ljava/lang/String;
   #13 = Class              #97           // java/lang/StringBuilder
   #14 = Methodref          #13.#98       // java/lang/StringBuilder."<init>":(I)V
   #15 = Methodref          #5.#99        // org/apache/commons/lang3/CharRange.isNegated:()Z
   #16 = Methodref          #13.#100      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #17 = Methodref          #13.#101      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #18 = Class              #102          // org/apache/commons/lang3/CharRange$CharacterIterator
   #19 = Methodref          #18.#103      // org/apache/commons/lang3/CharRange$CharacterIterator."<init>":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V
   #20 = Class              #104          // java/lang/Iterable
   #21 = Class              #105          // java/io/Serializable
   #22 = Class              #106          // org/apache/commons/lang3/CharRange$1
   #23 = Utf8               InnerClasses
   #24 = Utf8               CharacterIterator
   #25 = Utf8               serialVersionUID
   #26 = Utf8               J
   #27 = Utf8               ConstantValue
   #28 = Long               8270183163158333422l
   #30 = Utf8               start
   #31 = Utf8               C
   #32 = Utf8               end
   #33 = Utf8               negated
   #34 = Utf8               Z
   #35 = Utf8               iToString
   #36 = Utf8               Ljava/lang/String;
   #37 = Utf8               <init>
   #38 = Utf8               (CCZ)V
   #39 = Utf8               Code
   #40 = Utf8               LineNumberTable
   #41 = Utf8               LocalVariableTable
   #42 = Utf8               temp
   #43 = Utf8               this
   #44 = Utf8               Lorg/apache/commons/lang3/CharRange;
   #45 = Utf8               StackMapTable
   #46 = Utf8               is
   #47 = Utf8               (C)Lorg/apache/commons/lang3/CharRange;
   #48 = Utf8               ch
   #49 = Utf8               isNot
   #50 = Utf8               isIn
   #51 = Utf8               (CC)Lorg/apache/commons/lang3/CharRange;
   #52 = Utf8               isNotIn
   #53 = Utf8               getStart
   #54 = Utf8               ()C
   #55 = Utf8               getEnd
   #56 = Utf8               isNegated
   #57 = Utf8               ()Z
   #58 = Utf8               contains
   #59 = Utf8               (C)Z
   #60 = Utf8               (Lorg/apache/commons/lang3/CharRange;)Z
   #61 = Utf8               range
   #62 = Utf8               equals
   #63 = Utf8               (Ljava/lang/Object;)Z
   #64 = Utf8               obj
   #65 = Utf8               Ljava/lang/Object;
   #66 = Utf8               other
   #67 = Utf8               hashCode
   #68 = Utf8               ()I
   #69 = Utf8               toString
   #70 = Utf8               ()Ljava/lang/String;
   #71 = Utf8               buf
   #72 = Utf8               Ljava/lang/StringBuilder;
   #73 = Utf8               iterator
   #74 = Utf8               ()Ljava/util/Iterator;
   #75 = Utf8               Signature
   #76 = Utf8               ()Ljava/util/Iterator<Ljava/lang/Character;>;
   #77 = Utf8               access$100
   #78 = Utf8               x0
   #79 = Utf8               access$200
   #80 = Utf8               (Lorg/apache/commons/lang3/CharRange;)C
   #81 = Utf8               access$300
   #82 = Utf8               Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Character;>;Ljava/io/Serializable;
   #83 = Utf8               SourceFile
   #84 = Utf8               CharRange.java
   #85 = NameAndType        #32:#31       // end:C
   #86 = NameAndType        #30:#31       // start:C
   #87 = NameAndType        #33:#34       // negated:Z
   #88 = NameAndType        #37:#107      // "<init>":()V
   #89 = Utf8               org/apache/commons/lang3/CharRange
   #90 = NameAndType        #37:#38       // "<init>":(CCZ)V
   #91 = Utf8               The Range must not be null
   #92 = Utf8               java/lang/Object
   #93 = Class              #108          // org/apache/commons/lang3/Validate
   #94 = NameAndType        #109:#110     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
   #95 = Utf8               java/lang/Character
   #96 = NameAndType        #35:#36       // iToString:Ljava/lang/String;
   #97 = Utf8               java/lang/StringBuilder
   #98 = NameAndType        #37:#111      // "<init>":(I)V
   #99 = NameAndType        #56:#57       // isNegated:()Z
  #100 = NameAndType        #112:#113     // append:(C)Ljava/lang/StringBuilder;
  #101 = NameAndType        #69:#70       // toString:()Ljava/lang/String;
  #102 = Utf8               org/apache/commons/lang3/CharRange$CharacterIterator
  #103 = NameAndType        #37:#114      // "<init>":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V
  #104 = Utf8               java/lang/Iterable
  #105 = Utf8               java/io/Serializable
  #106 = Utf8               org/apache/commons/lang3/CharRange$1
  #107 = Utf8               ()V
  #108 = Utf8               org/apache/commons/lang3/Validate
  #109 = Utf8               isTrue
  #110 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V
  #111 = Utf8               (I)V
  #112 = Utf8               append
  #113 = Utf8               (C)Ljava/lang/StringBuilder;
  #114 = Utf8               (Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 8270183163158333422l

  private final char start;
    descriptor: C
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final char end;
    descriptor: C
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean negated;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private transient java.lang.String iToString;
    descriptor: Ljava/lang/String;
    flags: (0x0082) ACC_PRIVATE, ACC_TRANSIENT

  private org.apache.commons.lang3.CharRange(char, char, boolean);
    descriptor: (CCZ)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=5, args_size=4
         0: aload_0
         1: invokespecial #4                  // Method java/lang/Object."<init>":()V
         4: iload_1
         5: iload_2
         6: if_icmple     17
         9: iload_1
        10: istore        4
        12: iload_2
        13: istore_1
        14: iload         4
        16: istore_2
        17: aload_0
        18: iload_1
        19: putfield      #2                  // Field start:C
        22: aload_0
        23: iload_2
        24: putfield      #1                  // Field end:C
        27: aload_0
        28: iload_3
        29: putfield      #3                  // Field negated:Z
        32: return
      LineNumberTable:
        line 67: 0
        line 68: 4
        line 69: 9
        line 70: 12
        line 71: 14
        line 74: 17
        line 75: 22
        line 76: 27
        line 77: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       5     4  temp   C
            0      33     0  this   Lorg/apache/commons/lang3/CharRange;
            0      33     1 start   C
            0      33     2   end   C
            0      33     3 negated   Z
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class org/apache/commons/lang3/CharRange, int, int, int ]
          stack = []

  public static org.apache.commons.lang3.CharRange is(char);
    descriptor: (C)Lorg/apache/commons/lang3/CharRange;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #5                  // class org/apache/commons/lang3/CharRange
         3: dup
         4: iload_0
         5: iload_0
         6: iconst_0
         7: invokespecial #6                  // Method "<init>":(CCZ)V
        10: areturn
      LineNumberTable:
        line 88: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0    ch   C

  public static org.apache.commons.lang3.CharRange isNot(char);
    descriptor: (C)Lorg/apache/commons/lang3/CharRange;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #5                  // class org/apache/commons/lang3/CharRange
         3: dup
         4: iload_0
         5: iload_0
         6: iconst_1
         7: invokespecial #6                  // Method "<init>":(CCZ)V
        10: areturn
      LineNumberTable:
        line 100: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0    ch   C

  public static org.apache.commons.lang3.CharRange isIn(char, char);
    descriptor: (CC)Lorg/apache/commons/lang3/CharRange;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #5                  // class org/apache/commons/lang3/CharRange
         3: dup
         4: iload_0
         5: iload_1
         6: iconst_0
         7: invokespecial #6                  // Method "<init>":(CCZ)V
        10: areturn
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 start   C
            0      11     1   end   C

  public static org.apache.commons.lang3.CharRange isNotIn(char, char);
    descriptor: (CC)Lorg/apache/commons/lang3/CharRange;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #5                  // class org/apache/commons/lang3/CharRange
         3: dup
         4: iload_0
         5: iload_1
         6: iconst_1
         7: invokespecial #6                  // Method "<init>":(CCZ)V
        10: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 start   C
            0      11     1   end   C

  public char getStart();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field start:C
         4: ireturn
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/CharRange;

  public char getEnd();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #1                  // Field end:C
         4: ireturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/CharRange;

  public boolean isNegated();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field negated:Z
         4: ireturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/CharRange;

  public boolean contains(char);
    descriptor: (C)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: aload_0
         2: getfield      #2                  // Field start:C
         5: if_icmplt     20
         8: iload_1
         9: aload_0
        10: getfield      #1                  // Field end:C
        13: if_icmpgt     20
        16: iconst_1
        17: goto          21
        20: iconst_0
        21: aload_0
        22: getfield      #3                  // Field negated:Z
        25: if_icmpeq     32
        28: iconst_1
        29: goto          33
        32: iconst_0
        33: ireturn
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/apache/commons/lang3/CharRange;
            0      34     1    ch   C
      StackMapTable: number_of_entries = 4
        frame_type = 20 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean contains(org.apache.commons.lang3.CharRange);
    descriptor: (Lorg/apache/commons/lang3/CharRange;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ldc           #7                  // String The Range must not be null
        11: iconst_0
        12: anewarray     #8                  // class java/lang/Object
        15: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        18: aload_0
        19: getfield      #3                  // Field negated:Z
        22: ifeq          88
        25: aload_1
        26: getfield      #3                  // Field negated:Z
        29: ifeq          60
        32: aload_0
        33: getfield      #2                  // Field start:C
        36: aload_1
        37: getfield      #2                  // Field start:C
        40: if_icmplt     58
        43: aload_0
        44: getfield      #1                  // Field end:C
        47: aload_1
        48: getfield      #1                  // Field end:C
        51: if_icmpgt     58
        54: iconst_1
        55: goto          59
        58: iconst_0
        59: ireturn
        60: aload_1
        61: getfield      #1                  // Field end:C
        64: aload_0
        65: getfield      #2                  // Field start:C
        68: if_icmplt     82
        71: aload_1
        72: getfield      #2                  // Field start:C
        75: aload_0
        76: getfield      #1                  // Field end:C
        79: if_icmple     86
        82: iconst_1
        83: goto          87
        86: iconst_0
        87: ireturn
        88: aload_1
        89: getfield      #3                  // Field negated:Z
        92: ifeq          117
        95: aload_0
        96: getfield      #2                  // Field start:C
        99: ifne          115
       102: aload_0
       103: getfield      #1                  // Field end:C
       106: ldc           #11                 // int 65535
       108: if_icmpne     115
       111: iconst_1
       112: goto          116
       115: iconst_0
       116: ireturn
       117: aload_0
       118: getfield      #2                  // Field start:C
       121: aload_1
       122: getfield      #2                  // Field start:C
       125: if_icmpgt     143
       128: aload_0
       129: getfield      #1                  // Field end:C
       132: aload_1
       133: getfield      #1                  // Field end:C
       136: if_icmplt     143
       139: iconst_1
       140: goto          144
       143: iconst_0
       144: ireturn
      LineNumberTable:
        line 182: 0
        line 183: 18
        line 184: 25
        line 185: 32
        line 187: 60
        line 189: 88
        line 190: 95
        line 192: 117
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     145     0  this   Lorg/apache/commons/lang3/CharRange;
            0     145     1 range   Lorg/apache/commons/lang3/CharRange;
      StackMapTable: number_of_entries = 14
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 48 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 0 /* same */
        frame_type = 21 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 0 /* same */
        frame_type = 26 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 0 /* same */
        frame_type = 25 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_1
         8: instanceof    #5                  // class org/apache/commons/lang3/CharRange
        11: ifne          16
        14: iconst_0
        15: ireturn
        16: aload_1
        17: checkcast     #5                  // class org/apache/commons/lang3/CharRange
        20: astore_2
        21: aload_0
        22: getfield      #2                  // Field start:C
        25: aload_2
        26: getfield      #2                  // Field start:C
        29: if_icmpne     58
        32: aload_0
        33: getfield      #1                  // Field end:C
        36: aload_2
        37: getfield      #1                  // Field end:C
        40: if_icmpne     58
        43: aload_0
        44: getfield      #3                  // Field negated:Z
        47: aload_2
        48: getfield      #3                  // Field negated:Z
        51: if_icmpne     58
        54: iconst_1
        55: goto          59
        58: iconst_0
        59: ireturn
      LineNumberTable:
        line 206: 0
        line 207: 5
        line 209: 7
        line 210: 14
        line 212: 16
        line 213: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0  this   Lorg/apache/commons/lang3/CharRange;
            0      60     1   obj   Ljava/lang/Object;
           21      39     2 other   Lorg/apache/commons/lang3/CharRange;
      StackMapTable: number_of_entries = 4
        frame_type = 7 /* same */
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 41
          locals = [ class org/apache/commons/lang3/CharRange ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: bipush        83
         2: aload_0
         3: getfield      #2                  // Field start:C
         6: iadd
         7: bipush        7
         9: aload_0
        10: getfield      #1                  // Field end:C
        13: imul
        14: iadd
        15: aload_0
        16: getfield      #3                  // Field negated:Z
        19: ifeq          26
        22: iconst_1
        23: goto          27
        26: iconst_0
        27: iadd
        28: ireturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/apache/commons/lang3/CharRange;
      StackMapTable: number_of_entries = 2
        frame_type = 90 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/apache/commons/lang3/CharRange ]
          stack = [ int, int ]

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: getfield      #12                 // Field iToString:Ljava/lang/String;
         4: ifnonnull     74
         7: new           #13                 // class java/lang/StringBuilder
        10: dup
        11: iconst_4
        12: invokespecial #14                 // Method java/lang/StringBuilder."<init>":(I)V
        15: astore_1
        16: aload_0
        17: invokevirtual #15                 // Method isNegated:()Z
        20: ifeq          30
        23: aload_1
        24: bipush        94
        26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        29: pop
        30: aload_1
        31: aload_0
        32: getfield      #2                  // Field start:C
        35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        38: pop
        39: aload_0
        40: getfield      #2                  // Field start:C
        43: aload_0
        44: getfield      #1                  // Field end:C
        47: if_icmpeq     66
        50: aload_1
        51: bipush        45
        53: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        56: pop
        57: aload_1
        58: aload_0
        59: getfield      #1                  // Field end:C
        62: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        65: pop
        66: aload_0
        67: aload_1
        68: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        71: putfield      #12                 // Field iToString:Ljava/lang/String;
        74: aload_0
        75: getfield      #12                 // Field iToString:Ljava/lang/String;
        78: areturn
      LineNumberTable:
        line 233: 0
        line 234: 7
        line 235: 16
        line 236: 23
        line 238: 30
        line 239: 39
        line 240: 50
        line 241: 57
        line 243: 66
        line 245: 74
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      58     1   buf   Ljava/lang/StringBuilder;
            0      79     0  this   Lorg/apache/commons/lang3/CharRange;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 30
          locals = [ class java/lang/StringBuilder ]
        frame_type = 35 /* same */
        frame_type = 250 /* chop */
          offset_delta = 7

  public java.util.Iterator<java.lang.Character> iterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #18                 // class org/apache/commons/lang3/CharRange$CharacterIterator
         3: dup
         4: aload_0
         5: aconst_null
         6: invokespecial #19                 // Method org/apache/commons/lang3/CharRange$CharacterIterator."<init>":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V
         9: areturn
      LineNumberTable:
        line 259: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/lang3/CharRange;
    Signature: #76                          // ()Ljava/util/Iterator<Ljava/lang/Character;>;

  static boolean access$100(org.apache.commons.lang3.CharRange);
    descriptor: (Lorg/apache/commons/lang3/CharRange;)Z
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field negated:Z
         4: ireturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0    x0   Lorg/apache/commons/lang3/CharRange;

  static char access$200(org.apache.commons.lang3.CharRange);
    descriptor: (Lorg/apache/commons/lang3/CharRange;)C
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field start:C
         4: ireturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0    x0   Lorg/apache/commons/lang3/CharRange;

  static char access$300(org.apache.commons.lang3.CharRange);
    descriptor: (Lorg/apache/commons/lang3/CharRange;)C
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #1                  // Field end:C
         4: ireturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0    x0   Lorg/apache/commons/lang3/CharRange;
}
Signature: #82                          // Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Character;>;Ljava/io/Serializable;
SourceFile: "CharRange.java"
InnerClasses:
  static #22;                             // class org/apache/commons/lang3/CharRange$1
  private static #24= #18 of #5;          // CharacterIterator=class org/apache/commons/lang3/CharRange$CharacterIterator of class org/apache/commons/lang3/CharRange
