Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/Exceptional.class
  Last modified May 29, 2022; size 1962 bytes
  SHA-256 checksum daf2a30d44afa27a95ac0d42a662e50374fad2d65d9107e3e1315990fa5027b3
  Compiled from "Outcome.scala"
public abstract class org.scalatest.Exceptional extends org.scalatest.Outcome
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // org/scalatest/Exceptional
  super_class: #4                         // org/scalatest/Outcome
  interfaces: 0, fields: 2, methods: 5, attributes: 4
Constant pool:
   #1 = Utf8               org/scalatest/Exceptional
   #2 = Class              #1             // org/scalatest/Exceptional
   #3 = Utf8               org/scalatest/Outcome
   #4 = Class              #3             // org/scalatest/Outcome
   #5 = Utf8               Outcome.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005i3Q\u0001D\u0007\u0002\"IA\u0001b\u0006\u0001\u0003\u0002\u0003\u0006I\u0001\u0007\u0005\u0006M\u0001!\ta\n\u0005\bU\u0001\u0011\r\u0011\"\u0011,\u0011\u0019\u0001\u0004\u0001)A\u0005Y!)\u0011\u0007\u0001C!e\u001d)1(\u0004E\u0001y\u0019)A\"\u0004E\u0001{!)ae\u0002C\u0001\u0013\")!j\u0002C\u0001\u0017\")aj\u0002C\u0001\u001f\"9!kBA\u0001\n\u0013\u0019&aC#yG\u0016\u0004H/[8oC2T!AD\b\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\t\u0002\u0007=\u0014xm\u0001\u0001\u0014\u0005\u0001\u0019\u0002C\u0001\u000b\u0016\u001b\u0005i\u0011B\u0001\f\u000e\u0005\u001dyU\u000f^2p[\u0016\f!!\u001a=\u0011\u0005e\u0019cB\u0001\u000e!\u001d\tYb$D\u0001\u001d\u0015\ti\u0012#\u0001\u0004=e>|GOP\u0005\u0002?\u0005)1oY1mC&\u0011\u0011EI\u0001\ba\u0006\u001c7.Y4f\u0015\u0005y\u0012B\u0001\u0013&\u0005%!\u0006N]8xC\ndWM\u0003\u0002\"E\u00051A(\u001b8jiz\"\"\u0001K\u0015\u0011\u0005Q\u0001\u0001\"B\f\u0003\u0001\u0004A\u0012!D5t\u000bb\u001cW\r\u001d;j_:\fG.F\u0001-!\tic&D\u0001#\u0013\ty#EA\u0004C_>dW-\u00198\u0002\u001d%\u001cX\t_2faRLwN\\1mA\u0005AAo\\(qi&|g.F\u00014!\riC\u0007G\u0005\u0003k\t\u0012aa\u00149uS>t\u0017f\u0001\u00018s%\u0011\u0001(\u0004\u0002\t\u0007\u0006t7-\u001a7fI&\u0011!(\u0004\u0002\u0007\r\u0006LG.\u001a3\u0002\u0017\u0015C8-\u001a9uS>t\u0017\r\u001c\t\u0003)\u001d\u00192a\u0002 B!\tis(\u0003\u0002AE\t1\u0011I\\=SK\u001a\u0004\"AQ$\u000e\u0003\rS!\u0001R#\u0002\u0005%|\'\"\u0001$\u0002\t)\fg/Y\u0005\u0003\u0011\u000e\u0013AbU3sS\u0006d\u0017N_1cY\u0016$\u0012\u0001P\u0001\u0006CB\u0004H.\u001f\u000b\u0003Q1CQ!T\u0005A\u0002a\t\u0011!Z\u0001\bk:\f\u0007\u000f\u001d7z)\t\u0019\u0004\u000bC\u0003R\u0015\u0001\u00071#A\u0002sKN\fAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\u0012\u0001\u0016\t\u0003+bk\u0011A\u0016\u0006\u0003/\u0016\u000bA\u0001\\1oO&\u0011\u0011L\u0016\u0002\u0007\u001f\nTWm\u0019;
   #9 = Utf8               ex
  #10 = Utf8               Ljava/lang/Throwable;
  #11 = Utf8               isExceptional
  #12 = Utf8               Z
  #13 = Utf8               unapply
  #14 = Utf8               (Lorg/scalatest/Outcome;)Lscala/Option;
  #15 = Utf8               (Lorg/scalatest/Outcome;)Lscala/Option<Ljava/lang/Throwable;>;
  #16 = Utf8               res
  #17 = Utf8               org/scalatest/Exceptional$
  #18 = Class              #17            // org/scalatest/Exceptional$
  #19 = Utf8               MODULE$
  #20 = Utf8               Lorg/scalatest/Exceptional$;
  #21 = NameAndType        #19:#20        // MODULE$:Lorg/scalatest/Exceptional$;
  #22 = Fieldref           #18.#21        // org/scalatest/Exceptional$.MODULE$:Lorg/scalatest/Exceptional$;
  #23 = NameAndType        #13:#14        // unapply:(Lorg/scalatest/Outcome;)Lscala/Option;
  #24 = Methodref          #18.#23        // org/scalatest/Exceptional$.unapply:(Lorg/scalatest/Outcome;)Lscala/Option;
  #25 = Utf8               Lorg/scalatest/Outcome;
  #26 = Utf8               apply
  #27 = Utf8               (Ljava/lang/Throwable;)Lorg/scalatest/Exceptional;
  #28 = Utf8               e
  #29 = NameAndType        #26:#27        // apply:(Ljava/lang/Throwable;)Lorg/scalatest/Exceptional;
  #30 = Methodref          #18.#29        // org/scalatest/Exceptional$.apply:(Ljava/lang/Throwable;)Lorg/scalatest/Exceptional;
  #31 = Utf8               ()Z
  #32 = NameAndType        #11:#12        // isExceptional:Z
  #33 = Fieldref           #2.#32         // org/scalatest/Exceptional.isExceptional:Z
  #34 = Utf8               this
  #35 = Utf8               Lorg/scalatest/Exceptional;
  #36 = Utf8               toOption
  #37 = Utf8               ()Lscala/Option;
  #38 = Utf8               ()Lscala/Option<Ljava/lang/Throwable;>;
  #39 = Utf8               scala/Some
  #40 = Class              #39            // scala/Some
  #41 = NameAndType        #9:#10         // ex:Ljava/lang/Throwable;
  #42 = Fieldref           #2.#41         // org/scalatest/Exceptional.ex:Ljava/lang/Throwable;
  #43 = Utf8               <init>
  #44 = Utf8               (Ljava/lang/Object;)V
  #45 = NameAndType        #43:#44        // "<init>":(Ljava/lang/Object;)V
  #46 = Methodref          #40.#45        // scala/Some."<init>":(Ljava/lang/Object;)V
  #47 = Utf8               (Ljava/lang/Throwable;)V
  #48 = Utf8               ()V
  #49 = NameAndType        #43:#48        // "<init>":()V
  #50 = Methodref          #4.#49         // org/scalatest/Outcome."<init>":()V
  #51 = Utf8               Code
  #52 = Utf8               LocalVariableTable
  #53 = Utf8               Signature
  #54 = Utf8               MethodParameters
  #55 = Utf8               LineNumberTable
  #56 = Utf8               SourceFile
  #57 = Utf8               RuntimeVisibleAnnotations
  #58 = Utf8               ScalaInlineInfo
  #59 = Utf8               ScalaSig
{
  private final java.lang.Throwable ex;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean isExceptional;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.Option<java.lang.Throwable> unapply(org.scalatest.Outcome);
    descriptor: (Lorg/scalatest/Outcome;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #22                 // Field org/scalatest/Exceptional$.MODULE$:Lorg/scalatest/Exceptional$;
         3: aload_0
         4: invokevirtual #24                 // Method org/scalatest/Exceptional$.unapply:(Lorg/scalatest/Outcome;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   res   Lorg/scalatest/Outcome;
    Signature: #15                          // (Lorg/scalatest/Outcome;)Lscala/Option<Ljava/lang/Throwable;>;
    MethodParameters:
      Name                           Flags
      res                            final

  public static org.scalatest.Exceptional apply(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Lorg/scalatest/Exceptional;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #22                 // Field org/scalatest/Exceptional$.MODULE$:Lorg/scalatest/Exceptional$;
         3: aload_0
         4: invokevirtual #30                 // Method org/scalatest/Exceptional$.apply:(Ljava/lang/Throwable;)Lorg/scalatest/Exceptional;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     e   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      e                              final

  public boolean isExceptional();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #33                 // Field isExceptional:Z
         4: ireturn
      LineNumberTable:
        line 265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/Exceptional;

  public scala.Option<java.lang.Throwable> toOption();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #40                 // class scala/Some
         3: dup
         4: aload_0
         5: getfield      #42                 // Field ex:Ljava/lang/Throwable;
         8: invokespecial #46                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 272: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/scalatest/Exceptional;
    Signature: #38                          // ()Lscala/Option<Ljava/lang/Throwable;>;

  public org.scalatest.Exceptional(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #42                 // Field ex:Ljava/lang/Throwable;
         5: aload_0
         6: invokespecial #50                 // Method org/scalatest/Outcome."<init>":()V
         9: aload_0
        10: iconst_1
        11: putfield      #33                 // Field isExceptional:Z
        14: return
      LineNumberTable:
        line 258: 0
        line 265: 9
        line 258: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/scalatest/Exceptional;
            0      15     1    ex   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      ex                             final
}
SourceFile: "Outcome.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005i3Q\u0001D\u0007\u0002\"IA\u0001b\u0006\u0001\u0003\u0002\u0003\u0006I\u0001\u0007\u0005\u0006M\u0001!\ta\n\u0005\bU\u0001\u0011\r\u0011\"\u0011,\u0011\u0019\u0001\u0004\u0001)A\u0005Y!)\u0011\u0007\u0001C!e\u001d)1(\u0004E\u0001y\u0019)A\"\u0004E\u0001{!)ae\u0002C\u0001\u0013\")!j\u0002C\u0001\u0017\")aj\u0002C\u0001\u001f\"9!kBA\u0001\n\u0013\u0019&aC#yG\u0016\u0004H/[8oC2T!AD\b\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\t\u0002\u0007=\u0014xm\u0001\u0001\u0014\u0005\u0001\u0019\u0002C\u0001\u000b\u0016\u001b\u0005i\u0011B\u0001\f\u000e\u0005\u001dyU\u000f^2p[\u0016\f!!\u001a=\u0011\u0005e\u0019cB\u0001\u000e!\u001d\tYb$D\u0001\u001d\u0015\ti\u0012#\u0001\u0004=e>|GOP\u0005\u0002?\u0005)1oY1mC&\u0011\u0011EI\u0001\ba\u0006\u001c7.Y4f\u0015\u0005y\u0012B\u0001\u0013&\u0005%!\u0006N]8xC\ndWM\u0003\u0002\"E\u00051A(\u001b8jiz\"\"\u0001K\u0015\u0011\u0005Q\u0001\u0001\"B\f\u0003\u0001\u0004A\u0012!D5t\u000bb\u001cW\r\u001d;j_:\fG.F\u0001-!\tic&D\u0001#\u0013\ty#EA\u0004C_>dW-\u00198\u0002\u001d%\u001cX\t_2faRLwN\\1mA\u0005AAo\\(qi&|g.F\u00014!\riC\u0007G\u0005\u0003k\t\u0012aa\u00149uS>t\u0017f\u0001\u00018s%\u0011\u0001(\u0004\u0002\t\u0007\u0006t7-\u001a7fI&\u0011!(\u0004\u0002\u0007\r\u0006LG.\u001a3\u0002\u0017\u0015C8-\u001a9uS>t\u0017\r\u001c\t\u0003)\u001d\u00192a\u0002 B!\tis(\u0003\u0002AE\t1\u0011I\\=SK\u001a\u0004\"AQ$\u000e\u0003\rS!\u0001R#\u0002\u0005%|\'\"\u0001$\u0002\t)\fg/Y\u0005\u0003\u0011\u000e\u0013AbU3sS\u0006d\u0017N_1cY\u0016$\u0012\u0001P\u0001\u0006CB\u0004H.\u001f\u000b\u0003Q1CQ!T\u0005A\u0002a\t\u0011!Z\u0001\bk:\f\u0007\u000f\u001d7z)\t\u0019\u0004\u000bC\u0003R\u0015\u0001\u00071#A\u0002sKN\fAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\u0012\u0001\u0016\t\u0003+bk\u0011A\u0016\u0006\u0003/\u0016\u000bA\u0001\\1oO&\u0011\u0011L\u0016\u0002\u0007\u001f\nTWm\u0019;"
    )
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 00 00 03 00 2B 00 2F 00 00 0B 00 1F 00 00 24
   00 25 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
