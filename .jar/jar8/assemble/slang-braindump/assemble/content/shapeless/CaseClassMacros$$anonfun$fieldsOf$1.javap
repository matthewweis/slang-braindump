Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/shapeless/CaseClassMacros$$anonfun$fieldsOf$1.class
  Last modified May 29, 2022; size 3669 bytes
  SHA-256 checksum 663ffddb9b65379f7ae7678fc29abff11c44175db9555a438b3f98862e518378
  Compiled from "generic.scala"
public final class shapeless.CaseClassMacros$$anonfun$fieldsOf$1 extends scala.runtime.AbstractPartialFunction<scala.reflect.api.Symbols$SymbolApi, scala.Tuple2<scala.reflect.api.Names$TermNameApi, scala.reflect.api.Types$TypeApi>> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // shapeless/CaseClassMacros$$anonfun$fieldsOf$1
  super_class: #5                         // scala/runtime/AbstractPartialFunction
  interfaces: 1, fields: 3, methods: 5, attributes: 6
Constant pool:
    #1 = Utf8               shapeless/CaseClassMacros$$anonfun$fieldsOf$1
    #2 = Class              #1            // shapeless/CaseClassMacros$$anonfun$fieldsOf$1
    #3 = Utf8               Lscala/runtime/AbstractPartialFunction<Lscala/reflect/api/Symbols$SymbolApi;Lscala/Tuple2<Lscala/reflect/api/Names$TermNameApi;Lscala/reflect/api/Types$TypeApi;>;>;Ljava/io/Serializable;
    #4 = Utf8               scala/runtime/AbstractPartialFunction
    #5 = Class              #4            // scala/runtime/AbstractPartialFunction
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               generic.scala
    #9 = Utf8               shapeless/CaseClassMacros
   #10 = Class              #9            // shapeless/CaseClassMacros
   #11 = Utf8               fieldsOf
   #12 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
   #13 = NameAndType        #11:#12       // fieldsOf:(Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
   #14 = Utf8               scala/reflect/api/Names$NameApi
   #15 = Class              #14           // scala/reflect/api/Names$NameApi
   #16 = Utf8               scala/reflect/api/Names
   #17 = Class              #16           // scala/reflect/api/Names
   #18 = Utf8               NameApi
   #19 = Utf8               scala/reflect/api/Names$TermNameApi
   #20 = Class              #19           // scala/reflect/api/Names$TermNameApi
   #21 = Utf8               TermNameApi
   #22 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #23 = Class              #22           // scala/reflect/api/Symbols$SymbolApi
   #24 = Utf8               scala/reflect/api/Symbols
   #25 = Class              #24           // scala/reflect/api/Symbols
   #26 = Utf8               SymbolApi
   #27 = Utf8               scala/reflect/api/Symbols$TermSymbolApi
   #28 = Class              #27           // scala/reflect/api/Symbols$TermSymbolApi
   #29 = Utf8               TermSymbolApi
   #30 = Utf8               scala/reflect/api/Types$TypeApi
   #31 = Class              #30           // scala/reflect/api/Types$TypeApi
   #32 = Utf8               scala/reflect/api/Types
   #33 = Class              #32           // scala/reflect/api/Types
   #34 = Utf8               TypeApi
   #35 = Utf8               serialVersionUID
   #36 = Utf8               J
   #37 = Long               0l
   #39 = Utf8               $outer
   #40 = Utf8               Lshapeless/CaseClassMacros;
   #41 = Utf8               tpe$1
   #42 = Utf8               Lscala/reflect/api/Types$TypeApi;
   #43 = Utf8               applyOrElse
   #44 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
   #45 = Utf8               <A1:Lscala/reflect/api/Symbols$SymbolApi;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
   #46 = Utf8               x1
   #47 = Utf8               default
   #48 = NameAndType        #39:#40       // $outer:Lshapeless/CaseClassMacros;
   #49 = Fieldref           #2.#48        // shapeless/CaseClassMacros$$anonfun$fieldsOf$1.$outer:Lshapeless/CaseClassMacros;
   #50 = Utf8               c
   #51 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #52 = NameAndType        #50:#51       // c:()Lscala/reflect/macros/whitebox/Context;
   #53 = InterfaceMethodref #10.#52       // shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
   #54 = Utf8               scala/reflect/macros/whitebox/Context
   #55 = Class              #54           // scala/reflect/macros/whitebox/Context
   #56 = Utf8               universe
   #57 = Utf8               ()Lscala/reflect/macros/Universe;
   #58 = NameAndType        #56:#57       // universe:()Lscala/reflect/macros/Universe;
   #59 = InterfaceMethodref #55.#58       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
   #60 = Utf8               scala/reflect/macros/Universe
   #61 = Class              #60           // scala/reflect/macros/Universe
   #62 = Utf8               TermSymbolTag
   #63 = Utf8               ()Lscala/reflect/ClassTag;
   #64 = NameAndType        #62:#63       // TermSymbolTag:()Lscala/reflect/ClassTag;
   #65 = Methodref          #61.#64       // scala/reflect/macros/Universe.TermSymbolTag:()Lscala/reflect/ClassTag;
   #66 = Utf8               scala/reflect/ClassTag
   #67 = Class              #66           // scala/reflect/ClassTag
   #68 = Utf8               unapply
   #69 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #70 = NameAndType        #68:#69       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #71 = InterfaceMethodref #67.#70       // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
   #72 = Utf8               scala/Option
   #73 = Class              #72           // scala/Option
   #74 = Utf8               isEmpty
   #75 = Utf8               ()Z
   #76 = NameAndType        #74:#75       // isEmpty:()Z
   #77 = Methodref          #73.#76       // scala/Option.isEmpty:()Z
   #78 = Utf8               get
   #79 = Utf8               ()Ljava/lang/Object;
   #80 = NameAndType        #78:#79       // get:()Ljava/lang/Object;
   #81 = Methodref          #73.#80       // scala/Option.get:()Ljava/lang/Object;
   #82 = Utf8               isCaseAccessorLike
   #83 = Utf8               (Lscala/reflect/api/Symbols$TermSymbolApi;)Z
   #84 = NameAndType        #82:#83       // isCaseAccessorLike:(Lscala/reflect/api/Symbols$TermSymbolApi;)Z
   #85 = InterfaceMethodref #10.#84       // shapeless/CaseClassMacros.isCaseAccessorLike:(Lscala/reflect/api/Symbols$TermSymbolApi;)Z
   #86 = Utf8               scala/Tuple2
   #87 = Class              #86           // scala/Tuple2
   #88 = Utf8               name
   #89 = Utf8               ()Lscala/reflect/api/Names$NameApi;
   #90 = NameAndType        #88:#89       // name:()Lscala/reflect/api/Names$NameApi;
   #91 = InterfaceMethodref #23.#90       // scala/reflect/api/Symbols$SymbolApi.name:()Lscala/reflect/api/Names$NameApi;
   #92 = Utf8               toTermName
   #93 = Utf8               ()Lscala/reflect/api/Names$TermNameApi;
   #94 = NameAndType        #92:#93       // toTermName:()Lscala/reflect/api/Names$TermNameApi;
   #95 = Methodref          #15.#94       // scala/reflect/api/Names$NameApi.toTermName:()Lscala/reflect/api/Names$TermNameApi;
   #96 = NameAndType        #41:#42       // tpe$1:Lscala/reflect/api/Types$TypeApi;
   #97 = Fieldref           #2.#96        // shapeless/CaseClassMacros$$anonfun$fieldsOf$1.tpe$1:Lscala/reflect/api/Types$TypeApi;
   #98 = Utf8               typeSignatureIn
   #99 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #100 = NameAndType        #98:#99       // typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #101 = InterfaceMethodref #23.#100      // scala/reflect/api/Symbols$SymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #102 = Utf8               finalResultType
  #103 = Utf8               ()Lscala/reflect/api/Types$TypeApi;
  #104 = NameAndType        #102:#103     // finalResultType:()Lscala/reflect/api/Types$TypeApi;
  #105 = Methodref          #31.#104      // scala/reflect/api/Types$TypeApi.finalResultType:()Lscala/reflect/api/Types$TypeApi;
  #106 = Utf8               <init>
  #107 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #108 = NameAndType        #106:#107     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #109 = Methodref          #87.#108      // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #110 = Utf8               scala/Function1
  #111 = Class              #110          // scala/Function1
  #112 = Utf8               apply
  #113 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #114 = NameAndType        #112:#113     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #115 = InterfaceMethodref #111.#114     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #116 = Utf8               this
  #117 = Utf8               Lshapeless/CaseClassMacros$$anonfun$fieldsOf$1;
  #118 = Utf8               Lscala/reflect/api/Symbols$SymbolApi;
  #119 = Utf8               Lscala/Function1;
  #120 = Utf8               java/lang/Object
  #121 = Class              #120          // java/lang/Object
  #122 = Utf8               isDefinedAt
  #123 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Z
  #124 = Utf8               (Ljava/lang/Object;)Z
  #125 = Utf8               x
  #126 = NameAndType        #122:#123     // isDefinedAt:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #127 = Methodref          #2.#126       // shapeless/CaseClassMacros$$anonfun$fieldsOf$1.isDefinedAt:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #128 = Utf8               Ljava/lang/Object;
  #129 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #130 = NameAndType        #43:#44       // applyOrElse:(Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
  #131 = Methodref          #2.#130       // shapeless/CaseClassMacros$$anonfun$fieldsOf$1.applyOrElse:(Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
  #132 = Utf8               (Lshapeless/CaseClassMacros;Lscala/reflect/api/Types$TypeApi;)V
  #133 = Utf8               ()V
  #134 = NameAndType        #106:#133     // "<init>":()V
  #135 = Methodref          #5.#134       // scala/runtime/AbstractPartialFunction."<init>":()V
  #136 = Utf8               ConstantValue
  #137 = Utf8               Code
  #138 = Utf8               StackMapTable
  #139 = Utf8               LineNumberTable
  #140 = Utf8               LocalVariableTable
  #141 = Utf8               Signature
  #142 = Utf8               MethodParameters
  #143 = Utf8               InnerClasses
  #144 = Utf8               EnclosingMethod
  #145 = Utf8               SourceFile
  #146 = Utf8               ScalaInlineInfo
  #147 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 0l

  private final shapeless.CaseClassMacros $outer;
    descriptor: Lshapeless/CaseClassMacros;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private final scala.reflect.api.Types$TypeApi tpe$1;
    descriptor: Lscala/reflect/api/Types$TypeApi;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final <A1 extends scala.reflect.api.Symbols$SymbolApi, B1 extends java.lang.Object> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    descriptor: (Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=6, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: ifnull        105
         8: aload_0
         9: getfield      #49                 // Field $outer:Lshapeless/CaseClassMacros;
        12: invokeinterface #53,  1           // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        17: invokeinterface #59,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        22: invokevirtual #65                 // Method scala/reflect/macros/Universe.TermSymbolTag:()Lscala/reflect/ClassTag;
        25: aload         4
        27: invokeinterface #71,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        32: astore        5
        34: aload         5
        36: invokevirtual #77                 // Method scala/Option.isEmpty:()Z
        39: ifne          102
        42: aload         5
        44: invokevirtual #81                 // Method scala/Option.get:()Ljava/lang/Object;
        47: ifnull        102
        50: aload_0
        51: getfield      #49                 // Field $outer:Lshapeless/CaseClassMacros;
        54: aload         4
        56: checkcast     #28                 // class scala/reflect/api/Symbols$TermSymbolApi
        59: invokeinterface #85,  2           // InterfaceMethod shapeless/CaseClassMacros.isCaseAccessorLike:(Lscala/reflect/api/Symbols$TermSymbolApi;)Z
        64: ifeq          102
        67: new           #87                 // class scala/Tuple2
        70: dup
        71: aload         4
        73: invokeinterface #91,  1           // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.name:()Lscala/reflect/api/Names$NameApi;
        78: invokevirtual #95                 // Method scala/reflect/api/Names$NameApi.toTermName:()Lscala/reflect/api/Names$TermNameApi;
        81: aload         4
        83: aload_0
        84: getfield      #97                 // Field tpe$1:Lscala/reflect/api/Types$TypeApi;
        87: invokeinterface #101,  2          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
        92: invokevirtual #105                // Method scala/reflect/api/Types$TypeApi.finalResultType:()Lscala/reflect/api/Types$TypeApi;
        95: invokespecial #109                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        98: astore_3
        99: goto          119
       102: goto          108
       105: goto          108
       108: aload_2
       109: aload_1
       110: invokeinterface #115,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       115: astore_3
       116: goto          119
       119: aload_3
       120: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 102
          locals = [ top, class scala/reflect/api/Symbols$SymbolApi, class scala/Option ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class shapeless/CaseClassMacros$$anonfun$fieldsOf$1, class scala/reflect/api/Symbols$SymbolApi, class scala/Function1, class java/lang/Object, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 355: 0
        line 356: 3
        line 355: 42
        line 356: 50
        line 357: 67
        line 356: 102
        line 355: 108
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     121     0  this   Lshapeless/CaseClassMacros$$anonfun$fieldsOf$1;
            0     121     1    x1   Lscala/reflect/api/Symbols$SymbolApi;
            0     121     2 default   Lscala/Function1;
    Signature: #45                          // <A1:Lscala/reflect/api/Symbols$SymbolApi;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      x1                             final
      default                        final

  public final boolean isDefinedAt(scala.reflect.api.Symbols$SymbolApi);
    descriptor: (Lscala/reflect/api/Symbols$SymbolApi;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        71
         6: aload_0
         7: getfield      #49                 // Field $outer:Lshapeless/CaseClassMacros;
        10: invokeinterface #53,  1           // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        15: invokeinterface #59,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        20: invokevirtual #65                 // Method scala/reflect/macros/Universe.TermSymbolTag:()Lscala/reflect/ClassTag;
        23: aload_3
        24: invokeinterface #71,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        29: astore        4
        31: aload         4
        33: invokevirtual #77                 // Method scala/Option.isEmpty:()Z
        36: ifne          68
        39: aload         4
        41: invokevirtual #81                 // Method scala/Option.get:()Ljava/lang/Object;
        44: ifnull        68
        47: aload_0
        48: getfield      #49                 // Field $outer:Lshapeless/CaseClassMacros;
        51: aload_3
        52: checkcast     #28                 // class scala/reflect/api/Symbols$TermSymbolApi
        55: invokeinterface #85,  2           // InterfaceMethod shapeless/CaseClassMacros.isCaseAccessorLike:(Lscala/reflect/api/Symbols$TermSymbolApi;)Z
        60: ifeq          68
        63: iconst_1
        64: istore_2
        65: goto          79
        68: goto          74
        71: goto          74
        74: iconst_0
        75: istore_2
        76: goto          79
        79: iload_2
        80: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 68
          locals = [ top, class scala/reflect/api/Symbols$SymbolApi, class scala/Option ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class shapeless/CaseClassMacros$$anonfun$fieldsOf$1, class scala/reflect/api/Symbols$SymbolApi, int, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 355: 0
        line 356: 2
        line 355: 39
        line 356: 47
        line 357: 63
        line 356: 68
        line 355: 74
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      81     0  this   Lshapeless/CaseClassMacros$$anonfun$fieldsOf$1;
            0      81     1    x1   Lscala/reflect/api/Symbols$SymbolApi;
    MethodParameters:
      Name                           Flags
      x1                             final

  public final boolean isDefinedAt(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #23                 // class scala/reflect/api/Symbols$SymbolApi
         5: invokevirtual #127                // Method isDefinedAt:(Lscala/reflect/api/Symbols$SymbolApi;)Z
         8: ireturn
      LineNumberTable:
        line 355: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lshapeless/CaseClassMacros$$anonfun$fieldsOf$1;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #23                 // class scala/reflect/api/Symbols$SymbolApi
         5: aload_2
         6: invokevirtual #131                // Method applyOrElse:(Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 355: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lshapeless/CaseClassMacros$$anonfun$fieldsOf$1;
            0      10     1     x   Ljava/lang/Object;
            0      10     2 default   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public shapeless.CaseClassMacros$$anonfun$fieldsOf$1(shapeless.CaseClassMacros, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/CaseClassMacros;Lscala/reflect/api/Types$TypeApi;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #49                 // Field $outer:Lshapeless/CaseClassMacros;
        11: aload_0
        12: aload_2
        13: putfield      #97                 // Field tpe$1:Lscala/reflect/api/Types$TypeApi;
        16: aload_0
        17: invokespecial #135                // Method scala/runtime/AbstractPartialFunction."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 355: 0
        line 351: 11
        line 355: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lshapeless/CaseClassMacros$$anonfun$fieldsOf$1;
            0      21     1 $outer   Lshapeless/CaseClassMacros;
            0      21     2 tpe$1   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      tpe$1                          final
}
InnerClasses:
  public abstract #18= #15 of #17;        // NameApi=class scala/reflect/api/Names$NameApi of class scala/reflect/api/Names
  public #21= #20 of #17;                 // TermNameApi=class scala/reflect/api/Names$TermNameApi of class scala/reflect/api/Names
  public #26= #23 of #25;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public #29= #28 of #25;                 // TermSymbolApi=class scala/reflect/api/Symbols$TermSymbolApi of class scala/reflect/api/Symbols
  public abstract #34= #31 of #33;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public final #2;                        // class shapeless/CaseClassMacros$$anonfun$fieldsOf$1
EnclosingMethod: #10.#13                // shapeless.CaseClassMacros.fieldsOf
Signature: #3                           // Lscala/runtime/AbstractPartialFunction<Lscala/reflect/api/Symbols$SymbolApi;Lscala/Tuple2<Lscala/reflect/api/Names$TermNameApi;Lscala/reflect/api/Types$TypeApi;>;>;Ljava/io/Serializable;
SourceFile: "generic.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 6A 00 84 01 00 2B 00 81 01 00 2B
   00 2C 01 00 7A 00 7C 01 00 7A 00 7B 01
  Scala: length = 0x0 (unknown attribute)

