Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalactic/ExistsMacroBool.class
  Last modified May 29, 2022; size 5539 bytes
  SHA-256 checksum 882e84221483baf6e55cc4871a5f7f950d9404a0491c8e4b82bf85915849306d
  Compiled from "Bool.scala"
public class org.scalactic.ExistsMacroBool implements org.scalactic.Bool
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalactic/ExistsMacroBool
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 22, attributes: 4
Constant pool:
    #1 = Utf8               org/scalactic/ExistsMacroBool
    #2 = Class              #1            // org/scalactic/ExistsMacroBool
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/scalactic/Bool
    #6 = Class              #5            // org/scalactic/Bool
    #7 = Utf8               Bool.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005e3Q!\u0005\n\u0001%YA\u0001\"\t\u0001\u0003\u0002\u0003\u0006Ia\t\u0005\tM\u0001\u0011\t\u0011)A\u0005G!Aq\u0005\u0001B\u0001B\u0003%\u0001\u0006\u0003\u0005,\u0001\t\u0015\r\u0011\"\u0001-\u0011!\u0001\u0004A!A!\u0002\u0013i\u0003\"B\u0019\u0001\t\u0003\u0011\u0004b\u0002\u001d\u0001\u0005\u0004%\t!\u000f\u0005\u0007u\u0001\u0001\u000b\u0011\u0002\u0015\t\u000bm\u0002A\u0011\u0001\u001f\t\u000b!\u0003A\u0011\u0001\u001f\t\u000b%\u0003A\u0011\u0001\u001f\t\u000b)\u0003A\u0011\u0001\u001f\t\u000b-\u0003A\u0011\u0001\'\t\u000bY\u0003A\u0011\u0001\'\t\u000b]\u0003A\u0011\u0001\'\t\u000ba\u0003A\u0011\u0001\'\u0003\u001f\u0015C\u0018n\u001d;t\u001b\u0006\u001c\'o\u001c\"p_2T!a\u0005\u000b\u0002\u0013M\u001c\u0017\r\\1di&\u001c\'\"A\u000b\u0002\u0007=\u0014xmE\u0002\u0001/u\u0001\"\u0001G\u000e\u000e\u0003eQ\u0011AG\u0001\u0006g\u000e\fG.Y\u0005\u00039e\u0011a!\u00118z%\u00164\u0007C\u0001\u0010 \u001b\u0005\u0011\u0012B\u0001\u0011\u0013\u0005\u0011\u0011un\u001c7\u0002\t1,g\r^\u0002\u0001!\tAB%\u0003\u0002&3\t\u0019\u0011I\\=\u0002\u000bILw\r\u001b;\u0002\u0015\u0015D\bO]3tg&|g\u000e\u0005\u0002\u0019S%\u0011!&\u0007\u0002\b\u0005>|G.Z1o\u0003)\u0001(/\u001a;uS\u001aLWM]\u000b\u0002[A\u0011aDL\u0005\u0003_I\u0011!\u0002\u0015:fiRLg-[3s\u0003-\u0001(/\u001a;uS\u001aLWM\u001d\u0011\u0002\rqJg.\u001b;?)\u0015\u0019D\'\u000e\u001c8!\tq\u0002\u0001C\u0003\"\r\u0001\u00071\u0005C\u0003\'\r\u0001\u00071\u0005C\u0003(\r\u0001\u0007\u0001\u0006C\u0003,\r\u0001\u0007Q&A\u0003wC2,X-F\u0001)\u0003\u00191\u0018\r\\;fA\u0005\t\"/Y<GC&dWO]3NKN\u001c\u0018mZ3\u0016\u0003u\u0002\"AP#\u000f\u0005}\u001a\u0005C\u0001!\u001a\u001b\u0005\t%B\u0001\"#\u0003\u0019a$o\\8u}%\u0011A)G\u0001\u0007!J,G-\u001a4\n\u0005\u0019;%AB*ue&twM\u0003\u0002E3\u0005A\"/Y<OK\u001e\fG/\u001a3GC&dWO]3NKN\u001c\u0018mZ3\u00029I\fw/T5e\'\u0016tG/\u001a8dK\u001a\u000b\u0017\u000e\\;sK6+7o]1hK\u0006\u0019#/Y<NS\u0012\u001cVM\u001c;f]\u000e,g*Z4bi\u0016$g)Y5mkJ,W*Z:tC\u001e,\u0017A\u00054bS2,(/Z\'fgN\fw-Z!sON,\u0012!\u0014\t\u0004\u001dN\u001bcBA(R\u001d\t\u0001\u0005+C\u0001\u001b\u0013\t\u0011\u0016$A\u0004qC\u000e\\\u0017mZ3\n\u0005Q+&AC%oI\u0016DX\rZ*fc*\u0011!+G\u0001\u001a]\u0016<\u0017\r^3e\r\u0006LG.\u001e:f\u001b\u0016\u001c8/Y4f\u0003J<7/A\u000fnS\u0012\u001cVM\u001c;f]\u000e,g)Y5mkJ,W*Z:tC\u001e,\u0017I]4t\u0003\u0011j\u0017\u000eZ*f]R,gnY3OK\u001e\fG/\u001a3GC&dWO]3NKN\u001c\u0018mZ3Be\u001e\u001c\b
   #11 = Utf8               left
   #12 = Utf8               Ljava/lang/Object;
   #13 = Utf8               right
   #14 = Utf8               prettifier
   #15 = Utf8               Lorg/scalactic/Prettifier;
   #16 = Utf8               value
   #17 = Utf8               Z
   #18 = Utf8               analysis
   #19 = Utf8               Lscala/collection/immutable/IndexedSeq;
   #20 = Utf8               Lscala/collection/immutable/IndexedSeq<Ljava/lang/String;>;
   #21 = Utf8               bitmap$0
   #22 = Utf8               failureMessage
   #23 = Utf8               ()Ljava/lang/String;
   #24 = Utf8               failureMessage$
   #25 = Utf8               (Lorg/scalactic/Bool;)Ljava/lang/String;
   #26 = NameAndType        #24:#25       // failureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
   #27 = InterfaceMethodref #6.#26        // org/scalactic/Bool.failureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
   #28 = Utf8               this
   #29 = Utf8               Lorg/scalactic/ExistsMacroBool;
   #30 = Utf8               negatedFailureMessage
   #31 = Utf8               negatedFailureMessage$
   #32 = NameAndType        #31:#25       // negatedFailureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
   #33 = InterfaceMethodref #6.#32        // org/scalactic/Bool.negatedFailureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
   #34 = Utf8               midSentenceFailureMessage
   #35 = Utf8               midSentenceFailureMessage$
   #36 = NameAndType        #35:#25       // midSentenceFailureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
   #37 = InterfaceMethodref #6.#36        // org/scalactic/Bool.midSentenceFailureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
   #38 = Utf8               midSentenceNegatedFailureMessage
   #39 = Utf8               midSentenceNegatedFailureMessage$
   #40 = NameAndType        #39:#25       // midSentenceNegatedFailureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
   #41 = InterfaceMethodref #6.#40        // org/scalactic/Bool.midSentenceNegatedFailureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
   #42 = Utf8               $amp$amp
   #43 = Utf8               (Lscala/Function0;)Lorg/scalactic/Bool;
   #44 = Utf8               (Lscala/Function0<Lorg/scalactic/Bool;>;)Lorg/scalactic/Bool;
   #45 = Utf8               bool
   #46 = Utf8               $amp$amp$
   #47 = Utf8               (Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
   #48 = NameAndType        #46:#47       // $amp$amp$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
   #49 = InterfaceMethodref #6.#48        // org/scalactic/Bool.$amp$amp$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
   #50 = Utf8               Lscala/Function0;
   #51 = Utf8               $amp
   #52 = Utf8               $amp$
   #53 = NameAndType        #52:#47       // $amp$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
   #54 = InterfaceMethodref #6.#53        // org/scalactic/Bool.$amp$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
   #55 = Utf8               $bar$bar
   #56 = Utf8               $bar$bar$
   #57 = NameAndType        #56:#47       // $bar$bar$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
   #58 = InterfaceMethodref #6.#57        // org/scalactic/Bool.$bar$bar$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
   #59 = Utf8               $bar
   #60 = Utf8               $bar$
   #61 = NameAndType        #60:#47       // $bar$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
   #62 = InterfaceMethodref #6.#61        // org/scalactic/Bool.$bar$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
   #63 = Utf8               unary_$bang
   #64 = Utf8               ()Lorg/scalactic/Bool;
   #65 = Utf8               unary_$bang$
   #66 = Utf8               (Lorg/scalactic/Bool;)Lorg/scalactic/Bool;
   #67 = NameAndType        #65:#66       // unary_$bang$:(Lorg/scalactic/Bool;)Lorg/scalactic/Bool;
   #68 = InterfaceMethodref #6.#67        // org/scalactic/Bool.unary_$bang$:(Lorg/scalactic/Bool;)Lorg/scalactic/Bool;
   #69 = Utf8               analysis$lzycompute
   #70 = Utf8               ()Lscala/collection/immutable/IndexedSeq;
   #71 = Utf8               ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/String;>;
   #72 = NameAndType        #21:#17       // bitmap$0:Z
   #73 = Fieldref           #2.#72        // org/scalactic/ExistsMacroBool.bitmap$0:Z
   #74 = Utf8               analysis$
   #75 = Utf8               (Lorg/scalactic/Bool;)Lscala/collection/immutable/IndexedSeq;
   #76 = NameAndType        #74:#75       // analysis$:(Lorg/scalactic/Bool;)Lscala/collection/immutable/IndexedSeq;
   #77 = InterfaceMethodref #6.#76        // org/scalactic/Bool.analysis$:(Lorg/scalactic/Bool;)Lscala/collection/immutable/IndexedSeq;
   #78 = NameAndType        #18:#19       // analysis:Lscala/collection/immutable/IndexedSeq;
   #79 = Fieldref           #2.#78        // org/scalactic/ExistsMacroBool.analysis:Lscala/collection/immutable/IndexedSeq;
   #80 = Utf8               java/lang/Throwable
   #81 = Class              #80           // java/lang/Throwable
   #82 = NameAndType        #69:#70       // analysis$lzycompute:()Lscala/collection/immutable/IndexedSeq;
   #83 = Methodref          #2.#82        // org/scalactic/ExistsMacroBool.analysis$lzycompute:()Lscala/collection/immutable/IndexedSeq;
   #84 = Utf8               scala/collection/immutable/IndexedSeq
   #85 = Class              #84           // scala/collection/immutable/IndexedSeq
   #86 = Utf8               ()Lorg/scalactic/Prettifier;
   #87 = NameAndType        #14:#15       // prettifier:Lorg/scalactic/Prettifier;
   #88 = Fieldref           #2.#87        // org/scalactic/ExistsMacroBool.prettifier:Lorg/scalactic/Prettifier;
   #89 = Utf8               ()Z
   #90 = NameAndType        #16:#17       // value:Z
   #91 = Fieldref           #2.#90        // org/scalactic/ExistsMacroBool.value:Z
   #92 = Utf8               rawFailureMessage
   #93 = Utf8               org/scalactic/Resources$
   #94 = Class              #93           // org/scalactic/Resources$
   #95 = Utf8               MODULE$
   #96 = Utf8               Lorg/scalactic/Resources$;
   #97 = NameAndType        #95:#96       // MODULE$:Lorg/scalactic/Resources$;
   #98 = Fieldref           #94.#97       // org/scalactic/Resources$.MODULE$:Lorg/scalactic/Resources$;
   #99 = Utf8               rawDidNotContain
  #100 = NameAndType        #99:#23       // rawDidNotContain:()Ljava/lang/String;
  #101 = Methodref          #94.#100      // org/scalactic/Resources$.rawDidNotContain:()Ljava/lang/String;
  #102 = Utf8               rawNegatedFailureMessage
  #103 = Utf8               rawContained
  #104 = NameAndType        #103:#23      // rawContained:()Ljava/lang/String;
  #105 = Methodref          #94.#104      // org/scalactic/Resources$.rawContained:()Ljava/lang/String;
  #106 = Utf8               rawMidSentenceFailureMessage
  #107 = NameAndType        #92:#23       // rawFailureMessage:()Ljava/lang/String;
  #108 = Methodref          #2.#107       // org/scalactic/ExistsMacroBool.rawFailureMessage:()Ljava/lang/String;
  #109 = Utf8               rawMidSentenceNegatedFailureMessage
  #110 = NameAndType        #102:#23      // rawNegatedFailureMessage:()Ljava/lang/String;
  #111 = Methodref          #2.#110       // org/scalactic/ExistsMacroBool.rawNegatedFailureMessage:()Ljava/lang/String;
  #112 = Utf8               failureMessageArgs
  #113 = Utf8               ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;
  #114 = Utf8               scala/package$
  #115 = Class              #114          // scala/package$
  #116 = Utf8               Lscala/package$;
  #117 = NameAndType        #95:#116      // MODULE$:Lscala/package$;
  #118 = Fieldref           #115.#117     // scala/package$.MODULE$:Lscala/package$;
  #119 = Utf8               Vector
  #120 = Utf8               ()Lscala/collection/immutable/Vector$;
  #121 = NameAndType        #119:#120     // Vector:()Lscala/collection/immutable/Vector$;
  #122 = Methodref          #115.#121     // scala/package$.Vector:()Lscala/collection/immutable/Vector$;
  #123 = Utf8               scala/runtime/ScalaRunTime$
  #124 = Class              #123          // scala/runtime/ScalaRunTime$
  #125 = Utf8               Lscala/runtime/ScalaRunTime$;
  #126 = NameAndType        #95:#125      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #127 = Fieldref           #124.#126     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #128 = NameAndType        #11:#12       // left:Ljava/lang/Object;
  #129 = Fieldref           #2.#128       // org/scalactic/ExistsMacroBool.left:Ljava/lang/Object;
  #130 = NameAndType        #13:#12       // right:Ljava/lang/Object;
  #131 = Fieldref           #2.#130       // org/scalactic/ExistsMacroBool.right:Ljava/lang/Object;
  #132 = Utf8               genericWrapArray
  #133 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #134 = NameAndType        #132:#133     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #135 = Methodref          #124.#134     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #136 = Utf8               scala/collection/immutable/Vector$
  #137 = Class              #136          // scala/collection/immutable/Vector$
  #138 = Utf8               apply
  #139 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #140 = NameAndType        #138:#139     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #141 = Methodref          #137.#140     // scala/collection/immutable/Vector$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #142 = Utf8               negatedFailureMessageArgs
  #143 = Utf8               midSentenceFailureMessageArgs
  #144 = NameAndType        #112:#70      // failureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #145 = Methodref          #2.#144       // org/scalactic/ExistsMacroBool.failureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #146 = Utf8               midSentenceNegatedFailureMessageArgs
  #147 = NameAndType        #142:#70      // negatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #148 = Methodref          #2.#147       // org/scalactic/ExistsMacroBool.negatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #149 = Utf8               <init>
  #150 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;ZLorg/scalactic/Prettifier;)V
  #151 = Utf8               expression
  #152 = Utf8               ()V
  #153 = NameAndType        #149:#152     // "<init>":()V
  #154 = Methodref          #4.#153       // java/lang/Object."<init>":()V
  #155 = Utf8               $init$
  #156 = Utf8               (Lorg/scalactic/Bool;)V
  #157 = NameAndType        #155:#156     // $init$:(Lorg/scalactic/Bool;)V
  #158 = InterfaceMethodref #6.#157       // org/scalactic/Bool.$init$:(Lorg/scalactic/Bool;)V
  #159 = Utf8               Signature
  #160 = Utf8               Code
  #161 = Utf8               LineNumberTable
  #162 = Utf8               LocalVariableTable
  #163 = Utf8               MethodParameters
  #164 = Utf8               StackMapTable
  #165 = Utf8               SourceFile
  #166 = Utf8               RuntimeVisibleAnnotations
  #167 = Utf8               ScalaInlineInfo
  #168 = Utf8               ScalaSig
{
  private final java.lang.Object left;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.Object right;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.scalactic.Prettifier prettifier;
    descriptor: Lorg/scalactic/Prettifier;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean value;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private scala.collection.immutable.IndexedSeq<java.lang.String> analysis;
    descriptor: Lscala/collection/immutable/IndexedSeq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #20                          // Lscala/collection/immutable/IndexedSeq<Ljava/lang/String;>;

  private volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public java.lang.String failureMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #27                 // InterfaceMethod org/scalactic/Bool.failureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;

  public java.lang.String negatedFailureMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #33                 // InterfaceMethod org/scalactic/Bool.negatedFailureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;

  public java.lang.String midSentenceFailureMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #37                 // InterfaceMethod org/scalactic/Bool.midSentenceFailureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;

  public java.lang.String midSentenceNegatedFailureMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #41                 // InterfaceMethod org/scalactic/Bool.midSentenceNegatedFailureMessage$:(Lorg/scalactic/Bool;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;

  public org.scalactic.Bool $amp$amp(scala.Function0<org.scalactic.Bool>);
    descriptor: (Lscala/Function0;)Lorg/scalactic/Bool;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #49                 // InterfaceMethod org/scalactic/Bool.$amp$amp$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
         5: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalactic/ExistsMacroBool;
            0       6     1  bool   Lscala/Function0;
    Signature: #44                          // (Lscala/Function0<Lorg/scalactic/Bool;>;)Lorg/scalactic/Bool;
    MethodParameters:
      Name                           Flags
      bool                           final

  public org.scalactic.Bool $amp(scala.Function0<org.scalactic.Bool>);
    descriptor: (Lscala/Function0;)Lorg/scalactic/Bool;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #54                 // InterfaceMethod org/scalactic/Bool.$amp$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
         5: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalactic/ExistsMacroBool;
            0       6     1  bool   Lscala/Function0;
    Signature: #44                          // (Lscala/Function0<Lorg/scalactic/Bool;>;)Lorg/scalactic/Bool;
    MethodParameters:
      Name                           Flags
      bool                           final

  public org.scalactic.Bool $bar$bar(scala.Function0<org.scalactic.Bool>);
    descriptor: (Lscala/Function0;)Lorg/scalactic/Bool;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #58                 // InterfaceMethod org/scalactic/Bool.$bar$bar$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
         5: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalactic/ExistsMacroBool;
            0       6     1  bool   Lscala/Function0;
    Signature: #44                          // (Lscala/Function0<Lorg/scalactic/Bool;>;)Lorg/scalactic/Bool;
    MethodParameters:
      Name                           Flags
      bool                           final

  public org.scalactic.Bool $bar(scala.Function0<org.scalactic.Bool>);
    descriptor: (Lscala/Function0;)Lorg/scalactic/Bool;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #62                 // InterfaceMethod org/scalactic/Bool.$bar$:(Lorg/scalactic/Bool;Lscala/Function0;)Lorg/scalactic/Bool;
         5: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalactic/ExistsMacroBool;
            0       6     1  bool   Lscala/Function0;
    Signature: #44                          // (Lscala/Function0<Lorg/scalactic/Bool;>;)Lorg/scalactic/Bool;
    MethodParameters:
      Name                           Flags
      bool                           final

  public org.scalactic.Bool unary_$bang();
    descriptor: ()Lorg/scalactic/Bool;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod org/scalactic/Bool.unary_$bang$:(Lorg/scalactic/Bool;)Lorg/scalactic/Bool;
         4: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;

  private scala.collection.immutable.IndexedSeq<java.lang.String> analysis$lzycompute();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #73                 // Field bitmap$0:Z
         8: ifne          24
        11: aload_0
        12: aload_0
        13: invokestatic  #77                 // InterfaceMethod org/scalactic/Bool.analysis$:(Lorg/scalactic/Bool;)Lscala/collection/immutable/IndexedSeq;
        16: putfield      #79                 // Field analysis:Lscala/collection/immutable/IndexedSeq;
        19: aload_0
        20: iconst_1
        21: putfield      #73                 // Field bitmap$0:Z
        24: aload_1
        25: monitorexit
        26: goto          32
        29: aload_1
        30: monitorexit
        31: athrow
        32: aload_0
        33: getfield      #79                 // Field analysis:Lscala/collection/immutable/IndexedSeq;
        36: areturn
      Exception table:
         from    to  target type
             4    24    29   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ class org/scalactic/ExistsMacroBool ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lorg/scalactic/ExistsMacroBool;
    Signature: #71                          // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/String;>;

  public scala.collection.immutable.IndexedSeq<java.lang.String> analysis();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #73                 // Field bitmap$0:Z
         4: ifne          14
         7: aload_0
         8: invokespecial #83                 // Method analysis$lzycompute:()Lscala/collection/immutable/IndexedSeq;
        11: goto          18
        14: aload_0
        15: getfield      #79                 // Field analysis:Lscala/collection/immutable/IndexedSeq;
        18: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/IndexedSeq ]
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/scalactic/ExistsMacroBool;
    Signature: #71                          // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/String;>;

  public org.scalactic.Prettifier prettifier();
    descriptor: ()Lorg/scalactic/Prettifier;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #88                 // Field prettifier:Lorg/scalactic/Prettifier;
         4: areturn
      LineNumberTable:
        line 1193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;

  public boolean value();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #91                 // Field value:Z
         4: ireturn
      LineNumberTable:
        line 1198: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;

  public java.lang.String rawFailureMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #98                 // Field org/scalactic/Resources$.MODULE$:Lorg/scalactic/Resources$;
         3: invokevirtual #101                // Method org/scalactic/Resources$.rawDidNotContain:()Ljava/lang/String;
         6: areturn
      LineNumberTable:
        line 1206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/scalactic/ExistsMacroBool;

  public java.lang.String rawNegatedFailureMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #98                 // Field org/scalactic/Resources$.MODULE$:Lorg/scalactic/Resources$;
         3: invokevirtual #105                // Method org/scalactic/Resources$.rawContained:()Ljava/lang/String;
         6: areturn
      LineNumberTable:
        line 1215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/scalactic/ExistsMacroBool;

  public java.lang.String rawMidSentenceFailureMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #108                // Method rawFailureMessage:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;

  public java.lang.String rawMidSentenceNegatedFailureMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #111                // Method rawNegatedFailureMessage:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1229: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;

  public scala.collection.immutable.IndexedSeq<java.lang.Object> failureMessageArgs();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=1, args_size=1
         0: getstatic     #118                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #122                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
         6: getstatic     #127                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: iconst_2
        10: anewarray     #4                  // class java/lang/Object
        13: dup
        14: iconst_0
        15: aload_0
        16: getfield      #129                // Field left:Ljava/lang/Object;
        19: aastore
        20: dup
        21: iconst_1
        22: aload_0
        23: getfield      #131                // Field right:Ljava/lang/Object;
        26: aastore
        27: invokevirtual #135                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        30: invokevirtual #141                // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        33: checkcast     #85                 // class scala/collection/immutable/IndexedSeq
        36: areturn
      LineNumberTable:
        line 1238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lorg/scalactic/ExistsMacroBool;
    Signature: #113                         // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  public scala.collection.immutable.IndexedSeq<java.lang.Object> negatedFailureMessageArgs();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=1, args_size=1
         0: getstatic     #118                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #122                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
         6: getstatic     #127                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: iconst_2
        10: anewarray     #4                  // class java/lang/Object
        13: dup
        14: iconst_0
        15: aload_0
        16: getfield      #129                // Field left:Ljava/lang/Object;
        19: aastore
        20: dup
        21: iconst_1
        22: aload_0
        23: getfield      #131                // Field right:Ljava/lang/Object;
        26: aastore
        27: invokevirtual #135                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        30: invokevirtual #141                // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        33: checkcast     #85                 // class scala/collection/immutable/IndexedSeq
        36: areturn
      LineNumberTable:
        line 1247: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lorg/scalactic/ExistsMacroBool;
    Signature: #113                         // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  public scala.collection.immutable.IndexedSeq<java.lang.Object> midSentenceFailureMessageArgs();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #145                // Method failureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
         4: areturn
      LineNumberTable:
        line 1254: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;
    Signature: #113                         // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  public scala.collection.immutable.IndexedSeq<java.lang.Object> midSentenceNegatedFailureMessageArgs();
    descriptor: ()Lscala/collection/immutable/IndexedSeq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #148                // Method negatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
         4: areturn
      LineNumberTable:
        line 1261: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/ExistsMacroBool;
    Signature: #113                         // ()Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;

  public org.scalactic.ExistsMacroBool(java.lang.Object, java.lang.Object, boolean, org.scalactic.Prettifier);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;ZLorg/scalactic/Prettifier;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: putfield      #129                // Field left:Ljava/lang/Object;
         5: aload_0
         6: aload_2
         7: putfield      #131                // Field right:Ljava/lang/Object;
        10: aload_0
        11: aload         4
        13: putfield      #88                 // Field prettifier:Lorg/scalactic/Prettifier;
        16: aload_0
        17: invokespecial #154                // Method java/lang/Object."<init>":()V
        20: aload_0
        21: invokestatic  #158                // InterfaceMethod org/scalactic/Bool.$init$:(Lorg/scalactic/Bool;)V
        24: aload_0
        25: iload_3
        26: putfield      #91                 // Field value:Z
        29: return
      LineNumberTable:
        line 1193: 0
        line 1198: 24
        line 1193: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/scalactic/ExistsMacroBool;
            0      30     1  left   Ljava/lang/Object;
            0      30     2 right   Ljava/lang/Object;
            0      30     3 expression   Z
            0      30     4 prettifier   Lorg/scalactic/Prettifier;
    MethodParameters:
      Name                           Flags
      left                           final
      right                          final
      expression                     final
      prettifier                     final
}
SourceFile: "Bool.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005e3Q!\u0005\n\u0001%YA\u0001\"\t\u0001\u0003\u0002\u0003\u0006Ia\t\u0005\tM\u0001\u0011\t\u0011)A\u0005G!Aq\u0005\u0001B\u0001B\u0003%\u0001\u0006\u0003\u0005,\u0001\t\u0015\r\u0011\"\u0001-\u0011!\u0001\u0004A!A!\u0002\u0013i\u0003\"B\u0019\u0001\t\u0003\u0011\u0004b\u0002\u001d\u0001\u0005\u0004%\t!\u000f\u0005\u0007u\u0001\u0001\u000b\u0011\u0002\u0015\t\u000bm\u0002A\u0011\u0001\u001f\t\u000b!\u0003A\u0011\u0001\u001f\t\u000b%\u0003A\u0011\u0001\u001f\t\u000b)\u0003A\u0011\u0001\u001f\t\u000b-\u0003A\u0011\u0001\'\t\u000bY\u0003A\u0011\u0001\'\t\u000b]\u0003A\u0011\u0001\'\t\u000ba\u0003A\u0011\u0001\'\u0003\u001f\u0015C\u0018n\u001d;t\u001b\u0006\u001c\'o\u001c\"p_2T!a\u0005\u000b\u0002\u0013M\u001c\u0017\r\\1di&\u001c\'\"A\u000b\u0002\u0007=\u0014xmE\u0002\u0001/u\u0001\"\u0001G\u000e\u000e\u0003eQ\u0011AG\u0001\u0006g\u000e\fG.Y\u0005\u00039e\u0011a!\u00118z%\u00164\u0007C\u0001\u0010 \u001b\u0005\u0011\u0012B\u0001\u0011\u0013\u0005\u0011\u0011un\u001c7\u0002\t1,g\r^\u0002\u0001!\tAB%\u0003\u0002&3\t\u0019\u0011I\\=\u0002\u000bILw\r\u001b;\u0002\u0015\u0015D\bO]3tg&|g\u000e\u0005\u0002\u0019S%\u0011!&\u0007\u0002\b\u0005>|G.Z1o\u0003)\u0001(/\u001a;uS\u001aLWM]\u000b\u0002[A\u0011aDL\u0005\u0003_I\u0011!\u0002\u0015:fiRLg-[3s\u0003-\u0001(/\u001a;uS\u001aLWM\u001d\u0011\u0002\rqJg.\u001b;?)\u0015\u0019D\'\u000e\u001c8!\tq\u0002\u0001C\u0003\"\r\u0001\u00071\u0005C\u0003\'\r\u0001\u00071\u0005C\u0003(\r\u0001\u0007\u0001\u0006C\u0003,\r\u0001\u0007Q&A\u0003wC2,X-F\u0001)\u0003\u00191\u0018\r\\;fA\u0005\t\"/Y<GC&dWO]3NKN\u001c\u0018mZ3\u0016\u0003u\u0002\"AP#\u000f\u0005}\u001a\u0005C\u0001!\u001a\u001b\u0005\t%B\u0001\"#\u0003\u0019a$o\\8u}%\u0011A)G\u0001\u0007!J,G-\u001a4\n\u0005\u0019;%AB*ue&twM\u0003\u0002E3\u0005A\"/Y<OK\u001e\fG/\u001a3GC&dWO]3NKN\u001c\u0018mZ3\u00029I\fw/T5e\'\u0016tG/\u001a8dK\u001a\u000b\u0017\u000e\\;sK6+7o]1hK\u0006\u0019#/Y<NS\u0012\u001cVM\u001c;f]\u000e,g*Z4bi\u0016$g)Y5mkJ,W*Z:tC\u001e,\u0017A\u00054bS2,(/Z\'fgN\fw-Z!sON,\u0012!\u0014\t\u0004\u001dN\u001bcBA(R\u001d\t\u0001\u0005+C\u0001\u001b\u0013\t\u0011\u0016$A\u0004qC\u000e\\\u0017mZ3\n\u0005Q+&AC%oI\u0016DX\rZ*fc*\u0011!+G\u0001\u001a]\u0016<\u0017\r^3e\r\u0006LG.\u001e:f\u001b\u0016\u001c8/Y4f\u0003J<7/A\u000fnS\u0012\u001cVM\u001c;f]\u000e,g)Y5mkJ,W*Z:tC\u001e,\u0017I]4t\u0003\u0011j\u0017\u000eZ*f]R,gnY3OK\u001e\fG/\u001a3GC&dWO]3NKN\u001c\u0018mZ3Be\u001e\u001c\b"
    )
  ScalaInlineInfo: length = 0x72 (unknown attribute)
   01 00 00 16 00 33 00 2B 00 00 2A 00 2B 00 00 3B
   00 2B 00 00 37 00 2B 00 00 95 00 96 00 00 12 00
   46 00 00 45 00 46 01 00 16 00 17 00 00 70 00 46
   00 00 22 00 17 00 00 8F 00 46 00 00 26 00 17 00
   00 92 00 46 00 00 1E 00 17 00 00 8E 00 46 00 00
   0E 00 56 00 00 5C 00 17 00 00 6A 00 17 00 00 6D
   00 17 00 00 66 00 17 00 00 3F 00 40 00 00 10 00
   59 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
