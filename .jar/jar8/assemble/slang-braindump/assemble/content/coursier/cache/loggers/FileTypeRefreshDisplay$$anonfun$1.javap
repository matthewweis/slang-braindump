Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1.class
  Last modified May 29, 2022; size 3447 bytes
  SHA-256 checksum fcc35e70e6205c8de43a94eb69b847ae923538bd882c7515da0c26fb7fe41763
  Compiled from "FileTypeRefreshDisplay.scala"
public final class coursier.cache.loggers.FileTypeRefreshDisplay$$anonfun$1 extends scala.runtime.AbstractPartialFunction<scala.Tuple2<java.lang.String, coursier.cache.loggers.RefreshInfo>, java.lang.Object> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1
  super_class: #5                         // scala/runtime/AbstractPartialFunction
  interfaces: 1, fields: 1, methods: 7, attributes: 7
Constant pool:
    #1 = Utf8               coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1
    #2 = Class              #1            // coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1
    #3 = Utf8               Lscala/runtime/AbstractPartialFunction<Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;Ljava/lang/Object;>;Ljava/io/Serializable;
    #4 = Utf8               scala/runtime/AbstractPartialFunction
    #5 = Class              #4            // scala/runtime/AbstractPartialFunction
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               FileTypeRefreshDisplay.scala
    #9 = Utf8               coursier/cache/loggers/FileTypeRefreshDisplay
   #10 = Class              #9            // coursier/cache/loggers/FileTypeRefreshDisplay
   #11 = Utf8               refresh
   #12 = Utf8               (Ljava/io/Writer;Z)V
   #13 = NameAndType        #11:#12       // refresh:(Ljava/io/Writer;Z)V
   #14 = Utf8               coursier/cache/loggers/RefreshInfo$DownloadInfo
   #15 = Class              #14           // coursier/cache/loggers/RefreshInfo$DownloadInfo
   #16 = Utf8               coursier/cache/loggers/RefreshInfo
   #17 = Class              #16           // coursier/cache/loggers/RefreshInfo
   #18 = Utf8               DownloadInfo
   #19 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #20 = Class              #19           // java/lang/invoke/MethodHandles$Lookup
   #21 = Utf8               java/lang/invoke/MethodHandles
   #22 = Class              #21           // java/lang/invoke/MethodHandles
   #23 = Utf8               Lookup
   #24 = Utf8               serialVersionUID
   #25 = Utf8               J
   #26 = Long               0l
   #28 = Utf8               applyOrElse
   #29 = Utf8               (Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
   #30 = Utf8               <A1:Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
   #31 = Utf8               x1
   #32 = Utf8               default
   #33 = Utf8               scala/Tuple2
   #34 = Class              #33           // scala/Tuple2
   #35 = Utf8               _2
   #36 = Utf8               ()Ljava/lang/Object;
   #37 = NameAndType        #35:#36       // _2:()Ljava/lang/Object;
   #38 = Methodref          #34.#37       // scala/Tuple2._2:()Ljava/lang/Object;
   #39 = Utf8               rate
   #40 = Utf8               ()Lscala/Option;
   #41 = NameAndType        #39:#40       // rate:()Lscala/Option;
   #42 = Methodref          #15.#41       // coursier/cache/loggers/RefreshInfo$DownloadInfo.rate:()Lscala/Option;
   #43 = Utf8               ()D
   #44 = MethodType         #43           //  ()D
   #45 = Utf8               $anonfun$applyOrElse$1
   #46 = NameAndType        #45:#43       // $anonfun$applyOrElse$1:()D
   #47 = Methodref          #2.#46        // coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1.$anonfun$applyOrElse$1:()D
   #48 = MethodHandle       6:#47         // REF_invokeStatic coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1.$anonfun$applyOrElse$1:()D
   #49 = Integer            1
   #50 = Utf8               java/lang/invoke/LambdaMetafactory
   #51 = Class              #50           // java/lang/invoke/LambdaMetafactory
   #52 = Utf8               altMetafactory
   #53 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #54 = NameAndType        #52:#53       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #55 = Methodref          #51.#54       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #56 = MethodHandle       6:#55         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #57 = Utf8               apply$mcD$sp
   #58 = Utf8               ()Lscala/runtime/java8/JFunction0$mcD$sp;
   #59 = NameAndType        #57:#58       // apply$mcD$sp:()Lscala/runtime/java8/JFunction0$mcD$sp;
   #60 = InvokeDynamic      #0:#59        // #0:apply$mcD$sp:()Lscala/runtime/java8/JFunction0$mcD$sp;
   #61 = Utf8               scala/Option
   #62 = Class              #61           // scala/Option
   #63 = Utf8               getOrElse
   #64 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
   #65 = NameAndType        #63:#64       // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #66 = Methodref          #62.#65       // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
   #67 = Utf8               scala/Function1
   #68 = Class              #67           // scala/Function1
   #69 = Utf8               apply
   #70 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #71 = NameAndType        #69:#70       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #72 = InterfaceMethodref #68.#71       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #73 = Utf8               java/lang/Object
   #74 = Class              #73           // java/lang/Object
   #75 = Utf8               info
   #76 = Utf8               Lcoursier/cache/loggers/RefreshInfo;
   #77 = Utf8               this
   #78 = Utf8               Lcoursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1;
   #79 = Utf8               Lscala/Tuple2;
   #80 = Utf8               Lscala/Function1;
   #81 = Utf8               isDefinedAt
   #82 = Utf8               (Lscala/Tuple2;)Z
   #83 = Utf8               (Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;)Z
   #84 = Utf8               (Ljava/lang/Object;)Z
   #85 = Utf8               x
   #86 = NameAndType        #81:#82       // isDefinedAt:(Lscala/Tuple2;)Z
   #87 = Methodref          #2.#86        // coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1.isDefinedAt:(Lscala/Tuple2;)Z
   #88 = Utf8               Ljava/lang/Object;
   #89 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
   #90 = NameAndType        #28:#29       // applyOrElse:(Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
   #91 = Methodref          #2.#90        // coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1.applyOrElse:(Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
   #92 = Utf8               <init>
   #93 = Utf8               (Lcoursier/cache/loggers/FileTypeRefreshDisplay;)V
   #94 = Utf8               $outer
   #95 = Utf8               ()V
   #96 = NameAndType        #92:#95       // "<init>":()V
   #97 = Methodref          #5.#96        // scala/runtime/AbstractPartialFunction."<init>":()V
   #98 = Utf8               Lcoursier/cache/loggers/FileTypeRefreshDisplay;
   #99 = Utf8               $deserializeLambda$
  #100 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #101 = Utf8               scala/runtime/LambdaDeserialize
  #102 = Class              #101          // scala/runtime/LambdaDeserialize
  #103 = Utf8               bootstrap
  #104 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #105 = NameAndType        #103:#104     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #106 = Methodref          #102.#105     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #107 = MethodHandle       6:#106        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #108 = Utf8               lambdaDeserialize
  #109 = NameAndType        #108:#100     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #110 = InvokeDynamic      #1:#109       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #111 = Utf8               ConstantValue
  #112 = Utf8               Code
  #113 = Utf8               StackMapTable
  #114 = Utf8               LineNumberTable
  #115 = Utf8               LocalVariableTable
  #116 = Utf8               Signature
  #117 = Utf8               MethodParameters
  #118 = Utf8               InnerClasses
  #119 = Utf8               EnclosingMethod
  #120 = Utf8               SourceFile
  #121 = Utf8               BootstrapMethods
  #122 = Utf8               ScalaInlineInfo
  #123 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 0l

  public final <A1 extends scala.Tuple2<java.lang.String, coursier.cache.loggers.RefreshInfo>, B1 extends java.lang.Object> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    descriptor: (Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: ifnull        53
         8: aload         4
        10: invokevirtual #38                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        13: checkcast     #17                 // class coursier/cache/loggers/RefreshInfo
        16: astore        5
        18: aload         5
        20: instanceof    #15                 // class coursier/cache/loggers/RefreshInfo$DownloadInfo
        23: ifeq          50
        26: aload         5
        28: checkcast     #15                 // class coursier/cache/loggers/RefreshInfo$DownloadInfo
        31: astore        6
        33: aload         6
        35: invokevirtual #42                 // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.rate:()Lscala/Option;
        38: invokedynamic #60,  0             // InvokeDynamic #0:apply$mcD$sp:()Lscala/runtime/java8/JFunction0$mcD$sp;
        43: invokevirtual #66                 // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        46: astore_3
        47: goto          67
        50: goto          56
        53: goto          56
        56: aload_2
        57: aload_1
        58: invokeinterface #72,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        63: astore_3
        64: goto          67
        67: aload_3
        68: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 50
          locals = [ top, class scala/Tuple2, class coursier/cache/loggers/RefreshInfo ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1, class scala/Tuple2, class scala/Function1, class java/lang/Object, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 147: 0
        line 148: 3
        line 149: 33
        line 148: 50
        line 147: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      35     5  info   Lcoursier/cache/loggers/RefreshInfo;
            0      69     0  this   Lcoursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1;
            0      69     1    x1   Lscala/Tuple2;
            0      69     2 default   Lscala/Function1;
    Signature: #30                          // <A1:Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      x1                             final
      default                        final

  public final boolean isDefinedAt(scala.Tuple2<java.lang.String, coursier.cache.loggers.RefreshInfo>);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        31
         6: aload_3
         7: invokevirtual #38                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        10: checkcast     #17                 // class coursier/cache/loggers/RefreshInfo
        13: astore        4
        15: aload         4
        17: instanceof    #15                 // class coursier/cache/loggers/RefreshInfo$DownloadInfo
        20: ifeq          28
        23: iconst_1
        24: istore_2
        25: goto          39
        28: goto          34
        31: goto          34
        34: iconst_0
        35: istore_2
        36: goto          39
        39: iload_2
        40: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 28
          locals = [ top, class scala/Tuple2, class coursier/cache/loggers/RefreshInfo ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1, class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 147: 0
        line 148: 2
        line 149: 23
        line 148: 28
        line 147: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      16     4  info   Lcoursier/cache/loggers/RefreshInfo;
            0      41     0  this   Lcoursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1;
            0      41     1    x1   Lscala/Tuple2;
    Signature: #83                          // (Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;)Z
    MethodParameters:
      Name                           Flags
      x1                             final

  public final boolean isDefinedAt(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #34                 // class scala/Tuple2
         5: invokevirtual #87                 // Method isDefinedAt:(Lscala/Tuple2;)Z
         8: ireturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #34                 // class scala/Tuple2
         5: aload_2
         6: invokevirtual #91                 // Method applyOrElse:(Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1;
            0      10     1     x   Ljava/lang/Object;
            0      10     2 default   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public static final double $anonfun$applyOrElse$1();
    descriptor: ()D
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: dconst_0
         1: dreturn
      LineNumberTable:
        line 149: 0

  public coursier.cache.loggers.FileTypeRefreshDisplay$$anonfun$1(coursier.cache.loggers.FileTypeRefreshDisplay);
    descriptor: (Lcoursier/cache/loggers/FileTypeRefreshDisplay;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokespecial #97                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
         4: return
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1;
            0       5     1 $outer   Lcoursier/cache/loggers/FileTypeRefreshDisplay;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #110,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public final #2;                        // class coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1
  public static final #18= #15 of #17;    // DownloadInfo=class coursier/cache/loggers/RefreshInfo$DownloadInfo of class coursier/cache/loggers/RefreshInfo
  public static final #23= #20 of #22;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
EnclosingMethod: #10.#13                // coursier.cache.loggers.FileTypeRefreshDisplay.refresh
Signature: #3                           // Lscala/runtime/AbstractPartialFunction<Lscala/Tuple2<Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;>;Ljava/lang/Object;>;Ljava/io/Serializable;
SourceFile: "FileTypeRefreshDisplay.scala"
BootstrapMethods:
  0: #56 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #44 ()D
      #48 REF_invokeStatic coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1.$anonfun$applyOrElse$1:()D
      #44 ()D
      #49 1
  1: #107 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #48 REF_invokeStatic coursier/cache/loggers/FileTypeRefreshDisplay$$anonfun$1.$anonfun$applyOrElse$1:()D
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 2D 00 2B 01 00 5C 00 5D 01 00 1C
   00 59 01 00 1C 00 1D 01 00 51 00 54 01 00 51 00
   52 01
  Scala: length = 0x0 (unknown attribute)

