Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/output/LockableFileWriter.class
  Last modified May 29, 2022; size 5373 bytes
  SHA-256 checksum dc6c6a8752dc2e4c4cda463080de3bd3e8ba7bccd0c6bf173f2b649f054da3cd
  Compiled from "LockableFileWriter.java"
public class org.apache.commons.io.output.LockableFileWriter extends java.io.Writer
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #23                         // org/apache/commons/io/output/LockableFileWriter
  super_class: #56                        // java/io/Writer
  interfaces: 0, fields: 3, methods: 20, attributes: 1
Constant pool:
    #1 = Methodref          #23.#125      // org/apache/commons/io/output/LockableFileWriter."<init>":(Ljava/lang/String;ZLjava/lang/String;)V
    #2 = Class              #126          // java/io/File
    #3 = Methodref          #2.#127       // java/io/File."<init>":(Ljava/lang/String;)V
    #4 = Methodref          #23.#128      // org/apache/commons/io/output/LockableFileWriter."<init>":(Ljava/io/File;ZLjava/lang/String;)V
    #5 = Methodref          #129.#130     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
    #6 = Methodref          #23.#131      // org/apache/commons/io/output/LockableFileWriter."<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
    #7 = Methodref          #23.#132      // org/apache/commons/io/output/LockableFileWriter."<init>":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V
    #8 = Methodref          #56.#133      // java/io/Writer."<init>":()V
    #9 = Methodref          #2.#134       // java/io/File.getAbsoluteFile:()Ljava/io/File;
   #10 = Methodref          #2.#135       // java/io/File.getParentFile:()Ljava/io/File;
   #11 = Methodref          #136.#137     // org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V
   #12 = Methodref          #2.#138       // java/io/File.isDirectory:()Z
   #13 = Class              #139          // java/io/IOException
   #14 = String             #140          // File specified is a directory
   #15 = Methodref          #13.#127      // java/io/IOException."<init>":(Ljava/lang/String;)V
   #16 = String             #141          // java.io.tmpdir
   #17 = Methodref          #142.#143     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
   #18 = Methodref          #23.#144      // org/apache/commons/io/output/LockableFileWriter.testLockDir:(Ljava/io/File;)V
   #19 = Class              #145          // java/lang/StringBuilder
   #20 = Methodref          #19.#133      // java/lang/StringBuilder."<init>":()V
   #21 = Methodref          #2.#146       // java/io/File.getName:()Ljava/lang/String;
   #22 = Methodref          #19.#147      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #23 = Class              #148          // org/apache/commons/io/output/LockableFileWriter
   #24 = String             #149          // .lck
   #25 = Methodref          #19.#150      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #26 = Methodref          #2.#151       // java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
   #27 = Fieldref           #23.#152      // org/apache/commons/io/output/LockableFileWriter.lockFile:Ljava/io/File;
   #28 = Methodref          #23.#153      // org/apache/commons/io/output/LockableFileWriter.createLock:()V
   #29 = Methodref          #23.#154      // org/apache/commons/io/output/LockableFileWriter.initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;
   #30 = Fieldref           #23.#155      // org/apache/commons/io/output/LockableFileWriter.out:Ljava/io/Writer;
   #31 = Methodref          #156.#157     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
   #32 = Methodref          #2.#158       // java/io/File.exists:()Z
   #33 = String             #159          // Could not find lockDir:
   #34 = Methodref          #2.#160       // java/io/File.getAbsolutePath:()Ljava/lang/String;
   #35 = Methodref          #2.#161       // java/io/File.canWrite:()Z
   #36 = String             #162          // Could not write to lockDir:
   #37 = Methodref          #2.#163       // java/io/File.createNewFile:()Z
   #38 = String             #164          // Can\'t write file, lock
   #39 = String             #165          //  exists
   #40 = Methodref          #2.#166       // java/io/File.deleteOnExit:()V
   #41 = Class              #167          // java/io/OutputStreamWriter
   #42 = Class              #168          // java/io/FileOutputStream
   #43 = Methodref          #42.#169      // java/io/FileOutputStream."<init>":(Ljava/lang/String;Z)V
   #44 = Methodref          #156.#170     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
   #45 = Methodref          #41.#171      // java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
   #46 = Class              #172          // java/lang/RuntimeException
   #47 = Methodref          #136.#173     // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
   #48 = Methodref          #56.#174      // java/io/Writer.close:()V
   #49 = Methodref          #2.#175       // java/io/File.delete:()Z
   #50 = Methodref          #56.#176      // java/io/Writer.write:(I)V
   #51 = Methodref          #56.#177      // java/io/Writer.write:([C)V
   #52 = Methodref          #56.#178      // java/io/Writer.write:([CII)V
   #53 = Methodref          #56.#179      // java/io/Writer.write:(Ljava/lang/String;)V
   #54 = Methodref          #56.#180      // java/io/Writer.write:(Ljava/lang/String;II)V
   #55 = Methodref          #56.#181      // java/io/Writer.flush:()V
   #56 = Class              #182          // java/io/Writer
   #57 = Utf8               LCK
   #58 = Utf8               Ljava/lang/String;
   #59 = Utf8               ConstantValue
   #60 = Utf8               out
   #61 = Utf8               Ljava/io/Writer;
   #62 = Utf8               lockFile
   #63 = Utf8               Ljava/io/File;
   #64 = Utf8               <init>
   #65 = Utf8               (Ljava/lang/String;)V
   #66 = Utf8               Code
   #67 = Utf8               LineNumberTable
   #68 = Utf8               LocalVariableTable
   #69 = Utf8               this
   #70 = Utf8               Lorg/apache/commons/io/output/LockableFileWriter;
   #71 = Utf8               fileName
   #72 = Utf8               Exceptions
   #73 = Utf8               (Ljava/lang/String;Z)V
   #74 = Utf8               append
   #75 = Utf8               Z
   #76 = Utf8               (Ljava/lang/String;ZLjava/lang/String;)V
   #77 = Utf8               lockDir
   #78 = Utf8               (Ljava/io/File;)V
   #79 = Utf8               file
   #80 = Utf8               (Ljava/io/File;Z)V
   #81 = Utf8               (Ljava/io/File;ZLjava/lang/String;)V
   #82 = Utf8               Deprecated
   #83 = Utf8               RuntimeVisibleAnnotations
   #84 = Utf8               Ljava/lang/Deprecated;
   #85 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V
   #86 = Utf8               charset
   #87 = Utf8               Ljava/nio/charset/Charset;
   #88 = Utf8               (Ljava/io/File;Ljava/lang/String;)V
   #89 = Utf8               charsetName
   #90 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
   #91 = Utf8               lockDirFile
   #92 = Utf8               StackMapTable
   #93 = Class              #148          // org/apache/commons/io/output/LockableFileWriter
   #94 = Class              #126          // java/io/File
   #95 = Class              #183          // java/nio/charset/Charset
   #96 = Class              #184          // java/lang/String
   #97 = Utf8               (Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V
   #98 = Utf8               testLockDir
   #99 = Utf8               createLock
  #100 = Utf8               ()V
  #101 = Class              #185          // java/lang/Object
  #102 = Class              #186          // java/lang/Throwable
  #103 = Utf8               initWriter
  #104 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;
  #105 = Utf8               ex
  #106 = Utf8               Ljava/lang/Exception;
  #107 = Utf8               fileExistedAlready
  #108 = Class              #187          // java/lang/Exception
  #109 = Utf8               close
  #110 = Utf8               write
  #111 = Utf8               (I)V
  #112 = Utf8               idx
  #113 = Utf8               I
  #114 = Utf8               ([C)V
  #115 = Utf8               chr
  #116 = Utf8               [C
  #117 = Utf8               ([CII)V
  #118 = Utf8               st
  #119 = Utf8               end
  #120 = Utf8               str
  #121 = Utf8               (Ljava/lang/String;II)V
  #122 = Utf8               flush
  #123 = Utf8               SourceFile
  #124 = Utf8               LockableFileWriter.java
  #125 = NameAndType        #64:#76       // "<init>":(Ljava/lang/String;ZLjava/lang/String;)V
  #126 = Utf8               java/io/File
  #127 = NameAndType        #64:#65       // "<init>":(Ljava/lang/String;)V
  #128 = NameAndType        #64:#81       // "<init>":(Ljava/io/File;ZLjava/lang/String;)V
  #129 = Class              #183          // java/nio/charset/Charset
  #130 = NameAndType        #188:#189     // defaultCharset:()Ljava/nio/charset/Charset;
  #131 = NameAndType        #64:#90       // "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
  #132 = NameAndType        #64:#97       // "<init>":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V
  #133 = NameAndType        #64:#100      // "<init>":()V
  #134 = NameAndType        #190:#191     // getAbsoluteFile:()Ljava/io/File;
  #135 = NameAndType        #192:#191     // getParentFile:()Ljava/io/File;
  #136 = Class              #193          // org/apache/commons/io/FileUtils
  #137 = NameAndType        #194:#78      // forceMkdir:(Ljava/io/File;)V
  #138 = NameAndType        #195:#196     // isDirectory:()Z
  #139 = Utf8               java/io/IOException
  #140 = Utf8               File specified is a directory
  #141 = Utf8               java.io.tmpdir
  #142 = Class              #197          // java/lang/System
  #143 = NameAndType        #198:#199     // getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #144 = NameAndType        #98:#78       // testLockDir:(Ljava/io/File;)V
  #145 = Utf8               java/lang/StringBuilder
  #146 = NameAndType        #200:#201     // getName:()Ljava/lang/String;
  #147 = NameAndType        #74:#202      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #148 = Utf8               org/apache/commons/io/output/LockableFileWriter
  #149 = Utf8               .lck
  #150 = NameAndType        #203:#201     // toString:()Ljava/lang/String;
  #151 = NameAndType        #64:#88       // "<init>":(Ljava/io/File;Ljava/lang/String;)V
  #152 = NameAndType        #62:#63       // lockFile:Ljava/io/File;
  #153 = NameAndType        #99:#100      // createLock:()V
  #154 = NameAndType        #103:#104     // initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;
  #155 = NameAndType        #60:#61       // out:Ljava/io/Writer;
  #156 = Class              #204          // org/apache/commons/io/Charsets
  #157 = NameAndType        #205:#206     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
  #158 = NameAndType        #207:#196     // exists:()Z
  #159 = Utf8               Could not find lockDir:
  #160 = NameAndType        #208:#201     // getAbsolutePath:()Ljava/lang/String;
  #161 = NameAndType        #209:#196     // canWrite:()Z
  #162 = Utf8               Could not write to lockDir:
  #163 = NameAndType        #210:#196     // createNewFile:()Z
  #164 = Utf8               Can\'t write file, lock
  #165 = Utf8                exists
  #166 = NameAndType        #211:#100     // deleteOnExit:()V
  #167 = Utf8               java/io/OutputStreamWriter
  #168 = Utf8               java/io/FileOutputStream
  #169 = NameAndType        #64:#73       // "<init>":(Ljava/lang/String;Z)V
  #170 = NameAndType        #205:#212     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
  #171 = NameAndType        #64:#213      // "<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
  #172 = Utf8               java/lang/RuntimeException
  #173 = NameAndType        #214:#215     // deleteQuietly:(Ljava/io/File;)Z
  #174 = NameAndType        #109:#100     // close:()V
  #175 = NameAndType        #216:#196     // delete:()Z
  #176 = NameAndType        #110:#111     // write:(I)V
  #177 = NameAndType        #110:#114     // write:([C)V
  #178 = NameAndType        #110:#117     // write:([CII)V
  #179 = NameAndType        #110:#65      // write:(Ljava/lang/String;)V
  #180 = NameAndType        #110:#121     // write:(Ljava/lang/String;II)V
  #181 = NameAndType        #122:#100     // flush:()V
  #182 = Utf8               java/io/Writer
  #183 = Utf8               java/nio/charset/Charset
  #184 = Utf8               java/lang/String
  #185 = Utf8               java/lang/Object
  #186 = Utf8               java/lang/Throwable
  #187 = Utf8               java/lang/Exception
  #188 = Utf8               defaultCharset
  #189 = Utf8               ()Ljava/nio/charset/Charset;
  #190 = Utf8               getAbsoluteFile
  #191 = Utf8               ()Ljava/io/File;
  #192 = Utf8               getParentFile
  #193 = Utf8               org/apache/commons/io/FileUtils
  #194 = Utf8               forceMkdir
  #195 = Utf8               isDirectory
  #196 = Utf8               ()Z
  #197 = Utf8               java/lang/System
  #198 = Utf8               getProperty
  #199 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #200 = Utf8               getName
  #201 = Utf8               ()Ljava/lang/String;
  #202 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #203 = Utf8               toString
  #204 = Utf8               org/apache/commons/io/Charsets
  #205 = Utf8               toCharset
  #206 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;
  #207 = Utf8               exists
  #208 = Utf8               getAbsolutePath
  #209 = Utf8               canWrite
  #210 = Utf8               createNewFile
  #211 = Utf8               deleteOnExit
  #212 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
  #213 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
  #214 = Utf8               deleteQuietly
  #215 = Utf8               (Ljava/io/File;)Z
  #216 = Utf8               delete
{
  private static final java.lang.String LCK;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String .lck

  private final java.io.Writer out;
    descriptor: Ljava/io/Writer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.io.File lockFile;
    descriptor: Ljava/io/File;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.output.LockableFileWriter(java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: aconst_null
         4: invokespecial #1                  // Method "<init>":(Ljava/lang/String;ZLjava/lang/String;)V
         7: return
      LineNumberTable:
        line 69: 0
        line 70: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0       8     1 fileName   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.LockableFileWriter(java.lang.String, boolean) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: aconst_null
         4: invokespecial #1                  // Method "<init>":(Ljava/lang/String;ZLjava/lang/String;)V
         7: return
      LineNumberTable:
        line 81: 0
        line 82: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0       8     1 fileName   Ljava/lang/String;
            0       8     2 append   Z
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.LockableFileWriter(java.lang.String, boolean, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;ZLjava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: new           #2                  // class java/io/File
         4: dup
         5: aload_1
         6: invokespecial #3                  // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: iload_2
        10: aload_3
        11: invokespecial #4                  // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
        14: return
      LineNumberTable:
        line 94: 0
        line 95: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0      15     1 fileName   Ljava/lang/String;
            0      15     2 append   Z
            0      15     3 lockDir   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.LockableFileWriter(java.io.File) throws java.io.IOException;
    descriptor: (Ljava/io/File;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: aconst_null
         4: invokespecial #4                  // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
         7: return
      LineNumberTable:
        line 106: 0
        line 107: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0       8     1  file   Ljava/io/File;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, boolean) throws java.io.IOException;
    descriptor: (Ljava/io/File;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: aconst_null
         4: invokespecial #4                  // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
         7: return
      LineNumberTable:
        line 118: 0
        line 119: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0       8     1  file   Ljava/io/File;
            0       8     2 append   Z
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, boolean, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/io/File;ZLjava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: invokestatic  #5                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
         5: iload_2
         6: aload_3
         7: invokespecial #6                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
        10: return
      LineNumberTable:
        line 133: 0
        line 134: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0      11     1  file   Ljava/io/File;
            0      11     2 append   Z
            0      11     3 lockDir   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #84()
        java.lang.Deprecated

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: aconst_null
         5: invokespecial #6                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
         8: return
      LineNumberTable:
        line 146: 0
        line 147: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0       9     1  file   Ljava/io/File;
            0       9     2 charset   Ljava/nio/charset/Charset;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: aconst_null
         5: invokespecial #7                  // Method "<init>":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V
         8: return
      LineNumberTable:
        line 161: 0
        line 162: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0       9     1  file   Ljava/io/File;
            0       9     2 charsetName   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.nio.charset.Charset, boolean, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=5
         0: aload_0
         1: invokespecial #8                  // Method java/io/Writer."<init>":()V
         4: aload_1
         5: invokevirtual #9                  // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
         8: astore_1
         9: aload_1
        10: invokevirtual #10                 // Method java/io/File.getParentFile:()Ljava/io/File;
        13: ifnull        23
        16: aload_1
        17: invokevirtual #10                 // Method java/io/File.getParentFile:()Ljava/io/File;
        20: invokestatic  #11                 // Method org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V
        23: aload_1
        24: invokevirtual #12                 // Method java/io/File.isDirectory:()Z
        27: ifeq          40
        30: new           #13                 // class java/io/IOException
        33: dup
        34: ldc           #14                 // String File specified is a directory
        36: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        39: athrow
        40: aload         4
        42: ifnonnull     52
        45: ldc           #16                 // String java.io.tmpdir
        47: invokestatic  #17                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        50: astore        4
        52: new           #2                  // class java/io/File
        55: dup
        56: aload         4
        58: invokespecial #3                  // Method java/io/File."<init>":(Ljava/lang/String;)V
        61: astore        5
        63: aload         5
        65: invokestatic  #11                 // Method org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V
        68: aload_0
        69: aload         5
        71: invokespecial #18                 // Method testLockDir:(Ljava/io/File;)V
        74: aload_0
        75: new           #2                  // class java/io/File
        78: dup
        79: aload         5
        81: new           #19                 // class java/lang/StringBuilder
        84: dup
        85: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
        88: aload_1
        89: invokevirtual #21                 // Method java/io/File.getName:()Ljava/lang/String;
        92: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        95: ldc           #24                 // String .lck
        97: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       100: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       103: invokespecial #26                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
       106: putfield      #27                 // Field lockFile:Ljava/io/File;
       109: aload_0
       110: invokespecial #28                 // Method createLock:()V
       113: aload_0
       114: aload_0
       115: aload_1
       116: aload_2
       117: iload_3
       118: invokespecial #29                 // Method initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;
       121: putfield      #30                 // Field out:Ljava/io/Writer;
       124: return
      LineNumberTable:
        line 177: 0
        line 179: 4
        line 180: 9
        line 181: 16
        line 183: 23
        line 184: 30
        line 188: 40
        line 189: 45
        line 191: 52
        line 192: 63
        line 193: 68
        line 194: 74
        line 197: 109
        line 200: 113
        line 201: 124
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     125     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0     125     1  file   Ljava/io/File;
            0     125     2 charset   Ljava/nio/charset/Charset;
            0     125     3 append   Z
            0     125     4 lockDir   Ljava/lang/String;
           63      62     5 lockDirFile   Ljava/io/File;
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/apache/commons/io/output/LockableFileWriter, class java/io/File, class java/nio/charset/Charset, int, class java/lang/String ]
          stack = []
        frame_type = 16 /* same */
        frame_type = 11 /* same */
    Exceptions:
      throws java.io.IOException

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.lang.String, boolean, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #31                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
         6: iload_3
         7: aload         4
         9: invokespecial #6                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
        12: return
      LineNumberTable:
        line 218: 0
        line 219: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0      13     1  file   Ljava/io/File;
            0      13     2 charsetName   Ljava/lang/String;
            0      13     3 append   Z
            0      13     4 lockDir   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  private void testLockDir(java.io.File) throws java.io.IOException;
    descriptor: (Ljava/io/File;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #32                 // Method java/io/File.exists:()Z
         4: ifne          37
         7: new           #13                 // class java/io/IOException
        10: dup
        11: new           #19                 // class java/lang/StringBuilder
        14: dup
        15: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
        18: ldc           #33                 // String Could not find lockDir:
        20: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: aload_1
        24: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
        27: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        33: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        36: athrow
        37: aload_1
        38: invokevirtual #35                 // Method java/io/File.canWrite:()Z
        41: ifne          74
        44: new           #13                 // class java/io/IOException
        47: dup
        48: new           #19                 // class java/lang/StringBuilder
        51: dup
        52: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
        55: ldc           #36                 // String Could not write to lockDir:
        57: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        60: aload_1
        61: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
        64: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        67: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        70: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        73: athrow
        74: return
      LineNumberTable:
        line 230: 0
        line 231: 7
        line 232: 24
        line 234: 37
        line 235: 44
        line 236: 61
        line 238: 74
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      75     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0      75     1 lockDir   Ljava/io/File;
      StackMapTable: number_of_entries = 2
        frame_type = 37 /* same */
        frame_type = 36 /* same */
    Exceptions:
      throws java.io.IOException

  private void createLock() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=1
         0: ldc           #23                 // class org/apache/commons/io/output/LockableFileWriter
         2: dup
         3: astore_1
         4: monitorenter
         5: aload_0
         6: getfield      #27                 // Field lockFile:Ljava/io/File;
         9: invokevirtual #37                 // Method java/io/File.createNewFile:()Z
        12: ifne          53
        15: new           #13                 // class java/io/IOException
        18: dup
        19: new           #19                 // class java/lang/StringBuilder
        22: dup
        23: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
        26: ldc           #38                 // String Can\'t write file, lock
        28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: aload_0
        32: getfield      #27                 // Field lockFile:Ljava/io/File;
        35: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
        38: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: ldc           #39                 // String  exists
        43: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        46: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        49: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        52: athrow
        53: aload_0
        54: getfield      #27                 // Field lockFile:Ljava/io/File;
        57: invokevirtual #40                 // Method java/io/File.deleteOnExit:()V
        60: aload_1
        61: monitorexit
        62: goto          70
        65: astore_2
        66: aload_1
        67: monitorexit
        68: aload_2
        69: athrow
        70: return
      Exception table:
         from    to  target type
             5    62    65   any
            65    68    65   any
      LineNumberTable:
        line 246: 0
        line 247: 5
        line 248: 15
        line 249: 35
        line 251: 53
        line 252: 60
        line 253: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 53
          locals = [ class java/lang/Object ]
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
    Exceptions:
      throws java.io.IOException

  private java.io.Writer initWriter(java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException;
    descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=6, args_size=4
         0: aload_1
         1: invokevirtual #32                 // Method java/io/File.exists:()Z
         4: istore        4
         6: new           #41                 // class java/io/OutputStreamWriter
         9: dup
        10: new           #42                 // class java/io/FileOutputStream
        13: dup
        14: aload_1
        15: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
        18: iload_3
        19: invokespecial #43                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;Z)V
        22: aload_2
        23: invokestatic  #44                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
        26: invokespecial #45                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
        29: areturn
        30: astore        5
        32: aload_0
        33: getfield      #27                 // Field lockFile:Ljava/io/File;
        36: invokestatic  #47                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
        39: pop
        40: iload         4
        42: ifne          50
        45: aload_1
        46: invokestatic  #47                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
        49: pop
        50: aload         5
        52: athrow
      Exception table:
         from    to  target type
             6    29    30   Class java/io/IOException
             6    29    30   Class java/lang/RuntimeException
      LineNumberTable:
        line 266: 0
        line 268: 6
        line 269: 23
        line 268: 29
        line 271: 30
        line 272: 32
        line 273: 40
        line 274: 45
        line 276: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           32      21     5    ex   Ljava/lang/Exception;
            0      53     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0      53     1  file   Ljava/io/File;
            0      53     2 charset   Ljava/nio/charset/Charset;
            0      53     3 append   Z
            6      47     4 fileExistedAlready   Z
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/apache/commons/io/output/LockableFileWriter, class java/io/File, class java/nio/charset/Charset, int, int ]
          stack = [ class java/lang/Exception ]
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class java/lang/Exception ]
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: getfield      #30                 // Field out:Ljava/io/Writer;
         4: invokevirtual #48                 // Method java/io/Writer.close:()V
         7: aload_0
         8: getfield      #27                 // Field lockFile:Ljava/io/File;
        11: invokevirtual #49                 // Method java/io/File.delete:()Z
        14: pop
        15: goto          29
        18: astore_1
        19: aload_0
        20: getfield      #27                 // Field lockFile:Ljava/io/File;
        23: invokevirtual #49                 // Method java/io/File.delete:()Z
        26: pop
        27: aload_1
        28: athrow
        29: return
      Exception table:
         from    to  target type
             0     7    18   any
      LineNumberTable:
        line 289: 0
        line 291: 7
        line 292: 15
        line 291: 18
        line 292: 27
        line 293: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
      StackMapTable: number_of_entries = 2
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 10 /* same */
    Exceptions:
      throws java.io.IOException

  public void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #30                 // Field out:Ljava/io/Writer;
         4: iload_1
         5: invokevirtual #50                 // Method java/io/Writer.write:(I)V
         8: return
      LineNumberTable:
        line 303: 0
        line 304: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0       9     1   idx   I
    Exceptions:
      throws java.io.IOException

  public void write(char[]) throws java.io.IOException;
    descriptor: ([C)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #30                 // Field out:Ljava/io/Writer;
         4: aload_1
         5: invokevirtual #51                 // Method java/io/Writer.write:([C)V
         8: return
      LineNumberTable:
        line 313: 0
        line 314: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0       9     1   chr   [C
    Exceptions:
      throws java.io.IOException

  public void write(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #30                 // Field out:Ljava/io/Writer;
         4: aload_1
         5: iload_2
         6: iload_3
         7: invokevirtual #52                 // Method java/io/Writer.write:([CII)V
        10: return
      LineNumberTable:
        line 325: 0
        line 326: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0      11     1   chr   [C
            0      11     2    st   I
            0      11     3   end   I
    Exceptions:
      throws java.io.IOException

  public void write(java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #30                 // Field out:Ljava/io/Writer;
         4: aload_1
         5: invokevirtual #53                 // Method java/io/Writer.write:(Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 335: 0
        line 336: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0       9     1   str   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  public void write(java.lang.String, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/String;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #30                 // Field out:Ljava/io/Writer;
         4: aload_1
         5: iload_2
         6: iload_3
         7: invokevirtual #54                 // Method java/io/Writer.write:(Ljava/lang/String;II)V
        10: return
      LineNumberTable:
        line 347: 0
        line 348: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
            0      11     1   str   Ljava/lang/String;
            0      11     2    st   I
            0      11     3   end   I
    Exceptions:
      throws java.io.IOException

  public void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #30                 // Field out:Ljava/io/Writer;
         4: invokevirtual #55                 // Method java/io/Writer.flush:()V
         7: return
      LineNumberTable:
        line 356: 0
        line 357: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/LockableFileWriter;
    Exceptions:
      throws java.io.IOException
}
SourceFile: "LockableFileWriter.java"
