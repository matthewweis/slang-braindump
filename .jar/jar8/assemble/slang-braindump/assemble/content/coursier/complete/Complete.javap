Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/complete/Complete.class
  Last modified May 29, 2022; size 21568 bytes
  SHA-256 checksum 35b97ec1f7fbbfaf053b6fc4cd15b565852dcc81d8e6ae6d24e52d17212dc60b
  Compiled from "Complete.scala"
public final class coursier.complete.Complete<F extends java.lang.Object> extends java.lang.Object implements scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/complete/Complete
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 6, methods: 52, attributes: 7
Constant pool:
    #1 = Utf8               coursier/complete/Complete
    #2 = Class              #1            // coursier/complete/Complete
    #3 = Utf8               <F:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Product
    #7 = Class              #6            // scala/Product
    #8 = Utf8               java/io/Serializable
    #9 = Class              #8            // java/io/Serializable
   #10 = Utf8               Complete.scala
   #11 = Utf8               Lscala/reflect/ScalaSignature;
   #12 = Utf8               bytes
   #13 = Utf8               \u0006\u0005\t5h\u0001\u0002$H\u00051C\u0001b\u0019\u0001\u0003\u0006\u0004%\t\u0001\u001a\u0005\tq\u0002\u0011\t\u0011)A\u0005K\"A\u0011\u0010\u0001BC\u0002\u0013\u0005!\u0010C\u0005\u0002\n\u0001\u0011\t\u0011)A\u0005w\"Q\u00111\u0002\u0001\u0003\u0006\u0004%\t!!\u0004\t\u0015\u0005\u0015\u0002A!A!\u0002\u0013\ty\u0001\u0003\u0006\u0002(\u0001\u0011)\u0019!C\u0001\u0003\u001bA!\"!\u000b\u0001\u0005\u0003\u0005\u000b\u0011BA\b\u0011)\tY\u0003\u0001BC\u0002\u0013\u0005\u0011Q\u0006\u0005\u000b\u0003_\u0001!\u0011!Q\u0001\n\u0005U\u0001BCA\u0019\u0001\t\u0015\r\u0011b\u0001\u00024!Q\u0011\u0011\t\u0001\u0003\u0002\u0003\u0006I!!\u000e\t\u000f\u0005\r\u0003\u0001\"\u0001\u0002F!9\u00111\t\u0001\u0005\u0002\u0005e\u0003bBA1\u0001\u0011%\u00111\u0007\u0005\b\u0003G\u0002A\u0011AA3\u0011\u001d\t\t\b\u0001C\u0001\u0003gBq!!\u001d\u0001\t\u0003\t\u0019\tC\u0004\u0002\b\u0002!\t!!#\t\u000f\u0005E\u0005\u0001\"\u0001\u0002\u0014\"1\u0001\n\u0001C\u0001\u0003/Cq!!+\u0001\t\u0003\tY\u000bC\u0004\u00036\u0002!\tAa.\t\u000f\tm\u0006\u0001\"\u0001\u0003>\"9\u0011q\u0011\u0001\u0005\u0002\t\u0005\u0007b\u0002Bc\u0001\u0011\u0005!q\u0019\u0005\b\u0005/\u0002A\u0011\u0001Bf\u0011\u001d\u0011y\r\u0001C\u0001\u0005#DqAa\u0019\u0001\t\u0003\u0012)\u0007C\u0004\u0003r\u0001!\tE!6\t\u000f\te\u0004\u0001\"\u0011\u0003Z\"9!q\u0010\u0001\u0005B\t\u0005\u0005b\u0002BB\u0001\u0011%!Q\u001c\u0005\b\u0005\u0013\u0003A\u0011\tBF\u0011\u001d\u0011i\t\u0001C!\u0005#BqAa$\u0001\t\u0003\u0012)\u000fC\u0004\u0003\u0018\u0002!\tE!;\b\u000f\u0005Mv\t#\u0001\u00026\u001a1ai\u0012E\u0001\u0003oCq!a\u0011(\t\u0003\t9\rC\u0004\u0002J\u001e\"\t!a3\t\u000f\u0005Uw\u0005\"\u0001\u0002X\"9\u0011\u0011Z\u0014\u0005\u0002\u0005u\u0007bBAeO\u0011\u0005\u0011Q\u001f\u0004\u0007\u0005+9#Aa\u0006\t\u0015\u0005-RF!b\u0001\n\u0003\u0011I\u0002\u0003\u0006\u000205\u0012\t\u0011)A\u0005\u00057A!Ba\f.\u0005\u000b\u0007I\u0011\u0001B\u0019\u0011)\u0011\u0019%\fB\u0001B\u0003%!1\u0007\u0005\b\u0003\u0007jC\u0011\u0001B#\u0011\u001d\u0011y%\fC\u0001\u0005#BqAa\u0015.\t\u0003\u0011)\u0006C\u0004\u0003X5\"\tA!\u0017\t\u000f\tuS\u0006\"\u0001\u0003`!9!1M\u0017\u0005B\t\u0015\u0004b\u0002B9[\u0011\u0005#1\u000f\u0005\b\u0005sjC\u0011\tB>\u0011\u001d\u0011y(\fC!\u0005\u0003CqAa!.\t\u0013\u0011)\tC\u0004\u0003\n6\"\tEa#\t\u000f\t5U\u0006\"\u0011\u0003R!9!qR\u0017\u0005B\tE\u0005b\u0002BL[\u0011\u0005#\u0011T\u0004\b\u0005;;\u0003\u0012\u0001BP\r\u001d\u0011)b\nE\u0001\u0005CCq!a\u0011B\t\u0003\u0011\u0019\u000bC\u0004\u0002J\u0006#\tA!*\t\u0013\t-\u0016)!A\u0005\n\t5\u0006\"\u0003BVO\u0005\u0005I\u0011\u0002BW\u0005!\u0019u.\u001c9mKR,\'B\u0001%J\u0003!\u0019w.\u001c9mKR,\'\"\u0001&\u0002\u0011\r|WO]:jKJ\u001c\u0001!\u0006\u0002NYN!\u0001A\u0014+X!\ty%+D\u0001Q\u0015\u0005\t\u0016!B:dC2\f\u0017BA*Q\u0005\u0019\te.\u001f*fMB\u0011q*V\u0005\u0003-B\u0013q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002YA:\u0011\u0011L\u0018\b\u00035vk\u0011a\u0017\u0006\u00039.\u000ba\u0001\u0010:p_Rt\u0014\"A)\n\u0005}\u0003\u0016a\u00029bG.\fw-Z\u0005\u0003C\n\u0014AbU3sS\u0006d\u0017N_1cY\u0016T!a\u0018)\u0002\u000b\r\f7\r[3\u0016\u0003\u0015\u00042A\u001a5k\u001b\u00059\'BA2J\u0013\tIwMA\u0003DC\u000eDW\r\u0005\u0002lY2\u0001A!B7\u0001\u0005\u0004q\'!\u0001$\u0016\u0005=4\u0018C\u00019t!\ty\u0015/\u0003\u0002s!\n9aj\u001c;iS:<\u0007CA(u\u0013\t)\bKA\u0002B]f$Qa\u001e7C\u0002=\u0014\u0011aX\u0001\u0007G\u0006\u001c\u0007.\u001a\u0011\u0002\u0019I,\u0007o\\:ji>\u0014\u0018.Z:\u0016\u0003m\u00042\u0001\u0017?\u007f\u0013\ti(MA\u0002TKF\u00042a`A\u0003\u001b\t\t\tAC\u0002\u0002\u0004%\u000bAaY8sK&!\u0011qAA\u0001\u0005)\u0011V\r]8tSR|\'/_\u0001\u000ee\u0016\u0004xn]5u_JLWm\u001d\u0011\u0002\u001fM\u001c\u0017\r\\1WKJ\u001c\u0018n\u001c8PaR,\"!a\u0004\u0011\u000b=\u000b\t\"!\u0006\n\u0007\u0005M\u0001K\u0001\u0004PaRLwN\u001c\t\u0005\u0003/\tyB\u0004\u0003\u0002\u001a\u0005m\u0001C\u0001.Q\u0013\r\ti\u0002U\u0001\u0007!J,G-\u001a4\n\t\u0005\u0005\u00121\u0005\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0007\u0005u\u0001+\u0001\ttG\u0006d\u0017MV3sg&|gn\u00149uA\u0005)2oY1mC\nKg.\u0019:z-\u0016\u00148/[8o\u001fB$\u0018AF:dC2\f\')\u001b8bef4VM]:j_:|\u0005\u000f\u001e\u0011\u0002\u000b%t\u0007/\u001e;\u0016\u0005\u0005U\u0011AB5oaV$\b%\u0001\u0003ts:\u001cWCAA\u001b!\u0015\t9$!\u0010k\u001b\t\tIDC\u0002\u0002<%\u000bA!\u001e;jY&!\u0011qHA\u001d\u0005\u0011\u0019\u0016P\\2\u0002\u000bMLhn\u0019\u0011\u0002\rqJg.\u001b;?)1\t9%a\u0014\u0002R\u0005M\u0013QKA,)\u0011\tI%!\u0014\u0011\t\u0005-\u0003A[\u0007\u0002\u000f\"9\u0011\u0011G\u0007A\u0004\u0005U\u0002\"B2\u000e\u0001\u0004)\u0007\"B=\u000e\u0001\u0004Y\bbBA\u0006\u001b\u0001\u0007\u0011q\u0002\u0005\b\u0003Oi\u0001\u0019AA\b\u0011\u001d\tY#\u0004a\u0001\u0003+!B!a\u0017\u0002`Q!\u0011\u0011JA/\u0011\u001d\t\tD\u0004a\u0002\u0003kAQa\u0019\bA\u0002\u0015\f\u0011AR\u0001\u0010C\u0012$\'+\u001a9pg&$xN]5fgR!\u0011\u0011JA4\u0011\u001d\tI\u0007\u0005a\u0001\u0003W\n!B]3q_NLGo\u001c:z!\u0011y\u0015Q\u000e@\n\u0007\u0005=\u0004K\u0001\u0006=e\u0016\u0004X-\u0019;fIz\n\u0001c^5uQN\u001b\u0017\r\\1WKJ\u001c\u0018n\u001c8\u0015\r\u0005%\u0013QOA=\u0011\u001d\t9(\u0005a\u0001\u0003+\tqA^3sg&|g\u000eC\u0004\u0002|E\u0001\r!! \u0002\'\u0005$\'.^:u\u0005&t\u0017M]=WKJ\u001c\u0018n\u001c8\u0011\u0007=\u000by(C\u0002\u0002\u0002B\u0013qAQ8pY\u0016\fg\u000e\u0006\u0003\u0002J\u0005\u0015\u0005bBA<%\u0001\u0007\u0011QC\u0001\u0014o&$\bnU2bY\u00064VM]:j_:|\u0005\u000f\u001e\u000b\u0007\u0003\u0013\nY)a$\t\u000f\u000555\u00031\u0001\u0002\u0010\u0005Qa/\u001a:tS>tw\n\u001d;\t\u000f\u0005m4\u00031\u0001\u0002~\u00051r/\u001b;i\'\u000e\fG.\u0019\"j]\u0006\u0014\u0018PV3sg&|g\u000e\u0006\u0003\u0002J\u0005U\u0005bBA<)\u0001\u0007\u0011Q\u0003\u000b\u0003\u00033\u0003Ba\u001b7\u0002\u001cB9q*!(\u0002\"\u0006\u001d\u0016bAAP!\n1A+\u001e9mKJ\u00022aTAR\u0013\r\t)\u000b\u0015\u0002\u0004\u0013:$\b\u0003\u0002-}\u0003+\taA]3tk2$HCAAW!\u0011YG.a,\u0011\u0007\u0005EVFD\u0002\u0002L\u0019\n\u0001bQ8na2,G/\u001a\t\u0004\u0003\u0017:3\u0003B\u0014O\u0003s\u0003B!a/\u0002F6\u0011\u0011Q\u0018\u0006\u0005\u0003\u007f\u000b\t-\u0001\u0002j_*\u0011\u00111Y\u0001\u0005U\u00064\u0018-C\u0002b\u0003{#\"!!.\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u0005\u00055\u0007#BA&\u0001\u0005=\u0007\u0003BA\u001c\u0003#LA!a5\u0002:\t!A+Y:l\u0003I\u00198-\u00197b\u0005&t\u0017M]=WKJ\u001c\u0018n\u001c8\u0015\t\u0005U\u0011\u0011\u001c\u0005\b\u00037T\u0003\u0019AA\u000b\u00031\u00198-\u00197b-\u0016\u00148/[8o+\u0011\ty.a:\u0015\t\u0005\u0005\u0018\u0011\u001f\u000b\u0005\u0003G\fi\u000fE\u0003\u0002L\u0001\t)\u000fE\u0002l\u0003O$a!\\\u0016C\u0002\u0005%XcA8\u0002l\u00121q/a:C\u0002=Dq!!\r,\u0001\b\ty\u000f\u0005\u0004\u00028\u0005u\u0012Q\u001d\u0005\u0007G.\u0002\r!a=\u0011\t\u0019D\u0017Q]\u000b\u0005\u0003o\fy\u0010\u0006\u0007\u0002z\n%!Q\u0002B\b\u0005#\u0011\u0019\u0002\u0006\u0003\u0002|\n\u0015\u0001#BA&\u0001\u0005u\bcA6\u0002\u0000\u00121Q\u000e\fb\u0001\u0005\u0003)2a\u001cB\u0002\t\u00199\u0018q b\u0001_\"9\u0011\u0011\u0007\u0017A\u0004\t\u001d\u0001CBA\u001c\u0003{\ti\u0010\u0003\u0004dY\u0001\u0007!1\u0002\t\u0005M\"\fi\u0010C\u0003zY\u0001\u00071\u0010C\u0004\u0002\f1\u0002\r!a\u0004\t\u000f\u0005\u001dB\u00061\u0001\u0002\u0010!9\u00111\u0006\u0017A\u0002\u0005U!A\u0002*fgVdGo\u0005\u0003.\u001dR;VC\u0001B\u000e!\u0011\u0011iB!\u000b\u000f\t\t}!Q\u0005\b\u0004\u007f\n\u0005\u0012\u0002\u0002B\u0012\u0003\u0003\t!BU3q_NLGo\u001c:z\u0013\u0011\t\u0019La\n\u000b\t\t\r\u0012\u0011A\u0005\u0005\u0005W\u0011iCA\u0003J]B,HO\u0003\u0003\u00024\n\u001d\u0012a\u0002:fgVdGo]\u000b\u0003\u0005g\u0001B\u0001\u0017?\u00036A1q*!(\u007f\u0005o\u0001r\u0001\u0017B\u001d\u0005{\t9+C\u0002\u0003<\t\u0014a!R5uQ\u0016\u0014\bc\u0001-\u0003@%\u0019!\u0011\t2\u0003\u0013QC\'o\\<bE2,\u0017\u0001\u0003:fgVdGo\u001d\u0011\u0015\r\t\u001d#1\nB\'!\r\u0011I%L\u0007\u0002O!9\u00111\u0006\u001aA\u0002\tm\u0001b\u0002B\u0018e\u0001\u0007!1G\u0001\u0005MJ|W.\u0006\u0002\u0002\"\u0006Y1m\\7qY\u0016$\u0018n\u001c8t+\t\t9+A\u0005xSRD\u0017J\u001c9viR!!q\tB.\u0011\u001d\tY#\u000ea\u0001\u00057\t1b^5uQJ+7/\u001e7ugR!!q\tB1\u0011\u001d\u0011yC\u000ea\u0001\u0005g\t\u0001\u0002^8TiJLgn\u001a\u000b\u0003\u0005O\u0002BA!\u001b\u0003p5\u0011!1\u000e\u0006\u0005\u0005[\n\t-\u0001\u0003mC:<\u0017\u0002BA\u0011\u0005W\n\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0005\u0003{\u0012)\b\u0003\u0004\u0003xa\u0002\ra]\u0001\u0004_\nT\u0017AB3rk\u0006d7\u000f\u0006\u0003\u0002~\tu\u0004B\u0002B<s\u0001\u00071/\u0001\u0005iCND7i\u001c3f)\t\t\t+A\u0003ukBdW-\u0006\u0002\u0003\bB9q*!(\u0003\u001c\tM\u0012!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070\u0006\u0002\u0003h\u0005a\u0001O]8ek\u000e$\u0018I]5us\u0006q\u0001O]8ek\u000e$X\t\\3nK:$HcA:\u0003\u0014\"9!Q\u0013 A\u0002\u0005\u0005\u0016!\u00018\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0005\u0005O\u0012Y\nC\u0004\u0003\u0016~\u0002\r!!)\u0002\rI+7/\u001e7u!\r\u0011I%Q\n\u0005\u0003:\u000bI\f\u0006\u0002\u0003 R1!q\tBT\u0005SCq!a\u000bD\u0001\u0004\u0011Y\u0002C\u0004\u00030\r\u0003\rAa\r\u0002\u0019]\u0014\u0018\u000e^3SKBd\u0017mY3\u0015\u0005\t=\u0006\u0003\u0002B5\u0005cKAAa-\u0003l\t1qJ\u00196fGR\f\u0011b^5uQ\u000e\u000b7\r[3\u0015\t\u0005%#\u0011\u0018\u0005\u0006G^\u0001\r!Z\u0001\u0011o&$\bNU3q_NLGo\u001c:jKN$B!!\u0013\u0003@\")\u0011\u0010\u0007a\u0001wR!\u0011\u0011\nBb\u0011\u001d\tY!\u0007a\u0001\u0003\u001f\t\u0011d^5uQN\u001b\u0017\r\\1CS:\f\'/\u001f,feNLwN\\(qiR!\u0011\u0011\nBe\u0011\u001d\t9C\u0007a\u0001\u0003\u001f!B!!\u0013\u0003N\"9\u00111F\u000eA\u0002\u0005U\u0011\u0001C<ji\"\u001c\u0016P\\2\u0015\t\u0005%#1\u001b\u0005\b\u0003ca\u0002\u0019AA\u001b)\u0011\tiHa6\t\r\t]d\u00041\u0001t)\u0011\tiHa7\t\r\t]t\u00041\u0001t+\t\u0011y\u000eE\u0007P\u0005C,70a\u0004\u0002\u0010\u0005U\u0011QG\u0005\u0004\u0005G\u0004&A\u0002+va2,g\u0007F\u0002t\u0005ODqA!&%\u0001\u0004\t\t\u000b\u0006\u0003\u0003h\t-\bb\u0002BKK\u0001\u0007\u0011\u0011\u0015
   #14 = Utf8               coursier/cache/CacheLogger$Using
   #15 = Class              #14           // coursier/cache/CacheLogger$Using
   #16 = Utf8               coursier/cache/CacheLogger
   #17 = Class              #16           // coursier/cache/CacheLogger
   #18 = Utf8               Using
   #19 = Utf8               coursier/complete/Complete$Result
   #20 = Class              #19           // coursier/complete/Complete$Result
   #21 = Utf8               Result
   #22 = Utf8               coursier/complete/Complete$Result$
   #23 = Class              #22           // coursier/complete/Complete$Result$
   #24 = Utf8
   #25 = Utf8               coursier/core/Repository$Complete
   #26 = Class              #25           // coursier/core/Repository$Complete
   #27 = Utf8               coursier/core/Repository
   #28 = Class              #27           // coursier/core/Repository
   #29 = Utf8               Complete
   #30 = Utf8               coursier/core/Repository$Complete$
   #31 = Class              #30           // coursier/core/Repository$Complete$
   #32 = Utf8               coursier/core/Repository$Complete$Input
   #33 = Class              #32           // coursier/core/Repository$Complete$Input
   #34 = Utf8               Input
   #35 = Utf8               coursier/core/Repository$Complete$Result
   #36 = Class              #35           // coursier/core/Repository$Complete$Result
   #37 = Utf8               coursier/util/Monad$AllOps
   #38 = Class              #37           // coursier/util/Monad$AllOps
   #39 = Utf8               coursier/util/Monad
   #40 = Class              #39           // coursier/util/Monad
   #41 = Utf8               AllOps
   #42 = Utf8               coursier/util/Monad$ops$
   #43 = Class              #42           // coursier/util/Monad$ops$
   #44 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #45 = Class              #44           // java/lang/invoke/MethodHandles$Lookup
   #46 = Utf8               java/lang/invoke/MethodHandles
   #47 = Class              #46           // java/lang/invoke/MethodHandles
   #48 = Utf8               Lookup
   #49 = Utf8               scala/Predef$ArrowAssoc$
   #50 = Class              #49           // scala/Predef$ArrowAssoc$
   #51 = Utf8               scala/Predef
   #52 = Class              #51           // scala/Predef
   #53 = Utf8               cache
   #54 = Utf8               Lcoursier/cache/Cache;
   #55 = Utf8               Lcoursier/cache/Cache<TF;>;
   #56 = Utf8               repositories
   #57 = Utf8               Lscala/collection/immutable/Seq;
   #58 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;
   #59 = Utf8               scalaVersionOpt
   #60 = Utf8               Lscala/Option;
   #61 = Utf8               Lscala/Option<Ljava/lang/String;>;
   #62 = Utf8               scalaBinaryVersionOpt
   #63 = Utf8               input
   #64 = Utf8               Ljava/lang/String;
   #65 = Utf8               sync
   #66 = Utf8               Lcoursier/util/Sync;
   #67 = Utf8               Lcoursier/util/Sync<TF;>;
   #68 = Utf8               apply
   #69 = Utf8               (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
   #70 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/String;>;Ljava/lang/String;Lcoursier/util/Sync<TF;>;)Lcoursier/complete/Complete<TF;>;
   #71 = Utf8               coursier/complete/Complete$
   #72 = Class              #71           // coursier/complete/Complete$
   #73 = Utf8               MODULE$
   #74 = Utf8               Lcoursier/complete/Complete$;
   #75 = NameAndType        #73:#74       // MODULE$:Lcoursier/complete/Complete$;
   #76 = Fieldref           #72.#75       // coursier/complete/Complete$.MODULE$:Lcoursier/complete/Complete$;
   #77 = NameAndType        #68:#69       // apply:(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
   #78 = Methodref          #72.#77       // coursier/complete/Complete$.apply:(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
   #79 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
   #80 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/complete/Complete<TF;>;
   #81 = NameAndType        #68:#79       // apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
   #82 = Methodref          #72.#81       // coursier/complete/Complete$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
   #83 = Utf8               scalaBinaryVersion
   #84 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #85 = Utf8               scalaVersion
   #86 = NameAndType        #83:#84       // scalaBinaryVersion:(Ljava/lang/String;)Ljava/lang/String;
   #87 = Methodref          #72.#86       // coursier/complete/Complete$.scalaBinaryVersion:(Ljava/lang/String;)Ljava/lang/String;
   #88 = Utf8               ()Lcoursier/complete/Complete;
   #89 = Utf8               ()Lcoursier/complete/Complete<Lcoursier/util/Task;>;
   #90 = NameAndType        #68:#88       // apply:()Lcoursier/complete/Complete;
   #91 = Methodref          #72.#90       // coursier/complete/Complete$.apply:()Lcoursier/complete/Complete;
   #92 = Utf8               productIterator
   #93 = Utf8               ()Lscala/collection/Iterator;
   #94 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #95 = Utf8               productIterator$
   #96 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #97 = NameAndType        #95:#96       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #98 = InterfaceMethodref #7.#97        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #99 = Utf8               this
  #100 = Utf8               Lcoursier/complete/Complete;
  #101 = Utf8               productElementNames
  #102 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
  #103 = Utf8               productElementNames$
  #104 = NameAndType        #103:#96      // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
  #105 = InterfaceMethodref #7.#104       // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
  #106 = Utf8               ()Lcoursier/cache/Cache;
  #107 = Utf8               ()Lcoursier/cache/Cache<TF;>;
  #108 = NameAndType        #53:#54       // cache:Lcoursier/cache/Cache;
  #109 = Fieldref           #2.#108       // coursier/complete/Complete.cache:Lcoursier/cache/Cache;
  #110 = Utf8               ()Lscala/collection/immutable/Seq;
  #111 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;
  #112 = NameAndType        #56:#57       // repositories:Lscala/collection/immutable/Seq;
  #113 = Fieldref           #2.#112       // coursier/complete/Complete.repositories:Lscala/collection/immutable/Seq;
  #114 = Utf8               ()Lscala/Option;
  #115 = Utf8               ()Lscala/Option<Ljava/lang/String;>;
  #116 = NameAndType        #59:#60       // scalaVersionOpt:Lscala/Option;
  #117 = Fieldref           #2.#116       // coursier/complete/Complete.scalaVersionOpt:Lscala/Option;
  #118 = NameAndType        #62:#60       // scalaBinaryVersionOpt:Lscala/Option;
  #119 = Fieldref           #2.#118       // coursier/complete/Complete.scalaBinaryVersionOpt:Lscala/Option;
  #120 = Utf8               ()Ljava/lang/String;
  #121 = NameAndType        #63:#64       // input:Ljava/lang/String;
  #122 = Fieldref           #2.#121       // coursier/complete/Complete.input:Ljava/lang/String;
  #123 = Utf8               ()Lcoursier/util/Sync;
  #124 = Utf8               ()Lcoursier/util/Sync<TF;>;
  #125 = NameAndType        #65:#66       // sync:Lcoursier/util/Sync;
  #126 = Fieldref           #2.#125       // coursier/complete/Complete.sync:Lcoursier/util/Sync;
  #127 = Utf8               F
  #128 = NameAndType        #65:#123      // sync:()Lcoursier/util/Sync;
  #129 = Methodref          #2.#128       // coursier/complete/Complete.sync:()Lcoursier/util/Sync;
  #130 = Utf8               addRepositories
  #131 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete;
  #132 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;)Lcoursier/complete/Complete<TF;>;
  #133 = Utf8               repository
  #134 = NameAndType        #56:#110      // repositories:()Lscala/collection/immutable/Seq;
  #135 = Methodref          #2.#134       // coursier/complete/Complete.repositories:()Lscala/collection/immutable/Seq;
  #136 = Utf8               scala/collection/immutable/Seq
  #137 = Class              #136          // scala/collection/immutable/Seq
  #138 = Utf8               $plus$plus
  #139 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #140 = NameAndType        #138:#139     // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #141 = InterfaceMethodref #137.#140     // scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #142 = Utf8               withRepositories
  #143 = NameAndType        #142:#131     // withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete;
  #144 = Methodref          #2.#143       // coursier/complete/Complete.withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete;
  #145 = Utf8               withScalaVersion
  #146 = Utf8               (Ljava/lang/String;Z)Lcoursier/complete/Complete;
  #147 = Utf8               (Ljava/lang/String;Z)Lcoursier/complete/Complete<TF;>;
  #148 = Utf8               version
  #149 = Utf8               adjustBinaryVersion
  #150 = Utf8               scala/Some
  #151 = Class              #150          // scala/Some
  #152 = Utf8               <init>
  #153 = Utf8               (Ljava/lang/Object;)V
  #154 = NameAndType        #152:#153     // "<init>":(Ljava/lang/Object;)V
  #155 = Methodref          #151.#154     // scala/Some."<init>":(Ljava/lang/Object;)V
  #156 = Utf8               withScalaVersionOpt
  #157 = Utf8               (Lscala/Option;)Lcoursier/complete/Complete;
  #158 = NameAndType        #156:#157     // withScalaVersionOpt:(Lscala/Option;)Lcoursier/complete/Complete;
  #159 = Methodref          #2.#158       // coursier/complete/Complete.withScalaVersionOpt:(Lscala/Option;)Lcoursier/complete/Complete;
  #160 = NameAndType        #62:#114      // scalaBinaryVersionOpt:()Lscala/Option;
  #161 = Methodref          #2.#160       // coursier/complete/Complete.scalaBinaryVersionOpt:()Lscala/Option;
  #162 = Utf8               java/lang/String
  #163 = Class              #162          // java/lang/String
  #164 = Utf8               scala/Option
  #165 = Class              #164          // scala/Option
  #166 = Utf8               withScalaBinaryVersionOpt
  #167 = NameAndType        #166:#157     // withScalaBinaryVersionOpt:(Lscala/Option;)Lcoursier/complete/Complete;
  #168 = Methodref          #2.#167       // coursier/complete/Complete.withScalaBinaryVersionOpt:(Lscala/Option;)Lcoursier/complete/Complete;
  #169 = Utf8               Z
  #170 = Utf8               (Ljava/lang/String;)Lcoursier/complete/Complete;
  #171 = Utf8               (Ljava/lang/String;)Lcoursier/complete/Complete<TF;>;
  #172 = NameAndType        #145:#146     // withScalaVersion:(Ljava/lang/String;Z)Lcoursier/complete/Complete;
  #173 = Methodref          #2.#172       // coursier/complete/Complete.withScalaVersion:(Ljava/lang/String;Z)Lcoursier/complete/Complete;
  #174 = Utf8               (Lscala/Option;Z)Lcoursier/complete/Complete;
  #175 = Utf8               (Lscala/Option<Ljava/lang/String;>;Z)Lcoursier/complete/Complete<TF;>;
  #176 = Utf8               versionOpt
  #177 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #178 = MethodType         #177          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #179 = Utf8               $anonfun$withScalaVersionOpt$1
  #180 = NameAndType        #179:#84      // $anonfun$withScalaVersionOpt$1:(Ljava/lang/String;)Ljava/lang/String;
  #181 = Methodref          #2.#180       // coursier/complete/Complete.$anonfun$withScalaVersionOpt$1:(Ljava/lang/String;)Ljava/lang/String;
  #182 = MethodHandle       6:#181        // REF_invokeStatic coursier/complete/Complete.$anonfun$withScalaVersionOpt$1:(Ljava/lang/String;)Ljava/lang/String;
  #183 = MethodType         #84           //  (Ljava/lang/String;)Ljava/lang/String;
  #184 = Integer            5
  #185 = Integer            1
  #186 = Utf8               java/lang/invoke/LambdaMetafactory
  #187 = Class              #186          // java/lang/invoke/LambdaMetafactory
  #188 = Utf8               altMetafactory
  #189 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #190 = NameAndType        #188:#189     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #191 = Methodref          #187.#190     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #192 = MethodHandle       6:#191        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #193 = Utf8               ()Lscala/Function1;
  #194 = NameAndType        #68:#193      // apply:()Lscala/Function1;
  #195 = InvokeDynamic      #0:#194       // #0:apply:()Lscala/Function1;
  #196 = Utf8               map
  #197 = Utf8               (Lscala/Function1;)Lscala/Option;
  #198 = NameAndType        #196:#197     // map:(Lscala/Function1;)Lscala/Option;
  #199 = Methodref          #165.#198     // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #200 = Utf8               withScalaBinaryVersion
  #201 = Utf8               complete
  #202 = Utf8               ()Ljava/lang/Object;
  #203 = Utf8               ()TF;
  #204 = Utf8               Lcoursier/util/Monad$ops$;
  #205 = NameAndType        #73:#204      // MODULE$:Lcoursier/util/Monad$ops$;
  #206 = Fieldref           #43.#205      // coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
  #207 = Utf8               result
  #208 = NameAndType        #207:#202     // result:()Ljava/lang/Object;
  #209 = Methodref          #2.#208       // coursier/complete/Complete.result:()Ljava/lang/Object;
  #210 = Utf8               toAllMonadOps
  #211 = Utf8               (Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #212 = NameAndType        #210:#211     // toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #213 = Methodref          #43.#212      // coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #214 = Utf8               $anonfun$complete$1
  #215 = Utf8               (Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
  #216 = NameAndType        #214:#215     // $anonfun$complete$1:(Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
  #217 = Methodref          #2.#216       // coursier/complete/Complete.$anonfun$complete$1:(Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
  #218 = MethodHandle       6:#217        // REF_invokeStatic coursier/complete/Complete.$anonfun$complete$1:(Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
  #219 = MethodType         #215          //  (Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
  #220 = InvokeDynamic      #1:#194       // #1:apply:()Lscala/Function1;
  #221 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #222 = NameAndType        #196:#221     // map:(Lscala/Function1;)Ljava/lang/Object;
  #223 = InterfaceMethodref #38.#222      // coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #224 = Utf8               distinct
  #225 = NameAndType        #224:#202     // distinct:()Ljava/lang/Object;
  #226 = InterfaceMethodref #137.#225     // scala/collection/immutable/Seq.distinct:()Ljava/lang/Object;
  #227 = Utf8               scala/collection/IterableOps
  #228 = Class              #227          // scala/collection/IterableOps
  #229 = Utf8               $anonfun$result$1
  #230 = Utf8               (Lcoursier/complete/Complete;Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
  #231 = NameAndType        #229:#230     // $anonfun$result$1:(Lcoursier/complete/Complete;Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
  #232 = Methodref          #2.#231       // coursier/complete/Complete.$anonfun$result$1:(Lcoursier/complete/Complete;Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
  #233 = MethodHandle       6:#232        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$1:(Lcoursier/complete/Complete;Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
  #234 = Utf8               (Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
  #235 = MethodType         #234          //  (Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
  #236 = Utf8               (Lcoursier/complete/Complete;)Lscala/Function1;
  #237 = NameAndType        #68:#236      // apply:(Lcoursier/complete/Complete;)Lscala/Function1;
  #238 = InvokeDynamic      #2:#237       // #2:apply:(Lcoursier/complete/Complete;)Lscala/Function1;
  #239 = Utf8               flatMap
  #240 = NameAndType        #239:#221     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #241 = InterfaceMethodref #228.#240     // scala/collection/IterableOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #242 = NameAndType        #127:#123     // F:()Lcoursier/util/Sync;
  #243 = Methodref          #2.#242       // coursier/complete/Complete.F:()Lcoursier/util/Sync;
  #244 = Utf8               Lcoursier/core/Repository$Complete$;
  #245 = NameAndType        #73:#244      // MODULE$:Lcoursier/core/Repository$Complete$;
  #246 = Fieldref           #31.#245      // coursier/core/Repository$Complete$.MODULE$:Lcoursier/core/Repository$Complete$;
  #247 = NameAndType        #63:#120      // input:()Ljava/lang/String;
  #248 = Methodref          #2.#247       // coursier/complete/Complete.input:()Ljava/lang/String;
  #249 = NameAndType        #59:#114      // scalaVersionOpt:()Lscala/Option;
  #250 = Methodref          #2.#249       // coursier/complete/Complete.scalaVersionOpt:()Lscala/Option;
  #251 = MethodType         #202          //  ()Ljava/lang/Object;
  #252 = Utf8               $anonfun$result$3
  #253 = NameAndType        #252:#120     // $anonfun$result$3:()Ljava/lang/String;
  #254 = Methodref          #2.#253       // coursier/complete/Complete.$anonfun$result$3:()Ljava/lang/String;
  #255 = MethodHandle       6:#254        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$3:()Ljava/lang/String;
  #256 = MethodType         #120          //  ()Ljava/lang/String;
  #257 = Utf8               ()Lscala/Function0;
  #258 = NameAndType        #68:#257      // apply:()Lscala/Function0;
  #259 = InvokeDynamic      #3:#258       // #3:apply:()Lscala/Function0;
  #260 = Utf8               getOrElse
  #261 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #262 = NameAndType        #260:#261     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #263 = Methodref          #165.#262     // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #264 = Utf8               $anonfun$result$4
  #265 = NameAndType        #264:#120     // $anonfun$result$4:()Ljava/lang/String;
  #266 = Methodref          #2.#265       // coursier/complete/Complete.$anonfun$result$4:()Ljava/lang/String;
  #267 = MethodHandle       6:#266        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$4:()Ljava/lang/String;
  #268 = InvokeDynamic      #4:#258       // #4:apply:()Lscala/Function0;
  #269 = Utf8               parse
  #270 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
  #271 = NameAndType        #269:#270     // parse:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
  #272 = Methodref          #31.#271      // coursier/core/Repository$Complete$.parse:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
  #273 = Utf8               coursier/util/Sync
  #274 = Class              #273          // coursier/util/Sync
  #275 = Utf8               fromAttempt
  #276 = Utf8               (Lscala/util/Either;)Ljava/lang/Object;
  #277 = NameAndType        #275:#276     // fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
  #278 = InterfaceMethodref #274.#277     // coursier/util/Sync.fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
  #279 = Utf8               $anonfun$result$5
  #280 = Utf8               (Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #281 = NameAndType        #279:#280     // $anonfun$result$5:(Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #282 = Methodref          #2.#281       // coursier/complete/Complete.$anonfun$result$5:(Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #283 = MethodHandle       6:#282        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$5:(Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #284 = Utf8               (Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #285 = MethodType         #284          //  (Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  #286 = Utf8               (Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #287 = NameAndType        #68:#286      // apply:(Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #288 = InvokeDynamic      #5:#287       // #5:apply:(Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #289 = InterfaceMethodref #38.#240      // coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #290 = NameAndType        #53:#106      // cache:()Lcoursier/cache/Cache;
  #291 = Methodref          #2.#290       // coursier/complete/Complete.cache:()Lcoursier/cache/Cache;
  #292 = Utf8               coursier/cache/Cache
  #293 = Class              #292          // coursier/cache/Cache
  #294 = Utf8               loggerOpt
  #295 = NameAndType        #294:#114     // loggerOpt:()Lscala/Option;
  #296 = Methodref          #293.#295     // coursier/cache/Cache.loggerOpt:()Lscala/Option;
  #297 = Utf8               $anonfun$result$10
  #298 = NameAndType        #297:#177     // $anonfun$result$10:(Ljava/lang/Object;)Ljava/lang/Object;
  #299 = Methodref          #2.#298       // coursier/complete/Complete.$anonfun$result$10:(Ljava/lang/Object;)Ljava/lang/Object;
  #300 = MethodHandle       6:#299        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$10:(Ljava/lang/Object;)Ljava/lang/Object;
  #301 = Utf8               (Ljava/lang/Object;)Lscala/Function0;
  #302 = NameAndType        #68:#301      // apply:(Ljava/lang/Object;)Lscala/Function0;
  #303 = InvokeDynamic      #6:#302       // #6:apply:(Ljava/lang/Object;)Lscala/Function0;
  #304 = Utf8               $anonfun$result$11
  #305 = Utf8               (Lcoursier/complete/Complete;Ljava/lang/Object;Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
  #306 = NameAndType        #304:#305     // $anonfun$result$11:(Lcoursier/complete/Complete;Ljava/lang/Object;Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
  #307 = Methodref          #2.#306       // coursier/complete/Complete.$anonfun$result$11:(Lcoursier/complete/Complete;Ljava/lang/Object;Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
  #308 = MethodHandle       6:#307        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$11:(Lcoursier/complete/Complete;Ljava/lang/Object;Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
  #309 = Utf8               (Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
  #310 = MethodType         #309          //  (Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
  #311 = Utf8               (Lcoursier/complete/Complete;Ljava/lang/Object;)Lscala/Function1;
  #312 = NameAndType        #68:#311      // apply:(Lcoursier/complete/Complete;Ljava/lang/Object;)Lscala/Function1;
  #313 = InvokeDynamic      #7:#312       // #7:apply:(Lcoursier/complete/Complete;Ljava/lang/Object;)Lscala/Function1;
  #314 = Utf8               fold
  #315 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #316 = NameAndType        #314:#315     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #317 = Methodref          #165.#316     // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #318 = Utf8               $anonfun$result$12
  #319 = Utf8               (Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
  #320 = NameAndType        #318:#319     // $anonfun$result$12:(Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
  #321 = Methodref          #2.#320       // coursier/complete/Complete.$anonfun$result$12:(Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
  #322 = MethodHandle       6:#321        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$12:(Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
  #323 = MethodType         #319          //  (Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
  #324 = InvokeDynamic      #8:#194       // #8:apply:()Lscala/Function1;
  #325 = Utf8               completers
  #326 = Utf8               inputF
  #327 = Utf8               Ljava/lang/Object;
  #328 = Utf8               t
  #329 = Utf8               t0
  #330 = Utf8               withCache
  #331 = Utf8               (Lcoursier/cache/Cache;)Lcoursier/complete/Complete;
  #332 = Utf8               (Lcoursier/cache/Cache<TF;>;)Lcoursier/complete/Complete<TF;>;
  #333 = Utf8               (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
  #334 = NameAndType        #152:#333     // "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
  #335 = Methodref          #2.#334       // coursier/complete/Complete."<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
  #336 = Utf8               (Lscala/Option<Ljava/lang/String;>;)Lcoursier/complete/Complete<TF;>;
  #337 = Utf8               withInput
  #338 = Utf8               withSync
  #339 = Utf8               (Lcoursier/util/Sync;)Lcoursier/complete/Complete;
  #340 = Utf8               (Lcoursier/util/Sync<TF;>;)Lcoursier/complete/Complete<TF;>;
  #341 = Utf8               toString
  #342 = Utf8               java/lang/StringBuilder
  #343 = Class              #342          // java/lang/StringBuilder
  #344 = Utf8               Complete(
  #345 = String             #344          // Complete(
  #346 = Utf8               (Ljava/lang/String;)V
  #347 = NameAndType        #152:#346     // "<init>":(Ljava/lang/String;)V
  #348 = Methodref          #343.#347     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #349 = Utf8               valueOf
  #350 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #351 = NameAndType        #349:#350     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #352 = Methodref          #163.#351     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #353 = Utf8               append
  #354 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #355 = NameAndType        #353:#354     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #356 = Methodref          #343.#355     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #357 = Utf8               ,
  #358 = String             #357          // ,
  #359 = Utf8               )
  #360 = String             #359          // )
  #361 = NameAndType        #341:#120     // toString:()Ljava/lang/String;
  #362 = Methodref          #343.#361     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #363 = Utf8               b
  #364 = Utf8               Ljava/lang/StringBuilder;
  #365 = Utf8               canEqual
  #366 = Utf8               (Ljava/lang/Object;)Z
  #367 = Utf8               obj
  #368 = Utf8               equals
  #369 = NameAndType        #365:#366     // canEqual:(Ljava/lang/Object;)Z
  #370 = Methodref          #2.#369       // coursier/complete/Complete.canEqual:(Ljava/lang/Object;)Z
  #371 = NameAndType        #368:#366     // equals:(Ljava/lang/Object;)Z
  #372 = Methodref          #5.#371       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #373 = Utf8               other
  #374 = Utf8               hashCode
  #375 = Utf8               ()I
  #376 = String             #29           // Complete
  #377 = Utf8               scala/runtime/Statics
  #378 = Class              #377          // scala/runtime/Statics
  #379 = Utf8               anyHash
  #380 = Utf8               (Ljava/lang/Object;)I
  #381 = NameAndType        #379:#380     // anyHash:(Ljava/lang/Object;)I
  #382 = Methodref          #378.#381     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #383 = Utf8               code
  #384 = Utf8               I
  #385 = Utf8               tuple
  #386 = Utf8               ()Lscala/Tuple6;
  #387 = Utf8               ()Lscala/Tuple6<Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/String;>;Ljava/lang/String;Lcoursier/util/Sync<TF;>;>;
  #388 = Utf8               scala/Tuple6
  #389 = Class              #388          // scala/Tuple6
  #390 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #391 = NameAndType        #152:#390     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #392 = Methodref          #389.#391     // scala/Tuple6."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #393 = Utf8               productPrefix
  #394 = Utf8               productArity
  #395 = Utf8               productElement
  #396 = Utf8               (I)Ljava/lang/Object;
  #397 = Utf8               n
  #398 = Utf8               java/lang/IndexOutOfBoundsException
  #399 = Class              #398          // java/lang/IndexOutOfBoundsException
  #400 = Utf8               scala/runtime/BoxesRunTime
  #401 = Class              #400          // scala/runtime/BoxesRunTime
  #402 = Utf8               boxToInteger
  #403 = Utf8               (I)Ljava/lang/Integer;
  #404 = NameAndType        #402:#403     // boxToInteger:(I)Ljava/lang/Integer;
  #405 = Methodref          #401.#404     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #406 = Methodref          #5.#361       // java/lang/Object.toString:()Ljava/lang/String;
  #407 = Methodref          #399.#347     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #408 = Utf8               productElementName
  #409 = Utf8               (I)Ljava/lang/String;
  #410 = String             #53           // cache
  #411 = String             #56           // repositories
  #412 = String             #59           // scalaVersionOpt
  #413 = String             #62           // scalaBinaryVersionOpt
  #414 = String             #63           // input
  #415 = String             #65           // sync
  #416 = Utf8               r
  #417 = Utf8               scala/Tuple2
  #418 = Class              #417          // scala/Tuple2
  #419 = Utf8               from
  #420 = NameAndType        #419:#375     // from:()I
  #421 = Methodref          #20.#420      // coursier/complete/Complete$Result.from:()I
  #422 = Utf8               completions
  #423 = NameAndType        #422:#110     // completions:()Lscala/collection/immutable/Seq;
  #424 = Methodref          #20.#423      // coursier/complete/Complete$Result.completions:()Lscala/collection/immutable/Seq;
  #425 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #426 = NameAndType        #152:#425     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #427 = Methodref          #418.#426     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #428 = Utf8               Lcoursier/complete/Complete$Result;
  #429 = Utf8               $anonfun$result$2
  #430 = Utf8               (Lcoursier/core/Repository;Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
  #431 = Utf8               r$1
  #432 = Utf8               x$1
  #433 = Utf8               Lcoursier/core/Repository;
  #434 = Utf8               Lcoursier/core/Repository$Complete;
  #435 = Utf8               $this
  #436 = Utf8               scala/Option$
  #437 = Class              #436          // scala/Option$
  #438 = Utf8               Lscala/Option$;
  #439 = NameAndType        #73:#438      // MODULE$:Lscala/Option$;
  #440 = Fieldref           #437.#439     // scala/Option$.MODULE$:Lscala/Option$;
  #441 = Utf8               fetch
  #442 = NameAndType        #441:#193     // fetch:()Lscala/Function1;
  #443 = Methodref          #293.#442     // coursier/cache/Cache.fetch:()Lscala/Function1;
  #444 = Utf8               completeOpt
  #445 = Utf8               (Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #446 = NameAndType        #444:#445     // completeOpt:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #447 = InterfaceMethodref #28.#446      // coursier/core/Repository.completeOpt:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #448 = NameAndType        #429:#430     // $anonfun$result$2:(Lcoursier/core/Repository;Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
  #449 = Methodref          #2.#448       // coursier/complete/Complete.$anonfun$result$2:(Lcoursier/core/Repository;Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
  #450 = MethodHandle       6:#449        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$2:(Lcoursier/core/Repository;Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
  #451 = Utf8               (Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
  #452 = MethodType         #451          //  (Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
  #453 = Utf8               (Lcoursier/core/Repository;)Lscala/Function1;
  #454 = NameAndType        #68:#453      // apply:(Lcoursier/core/Repository;)Lscala/Function1;
  #455 = InvokeDynamic      #9:#454       // #9:apply:(Lcoursier/core/Repository;)Lscala/Function1;
  #456 = Utf8               option2Iterable
  #457 = Utf8               (Lscala/Option;)Lscala/collection/Iterable;
  #458 = NameAndType        #456:#457     // option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #459 = Methodref          #437.#458     // scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #460 = Utf8               scala/collection/Iterable
  #461 = Class              #460          // scala/collection/Iterable
  #462 = Utf8               toSeq
  #463 = NameAndType        #462:#110     // toSeq:()Lscala/collection/immutable/Seq;
  #464 = InterfaceMethodref #461.#463     // scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
  #465 = String             #24           //
  #466 = Utf8               $anonfun$result$8
  #467 = Utf8               (Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
  #468 = Utf8               x$2
  #469 = Methodref          #36.#423      // coursier/core/Repository$Complete$Result.completions:()Lscala/collection/immutable/Seq;
  #470 = Utf8               Lcoursier/core/Repository$Complete$Result;
  #471 = Utf8               $anonfun$result$7
  #472 = Utf8               (Lcoursier/core/Repository;Lscala/util/Either;)Lscala/Tuple2;
  #473 = Utf8               repo$1
  #474 = Utf8               e
  #475 = Utf8               Lscala/Predef$ArrowAssoc$;
  #476 = NameAndType        #73:#475      // MODULE$:Lscala/Predef$ArrowAssoc$;
  #477 = Fieldref           #50.#476      // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #478 = Utf8               scala/Predef$
  #479 = Class              #478          // scala/Predef$
  #480 = Utf8               Lscala/Predef$;
  #481 = NameAndType        #73:#480      // MODULE$:Lscala/Predef$;
  #482 = Fieldref           #479.#481     // scala/Predef$.MODULE$:Lscala/Predef$;
  #483 = Utf8               ArrowAssoc
  #484 = NameAndType        #483:#177     // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #485 = Methodref          #479.#484     // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #486 = NameAndType        #466:#467     // $anonfun$result$8:(Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
  #487 = Methodref          #2.#486       // coursier/complete/Complete.$anonfun$result$8:(Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
  #488 = MethodHandle       6:#487        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$8:(Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
  #489 = MethodType         #467          //  (Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
  #490 = InvokeDynamic      #10:#194      // #10:apply:()Lscala/Function1;
  #491 = Utf8               scala/util/Either
  #492 = Class              #491          // scala/util/Either
  #493 = Utf8               (Lscala/Function1;)Lscala/util/Either;
  #494 = NameAndType        #196:#493     // map:(Lscala/Function1;)Lscala/util/Either;
  #495 = Methodref          #492.#494     // scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
  #496 = Utf8               $minus$greater$extension
  #497 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #498 = NameAndType        #496:#497     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #499 = Methodref          #50.#498      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #500 = Utf8               Lscala/util/Either;
  #501 = Utf8               $anonfun$result$6
  #502 = Utf8               (Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;Lscala/Tuple2;)Ljava/lang/Object;
  #503 = Utf8               input0$1
  #504 = Utf8               x0$1
  #505 = Utf8               _1
  #506 = NameAndType        #505:#202     // _1:()Ljava/lang/Object;
  #507 = Methodref          #418.#506     // scala/Tuple2._1:()Ljava/lang/Object;
  #508 = Utf8               _2
  #509 = NameAndType        #508:#202     // _2:()Ljava/lang/Object;
  #510 = Methodref          #418.#509     // scala/Tuple2._2:()Ljava/lang/Object;
  #511 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #512 = NameAndType        #201:#511     // complete:(Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #513 = InterfaceMethodref #26.#512      // coursier/core/Repository$Complete.complete:(Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #514 = NameAndType        #471:#472     // $anonfun$result$7:(Lcoursier/core/Repository;Lscala/util/Either;)Lscala/Tuple2;
  #515 = Methodref          #2.#514       // coursier/complete/Complete.$anonfun$result$7:(Lcoursier/core/Repository;Lscala/util/Either;)Lscala/Tuple2;
  #516 = MethodHandle       6:#515        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$7:(Lcoursier/core/Repository;Lscala/util/Either;)Lscala/Tuple2;
  #517 = Utf8               (Lscala/util/Either;)Lscala/Tuple2;
  #518 = MethodType         #517          //  (Lscala/util/Either;)Lscala/Tuple2;
  #519 = InvokeDynamic      #11:#454      // #11:apply:(Lcoursier/core/Repository;)Lscala/Function1;
  #520 = Utf8               scala/MatchError
  #521 = Class              #520          // scala/MatchError
  #522 = Methodref          #521.#154     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #523 = Utf8               repo
  #524 = Utf8               c
  #525 = Utf8               Lcoursier/core/Repository$Complete$Input;
  #526 = Utf8               Lscala/Tuple2;
  #527 = Utf8               $anonfun$result$9
  #528 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lscala/Tuple2;
  #529 = Utf8               x$3
  #530 = Utf8               completers$1
  #531 = Utf8               input0
  #532 = NameAndType        #501:#502     // $anonfun$result$6:(Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;Lscala/Tuple2;)Ljava/lang/Object;
  #533 = Methodref          #2.#532       // coursier/complete/Complete.$anonfun$result$6:(Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;Lscala/Tuple2;)Ljava/lang/Object;
  #534 = MethodHandle       6:#533        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$6:(Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;Lscala/Tuple2;)Ljava/lang/Object;
  #535 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #536 = MethodType         #535          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #537 = Utf8               (Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #538 = NameAndType        #68:#537      // apply:(Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #539 = InvokeDynamic      #12:#538      // #12:apply:(Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #540 = InterfaceMethodref #137.#222     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #541 = Utf8               gather
  #542 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #543 = NameAndType        #541:#542     // gather:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #544 = InterfaceMethodref #274.#543     // coursier/util/Sync.gather:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #545 = NameAndType        #527:#528     // $anonfun$result$9:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lscala/Tuple2;
  #546 = Methodref          #2.#545       // coursier/complete/Complete.$anonfun$result$9:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lscala/Tuple2;
  #547 = MethodHandle       6:#546        // REF_invokeStatic coursier/complete/Complete.$anonfun$result$9:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lscala/Tuple2;
  #548 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/Tuple2;
  #549 = MethodType         #548          //  (Lscala/collection/immutable/Seq;)Lscala/Tuple2;
  #550 = Utf8               (Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #551 = NameAndType        #68:#550      // apply:(Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #552 = InvokeDynamic      #13:#551      // #13:apply:(Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
  #553 = Utf8               t$1
  #554 = Utf8               logger
  #555 = Utf8               using
  #556 = Utf8               ()Lcoursier/cache/CacheLogger$Using;
  #557 = NameAndType        #555:#556     // using:()Lcoursier/cache/CacheLogger$Using;
  #558 = InterfaceMethodref #17.#557      // coursier/cache/CacheLogger.using:()Lcoursier/cache/CacheLogger$Using;
  #559 = Utf8               (Ljava/lang/Object;Lcoursier/util/Sync;)Ljava/lang/Object;
  #560 = NameAndType        #68:#559      // apply:(Ljava/lang/Object;Lcoursier/util/Sync;)Ljava/lang/Object;
  #561 = Methodref          #15.#560      // coursier/cache/CacheLogger$Using.apply:(Ljava/lang/Object;Lcoursier/util/Sync;)Ljava/lang/Object;
  #562 = Utf8               Lcoursier/cache/CacheLogger;
  #563 = Utf8               x0$2
  #564 = Utf8               Lcoursier/complete/Complete$Result$;
  #565 = NameAndType        #73:#564      // MODULE$:Lcoursier/complete/Complete$Result$;
  #566 = Fieldref           #23.#565      // coursier/complete/Complete$Result$.MODULE$:Lcoursier/complete/Complete$Result$;
  #567 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete$Result;
  #568 = NameAndType        #68:#567      // apply:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete$Result;
  #569 = Methodref          #23.#568      // coursier/complete/Complete$Result$.apply:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete$Result;
  #570 = Utf8               l
  #571 = Utf8               (Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/String;>;Ljava/lang/String;Lcoursier/util/Sync<TF;>;)V
  #572 = Utf8               ()V
  #573 = NameAndType        #152:#572     // "<init>":()V
  #574 = Methodref          #5.#573       // java/lang/Object."<init>":()V
  #575 = Utf8               $init$
  #576 = Utf8               (Lscala/Product;)V
  #577 = NameAndType        #575:#576     // $init$:(Lscala/Product;)V
  #578 = InterfaceMethodref #7.#577       // scala/Product.$init$:(Lscala/Product;)V
  #579 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)V
  #580 = Utf8               (Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)V
  #581 = Utf8               coursier/Resolve$
  #582 = Class              #581          // coursier/Resolve$
  #583 = Utf8               Lcoursier/Resolve$;
  #584 = NameAndType        #73:#583      // MODULE$:Lcoursier/Resolve$;
  #585 = Fieldref           #582.#584     // coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
  #586 = Utf8               defaultRepositories
  #587 = NameAndType        #586:#110     // defaultRepositories:()Lscala/collection/immutable/Seq;
  #588 = Methodref          #582.#587     // coursier/Resolve$.defaultRepositories:()Lscala/collection/immutable/Seq;
  #589 = Utf8               scala/None$
  #590 = Class              #589          // scala/None$
  #591 = Utf8               Lscala/None$;
  #592 = NameAndType        #73:#591      // MODULE$:Lscala/None$;
  #593 = Fieldref           #590.#592     // scala/None$.MODULE$:Lscala/None$;
  #594 = Utf8               $deserializeLambda$
  #595 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #596 = Utf8               scala/runtime/LambdaDeserialize
  #597 = Class              #596          // scala/runtime/LambdaDeserialize
  #598 = Utf8               bootstrap
  #599 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #600 = NameAndType        #598:#599     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #601 = Methodref          #597.#600     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #602 = MethodHandle       6:#601        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #603 = Utf8               lambdaDeserialize
  #604 = NameAndType        #603:#595     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #605 = InvokeDynamic      #14:#604      // #14:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #606 = Utf8               Signature
  #607 = Utf8               Code
  #608 = Utf8               MethodParameters
  #609 = Utf8               LineNumberTable
  #610 = Utf8               LocalVariableTable
  #611 = Utf8               StackMapTable
  #612 = Utf8               InnerClasses
  #613 = Utf8               SourceFile
  #614 = Utf8               RuntimeVisibleAnnotations
  #615 = Utf8               BootstrapMethods
  #616 = Utf8               ScalaInlineInfo
  #617 = Utf8               ScalaSig
{
  private final coursier.cache.Cache<F> cache;
    descriptor: Lcoursier/cache/Cache;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #55                          // Lcoursier/cache/Cache<TF;>;

  private final scala.collection.immutable.Seq<coursier.core.Repository> repositories;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #58                          // Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;

  private final scala.Option<java.lang.String> scalaVersionOpt;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #61                          // Lscala/Option<Ljava/lang/String;>;

  private final scala.Option<java.lang.String> scalaBinaryVersionOpt;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #61                          // Lscala/Option<Ljava/lang/String;>;

  private final java.lang.String input;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final coursier.util.Sync<F> sync;
    descriptor: Lcoursier/util/Sync;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #67                          // Lcoursier/util/Sync<TF;>;

  public static <F extends java.lang.Object> coursier.complete.Complete<F> apply(coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.Option<java.lang.String>, scala.Option<java.lang.String>, java.lang.String, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=6, args_size=6
         0: getstatic     #76                 // Field coursier/complete/Complete$.MODULE$:Lcoursier/complete/Complete$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: invokevirtual #78                 // Method coursier/complete/Complete$.apply:(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
        14: areturn
    Signature: #70                          // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/String;>;Ljava/lang/String;Lcoursier/util/Sync<TF;>;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      repositories                   final
      scalaVersionOpt                final
      scalaBinaryVersionOpt          final
      input                          final
      sync                           final

  public static <F extends java.lang.Object> coursier.complete.Complete<F> apply(coursier.cache.Cache<F>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #76                 // Field coursier/complete/Complete$.MODULE$:Lcoursier/complete/Complete$;
         3: aload_0
         4: aload_1
         5: invokevirtual #82                 // Method coursier/complete/Complete$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/complete/Complete;
         8: areturn
    Signature: #80                          // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      sync                           final

  public static java.lang.String scalaBinaryVersion(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #76                 // Field coursier/complete/Complete$.MODULE$:Lcoursier/complete/Complete$;
         3: aload_0
         4: invokevirtual #87                 // Method coursier/complete/Complete$.scalaBinaryVersion:(Ljava/lang/String;)Ljava/lang/String;
         7: areturn
    MethodParameters:
      Name                           Flags
      scalaVersion                   final

  public static coursier.complete.Complete<coursier.util.Task> apply();
    descriptor: ()Lcoursier/complete/Complete;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #76                 // Field coursier/complete/Complete$.MODULE$:Lcoursier/complete/Complete$;
         3: invokevirtual #91                 // Method coursier/complete/Complete$.apply:()Lcoursier/complete/Complete;
         6: areturn
    Signature: #89                          // ()Lcoursier/complete/Complete<Lcoursier/util/Task;>;

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #98                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/complete/Complete;
    Signature: #94                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #105                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/complete/Complete;
    Signature: #102                         // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public coursier.cache.Cache<F> cache();
    descriptor: ()Lcoursier/cache/Cache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #109                // Field cache:Lcoursier/cache/Cache;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/complete/Complete;
    Signature: #107                         // ()Lcoursier/cache/Cache<TF;>;

  public scala.collection.immutable.Seq<coursier.core.Repository> repositories();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #113                // Field repositories:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/complete/Complete;
    Signature: #111                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;

  public scala.Option<java.lang.String> scalaVersionOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #117                // Field scalaVersionOpt:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/complete/Complete;
    Signature: #115                         // ()Lscala/Option<Ljava/lang/String;>;

  public scala.Option<java.lang.String> scalaBinaryVersionOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #119                // Field scalaBinaryVersionOpt:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/complete/Complete;
    Signature: #115                         // ()Lscala/Option<Ljava/lang/String;>;

  public java.lang.String input();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #122                // Field input:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/complete/Complete;

  public coursier.util.Sync<F> sync();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #126                // Field sync:Lcoursier/util/Sync;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/complete/Complete;
    Signature: #124                         // ()Lcoursier/util/Sync<TF;>;

  private coursier.util.Sync<F> F();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/complete/Complete;
    Signature: #124                         // ()Lcoursier/util/Sync<TF;>;

  public coursier.complete.Complete<F> addRepositories(scala.collection.immutable.Seq<coursier.core.Repository>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
         5: aload_1
         6: invokeinterface #141,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        11: checkcast     #137                // class scala/collection/immutable/Seq
        14: invokevirtual #144                // Method withRepositories:(Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete;
        17: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/complete/Complete;
            0      18     1 repository   Lscala/collection/immutable/Seq;
    Signature: #132                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      repository                     final

  public coursier.complete.Complete<F> withScalaVersion(java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Z)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: new           #151                // class scala/Some
         4: dup
         5: aload_1
         6: invokespecial #155                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         9: invokevirtual #159                // Method withScalaVersionOpt:(Lscala/Option;)Lcoursier/complete/Complete;
        12: iload_2
        13: ifeq          33
        16: new           #151                // class scala/Some
        19: dup
        20: getstatic     #76                 // Field coursier/complete/Complete$.MODULE$:Lcoursier/complete/Complete$;
        23: aload_1
        24: invokevirtual #87                 // Method coursier/complete/Complete$.scalaBinaryVersion:(Ljava/lang/String;)Ljava/lang/String;
        27: invokespecial #155                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        30: goto          37
        33: aload_0
        34: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        37: invokevirtual #168                // Method withScalaBinaryVersionOpt:(Lscala/Option;)Lcoursier/complete/Complete;
        40: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 97 /* same_locals_1_stack_item */
          stack = [ class coursier/complete/Complete ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/complete/Complete, class java/lang/String, int ]
          stack = [ class coursier/complete/Complete, class scala/Option ]
      LineNumberTable:
        line 27: 0
        line 28: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lcoursier/complete/Complete;
            0      41     1 version   Ljava/lang/String;
            0      41     2 adjustBinaryVersion   Z
    Signature: #147                         // (Ljava/lang/String;Z)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      version                        final
      adjustBinaryVersion            final

  public coursier.complete.Complete<F> withScalaVersion(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_1
         3: invokevirtual #173                // Method withScalaVersion:(Ljava/lang/String;Z)Lcoursier/complete/Complete;
         6: areturn
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/complete/Complete;
            0       7     1 version   Ljava/lang/String;
    Signature: #171                         // (Ljava/lang/String;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      version                        final

  public coursier.complete.Complete<F> withScalaVersionOpt(scala.Option<java.lang.String>, boolean);
    descriptor: (Lscala/Option;Z)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #159                // Method withScalaVersionOpt:(Lscala/Option;)Lcoursier/complete/Complete;
         5: iload_2
         6: ifeq          21
         9: aload_1
        10: invokedynamic #195,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        15: invokevirtual #199                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        18: goto          25
        21: aload_0
        22: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        25: invokevirtual #168                // Method withScalaBinaryVersionOpt:(Lscala/Option;)Lcoursier/complete/Complete;
        28: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class coursier/complete/Complete ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/complete/Complete, class scala/Option, int ]
          stack = [ class coursier/complete/Complete, class scala/Option ]
      LineNumberTable:
        line 32: 0
        line 33: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/complete/Complete;
            0      29     1 versionOpt   Lscala/Option;
            0      29     2 adjustBinaryVersion   Z
    Signature: #175                         // (Lscala/Option<Ljava/lang/String;>;Z)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      versionOpt                     final
      adjustBinaryVersion            final

  public coursier.complete.Complete<F> withScalaBinaryVersion(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #151                // class scala/Some
         4: dup
         5: aload_1
         6: invokespecial #155                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         9: invokevirtual #168                // Method withScalaBinaryVersionOpt:(Lscala/Option;)Lcoursier/complete/Complete;
        12: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/complete/Complete;
            0      13     1 version   Ljava/lang/String;
    Signature: #171                         // (Ljava/lang/String;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      version                        final

  public F complete();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #206                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         3: aload_0
         4: invokevirtual #209                // Method result:()Ljava/lang/Object;
         7: aload_0
         8: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        11: invokevirtual #213                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        14: invokedynamic #220,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        19: invokeinterface #223,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        24: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/complete/Complete;
    Signature: #203                         // ()TF;

  public F result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=1
         0: aload_0
         1: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
         4: invokeinterface #226,  1          // InterfaceMethod scala/collection/immutable/Seq.distinct:()Ljava/lang/Object;
         9: checkcast     #228                // class scala/collection/IterableOps
        12: aload_0
        13: invokedynamic #238,  0            // InvokeDynamic #2:apply:(Lcoursier/complete/Complete;)Lscala/Function1;
        18: invokeinterface #241,  2          // InterfaceMethod scala/collection/IterableOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        23: checkcast     #137                // class scala/collection/immutable/Seq
        26: astore_1
        27: aload_0
        28: invokespecial #243                // Method F:()Lcoursier/util/Sync;
        31: getstatic     #246                // Field coursier/core/Repository$Complete$.MODULE$:Lcoursier/core/Repository$Complete$;
        34: aload_0
        35: invokevirtual #248                // Method input:()Ljava/lang/String;
        38: aload_0
        39: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        42: invokedynamic #259,  0            // InvokeDynamic #3:apply:()Lscala/Function0;
        47: invokevirtual #263                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        50: checkcast     #163                // class java/lang/String
        53: aload_0
        54: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        57: invokedynamic #268,  0            // InvokeDynamic #4:apply:()Lscala/Function0;
        62: invokevirtual #263                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        65: checkcast     #163                // class java/lang/String
        68: invokevirtual #272                // Method coursier/core/Repository$Complete$.parse:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
        71: invokeinterface #278,  2          // InterfaceMethod coursier/util/Sync.fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
        76: astore_2
        77: getstatic     #206                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        80: aload_2
        81: aload_0
        82: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        85: invokevirtual #213                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        88: aload_0
        89: aload_1
        90: invokedynamic #288,  0            // InvokeDynamic #5:apply:(Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;)Lscala/Function1;
        95: invokeinterface #289,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       100: astore_3
       101: aload_0
       102: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
       105: invokevirtual #296                // Method coursier/cache/Cache.loggerOpt:()Lscala/Option;
       108: aload_3
       109: invokedynamic #303,  0            // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function0;
       114: aload_0
       115: aload_3
       116: invokedynamic #313,  0            // InvokeDynamic #7:apply:(Lcoursier/complete/Complete;Ljava/lang/Object;)Lscala/Function1;
       121: invokevirtual #317                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       124: astore        4
       126: getstatic     #206                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
       129: aload         4
       131: aload_0
       132: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
       135: invokevirtual #213                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
       138: invokedynamic #324,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
       143: invokeinterface #223,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
       148: areturn
      LineNumberTable:
        line 46: 0
        line 48: 27
        line 49: 31
        line 52: 77
        line 61: 101
        line 65: 126
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27     121     1 completers   Lscala/collection/immutable/Seq;
           77      71     2 inputF   Ljava/lang/Object;
          101      47     3     t   Ljava/lang/Object;
          126      22     4    t0   Ljava/lang/Object;
            0     149     0  this   Lcoursier/complete/Complete;
    Signature: #203                         // ()TF;

  public coursier.complete.Complete<F> withCache(coursier.cache.Cache<F>);
    descriptor: (Lcoursier/cache/Cache;)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/complete/Complete
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
         9: aload_0
        10: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        13: aload_0
        14: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        17: aload_0
        18: invokevirtual #248                // Method input:()Ljava/lang/String;
        21: aload_0
        22: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        25: invokespecial #335                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
        28: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/complete/Complete;
            0      29     1 cache   Lcoursier/cache/Cache;
    Signature: #332                         // (Lcoursier/cache/Cache<TF;>;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final

  public coursier.complete.Complete<F> withRepositories(scala.collection.immutable.Seq<coursier.core.Repository>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/complete/Complete
         3: dup
         4: aload_0
         5: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
         8: aload_1
         9: aload_0
        10: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        13: aload_0
        14: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        17: aload_0
        18: invokevirtual #248                // Method input:()Ljava/lang/String;
        21: aload_0
        22: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        25: invokespecial #335                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
        28: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/complete/Complete;
            0      29     1 repositories   Lscala/collection/immutable/Seq;
    Signature: #132                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      repositories                   final

  public coursier.complete.Complete<F> withScalaVersionOpt(scala.Option<java.lang.String>);
    descriptor: (Lscala/Option;)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/complete/Complete
         3: dup
         4: aload_0
         5: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        12: aload_1
        13: aload_0
        14: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        17: aload_0
        18: invokevirtual #248                // Method input:()Ljava/lang/String;
        21: aload_0
        22: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        25: invokespecial #335                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
        28: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/complete/Complete;
            0      29     1 scalaVersionOpt   Lscala/Option;
    Signature: #336                         // (Lscala/Option<Ljava/lang/String;>;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      scalaVersionOpt                final

  public coursier.complete.Complete<F> withScalaBinaryVersionOpt(scala.Option<java.lang.String>);
    descriptor: (Lscala/Option;)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/complete/Complete
         3: dup
         4: aload_0
         5: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        16: aload_1
        17: aload_0
        18: invokevirtual #248                // Method input:()Ljava/lang/String;
        21: aload_0
        22: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        25: invokespecial #335                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
        28: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/complete/Complete;
            0      29     1 scalaBinaryVersionOpt   Lscala/Option;
    Signature: #336                         // (Lscala/Option<Ljava/lang/String;>;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      scalaBinaryVersionOpt          final

  public coursier.complete.Complete<F> withInput(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/complete/Complete
         3: dup
         4: aload_0
         5: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        16: aload_0
        17: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        20: aload_1
        21: aload_0
        22: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        25: invokespecial #335                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
        28: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/complete/Complete;
            0      29     1 input   Ljava/lang/String;
    Signature: #171                         // (Ljava/lang/String;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      input                          final

  public coursier.complete.Complete<F> withSync(coursier.util.Sync<F>);
    descriptor: (Lcoursier/util/Sync;)Lcoursier/complete/Complete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class coursier/complete/Complete
         3: dup
         4: aload_0
         5: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        16: aload_0
        17: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        20: aload_0
        21: invokevirtual #248                // Method input:()Ljava/lang/String;
        24: aload_1
        25: invokespecial #335                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
        28: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/complete/Complete;
            0      29     1  sync   Lcoursier/util/Sync;
    Signature: #340                         // (Lcoursier/util/Sync<TF;>;)Lcoursier/complete/Complete<TF;>;
    MethodParameters:
      Name                           Flags
      sync                           final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #343                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #345                // String Complete(
         7: invokespecial #348                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
        16: invokestatic  #352                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #358                // String ,
        27: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: aload_0
        33: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        36: invokestatic  #352                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        39: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: pop
        43: aload_1
        44: ldc_w         #358                // String ,
        47: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        56: invokestatic  #352                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        59: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: pop
        63: aload_1
        64: ldc_w         #358                // String ,
        67: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: pop
        71: aload_1
        72: aload_0
        73: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        76: invokestatic  #352                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        79: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        82: pop
        83: aload_1
        84: ldc_w         #358                // String ,
        87: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: pop
        91: aload_1
        92: aload_0
        93: invokevirtual #248                // Method input:()Ljava/lang/String;
        96: invokestatic  #352                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        99: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       102: pop
       103: aload_1
       104: ldc_w         #358                // String ,
       107: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       110: pop
       111: aload_1
       112: aload_0
       113: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
       116: invokestatic  #352                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       119: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       122: pop
       123: aload_1
       124: ldc_w         #360                // String )
       127: invokevirtual #356                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       130: pop
       131: aload_1
       132: invokevirtual #362                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       135: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11     124     1     b   Ljava/lang/StringBuilder;
            0     136     0  this   Lcoursier/complete/Complete;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/complete/Complete
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/complete/Complete;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=9, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     213
         5: aload_0
         6: aload_1
         7: invokevirtual #370                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          217
        13: aload_1
        14: checkcast     #2                  // class coursier/complete/Complete
        17: astore_2
        18: iconst_1
        19: ifeq          209
        22: aload_0
        23: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
        26: aload_2
        27: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          209
        43: aload_3
        44: invokevirtual #372                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          209
        50: aload_0
        51: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        54: aload_2
        55: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          209
        73: aload         4
        75: invokevirtual #372                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          209
        81: aload_0
        82: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        85: aload_2
        86: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        89: astore        5
        91: dup
        92: ifnonnull     104
        95: pop
        96: aload         5
        98: ifnull        112
       101: goto          209
       104: aload         5
       106: invokevirtual #372                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       109: ifeq          209
       112: aload_0
       113: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
       116: aload_2
       117: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
       120: astore        6
       122: dup
       123: ifnonnull     135
       126: pop
       127: aload         6
       129: ifnull        143
       132: goto          209
       135: aload         6
       137: invokevirtual #372                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       140: ifeq          209
       143: aload_0
       144: invokevirtual #248                // Method input:()Ljava/lang/String;
       147: aload_2
       148: invokevirtual #248                // Method input:()Ljava/lang/String;
       151: astore        7
       153: dup
       154: ifnonnull     166
       157: pop
       158: aload         7
       160: ifnull        174
       163: goto          209
       166: aload         7
       168: invokevirtual #372                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       171: ifeq          209
       174: aload_0
       175: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
       178: aload_2
       179: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
       182: astore        8
       184: dup
       185: ifnonnull     197
       188: pop
       189: aload         8
       191: ifnull        205
       194: goto          209
       197: aload         8
       199: invokevirtual #372                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       202: ifeq          209
       205: iconst_1
       206: goto          210
       209: iconst_0
       210: ifeq          217
       213: iconst_1
       214: goto          218
       217: iconst_0
       218: ireturn
      StackMapTable: number_of_entries = 17
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/complete/Complete, class java/lang/Object, class coursier/complete/Complete, class coursier/cache/Cache ]
          stack = [ class coursier/cache/Cache ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/complete/Complete, class java/lang/Object, class coursier/complete/Complete, class coursier/cache/Cache, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/complete/Complete, class java/lang/Object, class coursier/complete/Complete, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/complete/Complete, class java/lang/Object, class coursier/complete/Complete, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/Option, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/complete/Complete, class java/lang/Object, class coursier/complete/Complete, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/Option, class scala/Option, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/complete/Complete, class java/lang/Object, class coursier/complete/Complete, class coursier/cache/Cache, class scala/collection/immutable/Seq, class scala/Option, class scala/Option, class java/lang/String, class coursier/util/Sync ]
          stack = [ class coursier/util/Sync ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/complete/Complete, class java/lang/Object, class coursier/complete/Complete ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18     192     2 other   Lcoursier/complete/Complete;
            0     219     0  this   Lcoursier/complete/Complete;
            0     219     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #376                // String Complete
         5: invokestatic  #382                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
        18: invokestatic  #382                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: aload_0
        28: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        31: invokestatic  #382                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        34: iadd
        35: istore_1
        36: bipush        37
        38: iload_1
        39: imul
        40: aload_0
        41: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        44: invokestatic  #382                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        47: iadd
        48: istore_1
        49: bipush        37
        51: iload_1
        52: imul
        53: aload_0
        54: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        57: invokestatic  #382                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        60: iadd
        61: istore_1
        62: bipush        37
        64: iload_1
        65: imul
        66: aload_0
        67: invokevirtual #248                // Method input:()Ljava/lang/String;
        70: invokestatic  #382                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        73: iadd
        74: istore_1
        75: bipush        37
        77: iload_1
        78: imul
        79: aload_0
        80: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        83: invokestatic  #382                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        86: iadd
        87: istore_1
        88: bipush        37
        90: iload_1
        91: imul
        92: ireturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      82     1  code   I
            0      93     0  this   Lcoursier/complete/Complete;

  private scala.Tuple6<coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.Option<java.lang.String>, scala.Option<java.lang.String>, java.lang.String, coursier.util.Sync<F>> tuple();
    descriptor: ()Lscala/Tuple6;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=8, locals=1, args_size=1
         0: new           #389                // class scala/Tuple6
         3: dup
         4: aload_0
         5: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
         8: aload_0
         9: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        16: aload_0
        17: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        20: aload_0
        21: invokevirtual #248                // Method input:()Ljava/lang/String;
        24: aload_0
        25: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        28: invokespecial #392                // Method scala/Tuple6."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        31: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lcoursier/complete/Complete;
    Signature: #387                         // ()Lscala/Tuple6<Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/String;>;Ljava/lang/String;Lcoursier/util/Sync<TF;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #376                // String Complete
         3: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/complete/Complete;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: bipush        6
         2: ireturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/complete/Complete;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 5
                       0: 40
                       1: 47
                       2: 54
                       3: 61
                       4: 68
                       5: 75
                 default: 82
            }
        40: aload_0
        41: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
        44: goto          97
        47: aload_0
        48: invokevirtual #135                // Method repositories:()Lscala/collection/immutable/Seq;
        51: goto          97
        54: aload_0
        55: invokevirtual #250                // Method scalaVersionOpt:()Lscala/Option;
        58: goto          97
        61: aload_0
        62: invokevirtual #161                // Method scalaBinaryVersionOpt:()Lscala/Option;
        65: goto          97
        68: aload_0
        69: invokevirtual #248                // Method input:()Ljava/lang/String;
        72: goto          97
        75: aload_0
        76: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        79: goto          97
        82: new           #399                // class java/lang/IndexOutOfBoundsException
        85: dup
        86: iload_2
        87: invokestatic  #405                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        90: invokevirtual #406                // Method java/lang/Object.toString:()Ljava/lang/String;
        93: invokespecial #407                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        96: athrow
        97: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 252 /* append */
          offset_delta = 40
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      98     0  this   Lcoursier/complete/Complete;
            0      98     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 5
                       0: 40
                       1: 46
                       2: 52
                       3: 58
                       4: 64
                       5: 70
                 default: 76
            }
        40: ldc_w         #410                // String cache
        43: goto          91
        46: ldc_w         #411                // String repositories
        49: goto          91
        52: ldc_w         #412                // String scalaVersionOpt
        55: goto          91
        58: ldc_w         #413                // String scalaBinaryVersionOpt
        61: goto          91
        64: ldc_w         #414                // String input
        67: goto          91
        70: ldc_w         #415                // String sync
        73: goto          91
        76: new           #399                // class java/lang/IndexOutOfBoundsException
        79: dup
        80: iload_2
        81: invokestatic  #405                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        84: invokevirtual #406                // Method java/lang/Object.toString:()Ljava/lang/String;
        87: invokespecial #407                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        90: athrow
        91: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 252 /* append */
          offset_delta = 40
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      92     0  this   Lcoursier/complete/Complete;
            0      92     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final java.lang.String $anonfun$withScalaVersionOpt$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #76                 // Field coursier/complete/Complete$.MODULE$:Lcoursier/complete/Complete$;
         3: aload_0
         4: invokevirtual #87                 // Method coursier/complete/Complete$.scalaBinaryVersion:(Ljava/lang/String;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 scalaVersion   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      scalaVersion                   final

  public static final scala.Tuple2 $anonfun$complete$1(coursier.complete.Complete$Result);
    descriptor: (Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #418                // class scala/Tuple2
         3: dup
         4: aload_0
         5: invokevirtual #421                // Method coursier/complete/Complete$Result.from:()I
         8: invokestatic  #405                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: aload_0
        12: invokevirtual #424                // Method coursier/complete/Complete$Result.completions:()Lscala/collection/immutable/Seq;
        15: invokespecial #427                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        18: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0     r   Lcoursier/complete/Complete$Result;
    MethodParameters:
      Name                           Flags
      r                              final

  public static final scala.Tuple2 $anonfun$result$2(coursier.core.Repository, coursier.core.Repository$Complete);
    descriptor: (Lcoursier/core/Repository;Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #418                // class scala/Tuple2
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #427                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   r$1   Lcoursier/core/Repository;
            0      10     1   x$1   Lcoursier/core/Repository$Complete;
    MethodParameters:
      Name                           Flags
      r$1                            final
      x$1                            final

  public static final scala.collection.immutable.Seq $anonfun$result$1(coursier.complete.Complete, coursier.core.Repository);
    descriptor: (Lcoursier/complete/Complete;Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #440                // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_1
         4: aload_0
         5: invokevirtual #291                // Method cache:()Lcoursier/cache/Cache;
         8: invokevirtual #443                // Method coursier/cache/Cache.fetch:()Lscala/Function1;
        11: aload_0
        12: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        15: invokeinterface #447,  3          // InterfaceMethod coursier/core/Repository.completeOpt:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
        20: aload_1
        21: invokedynamic #455,  0            // InvokeDynamic #9:apply:(Lcoursier/core/Repository;)Lscala/Function1;
        26: invokevirtual #199                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        29: invokevirtual #459                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
        32: invokeinterface #464,  1          // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
        37: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0 $this   Lcoursier/complete/Complete;
            0      38     1     r   Lcoursier/core/Repository;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      r                              final

  public static final java.lang.String $anonfun$result$3();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc_w         #465                // String
         3: areturn
      LineNumberTable:
        line 49: 0

  public static final java.lang.String $anonfun$result$4();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc_w         #465                // String
         3: areturn
      LineNumberTable:
        line 49: 0

  public static final scala.collection.immutable.Seq $anonfun$result$8(coursier.core.Repository$Complete$Result);
    descriptor: (Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #469                // Method coursier/core/Repository$Complete$Result.completions:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$2   Lcoursier/core/Repository$Complete$Result;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final scala.Tuple2 $anonfun$result$7(coursier.core.Repository, scala.util.Either);
    descriptor: (Lcoursier/core/Repository;Lscala/util/Either;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #477                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
         3: getstatic     #482                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #485                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        10: aload_1
        11: invokedynamic #490,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
        16: invokevirtual #495                // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
        19: invokevirtual #499                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        22: areturn
      LineNumberTable:
        line 56: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0 repo$1   Lcoursier/core/Repository;
            0      23     1     e   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      repo$1                         final
      e                              final

  public static final java.lang.Object $anonfun$result$6(coursier.complete.Complete, coursier.core.Repository$Complete$Input, scala.Tuple2);
    descriptor: (Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: ifnull        66
         8: aload         4
        10: invokevirtual #507                // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #28                 // class coursier/core/Repository
        16: astore        5
        18: aload         4
        20: invokevirtual #510                // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #26                 // class coursier/core/Repository$Complete
        26: astore        6
        28: getstatic     #206                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        31: aload         6
        33: aload_1
        34: aload_0
        35: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        38: invokeinterface #513,  3          // InterfaceMethod coursier/core/Repository$Complete.complete:(Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
        43: aload_0
        44: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        47: invokevirtual #213                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        50: aload         5
        52: invokedynamic #519,  0            // InvokeDynamic #11:apply:(Lcoursier/core/Repository;)Lscala/Function1;
        57: invokeinterface #223,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        62: astore_3
        63: goto          79
        66: goto          69
        69: new           #521                // class scala/MatchError
        72: dup
        73: aload         4
        75: invokespecial #522                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        78: athrow
        79: aload_3
        80: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 66
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/complete/Complete, class coursier/core/Repository$Complete$Input, class scala/Tuple2, class java/lang/Object, class scala/Tuple2, class coursier/core/Repository, class coursier/core/Repository$Complete ]
          stack = []
      LineNumberTable:
        line 54: 0
        line 55: 3
        line 56: 28
        line 55: 66
        line 54: 69
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      48     5  repo   Lcoursier/core/Repository;
           28      38     6     c   Lcoursier/core/Repository$Complete;
            0      81     0 $this   Lcoursier/complete/Complete;
            0      81     1 input0$1   Lcoursier/core/Repository$Complete$Input;
            0      81     2  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      input0$1                       final
      x0$1                           final

  public static final scala.Tuple2 $anonfun$result$9(coursier.core.Repository$Complete$Input, scala.collection.immutable.Seq);
    descriptor: (Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #418                // class scala/Tuple2
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #427                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 input0$1   Lcoursier/core/Repository$Complete$Input;
            0      10     1   x$3   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      input0$1                       final
      x$3                            final

  public static final java.lang.Object $anonfun$result$5(coursier.complete.Complete, scala.collection.immutable.Seq, coursier.core.Repository$Complete$Input);
    descriptor: (Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=3
         0: getstatic     #206                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         3: aload_0
         4: invokespecial #243                // Method F:()Lcoursier/util/Sync;
         7: aload_1
         8: aload_0
         9: aload_2
        10: invokedynamic #539,  0            // InvokeDynamic #12:apply:(Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
        15: invokeinterface #540,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        20: checkcast     #137                // class scala/collection/immutable/Seq
        23: invokeinterface #544,  2          // InterfaceMethod coursier/util/Sync.gather:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        28: aload_0
        29: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        32: invokevirtual #213                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        35: aload_2
        36: invokedynamic #552,  0            // InvokeDynamic #13:apply:(Lcoursier/core/Repository$Complete$Input;)Lscala/Function1;
        41: invokeinterface #223,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        46: areturn
      LineNumberTable:
        line 53: 0
        line 54: 7
        line 53: 28
        line 58: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0 $this   Lcoursier/complete/Complete;
            0      47     1 completers$1   Lscala/collection/immutable/Seq;
            0      47     2 input0   Lcoursier/core/Repository$Complete$Input;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      completers$1                   final
      input0                         final

  public static final java.lang.Object $anonfun$result$10(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   t$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t$1                            final

  public static final java.lang.Object $anonfun$result$11(coursier.complete.Complete, java.lang.Object, coursier.cache.CacheLogger);
    descriptor: (Lcoursier/complete/Complete;Ljava/lang/Object;Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_2
         1: invokeinterface #558,  1          // InterfaceMethod coursier/cache/CacheLogger.using:()Lcoursier/cache/CacheLogger$Using;
         6: aload_1
         7: aload_0
         8: invokevirtual #129                // Method sync:()Lcoursier/util/Sync;
        11: invokevirtual #561                // Method coursier/cache/CacheLogger$Using.apply:(Ljava/lang/Object;Lcoursier/util/Sync;)Ljava/lang/Object;
        14: areturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   Lcoursier/complete/Complete;
            0      15     1   t$1   Ljava/lang/Object;
            0      15     2 logger   Lcoursier/cache/CacheLogger;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      t$1                            final
      logger                         final

  public static final coursier.complete.Complete$Result $anonfun$result$12(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        36
         6: aload_2
         7: invokevirtual #507                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #33                 // class coursier/core/Repository$Complete$Input
        13: astore_3
        14: aload_2
        15: invokevirtual #510                // Method scala/Tuple2._2:()Ljava/lang/Object;
        18: checkcast     #137                // class scala/collection/immutable/Seq
        21: astore        4
        23: getstatic     #566                // Field coursier/complete/Complete$Result$.MODULE$:Lcoursier/complete/Complete$Result$;
        26: aload_3
        27: aload         4
        29: invokevirtual #569                // Method coursier/complete/Complete$Result$.apply:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lcoursier/complete/Complete$Result;
        32: astore_1
        33: goto          48
        36: goto          39
        39: new           #521                // class scala/MatchError
        42: dup
        43: aload_2
        44: invokespecial #522                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        47: athrow
        48: aload_1
        49: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class coursier/complete/Complete$Result, class scala/Tuple2, class coursier/core/Repository$Complete$Input, class scala/collection/immutable/Seq ]
          stack = []
      LineNumberTable:
        line 65: 0
        line 66: 2
        line 67: 23
        line 66: 36
        line 65: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      22     3 input0   Lcoursier/core/Repository$Complete$Input;
           23      13     4     l   Lscala/collection/immutable/Seq;
            0      50     0  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  public coursier.complete.Complete(coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.Option<java.lang.String>, scala.Option<java.lang.String>, java.lang.String, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=7
         0: aload_0
         1: aload_1
         2: putfield      #109                // Field cache:Lcoursier/cache/Cache;
         5: aload_0
         6: aload_2
         7: putfield      #113                // Field repositories:Lscala/collection/immutable/Seq;
        10: aload_0
        11: aload_3
        12: putfield      #117                // Field scalaVersionOpt:Lscala/Option;
        15: aload_0
        16: aload         4
        18: putfield      #119                // Field scalaBinaryVersionOpt:Lscala/Option;
        21: aload_0
        22: aload         5
        24: putfield      #122                // Field input:Ljava/lang/String;
        27: aload_0
        28: aload         6
        30: putfield      #126                // Field sync:Lcoursier/util/Sync;
        33: aload_0
        34: invokespecial #574                // Method java/lang/Object."<init>":()V
        37: aload_0
        38: invokestatic  #578                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        41: return
      LineNumberTable:
        line 11: 0
        line 73: 33
        line 11: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/complete/Complete;
            0      42     1 cache   Lcoursier/cache/Cache;
            0      42     2 repositories   Lscala/collection/immutable/Seq;
            0      42     3 scalaVersionOpt   Lscala/Option;
            0      42     4 scalaBinaryVersionOpt   Lscala/Option;
            0      42     5 input   Ljava/lang/String;
            0      42     6  sync   Lcoursier/util/Sync;
    Signature: #571                         // (Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/String;>;Ljava/lang/String;Lcoursier/util/Sync<TF;>;)V
    MethodParameters:
      Name                           Flags
      cache                          final
      repositories                   final
      scalaVersionOpt                final
      scalaBinaryVersionOpt          final
      input                          final
      sync                           final

  public coursier.complete.Complete(coursier.cache.Cache<F>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lcoursier/util/Sync;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #585                // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         5: invokevirtual #588                // Method coursier/Resolve$.defaultRepositories:()Lscala/collection/immutable/Seq;
         8: getstatic     #593                // Field scala/None$.MODULE$:Lscala/None$;
        11: getstatic     #593                // Field scala/None$.MODULE$:Lscala/None$;
        14: ldc_w         #465                // String
        17: aload_2
        18: invokespecial #335                // Method "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Ljava/lang/String;Lcoursier/util/Sync;)V
        21: return
      LineNumberTable:
        line 11: 0
        line 13: 2
        line 14: 8
        line 15: 11
        line 16: 14
        line 11: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lcoursier/complete/Complete;
            0      22     1 cache   Lcoursier/cache/Cache;
            0      22     2  sync   Lcoursier/util/Sync;
    Signature: #580                         // (Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)V
    MethodParameters:
      Name                           Flags
      cache                          final
      sync                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #605,  0            // InvokeDynamic #14:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #18= #15 of #17;    // Using=class coursier/cache/CacheLogger$Using of class coursier/cache/CacheLogger
  public static final #21= #20 of #2;     // Result=class coursier/complete/Complete$Result of class coursier/complete/Complete
  public static #24= #23 of #2;           // =class coursier/complete/Complete$Result$ of class coursier/complete/Complete
  public static #29= #26 of #28;          // Complete=class coursier/core/Repository$Complete of class coursier/core/Repository
  public static #24= #31 of #28;          // =class coursier/core/Repository$Complete$ of class coursier/core/Repository
  public static abstract #34= #33 of #31; // Input=class coursier/core/Repository$Complete$Input of class coursier/core/Repository$Complete$
  public static final #21= #36 of #31;    // Result=class coursier/core/Repository$Complete$Result of class coursier/core/Repository$Complete$
  public static #41= #38 of #40;          // AllOps=class coursier/util/Monad$AllOps of class coursier/util/Monad
  public static #24= #43 of #40;          // =class coursier/util/Monad$ops$ of class coursier/util/Monad
  public static final #48= #45 of #47;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #24= #50 of #52;          // =class scala/Predef$ArrowAssoc$ of class scala/Predef
Signature: #3                           // <F:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
SourceFile: "Complete.scala"
RuntimeVisibleAnnotations:
  0: #11(#12=s#13)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t5h\u0001\u0002$H\u00051C\u0001b\u0019\u0001\u0003\u0006\u0004%\t\u0001\u001a\u0005\tq\u0002\u0011\t\u0011)A\u0005K\"A\u0011\u0010\u0001BC\u0002\u0013\u0005!\u0010C\u0005\u0002\n\u0001\u0011\t\u0011)A\u0005w\"Q\u00111\u0002\u0001\u0003\u0006\u0004%\t!!\u0004\t\u0015\u0005\u0015\u0002A!A!\u0002\u0013\ty\u0001\u0003\u0006\u0002(\u0001\u0011)\u0019!C\u0001\u0003\u001bA!\"!\u000b\u0001\u0005\u0003\u0005\u000b\u0011BA\b\u0011)\tY\u0003\u0001BC\u0002\u0013\u0005\u0011Q\u0006\u0005\u000b\u0003_\u0001!\u0011!Q\u0001\n\u0005U\u0001BCA\u0019\u0001\t\u0015\r\u0011b\u0001\u00024!Q\u0011\u0011\t\u0001\u0003\u0002\u0003\u0006I!!\u000e\t\u000f\u0005\r\u0003\u0001\"\u0001\u0002F!9\u00111\t\u0001\u0005\u0002\u0005e\u0003bBA1\u0001\u0011%\u00111\u0007\u0005\b\u0003G\u0002A\u0011AA3\u0011\u001d\t\t\b\u0001C\u0001\u0003gBq!!\u001d\u0001\t\u0003\t\u0019\tC\u0004\u0002\b\u0002!\t!!#\t\u000f\u0005E\u0005\u0001\"\u0001\u0002\u0014\"1\u0001\n\u0001C\u0001\u0003/Cq!!+\u0001\t\u0003\tY\u000bC\u0004\u00036\u0002!\tAa.\t\u000f\tm\u0006\u0001\"\u0001\u0003>\"9\u0011q\u0011\u0001\u0005\u0002\t\u0005\u0007b\u0002Bc\u0001\u0011\u0005!q\u0019\u0005\b\u0005/\u0002A\u0011\u0001Bf\u0011\u001d\u0011y\r\u0001C\u0001\u0005#DqAa\u0019\u0001\t\u0003\u0012)\u0007C\u0004\u0003r\u0001!\tE!6\t\u000f\te\u0004\u0001\"\u0011\u0003Z\"9!q\u0010\u0001\u0005B\t\u0005\u0005b\u0002BB\u0001\u0011%!Q\u001c\u0005\b\u0005\u0013\u0003A\u0011\tBF\u0011\u001d\u0011i\t\u0001C!\u0005#BqAa$\u0001\t\u0003\u0012)\u000fC\u0004\u0003\u0018\u0002!\tE!;\b\u000f\u0005Mv\t#\u0001\u00026\u001a1ai\u0012E\u0001\u0003oCq!a\u0011(\t\u0003\t9\rC\u0004\u0002J\u001e\"\t!a3\t\u000f\u0005Uw\u0005\"\u0001\u0002X\"9\u0011\u0011Z\u0014\u0005\u0002\u0005u\u0007bBAeO\u0011\u0005\u0011Q\u001f\u0004\u0007\u0005+9#Aa\u0006\t\u0015\u0005-RF!b\u0001\n\u0003\u0011I\u0002\u0003\u0006\u000205\u0012\t\u0011)A\u0005\u00057A!Ba\f.\u0005\u000b\u0007I\u0011\u0001B\u0019\u0011)\u0011\u0019%\fB\u0001B\u0003%!1\u0007\u0005\b\u0003\u0007jC\u0011\u0001B#\u0011\u001d\u0011y%\fC\u0001\u0005#BqAa\u0015.\t\u0003\u0011)\u0006C\u0004\u0003X5\"\tA!\u0017\t\u000f\tuS\u0006\"\u0001\u0003`!9!1M\u0017\u0005B\t\u0015\u0004b\u0002B9[\u0011\u0005#1\u000f\u0005\b\u0005sjC\u0011\tB>\u0011\u001d\u0011y(\fC!\u0005\u0003CqAa!.\t\u0013\u0011)\tC\u0004\u0003\n6\"\tEa#\t\u000f\t5U\u0006\"\u0011\u0003R!9!qR\u0017\u0005B\tE\u0005b\u0002BL[\u0011\u0005#\u0011T\u0004\b\u0005;;\u0003\u0012\u0001BP\r\u001d\u0011)b\nE\u0001\u0005CCq!a\u0011B\t\u0003\u0011\u0019\u000bC\u0004\u0002J\u0006#\tA!*\t\u0013\t-\u0016)!A\u0005\n\t5\u0006\"\u0003BVO\u0005\u0005I\u0011\u0002BW\u0005!\u0019u.\u001c9mKR,\'B\u0001%J\u0003!\u0019w.\u001c9mKR,\'\"\u0001&\u0002\u0011\r|WO]:jKJ\u001c\u0001!\u0006\u0002NYN!\u0001A\u0014+X!\ty%+D\u0001Q\u0015\u0005\t\u0016!B:dC2\f\u0017BA*Q\u0005\u0019\te.\u001f*fMB\u0011q*V\u0005\u0003-B\u0013q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002YA:\u0011\u0011L\u0018\b\u00035vk\u0011a\u0017\u0006\u00039.\u000ba\u0001\u0010:p_Rt\u0014\"A)\n\u0005}\u0003\u0016a\u00029bG.\fw-Z\u0005\u0003C\n\u0014AbU3sS\u0006d\u0017N_1cY\u0016T!a\u0018)\u0002\u000b\r\f7\r[3\u0016\u0003\u0015\u00042A\u001a5k\u001b\u00059\'BA2J\u0013\tIwMA\u0003DC\u000eDW\r\u0005\u0002lY2\u0001A!B7\u0001\u0005\u0004q\'!\u0001$\u0016\u0005=4\u0018C\u00019t!\ty\u0015/\u0003\u0002s!\n9aj\u001c;iS:<\u0007CA(u\u0013\t)\bKA\u0002B]f$Qa\u001e7C\u0002=\u0014\u0011aX\u0001\u0007G\u0006\u001c\u0007.\u001a\u0011\u0002\u0019I,\u0007o\\:ji>\u0014\u0018.Z:\u0016\u0003m\u00042\u0001\u0017?\u007f\u0013\ti(MA\u0002TKF\u00042a`A\u0003\u001b\t\t\tAC\u0002\u0002\u0004%\u000bAaY8sK&!\u0011qAA\u0001\u0005)\u0011V\r]8tSR|\'/_\u0001\u000ee\u0016\u0004xn]5u_JLWm\u001d\u0011\u0002\u001fM\u001c\u0017\r\\1WKJ\u001c\u0018n\u001c8PaR,\"!a\u0004\u0011\u000b=\u000b\t\"!\u0006\n\u0007\u0005M\u0001K\u0001\u0004PaRLwN\u001c\t\u0005\u0003/\tyB\u0004\u0003\u0002\u001a\u0005m\u0001C\u0001.Q\u0013\r\ti\u0002U\u0001\u0007!J,G-\u001a4\n\t\u0005\u0005\u00121\u0005\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0007\u0005u\u0001+\u0001\ttG\u0006d\u0017MV3sg&|gn\u00149uA\u0005)2oY1mC\nKg.\u0019:z-\u0016\u00148/[8o\u001fB$\u0018AF:dC2\f\')\u001b8bef4VM]:j_:|\u0005\u000f\u001e\u0011\u0002\u000b%t\u0007/\u001e;\u0016\u0005\u0005U\u0011AB5oaV$\b%\u0001\u0003ts:\u001cWCAA\u001b!\u0015\t9$!\u0010k\u001b\t\tIDC\u0002\u0002<%\u000bA!\u001e;jY&!\u0011qHA\u001d\u0005\u0011\u0019\u0016P\\2\u0002\u000bMLhn\u0019\u0011\u0002\rqJg.\u001b;?)1\t9%a\u0014\u0002R\u0005M\u0013QKA,)\u0011\tI%!\u0014\u0011\t\u0005-\u0003A[\u0007\u0002\u000f\"9\u0011\u0011G\u0007A\u0004\u0005U\u0002\"B2\u000e\u0001\u0004)\u0007\"B=\u000e\u0001\u0004Y\bbBA\u0006\u001b\u0001\u0007\u0011q\u0002\u0005\b\u0003Oi\u0001\u0019AA\b\u0011\u001d\tY#\u0004a\u0001\u0003+!B!a\u0017\u0002`Q!\u0011\u0011JA/\u0011\u001d\t\tD\u0004a\u0002\u0003kAQa\u0019\bA\u0002\u0015\f\u0011AR\u0001\u0010C\u0012$\'+\u001a9pg&$xN]5fgR!\u0011\u0011JA4\u0011\u001d\tI\u0007\u0005a\u0001\u0003W\n!B]3q_NLGo\u001c:z!\u0011y\u0015Q\u000e@\n\u0007\u0005=\u0004K\u0001\u0006=e\u0016\u0004X-\u0019;fIz\n\u0001c^5uQN\u001b\u0017\r\\1WKJ\u001c\u0018n\u001c8\u0015\r\u0005%\u0013QOA=\u0011\u001d\t9(\u0005a\u0001\u0003+\tqA^3sg&|g\u000eC\u0004\u0002|E\u0001\r!! \u0002\'\u0005$\'.^:u\u0005&t\u0017M]=WKJ\u001c\u0018n\u001c8\u0011\u0007=\u000by(C\u0002\u0002\u0002B\u0013qAQ8pY\u0016\fg\u000e\u0006\u0003\u0002J\u0005\u0015\u0005bBA<%\u0001\u0007\u0011QC\u0001\u0014o&$\bnU2bY\u00064VM]:j_:|\u0005\u000f\u001e\u000b\u0007\u0003\u0013\nY)a$\t\u000f\u000555\u00031\u0001\u0002\u0010\u0005Qa/\u001a:tS>tw\n\u001d;\t\u000f\u0005m4\u00031\u0001\u0002~\u00051r/\u001b;i\'\u000e\fG.\u0019\"j]\u0006\u0014\u0018PV3sg&|g\u000e\u0006\u0003\u0002J\u0005U\u0005bBA<)\u0001\u0007\u0011Q\u0003\u000b\u0003\u00033\u0003Ba\u001b7\u0002\u001cB9q*!(\u0002\"\u0006\u001d\u0016bAAP!\n1A+\u001e9mKJ\u00022aTAR\u0013\r\t)\u000b\u0015\u0002\u0004\u0013:$\b\u0003\u0002-}\u0003+\taA]3tk2$HCAAW!\u0011YG.a,\u0011\u0007\u0005EVFD\u0002\u0002L\u0019\n\u0001bQ8na2,G/\u001a\t\u0004\u0003\u0017:3\u0003B\u0014O\u0003s\u0003B!a/\u0002F6\u0011\u0011Q\u0018\u0006\u0005\u0003\u007f\u000b\t-\u0001\u0002j_*\u0011\u00111Y\u0001\u0005U\u00064\u0018-C\u0002b\u0003{#\"!!.\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u0005\u00055\u0007#BA&\u0001\u0005=\u0007\u0003BA\u001c\u0003#LA!a5\u0002:\t!A+Y:l\u0003I\u00198-\u00197b\u0005&t\u0017M]=WKJ\u001c\u0018n\u001c8\u0015\t\u0005U\u0011\u0011\u001c\u0005\b\u00037T\u0003\u0019AA\u000b\u00031\u00198-\u00197b-\u0016\u00148/[8o+\u0011\ty.a:\u0015\t\u0005\u0005\u0018\u0011\u001f\u000b\u0005\u0003G\fi\u000fE\u0003\u0002L\u0001\t)\u000fE\u0002l\u0003O$a!\\\u0016C\u0002\u0005%XcA8\u0002l\u00121q/a:C\u0002=Dq!!\r,\u0001\b\ty\u000f\u0005\u0004\u00028\u0005u\u0012Q\u001d\u0005\u0007G.\u0002\r!a=\u0011\t\u0019D\u0017Q]\u000b\u0005\u0003o\fy\u0010\u0006\u0007\u0002z\n%!Q\u0002B\b\u0005#\u0011\u0019\u0002\u0006\u0003\u0002|\n\u0015\u0001#BA&\u0001\u0005u\bcA6\u0002\u0000\u00121Q\u000e\fb\u0001\u0005\u0003)2a\u001cB\u0002\t\u00199\u0018q b\u0001_\"9\u0011\u0011\u0007\u0017A\u0004\t\u001d\u0001CBA\u001c\u0003{\ti\u0010\u0003\u0004dY\u0001\u0007!1\u0002\t\u0005M\"\fi\u0010C\u0003zY\u0001\u00071\u0010C\u0004\u0002\f1\u0002\r!a\u0004\t\u000f\u0005\u001dB\u00061\u0001\u0002\u0010!9\u00111\u0006\u0017A\u0002\u0005U!A\u0002*fgVdGo\u0005\u0003.\u001dR;VC\u0001B\u000e!\u0011\u0011iB!\u000b\u000f\t\t}!Q\u0005\b\u0004\u007f\n\u0005\u0012\u0002\u0002B\u0012\u0003\u0003\t!BU3q_NLGo\u001c:z\u0013\u0011\t\u0019La\n\u000b\t\t\r\u0012\u0011A\u0005\u0005\u0005W\u0011iCA\u0003J]B,HO\u0003\u0003\u00024\n\u001d\u0012a\u0002:fgVdGo]\u000b\u0003\u0005g\u0001B\u0001\u0017?\u00036A1q*!(\u007f\u0005o\u0001r\u0001\u0017B\u001d\u0005{\t9+C\u0002\u0003<\t\u0014a!R5uQ\u0016\u0014\bc\u0001-\u0003@%\u0019!\u0011\t2\u0003\u0013QC\'o\\<bE2,\u0017\u0001\u0003:fgVdGo\u001d\u0011\u0015\r\t\u001d#1\nB\'!\r\u0011I%L\u0007\u0002O!9\u00111\u0006\u001aA\u0002\tm\u0001b\u0002B\u0018e\u0001\u0007!1G\u0001\u0005MJ|W.\u0006\u0002\u0002\"\u0006Y1m\\7qY\u0016$\u0018n\u001c8t+\t\t9+A\u0005xSRD\u0017J\u001c9viR!!q\tB.\u0011\u001d\tY#\u000ea\u0001\u00057\t1b^5uQJ+7/\u001e7ugR!!q\tB1\u0011\u001d\u0011yC\u000ea\u0001\u0005g\t\u0001\u0002^8TiJLgn\u001a\u000b\u0003\u0005O\u0002BA!\u001b\u0003p5\u0011!1\u000e\u0006\u0005\u0005[\n\t-\u0001\u0003mC:<\u0017\u0002BA\u0011\u0005W\n\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0005\u0003{\u0012)\b\u0003\u0004\u0003xa\u0002\ra]\u0001\u0004_\nT\u0017AB3rk\u0006d7\u000f\u0006\u0003\u0002~\tu\u0004B\u0002B<s\u0001\u00071/\u0001\u0005iCND7i\u001c3f)\t\t\t+A\u0003ukBdW-\u0006\u0002\u0003\bB9q*!(\u0003\u001c\tM\u0012!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070\u0006\u0002\u0003h\u0005a\u0001O]8ek\u000e$\u0018I]5us\u0006q\u0001O]8ek\u000e$X\t\\3nK:$HcA:\u0003\u0014\"9!Q\u0013 A\u0002\u0005\u0005\u0016!\u00018\u0002%A\u0014x\u000eZ;di\u0016cW-\\3oi:\u000bW.\u001a\u000b\u0005\u0005O\u0012Y\nC\u0004\u0003\u0016~\u0002\r!!)\u0002\rI+7/\u001e7u!\r\u0011I%Q\n\u0005\u0003:\u000bI\f\u0006\u0002\u0003 R1!q\tBT\u0005SCq!a\u000bD\u0001\u0004\u0011Y\u0002C\u0004\u00030\r\u0003\rAa\r\u0002\u0019]\u0014\u0018\u000e^3SKBd\u0017mY3\u0015\u0005\t=\u0006\u0003\u0002B5\u0005cKAAa-\u0003l\t1qJ\u00196fGR\f\u0011b^5uQ\u000e\u000b7\r[3\u0015\t\u0005%#\u0011\u0018\u0005\u0006G^\u0001\r!Z\u0001\u0011o&$\bNU3q_NLGo\u001c:jKN$B!!\u0013\u0003@\")\u0011\u0010\u0007a\u0001wR!\u0011\u0011\nBb\u0011\u001d\tY!\u0007a\u0001\u0003\u001f\t\u0011d^5uQN\u001b\u0017\r\\1CS:\f\'/\u001f,feNLwN\\(qiR!\u0011\u0011\nBe\u0011\u001d\t9C\u0007a\u0001\u0003\u001f!B!!\u0013\u0003N\"9\u00111F\u000eA\u0002\u0005U\u0011\u0001C<ji\"\u001c\u0016P\\2\u0015\t\u0005%#1\u001b\u0005\b\u0003ca\u0002\u0019AA\u001b)\u0011\tiHa6\t\r\t]d\u00041\u0001t)\u0011\tiHa7\t\r\t]t\u00041\u0001t+\t\u0011y\u000eE\u0007P\u0005C,70a\u0004\u0002\u0010\u0005U\u0011QG\u0005\u0004\u0005G\u0004&A\u0002+va2,g\u0007F\u0002t\u0005ODqA!&%\u0001\u0004\t\t\u000b\u0006\u0003\u0003h\t-\bb\u0002BKK\u0001\u0007\u0011\u0011\u0015"
    )
BootstrapMethods:
  0: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #182 REF_invokeStatic coursier/complete/Complete.$anonfun$withScalaVersionOpt$1:(Ljava/lang/String;)Ljava/lang/String;
      #183 (Ljava/lang/String;)Ljava/lang/String;
      #184 5
      #185 1
      #183 (Ljava/lang/String;)Ljava/lang/String;
  1: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #218 REF_invokeStatic coursier/complete/Complete.$anonfun$complete$1:(Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
      #219 (Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
      #184 5
      #185 1
      #219 (Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
  2: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #233 REF_invokeStatic coursier/complete/Complete.$anonfun$result$1:(Lcoursier/complete/Complete;Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
      #235 (Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
      #184 5
      #185 1
      #235 (Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
  3: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #251 ()Ljava/lang/Object;
      #255 REF_invokeStatic coursier/complete/Complete.$anonfun$result$3:()Ljava/lang/String;
      #256 ()Ljava/lang/String;
      #184 5
      #185 1
      #256 ()Ljava/lang/String;
  4: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #251 ()Ljava/lang/Object;
      #267 REF_invokeStatic coursier/complete/Complete.$anonfun$result$4:()Ljava/lang/String;
      #256 ()Ljava/lang/String;
      #184 5
      #185 1
      #256 ()Ljava/lang/String;
  5: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #283 REF_invokeStatic coursier/complete/Complete.$anonfun$result$5:(Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
      #285 (Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
      #184 5
      #185 1
      #285 (Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
  6: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #251 ()Ljava/lang/Object;
      #300 REF_invokeStatic coursier/complete/Complete.$anonfun$result$10:(Ljava/lang/Object;)Ljava/lang/Object;
      #251 ()Ljava/lang/Object;
      #185 1
  7: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #308 REF_invokeStatic coursier/complete/Complete.$anonfun$result$11:(Lcoursier/complete/Complete;Ljava/lang/Object;Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
      #310 (Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
      #184 5
      #185 1
      #310 (Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
  8: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #322 REF_invokeStatic coursier/complete/Complete.$anonfun$result$12:(Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
      #323 (Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
      #184 5
      #185 1
      #323 (Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
  9: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #450 REF_invokeStatic coursier/complete/Complete.$anonfun$result$2:(Lcoursier/core/Repository;Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
      #452 (Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
      #184 5
      #185 1
      #452 (Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
  10: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #488 REF_invokeStatic coursier/complete/Complete.$anonfun$result$8:(Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
      #489 (Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
      #184 5
      #185 1
      #489 (Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
  11: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #516 REF_invokeStatic coursier/complete/Complete.$anonfun$result$7:(Lcoursier/core/Repository;Lscala/util/Either;)Lscala/Tuple2;
      #518 (Lscala/util/Either;)Lscala/Tuple2;
      #184 5
      #185 1
      #518 (Lscala/util/Either;)Lscala/Tuple2;
  12: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #534 REF_invokeStatic coursier/complete/Complete.$anonfun$result$6:(Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;Lscala/Tuple2;)Ljava/lang/Object;
      #536 (Lscala/Tuple2;)Ljava/lang/Object;
      #184 5
      #185 1
      #536 (Lscala/Tuple2;)Ljava/lang/Object;
  13: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #178 (Ljava/lang/Object;)Ljava/lang/Object;
      #547 REF_invokeStatic coursier/complete/Complete.$anonfun$result$9:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lscala/Tuple2;
      #549 (Lscala/collection/immutable/Seq;)Lscala/Tuple2;
      #184 5
      #185 1
      #549 (Lscala/collection/immutable/Seq;)Lscala/Tuple2;
  14: #602 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #218 REF_invokeStatic coursier/complete/Complete.$anonfun$complete$1:(Lcoursier/complete/Complete$Result;)Lscala/Tuple2;
      #233 REF_invokeStatic coursier/complete/Complete.$anonfun$result$1:(Lcoursier/complete/Complete;Lcoursier/core/Repository;)Lscala/collection/immutable/Seq;
      #300 REF_invokeStatic coursier/complete/Complete.$anonfun$result$10:(Ljava/lang/Object;)Ljava/lang/Object;
      #308 REF_invokeStatic coursier/complete/Complete.$anonfun$result$11:(Lcoursier/complete/Complete;Ljava/lang/Object;Lcoursier/cache/CacheLogger;)Ljava/lang/Object;
      #322 REF_invokeStatic coursier/complete/Complete.$anonfun$result$12:(Lscala/Tuple2;)Lcoursier/complete/Complete$Result;
      #450 REF_invokeStatic coursier/complete/Complete.$anonfun$result$2:(Lcoursier/core/Repository;Lcoursier/core/Repository$Complete;)Lscala/Tuple2;
      #255 REF_invokeStatic coursier/complete/Complete.$anonfun$result$3:()Ljava/lang/String;
      #267 REF_invokeStatic coursier/complete/Complete.$anonfun$result$4:()Ljava/lang/String;
      #283 REF_invokeStatic coursier/complete/Complete.$anonfun$result$5:(Lcoursier/complete/Complete;Lscala/collection/immutable/Seq;Lcoursier/core/Repository$Complete$Input;)Ljava/lang/Object;
      #534 REF_invokeStatic coursier/complete/Complete.$anonfun$result$6:(Lcoursier/complete/Complete;Lcoursier/core/Repository$Complete$Input;Lscala/Tuple2;)Ljava/lang/Object;
      #516 REF_invokeStatic coursier/complete/Complete.$anonfun$result$7:(Lcoursier/core/Repository;Lscala/util/Either;)Lscala/Tuple2;
      #488 REF_invokeStatic coursier/complete/Complete.$anonfun$result$8:(Lcoursier/core/Repository$Complete$Result;)Lscala/collection/immutable/Seq;
      #547 REF_invokeStatic coursier/complete/Complete.$anonfun$result$9:(Lcoursier/core/Repository$Complete$Input;Lscala/collection/immutable/Seq;)Lscala/Tuple2;
      #182 REF_invokeStatic coursier/complete/Complete.$anonfun$withScalaVersionOpt$1:(Ljava/lang/String;)Ljava/lang/String;
  ScalaInlineInfo: length = 0xEF (unknown attribute)
   01 01 00 2F 00 D9 00 DA 01 00 E8 00 E9 01 01 2C
   00 B4 01 01 33 01 34 01 01 41 01 42 01 01 B0 01
   B1 01 00 FF 00 7B 01 01 0B 00 7B 01 01 1A 01 1B
   01 01 F9 01 FA 01 01 DB 01 DC 01 01 D6 01 D7 01
   02 13 02 14 01 00 B6 00 57 01 00 9B 02 47 01 00
   9B 01 50 01 00 82 00 7E 01 00 85 00 86 01 00 38
   00 6D 01 01 70 01 71 01 00 CC 00 CD 01 01 73 01
   71 01 01 79 01 7A 01 00 42 00 7B 01 01 8D 01 7A
   01 01 8E 01 8F 01 01 9B 01 9C 01 00 68 00 60 01
   00 5F 00 60 01 01 8C 00 7B 01 00 3B 00 71 01 00
   D2 00 CD 01 00 41 00 75 01 00 3E 00 75 01 00 44
   00 7E 01 01 58 00 7B 01 01 84 01 85 01 01 4D 01
   4E 01 01 54 00 AD 01 00 91 00 86 01 00 CB 00 AD
   01 00 A5 00 A0 01 00 94 00 AD 01 00 94 00 95 01
   00 9F 00 A0 01 00 9F 00 B1 01 01 55 01 56 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
