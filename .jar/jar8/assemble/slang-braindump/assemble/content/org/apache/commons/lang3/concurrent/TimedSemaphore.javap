Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/concurrent/TimedSemaphore.class
  Last modified May 29, 2022; size 4583 bytes
  SHA-256 checksum fb039d49570d113054c5d131657485f562d23b1536ac37235cdd22005324f159
  Compiled from "TimedSemaphore.java"
public class org.apache.commons.lang3.concurrent.TimedSemaphore
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #13                         // org/apache/commons/lang3/concurrent/TimedSemaphore
  super_class: #44                        // java/lang/Object
  interfaces: 0, fields: 13, methods: 19, attributes: 2
Constant pool:
    #1 = Methodref          #13.#117      // org/apache/commons/lang3/concurrent/TimedSemaphore."<init>":(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;I)V
    #2 = Methodref          #44.#118      // java/lang/Object."<init>":()V
    #3 = Class              #119          // java/lang/Long
    #4 = Long               9223372036854775807l
    #6 = String             #120          // Time period must be greater than 0!
    #7 = Methodref          #121.#122     // org/apache/commons/lang3/Validate.inclusiveBetween:(JJJLjava/lang/String;)V
    #8 = Fieldref           #13.#123      // org/apache/commons/lang3/concurrent/TimedSemaphore.period:J
    #9 = Fieldref           #13.#124      // org/apache/commons/lang3/concurrent/TimedSemaphore.unit:Ljava/util/concurrent/TimeUnit;
   #10 = Fieldref           #13.#125      // org/apache/commons/lang3/concurrent/TimedSemaphore.executorService:Ljava/util/concurrent/ScheduledExecutorService;
   #11 = Fieldref           #13.#126      // org/apache/commons/lang3/concurrent/TimedSemaphore.ownExecutor:Z
   #12 = Class              #127          // java/util/concurrent/ScheduledThreadPoolExecutor
   #13 = Class              #128          // org/apache/commons/lang3/concurrent/TimedSemaphore
   #14 = Methodref          #12.#129      // java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(I)V
   #15 = Methodref          #12.#130      // java/util/concurrent/ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy:(Z)V
   #16 = Methodref          #12.#131      // java/util/concurrent/ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy:(Z)V
   #17 = Methodref          #13.#132      // org/apache/commons/lang3/concurrent/TimedSemaphore.setLimit:(I)V
   #18 = Fieldref           #13.#133      // org/apache/commons/lang3/concurrent/TimedSemaphore.limit:I
   #19 = Fieldref           #13.#134      // org/apache/commons/lang3/concurrent/TimedSemaphore.shutdown:Z
   #20 = Methodref          #13.#135      // org/apache/commons/lang3/concurrent/TimedSemaphore.getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
   #21 = InterfaceMethodref #84.#136      // java/util/concurrent/ScheduledExecutorService.shutdownNow:()Ljava/util/List;
   #22 = Fieldref           #13.#137      // org/apache/commons/lang3/concurrent/TimedSemaphore.task:Ljava/util/concurrent/ScheduledFuture;
   #23 = InterfaceMethodref #138.#139     // java/util/concurrent/ScheduledFuture.cancel:(Z)Z
   #24 = Methodref          #13.#140      // org/apache/commons/lang3/concurrent/TimedSemaphore.prepareAcquire:()V
   #25 = Methodref          #13.#141      // org/apache/commons/lang3/concurrent/TimedSemaphore.acquirePermit:()Z
   #26 = Methodref          #44.#142      // java/lang/Object.wait:()V
   #27 = Fieldref           #13.#143      // org/apache/commons/lang3/concurrent/TimedSemaphore.lastCallsPerPeriod:I
   #28 = Fieldref           #13.#144      // org/apache/commons/lang3/concurrent/TimedSemaphore.acquireCount:I
   #29 = Methodref          #13.#145      // org/apache/commons/lang3/concurrent/TimedSemaphore.getLimit:()I
   #30 = Methodref          #13.#146      // org/apache/commons/lang3/concurrent/TimedSemaphore.getAcquireCount:()I
   #31 = Fieldref           #13.#147      // org/apache/commons/lang3/concurrent/TimedSemaphore.periodCount:J
   #32 = Fieldref           #13.#148      // org/apache/commons/lang3/concurrent/TimedSemaphore.totalAcquireCount:J
   #33 = Class              #149          // org/apache/commons/lang3/concurrent/TimedSemaphore$1
   #34 = Methodref          #33.#150      // org/apache/commons/lang3/concurrent/TimedSemaphore$1."<init>":(Lorg/apache/commons/lang3/concurrent/TimedSemaphore;)V
   #35 = Methodref          #13.#151      // org/apache/commons/lang3/concurrent/TimedSemaphore.getPeriod:()J
   #36 = Methodref          #13.#152      // org/apache/commons/lang3/concurrent/TimedSemaphore.getUnit:()Ljava/util/concurrent/TimeUnit;
   #37 = InterfaceMethodref #84.#153      // java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
   #38 = Methodref          #44.#154      // java/lang/Object.notifyAll:()V
   #39 = Methodref          #13.#155      // org/apache/commons/lang3/concurrent/TimedSemaphore.isShutdown:()Z
   #40 = Class              #156          // java/lang/IllegalStateException
   #41 = String             #157          // TimedSemaphore is shut down!
   #42 = Methodref          #40.#158      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #43 = Methodref          #13.#159      // org/apache/commons/lang3/concurrent/TimedSemaphore.startTimer:()Ljava/util/concurrent/ScheduledFuture;
   #44 = Class              #160          // java/lang/Object
   #45 = Utf8               InnerClasses
   #46 = Utf8               NO_LIMIT
   #47 = Utf8               I
   #48 = Utf8               ConstantValue
   #49 = Integer            0
   #50 = Utf8               THREAD_POOL_SIZE
   #51 = Integer            1
   #52 = Utf8               executorService
   #53 = Utf8               Ljava/util/concurrent/ScheduledExecutorService;
   #54 = Utf8               period
   #55 = Utf8               J
   #56 = Utf8               unit
   #57 = Utf8               Ljava/util/concurrent/TimeUnit;
   #58 = Utf8               ownExecutor
   #59 = Utf8               Z
   #60 = Utf8               task
   #61 = Utf8               Ljava/util/concurrent/ScheduledFuture;
   #62 = Utf8               Signature
   #63 = Utf8               Ljava/util/concurrent/ScheduledFuture<*>;
   #64 = Utf8               totalAcquireCount
   #65 = Utf8               periodCount
   #66 = Utf8               limit
   #67 = Utf8               acquireCount
   #68 = Utf8               lastCallsPerPeriod
   #69 = Utf8               shutdown
   #70 = Utf8               <init>
   #71 = Utf8               (JLjava/util/concurrent/TimeUnit;I)V
   #72 = Utf8               Code
   #73 = Utf8               LineNumberTable
   #74 = Utf8               LocalVariableTable
   #75 = Utf8               this
   #76 = Utf8               Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
   #77 = Utf8               timePeriod
   #78 = Utf8               timeUnit
   #79 = Utf8               (Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;I)V
   #80 = Utf8               s
   #81 = Utf8               Ljava/util/concurrent/ScheduledThreadPoolExecutor;
   #82 = Utf8               service
   #83 = Utf8               StackMapTable
   #84 = Class              #161          // java/util/concurrent/ScheduledExecutorService
   #85 = Class              #162          // java/util/concurrent/TimeUnit
   #86 = Utf8               getLimit
   #87 = Utf8               ()I
   #88 = Utf8               setLimit
   #89 = Utf8               (I)V
   #90 = Utf8               ()V
   #91 = Utf8               isShutdown
   #92 = Utf8               ()Z
   #93 = Utf8               acquire
   #94 = Utf8               canPass
   #95 = Utf8               Exceptions
   #96 = Class              #163          // java/lang/InterruptedException
   #97 = Utf8               tryAcquire
   #98 = Utf8               getLastAcquiresPerPeriod
   #99 = Utf8               getAcquireCount
  #100 = Utf8               getAvailablePermits
  #101 = Utf8               getAverageCallsPerPeriod
  #102 = Utf8               ()D
  #103 = Utf8               getPeriod
  #104 = Utf8               ()J
  #105 = Utf8               getUnit
  #106 = Utf8               ()Ljava/util/concurrent/TimeUnit;
  #107 = Utf8               getExecutorService
  #108 = Utf8               ()Ljava/util/concurrent/ScheduledExecutorService;
  #109 = Utf8               startTimer
  #110 = Utf8               ()Ljava/util/concurrent/ScheduledFuture;
  #111 = Utf8               ()Ljava/util/concurrent/ScheduledFuture<*>;
  #112 = Utf8               endOfPeriod
  #113 = Utf8               prepareAcquire
  #114 = Utf8               acquirePermit
  #115 = Utf8               SourceFile
  #116 = Utf8               TimedSemaphore.java
  #117 = NameAndType        #70:#79       // "<init>":(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;I)V
  #118 = NameAndType        #70:#90       // "<init>":()V
  #119 = Utf8               java/lang/Long
  #120 = Utf8               Time period must be greater than 0!
  #121 = Class              #164          // org/apache/commons/lang3/Validate
  #122 = NameAndType        #165:#166     // inclusiveBetween:(JJJLjava/lang/String;)V
  #123 = NameAndType        #54:#55       // period:J
  #124 = NameAndType        #56:#57       // unit:Ljava/util/concurrent/TimeUnit;
  #125 = NameAndType        #52:#53       // executorService:Ljava/util/concurrent/ScheduledExecutorService;
  #126 = NameAndType        #58:#59       // ownExecutor:Z
  #127 = Utf8               java/util/concurrent/ScheduledThreadPoolExecutor
  #128 = Utf8               org/apache/commons/lang3/concurrent/TimedSemaphore
  #129 = NameAndType        #70:#89       // "<init>":(I)V
  #130 = NameAndType        #167:#168     // setContinueExistingPeriodicTasksAfterShutdownPolicy:(Z)V
  #131 = NameAndType        #169:#168     // setExecuteExistingDelayedTasksAfterShutdownPolicy:(Z)V
  #132 = NameAndType        #88:#89       // setLimit:(I)V
  #133 = NameAndType        #66:#47       // limit:I
  #134 = NameAndType        #69:#59       // shutdown:Z
  #135 = NameAndType        #107:#108     // getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
  #136 = NameAndType        #170:#171     // shutdownNow:()Ljava/util/List;
  #137 = NameAndType        #60:#61       // task:Ljava/util/concurrent/ScheduledFuture;
  #138 = Class              #172          // java/util/concurrent/ScheduledFuture
  #139 = NameAndType        #173:#174     // cancel:(Z)Z
  #140 = NameAndType        #113:#90      // prepareAcquire:()V
  #141 = NameAndType        #114:#92      // acquirePermit:()Z
  #142 = NameAndType        #175:#90      // wait:()V
  #143 = NameAndType        #68:#47       // lastCallsPerPeriod:I
  #144 = NameAndType        #67:#47       // acquireCount:I
  #145 = NameAndType        #86:#87       // getLimit:()I
  #146 = NameAndType        #99:#87       // getAcquireCount:()I
  #147 = NameAndType        #65:#55       // periodCount:J
  #148 = NameAndType        #64:#55       // totalAcquireCount:J
  #149 = Utf8               org/apache/commons/lang3/concurrent/TimedSemaphore$1
  #150 = NameAndType        #70:#176      // "<init>":(Lorg/apache/commons/lang3/concurrent/TimedSemaphore;)V
  #151 = NameAndType        #103:#104     // getPeriod:()J
  #152 = NameAndType        #105:#106     // getUnit:()Ljava/util/concurrent/TimeUnit;
  #153 = NameAndType        #177:#178     // scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
  #154 = NameAndType        #179:#90      // notifyAll:()V
  #155 = NameAndType        #91:#92       // isShutdown:()Z
  #156 = Utf8               java/lang/IllegalStateException
  #157 = Utf8               TimedSemaphore is shut down!
  #158 = NameAndType        #70:#180      // "<init>":(Ljava/lang/String;)V
  #159 = NameAndType        #109:#110     // startTimer:()Ljava/util/concurrent/ScheduledFuture;
  #160 = Utf8               java/lang/Object
  #161 = Utf8               java/util/concurrent/ScheduledExecutorService
  #162 = Utf8               java/util/concurrent/TimeUnit
  #163 = Utf8               java/lang/InterruptedException
  #164 = Utf8               org/apache/commons/lang3/Validate
  #165 = Utf8               inclusiveBetween
  #166 = Utf8               (JJJLjava/lang/String;)V
  #167 = Utf8               setContinueExistingPeriodicTasksAfterShutdownPolicy
  #168 = Utf8               (Z)V
  #169 = Utf8               setExecuteExistingDelayedTasksAfterShutdownPolicy
  #170 = Utf8               shutdownNow
  #171 = Utf8               ()Ljava/util/List;
  #172 = Utf8               java/util/concurrent/ScheduledFuture
  #173 = Utf8               cancel
  #174 = Utf8               (Z)Z
  #175 = Utf8               wait
  #176 = Utf8               (Lorg/apache/commons/lang3/concurrent/TimedSemaphore;)V
  #177 = Utf8               scheduleAtFixedRate
  #178 = Utf8               (Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
  #179 = Utf8               notifyAll
  #180 = Utf8               (Ljava/lang/String;)V
{
  public static final int NO_LIMIT;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 0

  private static final int THREAD_POOL_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1

  private final java.util.concurrent.ScheduledExecutorService executorService;
    descriptor: Ljava/util/concurrent/ScheduledExecutorService;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final long period;
    descriptor: J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.util.concurrent.TimeUnit unit;
    descriptor: Ljava/util/concurrent/TimeUnit;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean ownExecutor;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private java.util.concurrent.ScheduledFuture<?> task;
    descriptor: Ljava/util/concurrent/ScheduledFuture;
    flags: (0x0002) ACC_PRIVATE
    Signature: #63                          // Ljava/util/concurrent/ScheduledFuture<*>;

  private long totalAcquireCount;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  private long periodCount;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  private int limit;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int acquireCount;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int lastCallsPerPeriod;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private boolean shutdown;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public org.apache.commons.lang3.concurrent.TimedSemaphore(long, java.util.concurrent.TimeUnit, int);
    descriptor: (JLjava/util/concurrent/TimeUnit;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=4
         0: aload_0
         1: aconst_null
         2: lload_1
         3: aload_3
         4: iload         4
         6: invokespecial #1                  // Method "<init>":(Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;I)V
         9: return
      LineNumberTable:
        line 197: 0
        line 198: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
            0      10     1 timePeriod   J
            0      10     3 timeUnit   Ljava/util/concurrent/TimeUnit;
            0      10     4 limit   I

  public org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService, long, java.util.concurrent.TimeUnit, int);
    descriptor: (Ljava/util/concurrent/ScheduledExecutorService;JLjava/util/concurrent/TimeUnit;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=7, args_size=5
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: lconst_1
         5: ldc2_w        #4                  // long 9223372036854775807l
         8: lload_2
         9: ldc           #6                  // String Time period must be greater than 0!
        11: invokestatic  #7                  // Method org/apache/commons/lang3/Validate.inclusiveBetween:(JJJLjava/lang/String;)V
        14: aload_0
        15: lload_2
        16: putfield      #8                  // Field period:J
        19: aload_0
        20: aload         4
        22: putfield      #9                  // Field unit:Ljava/util/concurrent/TimeUnit;
        25: aload_1
        26: ifnull        42
        29: aload_0
        30: aload_1
        31: putfield      #10                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
        34: aload_0
        35: iconst_0
        36: putfield      #11                 // Field ownExecutor:Z
        39: goto          75
        42: new           #12                 // class java/util/concurrent/ScheduledThreadPoolExecutor
        45: dup
        46: iconst_1
        47: invokespecial #14                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(I)V
        50: astore        6
        52: aload         6
        54: iconst_0
        55: invokevirtual #15                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy:(Z)V
        58: aload         6
        60: iconst_0
        61: invokevirtual #16                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy:(Z)V
        64: aload_0
        65: aload         6
        67: putfield      #10                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
        70: aload_0
        71: iconst_1
        72: putfield      #11                 // Field ownExecutor:Z
        75: aload_0
        76: iload         5
        78: invokevirtual #17                 // Method setLimit:(I)V
        81: return
      LineNumberTable:
        line 213: 0
        line 214: 4
        line 216: 14
        line 217: 19
        line 219: 25
        line 220: 29
        line 221: 34
        line 223: 42
        line 225: 52
        line 226: 58
        line 227: 64
        line 228: 70
        line 231: 75
        line 232: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           52      23     6     s   Ljava/util/concurrent/ScheduledThreadPoolExecutor;
            0      82     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
            0      82     1 service   Ljava/util/concurrent/ScheduledExecutorService;
            0      82     2 timePeriod   J
            0      82     4 timeUnit   Ljava/util/concurrent/TimeUnit;
            0      82     5 limit   I
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class org/apache/commons/lang3/concurrent/TimedSemaphore, class java/util/concurrent/ScheduledExecutorService, long, class java/util/concurrent/TimeUnit, int ]
          stack = []
        frame_type = 32 /* same */

  public final synchronized int getLimit();
    descriptor: ()I
    flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #18                 // Field limit:I
         4: ireturn
      LineNumberTable:
        line 242: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  public final synchronized void setLimit(int);
    descriptor: (I)V
    flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #18                 // Field limit:I
         5: return
      LineNumberTable:
        line 256: 0
        line 257: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
            0       6     1 limit   I

  public synchronized void shutdown();
    descriptor: ()V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #19                 // Field shutdown:Z
         4: ifne          47
         7: aload_0
         8: getfield      #11                 // Field ownExecutor:Z
        11: ifeq          24
        14: aload_0
        15: invokevirtual #20                 // Method getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
        18: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdownNow:()Ljava/util/List;
        23: pop
        24: aload_0
        25: getfield      #22                 // Field task:Ljava/util/concurrent/ScheduledFuture;
        28: ifnull        42
        31: aload_0
        32: getfield      #22                 // Field task:Ljava/util/concurrent/ScheduledFuture;
        35: iconst_0
        36: invokeinterface #23,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
        41: pop
        42: aload_0
        43: iconst_1
        44: putfield      #19                 // Field shutdown:Z
        47: return
      LineNumberTable:
        line 265: 0
        line 267: 7
        line 270: 14
        line 272: 24
        line 273: 31
        line 276: 42
        line 278: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
      StackMapTable: number_of_entries = 3
        frame_type = 24 /* same */
        frame_type = 17 /* same */
        frame_type = 4 /* same */

  public synchronized boolean isShutdown();
    descriptor: ()Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #19                 // Field shutdown:Z
         4: ireturn
      LineNumberTable:
        line 288: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  public synchronized void acquire() throws java.lang.InterruptedException;
    descriptor: ()V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokespecial #24                 // Method prepareAcquire:()V
         4: aload_0
         5: invokespecial #25                 // Method acquirePermit:()Z
         8: istore_1
         9: iload_1
        10: ifne          17
        13: aload_0
        14: invokevirtual #26                 // Method java/lang/Object.wait:()V
        17: iload_1
        18: ifeq          4
        21: return
      LineNumberTable:
        line 303: 0
        line 307: 4
        line 308: 9
        line 309: 13
        line 311: 17
        line 312: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
            9      13     1 canPass   Z
      StackMapTable: number_of_entries = 2
        frame_type = 4 /* same */
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
    Exceptions:
      throws java.lang.InterruptedException

  public synchronized boolean tryAcquire();
    descriptor: ()Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #24                 // Method prepareAcquire:()V
         4: aload_0
         5: invokespecial #25                 // Method acquirePermit:()Z
         8: ireturn
      LineNumberTable:
        line 326: 0
        line 327: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  public synchronized int getLastAcquiresPerPeriod();
    descriptor: ()I
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #27                 // Field lastCallsPerPeriod:I
         4: ireturn
      LineNumberTable:
        line 341: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  public synchronized int getAcquireCount();
    descriptor: ()I
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #28                 // Field acquireCount:I
         4: ireturn
      LineNumberTable:
        line 351: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  public synchronized int getAvailablePermits();
    descriptor: ()I
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #29                 // Method getLimit:()I
         4: aload_0
         5: invokevirtual #30                 // Method getAcquireCount:()I
         8: isub
         9: ireturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  public synchronized double getAverageCallsPerPeriod();
    descriptor: ()D
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #31                 // Field periodCount:J
         4: lconst_0
         5: lcmp
         6: ifne          13
         9: dconst_0
        10: goto          24
        13: aload_0
        14: getfield      #32                 // Field totalAcquireCount:J
        17: l2d
        18: aload_0
        19: getfield      #31                 // Field periodCount:J
        22: l2d
        23: ddiv
        24: dreturn
      LineNumberTable:
        line 379: 0
        line 380: 13
        line 379: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ double ]

  public long getPeriod();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #8                  // Field period:J
         4: lreturn
      LineNumberTable:
        line 391: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  public java.util.concurrent.TimeUnit getUnit();
    descriptor: ()Ljava/util/concurrent/TimeUnit;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #9                  // Field unit:Ljava/util/concurrent/TimeUnit;
         4: areturn
      LineNumberTable:
        line 400: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  protected java.util.concurrent.ScheduledExecutorService getExecutorService();
    descriptor: ()Ljava/util/concurrent/ScheduledExecutorService;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #10                 // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
         4: areturn
      LineNumberTable:
        line 409: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  protected java.util.concurrent.ScheduledFuture<?> startTimer();
    descriptor: ()Ljava/util/concurrent/ScheduledFuture;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=7, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #20                 // Method getExecutorService:()Ljava/util/concurrent/ScheduledExecutorService;
         4: new           #33                 // class org/apache/commons/lang3/concurrent/TimedSemaphore$1
         7: dup
         8: aload_0
         9: invokespecial #34                 // Method org/apache/commons/lang3/concurrent/TimedSemaphore$1."<init>":(Lorg/apache/commons/lang3/concurrent/TimedSemaphore;)V
        12: aload_0
        13: invokevirtual #35                 // Method getPeriod:()J
        16: aload_0
        17: invokevirtual #35                 // Method getPeriod:()J
        20: aload_0
        21: invokevirtual #36                 // Method getUnit:()Ljava/util/concurrent/TimeUnit;
        24: invokeinterface #37,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
        29: areturn
      LineNumberTable:
        line 420: 0
        line 425: 13
        line 420: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
    Signature: #111                         // ()Ljava/util/concurrent/ScheduledFuture<*>;

  synchronized void endOfPeriod();
    descriptor: ()V
    flags: (0x0020) ACC_SYNCHRONIZED
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: getfield      #28                 // Field acquireCount:I
         5: putfield      #27                 // Field lastCallsPerPeriod:I
         8: aload_0
         9: dup
        10: getfield      #32                 // Field totalAcquireCount:J
        13: aload_0
        14: getfield      #28                 // Field acquireCount:I
        17: i2l
        18: ladd
        19: putfield      #32                 // Field totalAcquireCount:J
        22: aload_0
        23: dup
        24: getfield      #31                 // Field periodCount:J
        27: lconst_1
        28: ladd
        29: putfield      #31                 // Field periodCount:J
        32: aload_0
        33: iconst_0
        34: putfield      #28                 // Field acquireCount:I
        37: aload_0
        38: invokevirtual #38                 // Method java/lang/Object.notifyAll:()V
        41: return
      LineNumberTable:
        line 434: 0
        line 435: 8
        line 436: 22
        line 437: 32
        line 438: 37
        line 439: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;

  private void prepareAcquire();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #39                 // Method isShutdown:()Z
         4: ifeq          17
         7: new           #40                 // class java/lang/IllegalStateException
        10: dup
        11: ldc           #41                 // String TimedSemaphore is shut down!
        13: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: getfield      #22                 // Field task:Ljava/util/concurrent/ScheduledFuture;
        21: ifnonnull     32
        24: aload_0
        25: aload_0
        26: invokevirtual #43                 // Method startTimer:()Ljava/util/concurrent/ScheduledFuture;
        29: putfield      #22                 // Field task:Ljava/util/concurrent/ScheduledFuture;
        32: return
      LineNumberTable:
        line 446: 0
        line 447: 7
        line 450: 17
        line 451: 24
        line 453: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 14 /* same */

  private boolean acquirePermit();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #29                 // Method getLimit:()I
         4: ifle          18
         7: aload_0
         8: getfield      #28                 // Field acquireCount:I
        11: aload_0
        12: invokevirtual #29                 // Method getLimit:()I
        15: if_icmpge     30
        18: aload_0
        19: dup
        20: getfield      #28                 // Field acquireCount:I
        23: iconst_1
        24: iadd
        25: putfield      #28                 // Field acquireCount:I
        28: iconst_1
        29: ireturn
        30: iconst_0
        31: ireturn
      LineNumberTable:
        line 464: 0
        line 465: 18
        line 466: 28
        line 468: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/apache/commons/lang3/concurrent/TimedSemaphore;
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 11 /* same */
}
SourceFile: "TimedSemaphore.java"
InnerClasses:
  #33;                                    // class org/apache/commons/lang3/concurrent/TimedSemaphore$1
