Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/Json$.class
  Last modified May 29, 2022; size 10881 bytes
  SHA-256 checksum dbadc5fe9ec15581bfc9659a7563ddcc43a64e2d472f419a67707560954cf759
  Compiled from "Json.scala"
public final class org.sireum.Json$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Json$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 19, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/Json$
    #2 = Class              #1            // org/sireum/Json$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Json.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #12 = Class              #11           // org/sireum/$internal/PackageTrait$ISZ$
   #13 = Utf8               org/sireum/$internal/PackageTrait
   #14 = Class              #13           // org/sireum/$internal/PackageTrait
   #15 = Utf8               ISZ$
   #16 = Utf8               org/sireum/Either$Left
   #17 = Class              #16           // org/sireum/Either$Left
   #18 = Utf8               org/sireum/Either
   #19 = Class              #18           // org/sireum/Either
   #20 = Utf8               Left
   #21 = Utf8               org/sireum/Either$Left$
   #22 = Class              #21           // org/sireum/Either$Left$
   #23 = Utf8               Left$
   #24 = Utf8               org/sireum/Either$Right
   #25 = Class              #24           // org/sireum/Either$Right
   #26 = Utf8               Right
   #27 = Utf8               org/sireum/Either$Right$
   #28 = Class              #27           // org/sireum/Either$Right$
   #29 = Utf8               Right$
   #30 = Utf8               org/sireum/Json$ErrorMsg
   #31 = Class              #30           // org/sireum/Json$ErrorMsg
   #32 = Utf8               org/sireum/Json
   #33 = Class              #32           // org/sireum/Json
   #34 = Utf8               ErrorMsg
   #35 = Utf8               org/sireum/Json$JsonAstBinding
   #36 = Class              #35           // org/sireum/Json$JsonAstBinding
   #37 = Utf8               JsonAstBinding
   #38 = Utf8               org/sireum/Json$Parser
   #39 = Class              #38           // org/sireum/Json$Parser
   #40 = Utf8               Parser
   #41 = Utf8               org/sireum/Json$Parser$
   #42 = Class              #41           // org/sireum/Json$Parser$
   #43 = Utf8               Parser$
   #44 = Utf8               org/sireum/Json$Printer$
   #45 = Class              #44           // org/sireum/Json$Printer$
   #46 = Utf8               Printer$
   #47 = Utf8               org/sireum/Json$ValueKind$
   #48 = Class              #47           // org/sireum/Json$ValueKind$
   #49 = Utf8               ValueKind$
   #50 = Utf8               org/sireum/Json$ValueKind$Array$
   #51 = Class              #50           // org/sireum/Json$ValueKind$Array$
   #52 = Utf8               Array$
   #53 = Utf8               org/sireum/Json$ValueKind$False$
   #54 = Class              #53           // org/sireum/Json$ValueKind$False$
   #55 = Utf8               False$
   #56 = Utf8               org/sireum/Json$ValueKind$Null$
   #57 = Class              #56           // org/sireum/Json$ValueKind$Null$
   #58 = Utf8               Null$
   #59 = Utf8               org/sireum/Json$ValueKind$Number$
   #60 = Class              #59           // org/sireum/Json$ValueKind$Number$
   #61 = Utf8               Number$
   #62 = Utf8               org/sireum/Json$ValueKind$Object$
   #63 = Class              #62           // org/sireum/Json$ValueKind$Object$
   #64 = Utf8               Object$
   #65 = Utf8               org/sireum/Json$ValueKind$String$
   #66 = Class              #65           // org/sireum/Json$ValueKind$String$
   #67 = Utf8               String$
   #68 = Utf8               org/sireum/Json$ValueKind$True$
   #69 = Class              #68           // org/sireum/Json$ValueKind$True$
   #70 = Utf8               True$
   #71 = Utf8               org/sireum/Json$ValueKind$Type
   #72 = Class              #71           // org/sireum/Json$ValueKind$Type
   #73 = Utf8               Type
   #74 = Utf8               MODULE$
   #75 = Utf8               Lorg/sireum/Json$;
   #76 = Utf8               <clinit>
   #77 = Utf8               ()V
   #78 = Utf8               <init>
   #79 = NameAndType        #78:#77       // "<init>":()V
   #80 = Methodref          #2.#79        // org/sireum/Json$."<init>":()V
   #81 = NameAndType        #74:#75       // MODULE$:Lorg/sireum/Json$;
   #82 = Fieldref           #2.#81        // org/sireum/Json$.MODULE$:Lorg/sireum/Json$;
   #83 = Utf8               parseAst
   #84 = Utf8               (Lorg/sireum/Json$JsonAstBinding;Ljava/lang/String;)Lorg/sireum/Either;
   #85 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/Json$JsonAstBinding<TT;>;Ljava/lang/String;)Lorg/sireum/Either<TT;Lorg/sireum/Json$ErrorMsg;>;
   #86 = Utf8               binding
   #87 = Utf8               input
   #88 = Utf8               org/sireum/helper$
   #89 = Class              #88           // org/sireum/helper$
   #90 = Utf8               Lorg/sireum/helper$;
   #91 = NameAndType        #74:#90       // MODULE$:Lorg/sireum/helper$;
   #92 = Fieldref           #89.#91       // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
   #93 = Utf8               Lorg/sireum/Json$Parser$;
   #94 = NameAndType        #74:#93       // MODULE$:Lorg/sireum/Json$Parser$;
   #95 = Fieldref           #42.#94       // org/sireum/Json$Parser$.MODULE$:Lorg/sireum/Json$Parser$;
   #96 = Utf8               create
   #97 = Utf8               (Ljava/lang/String;)Lorg/sireum/Json$Parser;
   #98 = NameAndType        #96:#97       // create:(Ljava/lang/String;)Lorg/sireum/Json$Parser;
   #99 = Methodref          #42.#98       // org/sireum/Json$Parser$.create:(Ljava/lang/String;)Lorg/sireum/Json$Parser;
  #100 = Utf8               assignMut
  #101 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #102 = NameAndType        #100:#101     // assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #103 = Methodref          #89.#102      // org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #104 = Utf8               org/sireum/package$
  #105 = Class              #104          // org/sireum/package$
  #106 = Utf8               Lorg/sireum/package$;
  #107 = NameAndType        #74:#106      // MODULE$:Lorg/sireum/package$;
  #108 = Fieldref           #105.#107     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #109 = Utf8               ISZ
  #110 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #111 = NameAndType        #109:#110     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #112 = Methodref          #105.#111     // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #113 = Utf8               scala/collection/immutable/Nil$
  #114 = Class              #113          // scala/collection/immutable/Nil$
  #115 = Utf8               Lscala/collection/immutable/Nil$;
  #116 = NameAndType        #74:#115      // MODULE$:Lscala/collection/immutable/Nil$;
  #117 = Fieldref           #114.#116     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #118 = Utf8               apply
  #119 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #120 = NameAndType        #118:#119     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #121 = Methodref          #12.#120      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #122 = Utf8               parseValue$1
  #123 = Utf8               (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
  #124 = NameAndType        #122:#123     // parseValue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
  #125 = Methodref          #2.#124       // org/sireum/Json$.parseValue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
  #126 = Utf8               eof
  #127 = Utf8               ()Z
  #128 = NameAndType        #126:#127     // eof:()Z
  #129 = Methodref          #39.#128      // org/sireum/Json$Parser.eof:()Z
  #130 = Utf8               errorOpt
  #131 = Utf8               ()Lorg/sireum/Option;
  #132 = NameAndType        #130:#131     // errorOpt:()Lorg/sireum/Option;
  #133 = Methodref          #39.#132      // org/sireum/Json$Parser.errorOpt:()Lorg/sireum/Option;
  #134 = Utf8               org/sireum/Some
  #135 = Class              #134          // org/sireum/Some
  #136 = Utf8               org/sireum/Some$
  #137 = Class              #136          // org/sireum/Some$
  #138 = Utf8               Lorg/sireum/Some$;
  #139 = NameAndType        #74:#138      // MODULE$:Lorg/sireum/Some$;
  #140 = Fieldref           #137.#139     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #141 = Utf8               unapply
  #142 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #143 = NameAndType        #141:#142     // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #144 = Methodref          #137.#143     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #145 = Utf8               scala/Some
  #146 = Class              #145          // scala/Some
  #147 = Utf8               isEmpty
  #148 = NameAndType        #147:#127     // isEmpty:()Z
  #149 = Methodref          #146.#148     // scala/Some.isEmpty:()Z
  #150 = Utf8               get
  #151 = Utf8               ()Ljava/lang/Object;
  #152 = NameAndType        #150:#151     // get:()Ljava/lang/Object;
  #153 = Methodref          #146.#152     // scala/Some.get:()Ljava/lang/Object;
  #154 = Utf8               Lorg/sireum/Either$Right$;
  #155 = NameAndType        #74:#154      // MODULE$:Lorg/sireum/Either$Right$;
  #156 = Fieldref           #28.#155      // org/sireum/Either$Right$.MODULE$:Lorg/sireum/Either$Right$;
  #157 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Either$Right;
  #158 = NameAndType        #118:#157     // apply:(Ljava/lang/Object;)Lorg/sireum/Either$Right;
  #159 = Methodref          #28.#158      // org/sireum/Either$Right$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Right;
  #160 = Utf8               Lorg/sireum/Either$Left$;
  #161 = NameAndType        #74:#160      // MODULE$:Lorg/sireum/Either$Left$;
  #162 = Fieldref           #22.#161      // org/sireum/Either$Left$.MODULE$:Lorg/sireum/Either$Left$;
  #163 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Either$Left;
  #164 = NameAndType        #118:#163     // apply:(Ljava/lang/Object;)Lorg/sireum/Either$Left;
  #165 = Methodref          #22.#164      // org/sireum/Either$Left$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Left;
  #166 = Utf8               e
  #167 = Utf8               Lorg/sireum/Json$ErrorMsg;
  #168 = Utf8               parser
  #169 = Utf8               Lorg/sireum/Json$Parser;
  #170 = Utf8               emptyKeys
  #171 = Utf8               Lorg/sireum/IS;
  #172 = Utf8               r
  #173 = Utf8               Ljava/lang/Object;
  #174 = Utf8               this
  #175 = Utf8               Lorg/sireum/Json$JsonAstBinding;
  #176 = Utf8               Ljava/lang/String;
  #177 = Utf8               java/lang/String
  #178 = Class              #177          // java/lang/String
  #179 = Utf8               org/sireum/IS
  #180 = Class              #179          // org/sireum/IS
  #181 = Utf8               org/sireum/Option
  #182 = Class              #181          // org/sireum/Option
  #183 = Utf8               printAst
  #184 = Utf8               (Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Lorg/sireum/ST;
  #185 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/Json$JsonAstBinding<TT;>;TT;)Lorg/sireum/ST;
  #186 = Utf8               v
  #187 = Utf8               printValue$1
  #188 = Utf8               (Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Lorg/sireum/ST;
  #189 = NameAndType        #187:#188     // printValue$1:(Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Lorg/sireum/ST;
  #190 = Methodref          #2.#189       // org/sireum/Json$.printValue$1:(Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Lorg/sireum/ST;
  #191 = Utf8               parseString$1
  #192 = Utf8               (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #193 = Utf8               parser$1
  #194 = Utf8               binding$1
  #195 = Utf8               parseString
  #196 = Utf8               ()Ljava/lang/String;
  #197 = NameAndType        #195:#196     // parseString:()Ljava/lang/String;
  #198 = Methodref          #39.#197      // org/sireum/Json$Parser.parseString:()Ljava/lang/String;
  #199 = Utf8               toString
  #200 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #201 = NameAndType        #199:#200     // toString:(Ljava/lang/String;)Ljava/lang/Object;
  #202 = InterfaceMethodref #36.#201      // org/sireum/Json$JsonAstBinding.toString:(Ljava/lang/String;)Ljava/lang/Object;
  #203 = Utf8               s
  #204 = Utf8               parseNumber$1
  #205 = Utf8               parseNumber
  #206 = NameAndType        #205:#196     // parseNumber:()Ljava/lang/String;
  #207 = Methodref          #39.#206      // org/sireum/Json$Parser.parseNumber:()Ljava/lang/String;
  #208 = Utf8               toNumber
  #209 = NameAndType        #208:#200     // toNumber:(Ljava/lang/String;)Ljava/lang/Object;
  #210 = InterfaceMethodref #36.#209      // org/sireum/Json$JsonAstBinding.toNumber:(Ljava/lang/String;)Ljava/lang/Object;
  #211 = Utf8               n
  #212 = Utf8               parseTrue$1
  #213 = Utf8               org/sireum/String$
  #214 = Class              #213          // org/sireum/String$
  #215 = Utf8               Lorg/sireum/String$;
  #216 = NameAndType        #74:#215      // MODULE$:Lorg/sireum/String$;
  #217 = Fieldref           #214.#216     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #218 = Utf8               true
  #219 = String             #218          // true
  #220 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #221 = NameAndType        #118:#220     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #222 = Methodref          #214.#221     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #223 = Utf8               parseConstant
  #224 = Utf8               (Ljava/lang/String;)V
  #225 = NameAndType        #223:#224     // parseConstant:(Ljava/lang/String;)V
  #226 = Methodref          #39.#225      // org/sireum/Json$Parser.parseConstant:(Ljava/lang/String;)V
  #227 = Utf8               T
  #228 = NameAndType        #227:#127     // T:()Z
  #229 = Methodref          #105.#228     // org/sireum/package$.T:()Z
  #230 = Utf8               toBoolean
  #231 = Utf8               (Z)Ljava/lang/Object;
  #232 = NameAndType        #230:#231     // toBoolean:(Z)Ljava/lang/Object;
  #233 = InterfaceMethodref #36.#232      // org/sireum/Json$JsonAstBinding.toBoolean:(Z)Ljava/lang/Object;
  #234 = Utf8               parseFalse$1
  #235 = Utf8               false
  #236 = String             #235          // false
  #237 = Utf8               F
  #238 = NameAndType        #237:#127     // F:()Z
  #239 = Methodref          #105.#238     // org/sireum/package$.F:()Z
  #240 = Utf8               parseNull$1
  #241 = Utf8               null
  #242 = String             #241          // null
  #243 = Utf8               toNull
  #244 = NameAndType        #243:#151     // toNull:()Ljava/lang/Object;
  #245 = InterfaceMethodref #36.#244      // org/sireum/Json$JsonAstBinding.toNull:()Ljava/lang/Object;
  #246 = Utf8               parseArray$1
  #247 = Utf8               emptyKeys$1
  #248 = Utf8               parseArrayBegin
  #249 = NameAndType        #248:#127     // parseArrayBegin:()Z
  #250 = Methodref          #39.#249      // org/sireum/Json$Parser.parseArrayBegin:()Z
  #251 = Utf8               org/sireum/B$
  #252 = Class              #251          // org/sireum/B$
  #253 = Utf8               Lorg/sireum/B$;
  #254 = NameAndType        #74:#253      // MODULE$:Lorg/sireum/B$;
  #255 = Fieldref           #252.#254     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #256 = Utf8               unary_$bang$extension
  #257 = Utf8               (Z)Z
  #258 = NameAndType        #256:#257     // unary_$bang$extension:(Z)Z
  #259 = Methodref          #252.#258     // org/sireum/B$.unary_$bang$extension:(Z)Z
  #260 = Utf8               $4B
  #261 = NameAndType        #260:#257     // $4B:(Z)Z
  #262 = Methodref          #252.#261     // org/sireum/B$.$4B:(Z)Z
  #263 = Utf8               toArray
  #264 = Utf8               (Lorg/sireum/IS;)Ljava/lang/Object;
  #265 = NameAndType        #263:#264     // toArray:(Lorg/sireum/IS;)Ljava/lang/Object;
  #266 = InterfaceMethodref #36.#265      // org/sireum/Json$JsonAstBinding.toArray:(Lorg/sireum/IS;)Ljava/lang/Object;
  #267 = Utf8               scala/runtime/ScalaRunTime$
  #268 = Class              #267          // scala/runtime/ScalaRunTime$
  #269 = Utf8               Lscala/runtime/ScalaRunTime$;
  #270 = NameAndType        #74:#269      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #271 = Fieldref           #268.#270     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #272 = Utf8               genericWrapArray
  #273 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #274 = NameAndType        #272:#273     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #275 = Methodref          #268.#274     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #276 = Utf8               parseArrayNext
  #277 = NameAndType        #276:#127     // parseArrayNext:()Z
  #278 = Methodref          #39.#277      // org/sireum/Json$Parser.parseArrayNext:()Z
  #279 = Utf8               $colon$plus
  #280 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #281 = NameAndType        #279:#280     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #282 = Methodref          #180.#281     // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #283 = Utf8               continue
  #284 = Utf8               Z
  #285 = Utf8               values
  #286 = Utf8               parseObject$1
  #287 = Utf8               parseObjectBegin
  #288 = NameAndType        #287:#127     // parseObjectBegin:()Z
  #289 = Methodref          #39.#288      // org/sireum/Json$Parser.parseObjectBegin:()Z
  #290 = Utf8               toObject
  #291 = NameAndType        #290:#264     // toObject:(Lorg/sireum/IS;)Ljava/lang/Object;
  #292 = InterfaceMethodref #36.#291      // org/sireum/Json$JsonAstBinding.toObject:(Lorg/sireum/IS;)Ljava/lang/Object;
  #293 = Utf8               parseObjectKeys
  #294 = Utf8               (Lorg/sireum/IS;)Ljava/lang/String;
  #295 = NameAndType        #293:#294     // parseObjectKeys:(Lorg/sireum/IS;)Ljava/lang/String;
  #296 = Methodref          #39.#295      // org/sireum/Json$Parser.parseObjectKeys:(Lorg/sireum/IS;)Ljava/lang/String;
  #297 = Utf8               scala/Tuple2
  #298 = Class              #297          // scala/Tuple2
  #299 = Utf8               org/sireum/String
  #300 = Class              #299          // org/sireum/String
  #301 = NameAndType        #78:#224      // "<init>":(Ljava/lang/String;)V
  #302 = Methodref          #300.#301     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #303 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #304 = NameAndType        #78:#303      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #305 = Methodref          #298.#304     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #306 = Utf8               [Ljava/lang/Object;
  #307 = Class              #306          // "[Ljava/lang/Object;"
  #308 = Utf8               wrapRefArray
  #309 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #310 = NameAndType        #308:#309     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #311 = Methodref          #268.#310     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #312 = Utf8               parseObjectNext
  #313 = NameAndType        #312:#127     // parseObjectNext:()Z
  #314 = Methodref          #39.#313      // org/sireum/Json$Parser.parseObjectNext:()Z
  #315 = Utf8               key
  #316 = Utf8               value
  #317 = Utf8               fields
  #318 = Utf8               detect
  #319 = Utf8               ()Lorg/sireum/Json$ValueKind$Type;
  #320 = NameAndType        #318:#319     // detect:()Lorg/sireum/Json$ValueKind$Type;
  #321 = Methodref          #39.#320      // org/sireum/Json$Parser.detect:()Lorg/sireum/Json$ValueKind$Type;
  #322 = Utf8               Lorg/sireum/Json$ValueKind$String$;
  #323 = NameAndType        #74:#322      // MODULE$:Lorg/sireum/Json$ValueKind$String$;
  #324 = Fieldref           #66.#323      // org/sireum/Json$ValueKind$String$.MODULE$:Lorg/sireum/Json$ValueKind$String$;
  #325 = Utf8               equals
  #326 = Utf8               (Ljava/lang/Object;)Z
  #327 = NameAndType        #325:#326     // equals:(Ljava/lang/Object;)Z
  #328 = Methodref          #4.#327       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #329 = NameAndType        #191:#192     // parseString$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #330 = Methodref          #2.#329       // org/sireum/Json$.parseString$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #331 = Utf8               Lorg/sireum/Json$ValueKind$Object$;
  #332 = NameAndType        #74:#331      // MODULE$:Lorg/sireum/Json$ValueKind$Object$;
  #333 = Fieldref           #63.#332      // org/sireum/Json$ValueKind$Object$.MODULE$:Lorg/sireum/Json$ValueKind$Object$;
  #334 = NameAndType        #286:#123     // parseObject$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
  #335 = Methodref          #2.#334       // org/sireum/Json$.parseObject$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
  #336 = Utf8               Lorg/sireum/Json$ValueKind$Array$;
  #337 = NameAndType        #74:#336      // MODULE$:Lorg/sireum/Json$ValueKind$Array$;
  #338 = Fieldref           #51.#337      // org/sireum/Json$ValueKind$Array$.MODULE$:Lorg/sireum/Json$ValueKind$Array$;
  #339 = NameAndType        #246:#123     // parseArray$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
  #340 = Methodref          #2.#339       // org/sireum/Json$.parseArray$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
  #341 = Utf8               Lorg/sireum/Json$ValueKind$True$;
  #342 = NameAndType        #74:#341      // MODULE$:Lorg/sireum/Json$ValueKind$True$;
  #343 = Fieldref           #69.#342      // org/sireum/Json$ValueKind$True$.MODULE$:Lorg/sireum/Json$ValueKind$True$;
  #344 = NameAndType        #212:#192     // parseTrue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #345 = Methodref          #2.#344       // org/sireum/Json$.parseTrue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #346 = Utf8               Lorg/sireum/Json$ValueKind$False$;
  #347 = NameAndType        #74:#346      // MODULE$:Lorg/sireum/Json$ValueKind$False$;
  #348 = Fieldref           #54.#347      // org/sireum/Json$ValueKind$False$.MODULE$:Lorg/sireum/Json$ValueKind$False$;
  #349 = NameAndType        #234:#192     // parseFalse$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #350 = Methodref          #2.#349       // org/sireum/Json$.parseFalse$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #351 = Utf8               Lorg/sireum/Json$ValueKind$Null$;
  #352 = NameAndType        #74:#351      // MODULE$:Lorg/sireum/Json$ValueKind$Null$;
  #353 = Fieldref           #57.#352      // org/sireum/Json$ValueKind$Null$.MODULE$:Lorg/sireum/Json$ValueKind$Null$;
  #354 = NameAndType        #240:#192     // parseNull$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #355 = Methodref          #2.#354       // org/sireum/Json$.parseNull$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #356 = Utf8               Lorg/sireum/Json$ValueKind$Number$;
  #357 = NameAndType        #74:#356      // MODULE$:Lorg/sireum/Json$ValueKind$Number$;
  #358 = Fieldref           #60.#357      // org/sireum/Json$ValueKind$Number$.MODULE$:Lorg/sireum/Json$ValueKind$Number$;
  #359 = NameAndType        #204:#192     // parseNumber$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #360 = Methodref          #2.#359       // org/sireum/Json$.parseNumber$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
  #361 = Utf8               scala/MatchError
  #362 = Class              #361          // scala/MatchError
  #363 = Utf8               (Ljava/lang/Object;)V
  #364 = NameAndType        #78:#363      // "<init>":(Ljava/lang/Object;)V
  #365 = Methodref          #362.#364     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #366 = Utf8               k
  #367 = Utf8               Lorg/sireum/Json$ValueKind$Type;
  #368 = Utf8               isSimple$2
  #369 = Utf8               (Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Z
  #370 = Utf8               o
  #371 = Utf8               binding$2
  #372 = Utf8               kind
  #373 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Json$ValueKind$Type;
  #374 = NameAndType        #372:#373     // kind:(Ljava/lang/Object;)Lorg/sireum/Json$ValueKind$Type;
  #375 = InterfaceMethodref #36.#374      // org/sireum/Json$JsonAstBinding.kind:(Ljava/lang/Object;)Lorg/sireum/Json$ValueKind$Type;
  #376 = Utf8               $anonfun$printAst$1
  #377 = Utf8               (Lorg/sireum/Json$JsonAstBinding;Lscala/Tuple2;)Lscala/Tuple2;
  #378 = Utf8               p
  #379 = Utf8               _1
  #380 = NameAndType        #379:#151     // _1:()Ljava/lang/Object;
  #381 = Methodref          #298.#380     // scala/Tuple2._1:()Ljava/lang/Object;
  #382 = NameAndType        #316:#196     // value:()Ljava/lang/String;
  #383 = Methodref          #300.#382     // org/sireum/String.value:()Ljava/lang/String;
  #384 = Utf8               _2
  #385 = NameAndType        #384:#151     // _2:()Ljava/lang/Object;
  #386 = Methodref          #298.#385     // scala/Tuple2._2:()Ljava/lang/Object;
  #387 = Utf8               Lscala/Tuple2;
  #388 = Utf8               $anonfun$printAst$2
  #389 = Utf8               (Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Z
  #390 = NameAndType        #368:#369     // isSimple$2:(Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Z
  #391 = Methodref          #2.#390       // org/sireum/Json$.isSimple$2:(Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Z
  #392 = Utf8               $anonfun$printAst$3
  #393 = Utf8               Lorg/sireum/Json$Printer$;
  #394 = NameAndType        #74:#393      // MODULE$:Lorg/sireum/Json$Printer$;
  #395 = Fieldref           #45.#394      // org/sireum/Json$Printer$.MODULE$:Lorg/sireum/Json$Printer$;
  #396 = Utf8               fromString
  #397 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #398 = NameAndType        #396:#397     // fromString:(Ljava/lang/Object;)Ljava/lang/String;
  #399 = InterfaceMethodref #36.#398      // org/sireum/Json$JsonAstBinding.fromString:(Ljava/lang/Object;)Ljava/lang/String;
  #400 = Utf8               printString
  #401 = Utf8               (Ljava/lang/String;)Lorg/sireum/ST;
  #402 = NameAndType        #400:#401     // printString:(Ljava/lang/String;)Lorg/sireum/ST;
  #403 = Methodref          #45.#402      // org/sireum/Json$Printer$.printString:(Ljava/lang/String;)Lorg/sireum/ST;
  #404 = Utf8               fromNumber
  #405 = NameAndType        #404:#397     // fromNumber:(Ljava/lang/Object;)Ljava/lang/String;
  #406 = InterfaceMethodref #36.#405      // org/sireum/Json$JsonAstBinding.fromNumber:(Ljava/lang/Object;)Ljava/lang/String;
  #407 = Utf8               printNumber
  #408 = NameAndType        #407:#401     // printNumber:(Ljava/lang/String;)Lorg/sireum/ST;
  #409 = Methodref          #45.#408      // org/sireum/Json$Printer$.printNumber:(Ljava/lang/String;)Lorg/sireum/ST;
  #410 = Utf8               fromObject
  #411 = NameAndType        #410:#280     // fromObject:(Ljava/lang/Object;)Lorg/sireum/IS;
  #412 = InterfaceMethodref #36.#411      // org/sireum/Json$JsonAstBinding.fromObject:(Ljava/lang/Object;)Lorg/sireum/IS;
  #413 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #414 = MethodType         #413          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #415 = NameAndType        #376:#377     // $anonfun$printAst$1:(Lorg/sireum/Json$JsonAstBinding;Lscala/Tuple2;)Lscala/Tuple2;
  #416 = Methodref          #2.#415       // org/sireum/Json$.$anonfun$printAst$1:(Lorg/sireum/Json$JsonAstBinding;Lscala/Tuple2;)Lscala/Tuple2;
  #417 = MethodHandle       6:#416        // REF_invokeStatic org/sireum/Json$.$anonfun$printAst$1:(Lorg/sireum/Json$JsonAstBinding;Lscala/Tuple2;)Lscala/Tuple2;
  #418 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
  #419 = MethodType         #418          //  (Lscala/Tuple2;)Lscala/Tuple2;
  #420 = Integer            5
  #421 = Integer            1
  #422 = Utf8               java/lang/invoke/LambdaMetafactory
  #423 = Class              #422          // java/lang/invoke/LambdaMetafactory
  #424 = Utf8               altMetafactory
  #425 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #426 = NameAndType        #424:#425     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #427 = Methodref          #423.#426     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #428 = MethodHandle       6:#427        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #429 = Utf8               (Lorg/sireum/Json$JsonAstBinding;)Lscala/Function1;
  #430 = NameAndType        #118:#429     // apply:(Lorg/sireum/Json$JsonAstBinding;)Lscala/Function1;
  #431 = InvokeDynamic      #0:#430       // #0:apply:(Lorg/sireum/Json$JsonAstBinding;)Lscala/Function1;
  #432 = Utf8               map
  #433 = Utf8               (Lscala/Function1;)Lorg/sireum/IS;
  #434 = NameAndType        #432:#433     // map:(Lscala/Function1;)Lorg/sireum/IS;
  #435 = Methodref          #180.#434     // org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
  #436 = Utf8               printObject
  #437 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/ST;
  #438 = NameAndType        #436:#437     // printObject:(Lorg/sireum/IS;)Lorg/sireum/ST;
  #439 = Methodref          #45.#438      // org/sireum/Json$Printer$.printObject:(Lorg/sireum/IS;)Lorg/sireum/ST;
  #440 = Utf8               fromArray
  #441 = NameAndType        #440:#280     // fromArray:(Ljava/lang/Object;)Lorg/sireum/IS;
  #442 = InterfaceMethodref #36.#441      // org/sireum/Json$JsonAstBinding.fromArray:(Ljava/lang/Object;)Lorg/sireum/IS;
  #443 = Utf8               org/sireum/ops/ISZOps$
  #444 = Class              #443          // org/sireum/ops/ISZOps$
  #445 = Utf8               Lorg/sireum/ops/ISZOps$;
  #446 = NameAndType        #74:#445      // MODULE$:Lorg/sireum/ops/ISZOps$;
  #447 = Fieldref           #444.#446     // org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
  #448 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #449 = NameAndType        #118:#448     // apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #450 = Methodref          #444.#449     // org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #451 = Utf8               $anonfun$printAst$2$adapted
  #452 = Utf8               (Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Ljava/lang/Object;
  #453 = NameAndType        #451:#452     // $anonfun$printAst$2$adapted:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Ljava/lang/Object;
  #454 = Methodref          #2.#453       // org/sireum/Json$.$anonfun$printAst$2$adapted:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Ljava/lang/Object;
  #455 = MethodHandle       6:#454        // REF_invokeStatic org/sireum/Json$.$anonfun$printAst$2$adapted:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Ljava/lang/Object;
  #456 = InvokeDynamic      #1:#430       // #1:apply:(Lorg/sireum/Json$JsonAstBinding;)Lscala/Function1;
  #457 = Utf8               org/sireum/ops/ISZOps
  #458 = Class              #457          // org/sireum/ops/ISZOps
  #459 = Utf8               forall
  #460 = Utf8               (Lscala/Function1;)Z
  #461 = NameAndType        #459:#460     // forall:(Lscala/Function1;)Z
  #462 = Methodref          #458.#461     // org/sireum/ops/ISZOps.forall:(Lscala/Function1;)Z
  #463 = NameAndType        #392:#184     // $anonfun$printAst$3:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Lorg/sireum/ST;
  #464 = Methodref          #2.#463       // org/sireum/Json$.$anonfun$printAst$3:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Lorg/sireum/ST;
  #465 = MethodHandle       6:#464        // REF_invokeStatic org/sireum/Json$.$anonfun$printAst$3:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Lorg/sireum/ST;
  #466 = Utf8               (Ljava/lang/Object;)Lorg/sireum/ST;
  #467 = MethodType         #466          //  (Ljava/lang/Object;)Lorg/sireum/ST;
  #468 = InvokeDynamic      #2:#430       // #2:apply:(Lorg/sireum/Json$JsonAstBinding;)Lscala/Function1;
  #469 = Utf8               printIS
  #470 = Utf8               (ZLorg/sireum/IS;)Lorg/sireum/ST;
  #471 = NameAndType        #469:#470     // printIS:(ZLorg/sireum/IS;)Lorg/sireum/ST;
  #472 = Methodref          #45.#471      // org/sireum/Json$Printer$.printIS:(ZLorg/sireum/IS;)Lorg/sireum/ST;
  #473 = Utf8               trueSt
  #474 = Utf8               ()Lorg/sireum/ST;
  #475 = NameAndType        #473:#474     // trueSt:()Lorg/sireum/ST;
  #476 = Methodref          #45.#475      // org/sireum/Json$Printer$.trueSt:()Lorg/sireum/ST;
  #477 = Utf8               falseSt
  #478 = NameAndType        #477:#474     // falseSt:()Lorg/sireum/ST;
  #479 = Methodref          #45.#478      // org/sireum/Json$Printer$.falseSt:()Lorg/sireum/ST;
  #480 = Utf8               nullSt
  #481 = NameAndType        #480:#474     // nullSt:()Lorg/sireum/ST;
  #482 = Methodref          #45.#481      // org/sireum/Json$Printer$.nullSt:()Lorg/sireum/ST;
  #483 = Utf8               es
  #484 = Methodref          #4.#79        // java/lang/Object."<init>":()V
  #485 = Utf8               org/sireum/B
  #486 = Class              #485          // org/sireum/B
  #487 = NameAndType        #388:#389     // $anonfun$printAst$2:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Z
  #488 = Methodref          #2.#487       // org/sireum/Json$.$anonfun$printAst$2:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Z
  #489 = Utf8               (Z)V
  #490 = NameAndType        #78:#489      // "<init>":(Z)V
  #491 = Methodref          #486.#490     // org/sireum/B."<init>":(Z)V
  #492 = Utf8               $deserializeLambda$
  #493 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #494 = Utf8               scala/runtime/LambdaDeserialize
  #495 = Class              #494          // scala/runtime/LambdaDeserialize
  #496 = Utf8               bootstrap
  #497 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #498 = NameAndType        #496:#497     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #499 = Methodref          #495.#498     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #500 = MethodHandle       6:#499        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #501 = Utf8               lambdaDeserialize
  #502 = NameAndType        #501:#493     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #503 = InvokeDynamic      #3:#502       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #504 = Utf8               Code
  #505 = Utf8               LineNumberTable
  #506 = Utf8               StackMapTable
  #507 = Utf8               LocalVariableTable
  #508 = Utf8               Signature
  #509 = Utf8               MethodParameters
  #510 = Utf8               InnerClasses
  #511 = Utf8               SourceFile
  #512 = Utf8               BootstrapMethods
  #513 = Utf8               ScalaInlineInfo
  #514 = Utf8               Scala
{
  public static final org.sireum.Json$ MODULE$;
    descriptor: Lorg/sireum/Json$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/Json$
         3: dup
         4: invokespecial #80                 // Method "<init>":()V
         7: putstatic     #82                 // Field MODULE$:Lorg/sireum/Json$;
        10: return
      LineNumberTable:
        line 48: 0

  public <T extends java.lang.Object> org.sireum.Either<T, org.sireum.Json$ErrorMsg> parseAst(org.sireum.Json$JsonAstBinding<T>, java.lang.String);
    descriptor: (Lorg/sireum/Json$JsonAstBinding;Ljava/lang/String;)Lorg/sireum/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=11, args_size=3
         0: getstatic     #92                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #95                 // Field org/sireum/Json$Parser$.MODULE$:Lorg/sireum/Json$Parser$;
         6: aload_2
         7: invokevirtual #99                 // Method org/sireum/Json$Parser$.create:(Ljava/lang/String;)Lorg/sireum/Json$Parser;
        10: invokevirtual #103                // Method org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        13: checkcast     #39                 // class org/sireum/Json$Parser
        16: astore        4
        18: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        21: invokevirtual #112                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        24: getstatic     #117                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        27: invokevirtual #121                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        30: astore        5
        32: aload         4
        34: aload_1
        35: aload         5
        37: invokestatic  #125                // Method parseValue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
        40: astore        6
        42: aload         4
        44: invokevirtual #129                // Method org/sireum/Json$Parser.eof:()Z
        47: pop
        48: aload         4
        50: invokevirtual #133                // Method org/sireum/Json$Parser.errorOpt:()Lorg/sireum/Option;
        53: astore        7
        55: aload         7
        57: instanceof    #135                // class org/sireum/Some
        60: ifeq          110
        63: aload         7
        65: checkcast     #135                // class org/sireum/Some
        68: astore        8
        70: getstatic     #140                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        73: aload         8
        75: invokevirtual #144                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        78: astore        9
        80: aload         9
        82: invokevirtual #149                // Method scala/Some.isEmpty:()Z
        85: ifne          107
        88: aload         9
        90: invokevirtual #153                // Method scala/Some.get:()Ljava/lang/Object;
        93: checkcast     #31                 // class org/sireum/Json$ErrorMsg
        96: astore        10
        98: getstatic     #156                // Field org/sireum/Either$Right$.MODULE$:Lorg/sireum/Either$Right$;
       101: aload         10
       103: invokevirtual #159                // Method org/sireum/Either$Right$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Right;
       106: areturn
       107: goto          113
       110: goto          113
       113: getstatic     #162                // Field org/sireum/Either$Left$.MODULE$:Lorg/sireum/Either$Left$;
       116: aload         6
       118: invokevirtual #165                // Method org/sireum/Either$Left$.apply:(Ljava/lang/Object;)Lorg/sireum/Either$Left;
       121: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 107
          locals = [ class org/sireum/Json$, class org/sireum/Json$JsonAstBinding, class java/lang/String, top, class org/sireum/Json$Parser, class org/sireum/IS, class java/lang/Object, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
      LineNumberTable:
        line 2299: 0
        line 2300: 18
        line 2374: 32
        line 2375: 42
        line 2376: 48
        line 2377: 55
        line 2376: 88
        line 2377: 98
        line 2378: 113
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           98       9    10     e   Lorg/sireum/Json$ErrorMsg;
           18     104     4 parser   Lorg/sireum/Json$Parser;
           32      90     5 emptyKeys   Lorg/sireum/IS;
           42      80     6     r   Ljava/lang/Object;
            0     122     0  this   Lorg/sireum/Json$;
            0     122     1 binding   Lorg/sireum/Json$JsonAstBinding;
            0     122     2 input   Ljava/lang/String;
    Signature: #85                          // <T:Ljava/lang/Object;>(Lorg/sireum/Json$JsonAstBinding<TT;>;Ljava/lang/String;)Lorg/sireum/Either<TT;Lorg/sireum/Json$ErrorMsg;>;
    MethodParameters:
      Name                           Flags
      binding                        final
      input                          final

  public <T extends java.lang.Object> org.sireum.ST printAst(org.sireum.Json$JsonAstBinding<T>, T);
    descriptor: (Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Lorg/sireum/ST;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_2
         1: aload_1
         2: invokestatic  #190                // Method printValue$1:(Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Lorg/sireum/ST;
         5: areturn
      LineNumberTable:
        line 2408: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Json$;
            0       6     1 binding   Lorg/sireum/Json$JsonAstBinding;
            0       6     2     v   Ljava/lang/Object;
    Signature: #185                         // <T:Ljava/lang/Object;>(Lorg/sireum/Json$JsonAstBinding<TT;>;TT;)Lorg/sireum/ST;
    MethodParameters:
      Name                           Flags
      binding                        final
      v                              final

  private static final java.lang.Object parseString$1(org.sireum.Json$Parser, org.sireum.Json$JsonAstBinding);
    descriptor: (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #198                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         4: astore_2
         5: aload_1
         6: aload_2
         7: invokeinterface #202,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.toString:(Ljava/lang/String;)Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 2303: 0
        line 2304: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       8     2     s   Ljava/lang/String;
            0      13     0 parser$1   Lorg/sireum/Json$Parser;
            0      13     1 binding$1   Lorg/sireum/Json$JsonAstBinding;
    MethodParameters:
      Name                           Flags
      parser$1                       final
      binding$1                      final

  private static final java.lang.Object parseNumber$1(org.sireum.Json$Parser, org.sireum.Json$JsonAstBinding);
    descriptor: (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #207                // Method org/sireum/Json$Parser.parseNumber:()Ljava/lang/String;
         4: astore_2
         5: aload_1
         6: aload_2
         7: invokeinterface #210,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.toNumber:(Ljava/lang/String;)Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 2308: 0
        line 2309: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       8     2     n   Ljava/lang/String;
            0      13     0 parser$1   Lorg/sireum/Json$Parser;
            0      13     1 binding$1   Lorg/sireum/Json$JsonAstBinding;
    MethodParameters:
      Name                           Flags
      parser$1                       final
      binding$1                      final

  private static final java.lang.Object parseTrue$1(org.sireum.Json$Parser, org.sireum.Json$JsonAstBinding);
    descriptor: (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #217                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         4: ldc           #219                // String true
         6: invokevirtual #222                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
         9: invokevirtual #226                // Method org/sireum/Json$Parser.parseConstant:(Ljava/lang/String;)V
        12: aload_1
        13: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        16: invokevirtual #229                // Method org/sireum/package$.T:()Z
        19: invokeinterface #233,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.toBoolean:(Z)Ljava/lang/Object;
        24: areturn
      LineNumberTable:
        line 2313: 0
        line 2314: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 parser$1   Lorg/sireum/Json$Parser;
            0      25     1 binding$1   Lorg/sireum/Json$JsonAstBinding;
    MethodParameters:
      Name                           Flags
      parser$1                       final
      binding$1                      final

  private static final java.lang.Object parseFalse$1(org.sireum.Json$Parser, org.sireum.Json$JsonAstBinding);
    descriptor: (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #217                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         4: ldc           #236                // String false
         6: invokevirtual #222                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
         9: invokevirtual #226                // Method org/sireum/Json$Parser.parseConstant:(Ljava/lang/String;)V
        12: aload_1
        13: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        16: invokevirtual #239                // Method org/sireum/package$.F:()Z
        19: invokeinterface #233,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.toBoolean:(Z)Ljava/lang/Object;
        24: areturn
      LineNumberTable:
        line 2318: 0
        line 2319: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 parser$1   Lorg/sireum/Json$Parser;
            0      25     1 binding$1   Lorg/sireum/Json$JsonAstBinding;
    MethodParameters:
      Name                           Flags
      parser$1                       final
      binding$1                      final

  private static final java.lang.Object parseNull$1(org.sireum.Json$Parser, org.sireum.Json$JsonAstBinding);
    descriptor: (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #217                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         4: ldc           #242                // String null
         6: invokevirtual #222                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
         9: invokevirtual #226                // Method org/sireum/Json$Parser.parseConstant:(Ljava/lang/String;)V
        12: aload_1
        13: invokeinterface #245,  1          // InterfaceMethod org/sireum/Json$JsonAstBinding.toNull:()Ljava/lang/Object;
        18: areturn
      LineNumberTable:
        line 2323: 0
        line 2324: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 parser$1   Lorg/sireum/Json$Parser;
            0      19     1 binding$1   Lorg/sireum/Json$JsonAstBinding;
    MethodParameters:
      Name                           Flags
      parser$1                       final
      binding$1                      final

  private static final java.lang.Object parseArray$1(org.sireum.Json$Parser, org.sireum.Json$JsonAstBinding, org.sireum.IS);
    descriptor: (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=6, locals=6, args_size=3
         0: aload_0
         1: invokevirtual #250                // Method org/sireum/Json$Parser.parseArrayBegin:()Z
         4: istore_3
         5: getstatic     #255                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         8: getstatic     #255                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: iload_3
        12: invokevirtual #259                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        15: invokevirtual #262                // Method org/sireum/B$.$4B:(Z)Z
        18: ifeq          40
        21: aload_1
        22: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        25: invokevirtual #112                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        28: getstatic     #117                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        31: invokevirtual #121                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        34: invokeinterface #266,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.toArray:(Lorg/sireum/IS;)Ljava/lang/Object;
        39: areturn
        40: aload_0
        41: aload_1
        42: aload_2
        43: invokestatic  #125                // Method parseValue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
        46: astore        4
        48: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        51: invokevirtual #112                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        54: getstatic     #271                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        57: iconst_1
        58: anewarray     #4                  // class java/lang/Object
        61: dup
        62: iconst_0
        63: aload         4
        65: aastore
        66: invokevirtual #275                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        69: invokevirtual #121                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        72: astore        5
        74: aload_0
        75: invokevirtual #278                // Method org/sireum/Json$Parser.parseArrayNext:()Z
        78: istore_3
        79: getstatic     #255                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        82: iload_3
        83: invokevirtual #262                // Method org/sireum/B$.$4B:(Z)Z
        86: ifeq          114
        89: aload_0
        90: aload_1
        91: aload_2
        92: invokestatic  #125                // Method parseValue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
        95: astore        4
        97: aload         5
        99: aload         4
       101: invokevirtual #282                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       104: astore        5
       106: aload_0
       107: invokevirtual #278                // Method org/sireum/Json$Parser.parseArrayNext:()Z
       110: istore_3
       111: goto          79
       114: aload_1
       115: aload         5
       117: invokeinterface #266,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.toArray:(Lorg/sireum/IS;)Ljava/lang/Object;
       122: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 40
          locals = [ int ]
        frame_type = 253 /* append */
          offset_delta = 38
          locals = [ class java/lang/Object, class org/sireum/IS ]
        frame_type = 34 /* same */
      LineNumberTable:
        line 2328: 0
        line 2329: 5
        line 2330: 21
        line 2332: 40
        line 2333: 48
        line 2334: 74
        line 2335: 79
        line 2336: 89
        line 2337: 97
        line 2338: 106
        line 2335: 111
        line 2340: 114
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5     118     3 continue   Z
           48      75     4     v   Ljava/lang/Object;
           74      49     5 values   Lorg/sireum/IS;
            0     123     0 parser$1   Lorg/sireum/Json$Parser;
            0     123     1 binding$1   Lorg/sireum/Json$JsonAstBinding;
            0     123     2 emptyKeys$1   Lorg/sireum/IS;
    MethodParameters:
      Name                           Flags
      parser$1                       final
      binding$1                      final
      emptyKeys$1                    final

  private static final java.lang.Object parseObject$1(org.sireum.Json$Parser, org.sireum.Json$JsonAstBinding, org.sireum.IS);
    descriptor: (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=10, locals=7, args_size=3
         0: aload_0
         1: invokevirtual #289                // Method org/sireum/Json$Parser.parseObjectBegin:()Z
         4: istore_3
         5: getstatic     #255                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         8: getstatic     #255                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: iload_3
        12: invokevirtual #259                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        15: invokevirtual #262                // Method org/sireum/B$.$4B:(Z)Z
        18: ifeq          40
        21: aload_1
        22: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        25: invokevirtual #112                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        28: getstatic     #117                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        31: invokevirtual #121                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        34: invokeinterface #292,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.toObject:(Lorg/sireum/IS;)Ljava/lang/Object;
        39: areturn
        40: aload_0
        41: aload_2
        42: invokevirtual #296                // Method org/sireum/Json$Parser.parseObjectKeys:(Lorg/sireum/IS;)Ljava/lang/String;
        45: astore        4
        47: aload_0
        48: aload_1
        49: aload_2
        50: invokestatic  #125                // Method parseValue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
        53: astore        5
        55: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        58: invokevirtual #112                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        61: getstatic     #271                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        64: iconst_1
        65: anewarray     #298                // class scala/Tuple2
        68: dup
        69: iconst_0
        70: new           #298                // class scala/Tuple2
        73: dup
        74: new           #300                // class org/sireum/String
        77: dup
        78: aload         4
        80: invokespecial #302                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        83: aload         5
        85: invokespecial #305                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        88: aastore
        89: checkcast     #307                // class "[Ljava/lang/Object;"
        92: invokevirtual #311                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        95: invokevirtual #121                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        98: astore        6
       100: aload_0
       101: invokevirtual #314                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       104: istore_3
       105: getstatic     #255                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       108: iload_3
       109: invokevirtual #262                // Method org/sireum/B$.$4B:(Z)Z
       112: ifeq          163
       115: aload_0
       116: aload_2
       117: invokevirtual #296                // Method org/sireum/Json$Parser.parseObjectKeys:(Lorg/sireum/IS;)Ljava/lang/String;
       120: astore        4
       122: aload_0
       123: aload_1
       124: aload_2
       125: invokestatic  #125                // Method parseValue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
       128: astore        5
       130: aload         6
       132: new           #298                // class scala/Tuple2
       135: dup
       136: new           #300                // class org/sireum/String
       139: dup
       140: aload         4
       142: invokespecial #302                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       145: aload         5
       147: invokespecial #305                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       150: invokevirtual #282                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       153: astore        6
       155: aload_0
       156: invokevirtual #314                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       159: istore_3
       160: goto          105
       163: aload_1
       164: aload         6
       166: invokeinterface #292,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.toObject:(Lorg/sireum/IS;)Ljava/lang/Object;
       171: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 40
          locals = [ int ]
        frame_type = 254 /* append */
          offset_delta = 64
          locals = [ class java/lang/String, class java/lang/Object, class org/sireum/IS ]
        frame_type = 57 /* same */
      LineNumberTable:
        line 2344: 0
        line 2345: 5
        line 2346: 21
        line 2348: 40
        line 2349: 47
        line 2350: 55
        line 2351: 100
        line 2352: 105
        line 2353: 115
        line 2354: 122
        line 2355: 130
        line 2356: 155
        line 2352: 160
        line 2358: 163
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5     167     3 continue   Z
           47     125     4   key   Ljava/lang/String;
           55     117     5 value   Ljava/lang/Object;
          100      72     6 fields   Lorg/sireum/IS;
            0     172     0 parser$1   Lorg/sireum/Json$Parser;
            0     172     1 binding$1   Lorg/sireum/Json$JsonAstBinding;
            0     172     2 emptyKeys$1   Lorg/sireum/IS;
    MethodParameters:
      Name                           Flags
      parser$1                       final
      binding$1                      final
      emptyKeys$1                    final

  private static final java.lang.Object parseValue$1(org.sireum.Json$Parser, org.sireum.Json$JsonAstBinding, org.sireum.IS);
    descriptor: (Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=13, args_size=3
         0: aload_0
         1: invokevirtual #321                // Method org/sireum/Json$Parser.detect:()Lorg/sireum/Json$ValueKind$Type;
         4: astore        4
         6: aload         4
         8: astore        5
        10: getstatic     #324                // Field org/sireum/Json$ValueKind$String$.MODULE$:Lorg/sireum/Json$ValueKind$String$;
        13: aload         5
        15: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        18: ifeq          31
        21: aload_0
        22: aload_1
        23: invokestatic  #330                // Method parseString$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
        26: astore        6
        28: aload         6
        30: areturn
        31: goto          34
        34: getstatic     #333                // Field org/sireum/Json$ValueKind$Object$.MODULE$:Lorg/sireum/Json$ValueKind$Object$;
        37: aload         5
        39: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        42: ifeq          56
        45: aload_0
        46: aload_1
        47: aload_2
        48: invokestatic  #335                // Method parseObject$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
        51: astore        7
        53: aload         7
        55: areturn
        56: goto          59
        59: getstatic     #338                // Field org/sireum/Json$ValueKind$Array$.MODULE$:Lorg/sireum/Json$ValueKind$Array$;
        62: aload         5
        64: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        67: ifeq          81
        70: aload_0
        71: aload_1
        72: aload_2
        73: invokestatic  #340                // Method parseArray$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;Lorg/sireum/IS;)Ljava/lang/Object;
        76: astore        8
        78: aload         8
        80: areturn
        81: goto          84
        84: getstatic     #343                // Field org/sireum/Json$ValueKind$True$.MODULE$:Lorg/sireum/Json$ValueKind$True$;
        87: aload         5
        89: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        92: ifeq          105
        95: aload_0
        96: aload_1
        97: invokestatic  #345                // Method parseTrue$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
       100: astore        9
       102: aload         9
       104: areturn
       105: goto          108
       108: getstatic     #348                // Field org/sireum/Json$ValueKind$False$.MODULE$:Lorg/sireum/Json$ValueKind$False$;
       111: aload         5
       113: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          129
       119: aload_0
       120: aload_1
       121: invokestatic  #350                // Method parseFalse$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
       124: astore        10
       126: aload         10
       128: areturn
       129: goto          132
       132: getstatic     #353                // Field org/sireum/Json$ValueKind$Null$.MODULE$:Lorg/sireum/Json$ValueKind$Null$;
       135: aload         5
       137: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       140: ifeq          153
       143: aload_0
       144: aload_1
       145: invokestatic  #355                // Method parseNull$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
       148: astore        11
       150: aload         11
       152: areturn
       153: goto          156
       156: getstatic     #358                // Field org/sireum/Json$ValueKind$Number$.MODULE$:Lorg/sireum/Json$ValueKind$Number$;
       159: aload         5
       161: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       164: ifeq          177
       167: aload_0
       168: aload_1
       169: invokestatic  #360                // Method parseNumber$1:(Lorg/sireum/Json$Parser;Lorg/sireum/Json$JsonAstBinding;)Ljava/lang/Object;
       172: astore        12
       174: aload         12
       176: areturn
       177: goto          180
       180: new           #362                // class scala/MatchError
       183: dup
       184: aload         5
       186: invokespecial #365                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       189: athrow
      StackMapTable: number_of_entries = 14
        frame_type = 254 /* append */
          offset_delta = 31
          locals = [ top, class org/sireum/Json$ValueKind$Type, class org/sireum/Json$ValueKind$Type ]
        frame_type = 2 /* same */
        frame_type = 21 /* same */
        frame_type = 2 /* same */
        frame_type = 21 /* same */
        frame_type = 2 /* same */
        frame_type = 20 /* same */
        frame_type = 2 /* same */
        frame_type = 20 /* same */
        frame_type = 2 /* same */
        frame_type = 20 /* same */
        frame_type = 2 /* same */
        frame_type = 20 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 2362: 0
        line 2363: 6
        line 2364: 10
        line 2365: 34
        line 2366: 59
        line 2367: 84
        line 2368: 108
        line 2369: 132
        line 2370: 156
        line 2363: 180
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           28       3     6     r   Ljava/lang/Object;
           53       3     7     r   Ljava/lang/Object;
           78       3     8     r   Ljava/lang/Object;
          102       3     9     r   Ljava/lang/Object;
          126       3    10     r   Ljava/lang/Object;
          150       3    11     r   Ljava/lang/Object;
          174       3    12     r   Ljava/lang/Object;
            6     184     4     k   Lorg/sireum/Json$ValueKind$Type;
            0     190     0 parser$1   Lorg/sireum/Json$Parser;
            0     190     1 binding$1   Lorg/sireum/Json$JsonAstBinding;
            0     190     2 emptyKeys$1   Lorg/sireum/IS;
    MethodParameters:
      Name                           Flags
      parser$1                       final
      binding$1                      final
      emptyKeys$1                    final

  private static final boolean isSimple$2(java.lang.Object, org.sireum.Json$JsonAstBinding);
    descriptor: (Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=4, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #375,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.kind:(Ljava/lang/Object;)Lorg/sireum/Json$ValueKind$Type;
         7: astore_3
         8: getstatic     #333                // Field org/sireum/Json$ValueKind$Object$.MODULE$:Lorg/sireum/Json$ValueKind$Object$;
        11: aload_3
        12: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        15: ifeq          25
        18: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        21: invokevirtual #239                // Method org/sireum/package$.F:()Z
        24: ireturn
        25: goto          28
        28: getstatic     #338                // Field org/sireum/Json$ValueKind$Array$.MODULE$:Lorg/sireum/Json$ValueKind$Array$;
        31: aload_3
        32: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        35: ifeq          45
        38: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        41: invokevirtual #239                // Method org/sireum/package$.F:()Z
        44: ireturn
        45: goto          48
        48: getstatic     #108                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        51: invokevirtual #229                // Method org/sireum/package$.T:()Z
        54: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class org/sireum/Json$ValueKind$Type ]
        frame_type = 2 /* same */
        frame_type = 16 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 2384: 0
        line 2385: 8
        line 2386: 28
        line 2387: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0     o   Ljava/lang/Object;
            0      55     1 binding$2   Lorg/sireum/Json$JsonAstBinding;
    MethodParameters:
      Name                           Flags
      o                              final
      binding$2                      final

  public static final scala.Tuple2 $anonfun$printAst$1(org.sireum.Json$JsonAstBinding, scala.Tuple2);
    descriptor: (Lorg/sireum/Json$JsonAstBinding;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #298                // class scala/Tuple2
         3: dup
         4: new           #300                // class org/sireum/String
         7: dup
         8: aload_1
         9: invokevirtual #381                // Method scala/Tuple2._1:()Ljava/lang/Object;
        12: checkcast     #300                // class org/sireum/String
        15: invokevirtual #383                // Method org/sireum/String.value:()Ljava/lang/String;
        18: invokespecial #302                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        21: aload_1
        22: invokevirtual #386                // Method scala/Tuple2._2:()Ljava/lang/Object;
        25: aload_0
        26: invokestatic  #190                // Method printValue$1:(Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Lorg/sireum/ST;
        29: invokespecial #305                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        32: areturn
      LineNumberTable:
        line 2398: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0 binding$2   Lorg/sireum/Json$JsonAstBinding;
            0      33     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      binding$2                      final
      p                              final

  public static final boolean $anonfun$printAst$2(org.sireum.Json$JsonAstBinding, java.lang.Object);
    descriptor: (Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokestatic  #391                // Method isSimple$2:(Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Z
         5: ireturn
      LineNumberTable:
        line 2401: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 binding$2   Lorg/sireum/Json$JsonAstBinding;
            0       6     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      binding$2                      final
      o                              final

  public static final org.sireum.ST $anonfun$printAst$3(org.sireum.Json$JsonAstBinding, java.lang.Object);
    descriptor: (Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Lorg/sireum/ST;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokestatic  #190                // Method printValue$1:(Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Lorg/sireum/ST;
         5: areturn
      LineNumberTable:
        line 2401: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 binding$2   Lorg/sireum/Json$JsonAstBinding;
            0       6     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      binding$2                      final
      o                              final

  private static final org.sireum.ST printValue$1(java.lang.Object, org.sireum.Json$JsonAstBinding);
    descriptor: (Ljava/lang/Object;Lorg/sireum/Json$JsonAstBinding;)Lorg/sireum/ST;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #375,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.kind:(Ljava/lang/Object;)Lorg/sireum/Json$ValueKind$Type;
         7: astore_3
         8: getstatic     #324                // Field org/sireum/Json$ValueKind$String$.MODULE$:Lorg/sireum/Json$ValueKind$String$;
        11: aload_3
        12: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        15: ifeq          32
        18: getstatic     #395                // Field org/sireum/Json$Printer$.MODULE$:Lorg/sireum/Json$Printer$;
        21: aload_1
        22: aload_0
        23: invokeinterface #399,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.fromString:(Ljava/lang/Object;)Ljava/lang/String;
        28: invokevirtual #403                // Method org/sireum/Json$Printer$.printString:(Ljava/lang/String;)Lorg/sireum/ST;
        31: areturn
        32: goto          35
        35: getstatic     #358                // Field org/sireum/Json$ValueKind$Number$.MODULE$:Lorg/sireum/Json$ValueKind$Number$;
        38: aload_3
        39: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        42: ifeq          59
        45: getstatic     #395                // Field org/sireum/Json$Printer$.MODULE$:Lorg/sireum/Json$Printer$;
        48: aload_1
        49: aload_0
        50: invokeinterface #406,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.fromNumber:(Ljava/lang/Object;)Ljava/lang/String;
        55: invokevirtual #409                // Method org/sireum/Json$Printer$.printNumber:(Ljava/lang/String;)Lorg/sireum/ST;
        58: areturn
        59: goto          62
        62: getstatic     #333                // Field org/sireum/Json$ValueKind$Object$.MODULE$:Lorg/sireum/Json$ValueKind$Object$;
        65: aload_3
        66: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        69: ifeq          95
        72: getstatic     #395                // Field org/sireum/Json$Printer$.MODULE$:Lorg/sireum/Json$Printer$;
        75: aload_1
        76: aload_0
        77: invokeinterface #412,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.fromObject:(Ljava/lang/Object;)Lorg/sireum/IS;
        82: aload_1
        83: invokedynamic #431,  0            // InvokeDynamic #0:apply:(Lorg/sireum/Json$JsonAstBinding;)Lscala/Function1;
        88: invokevirtual #435                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        91: invokevirtual #439                // Method org/sireum/Json$Printer$.printObject:(Lorg/sireum/IS;)Lorg/sireum/ST;
        94: areturn
        95: goto          98
        98: getstatic     #338                // Field org/sireum/Json$ValueKind$Array$.MODULE$:Lorg/sireum/Json$ValueKind$Array$;
       101: aload_3
       102: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       105: ifeq          152
       108: aload_1
       109: aload_0
       110: invokeinterface #442,  2          // InterfaceMethod org/sireum/Json$JsonAstBinding.fromArray:(Ljava/lang/Object;)Lorg/sireum/IS;
       115: astore        4
       117: getstatic     #395                // Field org/sireum/Json$Printer$.MODULE$:Lorg/sireum/Json$Printer$;
       120: getstatic     #447                // Field org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
       123: aload         4
       125: invokevirtual #450                // Method org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
       128: aload_1
       129: invokedynamic #456,  0            // InvokeDynamic #1:apply:(Lorg/sireum/Json$JsonAstBinding;)Lscala/Function1;
       134: invokevirtual #462                // Method org/sireum/ops/ISZOps.forall:(Lscala/Function1;)Z
       137: aload         4
       139: aload_1
       140: invokedynamic #468,  0            // InvokeDynamic #2:apply:(Lorg/sireum/Json$JsonAstBinding;)Lscala/Function1;
       145: invokevirtual #435                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
       148: invokevirtual #472                // Method org/sireum/Json$Printer$.printIS:(ZLorg/sireum/IS;)Lorg/sireum/ST;
       151: areturn
       152: goto          155
       155: getstatic     #343                // Field org/sireum/Json$ValueKind$True$.MODULE$:Lorg/sireum/Json$ValueKind$True$;
       158: aload_3
       159: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       162: ifeq          172
       165: getstatic     #395                // Field org/sireum/Json$Printer$.MODULE$:Lorg/sireum/Json$Printer$;
       168: invokevirtual #476                // Method org/sireum/Json$Printer$.trueSt:()Lorg/sireum/ST;
       171: areturn
       172: goto          175
       175: getstatic     #348                // Field org/sireum/Json$ValueKind$False$.MODULE$:Lorg/sireum/Json$ValueKind$False$;
       178: aload_3
       179: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       182: ifeq          192
       185: getstatic     #395                // Field org/sireum/Json$Printer$.MODULE$:Lorg/sireum/Json$Printer$;
       188: invokevirtual #479                // Method org/sireum/Json$Printer$.falseSt:()Lorg/sireum/ST;
       191: areturn
       192: goto          195
       195: getstatic     #353                // Field org/sireum/Json$ValueKind$Null$.MODULE$:Lorg/sireum/Json$ValueKind$Null$;
       198: aload_3
       199: invokevirtual #328                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       202: ifeq          212
       205: getstatic     #395                // Field org/sireum/Json$Printer$.MODULE$:Lorg/sireum/Json$Printer$;
       208: invokevirtual #482                // Method org/sireum/Json$Printer$.nullSt:()Lorg/sireum/ST;
       211: areturn
       212: goto          215
       215: new           #362                // class scala/MatchError
       218: dup
       219: aload_3
       220: invokespecial #365                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       223: athrow
      StackMapTable: number_of_entries = 14
        frame_type = 253 /* append */
          offset_delta = 32
          locals = [ top, class org/sireum/Json$ValueKind$Type ]
        frame_type = 2 /* same */
        frame_type = 23 /* same */
        frame_type = 2 /* same */
        frame_type = 32 /* same */
        frame_type = 2 /* same */
        frame_type = 53 /* same */
        frame_type = 2 /* same */
        frame_type = 16 /* same */
        frame_type = 2 /* same */
        frame_type = 16 /* same */
        frame_type = 2 /* same */
        frame_type = 16 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 2392: 0
        line 2393: 8
        line 2394: 18
        line 2393: 32
        line 2395: 35
        line 2396: 45
        line 2395: 59
        line 2397: 62
        line 2398: 72
        line 2397: 95
        line 2399: 98
        line 2400: 108
        line 2401: 117
        line 2399: 152
        line 2402: 155
        line 2403: 175
        line 2404: 195
        line 2392: 215
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          117      35     4    es   Lorg/sireum/IS;
            0     224     0     o   Ljava/lang/Object;
            0     224     1 binding$2   Lorg/sireum/Json$JsonAstBinding;
    MethodParameters:
      Name                           Flags
      o                              final
      binding$2                      final

  private org.sireum.Json$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #484                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$;

  public static final java.lang.Object $anonfun$printAst$2$adapted(org.sireum.Json$JsonAstBinding, java.lang.Object);
    descriptor: (Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #486                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: invokestatic  #488                // Method $anonfun$printAst$2:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Z
         9: invokespecial #491                // Method org/sireum/B."<init>":(Z)V
        12: areturn
      LineNumberTable:
        line 2401: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 binding$2   Lorg/sireum/Json$JsonAstBinding;
            0      13     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      binding$2                      final
      o                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #503,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static final #20= #17 of #19;    // Left=class org/sireum/Either$Left of class org/sireum/Either
  public static #23= #22 of #19;          // Left$=class org/sireum/Either$Left$ of class org/sireum/Either
  public static final #26= #25 of #19;    // Right=class org/sireum/Either$Right of class org/sireum/Either
  public static #29= #28 of #19;          // Right$=class org/sireum/Either$Right$ of class org/sireum/Either
  public static final #34= #31 of #33;    // ErrorMsg=class org/sireum/Json$ErrorMsg of class org/sireum/Json
  public static #37= #36 of #33;          // JsonAstBinding=class org/sireum/Json$JsonAstBinding of class org/sireum/Json
  public static final #40= #39 of #33;    // Parser=class org/sireum/Json$Parser of class org/sireum/Json
  public static #43= #42 of #33;          // Parser$=class org/sireum/Json$Parser$ of class org/sireum/Json
  public static #46= #45 of #33;          // Printer$=class org/sireum/Json$Printer$ of class org/sireum/Json
  public static #49= #48 of #33;          // ValueKind$=class org/sireum/Json$ValueKind$ of class org/sireum/Json
  public static final #52= #51 of #48;    // Array$=class org/sireum/Json$ValueKind$Array$ of class org/sireum/Json$ValueKind$
  public static final #55= #54 of #48;    // False$=class org/sireum/Json$ValueKind$False$ of class org/sireum/Json$ValueKind$
  public static final #58= #57 of #48;    // Null$=class org/sireum/Json$ValueKind$Null$ of class org/sireum/Json$ValueKind$
  public static final #61= #60 of #48;    // Number$=class org/sireum/Json$ValueKind$Number$ of class org/sireum/Json$ValueKind$
  public static final #64= #63 of #48;    // Object$=class org/sireum/Json$ValueKind$Object$ of class org/sireum/Json$ValueKind$
  public static final #67= #66 of #48;    // String$=class org/sireum/Json$ValueKind$String$ of class org/sireum/Json$ValueKind$
  public static final #70= #69 of #48;    // True$=class org/sireum/Json$ValueKind$True$ of class org/sireum/Json$ValueKind$
  public static #73= #72 of #48;          // Type=class org/sireum/Json$ValueKind$Type of class org/sireum/Json$ValueKind$
SourceFile: "Json.scala"
BootstrapMethods:
  0: #428 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #414 (Ljava/lang/Object;)Ljava/lang/Object;
      #417 REF_invokeStatic org/sireum/Json$.$anonfun$printAst$1:(Lorg/sireum/Json$JsonAstBinding;Lscala/Tuple2;)Lscala/Tuple2;
      #419 (Lscala/Tuple2;)Lscala/Tuple2;
      #420 5
      #421 1
      #419 (Lscala/Tuple2;)Lscala/Tuple2;
  1: #428 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #414 (Ljava/lang/Object;)Ljava/lang/Object;
      #455 REF_invokeStatic org/sireum/Json$.$anonfun$printAst$2$adapted:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Ljava/lang/Object;
      #414 (Ljava/lang/Object;)Ljava/lang/Object;
      #421 1
  2: #428 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #414 (Ljava/lang/Object;)Ljava/lang/Object;
      #465 REF_invokeStatic org/sireum/Json$.$anonfun$printAst$3:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Lorg/sireum/ST;
      #467 (Ljava/lang/Object;)Lorg/sireum/ST;
      #420 5
      #421 1
      #467 (Ljava/lang/Object;)Lorg/sireum/ST;
  3: #500 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #417 REF_invokeStatic org/sireum/Json$.$anonfun$printAst$1:(Lorg/sireum/Json$JsonAstBinding;Lscala/Tuple2;)Lscala/Tuple2;
      #455 REF_invokeStatic org/sireum/Json$.$anonfun$printAst$2$adapted:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Ljava/lang/Object;
      #465 REF_invokeStatic org/sireum/Json$.$anonfun$printAst$3:(Lorg/sireum/Json$JsonAstBinding;Ljava/lang/Object;)Lorg/sireum/ST;
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 01 00 11 01 78 01 79 01 01 84 01 85 01 01 C3
   01 C4 01 01 88 00 B8 01 00 4E 00 4D 01 01 70 01
   71 01 00 F6 00 7B 01 00 53 00 54 01 00 EA 00 C0
   01 00 F0 00 C0 01 00 CC 00 C0 01 01 1E 00 7B 01
   00 BF 00 C0 01 00 D4 00 C0 01 00 7A 00 7B 01 00
   B7 00 B8 01 00 BB 00 BC 01
  Scala: length = 0x0 (unknown attribute)

