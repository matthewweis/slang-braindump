Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/ops/Bits$Context.class
  Last modified May 29, 2022; size 7979 bytes
  SHA-256 checksum 2b0fc04d9339e18b0ee189fa1b6f6c6ea8719dc68e1b805f3fbd3e39ebe5f5cb
  Compiled from "Bits.scala"
public final class org.sireum.ops.Bits$Context implements org.sireum.RecordSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/ops/Bits$Context
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 4, methods: 38, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/ops/Bits$Context
    #2 = Class              #1            // org/sireum/ops/Bits$Context
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/RecordSig
    #6 = Class              #5            // org/sireum/RecordSig
    #7 = Utf8               Bits.scala
    #8 = Utf8               org/sireum/ops/Bits
    #9 = Class              #8            // org/sireum/ops/Bits
   #10 = Utf8               Context
   #11 = Utf8               _offset
   #12 = Utf8               Lorg/sireum/Z;
   #13 = Utf8               _errorCode
   #14 = Utf8               _errorOffset
   #15 = Utf8               org$sireum$RecordSig$$$isOwned
   #16 = Utf8               Z
   #17 = Utf8               $owned
   #18 = Utf8               ()Z
   #19 = Utf8               $owned$
   #20 = Utf8               (Lorg/sireum/RecordSig;)Z
   #21 = NameAndType        #19:#20       // $owned$:(Lorg/sireum/RecordSig;)Z
   #22 = InterfaceMethodref #6.#21        // org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
   #23 = Utf8               this
   #24 = Utf8               Lorg/sireum/ops/Bits$Context;
   #25 = Utf8               $owned_$eq
   #26 = Utf8               (Z)Lorg/sireum/RecordSig;
   #27 = Utf8               b
   #28 = Utf8               $owned_$eq$
   #29 = Utf8               (Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #30 = NameAndType        #28:#29       // $owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #31 = InterfaceMethodref #6.#30        // org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #32 = Utf8               hash
   #33 = Utf8               ()Lorg/sireum/Z;
   #34 = Utf8               hash$
   #35 = Utf8               (Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #36 = NameAndType        #34:#35       // hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #37 = InterfaceMethodref #6.#36        // org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #38 = Utf8               $cannotMixImmutableAndMutable
   #39 = Utf8               ()Lscala/runtime/Nothing$;
   #40 = Utf8               org/sireum/Mutable
   #41 = Class              #40           // org/sireum/Mutable
   #42 = Utf8               $cannotMixImmutableAndMutable$
   #43 = Utf8               (Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #44 = NameAndType        #42:#43       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #45 = InterfaceMethodref #41.#44       // org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #46 = Utf8               $hasEquals
   #47 = Utf8               $hasEquals$
   #48 = Utf8               (Lorg/sireum/Mutable;)Z
   #49 = NameAndType        #47:#48       // $hasEquals$:(Lorg/sireum/Mutable;)Z
   #50 = InterfaceMethodref #41.#49       // org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
   #51 = Utf8               $hasString
   #52 = Utf8               $hasString$
   #53 = NameAndType        #52:#48       // $hasString$:(Lorg/sireum/Mutable;)Z
   #54 = InterfaceMethodref #41.#53       // org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
   #55 = NameAndType        #15:#16       // org$sireum$RecordSig$$$isOwned:Z
   #56 = Fieldref           #2.#55        // org/sireum/ops/Bits$Context.org$sireum$RecordSig$$$isOwned:Z
   #57 = Utf8               org$sireum$RecordSig$$$isOwned_$eq
   #58 = Utf8               (Z)V
   #59 = Utf8               x$1
   #60 = Utf8               offset
   #61 = NameAndType        #11:#12       // _offset:Lorg/sireum/Z;
   #62 = Fieldref           #2.#61        // org/sireum/ops/Bits$Context._offset:Lorg/sireum/Z;
   #63 = Utf8               getOffset
   #64 = Utf8               offset_$eq
   #65 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
   #66 = Utf8               setOffset
   #67 = Utf8               errorCode
   #68 = NameAndType        #13:#12       // _errorCode:Lorg/sireum/Z;
   #69 = Fieldref           #2.#68        // org/sireum/ops/Bits$Context._errorCode:Lorg/sireum/Z;
   #70 = Utf8               getErrorCode
   #71 = Utf8               errorCode_$eq
   #72 = Utf8               setErrorCode
   #73 = Utf8               errorOffset
   #74 = NameAndType        #14:#12       // _errorOffset:Lorg/sireum/Z;
   #75 = Fieldref           #2.#74        // org/sireum/ops/Bits$Context._errorOffset:Lorg/sireum/Z;
   #76 = Utf8               getErrorOffset
   #77 = Utf8               errorOffset_$eq
   #78 = Utf8               setErrorOffset
   #79 = Utf8               toString
   #80 = Utf8               ()Ljava/lang/String;
   #81 = NameAndType        #51:#18       // $hasString:()Z
   #82 = Methodref          #2.#81        // org/sireum/ops/Bits$Context.$hasString:()Z
   #83 = Utf8               string$
   #84 = Utf8               (Lorg/sireum/RecordSig;)Ljava/lang/String;
   #85 = NameAndType        #83:#84       // string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
   #86 = InterfaceMethodref #6.#85        // org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
   #87 = Utf8               java/lang/StringBuilder
   #88 = Class              #87           // java/lang/StringBuilder
   #89 = Utf8               <init>
   #90 = Utf8               ()V
   #91 = NameAndType        #89:#90       // "<init>":()V
   #92 = Methodref          #88.#91       // java/lang/StringBuilder."<init>":()V
   #93 = String             #10           // Context
   #94 = Utf8               append
   #95 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #96 = NameAndType        #94:#95       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #97 = Methodref          #88.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #98 = Utf8               (C)Ljava/lang/StringBuilder;
   #99 = NameAndType        #94:#98       // append:(C)Ljava/lang/StringBuilder;
  #100 = Methodref          #88.#99       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #101 = Utf8               org/sireum/String$
  #102 = Class              #101          // org/sireum/String$
  #103 = Utf8               MODULE$
  #104 = Utf8               Lorg/sireum/String$;
  #105 = NameAndType        #103:#104     // MODULE$:Lorg/sireum/String$;
  #106 = Fieldref           #102.#105     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #107 = NameAndType        #60:#33       // offset:()Lorg/sireum/Z;
  #108 = Methodref          #2.#107       // org/sireum/ops/Bits$Context.offset:()Lorg/sireum/Z;
  #109 = Utf8               escape
  #110 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #111 = NameAndType        #109:#110     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #112 = Methodref          #102.#111     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #113 = Utf8               ,
  #114 = String             #113          // ,
  #115 = NameAndType        #67:#33       // errorCode:()Lorg/sireum/Z;
  #116 = Methodref          #2.#115       // org/sireum/ops/Bits$Context.errorCode:()Lorg/sireum/Z;
  #117 = NameAndType        #73:#33       // errorOffset:()Lorg/sireum/Z;
  #118 = Methodref          #2.#117       // org/sireum/ops/Bits$Context.errorOffset:()Lorg/sireum/Z;
  #119 = NameAndType        #79:#80       // toString:()Ljava/lang/String;
  #120 = Methodref          #88.#119      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #121 = Utf8               sb
  #122 = Utf8               Ljava/lang/StringBuilder;
  #123 = Utf8               java/lang/String
  #124 = Class              #123          // java/lang/String
  #125 = Utf8               string
  #126 = Methodref          #2.#119       // org/sireum/ops/Bits$Context.toString:()Ljava/lang/String;
  #127 = Utf8               apply
  #128 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #129 = NameAndType        #127:#128     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #130 = Methodref          #102.#129     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #131 = Utf8               hashCode
  #132 = Utf8               ()I
  #133 = NameAndType        #46:#18       // $hasEquals:()Z
  #134 = Methodref          #2.#133       // org/sireum/ops/Bits$Context.$hasEquals:()Z
  #135 = NameAndType        #131:#132     // hashCode:()I
  #136 = Methodref          #4.#135       // java/lang/Object.hashCode:()I
  #137 = Utf8               scala/package$
  #138 = Class              #137          // scala/package$
  #139 = Utf8               Lscala/package$;
  #140 = NameAndType        #103:#139     // MODULE$:Lscala/package$;
  #141 = Fieldref           #138.#140     // scala/package$.MODULE$:Lscala/package$;
  #142 = Utf8               Seq
  #143 = Utf8               ()Lscala/collection/immutable/Seq$;
  #144 = NameAndType        #142:#143     // Seq:()Lscala/collection/immutable/Seq$;
  #145 = Methodref          #138.#144     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #146 = Utf8               scala/runtime/ScalaRunTime$
  #147 = Class              #146          // scala/runtime/ScalaRunTime$
  #148 = Utf8               Lscala/runtime/ScalaRunTime$;
  #149 = NameAndType        #103:#148     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #150 = Fieldref           #147.#149     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #151 = Utf8               getClass
  #152 = Utf8               ()Ljava/lang/Class;
  #153 = NameAndType        #151:#152     // getClass:()Ljava/lang/Class;
  #154 = Methodref          #2.#153       // org/sireum/ops/Bits$Context.getClass:()Ljava/lang/Class;
  #155 = Utf8               java/lang/Class
  #156 = Class              #155          // java/lang/Class
  #157 = Utf8               getName
  #158 = NameAndType        #157:#80      // getName:()Ljava/lang/String;
  #159 = Methodref          #156.#158     // java/lang/Class.getName:()Ljava/lang/String;
  #160 = Utf8               wrapRefArray
  #161 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #162 = NameAndType        #160:#161     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #163 = Methodref          #147.#162     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #164 = Utf8               scala/collection/immutable/Seq$
  #165 = Class              #164          // scala/collection/immutable/Seq$
  #166 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #167 = NameAndType        #127:#166     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #168 = Methodref          #165.#167     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #169 = Utf8               scala/collection/Seq
  #170 = Class              #169          // scala/collection/Seq
  #171 = InterfaceMethodref #170.#135     // scala/collection/Seq.hashCode:()I
  #172 = Utf8               equals
  #173 = Utf8               (Ljava/lang/Object;)Z
  #174 = Utf8               o
  #175 = NameAndType        #172:#173     // equals:(Ljava/lang/Object;)Z
  #176 = Methodref          #4.#175       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #177 = Methodref          #2.#135       // org/sireum/ops/Bits$Context.hashCode:()I
  #178 = Utf8               Ljava/lang/Object;
  #179 = Utf8               org/sireum/Z
  #180 = Class              #179          // org/sireum/Z
  #181 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
  #182 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #183 = NameAndType        #89:#182      // "<init>":(Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #184 = Methodref          #2.#183       // org/sireum/ops/Bits$Context."<init>":(Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)V
  #185 = Utf8               apply$default$1
  #186 = Utf8               apply$default$2
  #187 = Utf8               apply$default$3
  #188 = Utf8               $content
  #189 = Utf8               ()Lscala/collection/immutable/Seq;
  #190 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #191 = Utf8               scala/Tuple2
  #192 = Class              #191          // scala/Tuple2
  #193 = Utf8               type
  #194 = String             #193          // type
  #195 = Utf8               List
  #196 = Utf8               ()Lscala/collection/immutable/List$;
  #197 = NameAndType        #195:#196     // List:()Lscala/collection/immutable/List$;
  #198 = Methodref          #138.#197     // scala/package$.List:()Lscala/collection/immutable/List$;
  #199 = Utf8               org
  #200 = String             #199          // org
  #201 = Utf8               sireum
  #202 = String             #201          // sireum
  #203 = Utf8               ops
  #204 = String             #203          // ops
  #205 = Utf8               [Ljava/lang/Object;
  #206 = Class              #205          // "[Ljava/lang/Object;"
  #207 = Utf8               scala/collection/immutable/List$
  #208 = Class              #207          // scala/collection/immutable/List$
  #209 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #210 = NameAndType        #127:#209     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #211 = Methodref          #208.#210     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #212 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #213 = NameAndType        #89:#212      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #214 = Methodref          #192.#213     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #215 = String             #60           // offset
  #216 = String             #67           // errorCode
  #217 = String             #73           // errorOffset
  #218 = Utf8               scala/collection/immutable/Seq
  #219 = Class              #218          // scala/collection/immutable/Seq
  #220 = Utf8               $clone
  #221 = Utf8               ()Lorg/sireum/ops/Bits$Context;
  #222 = Utf8               org/sireum/helper$
  #223 = Class              #222          // org/sireum/helper$
  #224 = Utf8               Lorg/sireum/helper$;
  #225 = NameAndType        #103:#224     // MODULE$:Lorg/sireum/helper$;
  #226 = Fieldref           #223.#225     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #227 = Utf8               cloneAssign
  #228 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #229 = NameAndType        #227:#228     // cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #230 = Methodref          #223.#229     // org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #231 = Utf8               r
  #232 = Utf8               hasError
  #233 = Utf8               org/sireum/B$
  #234 = Class              #233          // org/sireum/B$
  #235 = Utf8               Lorg/sireum/B$;
  #236 = NameAndType        #103:#235     // MODULE$:Lorg/sireum/B$;
  #237 = Fieldref           #234.#236     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #238 = Utf8               org/sireum/Z$
  #239 = Class              #238          // org/sireum/Z$
  #240 = Utf8               Lorg/sireum/Z$;
  #241 = NameAndType        #103:#240     // MODULE$:Lorg/sireum/Z$;
  #242 = Fieldref           #239.#241     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #243 = Utf8               (I)Lorg/sireum/Z;
  #244 = NameAndType        #127:#243     // apply:(I)Lorg/sireum/Z;
  #245 = Methodref          #239.#244     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #246 = Utf8               (Z)Z
  #247 = NameAndType        #127:#246     // apply:(Z)Z
  #248 = Methodref          #234.#247     // org/sireum/B$.apply:(Z)Z
  #249 = Utf8               signalError
  #250 = Utf8               (Lorg/sireum/Z;)V
  #251 = Utf8               code
  #252 = NameAndType        #232:#18      // hasError:()Z
  #253 = Methodref          #2.#252       // org/sireum/ops/Bits$Context.hasError:()Z
  #254 = Utf8               unary_$bang$extension
  #255 = NameAndType        #254:#246     // unary_$bang$extension:(Z)Z
  #256 = Methodref          #234.#255     // org/sireum/B$.unary_$bang$extension:(Z)Z
  #257 = Utf8               $4B
  #258 = NameAndType        #257:#246     // $4B:(Z)Z
  #259 = Methodref          #234.#258     // org/sireum/B$.$4B:(Z)Z
  #260 = NameAndType        #71:#65       // errorCode_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
  #261 = Methodref          #2.#260       // org/sireum/ops/Bits$Context.errorCode_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
  #262 = NameAndType        #77:#65       // errorOffset_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
  #263 = Methodref          #2.#262       // org/sireum/ops/Bits$Context.errorOffset_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
  #264 = Utf8               skip
  #265 = Utf8               size
  #266 = Utf8               n
  #267 = Utf8               $plus
  #268 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #269 = NameAndType        #267:#268     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #270 = InterfaceMethodref #180.#269     // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #271 = Utf8               $greater
  #272 = Utf8               (Lorg/sireum/Z;)Z
  #273 = NameAndType        #271:#272     // $greater:(Lorg/sireum/Z;)Z
  #274 = InterfaceMethodref #180.#273     // org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
  #275 = NameAndType        #249:#250     // signalError:(Lorg/sireum/Z;)V
  #276 = Methodref          #2.#275       // org/sireum/ops/Bits$Context.signalError:(Lorg/sireum/Z;)V
  #277 = NameAndType        #64:#65       // offset_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
  #278 = Methodref          #2.#277       // org/sireum/ops/Bits$Context.offset_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
  #279 = Utf8               updateErrorCode
  #280 = Utf8               (Z)Lorg/sireum/$internal/MutableMarker;
  #281 = NameAndType        #25:#26       // $owned_$eq:(Z)Lorg/sireum/RecordSig;
  #282 = Methodref          #2.#281       // org/sireum/ops/Bits$Context.$owned_$eq:(Z)Lorg/sireum/RecordSig;
  #283 = Utf8               ()Ljava/lang/Object;
  #284 = NameAndType        #220:#221     // $clone:()Lorg/sireum/ops/Bits$Context;
  #285 = Methodref          #2.#284       // org/sireum/ops/Bits$Context.$clone:()Lorg/sireum/ops/Bits$Context;
  #286 = Utf8               ()Lorg/sireum/$internal/MutableMarker;
  #287 = Utf8               __offset
  #288 = Utf8               __errorCode
  #289 = Utf8               __errorOffset
  #290 = Methodref          #4.#91        // java/lang/Object."<init>":()V
  #291 = Utf8               $init$
  #292 = Utf8               (Lorg/sireum/Mutable;)V
  #293 = NameAndType        #291:#292     // $init$:(Lorg/sireum/Mutable;)V
  #294 = InterfaceMethodref #41.#293      // org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
  #295 = Utf8               (Lorg/sireum/RecordSig;)V
  #296 = NameAndType        #291:#295     // $init$:(Lorg/sireum/RecordSig;)V
  #297 = InterfaceMethodref #6.#296       // org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
  #298 = Utf8               Code
  #299 = Utf8               LineNumberTable
  #300 = Utf8               LocalVariableTable
  #301 = Utf8               MethodParameters
  #302 = Utf8               StackMapTable
  #303 = Utf8               Signature
  #304 = Utf8               InnerClasses
  #305 = Utf8               SourceFile
  #306 = Utf8               ScalaInlineInfo
  #307 = Utf8               Scala
{
  private org.sireum.Z _offset;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.Z _errorCode;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.Z _errorOffset;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private boolean org$sireum$RecordSig$$$isOwned;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public final boolean $owned();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #22                 // InterfaceMethod org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
         4: ireturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public final org.sireum.RecordSig $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/RecordSig;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #31                 // InterfaceMethod org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/ops/Bits$Context;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #37                 // InterfaceMethod org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #45                 // InterfaceMethod org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #50                 // InterfaceMethod org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #54                 // InterfaceMethod org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public boolean org$sireum$RecordSig$$$isOwned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field org$sireum$RecordSig$$$isOwned:Z
         4: ireturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public void org$sireum$RecordSig$$$isOwned_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #56                 // Field org$sireum$RecordSig$$$isOwned:Z
         5: return
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/ops/Bits$Context;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.sireum.Z offset();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #62                 // Field _offset:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.Z getOffset();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #62                 // Field _offset:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.ops.Bits$Context offset_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #62                 // Field _offset:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/ops/Bits$Context;
            0       7     1 offset   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      offset                         final

  public org.sireum.ops.Bits$Context setOffset(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #62                 // Field _offset:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/ops/Bits$Context;
            0       7     1 offset   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      offset                         final

  public org.sireum.Z errorCode();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #69                 // Field _errorCode:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.Z getErrorCode();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #69                 // Field _errorCode:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.ops.Bits$Context errorCode_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #69                 // Field _errorCode:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/ops/Bits$Context;
            0       7     1 errorCode   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      errorCode                      final

  public org.sireum.ops.Bits$Context setErrorCode(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #69                 // Field _errorCode:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/ops/Bits$Context;
            0       7     1 errorCode   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      errorCode                      final

  public org.sireum.Z errorOffset();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #75                 // Field _errorOffset:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.Z getErrorOffset();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #75                 // Field _errorOffset:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.ops.Bits$Context errorOffset_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #75                 // Field _errorOffset:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/ops/Bits$Context;
            0       7     1 errorOffset   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      errorOffset                    final

  public org.sireum.ops.Bits$Context setErrorOffset(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #75                 // Field _errorOffset:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/ops/Bits$Context;
            0       7     1 errorOffset   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      errorOffset                    final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #82                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #86                 // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          106
        14: new           #88                 // class java/lang/StringBuilder
        17: dup
        18: invokespecial #92                 // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #93                 // String Context
        25: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #100                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #106                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
        44: invokevirtual #112                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #114                // String ,
        54: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #106                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: aload_0
        63: invokevirtual #116                // Method errorCode:()Lorg/sireum/Z;
        66: invokevirtual #112                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        69: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        72: pop
        73: aload_1
        74: ldc           #114                // String ,
        76: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: getstatic     #106                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        84: aload_0
        85: invokevirtual #118                // Method errorOffset:()Lorg/sireum/Z;
        88: invokevirtual #112                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        91: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        94: pop
        95: aload_1
        96: bipush        41
        98: invokevirtual #100                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       101: pop
       102: aload_1
       103: invokevirtual #120                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       106: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 91
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      84     1    sb   Ljava/lang/StringBuilder;
            0     107     0  this   Lorg/sireum/ops/Bits$Context;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #82                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #86                 // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #106                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #126                // Method toString:()Ljava/lang/String;
        21: invokevirtual #130                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/ops/Bits$Context;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #134                // Method $hasEquals:()Z
         4: ifeq          14
         7: aload_0
         8: invokespecial #136                // Method java/lang/Object.hashCode:()I
        11: goto          72
        14: getstatic     #141                // Field scala/package$.MODULE$:Lscala/package$;
        17: invokevirtual #145                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        20: getstatic     #150                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        23: iconst_4
        24: anewarray     #4                  // class java/lang/Object
        27: dup
        28: iconst_0
        29: aload_0
        30: invokevirtual #154                // Method getClass:()Ljava/lang/Class;
        33: invokevirtual #159                // Method java/lang/Class.getName:()Ljava/lang/String;
        36: aastore
        37: dup
        38: iconst_1
        39: aload_0
        40: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
        43: aastore
        44: dup
        45: iconst_2
        46: aload_0
        47: invokevirtual #116                // Method errorCode:()Lorg/sireum/Z;
        50: aastore
        51: dup
        52: iconst_3
        53: aload_0
        54: invokevirtual #118                // Method errorOffset:()Lorg/sireum/Z;
        57: aastore
        58: invokevirtual #163                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        61: invokevirtual #168                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        64: checkcast     #170                // class scala/collection/Seq
        67: invokeinterface #171,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        72: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 121 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      73     0  this   Lorg/sireum/ops/Bits$Context;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=2
         0: aload_0
         1: invokevirtual #134                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          169
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          169
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/ops/Bits$Context
        30: ifeq          160
        33: aload_3
        34: checkcast     #2                  // class org/sireum/ops/Bits$Context
        37: astore        4
        39: aload_0
        40: invokevirtual #177                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #177                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          156
        55: aload_0
        56: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
        59: aload         4
        61: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          155
        79: aload         5
        81: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          155
        87: aload_0
        88: invokevirtual #116                // Method errorCode:()Lorg/sireum/Z;
        91: aload         4
        93: invokevirtual #116                // Method errorCode:()Lorg/sireum/Z;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          155
       111: aload         6
       113: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          155
       119: aload_0
       120: invokevirtual #118                // Method errorOffset:()Lorg/sireum/Z;
       123: aload         4
       125: invokevirtual #118                // Method errorOffset:()Lorg/sireum/Z;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          155
       143: aload         7
       145: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          155
       151: iconst_1
       152: goto          156
       155: iconst_0
       156: istore_2
       157: goto          168
       160: goto          163
       163: iconst_0
       164: istore_2
       165: goto          168
       168: iload_2
       169: ireturn
      StackMapTable: number_of_entries = 15
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/ops/Bits$Context ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/ops/Bits$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/ops/Bits$Context, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/ops/Bits$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/ops/Bits$Context, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/ops/Bits$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/ops/Bits$Context, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ops/Bits$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/ops/Bits$Context ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/ops/Bits$Context, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ops/Bits$Context, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     170     0  this   Lorg/sireum/ops/Bits$Context;
            0     170     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.ops.Bits$Context apply(org.sireum.Z, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #2                  // class org/sireum/ops/Bits$Context
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokespecial #184                // Method "<init>":(Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)V
        10: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/ops/Bits$Context;
            0      11     1 offset   Lorg/sireum/Z;
            0      11     2 errorCode   Lorg/sireum/Z;
            0      11     3 errorOffset   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      offset                         final
      errorCode                      final
      errorOffset                    final

  public org.sireum.Z apply$default$1();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.Z apply$default$2();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #116                // Method errorCode:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.Z apply$default$3();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #118                // Method errorOffset:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=1, args_size=1
         0: getstatic     #141                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #145                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         6: getstatic     #150                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: iconst_4
        10: anewarray     #192                // class scala/Tuple2
        13: dup
        14: iconst_0
        15: new           #192                // class scala/Tuple2
        18: dup
        19: ldc           #194                // String type
        21: getstatic     #141                // Field scala/package$.MODULE$:Lscala/package$;
        24: invokevirtual #198                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        27: getstatic     #150                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        30: iconst_4
        31: anewarray     #124                // class java/lang/String
        34: dup
        35: iconst_0
        36: ldc           #200                // String org
        38: aastore
        39: dup
        40: iconst_1
        41: ldc           #202                // String sireum
        43: aastore
        44: dup
        45: iconst_2
        46: ldc           #204                // String ops
        48: aastore
        49: dup
        50: iconst_3
        51: ldc           #93                 // String Context
        53: aastore
        54: checkcast     #206                // class "[Ljava/lang/Object;"
        57: invokevirtual #163                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        60: invokevirtual #211                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        63: invokespecial #214                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        66: aastore
        67: dup
        68: iconst_1
        69: new           #192                // class scala/Tuple2
        72: dup
        73: ldc           #215                // String offset
        75: aload_0
        76: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
        79: invokespecial #214                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        82: aastore
        83: dup
        84: iconst_2
        85: new           #192                // class scala/Tuple2
        88: dup
        89: ldc           #216                // String errorCode
        91: aload_0
        92: invokevirtual #116                // Method errorCode:()Lorg/sireum/Z;
        95: invokespecial #214                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        98: aastore
        99: dup
       100: iconst_3
       101: new           #192                // class scala/Tuple2
       104: dup
       105: ldc           #217                // String errorOffset
       107: aload_0
       108: invokevirtual #118                // Method errorOffset:()Lorg/sireum/Z;
       111: invokespecial #214                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       114: aastore
       115: checkcast     #206                // class "[Ljava/lang/Object;"
       118: invokevirtual #163                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       121: invokevirtual #168                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       124: checkcast     #219                // class scala/collection/immutable/Seq
       127: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     128     0  this   Lorg/sireum/ops/Bits$Context;
    Signature: #190                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.ops.Bits$Context $clone();
    descriptor: ()Lorg/sireum/ops/Bits$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=1
         0: new           #2                  // class org/sireum/ops/Bits$Context
         3: dup
         4: getstatic     #226                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         7: aload_0
         8: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
        11: invokevirtual #230                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        14: checkcast     #180                // class org/sireum/Z
        17: getstatic     #226                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        20: aload_0
        21: invokevirtual #116                // Method errorCode:()Lorg/sireum/Z;
        24: invokevirtual #230                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        27: checkcast     #180                // class org/sireum/Z
        30: getstatic     #226                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        33: aload_0
        34: invokevirtual #118                // Method errorOffset:()Lorg/sireum/Z;
        37: invokevirtual #230                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        40: checkcast     #180                // class org/sireum/Z
        43: invokespecial #184                // Method "<init>":(Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)V
        46: astore_1
        47: aload_1
        48: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           47       1     1     r   Lorg/sireum/ops/Bits$Context;
            0      49     0  this   Lorg/sireum/ops/Bits$Context;

  public boolean hasError();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #237                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #116                // Method errorCode:()Lorg/sireum/Z;
         7: getstatic     #242                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        10: iconst_0
        11: invokevirtual #245                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        14: astore_1
        15: dup
        16: ifnonnull     27
        19: pop
        20: aload_1
        21: ifnull        38
        24: goto          34
        27: aload_1
        28: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        31: ifne          38
        34: iconst_1
        35: goto          39
        38: iconst_0
        39: invokevirtual #248                // Method org/sireum/B$.apply:(Z)Z
        42: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class org/sireum/ops/Bits$Context, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ops/Bits$Context, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/sireum/ops/Bits$Context;

  public void signalError(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #237                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #237                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: aload_0
         7: invokevirtual #253                // Method hasError:()Z
        10: invokevirtual #256                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        13: invokevirtual #259                // Method org/sireum/B$.$4B:(Z)Z
        16: ifeq          37
        19: aload_0
        20: aload_1
        21: invokevirtual #261                // Method errorCode_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
        24: pop
        25: aload_0
        26: aload_0
        27: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
        30: invokevirtual #263                // Method errorOffset_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
        33: pop
        34: goto          37
        37: return
      StackMapTable: number_of_entries = 1
        frame_type = 37 /* same */
      LineNumberTable:
        line 112: 0
        line 113: 19
        line 114: 25
        line 112: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Lorg/sireum/ops/Bits$Context;
            0      38     1  code   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      code                           final

  public void skip(org.sireum.Z, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: getstatic     #237                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
         7: aload_2
         8: invokeinterface #270,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        13: aload_1
        14: invokeinterface #274,  2          // InterfaceMethod org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
        19: invokevirtual #259                // Method org/sireum/B$.$4B:(Z)Z
        22: ifeq          31
        25: aload_0
        26: aload_3
        27: invokevirtual #276                // Method signalError:(Lorg/sireum/Z;)V
        30: return
        31: aload_0
        32: aload_0
        33: invokevirtual #108                // Method offset:()Lorg/sireum/Z;
        36: aload_2
        37: invokeinterface #270,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        42: invokevirtual #278                // Method offset_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
        45: pop
        46: return
      StackMapTable: number_of_entries = 1
        frame_type = 31 /* same */
      LineNumberTable:
        line 119: 0
        line 120: 25
        line 121: 30
        line 123: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/sireum/ops/Bits$Context;
            0      47     1  size   Lorg/sireum/Z;
            0      47     2     n   Lorg/sireum/Z;
            0      47     3 errorCode   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      size                           final
      n                              final
      errorCode                      final

  public void updateErrorCode(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #261                // Method errorCode_$eq:(Lorg/sireum/Z;)Lorg/sireum/ops/Bits$Context;
         5: pop
         6: return
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/ops/Bits$Context;
            0       7     1  code   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      code                           final

  public final org.sireum.$internal.MutableMarker $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/$internal/MutableMarker;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #282                // Method $owned_$eq:(Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/ops/Bits$Context;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #285                // Method $clone:()Lorg/sireum/ops/Bits$Context;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.$internal.MutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/MutableMarker;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #285                // Method $clone:()Lorg/sireum/ops/Bits$Context;
         4: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$Context;

  public org.sireum.ops.Bits$Context(org.sireum.Z, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: invokespecial #290                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #294                // InterfaceMethod org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
         8: aload_0
         9: invokestatic  #297                // InterfaceMethod org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
        12: aload_0
        13: aload_1
        14: putfield      #62                 // Field _offset:Lorg/sireum/Z;
        17: aload_0
        18: aload_2
        19: putfield      #69                 // Field _errorCode:Lorg/sireum/Z;
        22: aload_0
        23: aload_3
        24: putfield      #75                 // Field _errorOffset:Lorg/sireum/Z;
        27: return
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lorg/sireum/ops/Bits$Context;
            0      28     1 __offset   Lorg/sireum/Z;
            0      28     2 __errorCode   Lorg/sireum/Z;
            0      28     3 __errorOffset   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      __offset                       final
      __errorCode                    final
      __errorOffset                  final
}
InnerClasses:
  public static final #10= #2 of #9;      // Context=class org/sireum/ops/Bits$Context of class org/sireum/ops/Bits
SourceFile: "Bits.scala"
  ScalaInlineInfo: length = 0xC2 (unknown attribute)
   01 01 00 26 00 26 00 27 01 00 DC 01 1B 01 00 DC
   01 1E 01 00 DC 00 DD 01 00 BC 00 BD 01 00 2E 00
   12 01 00 33 00 12 01 00 11 00 12 01 00 19 01 18
   01 00 19 00 1A 01 00 59 00 B6 01 00 7F 00 B5 01
   00 B9 00 21 01 00 BA 00 21 01 00 BB 00 21 01 00
   AC 00 AD 01 00 43 00 21 01 00 47 00 41 01 00 49
   00 21 01 00 4D 00 41 01 00 46 00 21 01 00 4C 00
   21 01 00 3F 00 21 01 00 E8 00 12 01 00 20 00 21
   01 00 83 00 84 01 00 3C 00 21 01 00 40 00 41 01
   00 0F 00 12 01 00 39 00 3A 01 00 48 00 41 01 00
   4E 00 41 01 00 42 00 41 01 00 F9 00 FA 01 01 08
   00 B6 01 00 7D 00 50 01 00 4F 00 50 01 01 17 00
   FA 01
  Scala: length = 0x0 (unknown attribute)

