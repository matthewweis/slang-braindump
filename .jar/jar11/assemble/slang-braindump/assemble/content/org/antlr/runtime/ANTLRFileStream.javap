Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/antlr/runtime/ANTLRFileStream.class
  Last modified May 29, 2022; size 1453 bytes
  SHA-256 checksum 3e7fbf6537ca691ae7d13309f02f728600eb6c45720bb6f57a18c3fae16ba693
  Compiled from "ANTLRFileStream.java"
public class org.antlr.runtime.ANTLRFileStream extends org.antlr.runtime.ANTLRStringStream
  minor version: 0
  major version: 49
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #17                         // org/antlr/runtime/ANTLRFileStream
  super_class: #18                        // org/antlr/runtime/ANTLRStringStream
  interfaces: 0, fields: 1, methods: 4, attributes: 1
Constant pool:
   #1 = Methodref          #17.#45        // org/antlr/runtime/ANTLRFileStream."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   #2 = Methodref          #18.#46        // org/antlr/runtime/ANTLRStringStream."<init>":()V
   #3 = Fieldref           #17.#47        // org/antlr/runtime/ANTLRFileStream.fileName:Ljava/lang/String;
   #4 = Methodref          #17.#48        // org/antlr/runtime/ANTLRFileStream.load:(Ljava/lang/String;Ljava/lang/String;)V
   #5 = Class              #49            // java/io/File
   #6 = Methodref          #5.#50         // java/io/File."<init>":(Ljava/lang/String;)V
   #7 = Methodref          #5.#51         // java/io/File.length:()J
   #8 = Class              #52            // java/io/FileInputStream
   #9 = Methodref          #8.#50         // java/io/FileInputStream."<init>":(Ljava/lang/String;)V
  #10 = Class              #53            // java/io/InputStreamReader
  #11 = Methodref          #10.#54        // java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
  #12 = Methodref          #10.#55        // java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
  #13 = Fieldref           #17.#56        // org/antlr/runtime/ANTLRFileStream.data:[C
  #14 = Methodref          #10.#57        // java/io/InputStreamReader.read:([C)I
  #15 = Fieldref           #18.#58        // org/antlr/runtime/ANTLRStringStream.n:I
  #16 = Methodref          #10.#59        // java/io/InputStreamReader.close:()V
  #17 = Class              #60            // org/antlr/runtime/ANTLRFileStream
  #18 = Class              #61            // org/antlr/runtime/ANTLRStringStream
  #19 = Utf8               fileName
  #20 = Utf8               Ljava/lang/String;
  #21 = Utf8               <init>
  #22 = Utf8               (Ljava/lang/String;)V
  #23 = Utf8               Code
  #24 = Utf8               LineNumberTable
  #25 = Utf8               LocalVariableTable
  #26 = Utf8               this
  #27 = Utf8               Lorg/antlr/runtime/ANTLRFileStream;
  #28 = Utf8               Exceptions
  #29 = Class              #62            // java/io/IOException
  #30 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #31 = Utf8               encoding
  #32 = Utf8               load
  #33 = Utf8               isr
  #34 = Utf8               Ljava/io/InputStreamReader;
  #35 = Utf8               f
  #36 = Utf8               Ljava/io/File;
  #37 = Utf8               size
  #38 = Utf8               I
  #39 = Utf8               fis
  #40 = Utf8               Ljava/io/FileInputStream;
  #41 = Utf8               getSourceName
  #42 = Utf8               ()Ljava/lang/String;
  #43 = Utf8               SourceFile
  #44 = Utf8               ANTLRFileStream.java
  #45 = NameAndType        #21:#30        // "<init>":(Ljava/lang/String;Ljava/lang/String;)V
  #46 = NameAndType        #21:#63        // "<init>":()V
  #47 = NameAndType        #19:#20        // fileName:Ljava/lang/String;
  #48 = NameAndType        #32:#30        // load:(Ljava/lang/String;Ljava/lang/String;)V
  #49 = Utf8               java/io/File
  #50 = NameAndType        #21:#22        // "<init>":(Ljava/lang/String;)V
  #51 = NameAndType        #64:#65        // length:()J
  #52 = Utf8               java/io/FileInputStream
  #53 = Utf8               java/io/InputStreamReader
  #54 = NameAndType        #21:#66        // "<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
  #55 = NameAndType        #21:#67        // "<init>":(Ljava/io/InputStream;)V
  #56 = NameAndType        #68:#69        // data:[C
  #57 = NameAndType        #70:#71        // read:([C)I
  #58 = NameAndType        #72:#38        // n:I
  #59 = NameAndType        #73:#63        // close:()V
  #60 = Utf8               org/antlr/runtime/ANTLRFileStream
  #61 = Utf8               org/antlr/runtime/ANTLRStringStream
  #62 = Utf8               java/io/IOException
  #63 = Utf8               ()V
  #64 = Utf8               length
  #65 = Utf8               ()J
  #66 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V
  #67 = Utf8               (Ljava/io/InputStream;)V
  #68 = Utf8               data
  #69 = Utf8               [C
  #70 = Utf8               read
  #71 = Utf8               ([C)I
  #72 = Utf8               n
  #73 = Utf8               close
{
  protected java.lang.String fileName;
    descriptor: Ljava/lang/String;
    flags: (0x0004) ACC_PROTECTED

  public org.antlr.runtime.ANTLRFileStream(java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: aconst_null
         3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
         6: return
      LineNumberTable:
        line 42: 0
        line 43: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/antlr/runtime/ANTLRFileStream;
            0       7     1 fileName   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  public org.antlr.runtime.ANTLRFileStream(java.lang.String, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #2                  // Method org/antlr/runtime/ANTLRStringStream."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #3                  // Field fileName:Ljava/lang/String;
         9: aload_0
        10: aload_1
        11: aload_2
        12: invokevirtual #4                  // Method load:(Ljava/lang/String;Ljava/lang/String;)V
        15: return
      LineNumberTable:
        line 45: 0
        line 46: 4
        line 47: 9
        line 48: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/antlr/runtime/ANTLRFileStream;
            0      16     1 fileName   Ljava/lang/String;
            0      16     2 encoding   Ljava/lang/String;
    Exceptions:
      throws java.io.IOException

  public void load(java.lang.String, java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=8, args_size=3
         0: aload_1
         1: ifnonnull     5
         4: return
         5: new           #5                  // class java/io/File
         8: dup
         9: aload_1
        10: invokespecial #6                  // Method java/io/File."<init>":(Ljava/lang/String;)V
        13: astore_3
        14: aload_3
        15: invokevirtual #7                  // Method java/io/File.length:()J
        18: l2i
        19: istore        4
        21: new           #8                  // class java/io/FileInputStream
        24: dup
        25: aload_1
        26: invokespecial #9                  // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
        29: astore        6
        31: aload_2
        32: ifnull        50
        35: new           #10                 // class java/io/InputStreamReader
        38: dup
        39: aload         6
        41: aload_2
        42: invokespecial #11                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
        45: astore        5
        47: goto          61
        50: new           #10                 // class java/io/InputStreamReader
        53: dup
        54: aload         6
        56: invokespecial #12                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
        59: astore        5
        61: aload_0
        62: iload         4
        64: newarray       char
        66: putfield      #13                 // Field data:[C
        69: aload_0
        70: aload         5
        72: aload_0
        73: getfield      #13                 // Field data:[C
        76: invokevirtual #14                 // Method java/io/InputStreamReader.read:([C)I
        79: putfield      #15                 // Field org/antlr/runtime/ANTLRStringStream.n:I
        82: aload         5
        84: invokevirtual #16                 // Method java/io/InputStreamReader.close:()V
        87: goto          100
        90: astore        7
        92: aload         5
        94: invokevirtual #16                 // Method java/io/InputStreamReader.close:()V
        97: aload         7
        99: athrow
       100: return
      Exception table:
         from    to  target type
            61    82    90   any
            90    92    90   any
      LineNumberTable:
        line 53: 0
        line 54: 4
        line 56: 5
        line 57: 14
        line 59: 21
        line 60: 31
        line 61: 35
        line 64: 50
        line 67: 61
        line 68: 69
        line 71: 82
        line 72: 87
        line 71: 90
        line 73: 100
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           47       3     5   isr   Ljava/io/InputStreamReader;
            0     101     0  this   Lorg/antlr/runtime/ANTLRFileStream;
            0     101     1 fileName   Ljava/lang/String;
            0     101     2 encoding   Ljava/lang/String;
           14      87     3     f   Ljava/io/File;
           21      80     4  size   I
           61      40     5   isr   Ljava/io/InputStreamReader;
           31      70     6   fis   Ljava/io/FileInputStream;
    Exceptions:
      throws java.io.IOException

  public java.lang.String getSourceName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field fileName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/antlr/runtime/ANTLRFileStream;
}
SourceFile: "ANTLRFileStream.java"
