Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/parser/Antlr3Util$Adaptor.class
  Last modified May 29, 2022; size 14507 bytes
  SHA-256 checksum bdc627189ab4e36fcb39ce08b9dc5c26060ece283b83f746c350238821f79901
  Compiled from "Antlr3Util.scala"
public final class org.sireum.parser.Antlr3Util$Adaptor implements org.antlr.runtime.tree.TreeAdaptor
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/parser/Antlr3Util$Adaptor
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 4, methods: 39, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/parser/Antlr3Util$Adaptor
    #2 = Class              #1            // org/sireum/parser/Antlr3Util$Adaptor
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/antlr/runtime/tree/TreeAdaptor
    #6 = Class              #5            // org/antlr/runtime/tree/TreeAdaptor
    #7 = Utf8               Antlr3Util.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #14 = Class              #13           // org/sireum/$internal/PackageTrait$ISZ$
   #15 = Utf8               org/sireum/$internal/PackageTrait
   #16 = Class              #15           // org/sireum/$internal/PackageTrait
   #17 = Utf8               ISZ$
   #18 = Utf8               org/sireum/ST$Any
   #19 = Class              #18           // org/sireum/ST$Any
   #20 = Utf8               org/sireum/ST
   #21 = Class              #20           // org/sireum/ST
   #22 = Utf8               Any
   #23 = Utf8               org/sireum/ST$Any$
   #24 = Class              #23           // org/sireum/ST$Any$
   #25 = Utf8               Any$
   #26 = Utf8               org/sireum/ST$Arg
   #27 = Class              #26           // org/sireum/ST$Arg
   #28 = Utf8               Arg
   #29 = Utf8               org/sireum/Z$BV$
   #30 = Class              #29           // org/sireum/Z$BV$
   #31 = Utf8               org/sireum/Z
   #32 = Class              #31           // org/sireum/Z
   #33 = Utf8               BV$
   #34 = Utf8               org/sireum/Z$BV$Long
   #35 = Class              #34           // org/sireum/Z$BV$Long
   #36 = Utf8               Long
   #37 = Utf8               org/sireum/parser/Antlr3Util
   #38 = Class              #37           // org/sireum/parser/Antlr3Util
   #39 = Utf8               Adaptor
   #40 = Utf8               org/sireum/parser/Antlr3Util$Node
   #41 = Class              #40           // org/sireum/parser/Antlr3Util$Node
   #42 = Utf8               Node
   #43 = Utf8               org/sireum/parser/ParseTree$Leaf
   #44 = Class              #43           // org/sireum/parser/ParseTree$Leaf
   #45 = Utf8               org/sireum/parser/ParseTree
   #46 = Class              #45           // org/sireum/parser/ParseTree
   #47 = Utf8               Leaf
   #48 = Utf8               org/sireum/parser/ParseTree$Leaf$
   #49 = Class              #48           // org/sireum/parser/ParseTree$Leaf$
   #50 = Utf8               Leaf$
   #51 = Utf8               org/sireum/parser/ParseTree$Node
   #52 = Class              #51           // org/sireum/parser/ParseTree$Node
   #53 = Utf8               org/sireum/parser/ParseTree$Node$
   #54 = Class              #53           // org/sireum/parser/ParseTree$Node$
   #55 = Utf8               Node$
   #56 = Utf8               tokenNames
   #57 = Utf8               [Ljava/lang/String;
   #58 = Utf8               docInfo
   #59 = Utf8               Lorg/sireum/message/DocInfo;
   #60 = Utf8               top
   #61 = Utf8               Lorg/sireum/parser/ParseTree$Node;
   #62 = Utf8               cache
   #63 = Utf8               Lscala/collection/mutable/HashMap;
   #64 = Utf8               Lscala/collection/mutable/HashMap<Ljava/lang/String;Lorg/sireum/U32;>;
   #65 = Utf8               ()Lorg/sireum/parser/ParseTree$Node;
   #66 = NameAndType        #60:#61       // top:Lorg/sireum/parser/ParseTree$Node;
   #67 = Fieldref           #2.#66        // org/sireum/parser/Antlr3Util$Adaptor.top:Lorg/sireum/parser/ParseTree$Node;
   #68 = Utf8               this
   #69 = Utf8               Lorg/sireum/parser/Antlr3Util$Adaptor;
   #70 = Utf8               top_$eq
   #71 = Utf8               (Lorg/sireum/parser/ParseTree$Node;)V
   #72 = Utf8               x$1
   #73 = Utf8               ()Lscala/collection/mutable/HashMap;
   #74 = Utf8               ()Lscala/collection/mutable/HashMap<Ljava/lang/String;Lorg/sireum/U32;>;
   #75 = NameAndType        #62:#63       // cache:Lscala/collection/mutable/HashMap;
   #76 = Fieldref           #2.#75        // org/sireum/parser/Antlr3Util$Adaptor.cache:Lscala/collection/mutable/HashMap;
   #77 = Utf8               cache_$eq
   #78 = Utf8               (Lscala/collection/mutable/HashMap;)V
   #79 = Utf8               (Lscala/collection/mutable/HashMap<Ljava/lang/String;Lorg/sireum/U32;>;)V
   #80 = Utf8               sha3
   #81 = Utf8               (Ljava/lang/String;)I
   #82 = Utf8               s
   #83 = NameAndType        #62:#73       // cache:()Lscala/collection/mutable/HashMap;
   #84 = Methodref          #2.#83        // org/sireum/parser/Antlr3Util$Adaptor.cache:()Lscala/collection/mutable/HashMap;
   #85 = Utf8               scala/collection/mutable/HashMap
   #86 = Class              #85           // scala/collection/mutable/HashMap
   #87 = Utf8               get
   #88 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #89 = NameAndType        #87:#88       // get:(Ljava/lang/Object;)Lscala/Option;
   #90 = Methodref          #86.#89       // scala/collection/mutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
   #91 = Utf8               scala/Some
   #92 = Class              #91           // scala/Some
   #93 = Utf8               value
   #94 = Utf8               ()Ljava/lang/Object;
   #95 = NameAndType        #93:#94       // value:()Ljava/lang/Object;
   #96 = Methodref          #92.#95       // scala/Some.value:()Ljava/lang/Object;
   #97 = Utf8               org/sireum/U32
   #98 = Class              #97           // org/sireum/U32
   #99 = Utf8               ()I
  #100 = NameAndType        #93:#99       // value:()I
  #101 = Methodref          #98.#100      // org/sireum/U32.value:()I
  #102 = Utf8               scala/runtime/BoxedUnit
  #103 = Class              #102          // scala/runtime/BoxedUnit
  #104 = Utf8               UNIT
  #105 = Utf8               Lscala/runtime/BoxedUnit;
  #106 = NameAndType        #104:#105     // UNIT:Lscala/runtime/BoxedUnit;
  #107 = Fieldref           #103.#106     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #108 = Utf8               org/sireum/crypto/SHA3$
  #109 = Class              #108          // org/sireum/crypto/SHA3$
  #110 = Utf8               MODULE$
  #111 = Utf8               Lorg/sireum/crypto/SHA3$;
  #112 = NameAndType        #110:#111     // MODULE$:Lorg/sireum/crypto/SHA3$;
  #113 = Fieldref           #109.#112     // org/sireum/crypto/SHA3$.MODULE$:Lorg/sireum/crypto/SHA3$;
  #114 = Utf8               init256
  #115 = Utf8               ()Lorg/sireum/crypto/SHA3;
  #116 = NameAndType        #114:#115     // init256:()Lorg/sireum/crypto/SHA3;
  #117 = Methodref          #109.#116     // org/sireum/crypto/SHA3$.init256:()Lorg/sireum/crypto/SHA3;
  #118 = Utf8               org/sireum/conversions/String$
  #119 = Class              #118          // org/sireum/conversions/String$
  #120 = Utf8               Lorg/sireum/conversions/String$;
  #121 = NameAndType        #110:#120     // MODULE$:Lorg/sireum/conversions/String$;
  #122 = Fieldref           #119.#121     // org/sireum/conversions/String$.MODULE$:Lorg/sireum/conversions/String$;
  #123 = Utf8               org/sireum/String$
  #124 = Class              #123          // org/sireum/String$
  #125 = Utf8               Lorg/sireum/String$;
  #126 = NameAndType        #110:#125     // MODULE$:Lorg/sireum/String$;
  #127 = Fieldref           #124.#126     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #128 = Utf8               apply
  #129 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #130 = NameAndType        #128:#129     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #131 = Methodref          #124.#130     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #132 = Utf8               toU8is
  #133 = Utf8               (Ljava/lang/String;)Lorg/sireum/IS;
  #134 = NameAndType        #132:#133     // toU8is:(Ljava/lang/String;)Lorg/sireum/IS;
  #135 = Methodref          #119.#134     // org/sireum/conversions/String$.toU8is:(Ljava/lang/String;)Lorg/sireum/IS;
  #136 = Utf8               org/sireum/crypto/SHA3
  #137 = Class              #136          // org/sireum/crypto/SHA3
  #138 = Utf8               update
  #139 = Utf8               (Lorg/sireum/IS;)V
  #140 = NameAndType        #138:#139     // update:(Lorg/sireum/IS;)V
  #141 = Methodref          #137.#140     // org/sireum/crypto/SHA3.update:(Lorg/sireum/IS;)V
  #142 = Utf8               org/sireum/U32$
  #143 = Class              #142          // org/sireum/U32$
  #144 = Utf8               Lorg/sireum/U32$;
  #145 = NameAndType        #110:#144     // MODULE$:Lorg/sireum/U32$;
  #146 = Fieldref           #143.#145     // org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
  #147 = Utf8               org/sireum/ST$
  #148 = Class              #147          // org/sireum/ST$
  #149 = Utf8               Lorg/sireum/ST$;
  #150 = NameAndType        #110:#149     // MODULE$:Lorg/sireum/ST$;
  #151 = Fieldref           #148.#150     // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
  #152 = Utf8               scala/package$
  #153 = Class              #152          // scala/package$
  #154 = Utf8               Lscala/package$;
  #155 = NameAndType        #110:#154     // MODULE$:Lscala/package$;
  #156 = Fieldref           #153.#155     // scala/package$.MODULE$:Lscala/package$;
  #157 = Utf8               Seq
  #158 = Utf8               ()Lscala/collection/immutable/Seq$;
  #159 = NameAndType        #157:#158     // Seq:()Lscala/collection/immutable/Seq$;
  #160 = Methodref          #153.#159     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #161 = Utf8               scala/runtime/ScalaRunTime$
  #162 = Class              #161          // scala/runtime/ScalaRunTime$
  #163 = Utf8               Lscala/runtime/ScalaRunTime$;
  #164 = NameAndType        #110:#163     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #165 = Fieldref           #162.#164     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #166 = Utf8               java/lang/String
  #167 = Class              #166          // java/lang/String
  #168 = Utf8               scala/StringContext$
  #169 = Class              #168          // scala/StringContext$
  #170 = Utf8               Lscala/StringContext$;
  #171 = NameAndType        #110:#170     // MODULE$:Lscala/StringContext$;
  #172 = Fieldref           #169.#171     // scala/StringContext$.MODULE$:Lscala/StringContext$;
  #173 = Utf8               0x
  #174 = String             #173          // 0x
  #175 = Utf8               processEscapes
  #176 = NameAndType        #175:#129     // processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #177 = Methodref          #169.#176     // scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #178 = Utf8
  #179 = String             #178          //
  #180 = Utf8               [Ljava/lang/Object;
  #181 = Class              #180          // "[Ljava/lang/Object;"
  #182 = Utf8               wrapRefArray
  #183 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #184 = NameAndType        #182:#183     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #185 = Methodref          #162.#184     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #186 = Utf8               scala/collection/immutable/Seq$
  #187 = Class              #186          // scala/collection/immutable/Seq$
  #188 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #189 = NameAndType        #128:#188     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #190 = Methodref          #187.#189     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #191 = Utf8               scala/collection/immutable/Seq
  #192 = Class              #191          // scala/collection/immutable/Seq
  #193 = Utf8               Lorg/sireum/ST$Any$;
  #194 = NameAndType        #110:#193     // MODULE$:Lorg/sireum/ST$Any$;
  #195 = Fieldref           #24.#194      // org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
  #196 = Utf8               org/sireum/ops/ISZOps$
  #197 = Class              #196          // org/sireum/ops/ISZOps$
  #198 = Utf8               Lorg/sireum/ops/ISZOps$;
  #199 = NameAndType        #110:#198     // MODULE$:Lorg/sireum/ops/ISZOps$;
  #200 = Fieldref           #197.#199     // org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
  #201 = Utf8               finalise
  #202 = Utf8               ()Lorg/sireum/IS;
  #203 = NameAndType        #201:#202     // finalise:()Lorg/sireum/IS;
  #204 = Methodref          #137.#203     // org/sireum/crypto/SHA3.finalise:()Lorg/sireum/IS;
  #205 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #206 = NameAndType        #128:#205     // apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #207 = Methodref          #197.#206     // org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #208 = Utf8               org/sireum/Z$
  #209 = Class              #208          // org/sireum/Z$
  #210 = Utf8               Lorg/sireum/Z$;
  #211 = NameAndType        #110:#210     // MODULE$:Lorg/sireum/Z$;
  #212 = Fieldref           #209.#211     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #213 = Utf8               (I)Lorg/sireum/Z;
  #214 = NameAndType        #128:#213     // apply:(I)Lorg/sireum/Z;
  #215 = Methodref          #209.#214     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #216 = Utf8               org/sireum/ops/ISZOps
  #217 = Class              #216          // org/sireum/ops/ISZOps
  #218 = Utf8               take
  #219 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/IS;
  #220 = NameAndType        #218:#219     // take:(Lorg/sireum/Z;)Lorg/sireum/IS;
  #221 = Methodref          #217.#220     // org/sireum/ops/ISZOps.take:(Lorg/sireum/Z;)Lorg/sireum/IS;
  #222 = Utf8               org/sireum/IS
  #223 = Class              #222          // org/sireum/IS
  #224 = Utf8               elements
  #225 = Utf8               ()Lscala/collection/immutable/Seq;
  #226 = NameAndType        #224:#225     // elements:()Lscala/collection/immutable/Seq;
  #227 = Methodref          #223.#226     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #228 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #229 = MethodType         #228          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #230 = Utf8               $anonfun$sha3$1
  #231 = NameAndType        #230:#228     // $anonfun$sha3$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #232 = Methodref          #2.#231       // org/sireum/parser/Antlr3Util$Adaptor.$anonfun$sha3$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #233 = MethodHandle       6:#232        // REF_invokeStatic org/sireum/parser/Antlr3Util$Adaptor.$anonfun$sha3$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #234 = Integer            1
  #235 = Utf8               java/lang/invoke/LambdaMetafactory
  #236 = Class              #235          // java/lang/invoke/LambdaMetafactory
  #237 = Utf8               altMetafactory
  #238 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #239 = NameAndType        #237:#238     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #240 = Methodref          #236.#239     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #241 = MethodHandle       6:#240        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #242 = Utf8               ()Lscala/Function1;
  #243 = NameAndType        #128:#242     // apply:()Lscala/Function1;
  #244 = InvokeDynamic      #0:#243       // #0:apply:()Lscala/Function1;
  #245 = Utf8               map
  #246 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #247 = NameAndType        #245:#246     // map:(Lscala/Function1;)Ljava/lang/Object;
  #248 = InterfaceMethodref #192.#247     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #249 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #250 = NameAndType        #128:#249     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #251 = Methodref          #24.#250      // org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #252 = Utf8                                 st\"0x${(ops.ISZOps(sha3.finalise()).take(4), \"\")}\"
  #253 = String             #252          //                   st\"0x${(ops.ISZOps(sha3.finalise()).take(4), \"\")}\"
  #254 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #255 = NameAndType        #128:#254     // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #256 = Methodref          #148.#255     // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #257 = Utf8               render
  #258 = Utf8               ()Ljava/lang/String;
  #259 = NameAndType        #257:#258     // render:()Ljava/lang/String;
  #260 = Methodref          #21.#259      // org/sireum/ST.render:()Ljava/lang/String;
  #261 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option;
  #262 = NameAndType        #128:#261     // apply:(Ljava/lang/String;)Lorg/sireum/Option;
  #263 = Methodref          #143.#262     // org/sireum/U32$.apply:(Ljava/lang/String;)Lorg/sireum/Option;
  #264 = Utf8               org/sireum/Option
  #265 = Class              #264          // org/sireum/Option
  #266 = NameAndType        #87:#94       // get:()Ljava/lang/Object;
  #267 = InterfaceMethodref #265.#266     // org/sireum/Option.get:()Ljava/lang/Object;
  #268 = Utf8               <init>
  #269 = Utf8               (I)V
  #270 = NameAndType        #268:#269     // "<init>":(I)V
  #271 = Methodref          #98.#270      // org/sireum/U32."<init>":(I)V
  #272 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #273 = NameAndType        #138:#272     // update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #274 = Methodref          #86.#273      // scala/collection/mutable/HashMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #275 = Utf8               r
  #276 = Utf8               I
  #277 = Utf8               Lorg/sireum/crypto/SHA3;
  #278 = Utf8               Ljava/lang/String;
  #279 = Utf8               scala/Option
  #280 = Class              #279          // scala/Option
  #281 = Utf8               create
  #282 = Utf8               (Lorg/antlr/runtime/Token;)Ljava/lang/Object;
  #283 = Utf8               payload
  #284 = Utf8               org/antlr/runtime/Token
  #285 = Class              #284          // org/antlr/runtime/Token
  #286 = Utf8               getType
  #287 = NameAndType        #286:#99      // getType:()I
  #288 = InterfaceMethodref #285.#287     // org/antlr/runtime/Token.getType:()I
  #289 = Utf8               EOF
  #290 = String             #289          // EOF
  #291 = NameAndType        #56:#57       // tokenNames:[Ljava/lang/String;
  #292 = Fieldref           #2.#291       // org/sireum/parser/Antlr3Util$Adaptor.tokenNames:[Ljava/lang/String;
  #293 = Utf8               getLine
  #294 = NameAndType        #293:#99      // getLine:()I
  #295 = InterfaceMethodref #285.#294     // org/antlr/runtime/Token.getLine:()I
  #296 = Utf8               getCharPositionInLine
  #297 = NameAndType        #296:#99      // getCharPositionInLine:()I
  #298 = InterfaceMethodref #285.#297     // org/antlr/runtime/Token.getCharPositionInLine:()I
  #299 = Utf8               getText
  #300 = NameAndType        #299:#258     // getText:()Ljava/lang/String;
  #301 = InterfaceMethodref #285.#300     // org/antlr/runtime/Token.getText:()Ljava/lang/String;
  #302 = Utf8               length
  #303 = NameAndType        #302:#99      // length:()I
  #304 = Methodref          #167.#303     // java/lang/String.length:()I
  #305 = Utf8               org/sireum/U64
  #306 = Class              #305          // org/sireum/U64
  #307 = Utf8               org/sireum/conversions/Z$
  #308 = Class              #307          // org/sireum/conversions/Z$
  #309 = Utf8               Lorg/sireum/conversions/Z$;
  #310 = NameAndType        #110:#309     // MODULE$:Lorg/sireum/conversions/Z$;
  #311 = Fieldref           #308.#310     // org/sireum/conversions/Z$.MODULE$:Lorg/sireum/conversions/Z$;
  #312 = Utf8               toU64
  #313 = Utf8               (Lorg/sireum/Z;)J
  #314 = NameAndType        #312:#313     // toU64:(Lorg/sireum/Z;)J
  #315 = Methodref          #308.#314     // org/sireum/conversions/Z$.toU64:(Lorg/sireum/Z;)J
  #316 = Utf8               (J)V
  #317 = NameAndType        #268:#316     // "<init>":(J)V
  #318 = Methodref          #306.#317     // org/sireum/U64."<init>":(J)V
  #319 = Utf8               org/sireum/U64$
  #320 = Class              #319          // org/sireum/U64$
  #321 = Utf8               Lorg/sireum/U64$;
  #322 = NameAndType        #110:#321     // MODULE$:Lorg/sireum/U64$;
  #323 = Fieldref           #320.#322     // org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
  #324 = Utf8               (I)J
  #325 = NameAndType        #128:#324     // apply:(I)J
  #326 = Methodref          #320.#325     // org/sireum/U64$.apply:(I)J
  #327 = Utf8               $less$less
  #328 = Utf8               (Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #329 = NameAndType        #327:#328     // $less$less:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #330 = Methodref          #306.#329     // org/sireum/U64.$less$less:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #331 = Utf8               $bar
  #332 = NameAndType        #331:#328     // $bar:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #333 = InterfaceMethodref #35.#332      // org/sireum/Z$BV$Long.$bar:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
  #334 = Utf8               ()J
  #335 = NameAndType        #93:#334      // value:()J
  #336 = Methodref          #306.#335     // org/sireum/U64.value:()J
  #337 = Utf8               Lorg/sireum/parser/ParseTree$Leaf$;
  #338 = NameAndType        #110:#337     // MODULE$:Lorg/sireum/parser/ParseTree$Leaf$;
  #339 = Fieldref           #49.#338      // org/sireum/parser/ParseTree$Leaf$.MODULE$:Lorg/sireum/parser/ParseTree$Leaf$;
  #340 = Utf8               (I)I
  #341 = NameAndType        #128:#340     // apply:(I)I
  #342 = Methodref          #143.#341     // org/sireum/U32$.apply:(I)I
  #343 = Utf8               org/sireum/B$
  #344 = Class              #343          // org/sireum/B$
  #345 = Utf8               Lorg/sireum/B$;
  #346 = NameAndType        #110:#345     // MODULE$:Lorg/sireum/B$;
  #347 = Fieldref           #344.#346     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #348 = Utf8               (Z)Z
  #349 = NameAndType        #128:#348     // apply:(Z)Z
  #350 = Methodref          #344.#349     // org/sireum/B$.apply:(Z)Z
  #351 = Utf8               org/sireum/Some$
  #352 = Class              #351          // org/sireum/Some$
  #353 = Utf8               Lorg/sireum/Some$;
  #354 = NameAndType        #110:#353     // MODULE$:Lorg/sireum/Some$;
  #355 = Fieldref           #352.#354     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #356 = Utf8               org/sireum/message/PosInfo$
  #357 = Class              #356          // org/sireum/message/PosInfo$
  #358 = Utf8               Lorg/sireum/message/PosInfo$;
  #359 = NameAndType        #110:#358     // MODULE$:Lorg/sireum/message/PosInfo$;
  #360 = Fieldref           #357.#359     // org/sireum/message/PosInfo$.MODULE$:Lorg/sireum/message/PosInfo$;
  #361 = NameAndType        #58:#59       // docInfo:Lorg/sireum/message/DocInfo;
  #362 = Fieldref           #2.#361       // org/sireum/parser/Antlr3Util$Adaptor.docInfo:Lorg/sireum/message/DocInfo;
  #363 = Utf8               (Lorg/sireum/message/DocInfo;J)Lorg/sireum/message/PosInfo;
  #364 = NameAndType        #128:#363     // apply:(Lorg/sireum/message/DocInfo;J)Lorg/sireum/message/PosInfo;
  #365 = Methodref          #357.#364     // org/sireum/message/PosInfo$.apply:(Lorg/sireum/message/DocInfo;J)Lorg/sireum/message/PosInfo;
  #366 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #367 = NameAndType        #128:#366     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #368 = Methodref          #352.#367     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #369 = Utf8               (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
  #370 = NameAndType        #128:#369     // apply:(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
  #371 = Methodref          #49.#370      // org/sireum/parser/ParseTree$Leaf$.apply:(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
  #372 = Utf8               t
  #373 = Utf8               name
  #374 = Utf8               offset
  #375 = Utf8               offsetLength
  #376 = Utf8               J
  #377 = Utf8               Lorg/antlr/runtime/Token;
  #378 = Utf8               dupNode
  #379 = Utf8               treeNode
  #380 = Utf8               org/sireum/helper$
  #381 = Class              #380          // org/sireum/helper$
  #382 = Utf8               Lorg/sireum/helper$;
  #383 = NameAndType        #110:#382     // MODULE$:Lorg/sireum/helper$;
  #384 = Fieldref           #381.#383     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #385 = Utf8               Infeasible
  #386 = String             #385          // Infeasible
  #387 = Utf8               halt
  #388 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #389 = NameAndType        #387:#388     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #390 = Methodref          #381.#389     // org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #391 = Utf8               Ljava/lang/Object;
  #392 = Utf8               dupTree
  #393 = Utf8               tree
  #394 = Utf8               nil
  #395 = Utf8               scala/collection/mutable/ListBuffer$
  #396 = Class              #395          // scala/collection/mutable/ListBuffer$
  #397 = Utf8               Lscala/collection/mutable/ListBuffer$;
  #398 = NameAndType        #110:#397     // MODULE$:Lscala/collection/mutable/ListBuffer$;
  #399 = Fieldref           #396.#398     // scala/collection/mutable/ListBuffer$.MODULE$:Lscala/collection/mutable/ListBuffer$;
  #400 = Utf8               scala/collection/immutable/Nil$
  #401 = Class              #400          // scala/collection/immutable/Nil$
  #402 = Utf8               Lscala/collection/immutable/Nil$;
  #403 = NameAndType        #110:#402     // MODULE$:Lscala/collection/immutable/Nil$;
  #404 = Fieldref           #401.#403     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #405 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #406 = NameAndType        #128:#405     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #407 = Methodref          #396.#406     // scala/collection/mutable/ListBuffer$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #408 = Utf8               scala/collection/mutable/ListBuffer
  #409 = Class              #408          // scala/collection/mutable/ListBuffer
  #410 = Utf8               (Lscala/collection/mutable/ListBuffer;II)V
  #411 = NameAndType        #268:#410     // "<init>":(Lscala/collection/mutable/ListBuffer;II)V
  #412 = Methodref          #41.#411      // org/sireum/parser/Antlr3Util$Node."<init>":(Lscala/collection/mutable/ListBuffer;II)V
  #413 = Utf8               errorNode
  #414 = Utf8               (Lorg/antlr/runtime/TokenStream;Lorg/antlr/runtime/Token;Lorg/antlr/runtime/Token;Lorg/antlr/runtime/RecognitionException;)Ljava/lang/Object;
  #415 = Utf8               input
  #416 = Utf8               start
  #417 = Utf8               stop
  #418 = Utf8               e
  #419 = Utf8               java/lang/Thread
  #420 = Class              #419          // java/lang/Thread
  #421 = Utf8               currentThread
  #422 = Utf8               ()Ljava/lang/Thread;
  #423 = NameAndType        #421:#422     // currentThread:()Ljava/lang/Thread;
  #424 = Methodref          #420.#423     // java/lang/Thread.currentThread:()Ljava/lang/Thread;
  #425 = Utf8               getStackTrace
  #426 = Utf8               ()[Ljava/lang/StackTraceElement;
  #427 = NameAndType        #425:#426     // getStackTrace:()[Ljava/lang/StackTraceElement;
  #428 = Methodref          #420.#427     // java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
  #429 = Utf8               java/lang/StackTraceElement
  #430 = Class              #429          // java/lang/StackTraceElement
  #431 = Utf8               getMethodName
  #432 = NameAndType        #431:#258     // getMethodName:()Ljava/lang/String;
  #433 = Methodref          #430.#432     // java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
  #434 = Utf8               Lorg/sireum/parser/ParseTree$Node$;
  #435 = NameAndType        #110:#434     // MODULE$:Lorg/sireum/parser/ParseTree$Node$;
  #436 = Fieldref           #54.#435      // org/sireum/parser/ParseTree$Node$.MODULE$:Lorg/sireum/parser/ParseTree$Node$;
  #437 = Utf8               org/sireum/package$
  #438 = Class              #437          // org/sireum/package$
  #439 = Utf8               Lorg/sireum/package$;
  #440 = NameAndType        #110:#439     // MODULE$:Lorg/sireum/package$;
  #441 = Fieldref           #438.#440     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #442 = Utf8               ISZ
  #443 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #444 = NameAndType        #442:#443     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #445 = Methodref          #438.#444     // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #446 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #447 = NameAndType        #128:#446     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #448 = Methodref          #14.#447      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #449 = Utf8               java/lang/StringBuilder
  #450 = Class              #449          // java/lang/StringBuilder
  #451 = Integer            2
  #452 = Methodref          #450.#270     // java/lang/StringBuilder."<init>":(I)V
  #453 = Utf8               append
  #454 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #455 = NameAndType        #453:#454     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #456 = Methodref          #450.#455     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #457 = Utf8               :
  #458 = String             #457          // :
  #459 = Utf8               org/antlr/runtime/RecognitionException
  #460 = Class              #459          // org/antlr/runtime/RecognitionException
  #461 = Utf8               getMessage
  #462 = NameAndType        #461:#258     // getMessage:()Ljava/lang/String;
  #463 = Methodref          #460.#462     // org/antlr/runtime/RecognitionException.getMessage:()Ljava/lang/String;
  #464 = Utf8               getClass
  #465 = Utf8               ()Ljava/lang/Class;
  #466 = NameAndType        #464:#465     // getClass:()Ljava/lang/Class;
  #467 = Methodref          #460.#466     // org/antlr/runtime/RecognitionException.getClass:()Ljava/lang/Class;
  #468 = Utf8               java/lang/Class
  #469 = Class              #468          // java/lang/Class
  #470 = Utf8               getName
  #471 = NameAndType        #470:#258     // getName:()Ljava/lang/String;
  #472 = Methodref          #469.#471     // java/lang/Class.getName:()Ljava/lang/String;
  #473 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #474 = NameAndType        #453:#473     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #475 = Methodref          #450.#474     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #476 = Utf8               toString
  #477 = NameAndType        #476:#258     // toString:()Ljava/lang/String;
  #478 = Methodref          #450.#477     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #479 = Utf8               (Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
  #480 = NameAndType        #128:#479     // apply:(Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
  #481 = Methodref          #54.#480      // org/sireum/parser/ParseTree$Node$.apply:(Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
  #482 = Utf8               Lorg/antlr/runtime/TokenStream;
  #483 = Utf8               Lorg/antlr/runtime/RecognitionException;
  #484 = Utf8               org/antlr/runtime/TokenStream
  #485 = Class              #484          // org/antlr/runtime/TokenStream
  #486 = Utf8               isNil
  #487 = Utf8               (Ljava/lang/Object;)Z
  #488 = Utf8               addChild
  #489 = Utf8               child
  #490 = Utf8               buffer
  #491 = Utf8               ()Lscala/collection/mutable/ListBuffer;
  #492 = NameAndType        #490:#491     // buffer:()Lscala/collection/mutable/ListBuffer;
  #493 = Methodref          #41.#492      // org/sireum/parser/Antlr3Util$Node.buffer:()Lscala/collection/mutable/ListBuffer;
  #494 = Utf8               addOne
  #495 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;
  #496 = NameAndType        #494:#495     // addOne:(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;
  #497 = Methodref          #409.#496     // scala/collection/mutable/ListBuffer.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;
  #498 = Utf8               node
  #499 = Utf8               Lorg/sireum/parser/Antlr3Util$Node;
  #500 = Utf8               becomeRoot
  #501 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #502 = Utf8               newRoot
  #503 = Utf8               oldRoot
  #504 = Utf8               rulePostProcessing
  #505 = Utf8               root
  #506 = Utf8               toSeq
  #507 = NameAndType        #506:#225     // toSeq:()Lscala/collection/immutable/Seq;
  #508 = Methodref          #409.#507     // scala/collection/mutable/ListBuffer.toSeq:()Lscala/collection/immutable/Seq;
  #509 = NameAndType        #80:#81       // sha3:(Ljava/lang/String;)I
  #510 = Methodref          #2.#509       // org/sireum/parser/Antlr3Util$Adaptor.sha3:(Ljava/lang/String;)I
  #511 = Utf8               getUniqueID
  #512 = Utf8               (Ljava/lang/Object;)I
  #513 = Utf8               (Lorg/antlr/runtime/Token;Ljava/lang/Object;)Ljava/lang/Object;
  #514 = Utf8               (ILorg/antlr/runtime/Token;)Ljava/lang/Object;
  #515 = Utf8               tokenType
  #516 = Utf8               fromToken
  #517 = Utf8               (ILorg/antlr/runtime/Token;Ljava/lang/String;)Ljava/lang/Object;
  #518 = Utf8               text
  #519 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;
  #520 = Utf8               setType
  #521 = Utf8               (Ljava/lang/Object;I)V
  #522 = Utf8               type
  #523 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #524 = Utf8               setText
  #525 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)V
  #526 = Utf8               getToken
  #527 = Utf8               (Ljava/lang/Object;)Lorg/antlr/runtime/Token;
  #528 = Utf8               setTokenBoundaries
  #529 = Utf8               (Ljava/lang/Object;Lorg/antlr/runtime/Token;Lorg/antlr/runtime/Token;)V
  #530 = Utf8               startToken
  #531 = Utf8               stopToken
  #532 = Utf8               getTokenIndex
  #533 = NameAndType        #532:#99      // getTokenIndex:()I
  #534 = InterfaceMethodref #285.#533     // org/antlr/runtime/Token.getTokenIndex:()I
  #535 = Utf8               start_$eq
  #536 = NameAndType        #535:#269     // start_$eq:(I)V
  #537 = Methodref          #41.#536      // org/sireum/parser/Antlr3Util$Node.start_$eq:(I)V
  #538 = Utf8               stop_$eq
  #539 = NameAndType        #538:#269     // stop_$eq:(I)V
  #540 = Methodref          #41.#539      // org/sireum/parser/Antlr3Util$Node.stop_$eq:(I)V
  #541 = Utf8               Please generate the lexer/parser using the (patched) AntlrWorks at https://github.com/sireum/antlrworks
  #542 = String             #541          // Please generate the lexer/parser using the (patched) AntlrWorks at https://github.com/sireum/antlrworks
  #543 = Integer            12
  #544 = Utf8               Infeasible:
  #545 = String             #544          // Infeasible:
  #546 = Utf8               getTokenStartIndex
  #547 = Utf8               getTokenStopIndex
  #548 = Utf8               getChild
  #549 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #550 = Utf8               i
  #551 = Utf8               setChild
  #552 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;)V
  #553 = Utf8               deleteChild
  #554 = Utf8               getChildCount
  #555 = Utf8               getParent
  #556 = Utf8               setParent
  #557 = Utf8               parent
  #558 = Utf8               getChildIndex
  #559 = Utf8               setChildIndex
  #560 = Utf8               index
  #561 = Utf8               replaceChildren
  #562 = Utf8               (Ljava/lang/Object;IILjava/lang/Object;)V
  #563 = Utf8               startChildIndex
  #564 = Utf8               stopChildIndex
  #565 = Utf8               o
  #566 = Utf8               org/sireum/$internal/Option$
  #567 = Class              #566          // org/sireum/$internal/Option$
  #568 = Utf8               Lorg/sireum/$internal/Option$;
  #569 = NameAndType        #110:#568     // MODULE$:Lorg/sireum/$internal/Option$;
  #570 = Fieldref           #567.#569     // org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
  #571 = NameAndType        #128:#228     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #572 = Methodref          #567.#571     // org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #573 = Utf8               ([Ljava/lang/String;Lorg/sireum/message/DocInfo;Lorg/sireum/parser/ParseTree$Node;)V
  #574 = Utf8               ()V
  #575 = NameAndType        #268:#574     // "<init>":()V
  #576 = Methodref          #4.#575       // java/lang/Object."<init>":()V
  #577 = Utf8               scala/collection/mutable/HashMap$
  #578 = Class              #577          // scala/collection/mutable/HashMap$
  #579 = Utf8               Lscala/collection/mutable/HashMap$;
  #580 = NameAndType        #110:#579     // MODULE$:Lscala/collection/mutable/HashMap$;
  #581 = Fieldref           #578.#580     // scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
  #582 = Utf8               empty
  #583 = NameAndType        #582:#73      // empty:()Lscala/collection/mutable/HashMap;
  #584 = Methodref          #578.#583     // scala/collection/mutable/HashMap$.empty:()Lscala/collection/mutable/HashMap;
  #585 = Utf8               $deserializeLambda$
  #586 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #587 = Utf8               scala/runtime/LambdaDeserialize
  #588 = Class              #587          // scala/runtime/LambdaDeserialize
  #589 = Utf8               bootstrap
  #590 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #591 = NameAndType        #589:#590     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #592 = Methodref          #588.#591     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #593 = MethodHandle       6:#592        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #594 = Utf8               lambdaDeserialize
  #595 = NameAndType        #594:#586     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #596 = InvokeDynamic      #1:#595       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #597 = Utf8               Signature
  #598 = Utf8               Code
  #599 = Utf8               LineNumberTable
  #600 = Utf8               LocalVariableTable
  #601 = Utf8               MethodParameters
  #602 = Utf8               StackMapTable
  #603 = Utf8               InnerClasses
  #604 = Utf8               SourceFile
  #605 = Utf8               BootstrapMethods
  #606 = Utf8               ScalaInlineInfo
  #607 = Utf8               Scala
{
  private final java.lang.String[] tokenNames;
    descriptor: [Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.message.DocInfo docInfo;
    descriptor: Lorg/sireum/message/DocInfo;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private org.sireum.parser.ParseTree$Node top;
    descriptor: Lorg/sireum/parser/ParseTree$Node;
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.mutable.HashMap<java.lang.String, org.sireum.U32> cache;
    descriptor: Lscala/collection/mutable/HashMap;
    flags: (0x0002) ACC_PRIVATE
    Signature: #64                          // Lscala/collection/mutable/HashMap<Ljava/lang/String;Lorg/sireum/U32;>;

  public org.sireum.parser.ParseTree$Node top();
    descriptor: ()Lorg/sireum/parser/ParseTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #67                 // Field top:Lorg/sireum/parser/ParseTree$Node;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;

  public void top_$eq(org.sireum.parser.ParseTree$Node);
    descriptor: (Lorg/sireum/parser/ParseTree$Node;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #67                 // Field top:Lorg/sireum/parser/ParseTree$Node;
         5: return
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0       6     1   x$1   Lorg/sireum/parser/ParseTree$Node;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.mutable.HashMap<java.lang.String, org.sireum.U32> cache();
    descriptor: ()Lscala/collection/mutable/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #76                 // Field cache:Lscala/collection/mutable/HashMap;
         4: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
    Signature: #74                          // ()Lscala/collection/mutable/HashMap<Ljava/lang/String;Lorg/sireum/U32;>;

  public void cache_$eq(scala.collection.mutable.HashMap<java.lang.String, org.sireum.U32>);
    descriptor: (Lscala/collection/mutable/HashMap;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #76                 // Field cache:Lscala/collection/mutable/HashMap;
         5: return
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0       6     1   x$1   Lscala/collection/mutable/HashMap;
    Signature: #79                          // (Lscala/collection/mutable/HashMap<Ljava/lang/String;Lorg/sireum/U32;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int sha3(java.lang.String);
    descriptor: (Ljava/lang/String;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=8, args_size=2
         0: aload_0
         1: invokevirtual #84                 // Method cache:()Lscala/collection/mutable/HashMap;
         4: aload_1
         5: invokevirtual #90                 // Method scala/collection/mutable/HashMap.get:(Ljava/lang/Object;)Lscala/Option;
         8: astore_3
         9: aload_3
        10: instanceof    #92                 // class scala/Some
        13: ifeq          38
        16: aload_3
        17: checkcast     #92                 // class scala/Some
        20: astore        4
        22: aload         4
        24: invokevirtual #96                 // Method scala/Some.value:()Ljava/lang/Object;
        27: checkcast     #98                 // class org/sireum/U32
        30: invokevirtual #101                // Method org/sireum/U32.value:()I
        33: istore        5
        35: iload         5
        37: ireturn
        38: goto          41
        41: getstatic     #107                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        44: astore_2
        45: goto          48
        48: getstatic     #113                // Field org/sireum/crypto/SHA3$.MODULE$:Lorg/sireum/crypto/SHA3$;
        51: invokevirtual #117                // Method org/sireum/crypto/SHA3$.init256:()Lorg/sireum/crypto/SHA3;
        54: astore        6
        56: aload         6
        58: getstatic     #122                // Field org/sireum/conversions/String$.MODULE$:Lorg/sireum/conversions/String$;
        61: getstatic     #127                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        64: aload_1
        65: invokevirtual #131                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        68: invokevirtual #135                // Method org/sireum/conversions/String$.toU8is:(Ljava/lang/String;)Lorg/sireum/IS;
        71: invokevirtual #141                // Method org/sireum/crypto/SHA3.update:(Lorg/sireum/IS;)V
        74: getstatic     #146                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
        77: getstatic     #151                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
        80: getstatic     #156                // Field scala/package$.MODULE$:Lscala/package$;
        83: invokevirtual #160                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        86: getstatic     #165                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        89: iconst_2
        90: anewarray     #167                // class java/lang/String
        93: dup
        94: iconst_0
        95: getstatic     #172                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        98: ldc           #174                // String 0x
       100: invokevirtual #177                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
       103: aastore
       104: dup
       105: iconst_1
       106: getstatic     #172                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
       109: ldc           #179                // String
       111: invokevirtual #177                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
       114: aastore
       115: checkcast     #181                // class "[Ljava/lang/Object;"
       118: invokevirtual #185                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       121: invokevirtual #190                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       124: checkcast     #192                // class scala/collection/immutable/Seq
       127: getstatic     #156                // Field scala/package$.MODULE$:Lscala/package$;
       130: invokevirtual #160                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       133: getstatic     #165                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       136: iconst_1
       137: anewarray     #27                 // class org/sireum/ST$Arg
       140: dup
       141: iconst_0
       142: getstatic     #195                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
       145: getstatic     #200                // Field org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
       148: aload         6
       150: invokevirtual #204                // Method org/sireum/crypto/SHA3.finalise:()Lorg/sireum/IS;
       153: invokevirtual #207                // Method org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
       156: getstatic     #212                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       159: iconst_4
       160: invokevirtual #215                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       163: invokevirtual #221                // Method org/sireum/ops/ISZOps.take:(Lorg/sireum/Z;)Lorg/sireum/IS;
       166: invokevirtual #227                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
       169: invokedynamic #244,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       174: invokeinterface #248,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       179: checkcast     #192                // class scala/collection/immutable/Seq
       182: ldc           #179                // String
       184: invokevirtual #251                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       187: aastore
       188: checkcast     #181                // class "[Ljava/lang/Object;"
       191: invokevirtual #185                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       194: invokevirtual #190                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       197: checkcast     #192                // class scala/collection/immutable/Seq
       200: ldc           #253                // String                   st\"0x${(ops.ISZOps(sha3.finalise()).take(4), \"\")}\"
       202: invokevirtual #256                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       205: invokevirtual #260                // Method org/sireum/ST.render:()Ljava/lang/String;
       208: invokevirtual #263                // Method org/sireum/U32$.apply:(Ljava/lang/String;)Lorg/sireum/Option;
       211: invokeinterface #267,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
       216: checkcast     #98                 // class org/sireum/U32
       219: invokevirtual #101                // Method org/sireum/U32.value:()I
       222: istore        7
       224: aload_0
       225: invokevirtual #84                 // Method cache:()Lscala/collection/mutable/HashMap;
       228: aload_1
       229: new           #98                 // class org/sireum/U32
       232: dup
       233: iload         7
       235: invokespecial #271                // Method org/sireum/U32."<init>":(I)V
       238: invokevirtual #274                // Method scala/collection/mutable/HashMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
       241: iload         7
       243: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 38
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/parser/Antlr3Util$Adaptor, class java/lang/String, class scala/runtime/BoxedUnit, class scala/Option ]
          stack = []
      LineNumberTable:
        line 45: 0
        line 46: 9
        line 47: 41
        line 50: 48
        line 51: 56
        line 52: 74
        line 53: 224
        line 54: 241
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           35       3     5     r   I
           56     188     6  sha3   Lorg/sireum/crypto/SHA3;
          224      20     7     r   I
            0     244     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0     244     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.Object create(org.antlr.runtime.Token);
    descriptor: (Lorg/antlr/runtime/Token;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=8, args_size=2
         0: aload_1
         1: invokeinterface #288,  1          // InterfaceMethod org/antlr/runtime/Token.getType:()I
         6: istore_2
         7: iload_2
         8: iconst_m1
         9: if_icmpne     18
        12: ldc_w         #290                // String EOF
        15: goto          24
        18: aload_0
        19: getfield      #292                // Field tokenNames:[Ljava/lang/String;
        22: iload_2
        23: aaload
        24: astore_3
        25: aload_1
        26: invokeinterface #295,  1          // InterfaceMethod org/antlr/runtime/Token.getLine:()I
        31: aload_1
        32: invokeinterface #298,  1          // InterfaceMethod org/antlr/runtime/Token.getCharPositionInLine:()I
        37: iadd
        38: istore        4
        40: aload_1
        41: invokeinterface #301,  1          // InterfaceMethod org/antlr/runtime/Token.getText:()Ljava/lang/String;
        46: invokevirtual #304                // Method java/lang/String.length:()I
        49: istore        5
        51: new           #306                // class org/sireum/U64
        54: dup
        55: getstatic     #311                // Field org/sireum/conversions/Z$.MODULE$:Lorg/sireum/conversions/Z$;
        58: getstatic     #212                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        61: iload         4
        63: invokevirtual #215                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        66: invokevirtual #315                // Method org/sireum/conversions/Z$.toU64:(Lorg/sireum/Z;)J
        69: invokespecial #318                // Method org/sireum/U64."<init>":(J)V
        72: new           #306                // class org/sireum/U64
        75: dup
        76: getstatic     #323                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        79: bipush        32
        81: invokevirtual #326                // Method org/sireum/U64$.apply:(I)J
        84: invokespecial #318                // Method org/sireum/U64."<init>":(J)V
        87: invokevirtual #330                // Method org/sireum/U64.$less$less:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
        90: new           #306                // class org/sireum/U64
        93: dup
        94: getstatic     #323                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        97: iload         5
        99: invokevirtual #326                // Method org/sireum/U64$.apply:(I)J
       102: invokespecial #318                // Method org/sireum/U64."<init>":(J)V
       105: invokeinterface #333,  2          // InterfaceMethod org/sireum/Z$BV$Long.$bar:(Lorg/sireum/Z$BV$Long;)Lorg/sireum/Z$BV$Long;
       110: checkcast     #306                // class org/sireum/U64
       113: invokevirtual #336                // Method org/sireum/U64.value:()J
       116: lstore        6
       118: getstatic     #339                // Field org/sireum/parser/ParseTree$Leaf$.MODULE$:Lorg/sireum/parser/ParseTree$Leaf$;
       121: getstatic     #127                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       124: aload_1
       125: invokeinterface #301,  1          // InterfaceMethod org/antlr/runtime/Token.getText:()Ljava/lang/String;
       130: invokevirtual #131                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       133: getstatic     #127                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       136: aload_3
       137: invokevirtual #131                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       140: getstatic     #146                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
       143: aload_1
       144: invokeinterface #288,  1          // InterfaceMethod org/antlr/runtime/Token.getType:()I
       149: invokevirtual #342                // Method org/sireum/U32$.apply:(I)I
       152: getstatic     #347                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       155: iconst_0
       156: invokevirtual #350                // Method org/sireum/B$.apply:(Z)Z
       159: getstatic     #355                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       162: getstatic     #360                // Field org/sireum/message/PosInfo$.MODULE$:Lorg/sireum/message/PosInfo$;
       165: aload_0
       166: getfield      #362                // Field docInfo:Lorg/sireum/message/DocInfo;
       169: lload         6
       171: invokevirtual #365                // Method org/sireum/message/PosInfo$.apply:(Lorg/sireum/message/DocInfo;J)Lorg/sireum/message/PosInfo;
       174: invokevirtual #368                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
       177: invokevirtual #371                // Method org/sireum/parser/ParseTree$Leaf$.apply:(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
       180: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ int ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 58: 0
        line 59: 7
        line 60: 25
        line 61: 40
        line 62: 51
        line 63: 118
        line 64: 159
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7     173     2     t   I
           25     155     3  name   Ljava/lang/String;
           40     140     4 offset   I
           51     129     5 length   I
          118      62     6 offsetLength   J
            0     181     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0     181     1 payload   Lorg/antlr/runtime/Token;
    MethodParameters:
      Name                           Flags
      payload                        final

  public java.lang.Object dupNode(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1 treeNode   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      treeNode                       final

  public java.lang.Object dupTree(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1  tree   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      tree                           final

  public java.lang.Object nil();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #41                 // class org/sireum/parser/Antlr3Util$Node
         3: dup
         4: getstatic     #399                // Field scala/collection/mutable/ListBuffer$.MODULE$:Lscala/collection/mutable/ListBuffer$;
         7: getstatic     #404                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        10: invokevirtual #407                // Method scala/collection/mutable/ListBuffer$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        13: checkcast     #409                // class scala/collection/mutable/ListBuffer
        16: iconst_m1
        17: iconst_m1
        18: invokespecial #412                // Method org/sireum/parser/Antlr3Util$Node."<init>":(Lscala/collection/mutable/ListBuffer;II)V
        21: areturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;

  public java.lang.Object errorNode(org.antlr.runtime.TokenStream, org.antlr.runtime.Token, org.antlr.runtime.Token, org.antlr.runtime.RecognitionException);
    descriptor: (Lorg/antlr/runtime/TokenStream;Lorg/antlr/runtime/Token;Lorg/antlr/runtime/Token;Lorg/antlr/runtime/RecognitionException;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=5
         0: invokestatic  #424                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         3: invokevirtual #428                // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
         6: iconst_2
         7: aaload
         8: invokevirtual #433                // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
        11: astore        5
        13: getstatic     #436                // Field org/sireum/parser/ParseTree$Node$.MODULE$:Lorg/sireum/parser/ParseTree$Node$;
        16: getstatic     #441                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        19: invokevirtual #445                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        22: getstatic     #404                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        25: invokevirtual #448                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        28: getstatic     #127                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        31: new           #450                // class java/lang/StringBuilder
        34: dup
        35: ldc_w         #451                // int 2
        38: invokespecial #452                // Method java/lang/StringBuilder."<init>":(I)V
        41: aload         5
        43: invokevirtual #456                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        46: ldc_w         #458                // String :
        49: invokevirtual #456                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        52: aload         4
        54: invokevirtual #463                // Method org/antlr/runtime/RecognitionException.getMessage:()Ljava/lang/String;
        57: ifnonnull     71
        60: aload         4
        62: invokevirtual #467                // Method org/antlr/runtime/RecognitionException.getClass:()Ljava/lang/Class;
        65: invokevirtual #472                // Method java/lang/Class.getName:()Ljava/lang/String;
        68: goto          76
        71: aload         4
        73: invokevirtual #463                // Method org/antlr/runtime/RecognitionException.getMessage:()Ljava/lang/String;
        76: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        79: invokevirtual #478                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        82: invokevirtual #131                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        85: getstatic     #146                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
        88: iconst_m1
        89: invokevirtual #342                // Method org/sireum/U32$.apply:(I)I
        92: invokevirtual #481                // Method org/sireum/parser/ParseTree$Node$.apply:(Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
        95: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 71
          locals = [ class org/sireum/parser/Antlr3Util$Adaptor, class org/antlr/runtime/TokenStream, class org/antlr/runtime/Token, class org/antlr/runtime/Token, class org/antlr/runtime/RecognitionException, class java/lang/String ]
          stack = [ class org/sireum/parser/ParseTree$Node$, class org/sireum/IS, class org/sireum/String$, class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/parser/Antlr3Util$Adaptor, class org/antlr/runtime/TokenStream, class org/antlr/runtime/Token, class org/antlr/runtime/Token, class org/antlr/runtime/RecognitionException, class java/lang/String ]
          stack = [ class org/sireum/parser/ParseTree$Node$, class org/sireum/IS, class org/sireum/String$, class java/lang/StringBuilder, class java/lang/String ]
      LineNumberTable:
        line 75: 0
        line 76: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      82     5  name   Ljava/lang/String;
            0      96     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      96     1 input   Lorg/antlr/runtime/TokenStream;
            0      96     2 start   Lorg/antlr/runtime/Token;
            0      96     3  stop   Lorg/antlr/runtime/Token;
            0      96     4     e   Lorg/antlr/runtime/RecognitionException;
    MethodParameters:
      Name                           Flags
      input                          final
      start                          final
      stop                           final
      e                              final

  public boolean isNil(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1  tree   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      tree                           final

  public void addChild(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: aload_1
         1: checkcast     #41                 // class org/sireum/parser/Antlr3Util$Node
         4: astore_3
         5: aload_3
         6: invokevirtual #493                // Method org/sireum/parser/Antlr3Util$Node.buffer:()Lscala/collection/mutable/ListBuffer;
         9: aload_2
        10: checkcast     #46                 // class org/sireum/parser/ParseTree
        13: invokevirtual #497                // Method scala/collection/mutable/ListBuffer.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;
        16: pop
        17: return
      LineNumberTable:
        line 82: 0
        line 83: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      12     3  node   Lorg/sireum/parser/Antlr3Util$Node;
            0      18     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      18     1     t   Ljava/lang/Object;
            0      18     2 child   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final
      child                          final

  public java.lang.Object becomeRoot(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1 newRoot   Ljava/lang/Object;
            0      10     2 oldRoot   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      newRoot                        final
      oldRoot                        final

  public java.lang.Object rulePostProcessing(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #46                 // class org/sireum/parser/ParseTree
         6: ifeq          21
         9: aload_3
        10: checkcast     #46                 // class org/sireum/parser/ParseTree
        13: astore        4
        15: aload         4
        17: astore_2
        18: goto          84
        21: goto          24
        24: aload_1
        25: checkcast     #41                 // class org/sireum/parser/Antlr3Util$Node
        28: astore        5
        30: invokestatic  #424                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
        33: invokevirtual #428                // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
        36: iconst_2
        37: aaload
        38: invokevirtual #433                // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
        41: astore        6
        43: getstatic     #436                // Field org/sireum/parser/ParseTree$Node$.MODULE$:Lorg/sireum/parser/ParseTree$Node$;
        46: getstatic     #441                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        49: invokevirtual #445                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        52: aload         5
        54: invokevirtual #493                // Method org/sireum/parser/Antlr3Util$Node.buffer:()Lscala/collection/mutable/ListBuffer;
        57: invokevirtual #508                // Method scala/collection/mutable/ListBuffer.toSeq:()Lscala/collection/immutable/Seq;
        60: invokevirtual #448                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        63: getstatic     #127                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        66: aload         6
        68: invokevirtual #131                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        71: aload_0
        72: aload         6
        74: invokevirtual #510                // Method sha3:(Ljava/lang/String;)I
        77: invokevirtual #481                // Method org/sireum/parser/ParseTree$Node$.apply:(Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
        80: astore_2
        81: goto          84
        84: aload_2
        85: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 21
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 59
          locals = [ class org/sireum/parser/Antlr3Util$Adaptor, class java/lang/Object, class org/sireum/parser/ParseTree, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 88: 0
        line 89: 2
        line 91: 24
        line 92: 30
        line 93: 43
        line 88: 84
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30      50     5  node   Lorg/sireum/parser/Antlr3Util$Node;
           43      37     6  name   Ljava/lang/String;
            0      86     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      86     1  root   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      root                           final

  public int getUniqueID(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1  node   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      node                           final

  public java.lang.Object becomeRoot(org.antlr.runtime.Token, java.lang.Object);
    descriptor: (Lorg/antlr/runtime/Token;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1 newRoot   Lorg/antlr/runtime/Token;
            0      10     2 oldRoot   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      newRoot                        final
      oldRoot                        final

  public java.lang.Object create(int, org.antlr.runtime.Token);
    descriptor: (ILorg/antlr/runtime/Token;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 100: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1 tokenType   I
            0      10     2 fromToken   Lorg/antlr/runtime/Token;
    MethodParameters:
      Name                           Flags
      tokenType                      final
      fromToken                      final

  public java.lang.Object create(int, org.antlr.runtime.Token, java.lang.String);
    descriptor: (ILorg/antlr/runtime/Token;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1 tokenType   I
            0      10     2 fromToken   Lorg/antlr/runtime/Token;
            0      10     3  text   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      tokenType                      final
      fromToken                      final
      text                           final

  public java.lang.Object create(int, java.lang.String);
    descriptor: (ILjava/lang/String;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1 tokenType   I
            0      10     2  text   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      tokenType                      final
      text                           final

  public int getType(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void setType(java.lang.Object, int);
    descriptor: (Ljava/lang/Object;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
            0      10     2  type   I
    MethodParameters:
      Name                           Flags
      t                              final
      type                           final

  public java.lang.String getText(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void setText(java.lang.Object, java.lang.String);
    descriptor: (Ljava/lang/Object;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
            0      10     2  text   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      t                              final
      text                           final

  public org.antlr.runtime.Token getToken(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lorg/antlr/runtime/Token;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void setTokenBoundaries(java.lang.Object, org.antlr.runtime.Token, org.antlr.runtime.Token);
    descriptor: (Ljava/lang/Object;Lorg/antlr/runtime/Token;Lorg/antlr/runtime/Token;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=4
         0: aload_1
         1: astore        5
         3: aload         5
         5: instanceof    #41                 // class org/sireum/parser/Antlr3Util$Node
         8: ifeq          48
        11: aload         5
        13: checkcast     #41                 // class org/sireum/parser/Antlr3Util$Node
        16: astore        6
        18: aload         6
        20: aload_2
        21: invokeinterface #534,  1          // InterfaceMethod org/antlr/runtime/Token.getTokenIndex:()I
        26: invokevirtual #537                // Method org/sireum/parser/Antlr3Util$Node.start_$eq:(I)V
        29: aload         6
        31: aload_3
        32: invokeinterface #534,  1          // InterfaceMethod org/antlr/runtime/Token.getTokenIndex:()I
        37: invokevirtual #540                // Method org/sireum/parser/Antlr3Util$Node.stop_$eq:(I)V
        40: getstatic     #107                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        43: astore        4
        45: goto          102
        48: goto          51
        51: aload         5
        53: instanceof    #44                 // class org/sireum/parser/ParseTree$Leaf
        56: ifeq          69
        59: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        62: ldc_w         #542                // String Please generate the lexer/parser using the (patched) AntlrWorks at https://github.com/sireum/antlrworks
        65: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        68: athrow
        69: goto          72
        72: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        75: new           #450                // class java/lang/StringBuilder
        78: dup
        79: ldc_w         #543                // int 12
        82: invokespecial #452                // Method java/lang/StringBuilder."<init>":(I)V
        85: ldc_w         #545                // String Infeasible:
        88: invokevirtual #456                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        91: aload_1
        92: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        95: invokevirtual #478                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        98: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
       101: athrow
       102: return
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 48
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 17 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/sireum/parser/Antlr3Util$Adaptor, class java/lang/Object, class org/antlr/runtime/Token, class org/antlr/runtime/Token, class scala/runtime/BoxedUnit, class java/lang/Object, class org/sireum/parser/Antlr3Util$Node ]
          stack = []
      LineNumberTable:
        line 117: 0
        line 118: 3
        line 119: 18
        line 120: 29
        line 118: 48
        line 121: 51
        line 122: 59
        line 121: 69
        line 123: 72
        line 117: 102
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     103     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0     103     1     t   Ljava/lang/Object;
            0     103     2 startToken   Lorg/antlr/runtime/Token;
            0     103     3 stopToken   Lorg/antlr/runtime/Token;
    MethodParameters:
      Name                           Flags
      t                              final
      startToken                     final
      stopToken                      final

  public int getTokenStartIndex(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public int getTokenStopIndex(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public java.lang.Object getChild(java.lang.Object, int);
    descriptor: (Ljava/lang/Object;I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
            0      10     2     i   I
    MethodParameters:
      Name                           Flags
      t                              final
      i                              final

  public void setChild(java.lang.Object, int, java.lang.Object);
    descriptor: (Ljava/lang/Object;ILjava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
            0      10     2     i   I
            0      10     3 child   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final
      i                              final
      child                          final

  public java.lang.Object deleteChild(java.lang.Object, int);
    descriptor: (Ljava/lang/Object;I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 135: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
            0      10     2     i   I
    MethodParameters:
      Name                           Flags
      t                              final
      i                              final

  public int getChildCount(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 137: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public java.lang.Object getParent(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void setParent(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
            0      10     2 parent   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final
      parent                         final

  public int getChildIndex(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 143: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void setChildIndex(java.lang.Object, int);
    descriptor: (Ljava/lang/Object;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1     t   Ljava/lang/Object;
            0      10     2 index   I
    MethodParameters:
      Name                           Flags
      t                              final
      index                          final

  public void replaceChildren(java.lang.Object, int, int, java.lang.Object);
    descriptor: (Ljava/lang/Object;IILjava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: getstatic     #384                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: ldc_w         #386                // String Infeasible
         6: invokevirtual #390                // Method org/sireum/helper$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         9: athrow
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      10     1 parent   Ljava/lang/Object;
            0      10     2 startChildIndex   I
            0      10     3 stopChildIndex   I
            0      10     4     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      parent                         final
      startChildIndex                final
      stopChildIndex                 final
      t                              final

  public static final java.lang.Object $anonfun$sha3$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #570                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
         3: aload_0
         4: invokevirtual #572                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.parser.Antlr3Util$Adaptor(java.lang.String[], org.sireum.message.DocInfo, org.sireum.parser.ParseTree$Node);
    descriptor: ([Ljava/lang/String;Lorg/sireum/message/DocInfo;Lorg/sireum/parser/ParseTree$Node;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #292                // Field tokenNames:[Ljava/lang/String;
         5: aload_0
         6: aload_2
         7: putfield      #362                // Field docInfo:Lorg/sireum/message/DocInfo;
        10: aload_0
        11: aload_3
        12: putfield      #67                 // Field top:Lorg/sireum/parser/ParseTree$Node;
        15: aload_0
        16: invokespecial #576                // Method java/lang/Object."<init>":()V
        19: aload_0
        20: getstatic     #581                // Field scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
        23: invokevirtual #584                // Method scala/collection/mutable/HashMap$.empty:()Lscala/collection/mutable/HashMap;
        26: putfield      #76                 // Field cache:Lscala/collection/mutable/HashMap;
        29: return
      LineNumberTable:
        line 38: 0
        line 39: 10
        line 43: 19
        line 38: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/sireum/parser/Antlr3Util$Adaptor;
            0      30     1 tokenNames   [Ljava/lang/String;
            0      30     2 docInfo   Lorg/sireum/message/DocInfo;
            0      30     3   top   Lorg/sireum/parser/ParseTree$Node;
    MethodParameters:
      Name                           Flags
      tokenNames                     final
      docInfo                        final
      top                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #596,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #17= #14 of #16;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static final #22= #19 of #21;    // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #25= #24 of #21;          // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #28= #27 of #21;          // Arg=class org/sireum/ST$Arg of class org/sireum/ST
  public static #33= #30 of #32;          // BV$=class org/sireum/Z$BV$ of class org/sireum/Z
  public static #36= #35 of #30;          // Long=class org/sireum/Z$BV$Long of class org/sireum/Z$BV$
  public static final #39= #2 of #38;     // Adaptor=class org/sireum/parser/Antlr3Util$Adaptor of class org/sireum/parser/Antlr3Util
  public static final #42= #41 of #38;    // Node=class org/sireum/parser/Antlr3Util$Node of class org/sireum/parser/Antlr3Util
  public static final #47= #44 of #46;    // Leaf=class org/sireum/parser/ParseTree$Leaf of class org/sireum/parser/ParseTree
  public static #50= #49 of #46;          // Leaf$=class org/sireum/parser/ParseTree$Leaf$ of class org/sireum/parser/ParseTree
  public static final #42= #52 of #46;    // Node=class org/sireum/parser/ParseTree$Node of class org/sireum/parser/ParseTree
  public static #55= #54 of #46;          // Node$=class org/sireum/parser/ParseTree$Node$ of class org/sireum/parser/ParseTree
SourceFile: "Antlr3Util.scala"
BootstrapMethods:
  0: #241 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #229 (Ljava/lang/Object;)Ljava/lang/Object;
      #233 REF_invokeStatic org/sireum/parser/Antlr3Util$Adaptor.$anonfun$sha3$1:(Ljava/lang/Object;)Ljava/lang/Object;
      #229 (Ljava/lang/Object;)Ljava/lang/Object;
      #234 1
  1: #593 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #233 REF_invokeStatic org/sireum/parser/Antlr3Util$Adaptor.$anonfun$sha3$1:(Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xC2 (unknown attribute)
   01 01 00 26 00 E6 00 E4 01 01 0C 02 3D 01 01 E8
   01 10 01 01 F4 01 F5 01 01 F4 02 01 01 00 3E 00
   49 01 00 4D 00 4E 01 01 19 02 07 01 01 19 02 02
   01 01 19 02 05 01 01 19 01 1A 01 02 29 02 25 01
   01 7A 00 E4 01 01 88 00 E4 01 01 9D 01 9E 01 02
   24 02 25 01 02 2A 02 00 01 02 2E 02 00 01 02 2B
   00 E4 01 01 2B 02 0B 01 02 0E 02 0F 01 02 22 02
   00 01 02 23 02 00 01 01 1E 02 00 01 01 FF 02 00
   01 01 E6 01 E7 01 01 8A 00 5E 01 02 31 02 32 01
   01 F8 00 E4 01 02 27 02 28 01 02 2F 02 09 01 02
   2C 01 10 01 02 0C 02 0D 01 02 10 02 11 01 02 08
   02 09 01 00 50 00 51 01 00 3C 00 41 01 00 46 00
   47 01
  Scala: length = 0x0 (unknown attribute)

