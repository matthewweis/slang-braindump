Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$.class
  Last modified May 29, 2022; size 1914 bytes
  SHA-256 checksum aec98937ca5317b6aa1e5e278746d7fd849398a962657f870b9615359f396533
  Compiled from "FunctionConverters.scala"
public final class scala.compat.java8.functionConverterImpls.RichDoubleToIntFunctionAsFunction1$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 5, attributes: 3
Constant pool:
   #1 = Utf8               scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$
   #2 = Class              #1             // scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               FunctionConverters.scala
   #6 = Utf8               MODULE$
   #7 = Utf8               Lscala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$;
   #8 = Utf8               <clinit>
   #9 = Utf8               ()V
  #10 = Utf8               <init>
  #11 = NameAndType        #10:#9         // "<init>":()V
  #12 = Methodref          #2.#11         // scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$."<init>":()V
  #13 = NameAndType        #6:#7          // MODULE$:Lscala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$;
  #14 = Fieldref           #2.#13         // scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$.MODULE$:Lscala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$;
  #15 = Utf8               asScala$extension
  #16 = Utf8               (Ljava/util/function/DoubleToIntFunction;)Lscala/Function1;
  #17 = Utf8               (Ljava/util/function/DoubleToIntFunction;)Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;
  #18 = Utf8               $this
  #19 = Utf8               scala/compat/java8/functionConverterImpls/FromJavaDoubleToIntFunction
  #20 = Class              #19            // scala/compat/java8/functionConverterImpls/FromJavaDoubleToIntFunction
  #21 = Utf8               (Ljava/util/function/DoubleToIntFunction;)V
  #22 = NameAndType        #10:#21        // "<init>":(Ljava/util/function/DoubleToIntFunction;)V
  #23 = Methodref          #20.#22        // scala/compat/java8/functionConverterImpls/FromJavaDoubleToIntFunction."<init>":(Ljava/util/function/DoubleToIntFunction;)V
  #24 = Utf8               this
  #25 = Utf8               Ljava/util/function/DoubleToIntFunction;
  #26 = Utf8               hashCode$extension
  #27 = Utf8               (Ljava/util/function/DoubleToIntFunction;)I
  #28 = Utf8               hashCode
  #29 = Utf8               ()I
  #30 = NameAndType        #28:#29        // hashCode:()I
  #31 = Methodref          #4.#30         // java/lang/Object.hashCode:()I
  #32 = Utf8               equals$extension
  #33 = Utf8               (Ljava/util/function/DoubleToIntFunction;Ljava/lang/Object;)Z
  #34 = Utf8               x$1
  #35 = Utf8               scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1
  #36 = Class              #35            // scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1
  #37 = Utf8               scala$compat$java8$functionConverterImpls$RichDoubleToIntFunctionAsFunction1$$underlying
  #38 = Utf8               ()Ljava/util/function/DoubleToIntFunction;
  #39 = NameAndType        #37:#38        // scala$compat$java8$functionConverterImpls$RichDoubleToIntFunctionAsFunction1$$underlying:()Ljava/util/function/DoubleToIntFunction;
  #40 = Methodref          #36.#39        // scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1.scala$compat$java8$functionConverterImpls$RichDoubleToIntFunctionAsFunction1$$underlying:()Ljava/util/function/DoubleToIntFunction;
  #41 = Utf8               equals
  #42 = Utf8               (Ljava/lang/Object;)Z
  #43 = NameAndType        #41:#42        // equals:(Ljava/lang/Object;)Z
  #44 = Methodref          #4.#43         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #45 = Utf8               Ljava/lang/Object;
  #46 = Utf8               java/util/function/DoubleToIntFunction
  #47 = Class              #46            // java/util/function/DoubleToIntFunction
  #48 = Methodref          #4.#11         // java/lang/Object."<init>":()V
  #49 = Utf8               Code
  #50 = Utf8               LineNumberTable
  #51 = Utf8               LocalVariableTable
  #52 = Utf8               Signature
  #53 = Utf8               MethodParameters
  #54 = Utf8               StackMapTable
  #55 = Utf8               SourceFile
  #56 = Utf8               ScalaInlineInfo
  #57 = Utf8               Scala
{
  public static final scala.compat.java8.functionConverterImpls.RichDoubleToIntFunctionAsFunction1$ MODULE$;
    descriptor: Lscala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Lscala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$;
        10: return
      LineNumberTable:
        line 203: 0

  public final scala.Function1<java.lang.Object, java.lang.Object> asScala$extension(java.util.function.DoubleToIntFunction);
    descriptor: (Ljava/util/function/DoubleToIntFunction;)Lscala/Function1;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: new           #20                 // class scala/compat/java8/functionConverterImpls/FromJavaDoubleToIntFunction
         3: dup
         4: aload_1
         5: invokespecial #23                 // Method scala/compat/java8/functionConverterImpls/FromJavaDoubleToIntFunction."<init>":(Ljava/util/function/DoubleToIntFunction;)V
         8: areturn
      LineNumberTable:
        line 204: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$;
            0       9     1 $this   Ljava/util/function/DoubleToIntFunction;
    Signature: #17                          // (Ljava/util/function/DoubleToIntFunction;)Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int hashCode$extension(java.util.function.DoubleToIntFunction);
    descriptor: (Ljava/util/function/DoubleToIntFunction;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #31                 // Method java/lang/Object.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$;
            0       5     1 $this   Ljava/util/function/DoubleToIntFunction;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean equals$extension(java.util.function.DoubleToIntFunction, java.lang.Object);
    descriptor: (Ljava/util/function/DoubleToIntFunction;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #36                 // class scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          83
        28: aload_2
        29: ifnonnull     36
        32: aconst_null
        33: goto          43
        36: aload_2
        37: checkcast     #36                 // class scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1
        40: invokevirtual #40                 // Method scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1.scala$compat$java8$functionConverterImpls$RichDoubleToIntFunctionAsFunction1$$underlying:()Ljava/util/function/DoubleToIntFunction;
        43: astore        5
        45: aload_1
        46: aload         5
        48: astore        6
        50: dup
        51: ifnonnull     63
        54: pop
        55: aload         6
        57: ifnull        71
        60: goto          75
        63: aload         6
        65: invokevirtual #44                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        68: ifeq          75
        71: iconst_1
        72: goto          76
        75: iconst_0
        76: ifeq          83
        79: iconst_1
        80: goto          84
        83: iconst_0
        84: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$, class java/util/function/DoubleToIntFunction, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/util/function/DoubleToIntFunction ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$, class java/util/function/DoubleToIntFunction, class java/lang/Object, int, class java/lang/Object, class java/util/function/DoubleToIntFunction, class java/util/function/DoubleToIntFunction ]
          stack = [ class java/util/function/DoubleToIntFunction ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      85     0  this   Lscala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$;
            0      85     1 $this   Ljava/util/function/DoubleToIntFunction;
            0      85     2   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  private scala.compat.java8.functionConverterImpls.RichDoubleToIntFunctionAsFunction1$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #48                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/functionConverterImpls/RichDoubleToIntFunctionAsFunction1$;
}
SourceFile: "FunctionConverters.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 01 00 04 00 0A 00 09 01 00 0F 00 10 05 00 20
   00 21 01 00 1A 00 1B 01
  Scala: length = 0x0 (unknown attribute)

