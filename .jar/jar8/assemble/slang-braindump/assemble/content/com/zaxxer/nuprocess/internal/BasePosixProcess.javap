Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/zaxxer/nuprocess/internal/BasePosixProcess.class
  Last modified May 29, 2022; size 14503 bytes
  SHA-256 checksum c1cc5941e89f2c98eaa04eab2c6f71c3b18de72871e41dd35ee5d0d37aaf9894
  Compiled from "BasePosixProcess.java"
public abstract class com.zaxxer.nuprocess.internal.BasePosixProcess implements com.zaxxer.nuprocess.NuProcess
  minor version: 0
  major version: 51
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #159                        // com/zaxxer/nuprocess/internal/BasePosixProcess
  super_class: #175                       // java/lang/Object
  interfaces: 1, fields: 30, methods: 31, attributes: 2
Constant pool:
    #1 = Methodref          #175.#323     // java/lang/Object."<init>":()V
    #2 = Fieldref           #159.#324     // com/zaxxer/nuprocess/internal/BasePosixProcess.processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
    #3 = Class              #325          // java/util/concurrent/atomic/AtomicBoolean
    #4 = Methodref          #3.#323       // java/util/concurrent/atomic/AtomicBoolean."<init>":()V
    #5 = Fieldref           #159.#326     // com/zaxxer/nuprocess/internal/BasePosixProcess.userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
    #6 = Fieldref           #159.#327     // com/zaxxer/nuprocess/internal/BasePosixProcess.cleanlyExitedBeforeProcess:Ljava/util/concurrent/atomic/AtomicBoolean;
    #7 = Class              #328          // java/util/concurrent/atomic/AtomicInteger
    #8 = Methodref          #7.#323       // java/util/concurrent/atomic/AtomicInteger."<init>":()V
    #9 = Fieldref           #159.#329     // com/zaxxer/nuprocess/internal/BasePosixProcess.exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
   #10 = Class              #330          // java/util/concurrent/CountDownLatch
   #11 = Methodref          #10.#331      // java/util/concurrent/CountDownLatch."<init>":(I)V
   #12 = Fieldref           #159.#332     // com/zaxxer/nuprocess/internal/BasePosixProcess.exitPending:Ljava/util/concurrent/CountDownLatch;
   #13 = Class              #333          // com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor
   #14 = Methodref          #13.#331      // com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor."<init>":(I)V
   #15 = Fieldref           #159.#334     // com/zaxxer/nuprocess/internal/BasePosixProcess.stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
   #16 = Fieldref           #159.#335     // com/zaxxer/nuprocess/internal/BasePosixProcess.stdout:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
   #17 = Fieldref           #159.#336     // com/zaxxer/nuprocess/internal/BasePosixProcess.stderr:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
   #18 = Fieldref           #159.#337     // com/zaxxer/nuprocess/internal/BasePosixProcess.stdinClosing:Ljava/util/concurrent/atomic/AtomicBoolean;
   #19 = Fieldref           #159.#338     // com/zaxxer/nuprocess/internal/BasePosixProcess.outClosed:Z
   #20 = Fieldref           #159.#339     // com/zaxxer/nuprocess/internal/BasePosixProcess.errClosed:Z
   #21 = Fieldref           #159.#340     // com/zaxxer/nuprocess/internal/BasePosixProcess.isRunning:Z
   #22 = Methodref          #10.#341      // java/util/concurrent/CountDownLatch.await:()V
   #23 = Methodref          #10.#342      // java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
   #24 = Class              #343          // java/lang/Integer
   #25 = Integer            -2147483648
   #26 = Methodref          #7.#344       // java/util/concurrent/atomic/AtomicInteger.get:()I
   #27 = Fieldref           #159.#345     // com/zaxxer/nuprocess/internal/BasePosixProcess.pid:I
   #28 = Class              #346          // com/zaxxer/nuprocess/internal/LibC
   #29 = Methodref          #28.#347      // com/zaxxer/nuprocess/internal/LibC.kill:(II)I
   #30 = String             #348          // Sending signal failed
   #31 = Methodref          #159.#349     // com/zaxxer/nuprocess/internal/BasePosixProcess.checkReturnCode:(ILjava/lang/String;)V
   #32 = Methodref          #13.#350      // com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.acquire:()I
   #33 = Methodref          #3.#351       // java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
   #34 = Fieldref           #159.#352     // com/zaxxer/nuprocess/internal/BasePosixProcess.myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
   #35 = InterfaceMethodref #168.#353     // com/zaxxer/nuprocess/internal/IEventProcessor.queueWrite:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
   #36 = Class              #354          // java/lang/IllegalStateException
   #37 = String             #355          // closeStdin() method has already been called.
   #38 = Methodref          #36.#356      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #39 = Methodref          #13.#357      // com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.release:()V
   #40 = InterfaceMethodref #168.#358     // com/zaxxer/nuprocess/internal/IEventProcessor.closeStdin:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
   #41 = Methodref          #13.#359      // com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.close:()V
   #42 = Methodref          #3.#360       // java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
   #43 = Fieldref           #159.#361     // com/zaxxer/nuprocess/internal/BasePosixProcess.pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
   #44 = Fieldref           #159.#362     // com/zaxxer/nuprocess/internal/BasePosixProcess.STDIN_CLOSED_PENDING_WRITE_TOMBSTONE:Ljava/nio/ByteBuffer;
   #45 = Methodref          #107.#363     // java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
   #46 = Methodref          #3.#364       // java/util/concurrent/atomic/AtomicBoolean.get:()Z
   #47 = Methodref          #107.#365     // java/util/concurrent/ConcurrentLinkedQueue.isEmpty:()Z
   #48 = Fieldref           #159.#366     // com/zaxxer/nuprocess/internal/BasePosixProcess.IS_SOFTEXIT_DETECTION:Z
   #49 = Methodref          #10.#367      // java/util/concurrent/CountDownLatch.getCount:()J
   #50 = Methodref          #159.#368     // com/zaxxer/nuprocess/internal/BasePosixProcess.closeStdin:(Z)V
   #51 = Methodref          #7.#369       // java/util/concurrent/atomic/AtomicInteger.set:(I)V
   #52 = Fieldref           #159.#370     // com/zaxxer/nuprocess/internal/BasePosixProcess.outBuffer:Ljava/nio/ByteBuffer;
   #53 = Methodref          #87.#371      // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
   #54 = InterfaceMethodref #372.#373     // com/zaxxer/nuprocess/NuProcessHandler.onStdout:(Ljava/nio/ByteBuffer;Z)V
   #55 = Fieldref           #159.#374     // com/zaxxer/nuprocess/internal/BasePosixProcess.errBuffer:Ljava/nio/ByteBuffer;
   #56 = InterfaceMethodref #372.#375     // com/zaxxer/nuprocess/NuProcessHandler.onStderr:(Ljava/nio/ByteBuffer;Z)V
   #57 = Integer            2147483646
   #58 = InterfaceMethodref #372.#376     // com/zaxxer/nuprocess/NuProcessHandler.onExit:(I)V
   #59 = Methodref          #10.#377      // java/util/concurrent/CountDownLatch.countDown:()V
   #60 = Fieldref           #159.#378     // com/zaxxer/nuprocess/internal/BasePosixProcess.outBufferMemory:Lcom/sun/jna/Memory;
   #61 = Fieldref           #159.#379     // com/zaxxer/nuprocess/internal/BasePosixProcess.errBufferMemory:Lcom/sun/jna/Memory;
   #62 = Fieldref           #159.#380     // com/zaxxer/nuprocess/internal/BasePosixProcess.inBufferMemory:Lcom/sun/jna/Memory;
   #63 = Fieldref           #159.#381     // com/zaxxer/nuprocess/internal/BasePosixProcess.inBuffer:Ljava/nio/ByteBuffer;
   #64 = Methodref          #109.#382     // com/sun/jna/Memory.purge:()V
   #65 = Class              #383          // java/lang/Exception
   #66 = Fieldref           #159.#384     // com/zaxxer/nuprocess/internal/BasePosixProcess.LOGGER:Ljava/util/logging/Logger;
   #67 = Fieldref           #385.#386     // java/util/logging/Level.WARNING:Ljava/util/logging/Level;
   #68 = String             #387          // Exception thrown from handler
   #69 = Methodref          #388.#389     // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
   #70 = Methodref          #87.#390      // java/nio/ByteBuffer.remaining:()I
   #71 = Methodref          #391.#392     // java/lang/Math.min:(II)I
   #72 = Methodref          #28.#393      // com/zaxxer/nuprocess/internal/LibC.read:(ILjava/nio/ByteBuffer;I)I
   #73 = Class              #394          // java/lang/RuntimeException
   #74 = String             #395          // Unexpected eof
   #75 = Methodref          #73.#356      // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   #76 = Methodref          #87.#396      // java/nio/ByteBuffer.position:()I
   #77 = Methodref          #87.#397      // java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
   #78 = Methodref          #87.#398      // java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
   #79 = Methodref          #87.#399      // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
   #80 = Methodref          #87.#400      // java/nio/ByteBuffer.hasRemaining:()Z
   #81 = String             #401          // stdout buffer has no bytes remaining
   #82 = String             #402          // stderr buffer has no bytes remaining
   #83 = Methodref          #28.#403      // com/zaxxer/nuprocess/internal/LibC.write:(ILjava/nio/ByteBuffer;I)I
   #84 = Methodref          #404.#405     // com/sun/jna/Native.getLastError:()I
   #85 = Methodref          #87.#406      // java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
   #86 = Methodref          #107.#407     // java/util/concurrent/ConcurrentLinkedQueue.peek:()Ljava/lang/Object;
   #87 = Class              #408          // java/nio/ByteBuffer
   #88 = Methodref          #107.#409     // java/util/concurrent/ConcurrentLinkedQueue.clear:()V
   #89 = Class              #410          // com/zaxxer/nuprocess/NuProcess
   #90 = Integer            65536
   #91 = Methodref          #87.#411      // java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
   #92 = Methodref          #87.#412      // java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
   #93 = Methodref          #107.#413     // java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
   #94 = Methodref          #159.#414     // com/zaxxer/nuprocess/internal/BasePosixProcess.writeStdin:(II)Z
   #95 = InterfaceMethodref #372.#415     // com/zaxxer/nuprocess/NuProcessHandler.onStdinReady:(Ljava/nio/ByteBuffer;)Z
   #96 = Fieldref           #385.#416     // java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
   #97 = Class              #417          // java/lang/StringBuilder
   #98 = Methodref          #97.#323      // java/lang/StringBuilder."<init>":()V
   #99 = String             #418          // Exception thrown handling writes to stdin
  #100 = Methodref          #97.#419      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #101 = Methodref          #97.#420      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #102 = Methodref          #97.#421      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #103 = String             #422          // nuprocess.test.afterStartSleep
  #104 = Methodref          #24.#423      // java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
  #105 = Methodref          #24.#424      // java/lang/Integer.intValue:()I
  #106 = Methodref          #425.#426     // java/util/concurrent/locks/LockSupport.parkNanos:(J)V
  #107 = Class              #427          // java/util/concurrent/ConcurrentLinkedQueue
  #108 = Methodref          #107.#323     // java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
  #109 = Class              #428          // com/sun/jna/Memory
  #110 = Long               65536l
  #112 = Methodref          #109.#429     // com/sun/jna/Memory."<init>":(J)V
  #113 = Methodref          #109.#430     // com/sun/jna/Memory.size:()J
  #114 = Methodref          #109.#431     // com/sun/jna/Memory.getByteBuffer:(JJ)Ljava/nio/ByteBuffer;
  #115 = Methodref          #432.#433     // java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
  #116 = Methodref          #87.#434      // java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
  #117 = Fieldref           #159.#435     // com/zaxxer/nuprocess/internal/BasePosixProcess.processors:[Lcom/zaxxer/nuprocess/internal/IEventProcessor;
  #118 = Fieldref           #159.#436     // com/zaxxer/nuprocess/internal/BasePosixProcess.processorRoundRobin:I
  #119 = InterfaceMethodref #168.#437     // com/zaxxer/nuprocess/internal/IEventProcessor.registerProcess:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
  #120 = InterfaceMethodref #168.#438     // com/zaxxer/nuprocess/internal/IEventProcessor.checkAndSetRunning:()Z
  #121 = InterfaceMethodref #168.#439     // com/zaxxer/nuprocess/internal/IEventProcessor.getSpawnBarrier:()Ljava/util/concurrent/CyclicBarrier;
  #122 = Class              #440          // java/lang/Thread
  #123 = String             #441          // ProcessQueue
  #124 = Methodref          #97.#442      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #125 = Methodref          #122.#443     // java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
  #126 = Methodref          #122.#444     // java/lang/Thread.setDaemon:(Z)V
  #127 = Methodref          #122.#445     // java/lang/Thread.start:()V
  #128 = Methodref          #294.#446     // java/util/concurrent/CyclicBarrier.await:()I
  #129 = Methodref          #73.#447      // java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
  #130 = InterfaceMethodref #372.#448     // com/zaxxer/nuprocess/NuProcessHandler.onPreStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
  #131 = InterfaceMethodref #372.#449     // com/zaxxer/nuprocess/NuProcessHandler.onStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
  #132 = Methodref          #28.#450      // com/zaxxer/nuprocess/internal/LibC.pipe:([I)I
  #133 = String             #451          // Create stdin pipe() failed
  #134 = String             #452          // Create stdout pipe() failed
  #135 = String             #453          // Create stderr pipe() failed
  #136 = Methodref          #159.#454     // com/zaxxer/nuprocess/internal/BasePosixProcess.setNonBlocking:(III)V
  #137 = Fieldref           #159.#455     // com/zaxxer/nuprocess/internal/BasePosixProcess.stdinWidow:I
  #138 = Fieldref           #159.#456     // com/zaxxer/nuprocess/internal/BasePosixProcess.stdoutWidow:I
  #139 = Fieldref           #159.#457     // com/zaxxer/nuprocess/internal/BasePosixProcess.stderrWidow:I
  #140 = String             #458          // Error creating pipes
  #141 = Methodref          #159.#459     // com/zaxxer/nuprocess/internal/BasePosixProcess.initFailureCleanup:([I[I[I)V
  #142 = Class              #460          // java/util/HashSet
  #143 = Methodref          #142.#323     // java/util/HashSet."<init>":()V
  #144 = Methodref          #24.#461      // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #145 = InterfaceMethodref #312.#363     // java/util/Set.add:(Ljava/lang/Object;)Z
  #146 = InterfaceMethodref #312.#462     // java/util/Set.remove:(Ljava/lang/Object;)Z
  #147 = InterfaceMethodref #312.#463     // java/util/Set.iterator:()Ljava/util/Iterator;
  #148 = InterfaceMethodref #313.#464     // java/util/Iterator.hasNext:()Z
  #149 = InterfaceMethodref #313.#465     // java/util/Iterator.next:()Ljava/lang/Object;
  #150 = Methodref          #28.#466      // com/zaxxer/nuprocess/internal/LibC.close:(I)I
  #151 = String             #467          // , return code:
  #152 = String             #468          // , last error:
  #153 = Methodref          #28.#469      // com/zaxxer/nuprocess/internal/LibC.fcntl:(II)I
  #154 = Fieldref           #28.#470      // com/zaxxer/nuprocess/internal/LibC.O_NONBLOCK:I
  #155 = Methodref          #28.#471      // com/zaxxer/nuprocess/internal/LibC.fcntl:(IIJ)I
  #156 = String             #472          // fnctl on stdin handle failed
  #157 = String             #473          // fnctl on stdout handle failed
  #158 = String             #474          // fnctl on stderr handle failed
  #159 = Class              #475          // com/zaxxer/nuprocess/internal/BasePosixProcess
  #160 = Methodref          #476.#477     // java/lang/Class.getCanonicalName:()Ljava/lang/String;
  #161 = Methodref          #388.#478     // java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
  #162 = Methodref          #87.#479      // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
  #163 = String             #480          // com.zaxxer.nuprocess.softExitDetection
  #164 = String             #481          // true
  #165 = Methodref          #482.#483     // java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #166 = Methodref          #484.#485     // java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
  #167 = Fieldref           #486.#487     // com/zaxxer/nuprocess/internal/Constants.NUMBER_OF_THREADS:I
  #168 = Class              #488          // com/zaxxer/nuprocess/internal/IEventProcessor
  #169 = String             #489          // com.zaxxer.nuprocess.enableShutdownHook
  #170 = Methodref          #490.#491     // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
  #171 = Class              #492          // com/zaxxer/nuprocess/internal/BasePosixProcess$1
  #172 = Methodref          #171.#323     // com/zaxxer/nuprocess/internal/BasePosixProcess$1."<init>":()V
  #173 = Methodref          #122.#493     // java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
  #174 = Methodref          #490.#494     // java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
  #175 = Class              #495          // java/lang/Object
  #176 = Utf8               InnerClasses
  #177 = Utf8               LOGGER
  #178 = Utf8               Ljava/util/logging/Logger;
  #179 = Utf8               IS_SOFTEXIT_DETECTION
  #180 = Utf8               Z
  #181 = Utf8               STDIN_CLOSED_PENDING_WRITE_TOMBSTONE
  #182 = Utf8               Ljava/nio/ByteBuffer;
  #183 = Utf8               processors
  #184 = Utf8               [Lcom/zaxxer/nuprocess/internal/IEventProcessor;
  #185 = Utf8               Signature
  #186 = Utf8               [Lcom/zaxxer/nuprocess/internal/IEventProcessor<+Lcom/zaxxer/nuprocess/internal/BasePosixProcess;>;
  #187 = Utf8               processorRoundRobin
  #188 = Utf8               I
  #189 = Utf8               exitcode
  #190 = Utf8               myProcessor
  #191 = Utf8               Lcom/zaxxer/nuprocess/internal/IEventProcessor;
  #192 = Utf8               Lcom/zaxxer/nuprocess/internal/IEventProcessor<-Lcom/zaxxer/nuprocess/internal/BasePosixProcess;>;
  #193 = Utf8               processHandler
  #194 = Utf8               Lcom/zaxxer/nuprocess/NuProcessHandler;
  #195 = Utf8               pid
  #196 = Utf8               isRunning
  #197 = Utf8               cleanlyExitedBeforeProcess
  #198 = Utf8               Ljava/util/concurrent/atomic/AtomicBoolean;
  #199 = Utf8               exitCode
  #200 = Utf8               Ljava/util/concurrent/atomic/AtomicInteger;
  #201 = Utf8               exitPending
  #202 = Utf8               Ljava/util/concurrent/CountDownLatch;
  #203 = Utf8               userWantsWrite
  #204 = Utf8               outBufferMemory
  #205 = Utf8               Lcom/sun/jna/Memory;
  #206 = Utf8               errBufferMemory
  #207 = Utf8               inBufferMemory
  #208 = Utf8               outBuffer
  #209 = Utf8               errBuffer
  #210 = Utf8               inBuffer
  #211 = Utf8               stdin
  #212 = Utf8               Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
  #213 = Utf8               stdout
  #214 = Utf8               stderr
  #215 = Utf8               stdinWidow
  #216 = Utf8               stdoutWidow
  #217 = Utf8               stderrWidow
  #218 = Utf8               stdinClosing
  #219 = Utf8               outClosed
  #220 = Utf8               errClosed
  #221 = Utf8               pendingWrites
  #222 = Utf8               Ljava/util/concurrent/ConcurrentLinkedQueue;
  #223 = Utf8               Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/nio/ByteBuffer;>;
  #224 = Utf8               <init>
  #225 = Utf8               (Lcom/zaxxer/nuprocess/NuProcessHandler;)V
  #226 = Utf8               Code
  #227 = Utf8               LineNumberTable
  #228 = Utf8               LocalVariableTable
  #229 = Utf8               this
  #230 = Utf8               Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
  #231 = Utf8               processListener
  #232 = Utf8               start
  #233 = Utf8               (Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)Lcom/zaxxer/nuprocess/NuProcess;
  #234 = Utf8               (Ljava/util/List<Ljava/lang/String;>;[Ljava/lang/String;Ljava/nio/file/Path;)Lcom/zaxxer/nuprocess/NuProcess;
  #235 = Utf8               run
  #236 = Utf8               (Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)V
  #237 = Utf8               (Ljava/util/List<Ljava/lang/String;>;[Ljava/lang/String;Ljava/nio/file/Path;)V
  #238 = Utf8               ()Z
  #239 = Utf8               waitFor
  #240 = Utf8               (JLjava/util/concurrent/TimeUnit;)I
  #241 = Utf8               timeout
  #242 = Utf8               J
  #243 = Utf8               unit
  #244 = Utf8               Ljava/util/concurrent/TimeUnit;
  #245 = Utf8               StackMapTable
  #246 = Utf8               Exceptions
  #247 = Class              #496          // java/lang/InterruptedException
  #248 = Utf8               destroy
  #249 = Utf8               (Z)V
  #250 = Utf8               force
  #251 = Utf8               wantWrite
  #252 = Utf8               ()V
  #253 = Utf8               fd
  #254 = Class              #497          // java/lang/Throwable
  #255 = Utf8               closeStdin
  #256 = Utf8               writeStdin
  #257 = Utf8               (Ljava/nio/ByteBuffer;)V
  #258 = Utf8               closing
  #259 = Utf8               buffer
  #260 = Utf8               hasPendingWrites
  #261 = Utf8               setProcessHandler
  #262 = Utf8               getPid
  #263 = Utf8               ()I
  #264 = Utf8               getPID
  #265 = Utf8               getStdin
  #266 = Utf8               ()Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
  #267 = Utf8               getStdout
  #268 = Utf8               getStderr
  #269 = Utf8               isSoftExit
  #270 = Utf8               onExit
  #271 = Utf8               (I)V
  #272 = Utf8               e
  #273 = Utf8               Ljava/lang/Exception;
  #274 = Utf8               statusCode
  #275 = Utf8               readStdout
  #276 = Utf8               (II)V
  #277 = Utf8               read
  #278 = Utf8               availability
  #279 = Utf8               readStderr
  #280 = Utf8               (II)Z
  #281 = Utf8               errno
  #282 = Utf8               wrote
  #283 = Utf8               slice
  #284 = Utf8               byteBuffer
  #285 = Utf8               afterStart
  #286 = Utf8               testSleep
  #287 = Utf8               initializeBuffers
  #288 = Utf8               registerProcess
  #289 = Utf8               mySlot
  #290 = Utf8               spawnBarrier
  #291 = Utf8               Ljava/util/concurrent/CyclicBarrier;
  #292 = Utf8               t
  #293 = Utf8               Ljava/lang/Thread;
  #294 = Class              #498          // java/util/concurrent/CyclicBarrier
  #295 = Utf8               callPreStart
  #296 = Utf8               callStart
  #297 = Utf8               createPipes
  #298 = Utf8               ()[I
  #299 = Utf8               rc
  #300 = Utf8               Ljava/lang/RuntimeException;
  #301 = Utf8               in
  #302 = Utf8               [I
  #303 = Utf8               out
  #304 = Utf8               err
  #305 = Class              #302          // "[I"
  #306 = Utf8               initFailureCleanup
  #307 = Utf8               ([I[I[I)V
  #308 = Utf8               unique
  #309 = Utf8               Ljava/util/Set;
  #310 = Utf8               LocalVariableTypeTable
  #311 = Utf8               Ljava/util/Set<Ljava/lang/Integer;>;
  #312 = Class              #499          // java/util/Set
  #313 = Class              #500          // java/util/Iterator
  #314 = Utf8               checkReturnCode
  #315 = Utf8               (ILjava/lang/String;)V
  #316 = Utf8               failureMessage
  #317 = Utf8               Ljava/lang/String;
  #318 = Utf8               setNonBlocking
  #319 = Utf8               (III)V
  #320 = Utf8               <clinit>
  #321 = Utf8               SourceFile
  #322 = Utf8               BasePosixProcess.java
  #323 = NameAndType        #224:#252     // "<init>":()V
  #324 = NameAndType        #193:#194     // processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
  #325 = Utf8               java/util/concurrent/atomic/AtomicBoolean
  #326 = NameAndType        #203:#198     // userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
  #327 = NameAndType        #197:#198     // cleanlyExitedBeforeProcess:Ljava/util/concurrent/atomic/AtomicBoolean;
  #328 = Utf8               java/util/concurrent/atomic/AtomicInteger
  #329 = NameAndType        #199:#200     // exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
  #330 = Utf8               java/util/concurrent/CountDownLatch
  #331 = NameAndType        #224:#271     // "<init>":(I)V
  #332 = NameAndType        #201:#202     // exitPending:Ljava/util/concurrent/CountDownLatch;
  #333 = Utf8               com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor
  #334 = NameAndType        #211:#212     // stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
  #335 = NameAndType        #213:#212     // stdout:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
  #336 = NameAndType        #214:#212     // stderr:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
  #337 = NameAndType        #218:#198     // stdinClosing:Ljava/util/concurrent/atomic/AtomicBoolean;
  #338 = NameAndType        #219:#180     // outClosed:Z
  #339 = NameAndType        #220:#180     // errClosed:Z
  #340 = NameAndType        #196:#180     // isRunning:Z
  #341 = NameAndType        #501:#252     // await:()V
  #342 = NameAndType        #501:#502     // await:(JLjava/util/concurrent/TimeUnit;)Z
  #343 = Utf8               java/lang/Integer
  #344 = NameAndType        #503:#263     // get:()I
  #345 = NameAndType        #195:#188     // pid:I
  #346 = Utf8               com/zaxxer/nuprocess/internal/LibC
  #347 = NameAndType        #504:#505     // kill:(II)I
  #348 = Utf8               Sending signal failed
  #349 = NameAndType        #314:#315     // checkReturnCode:(ILjava/lang/String;)V
  #350 = NameAndType        #506:#263     // acquire:()I
  #351 = NameAndType        #507:#249     // set:(Z)V
  #352 = NameAndType        #190:#191     // myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
  #353 = NameAndType        #508:#509     // queueWrite:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
  #354 = Utf8               java/lang/IllegalStateException
  #355 = Utf8               closeStdin() method has already been called.
  #356 = NameAndType        #224:#510     // "<init>":(Ljava/lang/String;)V
  #357 = NameAndType        #511:#252     // release:()V
  #358 = NameAndType        #255:#509     // closeStdin:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
  #359 = NameAndType        #512:#252     // close:()V
  #360 = NameAndType        #513:#514     // compareAndSet:(ZZ)Z
  #361 = NameAndType        #221:#222     // pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
  #362 = NameAndType        #181:#182     // STDIN_CLOSED_PENDING_WRITE_TOMBSTONE:Ljava/nio/ByteBuffer;
  #363 = NameAndType        #515:#516     // add:(Ljava/lang/Object;)Z
  #364 = NameAndType        #503:#238     // get:()Z
  #365 = NameAndType        #517:#238     // isEmpty:()Z
  #366 = NameAndType        #179:#180     // IS_SOFTEXIT_DETECTION:Z
  #367 = NameAndType        #518:#519     // getCount:()J
  #368 = NameAndType        #255:#249     // closeStdin:(Z)V
  #369 = NameAndType        #507:#271     // set:(I)V
  #370 = NameAndType        #208:#182     // outBuffer:Ljava/nio/ByteBuffer;
  #371 = NameAndType        #520:#521     // flip:()Ljava/nio/ByteBuffer;
  #372 = Class              #522          // com/zaxxer/nuprocess/NuProcessHandler
  #373 = NameAndType        #523:#524     // onStdout:(Ljava/nio/ByteBuffer;Z)V
  #374 = NameAndType        #209:#182     // errBuffer:Ljava/nio/ByteBuffer;
  #375 = NameAndType        #525:#524     // onStderr:(Ljava/nio/ByteBuffer;Z)V
  #376 = NameAndType        #270:#271     // onExit:(I)V
  #377 = NameAndType        #526:#252     // countDown:()V
  #378 = NameAndType        #204:#205     // outBufferMemory:Lcom/sun/jna/Memory;
  #379 = NameAndType        #206:#205     // errBufferMemory:Lcom/sun/jna/Memory;
  #380 = NameAndType        #207:#205     // inBufferMemory:Lcom/sun/jna/Memory;
  #381 = NameAndType        #210:#182     // inBuffer:Ljava/nio/ByteBuffer;
  #382 = NameAndType        #527:#252     // purge:()V
  #383 = Utf8               java/lang/Exception
  #384 = NameAndType        #177:#178     // LOGGER:Ljava/util/logging/Logger;
  #385 = Class              #528          // java/util/logging/Level
  #386 = NameAndType        #529:#530     // WARNING:Ljava/util/logging/Level;
  #387 = Utf8               Exception thrown from handler
  #388 = Class              #531          // java/util/logging/Logger
  #389 = NameAndType        #532:#533     // log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
  #390 = NameAndType        #534:#263     // remaining:()I
  #391 = Class              #535          // java/lang/Math
  #392 = NameAndType        #536:#505     // min:(II)I
  #393 = NameAndType        #277:#537     // read:(ILjava/nio/ByteBuffer;I)I
  #394 = Utf8               java/lang/RuntimeException
  #395 = Utf8               Unexpected eof
  #396 = NameAndType        #538:#263     // position:()I
  #397 = NameAndType        #539:#540     // limit:(I)Ljava/nio/ByteBuffer;
  #398 = NameAndType        #538:#540     // position:(I)Ljava/nio/ByteBuffer;
  #399 = NameAndType        #541:#521     // compact:()Ljava/nio/ByteBuffer;
  #400 = NameAndType        #542:#238     // hasRemaining:()Z
  #401 = Utf8               stdout buffer has no bytes remaining
  #402 = Utf8               stderr buffer has no bytes remaining
  #403 = NameAndType        #543:#537     // write:(ILjava/nio/ByteBuffer;I)I
  #404 = Class              #544          // com/sun/jna/Native
  #405 = NameAndType        #545:#263     // getLastError:()I
  #406 = NameAndType        #546:#521     // clear:()Ljava/nio/ByteBuffer;
  #407 = NameAndType        #547:#548     // peek:()Ljava/lang/Object;
  #408 = Utf8               java/nio/ByteBuffer
  #409 = NameAndType        #546:#252     // clear:()V
  #410 = Utf8               com/zaxxer/nuprocess/NuProcess
  #411 = NameAndType        #283:#521     // slice:()Ljava/nio/ByteBuffer;
  #412 = NameAndType        #549:#550     // put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #413 = NameAndType        #551:#548     // poll:()Ljava/lang/Object;
  #414 = NameAndType        #256:#280     // writeStdin:(II)Z
  #415 = NameAndType        #552:#553     // onStdinReady:(Ljava/nio/ByteBuffer;)Z
  #416 = NameAndType        #554:#530     // SEVERE:Ljava/util/logging/Level;
  #417 = Utf8               java/lang/StringBuilder
  #418 = Utf8               Exception thrown handling writes to stdin
  #419 = NameAndType        #555:#556     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #420 = NameAndType        #555:#557     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #421 = NameAndType        #558:#559     // toString:()Ljava/lang/String;
  #422 = Utf8               nuprocess.test.afterStartSleep
  #423 = NameAndType        #560:#561     // getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
  #424 = NameAndType        #562:#263     // intValue:()I
  #425 = Class              #563          // java/util/concurrent/locks/LockSupport
  #426 = NameAndType        #564:#565     // parkNanos:(J)V
  #427 = Utf8               java/util/concurrent/ConcurrentLinkedQueue
  #428 = Utf8               com/sun/jna/Memory
  #429 = NameAndType        #224:#565     // "<init>":(J)V
  #430 = NameAndType        #566:#519     // size:()J
  #431 = NameAndType        #567:#568     // getByteBuffer:(JJ)Ljava/nio/ByteBuffer;
  #432 = Class              #569          // java/nio/ByteOrder
  #433 = NameAndType        #570:#571     // nativeOrder:()Ljava/nio/ByteOrder;
  #434 = NameAndType        #572:#573     // order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
  #435 = NameAndType        #183:#184     // processors:[Lcom/zaxxer/nuprocess/internal/IEventProcessor;
  #436 = NameAndType        #187:#188     // processorRoundRobin:I
  #437 = NameAndType        #288:#509     // registerProcess:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
  #438 = NameAndType        #574:#238     // checkAndSetRunning:()Z
  #439 = NameAndType        #575:#576     // getSpawnBarrier:()Ljava/util/concurrent/CyclicBarrier;
  #440 = Utf8               java/lang/Thread
  #441 = Utf8               ProcessQueue
  #442 = NameAndType        #555:#577     // append:(I)Ljava/lang/StringBuilder;
  #443 = NameAndType        #224:#578     // "<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
  #444 = NameAndType        #579:#249     // setDaemon:(Z)V
  #445 = NameAndType        #232:#252     // start:()V
  #446 = NameAndType        #501:#263     // await:()I
  #447 = NameAndType        #224:#580     // "<init>":(Ljava/lang/Throwable;)V
  #448 = NameAndType        #581:#582     // onPreStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
  #449 = NameAndType        #583:#582     // onStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
  #450 = NameAndType        #584:#585     // pipe:([I)I
  #451 = Utf8               Create stdin pipe() failed
  #452 = Utf8               Create stdout pipe() failed
  #453 = Utf8               Create stderr pipe() failed
  #454 = NameAndType        #318:#319     // setNonBlocking:(III)V
  #455 = NameAndType        #215:#188     // stdinWidow:I
  #456 = NameAndType        #216:#188     // stdoutWidow:I
  #457 = NameAndType        #217:#188     // stderrWidow:I
  #458 = Utf8               Error creating pipes
  #459 = NameAndType        #306:#307     // initFailureCleanup:([I[I[I)V
  #460 = Utf8               java/util/HashSet
  #461 = NameAndType        #586:#587     // valueOf:(I)Ljava/lang/Integer;
  #462 = NameAndType        #588:#516     // remove:(Ljava/lang/Object;)Z
  #463 = NameAndType        #589:#590     // iterator:()Ljava/util/Iterator;
  #464 = NameAndType        #591:#238     // hasNext:()Z
  #465 = NameAndType        #592:#548     // next:()Ljava/lang/Object;
  #466 = NameAndType        #512:#593     // close:(I)I
  #467 = Utf8               , return code:
  #468 = Utf8               , last error:
  #469 = NameAndType        #594:#505     // fcntl:(II)I
  #470 = NameAndType        #595:#188     // O_NONBLOCK:I
  #471 = NameAndType        #594:#596     // fcntl:(IIJ)I
  #472 = Utf8               fnctl on stdin handle failed
  #473 = Utf8               fnctl on stdout handle failed
  #474 = Utf8               fnctl on stderr handle failed
  #475 = Utf8               com/zaxxer/nuprocess/internal/BasePosixProcess
  #476 = Class              #597          // java/lang/Class
  #477 = NameAndType        #598:#559     // getCanonicalName:()Ljava/lang/String;
  #478 = NameAndType        #599:#600     // getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
  #479 = NameAndType        #601:#540     // allocate:(I)Ljava/nio/ByteBuffer;
  #480 = Utf8               com.zaxxer.nuprocess.softExitDetection
  #481 = Utf8               true
  #482 = Class              #602          // java/lang/System
  #483 = NameAndType        #603:#604     // getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #484 = Class              #605          // java/lang/Boolean
  #485 = NameAndType        #606:#607     // parseBoolean:(Ljava/lang/String;)Z
  #486 = Class              #608          // com/zaxxer/nuprocess/internal/Constants
  #487 = NameAndType        #609:#188     // NUMBER_OF_THREADS:I
  #488 = Utf8               com/zaxxer/nuprocess/internal/IEventProcessor
  #489 = Utf8               com.zaxxer.nuprocess.enableShutdownHook
  #490 = Class              #610          // java/lang/Runtime
  #491 = NameAndType        #611:#612     // getRuntime:()Ljava/lang/Runtime;
  #492 = Utf8               com/zaxxer/nuprocess/internal/BasePosixProcess$1
  #493 = NameAndType        #224:#613     // "<init>":(Ljava/lang/Runnable;)V
  #494 = NameAndType        #614:#615     // addShutdownHook:(Ljava/lang/Thread;)V
  #495 = Utf8               java/lang/Object
  #496 = Utf8               java/lang/InterruptedException
  #497 = Utf8               java/lang/Throwable
  #498 = Utf8               java/util/concurrent/CyclicBarrier
  #499 = Utf8               java/util/Set
  #500 = Utf8               java/util/Iterator
  #501 = Utf8               await
  #502 = Utf8               (JLjava/util/concurrent/TimeUnit;)Z
  #503 = Utf8               get
  #504 = Utf8               kill
  #505 = Utf8               (II)I
  #506 = Utf8               acquire
  #507 = Utf8               set
  #508 = Utf8               queueWrite
  #509 = Utf8               (Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
  #510 = Utf8               (Ljava/lang/String;)V
  #511 = Utf8               release
  #512 = Utf8               close
  #513 = Utf8               compareAndSet
  #514 = Utf8               (ZZ)Z
  #515 = Utf8               add
  #516 = Utf8               (Ljava/lang/Object;)Z
  #517 = Utf8               isEmpty
  #518 = Utf8               getCount
  #519 = Utf8               ()J
  #520 = Utf8               flip
  #521 = Utf8               ()Ljava/nio/ByteBuffer;
  #522 = Utf8               com/zaxxer/nuprocess/NuProcessHandler
  #523 = Utf8               onStdout
  #524 = Utf8               (Ljava/nio/ByteBuffer;Z)V
  #525 = Utf8               onStderr
  #526 = Utf8               countDown
  #527 = Utf8               purge
  #528 = Utf8               java/util/logging/Level
  #529 = Utf8               WARNING
  #530 = Utf8               Ljava/util/logging/Level;
  #531 = Utf8               java/util/logging/Logger
  #532 = Utf8               log
  #533 = Utf8               (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
  #534 = Utf8               remaining
  #535 = Utf8               java/lang/Math
  #536 = Utf8               min
  #537 = Utf8               (ILjava/nio/ByteBuffer;I)I
  #538 = Utf8               position
  #539 = Utf8               limit
  #540 = Utf8               (I)Ljava/nio/ByteBuffer;
  #541 = Utf8               compact
  #542 = Utf8               hasRemaining
  #543 = Utf8               write
  #544 = Utf8               com/sun/jna/Native
  #545 = Utf8               getLastError
  #546 = Utf8               clear
  #547 = Utf8               peek
  #548 = Utf8               ()Ljava/lang/Object;
  #549 = Utf8               put
  #550 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #551 = Utf8               poll
  #552 = Utf8               onStdinReady
  #553 = Utf8               (Ljava/nio/ByteBuffer;)Z
  #554 = Utf8               SEVERE
  #555 = Utf8               append
  #556 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #557 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #558 = Utf8               toString
  #559 = Utf8               ()Ljava/lang/String;
  #560 = Utf8               getInteger
  #561 = Utf8               (Ljava/lang/String;I)Ljava/lang/Integer;
  #562 = Utf8               intValue
  #563 = Utf8               java/util/concurrent/locks/LockSupport
  #564 = Utf8               parkNanos
  #565 = Utf8               (J)V
  #566 = Utf8               size
  #567 = Utf8               getByteBuffer
  #568 = Utf8               (JJ)Ljava/nio/ByteBuffer;
  #569 = Utf8               java/nio/ByteOrder
  #570 = Utf8               nativeOrder
  #571 = Utf8               ()Ljava/nio/ByteOrder;
  #572 = Utf8               order
  #573 = Utf8               (Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
  #574 = Utf8               checkAndSetRunning
  #575 = Utf8               getSpawnBarrier
  #576 = Utf8               ()Ljava/util/concurrent/CyclicBarrier;
  #577 = Utf8               (I)Ljava/lang/StringBuilder;
  #578 = Utf8               (Ljava/lang/Runnable;Ljava/lang/String;)V
  #579 = Utf8               setDaemon
  #580 = Utf8               (Ljava/lang/Throwable;)V
  #581 = Utf8               onPreStart
  #582 = Utf8               (Lcom/zaxxer/nuprocess/NuProcess;)V
  #583 = Utf8               onStart
  #584 = Utf8               pipe
  #585 = Utf8               ([I)I
  #586 = Utf8               valueOf
  #587 = Utf8               (I)Ljava/lang/Integer;
  #588 = Utf8               remove
  #589 = Utf8               iterator
  #590 = Utf8               ()Ljava/util/Iterator;
  #591 = Utf8               hasNext
  #592 = Utf8               next
  #593 = Utf8               (I)I
  #594 = Utf8               fcntl
  #595 = Utf8               O_NONBLOCK
  #596 = Utf8               (IIJ)I
  #597 = Utf8               java/lang/Class
  #598 = Utf8               getCanonicalName
  #599 = Utf8               getLogger
  #600 = Utf8               (Ljava/lang/String;)Ljava/util/logging/Logger;
  #601 = Utf8               allocate
  #602 = Utf8               java/lang/System
  #603 = Utf8               getProperty
  #604 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #605 = Utf8               java/lang/Boolean
  #606 = Utf8               parseBoolean
  #607 = Utf8               (Ljava/lang/String;)Z
  #608 = Utf8               com/zaxxer/nuprocess/internal/Constants
  #609 = Utf8               NUMBER_OF_THREADS
  #610 = Utf8               java/lang/Runtime
  #611 = Utf8               getRuntime
  #612 = Utf8               ()Ljava/lang/Runtime;
  #613 = Utf8               (Ljava/lang/Runnable;)V
  #614 = Utf8               addShutdownHook
  #615 = Utf8               (Ljava/lang/Thread;)V
{
  protected static final java.util.logging.Logger LOGGER;
    descriptor: Ljava/util/logging/Logger;
    flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL

  private static final boolean IS_SOFTEXIT_DETECTION;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.nio.ByteBuffer STDIN_CLOSED_PENDING_WRITE_TOMBSTONE;
    descriptor: Ljava/nio/ByteBuffer;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  protected static final com.zaxxer.nuprocess.internal.IEventProcessor<? extends com.zaxxer.nuprocess.internal.BasePosixProcess>[] processors;
    descriptor: [Lcom/zaxxer/nuprocess/internal/IEventProcessor;
    flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL
    Signature: #186                         // [Lcom/zaxxer/nuprocess/internal/IEventProcessor<+Lcom/zaxxer/nuprocess/internal/BasePosixProcess;>;

  protected static int processorRoundRobin;
    descriptor: I
    flags: (0x000c) ACC_PROTECTED, ACC_STATIC

  private int exitcode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  protected com.zaxxer.nuprocess.internal.IEventProcessor<? super com.zaxxer.nuprocess.internal.BasePosixProcess> myProcessor;
    descriptor: Lcom/zaxxer/nuprocess/internal/IEventProcessor;
    flags: (0x0004) ACC_PROTECTED
    Signature: #192                         // Lcom/zaxxer/nuprocess/internal/IEventProcessor<-Lcom/zaxxer/nuprocess/internal/BasePosixProcess;>;

  protected volatile com.zaxxer.nuprocess.NuProcessHandler processHandler;
    descriptor: Lcom/zaxxer/nuprocess/NuProcessHandler;
    flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE

  protected volatile int pid;
    descriptor: I
    flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE

  protected volatile boolean isRunning;
    descriptor: Z
    flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE

  public final java.util.concurrent.atomic.AtomicBoolean cleanlyExitedBeforeProcess;
    descriptor: Ljava/util/concurrent/atomic/AtomicBoolean;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL

  protected java.util.concurrent.atomic.AtomicInteger exitCode;
    descriptor: Ljava/util/concurrent/atomic/AtomicInteger;
    flags: (0x0004) ACC_PROTECTED

  protected java.util.concurrent.CountDownLatch exitPending;
    descriptor: Ljava/util/concurrent/CountDownLatch;
    flags: (0x0004) ACC_PROTECTED

  protected java.util.concurrent.atomic.AtomicBoolean userWantsWrite;
    descriptor: Ljava/util/concurrent/atomic/AtomicBoolean;
    flags: (0x0004) ACC_PROTECTED

  private com.sun.jna.Memory outBufferMemory;
    descriptor: Lcom/sun/jna/Memory;
    flags: (0x0002) ACC_PRIVATE

  private com.sun.jna.Memory errBufferMemory;
    descriptor: Lcom/sun/jna/Memory;
    flags: (0x0002) ACC_PRIVATE

  private com.sun.jna.Memory inBufferMemory;
    descriptor: Lcom/sun/jna/Memory;
    flags: (0x0002) ACC_PRIVATE

  protected java.nio.ByteBuffer outBuffer;
    descriptor: Ljava/nio/ByteBuffer;
    flags: (0x0004) ACC_PROTECTED

  protected java.nio.ByteBuffer errBuffer;
    descriptor: Ljava/nio/ByteBuffer;
    flags: (0x0004) ACC_PROTECTED

  protected java.nio.ByteBuffer inBuffer;
    descriptor: Ljava/nio/ByteBuffer;
    flags: (0x0004) ACC_PROTECTED

  protected com.zaxxer.nuprocess.internal.ReferenceCountedFileDescriptor stdin;
    descriptor: Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
    flags: (0x0004) ACC_PROTECTED

  protected com.zaxxer.nuprocess.internal.ReferenceCountedFileDescriptor stdout;
    descriptor: Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
    flags: (0x0004) ACC_PROTECTED

  protected com.zaxxer.nuprocess.internal.ReferenceCountedFileDescriptor stderr;
    descriptor: Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
    flags: (0x0004) ACC_PROTECTED

  protected volatile int stdinWidow;
    descriptor: I
    flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE

  protected volatile int stdoutWidow;
    descriptor: I
    flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE

  protected volatile int stderrWidow;
    descriptor: I
    flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE

  protected java.util.concurrent.atomic.AtomicBoolean stdinClosing;
    descriptor: Ljava/util/concurrent/atomic/AtomicBoolean;
    flags: (0x0004) ACC_PROTECTED

  protected boolean outClosed;
    descriptor: Z
    flags: (0x0004) ACC_PROTECTED

  protected boolean errClosed;
    descriptor: Z
    flags: (0x0004) ACC_PROTECTED

  private java.util.concurrent.ConcurrentLinkedQueue<java.nio.ByteBuffer> pendingWrites;
    descriptor: Ljava/util/concurrent/ConcurrentLinkedQueue;
    flags: (0x0002) ACC_PRIVATE
    Signature: #223                         // Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/nio/ByteBuffer;>;

  protected com.zaxxer.nuprocess.internal.BasePosixProcess(com.zaxxer.nuprocess.NuProcessHandler);
    descriptor: (Lcom/zaxxer/nuprocess/NuProcessHandler;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
         9: aload_0
        10: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
        13: dup
        14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
        17: putfield      #5                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
        20: aload_0
        21: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
        24: dup
        25: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
        28: putfield      #6                  // Field cleanlyExitedBeforeProcess:Ljava/util/concurrent/atomic/AtomicBoolean;
        31: aload_0
        32: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
        35: dup
        36: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
        39: putfield      #9                  // Field exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
        42: aload_0
        43: new           #10                 // class java/util/concurrent/CountDownLatch
        46: dup
        47: iconst_1
        48: invokespecial #11                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
        51: putfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
        54: aload_0
        55: new           #13                 // class com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor
        58: dup
        59: iconst_m1
        60: invokespecial #14                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor."<init>":(I)V
        63: putfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        66: aload_0
        67: new           #13                 // class com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor
        70: dup
        71: iconst_m1
        72: invokespecial #14                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor."<init>":(I)V
        75: putfield      #16                 // Field stdout:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        78: aload_0
        79: new           #13                 // class com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor
        82: dup
        83: iconst_m1
        84: invokespecial #14                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor."<init>":(I)V
        87: putfield      #17                 // Field stderr:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        90: aload_0
        91: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
        94: dup
        95: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
        98: putfield      #18                 // Field stdinClosing:Ljava/util/concurrent/atomic/AtomicBoolean;
       101: aload_0
       102: iconst_1
       103: putfield      #19                 // Field outClosed:Z
       106: aload_0
       107: iconst_1
       108: putfield      #20                 // Field errClosed:Z
       111: return
      LineNumberTable:
        line 112: 0
        line 113: 4
        line 114: 9
        line 115: 20
        line 116: 31
        line 117: 42
        line 118: 54
        line 119: 66
        line 120: 78
        line 121: 90
        line 122: 101
        line 123: 106
        line 124: 111
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     112     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0     112     1 processListener   Lcom/zaxxer/nuprocess/NuProcessHandler;

  public abstract com.zaxxer.nuprocess.NuProcess start(java.util.List<java.lang.String>, java.lang.String[], java.nio.file.Path);
    descriptor: (Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)Lcom/zaxxer/nuprocess/NuProcess;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #234                         // (Ljava/util/List<Ljava/lang/String;>;[Ljava/lang/String;Ljava/nio/file/Path;)Lcom/zaxxer/nuprocess/NuProcess;

  public abstract void run(java.util.List<java.lang.String>, java.lang.String[], java.nio.file.Path);
    descriptor: (Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #237                         // (Ljava/util/List<Ljava/lang/String;>;[Ljava/lang/String;Ljava/nio/file/Path;)V

  public boolean isRunning();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #21                 // Field isRunning:Z
         4: ireturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;

  public int waitFor(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    descriptor: (JLjava/util/concurrent/TimeUnit;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: lload_1
         1: lconst_0
         2: lcmp
         3: ifne          16
         6: aload_0
         7: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
        10: invokevirtual #22                 // Method java/util/concurrent/CountDownLatch.await:()V
        13: goto          31
        16: aload_0
        17: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
        20: lload_1
        21: aload_3
        22: invokevirtual #23                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
        25: ifne          31
        28: ldc           #25                 // int -2147483648
        30: ireturn
        31: aload_0
        32: getfield      #9                  // Field exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
        35: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
        38: ireturn
      LineNumberTable:
        line 152: 0
        line 153: 6
        line 155: 16
        line 156: 28
        line 159: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0      39     1 timeout   J
            0      39     3  unit   Ljava/util/concurrent/TimeUnit;
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 14 /* same */
    Exceptions:
      throws java.lang.InterruptedException

  public void destroy(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #21                 // Field isRunning:Z
         4: ifeq          30
         7: aload_0
         8: getfield      #27                 // Field pid:I
        11: iload_1
        12: ifeq          20
        15: bipush        9
        17: goto          22
        20: bipush        15
        22: invokestatic  #29                 // Method com/zaxxer/nuprocess/internal/LibC.kill:(II)I
        25: ldc           #30                 // String Sending signal failed
        27: invokestatic  #31                 // Method checkReturnCode:(ILjava/lang/String;)V
        30: return
      LineNumberTable:
        line 166: 0
        line 167: 7
        line 169: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0      31     1 force   Z
      StackMapTable: number_of_entries = 3
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class com/zaxxer/nuprocess/internal/BasePosixProcess, int ]
          stack = [ int, int ]
        frame_type = 7 /* same */

  public void wantWrite();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
         4: invokevirtual #32                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.acquire:()I
         7: istore_1
         8: iload_1
         9: iconst_m1
        10: if_icmpeq     34
        13: aload_0
        14: getfield      #5                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
        17: iconst_1
        18: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
        21: aload_0
        22: getfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        25: aload_0
        26: invokeinterface #35,  2           // InterfaceMethod com/zaxxer/nuprocess/internal/IEventProcessor.queueWrite:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
        31: goto          44
        34: new           #36                 // class java/lang/IllegalStateException
        37: dup
        38: ldc           #37                 // String closeStdin() method has already been called.
        40: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        43: athrow
        44: aload_0
        45: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        48: invokevirtual #39                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.release:()V
        51: goto          64
        54: astore_2
        55: aload_0
        56: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        59: invokevirtual #39                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.release:()V
        62: aload_2
        63: athrow
        64: return
      Exception table:
         from    to  target type
             0    44    54   any
      LineNumberTable:
        line 176: 0
        line 177: 8
        line 178: 13
        line 179: 21
        line 182: 34
        line 185: 44
        line 186: 51
        line 185: 54
        line 186: 62
        line 187: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      36     1    fd   I
            0      65     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 9
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 9 /* same */

  public void closeStdin(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: iload_1
         1: ifeq          64
         4: aload_0
         5: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
         8: invokevirtual #32                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.acquire:()I
        11: istore_2
        12: iload_2
        13: iconst_m1
        14: if_icmpeq     41
        17: aload_0
        18: getfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        21: ifnull        34
        24: aload_0
        25: getfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        28: aload_0
        29: invokeinterface #40,  2           // InterfaceMethod com/zaxxer/nuprocess/internal/IEventProcessor.closeStdin:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
        34: aload_0
        35: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        38: invokevirtual #41                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.close:()V
        41: aload_0
        42: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        45: invokevirtual #39                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.release:()V
        48: goto          61
        51: astore_3
        52: aload_0
        53: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        56: invokevirtual #39                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.release:()V
        59: aload_3
        60: athrow
        61: goto          110
        64: aload_0
        65: getfield      #18                 // Field stdinClosing:Ljava/util/concurrent/atomic/AtomicBoolean;
        68: iconst_0
        69: iconst_1
        70: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
        73: ifeq          100
        76: aload_0
        77: getfield      #43                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
        80: getstatic     #44                 // Field STDIN_CLOSED_PENDING_WRITE_TOMBSTONE:Ljava/nio/ByteBuffer;
        83: invokevirtual #45                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
        86: pop
        87: aload_0
        88: getfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        91: aload_0
        92: invokeinterface #35,  2           // InterfaceMethod com/zaxxer/nuprocess/internal/IEventProcessor.queueWrite:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
        97: goto          110
       100: new           #36                 // class java/lang/IllegalStateException
       103: dup
       104: ldc           #37                 // String closeStdin() method has already been called.
       106: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       109: athrow
       110: return
      Exception table:
         from    to  target type
             4    41    51   any
      LineNumberTable:
        line 193: 0
        line 195: 4
        line 196: 12
        line 197: 17
        line 198: 24
        line 200: 34
        line 203: 41
        line 204: 48
        line 203: 51
        line 204: 59
        line 206: 64
        line 207: 76
        line 208: 87
        line 210: 100
        line 213: 110
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      29     2    fd   I
            0     111     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0     111     1 force   Z
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 9 /* same */
        frame_type = 2 /* same */
        frame_type = 35 /* same */
        frame_type = 9 /* same */

  public void writeStdin(java.nio.ByteBuffer);
    descriptor: (Ljava/nio/ByteBuffer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_0
         1: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
         4: invokevirtual #32                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.acquire:()I
         7: istore_2
         8: aload_0
         9: getfield      #18                 // Field stdinClosing:Ljava/util/concurrent/atomic/AtomicBoolean;
        12: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
        15: istore_3
        16: iload_2
        17: iconst_m1
        18: if_icmpeq     47
        21: iload_3
        22: ifne          47
        25: aload_0
        26: getfield      #43                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
        29: aload_1
        30: invokevirtual #45                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
        33: pop
        34: aload_0
        35: getfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        38: aload_0
        39: invokeinterface #35,  2           // InterfaceMethod com/zaxxer/nuprocess/internal/IEventProcessor.queueWrite:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
        44: goto          57
        47: new           #36                 // class java/lang/IllegalStateException
        50: dup
        51: ldc           #37                 // String closeStdin() method has already been called.
        53: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        56: athrow
        57: aload_0
        58: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        61: invokevirtual #39                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.release:()V
        64: goto          79
        67: astore        4
        69: aload_0
        70: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        73: invokevirtual #39                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.release:()V
        76: aload         4
        78: athrow
        79: return
      Exception table:
         from    to  target type
             0    57    67   any
            67    69    67   any
      LineNumberTable:
        line 220: 0
        line 221: 8
        line 222: 16
        line 223: 25
        line 224: 34
        line 227: 47
        line 230: 57
        line 231: 64
        line 230: 67
        line 231: 76
        line 232: 79
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      49     2    fd   I
           16      41     3 closing   Z
            0      80     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0      80     1 buffer   Ljava/nio/ByteBuffer;
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 47
          locals = [ int, int ]
        frame_type = 249 /* chop */
          offset_delta = 9
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */

  public boolean hasPendingWrites();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #43                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
         4: invokevirtual #47                 // Method java/util/concurrent/ConcurrentLinkedQueue.isEmpty:()Z
         7: ifne          14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: ireturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public void setProcessHandler(com.zaxxer.nuprocess.NuProcessHandler);
    descriptor: (Lcom/zaxxer/nuprocess/NuProcessHandler;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
         5: return
      LineNumberTable:
        line 245: 0
        line 246: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0       6     1 processHandler   Lcom/zaxxer/nuprocess/NuProcessHandler;

  public int getPid();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #27                 // Field pid:I
         4: ireturn
      LineNumberTable:
        line 254: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;

  public int getPID();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #27                 // Field pid:I
         4: ireturn
      LineNumberTable:
        line 258: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;

  public com.zaxxer.nuprocess.internal.ReferenceCountedFileDescriptor getStdin();
    descriptor: ()Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
         4: areturn
      LineNumberTable:
        line 263: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;

  public com.zaxxer.nuprocess.internal.ReferenceCountedFileDescriptor getStdout();
    descriptor: ()Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #16                 // Field stdout:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
         4: areturn
      LineNumberTable:
        line 268: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;

  public com.zaxxer.nuprocess.internal.ReferenceCountedFileDescriptor getStderr();
    descriptor: ()Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #17                 // Field stderr:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
         4: areturn
      LineNumberTable:
        line 273: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;

  public boolean isSoftExit();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #48                 // Field IS_SOFTEXIT_DETECTION:Z
         3: ifeq          24
         6: aload_0
         7: getfield      #19                 // Field outClosed:Z
        10: ifeq          24
        13: aload_0
        14: getfield      #20                 // Field errClosed:Z
        17: ifeq          24
        20: iconst_1
        21: goto          25
        24: iconst_0
        25: ireturn
      LineNumberTable:
        line 278: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
      StackMapTable: number_of_entries = 2
        frame_type = 24 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public void onExit(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
         4: invokevirtual #49                 // Method java/util/concurrent/CountDownLatch.getCount:()J
         7: lconst_0
         8: lcmp
         9: ifne          13
        12: return
        13: aload_0
        14: iconst_1
        15: invokevirtual #50                 // Method closeStdin:(Z)V
        18: aload_0
        19: getfield      #16                 // Field stdout:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        22: invokevirtual #41                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.close:()V
        25: aload_0
        26: getfield      #17                 // Field stderr:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        29: invokevirtual #41                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.close:()V
        32: aload_0
        33: iconst_0
        34: putfield      #21                 // Field isRunning:Z
        37: aload_0
        38: getfield      #9                  // Field exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
        41: iload_1
        42: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
        45: aload_0
        46: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        49: ifnull        81
        52: aload_0
        53: getfield      #19                 // Field outClosed:Z
        56: ifne          81
        59: aload_0
        60: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        63: invokevirtual #53                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
        66: pop
        67: aload_0
        68: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
        71: aload_0
        72: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        75: iconst_1
        76: invokeinterface #54,  3           // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStdout:(Ljava/nio/ByteBuffer;Z)V
        81: aload_0
        82: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
        85: ifnull        117
        88: aload_0
        89: getfield      #20                 // Field errClosed:Z
        92: ifne          117
        95: aload_0
        96: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
        99: invokevirtual #53                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
       102: pop
       103: aload_0
       104: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       107: aload_0
       108: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
       111: iconst_1
       112: invokeinterface #56,  3           // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStderr:(Ljava/nio/ByteBuffer;Z)V
       117: iload_1
       118: ldc           #57                 // int 2147483646
       120: if_icmpeq     133
       123: aload_0
       124: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       127: iload_1
       128: invokeinterface #58,  2           // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onExit:(I)V
       133: aload_0
       134: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
       137: invokevirtual #59                 // Method java/util/concurrent/CountDownLatch.countDown:()V
       140: aload_0
       141: aconst_null
       142: putfield      #60                 // Field outBufferMemory:Lcom/sun/jna/Memory;
       145: aload_0
       146: aconst_null
       147: putfield      #61                 // Field errBufferMemory:Lcom/sun/jna/Memory;
       150: aload_0
       151: aconst_null
       152: putfield      #62                 // Field inBufferMemory:Lcom/sun/jna/Memory;
       155: aload_0
       156: aconst_null
       157: putfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
       160: aload_0
       161: aconst_null
       162: putfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
       165: aload_0
       166: aconst_null
       167: putfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       170: aload_0
       171: aconst_null
       172: putfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       175: invokestatic  #64                 // Method com/sun/jna/Memory.purge:()V
       178: goto          290
       181: astore_2
       182: getstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
       185: getstatic     #67                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       188: ldc           #68                 // String Exception thrown from handler
       190: aload_2
       191: invokevirtual #69                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       194: aload_0
       195: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
       198: invokevirtual #59                 // Method java/util/concurrent/CountDownLatch.countDown:()V
       201: aload_0
       202: aconst_null
       203: putfield      #60                 // Field outBufferMemory:Lcom/sun/jna/Memory;
       206: aload_0
       207: aconst_null
       208: putfield      #61                 // Field errBufferMemory:Lcom/sun/jna/Memory;
       211: aload_0
       212: aconst_null
       213: putfield      #62                 // Field inBufferMemory:Lcom/sun/jna/Memory;
       216: aload_0
       217: aconst_null
       218: putfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
       221: aload_0
       222: aconst_null
       223: putfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
       226: aload_0
       227: aconst_null
       228: putfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       231: aload_0
       232: aconst_null
       233: putfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       236: invokestatic  #64                 // Method com/sun/jna/Memory.purge:()V
       239: goto          290
       242: astore_3
       243: aload_0
       244: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
       247: invokevirtual #59                 // Method java/util/concurrent/CountDownLatch.countDown:()V
       250: aload_0
       251: aconst_null
       252: putfield      #60                 // Field outBufferMemory:Lcom/sun/jna/Memory;
       255: aload_0
       256: aconst_null
       257: putfield      #61                 // Field errBufferMemory:Lcom/sun/jna/Memory;
       260: aload_0
       261: aconst_null
       262: putfield      #62                 // Field inBufferMemory:Lcom/sun/jna/Memory;
       265: aload_0
       266: aconst_null
       267: putfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
       270: aload_0
       271: aconst_null
       272: putfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
       275: aload_0
       276: aconst_null
       277: putfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       280: aload_0
       281: aconst_null
       282: putfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       285: invokestatic  #64                 // Method com/sun/jna/Memory.purge:()V
       288: aload_3
       289: athrow
       290: return
      Exception table:
         from    to  target type
            13   133   181   Class java/lang/Exception
            13   133   242   any
           181   194   242   any
      LineNumberTable:
        line 283: 0
        line 285: 12
        line 289: 13
        line 290: 18
        line 291: 25
        line 293: 32
        line 294: 37
        line 296: 45
        line 297: 59
        line 298: 67
        line 301: 81
        line 302: 95
        line 303: 103
        line 306: 117
        line 307: 123
        line 315: 133
        line 318: 140
        line 319: 145
        line 320: 150
        line 321: 155
        line 322: 160
        line 323: 165
        line 324: 170
        line 325: 175
        line 326: 178
        line 310: 181
        line 312: 182
        line 315: 194
        line 318: 201
        line 319: 206
        line 320: 211
        line 321: 216
        line 322: 221
        line 323: 226
        line 324: 231
        line 325: 236
        line 326: 239
        line 315: 242
        line 318: 250
        line 319: 255
        line 320: 260
        line 321: 265
        line 322: 270
        line 323: 275
        line 324: 280
        line 325: 285
        line 326: 288
        line 327: 290
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          182      12     2     e   Ljava/lang/Exception;
            0     291     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0     291     1 statusCode   I
      StackMapTable: number_of_entries = 7
        frame_type = 13 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 67
        frame_type = 35 /* same */
        frame_type = 15 /* same */
        frame_type = 111 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 124 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 47 /* same */

  public void readStdout(int, int);
    descriptor: (II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: getfield      #19                 // Field outClosed:Z
         4: ifne          11
         7: iload_1
         8: ifne          12
        11: return
        12: iload_1
        13: ifge          44
        16: aload_0
        17: iconst_1
        18: putfield      #19                 // Field outClosed:Z
        21: aload_0
        22: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        25: invokevirtual #53                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
        28: pop
        29: aload_0
        30: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
        33: aload_0
        34: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        37: iconst_1
        38: invokeinterface #54,  3           // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStdout:(Ljava/nio/ByteBuffer;Z)V
        43: return
        44: iload_2
        45: aload_0
        46: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        49: iload_1
        50: aload_0
        51: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        54: invokevirtual #70                 // Method java/nio/ByteBuffer.remaining:()I
        57: invokestatic  #71                 // Method java/lang/Math.min:(II)I
        60: invokestatic  #72                 // Method com/zaxxer/nuprocess/internal/LibC.read:(ILjava/nio/ByteBuffer;I)I
        63: istore_3
        64: iload_3
        65: iconst_m1
        66: if_icmpne     84
        69: aload_0
        70: iconst_1
        71: putfield      #19                 // Field outClosed:Z
        74: new           #73                 // class java/lang/RuntimeException
        77: dup
        78: ldc           #74                 // String Unexpected eof
        80: invokespecial #75                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        83: athrow
        84: aload_0
        85: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        88: aload_0
        89: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        92: invokevirtual #76                 // Method java/nio/ByteBuffer.position:()I
        95: iload_3
        96: iadd
        97: invokevirtual #77                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
       100: pop
       101: aload_0
       102: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
       105: iconst_0
       106: invokevirtual #78                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
       109: pop
       110: aload_0
       111: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       114: aload_0
       115: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
       118: iconst_0
       119: invokeinterface #54,  3           // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStdout:(Ljava/nio/ByteBuffer;Z)V
       124: aload_0
       125: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
       128: invokevirtual #79                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
       131: pop
       132: goto          148
       135: astore_3
       136: getstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
       139: getstatic     #67                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       142: ldc           #68                 // String Exception thrown from handler
       144: aload_3
       145: invokevirtual #69                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       148: aload_0
       149: getfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
       152: invokevirtual #80                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       155: ifne          168
       158: new           #73                 // class java/lang/RuntimeException
       161: dup
       162: ldc           #81                 // String stdout buffer has no bytes remaining
       164: invokespecial #75                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       167: athrow
       168: return
      Exception table:
         from    to  target type
            12    43   135   Class java/lang/Exception
            44   132   135   Class java/lang/Exception
      LineNumberTable:
        line 331: 0
        line 332: 11
        line 336: 12
        line 337: 16
        line 338: 21
        line 339: 29
        line 340: 43
        line 343: 44
        line 344: 64
        line 345: 69
        line 346: 74
        line 350: 84
        line 351: 101
        line 352: 110
        line 353: 124
        line 358: 132
        line 355: 135
        line 357: 136
        line 359: 148
        line 363: 158
        line 365: 168
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64      68     3  read   I
          136      12     3     e   Ljava/lang/Exception;
            0     169     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0     169     1 availability   I
            0     169     2    fd   I
      StackMapTable: number_of_entries = 7
        frame_type = 11 /* same */
        frame_type = 0 /* same */
        frame_type = 31 /* same */
        frame_type = 252 /* append */
          offset_delta = 39
          locals = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class com/zaxxer/nuprocess/internal/BasePosixProcess, int, int ]
          stack = [ class java/lang/Exception ]
        frame_type = 12 /* same */
        frame_type = 19 /* same */

  public void readStderr(int, int);
    descriptor: (II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: getfield      #20                 // Field errClosed:Z
         4: ifne          11
         7: iload_1
         8: ifne          12
        11: return
        12: iload_1
        13: ifge          44
        16: aload_0
        17: iconst_1
        18: putfield      #20                 // Field errClosed:Z
        21: aload_0
        22: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
        25: invokevirtual #53                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
        28: pop
        29: aload_0
        30: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
        33: aload_0
        34: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
        37: iconst_1
        38: invokeinterface #56,  3           // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStderr:(Ljava/nio/ByteBuffer;Z)V
        43: return
        44: iload_2
        45: aload_0
        46: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
        49: iload_1
        50: aload_0
        51: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
        54: invokevirtual #70                 // Method java/nio/ByteBuffer.remaining:()I
        57: invokestatic  #71                 // Method java/lang/Math.min:(II)I
        60: invokestatic  #72                 // Method com/zaxxer/nuprocess/internal/LibC.read:(ILjava/nio/ByteBuffer;I)I
        63: istore_3
        64: iload_3
        65: iconst_m1
        66: if_icmpne     84
        69: aload_0
        70: iconst_1
        71: putfield      #20                 // Field errClosed:Z
        74: new           #73                 // class java/lang/RuntimeException
        77: dup
        78: ldc           #74                 // String Unexpected eof
        80: invokespecial #75                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        83: athrow
        84: aload_0
        85: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
        88: aload_0
        89: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
        92: invokevirtual #76                 // Method java/nio/ByteBuffer.position:()I
        95: iload_3
        96: iadd
        97: invokevirtual #77                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
       100: pop
       101: aload_0
       102: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
       105: iconst_0
       106: invokevirtual #78                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
       109: pop
       110: aload_0
       111: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       114: aload_0
       115: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
       118: iconst_0
       119: invokeinterface #56,  3           // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStderr:(Ljava/nio/ByteBuffer;Z)V
       124: aload_0
       125: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
       128: invokevirtual #79                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
       131: pop
       132: goto          148
       135: astore_3
       136: getstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
       139: getstatic     #67                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       142: ldc           #68                 // String Exception thrown from handler
       144: aload_3
       145: invokevirtual #69                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       148: aload_0
       149: getfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
       152: invokevirtual #80                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       155: ifne          168
       158: new           #73                 // class java/lang/RuntimeException
       161: dup
       162: ldc           #82                 // String stderr buffer has no bytes remaining
       164: invokespecial #75                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       167: athrow
       168: return
      Exception table:
         from    to  target type
            12    43   135   Class java/lang/Exception
            44   132   135   Class java/lang/Exception
      LineNumberTable:
        line 369: 0
        line 370: 11
        line 374: 12
        line 375: 16
        line 376: 21
        line 377: 29
        line 378: 43
        line 381: 44
        line 382: 64
        line 384: 69
        line 385: 74
        line 388: 84
        line 389: 101
        line 390: 110
        line 391: 124
        line 396: 132
        line 393: 135
        line 395: 136
        line 397: 148
        line 401: 158
        line 403: 168
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64      68     3  read   I
          136      12     3     e   Ljava/lang/Exception;
            0     169     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0     169     1 availability   I
            0     169     2    fd   I
      StackMapTable: number_of_entries = 7
        frame_type = 11 /* same */
        frame_type = 0 /* same */
        frame_type = 31 /* same */
        frame_type = 252 /* append */
          offset_delta = 39
          locals = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class com/zaxxer/nuprocess/internal/BasePosixProcess, int, int ]
          stack = [ class java/lang/Exception ]
        frame_type = 12 /* same */
        frame_type = 19 /* same */

  public boolean writeStdin(int, int);
    descriptor: (II)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=3
         0: iload_1
         1: ifle          9
         4: iload_2
         5: iconst_m1
         6: if_icmpne     11
         9: iconst_0
        10: ireturn
        11: aload_0
        12: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
        15: invokevirtual #80                 // Method java/nio/ByteBuffer.hasRemaining:()Z
        18: ifeq          117
        21: iload_2
        22: aload_0
        23: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
        26: iload_1
        27: aload_0
        28: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
        31: invokevirtual #70                 // Method java/nio/ByteBuffer.remaining:()I
        34: invokestatic  #71                 // Method java/lang/Math.min:(II)I
        37: invokestatic  #83                 // Method com/zaxxer/nuprocess/internal/LibC.write:(ILjava/nio/ByteBuffer;I)I
        40: istore_3
        41: iload_3
        42: ifge          80
        45: invokestatic  #84                 // Method com/sun/jna/Native.getLastError:()I
        48: istore        4
        50: iload         4
        52: bipush        11
        54: if_icmpeq     64
        57: iload         4
        59: bipush        35
        61: if_icmpne     71
        64: iload_1
        65: iconst_4
        66: idiv
        67: istore_1
        68: goto          80
        71: aload_0
        72: getfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        75: invokevirtual #41                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor.close:()V
        78: iconst_0
        79: ireturn
        80: iload_3
        81: iflt          21
        84: iload_1
        85: iload_3
        86: isub
        87: istore_1
        88: aload_0
        89: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
        92: aload_0
        93: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
        96: invokevirtual #76                 // Method java/nio/ByteBuffer.position:()I
        99: iload_3
       100: iadd
       101: invokevirtual #78                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
       104: pop
       105: aload_0
       106: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       109: invokevirtual #80                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       112: ifeq          117
       115: iconst_1
       116: ireturn
       117: aload_0
       118: getfield      #43                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
       121: invokevirtual #47                 // Method java/util/concurrent/ConcurrentLinkedQueue.isEmpty:()Z
       124: ifne          279
       127: aload_0
       128: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       131: invokevirtual #85                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
       134: pop
       135: aload_0
       136: getfield      #43                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
       139: invokevirtual #86                 // Method java/util/concurrent/ConcurrentLinkedQueue.peek:()Ljava/lang/Object;
       142: checkcast     #87                 // class java/nio/ByteBuffer
       145: astore_3
       146: aload_3
       147: getstatic     #44                 // Field STDIN_CLOSED_PENDING_WRITE_TOMBSTONE:Ljava/nio/ByteBuffer;
       150: if_acmpne     175
       153: aload_0
       154: iconst_1
       155: invokevirtual #50                 // Method closeStdin:(Z)V
       158: aload_0
       159: getfield      #5                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
       162: iconst_0
       163: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       166: aload_0
       167: getfield      #43                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
       170: invokevirtual #88                 // Method java/util/concurrent/ConcurrentLinkedQueue.clear:()V
       173: iconst_0
       174: ireturn
       175: aload_3
       176: ifnull        227
       179: aload_3
       180: invokevirtual #70                 // Method java/nio/ByteBuffer.remaining:()I
       183: ldc           #90                 // int 65536
       185: if_icmple     227
       188: aload_3
       189: invokevirtual #91                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
       192: astore        4
       194: aload         4
       196: ldc           #90                 // int 65536
       198: invokevirtual #77                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
       201: pop
       202: aload_0
       203: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       206: aload         4
       208: invokevirtual #92                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
       211: pop
       212: aload_3
       213: aload_3
       214: invokevirtual #76                 // Method java/nio/ByteBuffer.position:()I
       217: ldc           #90                 // int 65536
       219: iadd
       220: invokevirtual #78                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
       223: pop
       224: goto          248
       227: aload_3
       228: ifnull        248
       231: aload_0
       232: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       235: aload_3
       236: invokevirtual #92                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
       239: pop
       240: aload_0
       241: getfield      #43                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
       244: invokevirtual #93                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       247: pop
       248: aload_0
       249: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       252: invokevirtual #53                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
       255: pop
       256: aload_0
       257: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       260: invokevirtual #80                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       263: ifeq          279
       266: iload_1
       267: ifgt          272
       270: iconst_1
       271: ireturn
       272: aload_0
       273: iload_1
       274: iload_2
       275: invokevirtual #94                 // Method writeStdin:(II)Z
       278: ireturn
       279: aload_0
       280: getfield      #5                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
       283: iconst_1
       284: iconst_0
       285: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       288: ifne          293
       291: iconst_0
       292: ireturn
       293: aload_0
       294: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       297: invokevirtual #85                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
       300: pop
       301: aload_0
       302: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       305: aload_0
       306: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       309: invokeinterface #95,  2           // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStdinReady:(Ljava/nio/ByteBuffer;)Z
       314: ifeq          325
       317: aload_0
       318: getfield      #5                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
       321: iconst_1
       322: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       325: aload_0
       326: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       329: invokevirtual #80                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       332: ifeq          346
       335: iload_1
       336: ifle          346
       339: aload_0
       340: iload_1
       341: iload_2
       342: invokevirtual #94                 // Method writeStdin:(II)Z
       345: ireturn
       346: iconst_1
       347: ireturn
       348: astore_3
       349: getstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
       352: getstatic     #96                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       355: new           #97                 // class java/lang/StringBuilder
       358: dup
       359: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
       362: ldc           #99                 // String Exception thrown handling writes to stdin
       364: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       367: aload_0
       368: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       371: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       374: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       377: aload_3
       378: invokevirtual #69                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       381: iconst_0
       382: ireturn
      Exception table:
         from    to  target type
           293   345   348   Class java/lang/Exception
           346   347   348   Class java/lang/Exception
      LineNumberTable:
        line 407: 0
        line 408: 9
        line 411: 11
        line 414: 21
        line 415: 41
        line 416: 45
        line 417: 50
        line 418: 64
        line 419: 68
        line 423: 71
        line 424: 78
        line 427: 80
        line 429: 84
        line 430: 88
        line 431: 105
        line 432: 115
        line 436: 117
        line 437: 127
        line 439: 135
        line 440: 146
        line 442: 153
        line 443: 158
        line 444: 166
        line 445: 173
        line 446: 175
        line 447: 188
        line 448: 194
        line 449: 202
        line 450: 212
        line 451: 224
        line 452: 227
        line 453: 231
        line 454: 240
        line 457: 248
        line 459: 256
        line 460: 266
        line 462: 270
        line 465: 272
        line 473: 279
        line 474: 291
        line 478: 293
        line 479: 301
        line 482: 317
        line 484: 325
        line 486: 339
        line 489: 346
        line 491: 348
        line 492: 349
        line 495: 381
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           50      30     4 errno   I
           41      76     3 wrote   I
          194      30     4 slice   Ljava/nio/ByteBuffer;
          146     133     3 byteBuffer   Ljava/nio/ByteBuffer;
          349      34     3     e   Ljava/lang/Exception;
            0     383     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0     383     1 availability   I
            0     383     2    fd   I
      StackMapTable: number_of_entries = 16
        frame_type = 9 /* same */
        frame_type = 1 /* same */
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 42
          locals = [ int, int ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 8
        frame_type = 250 /* chop */
          offset_delta = 36
        frame_type = 252 /* append */
          offset_delta = 57
          locals = [ class java/nio/ByteBuffer ]
        frame_type = 51 /* same */
        frame_type = 20 /* same */
        frame_type = 23 /* same */
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 13 /* same */
        frame_type = 31 /* same */
        frame_type = 20 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]

  protected void afterStart();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=3, args_size=1
         0: ldc           #103                // String nuprocess.test.afterStartSleep
         2: iconst_0
         3: invokestatic  #104                // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
         6: invokevirtual #105                // Method java/lang/Integer.intValue:()I
         9: i2l
        10: lstore_1
        11: lload_1
        12: lconst_0
        13: lcmp
        14: ifle          21
        17: lload_1
        18: invokestatic  #106                // Method java/util/concurrent/locks/LockSupport.parkNanos:(J)V
        21: aload_0
        22: iconst_1
        23: putfield      #21                 // Field isRunning:Z
        26: return
      LineNumberTable:
        line 504: 0
        line 505: 11
        line 506: 17
        line 509: 21
        line 510: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
           11      16     1 testSleep   J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ long ]

  protected void initializeBuffers();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=6, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: putfield      #19                 // Field outClosed:Z
         5: aload_0
         6: iconst_0
         7: putfield      #20                 // Field errClosed:Z
        10: aload_0
        11: new           #107                // class java/util/concurrent/ConcurrentLinkedQueue
        14: dup
        15: invokespecial #108                // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
        18: putfield      #43                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
        21: aload_0
        22: new           #109                // class com/sun/jna/Memory
        25: dup
        26: ldc2_w        #110                // long 65536l
        29: invokespecial #112                // Method com/sun/jna/Memory."<init>":(J)V
        32: putfield      #60                 // Field outBufferMemory:Lcom/sun/jna/Memory;
        35: aload_0
        36: aload_0
        37: getfield      #60                 // Field outBufferMemory:Lcom/sun/jna/Memory;
        40: lconst_0
        41: aload_0
        42: getfield      #60                 // Field outBufferMemory:Lcom/sun/jna/Memory;
        45: invokevirtual #113                // Method com/sun/jna/Memory.size:()J
        48: invokevirtual #114                // Method com/sun/jna/Memory.getByteBuffer:(JJ)Ljava/nio/ByteBuffer;
        51: invokestatic  #115                // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
        54: invokevirtual #116                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
        57: putfield      #52                 // Field outBuffer:Ljava/nio/ByteBuffer;
        60: aload_0
        61: new           #109                // class com/sun/jna/Memory
        64: dup
        65: ldc2_w        #110                // long 65536l
        68: invokespecial #112                // Method com/sun/jna/Memory."<init>":(J)V
        71: putfield      #61                 // Field errBufferMemory:Lcom/sun/jna/Memory;
        74: aload_0
        75: aload_0
        76: getfield      #61                 // Field errBufferMemory:Lcom/sun/jna/Memory;
        79: lconst_0
        80: aload_0
        81: getfield      #60                 // Field outBufferMemory:Lcom/sun/jna/Memory;
        84: invokevirtual #113                // Method com/sun/jna/Memory.size:()J
        87: invokevirtual #114                // Method com/sun/jna/Memory.getByteBuffer:(JJ)Ljava/nio/ByteBuffer;
        90: invokestatic  #115                // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
        93: invokevirtual #116                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
        96: putfield      #55                 // Field errBuffer:Ljava/nio/ByteBuffer;
        99: aload_0
       100: new           #109                // class com/sun/jna/Memory
       103: dup
       104: ldc2_w        #110                // long 65536l
       107: invokespecial #112                // Method com/sun/jna/Memory."<init>":(J)V
       110: putfield      #62                 // Field inBufferMemory:Lcom/sun/jna/Memory;
       113: aload_0
       114: aload_0
       115: getfield      #62                 // Field inBufferMemory:Lcom/sun/jna/Memory;
       118: lconst_0
       119: aload_0
       120: getfield      #60                 // Field outBufferMemory:Lcom/sun/jna/Memory;
       123: invokevirtual #113                // Method com/sun/jna/Memory.size:()J
       126: invokevirtual #114                // Method com/sun/jna/Memory.getByteBuffer:(JJ)Ljava/nio/ByteBuffer;
       129: invokestatic  #115                // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
       132: invokevirtual #116                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
       135: putfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       138: aload_0
       139: getfield      #63                 // Field inBuffer:Ljava/nio/ByteBuffer;
       142: iconst_0
       143: invokevirtual #77                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
       146: pop
       147: return
      LineNumberTable:
        line 514: 0
        line 515: 5
        line 517: 10
        line 519: 21
        line 520: 35
        line 522: 60
        line 523: 74
        line 525: 99
        line 526: 113
        line 530: 138
        line 531: 147
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     148     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;

  protected void registerProcess();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=5, locals=5, args_size=1
         0: getstatic     #117                // Field processors:[Lcom/zaxxer/nuprocess/internal/IEventProcessor;
         3: dup
         4: astore_2
         5: monitorenter
         6: getstatic     #118                // Field processorRoundRobin:I
         9: istore_1
        10: getstatic     #118                // Field processorRoundRobin:I
        13: iconst_1
        14: iadd
        15: getstatic     #117                // Field processors:[Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        18: arraylength
        19: irem
        20: putstatic     #118                // Field processorRoundRobin:I
        23: aload_2
        24: monitorexit
        25: goto          33
        28: astore_3
        29: aload_2
        30: monitorexit
        31: aload_3
        32: athrow
        33: aload_0
        34: getstatic     #117                // Field processors:[Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        37: iload_1
        38: aaload
        39: putfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        42: aload_0
        43: getfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        46: aload_0
        47: invokeinterface #119,  2          // InterfaceMethod com/zaxxer/nuprocess/internal/IEventProcessor.registerProcess:(Lcom/zaxxer/nuprocess/internal/BasePosixProcess;)V
        52: aload_0
        53: getfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        56: invokeinterface #120,  1          // InterfaceMethod com/zaxxer/nuprocess/internal/IEventProcessor.checkAndSetRunning:()Z
        61: ifeq          134
        64: aload_0
        65: getfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        68: invokeinterface #121,  1          // InterfaceMethod com/zaxxer/nuprocess/internal/IEventProcessor.getSpawnBarrier:()Ljava/util/concurrent/CyclicBarrier;
        73: astore_2
        74: new           #122                // class java/lang/Thread
        77: dup
        78: aload_0
        79: getfield      #34                 // Field myProcessor:Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        82: new           #97                 // class java/lang/StringBuilder
        85: dup
        86: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
        89: ldc           #123                // String ProcessQueue
        91: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        94: iload_1
        95: invokevirtual #124                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        98: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       101: invokespecial #125                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
       104: astore_3
       105: aload_3
       106: iconst_1
       107: invokevirtual #126                // Method java/lang/Thread.setDaemon:(Z)V
       110: aload_3
       111: invokevirtual #127                // Method java/lang/Thread.start:()V
       114: aload_2
       115: invokevirtual #128                // Method java/util/concurrent/CyclicBarrier.await:()I
       118: pop
       119: goto          134
       122: astore        4
       124: new           #73                 // class java/lang/RuntimeException
       127: dup
       128: aload         4
       130: invokespecial #129                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
       133: athrow
       134: return
      Exception table:
         from    to  target type
             6    25    28   any
            28    31    28   any
           114   119   122   Class java/lang/Exception
      LineNumberTable:
        line 537: 0
        line 538: 6
        line 539: 10
        line 540: 23
        line 542: 33
        line 543: 42
        line 545: 52
        line 546: 64
        line 548: 74
        line 549: 105
        line 550: 110
        line 553: 114
        line 557: 119
        line 555: 122
        line 556: 124
        line 559: 134
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      18     1 mySlot   I
          124      10     4     e   Ljava/lang/Exception;
           74      60     2 spawnBarrier   Ljava/util/concurrent/CyclicBarrier;
          105      29     3     t   Ljava/lang/Thread;
            0     135     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
           33     102     1 mySlot   I
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [ class com/zaxxer/nuprocess/internal/BasePosixProcess, top, class java/lang/Object ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class com/zaxxer/nuprocess/internal/BasePosixProcess, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 88
          locals = [ class com/zaxxer/nuprocess/internal/BasePosixProcess, int, class java/util/concurrent/CyclicBarrier, class java/lang/Thread ]
          stack = [ class java/lang/Exception ]
        frame_type = 249 /* chop */
          offset_delta = 11

  protected void callPreStart();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
         4: aload_0
         5: invokeinterface #130,  2          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onPreStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
        10: goto          26
        13: astore_1
        14: getstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
        17: getstatic     #67                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
        20: ldc           #68                 // String Exception thrown from handler
        22: aload_1
        23: invokevirtual #69                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        26: return
      Exception table:
         from    to  target type
             0    10    13   Class java/lang/Exception
      LineNumberTable:
        line 564: 0
        line 569: 10
        line 566: 13
        line 568: 14
        line 570: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      12     1     e   Ljava/lang/Exception;
            0      27     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 12 /* same */

  protected void callStart();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #2                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
         4: aload_0
         5: invokeinterface #131,  2          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
        10: goto          26
        13: astore_1
        14: getstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
        17: getstatic     #67                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
        20: ldc           #68                 // String Exception thrown from handler
        22: aload_1
        23: invokevirtual #69                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        26: return
      Exception table:
         from    to  target type
             0    10    13   Class java/lang/Exception
      LineNumberTable:
        line 575: 0
        line 580: 10
        line 577: 13
        line 579: 14
        line 581: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      12     1     e   Ljava/lang/Exception;
            0      27     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 12 /* same */

  protected int[] createPipes();
    descriptor: ()[I
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=5, locals=5, args_size=1
         0: iconst_2
         1: newarray       int
         3: astore_1
         4: iconst_2
         5: newarray       int
         7: astore_2
         8: iconst_2
         9: newarray       int
        11: astore_3
        12: aload_1
        13: invokestatic  #132                // Method com/zaxxer/nuprocess/internal/LibC.pipe:([I)I
        16: istore        4
        18: iload         4
        20: ldc           #133                // String Create stdin pipe() failed
        22: invokestatic  #31                 // Method checkReturnCode:(ILjava/lang/String;)V
        25: aload_2
        26: invokestatic  #132                // Method com/zaxxer/nuprocess/internal/LibC.pipe:([I)I
        29: istore        4
        31: iload         4
        33: ldc           #134                // String Create stdout pipe() failed
        35: invokestatic  #31                 // Method checkReturnCode:(ILjava/lang/String;)V
        38: aload_3
        39: invokestatic  #132                // Method com/zaxxer/nuprocess/internal/LibC.pipe:([I)I
        42: istore        4
        44: iload         4
        46: ldc           #135                // String Create stderr pipe() failed
        48: invokestatic  #31                 // Method checkReturnCode:(ILjava/lang/String;)V
        51: aload_0
        52: aload_1
        53: iconst_1
        54: iaload
        55: aload_2
        56: iconst_0
        57: iaload
        58: aload_3
        59: iconst_0
        60: iaload
        61: invokespecial #136                // Method setNonBlocking:(III)V
        64: aload_0
        65: new           #13                 // class com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor
        68: dup
        69: aload_1
        70: iconst_1
        71: iaload
        72: invokespecial #14                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor."<init>":(I)V
        75: putfield      #15                 // Field stdin:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        78: aload_0
        79: new           #13                 // class com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor
        82: dup
        83: aload_2
        84: iconst_0
        85: iaload
        86: invokespecial #14                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor."<init>":(I)V
        89: putfield      #16                 // Field stdout:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
        92: aload_0
        93: new           #13                 // class com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor
        96: dup
        97: aload_3
        98: iconst_0
        99: iaload
       100: invokespecial #14                 // Method com/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor."<init>":(I)V
       103: putfield      #17                 // Field stderr:Lcom/zaxxer/nuprocess/internal/ReferenceCountedFileDescriptor;
       106: aload_0
       107: aload_1
       108: iconst_0
       109: iaload
       110: putfield      #137                // Field stdinWidow:I
       113: aload_0
       114: aload_2
       115: iconst_1
       116: iaload
       117: putfield      #138                // Field stdoutWidow:I
       120: aload_0
       121: aload_3
       122: iconst_1
       123: iaload
       124: putfield      #139                // Field stderrWidow:I
       127: iconst_3
       128: newarray       int
       130: dup
       131: iconst_0
       132: aload_1
       133: iconst_1
       134: iaload
       135: iastore
       136: dup
       137: iconst_1
       138: aload_2
       139: iconst_0
       140: iaload
       141: iastore
       142: dup
       143: iconst_2
       144: aload_3
       145: iconst_0
       146: iaload
       147: iastore
       148: areturn
       149: astore        4
       151: getstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
       154: getstatic     #96                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       157: ldc           #140                // String Error creating pipes
       159: aload         4
       161: invokevirtual #69                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       164: aload_0
       165: aload_1
       166: aload_2
       167: aload_3
       168: invokevirtual #141                // Method initFailureCleanup:([I[I[I)V
       171: aload         4
       173: athrow
      Exception table:
         from    to  target type
            12   148   149   Class java/lang/RuntimeException
      LineNumberTable:
        line 585: 0
        line 586: 4
        line 587: 8
        line 590: 12
        line 591: 18
        line 592: 25
        line 593: 31
        line 594: 38
        line 595: 44
        line 597: 51
        line 599: 64
        line 600: 78
        line 601: 92
        line 603: 106
        line 604: 113
        line 605: 120
        line 607: 127
        line 609: 149
        line 610: 151
        line 611: 164
        line 612: 171
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18     131     4    rc   I
          151      23     4     e   Ljava/lang/RuntimeException;
            0     174     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            4     170     1    in   [I
            8     166     2   out   [I
           12     162     3   err   [I
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 149
          locals = [ class com/zaxxer/nuprocess/internal/BasePosixProcess, class "[I", class "[I", class "[I" ]
          stack = [ class java/lang/RuntimeException ]

  protected void initFailureCleanup(int[], int[], int[]);
    descriptor: ([I[I[I)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=7, args_size=4
         0: new           #142                // class java/util/HashSet
         3: dup
         4: invokespecial #143                // Method java/util/HashSet."<init>":()V
         7: astore        4
         9: aload         4
        11: aload_1
        12: iconst_0
        13: iaload
        14: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        17: invokeinterface #145,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
        22: pop
        23: aload         4
        25: aload_1
        26: iconst_1
        27: iaload
        28: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        31: invokeinterface #145,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
        36: pop
        37: aload         4
        39: aload_2
        40: iconst_0
        41: iaload
        42: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        45: invokeinterface #145,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
        50: pop
        51: aload         4
        53: aload_2
        54: iconst_1
        55: iaload
        56: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        59: invokeinterface #145,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
        64: pop
        65: aload         4
        67: aload_3
        68: iconst_0
        69: iaload
        70: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        73: invokeinterface #145,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
        78: pop
        79: aload         4
        81: aload_3
        82: iconst_1
        83: iaload
        84: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        87: invokeinterface #145,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
        92: pop
        93: aload         4
        95: iconst_0
        96: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        99: invokeinterface #146,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
       104: pop
       105: aload         4
       107: invokeinterface #147,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       112: astore        5
       114: aload         5
       116: invokeinterface #148,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
       121: ifeq          148
       124: aload         5
       126: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       131: checkcast     #24                 // class java/lang/Integer
       134: invokevirtual #105                // Method java/lang/Integer.intValue:()I
       137: istore        6
       139: iload         6
       141: invokestatic  #150                // Method com/zaxxer/nuprocess/internal/LibC.close:(I)I
       144: pop
       145: goto          114
       148: return
      LineNumberTable:
        line 618: 0
        line 620: 9
        line 621: 23
        line 623: 37
        line 624: 51
        line 626: 65
        line 627: 79
        line 629: 93
        line 631: 105
        line 632: 139
        line 633: 145
        line 634: 148
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          139       6     6    fd   I
            0     149     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0     149     1    in   [I
            0     149     2   out   [I
            0     149     3   err   [I
            9     140     4 unique   Ljava/util/Set;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            9     140     4 unique   Ljava/util/Set<Ljava/lang/Integer;>;
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 114
          locals = [ class java/util/Set, class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 33

  protected static void checkReturnCode(int, java.lang.String);
    descriptor: (ILjava/lang/String;)V
    flags: (0x000c) ACC_PROTECTED, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=2
         0: iload_0
         1: ifeq          46
         4: new           #73                 // class java/lang/RuntimeException
         7: dup
         8: new           #97                 // class java/lang/StringBuilder
        11: dup
        12: invokespecial #98                 // Method java/lang/StringBuilder."<init>":()V
        15: aload_1
        16: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: ldc           #151                // String , return code:
        21: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: iload_0
        25: invokevirtual #124                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        28: ldc           #152                // String , last error:
        30: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        33: invokestatic  #84                 // Method com/sun/jna/Native.getLastError:()I
        36: invokevirtual #124                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        39: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        42: invokespecial #75                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        45: athrow
        46: return
      LineNumberTable:
        line 638: 0
        line 639: 4
        line 641: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0    rc   I
            0      47     1 failureMessage   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 46 /* same */

  private void setNonBlocking(int, int, int);
    descriptor: (III)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=5, args_size=4
         0: iload_1
         1: iconst_4
         2: iload_1
         3: iconst_3
         4: invokestatic  #153                // Method com/zaxxer/nuprocess/internal/LibC.fcntl:(II)I
         7: getstatic     #154                // Field com/zaxxer/nuprocess/internal/LibC.O_NONBLOCK:I
        10: ior
        11: i2l
        12: invokestatic  #155                // Method com/zaxxer/nuprocess/internal/LibC.fcntl:(IIJ)I
        15: istore        4
        17: iload         4
        19: ldc           #156                // String fnctl on stdin handle failed
        21: invokestatic  #31                 // Method checkReturnCode:(ILjava/lang/String;)V
        24: iload_2
        25: iconst_4
        26: iload_2
        27: iconst_3
        28: invokestatic  #153                // Method com/zaxxer/nuprocess/internal/LibC.fcntl:(II)I
        31: getstatic     #154                // Field com/zaxxer/nuprocess/internal/LibC.O_NONBLOCK:I
        34: ior
        35: i2l
        36: invokestatic  #155                // Method com/zaxxer/nuprocess/internal/LibC.fcntl:(IIJ)I
        39: istore        4
        41: iload         4
        43: ldc           #157                // String fnctl on stdout handle failed
        45: invokestatic  #31                 // Method checkReturnCode:(ILjava/lang/String;)V
        48: iload_3
        49: iconst_4
        50: iload_3
        51: iconst_3
        52: invokestatic  #153                // Method com/zaxxer/nuprocess/internal/LibC.fcntl:(II)I
        55: getstatic     #154                // Field com/zaxxer/nuprocess/internal/LibC.O_NONBLOCK:I
        58: ior
        59: i2l
        60: invokestatic  #155                // Method com/zaxxer/nuprocess/internal/LibC.fcntl:(IIJ)I
        63: istore        4
        65: iload         4
        67: ldc           #158                // String fnctl on stderr handle failed
        69: invokestatic  #31                 // Method checkReturnCode:(ILjava/lang/String;)V
        72: return
      LineNumberTable:
        line 645: 0
        line 646: 17
        line 647: 24
        line 648: 41
        line 649: 48
        line 650: 65
        line 651: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      73     0  this   Lcom/zaxxer/nuprocess/internal/BasePosixProcess;
            0      73     1    in   I
            0      73     2   out   I
            0      73     3   err   I
           17      56     4    rc   I

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=5, locals=0, args_size=0
         0: ldc           #159                // class com/zaxxer/nuprocess/internal/BasePosixProcess
         2: invokevirtual #160                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
         5: invokestatic  #161                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
         8: putstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
        11: iconst_1
        12: invokestatic  #162                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
        15: putstatic     #44                 // Field STDIN_CLOSED_PENDING_WRITE_TOMBSTONE:Ljava/nio/ByteBuffer;
        18: ldc           #163                // String com.zaxxer.nuprocess.softExitDetection
        20: ldc           #164                // String true
        22: invokestatic  #165                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        25: invokestatic  #166                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
        28: putstatic     #48                 // Field IS_SOFTEXIT_DETECTION:Z
        31: getstatic     #167                // Field com/zaxxer/nuprocess/internal/Constants.NUMBER_OF_THREADS:I
        34: anewarray     #168                // class com/zaxxer/nuprocess/internal/IEventProcessor
        37: putstatic     #117                // Field processors:[Lcom/zaxxer/nuprocess/internal/IEventProcessor;
        40: ldc           #169                // String com.zaxxer.nuprocess.enableShutdownHook
        42: ldc           #164                // String true
        44: invokestatic  #165                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        47: invokestatic  #166                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
        50: ifeq          73
        53: invokestatic  #170                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
        56: new           #122                // class java/lang/Thread
        59: dup
        60: new           #171                // class com/zaxxer/nuprocess/internal/BasePosixProcess$1
        63: dup
        64: invokespecial #172                // Method com/zaxxer/nuprocess/internal/BasePosixProcess$1."<init>":()V
        67: invokespecial #173                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
        70: invokevirtual #174                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
        73: return
      LineNumberTable:
        line 45: 0
        line 48: 11
        line 92: 18
        line 94: 31
        line 96: 40
        line 97: 53
        line 109: 73
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 73
}
SourceFile: "BasePosixProcess.java"
InnerClasses:
  #171;                                   // class com/zaxxer/nuprocess/internal/BasePosixProcess$1
