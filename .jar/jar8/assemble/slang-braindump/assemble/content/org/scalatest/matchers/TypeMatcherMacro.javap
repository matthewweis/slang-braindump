Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/matchers/TypeMatcherMacro.class
  Last modified May 29, 2022; size 6953 bytes
  SHA-256 checksum 4e674ed91bfd7f803dae45907923f60f24d67ccb4ba7e0172b3db6fe5228d233
  Compiled from "TypeMatcherMacro.scala"
public final class org.scalatest.matchers.TypeMatcherMacro
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/matchers/TypeMatcherMacro
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 17, attributes: 4
Constant pool:
    #1 = Utf8               org/scalatest/matchers/TypeMatcherMacro
    #2 = Class              #1            // org/scalatest/matchers/TypeMatcherMacro
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               TypeMatcherMacro.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\t\u0015uA\u0002\u000b\u0016\u0011\u000392D\u0002\u0004\u001e+!\u0005qC\b\u0005\u0006K\u0005!\ta\n\u0005\u0006Q\u0005!\t!\u000b\u0005\u0006/\u0006!\t\u0001\u0017\u0005\u0006m\u0006!\ta\u001e\u0005\b\u0003\u001b\tA\u0011AA\b\u0011\u001d\t9#\u0001C\u0001\u0003SAq!!\u0011\u0002\t\u0003\t\u0019\u0005C\u0004\u0002\\\u0005!\t!!\u0018\t\u000f\u0005U\u0014\u0001\"\u0001\u0002x!9\u0011qR\u0001\u0005\u0002\u0005E\u0005bBAU\u0003\u0011\u0005\u00111\u0016\u0005\b\u0003+\fA\u0011AAl\u0011\u001d\ty/\u0001C\u0001\u0003cDqA!\u0003\u0002\t\u0003\u0011Y\u0001C\u0004\u0003$\u0005!\tA!\n\t\u000f\tu\u0012\u0001\"\u0001\u0003@!9!\u0011K\u0001\u0005\u0002\tM\u0003b\u0002B6\u0003\u0011\u0005!QN\u0001\u0011)f\u0004X-T1uG\",\'/T1de>T!AF\f\u0002\u00115\fGo\u00195feNT!\u0001G\r\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\u000e\u0002\u0007=\u0014x\r\u0005\u0002\u001d\u00035\tQC\u0001\tUsB,W*\u0019;dQ\u0016\u0014X*Y2s_N\u0011\u0011a\b\t\u0003A\rj\u0011!\t\u0006\u0002E\u0005)1oY1mC&\u0011A%\t\u0002\u0007\u0003:L(+\u001a4\u0002\rqJg.\u001b;?\u0007\u0001!\u0012aG\u0001\u0013G\",7m\u001b+za\u0016\u0004\u0016M]1nKR,\'\u000f\u0006\u0002+gQ\u00191FL\'\u0011\u0005\u0001b\u0013BA\u0017\"\u0005\u0011)f.\u001b;\t\u000b=\u001a\u0001\u0019\u0001\u0019\u0002\tQ\u0014X-\u001a\t\u0003c%s!AM\u001a\r\u0001!)Ag\u0001a\u0001k\u000591m\u001c8uKb$\bC\u0001\u001cG\u001d\t94I\u0004\u00029\u0001:\u0011\u0011H\u0010\b\u0003uuj\u0011a\u000f\u0006\u0003y\u0019\na\u0001\u0010:p_Rt\u0014\"\u0001\u0012\n\u0005}\n\u0013a\u0002:fM2,7\r^\u0005\u0003\u0003\n\u000ba!\\1de>\u001c(BA \"\u0013\t!U)A\u0004qC\u000e\\\u0017mZ3\u000b\u0005\u0005\u0013\u0015BA$I\u0005\u001d\u0019uN\u001c;fqRT!\u0001R#\n\u0005)[%\u0001\u0002+sK\u0016L!\u0001T#\u0003\u000f\u0005c\u0017.Y:fg\")aj\u0001a\u0001\u001f\u0006QQ.\u001a;i_\u0012t\u0015-\\3\u0011\u0005A#fBA)S!\tQ\u0014%\u0003\u0002TC\u00051\u0001K]3eK\u001aL!!\u0016,\u0003\rM#(/\u001b8h\u0015\t\u0019\u0016%\u0001\tb)f\u0004X-T1uG\",\'/S7qYR\u0011\u0011\f\u0018\u000b\u00035\u0016\u00042aW/`\u001d\t\u0011D\fC\u00035\t\u0001\u0007Q\'\u0003\u0002_\u0017\n!Q\t\u001f9s!\ra\u0002MY\u0005\u0003CV\u0011q!T1uG\",\'\u000f\u0005\u0002!G&\u0011A-\t\u0002\u0004\u0003:L\b\"\u00024\u0005\u0001\u00049\u0017!B1UsB,\u0007cA.^QB\u0012\u0011\u000e\u001d\t\u0004U6|W\"A6\u000b\u00051,\u0012a\u00013tY&\u0011an\u001b\u0002\u0018%\u0016\u001cX\u000f\u001c;PM\u0006#\u0016\u0010]3J]Z|7-\u0019;j_:\u0004\"A\r9\u0005\u0013E,\u0017\u0011!A\u0001\u0006\u0003\u0011(aA0%cE\u00111O\u0019\t\u0003AQL!!^\u0011\u0003\u000f9{G\u000f[5oO\u0006\t\u0012M\u001c+za\u0016l\u0015\r^2iKJLU\u000e\u001d7\u0015\u0005a\\HCA=}!\rQXl\u0018\b\u0003emDQ\u0001N\u0003A\u0002UBQ!`\u0003A\u0002y\fa!\u00198UsB,\u0007c\u0001>^\u007fB\"\u0011\u0011AA\u0005!\u0015Q\u00171AA\u0004\u0013\r\t)a\u001b\u0002\u0019%\u0016\u001cX\u000f\u001c;PM\u0006sG+\u001f9f\u0013:4xnY1uS>t\u0007c\u0001\u001a\u0002\n\u0011Q\u00111\u0002?\u0002\u0002\u0003\u0005)\u0011\u0001:\u0003\u0007}##\'A\bo_R\fE+\u001f9f\u001b\u0006$8\r[3s)\u0011\t\t\"a\u0006\u0015\t\u0005M\u0011\u0011\u0004\t\u0005\u0003+ivLD\u00023\u0003/AQ\u0001\u000e\u0004A\u0002UBaA\u001a\u0004A\u0002\u0005m\u0001#BA\u000b;\u0006u\u0001\u0007BA\u0010\u0003G\u0001BA[7\u0002\"A\u0019!\'a\t\u0005\u0017\u0005\u0015\u0012\u0011DA\u0001\u0002\u0003\u0015\tA\u001d\u0002\u0004?\u0012\u001a\u0014\u0001\u00058pi\u0006sG+\u001f9f\u001b\u0006$8\r[3s)\u0011\tY#!\r\u0015\t\u00055\u00121\u0007\t\u0005\u0003_ivLD\u00023\u0003cAQ\u0001N\u0004A\u0002UBa!`\u0004A\u0002\u0005U\u0002#BA\u0018;\u0006]\u0002\u0007BA\u001d\u0003{\u0001RA[A\u0002\u0003w\u00012AMA\u001f\t-\ty$a\r\u0002\u0002\u0003\u0005)\u0011\u0001:\u0003\u0007}#C\'\u0001\nb]\u0012tu\u000e^!UsB,W*\u0019;dQ\u0016\u0014H\u0003BA#\u0003\u0017\"B!a\u0012\u0002NA!\u0011\u0011J/`\u001d\r\u0011\u00141\n\u0005\u0006i!\u0001\r!\u000e\u0005\u0007M\"\u0001\r!a\u0014\u0011\u000b\u0005%S,!\u00151\t\u0005M\u0013q\u000b\t\u0005U6\f)\u0006E\u00023\u0003/\"1\"!\u0017\u0002N\u0005\u0005\t\u0011!B\u0001e\n\u0019q\fJ\u001b\u0002\'\u0005tGMT8u\u0003:$\u0016\u0010]3NCR\u001c\u0007.\u001a:\u0015\t\u0005}\u0013Q\r\u000b\u0005\u0003C\n9\u0007\u0005\u0003\u0002du{fb\u0001\u001a\u0002f!)A\'\u0003a\u0001k!1Q0\u0003a\u0001\u0003S\u0002R!a\u0019^\u0003W\u0002D!!\u001c\u0002rA)!.a\u0001\u0002pA\u0019!\'!\u001d\u0005\u0017\u0005M\u0014qMA\u0001\u0002\u0003\u0015\tA\u001d\u0002\u0004?\u00122\u0014!E8s\u001d>$\u0018\tV=qK6\u000bGo\u00195feR!\u0011\u0011PA@)\u0011\tY(!!\u0011\t\u0005uTl\u0018\b\u0004e\u0005}\u0004\"\u0002\u001b\u000b\u0001\u0004)\u0004B\u00024\u000b\u0001\u0004\t\u0019\tE\u0003\u0002~u\u000b)\t\r\u0003\u0002\b\u0006-\u0005\u0003\u00026n\u0003\u0013\u00032AMAF\t-\ti)!!\u0002\u0002\u0003\u0005)\u0011\u0001:\u0003\u0007}#s\'\u0001\npe:{G/\u00118UsB,W*\u0019;dQ\u0016\u0014H\u0003BAJ\u00033#B!!&\u0002\u001cB!\u0011qS/`\u001d\r\u0011\u0014\u0011\u0014\u0005\u0006i-\u0001\r!\u000e\u0005\u0007{.\u0001\r!!(\u0011\u000b\u0005]U,a(1\t\u0005\u0005\u0016Q\u0015\t\u0006U\u0006\r\u00111\u0015\t\u0004e\u0005\u0015FaCAT\u00037\u000b\t\u0011!A\u0003\u0002I\u00141a\u0018\u00139\u00039\t7o]3siRK\b/Z%na2$B!!,\u00024RA\u0011qVAe\u0003\u001b\f\t\u000eE\u0003\u00022v\u000b)LD\u00023\u0003gCQ\u0001\u000e\u0007A\u0002U\u0002B!a.\u0002D:!\u0011\u0011XAa\u001d\u0011\tY,a0\u000f\u0007i\ni,C\u0001\u001b\u0013\tA\u0012$\u0003\u0002E/%!\u0011QYAd\u0005%\t5o]3si&|gN\u0003\u0002E/!1q\u0006\u0004a\u0001\u0003\u0017\u00042!!-J\u0011\u0019\ty\r\u0004a\u0001\u001f\u0006a!-Z\'fi\"|GMT1nK\"1\u00111\u001b\u0007A\u0002=\u000b\u0001#Y:tKJ$X*\u001a;i_\u0012t\u0015-\\3\u0002#MDw.\u001e7e\u0005\u0016\fE+\u001f9f\u00136\u0004H\u000e\u0006\u0003\u0002Z\u0006}G\u0003BAn\u0003C\u0004R!!8^\u0003ks1AMAp\u0011\u0015!T\u00021\u00016\u0011\u00191W\u00021\u0001\u0002dB)\u0011Q\\/\u0002fB\"\u0011q]Av!\u0011QW.!;\u0011\u0007I\nY\u000fB\u0006\u0002n\u0006\u0005\u0018\u0011!A\u0001\u0006\u0003\u0011(aA0%s\u0005yQ.^:u\u0005\u0016\fE+\u001f9f\u00136\u0004H\u000e\u0006\u0003\u0002t\u0006eH\u0003BA{\u0003w\u0004R!a>^\u0003ks1AMA}\u0011\u0015!d\u00021\u00016\u0011\u00191g\u00021\u0001\u0002~B)\u0011q_/\u0002\u0000B\"!\u0011\u0001B\u0003!\u0011QWNa\u0001\u0011\u0007I\u0012)\u0001B\u0006\u0003\b\u0005m\u0018\u0011!A\u0001\u0006\u0003\u0011(\u0001B0%cA\n!c\u001d5pk2$\')Z!o)f\u0004X-S7qYR!!Q\u0002B\n)\u0011\u0011yA!\u0006\u0011\u000b\tEQ,!.\u000f\u0007I\u0012\u0019\u0002C\u00035\u001f\u0001\u0007Q\u0007\u0003\u0004~\u001f\u0001\u0007!q\u0003\t\u0006\u0005#i&\u0011\u0004\u0019\u0005\u00057\u0011y\u0002E\u0003k\u0003\u0007\u0011i\u0002E\u00023\u0005?!1B!\t\u0003\u0016\u0005\u0005\t\u0011!B\u0001e\n!q\fJ\u00192\u0003AiWo\u001d;CK\u0006sG+\u001f9f\u00136\u0004H\u000e\u0006\u0003\u0003(\t5B\u0003\u0002B\u0015\u0005_\u0001RAa\u000b^\u0003ks1A\rB\u0017\u0011\u0015!\u0004\u00031\u00016\u0011\u0019i\b\u00031\u0001\u00032A)!1F/\u00034A\"!Q\u0007B\u001d!\u0015Q\u00171\u0001B\u001c!\r\u0011$\u0011\b\u0003\f\u0005w\u0011y#!A\u0001\u0002\u000b\u0005!O\u0001\u0003`IE\u0012\u0014AG1tg\u0016\u0014H\u000fV=qKNCw.\u001e7e\u0005\u0016$&/^3J[BdG\u0003\u0002B!\u0005\u000f\"\u0002Ba\u0011\u0003J\t5#q\n\t\u0006\u0005\u000bj\u0016Q\u0017\b\u0004e\t\u001d\u0003\"\u0002\u001b\u0012\u0001\u0004)\u0004BB\u0018\u0012\u0001\u0004\u0011Y\u0005E\u0002\u0003F%Ca!a4\u0012\u0001\u0004y\u0005BBAj#\u0001\u0007q*A\u000ebgN,\'\u000f^!UsB,7\u000b[8vY\u0012\u0014U\r\u0016:vK&k\u0007\u000f\u001c\u000b\u0005\u0005+\u0012Y\u0006\u0006\u0003\u0003X\tu\u0003#\u0002B-;\u0006Ufb\u0001\u001a\u0003\\!)AG\u0005a\u0001k!1aM\u0005a\u0001\u0005?\u0002RA!\u0017^\u0005C\u0002DAa\u0019\u0003hA!!.\u001cB3!\r\u0011$q\r\u0003\f\u0005S\u0012i&!A\u0001\u0002\u000b\u0005!O\u0001\u0003`IE\u001a\u0014\u0001H1tg\u0016\u0014H/\u00118UsB,7\u000b[8vY\u0012\u0014U\r\u0016:vK&k\u0007\u000f\u001c\u000b\u0005\u0005_\u0012)\b\u0006\u0003\u0003r\t]\u0004#\u0002B:;\u0006Ufb\u0001\u001a\u0003v!)Ag\u0005a\u0001k!1Qp\u0005a\u0001\u0005s\u0002RAa\u001d^\u0005w\u0002DA! \u0003\u0002B)!.a\u0001\u0003\u0000A\u0019!G!!\u0005\u0017\t\r%qOA\u0001\u0002\u0003\u0015\tA\u001d\u0002\u0005?\u0012\nD\u0007
    #9 = Utf8               scala/reflect/api/Exprs$Expr
   #10 = Class              #9            // scala/reflect/api/Exprs$Expr
   #11 = Utf8               scala/reflect/api/Exprs
   #12 = Class              #11           // scala/reflect/api/Exprs
   #13 = Utf8               Expr
   #14 = Utf8               scala/reflect/api/Trees$TreeApi
   #15 = Class              #14           // scala/reflect/api/Trees$TreeApi
   #16 = Utf8               scala/reflect/api/Trees
   #17 = Class              #16           // scala/reflect/api/Trees
   #18 = Utf8               TreeApi
   #19 = Utf8               assertAnTypeShouldBeTrueImpl
   #20 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #21 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
   #22 = Utf8               context
   #23 = Utf8               anType
   #24 = Utf8               org/scalatest/matchers/TypeMatcherMacro$
   #25 = Class              #24           // org/scalatest/matchers/TypeMatcherMacro$
   #26 = Utf8               MODULE$
   #27 = Utf8               Lorg/scalatest/matchers/TypeMatcherMacro$;
   #28 = NameAndType        #26:#27       // MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
   #29 = Fieldref           #25.#28       // org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
   #30 = NameAndType        #19:#20       // assertAnTypeShouldBeTrueImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #31 = Methodref          #25.#30       // org/scalatest/matchers/TypeMatcherMacro$.assertAnTypeShouldBeTrueImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #32 = Utf8               Lscala/reflect/macros/whitebox/Context;
   #33 = Utf8               Lscala/reflect/api/Exprs$Expr;
   #34 = Utf8               assertATypeShouldBeTrueImpl
   #35 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
   #36 = Utf8               aType
   #37 = NameAndType        #34:#20       // assertATypeShouldBeTrueImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #38 = Methodref          #25.#37       // org/scalatest/matchers/TypeMatcherMacro$.assertATypeShouldBeTrueImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #39 = Utf8               assertTypeShouldBeTrueImpl
   #40 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #41 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
   #42 = Utf8               tree
   #43 = Utf8               beMethodName
   #44 = Utf8               assertMethodName
   #45 = NameAndType        #39:#40       // assertTypeShouldBeTrueImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #46 = Methodref          #25.#45       // org/scalatest/matchers/TypeMatcherMacro$.assertTypeShouldBeTrueImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #47 = Utf8               Lscala/reflect/api/Trees$TreeApi;
   #48 = Utf8               Ljava/lang/String;
   #49 = Utf8               mustBeAnTypeImpl
   #50 = NameAndType        #49:#20       // mustBeAnTypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #51 = Methodref          #25.#50       // org/scalatest/matchers/TypeMatcherMacro$.mustBeAnTypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #52 = Utf8               shouldBeAnTypeImpl
   #53 = NameAndType        #52:#20       // shouldBeAnTypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #54 = Methodref          #25.#53       // org/scalatest/matchers/TypeMatcherMacro$.shouldBeAnTypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #55 = Utf8               mustBeATypeImpl
   #56 = NameAndType        #55:#20       // mustBeATypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #57 = Methodref          #25.#56       // org/scalatest/matchers/TypeMatcherMacro$.mustBeATypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #58 = Utf8               shouldBeATypeImpl
   #59 = NameAndType        #58:#20       // shouldBeATypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #60 = Methodref          #25.#59       // org/scalatest/matchers/TypeMatcherMacro$.shouldBeATypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #61 = Utf8               assertTypeImpl
   #62 = NameAndType        #61:#40       // assertTypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #63 = Methodref          #25.#62       // org/scalatest/matchers/TypeMatcherMacro$.assertTypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #64 = Utf8               orNotAnTypeMatcher
   #65 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
   #66 = NameAndType        #64:#20       // orNotAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #67 = Methodref          #25.#66       // org/scalatest/matchers/TypeMatcherMacro$.orNotAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #68 = Utf8               orNotATypeMatcher
   #69 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
   #70 = NameAndType        #68:#20       // orNotATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #71 = Methodref          #25.#70       // org/scalatest/matchers/TypeMatcherMacro$.orNotATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #72 = Utf8               andNotAnTypeMatcher
   #73 = NameAndType        #72:#20       // andNotAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #74 = Methodref          #25.#73       // org/scalatest/matchers/TypeMatcherMacro$.andNotAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #75 = Utf8               andNotATypeMatcher
   #76 = NameAndType        #75:#20       // andNotATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #77 = Methodref          #25.#76       // org/scalatest/matchers/TypeMatcherMacro$.andNotATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #78 = Utf8               notAnTypeMatcher
   #79 = NameAndType        #78:#20       // notAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #80 = Methodref          #25.#79       // org/scalatest/matchers/TypeMatcherMacro$.notAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #81 = Utf8               notATypeMatcher
   #82 = NameAndType        #81:#20       // notATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #83 = Methodref          #25.#82       // org/scalatest/matchers/TypeMatcherMacro$.notATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #84 = Utf8               anTypeMatcherImpl
   #85 = NameAndType        #84:#20       // anTypeMatcherImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #86 = Methodref          #25.#85       // org/scalatest/matchers/TypeMatcherMacro$.anTypeMatcherImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #87 = Utf8               aTypeMatcherImpl
   #88 = NameAndType        #87:#20       // aTypeMatcherImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #89 = Methodref          #25.#88       // org/scalatest/matchers/TypeMatcherMacro$.aTypeMatcherImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #90 = Utf8               checkTypeParameter
   #91 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)V
   #92 = Utf8               methodName
   #93 = NameAndType        #90:#91       // checkTypeParameter:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)V
   #94 = Methodref          #25.#93       // org/scalatest/matchers/TypeMatcherMacro$.checkTypeParameter:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)V
   #95 = Utf8               Code
   #96 = Utf8               LocalVariableTable
   #97 = Utf8               Signature
   #98 = Utf8               MethodParameters
   #99 = Utf8               InnerClasses
  #100 = Utf8               SourceFile
  #101 = Utf8               RuntimeVisibleAnnotations
  #102 = Utf8               ScalaSig
{
  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertAnTypeShouldBeTrueImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #31                 // Method org/scalatest/matchers/TypeMatcherMacro$.assertAnTypeShouldBeTrueImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 anType   Lscala/reflect/api/Exprs$Expr;
    Signature: #21                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      anType                         final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertATypeShouldBeTrueImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #38                 // Method org/scalatest/matchers/TypeMatcherMacro$.assertATypeShouldBeTrueImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 aType   Lscala/reflect/api/Exprs$Expr;
    Signature: #35                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      aType                          final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertTypeShouldBeTrueImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Trees$TreeApi, java.lang.String, java.lang.String);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #46                 // Method org/scalatest/matchers/TypeMatcherMacro$.assertTypeShouldBeTrueImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 context   Lscala/reflect/macros/whitebox/Context;
            0      11     1  tree   Lscala/reflect/api/Trees$TreeApi;
            0      11     2 beMethodName   Ljava/lang/String;
            0      11     3 assertMethodName   Ljava/lang/String;
    Signature: #41                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      tree                           final
      beMethodName                   final
      assertMethodName               final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> mustBeAnTypeImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #51                 // Method org/scalatest/matchers/TypeMatcherMacro$.mustBeAnTypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 anType   Lscala/reflect/api/Exprs$Expr;
    Signature: #21                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      anType                         final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> shouldBeAnTypeImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #54                 // Method org/scalatest/matchers/TypeMatcherMacro$.shouldBeAnTypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 anType   Lscala/reflect/api/Exprs$Expr;
    Signature: #21                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      anType                         final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> mustBeATypeImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #57                 // Method org/scalatest/matchers/TypeMatcherMacro$.mustBeATypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 aType   Lscala/reflect/api/Exprs$Expr;
    Signature: #35                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      aType                          final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> shouldBeATypeImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #60                 // Method org/scalatest/matchers/TypeMatcherMacro$.shouldBeATypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 aType   Lscala/reflect/api/Exprs$Expr;
    Signature: #35                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      aType                          final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertTypeImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Trees$TreeApi, java.lang.String, java.lang.String);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #63                 // Method org/scalatest/matchers/TypeMatcherMacro$.assertTypeImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 context   Lscala/reflect/macros/whitebox/Context;
            0      11     1  tree   Lscala/reflect/api/Trees$TreeApi;
            0      11     2 beMethodName   Ljava/lang/String;
            0      11     3 assertMethodName   Ljava/lang/String;
    Signature: #41                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      context                        final
      tree                           final
      beMethodName                   final
      assertMethodName               final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.matchers.Matcher<java.lang.Object>> orNotAnTypeMatcher(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #67                 // Method org/scalatest/matchers/TypeMatcherMacro$.orNotAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 anType   Lscala/reflect/api/Exprs$Expr;
    Signature: #65                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      anType                         final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.matchers.Matcher<java.lang.Object>> orNotATypeMatcher(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #71                 // Method org/scalatest/matchers/TypeMatcherMacro$.orNotATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 aType   Lscala/reflect/api/Exprs$Expr;
    Signature: #69                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      aType                          final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.matchers.Matcher<java.lang.Object>> andNotAnTypeMatcher(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #74                 // Method org/scalatest/matchers/TypeMatcherMacro$.andNotAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 anType   Lscala/reflect/api/Exprs$Expr;
    Signature: #65                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      anType                         final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.matchers.Matcher<java.lang.Object>> andNotATypeMatcher(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #77                 // Method org/scalatest/matchers/TypeMatcherMacro$.andNotATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 aType   Lscala/reflect/api/Exprs$Expr;
    Signature: #69                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      aType                          final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.matchers.Matcher<java.lang.Object>> notAnTypeMatcher(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #80                 // Method org/scalatest/matchers/TypeMatcherMacro$.notAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 anType   Lscala/reflect/api/Exprs$Expr;
    Signature: #65                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      anType                         final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.matchers.Matcher<java.lang.Object>> notATypeMatcher(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #83                 // Method org/scalatest/matchers/TypeMatcherMacro$.notATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 aType   Lscala/reflect/api/Exprs$Expr;
    Signature: #69                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      aType                          final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.matchers.Matcher<java.lang.Object>> anTypeMatcherImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #86                 // Method org/scalatest/matchers/TypeMatcherMacro$.anTypeMatcherImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 anType   Lscala/reflect/api/Exprs$Expr;
    Signature: #65                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      anType                         final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.matchers.Matcher<java.lang.Object>> aTypeMatcherImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #89                 // Method org/scalatest/matchers/TypeMatcherMacro$.aTypeMatcherImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 context   Lscala/reflect/macros/whitebox/Context;
            0       9     1 aType   Lscala/reflect/api/Exprs$Expr;
    Signature: #69                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/Matcher<Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      aType                          final

  public static void checkTypeParameter(scala.reflect.macros.whitebox.Context, scala.reflect.api.Trees$TreeApi, java.lang.String);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #29                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #94                 // Method org/scalatest/matchers/TypeMatcherMacro$.checkTypeParameter:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)V
         9: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 context   Lscala/reflect/macros/whitebox/Context;
            0      10     1  tree   Lscala/reflect/api/Trees$TreeApi;
            0      10     2 methodName   Ljava/lang/String;
    Signature: #91                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)V
    MethodParameters:
      Name                           Flags
      context                        final
      tree                           final
      methodName                     final
}
InnerClasses:
  public #13= #10 of #12;                 // Expr=class scala/reflect/api/Exprs$Expr of class scala/reflect/api/Exprs
  public #18= #15 of #17;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
SourceFile: "TypeMatcherMacro.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t\u0015uA\u0002\u000b\u0016\u0011\u000392D\u0002\u0004\u001e+!\u0005qC\b\u0005\u0006K\u0005!\ta\n\u0005\u0006Q\u0005!\t!\u000b\u0005\u0006/\u0006!\t\u0001\u0017\u0005\u0006m\u0006!\ta\u001e\u0005\b\u0003\u001b\tA\u0011AA\b\u0011\u001d\t9#\u0001C\u0001\u0003SAq!!\u0011\u0002\t\u0003\t\u0019\u0005C\u0004\u0002\\\u0005!\t!!\u0018\t\u000f\u0005U\u0014\u0001\"\u0001\u0002x!9\u0011qR\u0001\u0005\u0002\u0005E\u0005bBAU\u0003\u0011\u0005\u00111\u0016\u0005\b\u0003+\fA\u0011AAl\u0011\u001d\ty/\u0001C\u0001\u0003cDqA!\u0003\u0002\t\u0003\u0011Y\u0001C\u0004\u0003$\u0005!\tA!\n\t\u000f\tu\u0012\u0001\"\u0001\u0003@!9!\u0011K\u0001\u0005\u0002\tM\u0003b\u0002B6\u0003\u0011\u0005!QN\u0001\u0011)f\u0004X-T1uG\",\'/T1de>T!AF\f\u0002\u00115\fGo\u00195feNT!\u0001G\r\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\u000e\u0002\u0007=\u0014x\r\u0005\u0002\u001d\u00035\tQC\u0001\tUsB,W*\u0019;dQ\u0016\u0014X*Y2s_N\u0011\u0011a\b\t\u0003A\rj\u0011!\t\u0006\u0002E\u0005)1oY1mC&\u0011A%\t\u0002\u0007\u0003:L(+\u001a4\u0002\rqJg.\u001b;?\u0007\u0001!\u0012aG\u0001\u0013G\",7m\u001b+za\u0016\u0004\u0016M]1nKR,\'\u000f\u0006\u0002+gQ\u00191FL\'\u0011\u0005\u0001b\u0013BA\u0017\"\u0005\u0011)f.\u001b;\t\u000b=\u001a\u0001\u0019\u0001\u0019\u0002\tQ\u0014X-\u001a\t\u0003c%s!AM\u001a\r\u0001!)Ag\u0001a\u0001k\u000591m\u001c8uKb$\bC\u0001\u001cG\u001d\t94I\u0004\u00029\u0001:\u0011\u0011H\u0010\b\u0003uuj\u0011a\u000f\u0006\u0003y\u0019\na\u0001\u0010:p_Rt\u0014\"\u0001\u0012\n\u0005}\n\u0013a\u0002:fM2,7\r^\u0005\u0003\u0003\n\u000ba!\\1de>\u001c(BA \"\u0013\t!U)A\u0004qC\u000e\\\u0017mZ3\u000b\u0005\u0005\u0013\u0015BA$I\u0005\u001d\u0019uN\u001c;fqRT!\u0001R#\n\u0005)[%\u0001\u0002+sK\u0016L!\u0001T#\u0003\u000f\u0005c\u0017.Y:fg\")aj\u0001a\u0001\u001f\u0006QQ.\u001a;i_\u0012t\u0015-\\3\u0011\u0005A#fBA)S!\tQ\u0014%\u0003\u0002TC\u00051\u0001K]3eK\u001aL!!\u0016,\u0003\rM#(/\u001b8h\u0015\t\u0019\u0016%\u0001\tb)f\u0004X-T1uG\",\'/S7qYR\u0011\u0011\f\u0018\u000b\u00035\u0016\u00042aW/`\u001d\t\u0011D\fC\u00035\t\u0001\u0007Q\'\u0003\u0002_\u0017\n!Q\t\u001f9s!\ra\u0002MY\u0005\u0003CV\u0011q!T1uG\",\'\u000f\u0005\u0002!G&\u0011A-\t\u0002\u0004\u0003:L\b\"\u00024\u0005\u0001\u00049\u0017!B1UsB,\u0007cA.^QB\u0012\u0011\u000e\u001d\t\u0004U6|W\"A6\u000b\u00051,\u0012a\u00013tY&\u0011an\u001b\u0002\u0018%\u0016\u001cX\u000f\u001c;PM\u0006#\u0016\u0010]3J]Z|7-\u0019;j_:\u0004\"A\r9\u0005\u0013E,\u0017\u0011!A\u0001\u0006\u0003\u0011(aA0%cE\u00111O\u0019\t\u0003AQL!!^\u0011\u0003\u000f9{G\u000f[5oO\u0006\t\u0012M\u001c+za\u0016l\u0015\r^2iKJLU\u000e\u001d7\u0015\u0005a\\HCA=}!\rQXl\u0018\b\u0003emDQ\u0001N\u0003A\u0002UBQ!`\u0003A\u0002y\fa!\u00198UsB,\u0007c\u0001>^\u007fB\"\u0011\u0011AA\u0005!\u0015Q\u00171AA\u0004\u0013\r\t)a\u001b\u0002\u0019%\u0016\u001cX\u000f\u001c;PM\u0006sG+\u001f9f\u0013:4xnY1uS>t\u0007c\u0001\u001a\u0002\n\u0011Q\u00111\u0002?\u0002\u0002\u0003\u0005)\u0011\u0001:\u0003\u0007}##\'A\bo_R\fE+\u001f9f\u001b\u0006$8\r[3s)\u0011\t\t\"a\u0006\u0015\t\u0005M\u0011\u0011\u0004\t\u0005\u0003+ivLD\u00023\u0003/AQ\u0001\u000e\u0004A\u0002UBaA\u001a\u0004A\u0002\u0005m\u0001#BA\u000b;\u0006u\u0001\u0007BA\u0010\u0003G\u0001BA[7\u0002\"A\u0019!\'a\t\u0005\u0017\u0005\u0015\u0012\u0011DA\u0001\u0002\u0003\u0015\tA\u001d\u0002\u0004?\u0012\u001a\u0014\u0001\u00058pi\u0006sG+\u001f9f\u001b\u0006$8\r[3s)\u0011\tY#!\r\u0015\t\u00055\u00121\u0007\t\u0005\u0003_ivLD\u00023\u0003cAQ\u0001N\u0004A\u0002UBa!`\u0004A\u0002\u0005U\u0002#BA\u0018;\u0006]\u0002\u0007BA\u001d\u0003{\u0001RA[A\u0002\u0003w\u00012AMA\u001f\t-\ty$a\r\u0002\u0002\u0003\u0005)\u0011\u0001:\u0003\u0007}#C\'\u0001\nb]\u0012tu\u000e^!UsB,W*\u0019;dQ\u0016\u0014H\u0003BA#\u0003\u0017\"B!a\u0012\u0002NA!\u0011\u0011J/`\u001d\r\u0011\u00141\n\u0005\u0006i!\u0001\r!\u000e\u0005\u0007M\"\u0001\r!a\u0014\u0011\u000b\u0005%S,!\u00151\t\u0005M\u0013q\u000b\t\u0005U6\f)\u0006E\u00023\u0003/\"1\"!\u0017\u0002N\u0005\u0005\t\u0011!B\u0001e\n\u0019q\fJ\u001b\u0002\'\u0005tGMT8u\u0003:$\u0016\u0010]3NCR\u001c\u0007.\u001a:\u0015\t\u0005}\u0013Q\r\u000b\u0005\u0003C\n9\u0007\u0005\u0003\u0002du{fb\u0001\u001a\u0002f!)A\'\u0003a\u0001k!1Q0\u0003a\u0001\u0003S\u0002R!a\u0019^\u0003W\u0002D!!\u001c\u0002rA)!.a\u0001\u0002pA\u0019!\'!\u001d\u0005\u0017\u0005M\u0014qMA\u0001\u0002\u0003\u0015\tA\u001d\u0002\u0004?\u00122\u0014!E8s\u001d>$\u0018\tV=qK6\u000bGo\u00195feR!\u0011\u0011PA@)\u0011\tY(!!\u0011\t\u0005uTl\u0018\b\u0004e\u0005}\u0004\"\u0002\u001b\u000b\u0001\u0004)\u0004B\u00024\u000b\u0001\u0004\t\u0019\tE\u0003\u0002~u\u000b)\t\r\u0003\u0002\b\u0006-\u0005\u0003\u00026n\u0003\u0013\u00032AMAF\t-\ti)!!\u0002\u0002\u0003\u0005)\u0011\u0001:\u0003\u0007}#s\'\u0001\npe:{G/\u00118UsB,W*\u0019;dQ\u0016\u0014H\u0003BAJ\u00033#B!!&\u0002\u001cB!\u0011qS/`\u001d\r\u0011\u0014\u0011\u0014\u0005\u0006i-\u0001\r!\u000e\u0005\u0007{.\u0001\r!!(\u0011\u000b\u0005]U,a(1\t\u0005\u0005\u0016Q\u0015\t\u0006U\u0006\r\u00111\u0015\t\u0004e\u0005\u0015FaCAT\u00037\u000b\t\u0011!A\u0003\u0002I\u00141a\u0018\u00139\u00039\t7o]3siRK\b/Z%na2$B!!,\u00024RA\u0011qVAe\u0003\u001b\f\t\u000eE\u0003\u00022v\u000b)LD\u00023\u0003gCQ\u0001\u000e\u0007A\u0002U\u0002B!a.\u0002D:!\u0011\u0011XAa\u001d\u0011\tY,a0\u000f\u0007i\ni,C\u0001\u001b\u0013\tA\u0012$\u0003\u0002E/%!\u0011QYAd\u0005%\t5o]3si&|gN\u0003\u0002E/!1q\u0006\u0004a\u0001\u0003\u0017\u00042!!-J\u0011\u0019\ty\r\u0004a\u0001\u001f\u0006a!-Z\'fi\"|GMT1nK\"1\u00111\u001b\u0007A\u0002=\u000b\u0001#Y:tKJ$X*\u001a;i_\u0012t\u0015-\\3\u0002#MDw.\u001e7e\u0005\u0016\fE+\u001f9f\u00136\u0004H\u000e\u0006\u0003\u0002Z\u0006}G\u0003BAn\u0003C\u0004R!!8^\u0003ks1AMAp\u0011\u0015!T\u00021\u00016\u0011\u00191W\u00021\u0001\u0002dB)\u0011Q\\/\u0002fB\"\u0011q]Av!\u0011QW.!;\u0011\u0007I\nY\u000fB\u0006\u0002n\u0006\u0005\u0018\u0011!A\u0001\u0006\u0003\u0011(aA0%s\u0005yQ.^:u\u0005\u0016\fE+\u001f9f\u00136\u0004H\u000e\u0006\u0003\u0002t\u0006eH\u0003BA{\u0003w\u0004R!a>^\u0003ks1AMA}\u0011\u0015!d\u00021\u00016\u0011\u00191g\u00021\u0001\u0002~B)\u0011q_/\u0002\u0000B\"!\u0011\u0001B\u0003!\u0011QWNa\u0001\u0011\u0007I\u0012)\u0001B\u0006\u0003\b\u0005m\u0018\u0011!A\u0001\u0006\u0003\u0011(\u0001B0%cA\n!c\u001d5pk2$\')Z!o)f\u0004X-S7qYR!!Q\u0002B\n)\u0011\u0011yA!\u0006\u0011\u000b\tEQ,!.\u000f\u0007I\u0012\u0019\u0002C\u00035\u001f\u0001\u0007Q\u0007\u0003\u0004~\u001f\u0001\u0007!q\u0003\t\u0006\u0005#i&\u0011\u0004\u0019\u0005\u00057\u0011y\u0002E\u0003k\u0003\u0007\u0011i\u0002E\u00023\u0005?!1B!\t\u0003\u0016\u0005\u0005\t\u0011!B\u0001e\n!q\fJ\u00192\u0003AiWo\u001d;CK\u0006sG+\u001f9f\u00136\u0004H\u000e\u0006\u0003\u0003(\t5B\u0003\u0002B\u0015\u0005_\u0001RAa\u000b^\u0003ks1A\rB\u0017\u0011\u0015!\u0004\u00031\u00016\u0011\u0019i\b\u00031\u0001\u00032A)!1F/\u00034A\"!Q\u0007B\u001d!\u0015Q\u00171\u0001B\u001c!\r\u0011$\u0011\b\u0003\f\u0005w\u0011y#!A\u0001\u0002\u000b\u0005!O\u0001\u0003`IE\u0012\u0014AG1tg\u0016\u0014H\u000fV=qKNCw.\u001e7e\u0005\u0016$&/^3J[BdG\u0003\u0002B!\u0005\u000f\"\u0002Ba\u0011\u0003J\t5#q\n\t\u0006\u0005\u000bj\u0016Q\u0017\b\u0004e\t\u001d\u0003\"\u0002\u001b\u0012\u0001\u0004)\u0004BB\u0018\u0012\u0001\u0004\u0011Y\u0005E\u0002\u0003F%Ca!a4\u0012\u0001\u0004y\u0005BBAj#\u0001\u0007q*A\u000ebgN,\'\u000f^!UsB,7\u000b[8vY\u0012\u0014U\r\u0016:vK&k\u0007\u000f\u001c\u000b\u0005\u0005+\u0012Y\u0006\u0006\u0003\u0003X\tu\u0003#\u0002B-;\u0006Ufb\u0001\u001a\u0003\\!)AG\u0005a\u0001k!1aM\u0005a\u0001\u0005?\u0002RA!\u0017^\u0005C\u0002DAa\u0019\u0003hA!!.\u001cB3!\r\u0011$q\r\u0003\f\u0005S\u0012i&!A\u0001\u0002\u000b\u0005!O\u0001\u0003`IE\u001a\u0014\u0001H1tg\u0016\u0014H/\u00118UsB,7\u000b[8vY\u0012\u0014U\r\u0016:vK&k\u0007\u000f\u001c\u000b\u0005\u0005_\u0012)\b\u0006\u0003\u0003r\t]\u0004#\u0002B:;\u0006Ufb\u0001\u001a\u0003v!)Ag\u0005a\u0001k!1Qp\u0005a\u0001\u0005s\u0002RAa\u001d^\u0005w\u0002DA! \u0003\u0002B)!.a\u0001\u0003\u0000A\u0019!G!!\u0005\u0017\t\r%qOA\u0001\u0002\u0003\u0015\tA\u001d\u0002\u0005?\u0012\nD\u0007"
    )
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
