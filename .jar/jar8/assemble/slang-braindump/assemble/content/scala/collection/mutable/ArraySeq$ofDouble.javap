Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/mutable/ArraySeq$ofDouble.class
  Last modified May 29, 2022; size 3913 bytes
  SHA-256 checksum e37afa3bb45035a979f45b504ae445f3a7705150d8ef5468e73a2d55c9f3adff
  Compiled from "ArraySeq.scala"
public final class scala.collection.mutable.ArraySeq$ofDouble extends scala.collection.mutable.ArraySeq<java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/mutable/ArraySeq$ofDouble
  super_class: #5                         // scala/collection/mutable/ArraySeq
  interfaces: 0, fields: 2, methods: 16, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/mutable/ArraySeq$ofDouble
    #2 = Class              #1            // scala/collection/mutable/ArraySeq$ofDouble
    #3 = Utf8               Lscala/collection/mutable/ArraySeq<Ljava/lang/Object;>;
    #4 = Utf8               scala/collection/mutable/ArraySeq
    #5 = Class              #4            // scala/collection/mutable/ArraySeq
    #6 = Utf8               ArraySeq.scala
    #7 = Utf8               scala/collection/AnyStepper$$anon$3
    #8 = Class              #7            // scala/collection/AnyStepper$$anon$3
    #9 = Utf8               ofDouble
   #10 = Utf8               scala/reflect/ManifestFactory$DoubleManifest
   #11 = Class              #10           // scala/reflect/ManifestFactory$DoubleManifest
   #12 = Utf8               scala/reflect/ManifestFactory
   #13 = Class              #12           // scala/reflect/ManifestFactory
   #14 = Utf8               DoubleManifest
   #15 = Utf8               serialVersionUID
   #16 = Utf8               J
   #17 = Long               3l
   #19 = Utf8               array
   #20 = Utf8               [D
   #21 = Utf8               ()[D
   #22 = NameAndType        #19:#20       // array:[D
   #23 = Fieldref           #2.#22        // scala/collection/mutable/ArraySeq$ofDouble.array:[D
   #24 = Utf8               this
   #25 = Utf8               Lscala/collection/mutable/ArraySeq$ofDouble;
   #26 = Utf8               elemTag
   #27 = Utf8               ()Lscala/reflect/ManifestFactory$DoubleManifest;
   #28 = Utf8               scala/reflect/ClassTag$
   #29 = Class              #28           // scala/reflect/ClassTag$
   #30 = Utf8               MODULE$
   #31 = Utf8               Lscala/reflect/ClassTag$;
   #32 = NameAndType        #30:#31       // MODULE$:Lscala/reflect/ClassTag$;
   #33 = Fieldref           #29.#32       // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
   #34 = Utf8               Double
   #35 = NameAndType        #34:#27       // Double:()Lscala/reflect/ManifestFactory$DoubleManifest;
   #36 = Methodref          #29.#35       // scala/reflect/ClassTag$.Double:()Lscala/reflect/ManifestFactory$DoubleManifest;
   #37 = Utf8               length
   #38 = Utf8               ()I
   #39 = NameAndType        #19:#21       // array:()[D
   #40 = Methodref          #2.#39        // scala/collection/mutable/ArraySeq$ofDouble.array:()[D
   #41 = Utf8               apply
   #42 = Utf8               (I)D
   #43 = Utf8               index
   #44 = Utf8               I
   #45 = Utf8               update
   #46 = Utf8               (ID)V
   #47 = Utf8               elem
   #48 = Utf8               D
   #49 = Utf8               hashCode
   #50 = Utf8               scala/util/hashing/MurmurHash3$
   #51 = Class              #50           // scala/util/hashing/MurmurHash3$
   #52 = Utf8               Lscala/util/hashing/MurmurHash3$;
   #53 = NameAndType        #30:#52       // MODULE$:Lscala/util/hashing/MurmurHash3$;
   #54 = Fieldref           #51.#53       // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
   #55 = Utf8               arraySeqHash$mDc$sp
   #56 = Utf8               ([D)I
   #57 = NameAndType        #55:#56       // arraySeqHash$mDc$sp:([D)I
   #58 = Methodref          #51.#57       // scala/util/hashing/MurmurHash3$.arraySeqHash$mDc$sp:([D)I
   #59 = Utf8               equals
   #60 = Utf8               (Ljava/lang/Object;)Z
   #61 = Utf8               that
   #62 = Utf8               java/util/Arrays
   #63 = Class              #62           // java/util/Arrays
   #64 = Utf8               ([D[D)Z
   #65 = NameAndType        #59:#64       // equals:([D[D)Z
   #66 = Methodref          #63.#65       // java/util/Arrays.equals:([D[D)Z
   #67 = NameAndType        #59:#60       // equals:(Ljava/lang/Object;)Z
   #68 = Methodref          #5.#67        // scala/collection/mutable/ArraySeq.equals:(Ljava/lang/Object;)Z
   #69 = Utf8               Ljava/lang/Object;
   #70 = Utf8               iterator
   #71 = Utf8               ()Lscala/collection/Iterator;
   #72 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #73 = Utf8               scala/collection/ArrayOps$ArrayIterator$mcD$sp
   #74 = Class              #73           // scala/collection/ArrayOps$ArrayIterator$mcD$sp
   #75 = Utf8               <init>
   #76 = Utf8               ([D)V
   #77 = NameAndType        #75:#76       // "<init>":([D)V
   #78 = Methodref          #74.#77       // scala/collection/ArrayOps$ArrayIterator$mcD$sp."<init>":([D)V
   #79 = Utf8               stepper
   #80 = Utf8               (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
   #81 = Utf8               <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<Ljava/lang/Object;TS;>;)TS;
   #82 = Utf8               shape
   #83 = Utf8               scala/collection/StepperShape
   #84 = Class              #83           // scala/collection/StepperShape
   #85 = NameAndType        #82:#38       // shape:()I
   #86 = InterfaceMethodref #84.#85       // scala/collection/StepperShape.shape:()I
   #87 = Utf8               scala/collection/StepperShape$
   #88 = Class              #87           // scala/collection/StepperShape$
   #89 = Utf8               Lscala/collection/StepperShape$;
   #90 = NameAndType        #30:#89       // MODULE$:Lscala/collection/StepperShape$;
   #91 = Fieldref           #88.#90       // scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
   #92 = Utf8               ReferenceShape
   #93 = NameAndType        #92:#38       // ReferenceShape:()I
   #94 = Methodref          #88.#93       // scala/collection/StepperShape$.ReferenceShape:()I
   #95 = Utf8               scala/collection/AnyStepper$
   #96 = Class              #95           // scala/collection/AnyStepper$
   #97 = Utf8               Lscala/collection/AnyStepper$;
   #98 = NameAndType        #30:#97       // MODULE$:Lscala/collection/AnyStepper$;
   #99 = Fieldref           #96.#98       // scala/collection/AnyStepper$.MODULE$:Lscala/collection/AnyStepper$;
  #100 = Utf8               scala/collection/convert/impl/DoubleArrayStepper
  #101 = Class              #100          // scala/collection/convert/impl/DoubleArrayStepper
  #102 = Utf8               ([DII)V
  #103 = NameAndType        #75:#102      // "<init>":([DII)V
  #104 = Methodref          #101.#103     // scala/collection/convert/impl/DoubleArrayStepper."<init>":([DII)V
  #105 = Utf8               (Lscala/collection/DoubleStepper;)V
  #106 = NameAndType        #75:#105      // "<init>":(Lscala/collection/DoubleStepper;)V
  #107 = Methodref          #8.#106       // scala/collection/AnyStepper$$anon$3."<init>":(Lscala/collection/DoubleStepper;)V
  #108 = Utf8               scala/collection/Stepper
  #109 = Class              #108          // scala/collection/Stepper
  #110 = Utf8               Lscala/collection/StepperShape;
  #111 = Utf8               ofParDoubleStepper_st
  #112 = Utf8               Lscala/collection/DoubleStepper;
  #113 = Utf8               java/lang/Object
  #114 = Class              #113          // java/lang/Object
  #115 = Utf8               apply$mcDI$sp
  #116 = Utf8               (ILjava/lang/Object;)V
  #117 = Utf8               scala/runtime/BoxesRunTime
  #118 = Class              #117          // scala/runtime/BoxesRunTime
  #119 = Utf8               unboxToDouble
  #120 = Utf8               (Ljava/lang/Object;)D
  #121 = NameAndType        #119:#120     // unboxToDouble:(Ljava/lang/Object;)D
  #122 = Methodref          #118.#121     // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #123 = NameAndType        #45:#46       // update:(ID)V
  #124 = Methodref          #2.#123       // scala/collection/mutable/ArraySeq$ofDouble.update:(ID)V
  #125 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #126 = Utf8               v1
  #127 = Utf8               unboxToInt
  #128 = Utf8               (Ljava/lang/Object;)I
  #129 = NameAndType        #127:#128     // unboxToInt:(Ljava/lang/Object;)I
  #130 = Methodref          #118.#129     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #131 = NameAndType        #41:#42       // apply:(I)D
  #132 = Methodref          #2.#131       // scala/collection/mutable/ArraySeq$ofDouble.apply:(I)D
  #133 = Utf8               boxToDouble
  #134 = Utf8               (D)Ljava/lang/Double;
  #135 = NameAndType        #133:#134     // boxToDouble:(D)Ljava/lang/Double;
  #136 = Methodref          #118.#135     // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
  #137 = Utf8               (I)Ljava/lang/Object;
  #138 = Utf8               i
  #139 = Utf8               ()Lscala/reflect/ClassTag;
  #140 = NameAndType        #26:#27       // elemTag:()Lscala/reflect/ManifestFactory$DoubleManifest;
  #141 = Methodref          #2.#140       // scala/collection/mutable/ArraySeq$ofDouble.elemTag:()Lscala/reflect/ManifestFactory$DoubleManifest;
  #142 = Utf8               ()Ljava/lang/Object;
  #143 = Utf8               ()V
  #144 = NameAndType        #75:#143      // "<init>":()V
  #145 = Methodref          #5.#144       // scala/collection/mutable/ArraySeq."<init>":()V
  #146 = Utf8               ConstantValue
  #147 = Utf8               Code
  #148 = Utf8               LineNumberTable
  #149 = Utf8               LocalVariableTable
  #150 = Utf8               MethodParameters
  #151 = Utf8               StackMapTable
  #152 = Utf8               Signature
  #153 = Utf8               InnerClasses
  #154 = Utf8               SourceFile
  #155 = Utf8               ScalaInlineInfo
  #156 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 3l

  private final double[] array;
    descriptor: [D
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public double[] array();
    descriptor: ()[D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #23                 // Field array:[D
         4: areturn
      LineNumberTable:
        line 298: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;

  public scala.reflect.ManifestFactory$DoubleManifest elemTag();
    descriptor: ()Lscala/reflect/ManifestFactory$DoubleManifest;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #33                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
         3: invokevirtual #36                 // Method scala/reflect/ClassTag$.Double:()Lscala/reflect/ManifestFactory$DoubleManifest;
         6: areturn
      LineNumberTable:
        line 299: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;

  public int length();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #40                 // Method array:()[D
         4: arraylength
         5: ireturn
      LineNumberTable:
        line 300: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;

  public double apply(int);
    descriptor: (I)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #40                 // Method array:()[D
         4: iload_1
         5: daload
         6: dreturn
      LineNumberTable:
        line 301: 0
        line 301: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
            0       7     1 index   I
    MethodParameters:
      Name                           Flags
      index                          final

  public void update(int, double);
    descriptor: (ID)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: invokevirtual #40                 // Method array:()[D
         4: iload_1
         5: dload_2
         6: dastore
         7: return
      LineNumberTable:
        line 302: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
            0       8     1 index   I
            0       8     2  elem   D
    MethodParameters:
      Name                           Flags
      index                          final
      elem                           final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
         3: aload_0
         4: invokevirtual #40                 // Method array:()[D
         7: invokevirtual #58                 // Method scala/util/hashing/MurmurHash3$.arraySeqHash$mDc$sp:([D)I
        10: ireturn
      LineNumberTable:
        line 303: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_1
         1: instanceof    #2                  // class scala/collection/mutable/ArraySeq$ofDouble
         4: ifeq          27
         7: aload_1
         8: checkcast     #2                  // class scala/collection/mutable/ArraySeq$ofDouble
        11: astore_3
        12: aload_0
        13: invokevirtual #40                 // Method array:()[D
        16: aload_3
        17: invokevirtual #40                 // Method array:()[D
        20: invokestatic  #66                 // Method java/util/Arrays.equals:([D[D)Z
        23: istore_2
        24: goto          33
        27: aload_0
        28: aload_1
        29: invokespecial #68                 // Method scala/collection/mutable/ArraySeq.equals:(Ljava/lang/Object;)Z
        32: istore_2
        33: iload_2
        34: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 27 /* same */
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
      LineNumberTable:
        line 305: 0
        line 306: 27
        line 304: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
            0      35     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #74                 // class scala/collection/ArrayOps$ArrayIterator$mcD$sp
         3: dup
         4: aload_0
         5: invokevirtual #40                 // Method array:()[D
         8: invokespecial #78                 // Method scala/collection/ArrayOps$ArrayIterator$mcD$sp."<init>":([D)V
        11: areturn
      LineNumberTable:
        line 308: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
    Signature: #72                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public <S extends scala.collection.Stepper<?>> S stepper(scala.collection.StepperShape<java.lang.Object, S>);
    descriptor: (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_1
         1: invokeinterface #86,  1           // InterfaceMethod scala/collection/StepperShape.shape:()I
         6: getstatic     #91                 // Field scala/collection/StepperShape$.MODULE$:Lscala/collection/StepperShape$;
         9: invokevirtual #94                 // Method scala/collection/StepperShape$.ReferenceShape:()I
        12: if_icmpne     50
        15: getstatic     #99                 // Field scala/collection/AnyStepper$.MODULE$:Lscala/collection/AnyStepper$;
        18: pop
        19: new           #101                // class scala/collection/convert/impl/DoubleArrayStepper
        22: dup
        23: aload_0
        24: invokevirtual #40                 // Method array:()[D
        27: iconst_0
        28: aload_0
        29: invokevirtual #40                 // Method array:()[D
        32: arraylength
        33: invokespecial #104                // Method scala/collection/convert/impl/DoubleArrayStepper."<init>":([DII)V
        36: astore_2
        37: new           #8                  // class scala/collection/AnyStepper$$anon$3
        40: dup
        41: aload_2
        42: invokespecial #107                // Method scala/collection/AnyStepper$$anon$3."<init>":(Lscala/collection/DoubleStepper;)V
        45: aconst_null
        46: astore_2
        47: goto          67
        50: new           #101                // class scala/collection/convert/impl/DoubleArrayStepper
        53: dup
        54: aload_0
        55: invokevirtual #40                 // Method array:()[D
        58: iconst_0
        59: aload_0
        60: invokevirtual #40                 // Method array:()[D
        63: arraylength
        64: invokespecial #104                // Method scala/collection/convert/impl/DoubleArrayStepper."<init>":([DII)V
        67: checkcast     #109                // class scala/collection/Stepper
        70: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 50 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 310: 0
        line 311: 15
        line 312: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
            0      71     1 shape   Lscala/collection/StepperShape;
           37       8     2 ofParDoubleStepper_st   Lscala/collection/DoubleStepper;
    Signature: #81                          // <S::Lscala/collection/Stepper<*>;>(Lscala/collection/StepperShape<Ljava/lang/Object;TS;>;)TS;
    MethodParameters:
      Name                           Flags
      shape                          final

  public double apply$mcDI$sp(int);
    descriptor: (I)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #40                 // Method array:()[D
         4: iload_1
         5: daload
         6: dreturn
      LineNumberTable:
        line 301: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
            0       7     1 index   I
    MethodParameters:
      Name                           Flags
      index                          final

  public void update(int, java.lang.Object);
    descriptor: (ILjava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: aload_2
         3: invokestatic  #122                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
         6: invokevirtual #124                // Method update:(ID)V
         9: return
      LineNumberTable:
        line 298: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
            0      10     1 index   I
            0      10     2  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      index                          final
      elem                           final

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #130                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokevirtual #132                // Method apply:(I)D
         8: invokestatic  #136                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
        11: areturn
      LineNumberTable:
        line 298: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
            0      12     1    v1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final

  public java.lang.Object apply(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #132                // Method apply:(I)D
         5: invokestatic  #136                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
         8: areturn
      LineNumberTable:
        line 298: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
            0       9     1     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public scala.reflect.ClassTag elemTag();
    descriptor: ()Lscala/reflect/ClassTag;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #141                // Method elemTag:()Lscala/reflect/ManifestFactory$DoubleManifest;
         4: areturn
      LineNumberTable:
        line 298: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;

  public java.lang.Object array();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #40                 // Method array:()[D
         4: areturn
      LineNumberTable:
        line 298: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;

  public scala.collection.mutable.ArraySeq$ofDouble(double[]);
    descriptor: ([D)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #23                 // Field array:[D
         5: aload_0
         6: invokespecial #145                // Method scala/collection/mutable/ArraySeq."<init>":()V
         9: return
      LineNumberTable:
        line 298: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/mutable/ArraySeq$ofDouble;
            0      10     1 array   [D
    MethodParameters:
      Name                           Flags
      array                          final
}
InnerClasses:
  public final #8;                        // class scala/collection/AnyStepper$$anon$3
  public static final #9= #2 of #5;       // ofDouble=class scala/collection/mutable/ArraySeq$ofDouble of class scala/collection/mutable/ArraySeq
  public static final #14= #11 of #13;    // DoubleManifest=class scala/reflect/ManifestFactory$DoubleManifest of class scala/reflect/ManifestFactory
Signature: #3                           // Lscala/collection/mutable/ArraySeq<Ljava/lang/Object;>;
SourceFile: "ArraySeq.scala"
  ScalaInlineInfo: length = 0x54 (unknown attribute)
   01 01 00 10 00 4B 00 4C 01 00 29 00 2A 01 00 29
   00 89 01 00 29 00 7D 01 00 73 00 2A 01 00 13 00
   8E 01 00 13 00 15 01 00 1A 00 8B 01 00 1A 00 1B
   01 00 3B 00 3C 01 00 31 00 26 01 00 46 00 47 01
   00 25 00 26 01 00 4F 00 50 01 00 2D 00 2E 01 00
   2D 00 74 01
  Scala: length = 0x0 (unknown attribute)

