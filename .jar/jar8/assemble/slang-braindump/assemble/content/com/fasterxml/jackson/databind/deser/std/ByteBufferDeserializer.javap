Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer.class
  Last modified May 29, 2022; size 2645 bytes
  SHA-256 checksum 7a4ee63a28e8e848972456a0d0b3ed9f0e4e374db3d98232e0d4768694dc2810
  Compiled from "ByteBufferDeserializer.java"
public class com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer<java.nio.ByteBuffer>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #13                         // com/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer
  super_class: #14                        // com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer
  interfaces: 0, fields: 1, methods: 6, attributes: 2
Constant pool:
   #1 = Class              #53            // java/nio/ByteBuffer
   #2 = Methodref          #14.#54        // com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer."<init>":(Ljava/lang/Class;)V
   #3 = Fieldref           #55.#56        // com/fasterxml/jackson/databind/type/LogicalType.Binary:Lcom/fasterxml/jackson/databind/type/LogicalType;
   #4 = Methodref          #57.#58        // com/fasterxml/jackson/core/JsonParser.getBinaryValue:()[B
   #5 = Methodref          #1.#59         // java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
   #6 = Class              #60            // com/fasterxml/jackson/databind/util/ByteBufferBackedOutputStream
   #7 = Methodref          #6.#61         // com/fasterxml/jackson/databind/util/ByteBufferBackedOutputStream."<init>":(Ljava/nio/ByteBuffer;)V
   #8 = Methodref          #62.#63        // com/fasterxml/jackson/databind/DeserializationContext.getBase64Variant:()Lcom/fasterxml/jackson/core/Base64Variant;
   #9 = Methodref          #57.#64        // com/fasterxml/jackson/core/JsonParser.readBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I
  #10 = Methodref          #65.#66        // java/io/OutputStream.close:()V
  #11 = Methodref          #13.#67        // com/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer.deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #12 = Methodref          #13.#68        // com/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer.deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/nio/ByteBuffer;
  #13 = Class              #69            // com/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer
  #14 = Class              #70            // com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer
  #15 = Utf8               serialVersionUID
  #16 = Utf8               J
  #17 = Utf8               ConstantValue
  #18 = Long               1l
  #20 = Utf8               <init>
  #21 = Utf8               ()V
  #22 = Utf8               Code
  #23 = Utf8               LineNumberTable
  #24 = Utf8               LocalVariableTable
  #25 = Utf8               this
  #26 = Utf8               Lcom/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer;
  #27 = Utf8               logicalType
  #28 = Utf8               ()Lcom/fasterxml/jackson/databind/type/LogicalType;
  #29 = Utf8               deserialize
  #30 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/nio/ByteBuffer;
  #31 = Utf8               parser
  #32 = Utf8               Lcom/fasterxml/jackson/core/JsonParser;
  #33 = Utf8               cx
  #34 = Utf8               Lcom/fasterxml/jackson/databind/DeserializationContext;
  #35 = Utf8               b
  #36 = Utf8               [B
  #37 = Utf8               Exceptions
  #38 = Class              #71            // java/io/IOException
  #39 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #40 = Utf8               jp
  #41 = Utf8               ctxt
  #42 = Utf8               intoValue
  #43 = Utf8               Ljava/nio/ByteBuffer;
  #44 = Utf8               out
  #45 = Utf8               Ljava/io/OutputStream;
  #46 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
  #47 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
  #48 = Class              #72            // com/fasterxml/jackson/core/JacksonException
  #49 = Utf8               Signature
  #50 = Utf8               Lcom/fasterxml/jackson/databind/deser/std/StdScalarDeserializer<Ljava/nio/ByteBuffer;>;
  #51 = Utf8               SourceFile
  #52 = Utf8               ByteBufferDeserializer.java
  #53 = Utf8               java/nio/ByteBuffer
  #54 = NameAndType        #20:#73        // "<init>":(Ljava/lang/Class;)V
  #55 = Class              #74            // com/fasterxml/jackson/databind/type/LogicalType
  #56 = NameAndType        #75:#76        // Binary:Lcom/fasterxml/jackson/databind/type/LogicalType;
  #57 = Class              #77            // com/fasterxml/jackson/core/JsonParser
  #58 = NameAndType        #78:#79        // getBinaryValue:()[B
  #59 = NameAndType        #80:#81        // wrap:([B)Ljava/nio/ByteBuffer;
  #60 = Utf8               com/fasterxml/jackson/databind/util/ByteBufferBackedOutputStream
  #61 = NameAndType        #20:#82        // "<init>":(Ljava/nio/ByteBuffer;)V
  #62 = Class              #83            // com/fasterxml/jackson/databind/DeserializationContext
  #63 = NameAndType        #84:#85        // getBase64Variant:()Lcom/fasterxml/jackson/core/Base64Variant;
  #64 = NameAndType        #86:#87        // readBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I
  #65 = Class              #88            // java/io/OutputStream
  #66 = NameAndType        #89:#21        // close:()V
  #67 = NameAndType        #29:#39        // deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #68 = NameAndType        #29:#30        // deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/nio/ByteBuffer;
  #69 = Utf8               com/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer
  #70 = Utf8               com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer
  #71 = Utf8               java/io/IOException
  #72 = Utf8               com/fasterxml/jackson/core/JacksonException
  #73 = Utf8               (Ljava/lang/Class;)V
  #74 = Utf8               com/fasterxml/jackson/databind/type/LogicalType
  #75 = Utf8               Binary
  #76 = Utf8               Lcom/fasterxml/jackson/databind/type/LogicalType;
  #77 = Utf8               com/fasterxml/jackson/core/JsonParser
  #78 = Utf8               getBinaryValue
  #79 = Utf8               ()[B
  #80 = Utf8               wrap
  #81 = Utf8               ([B)Ljava/nio/ByteBuffer;
  #82 = Utf8               (Ljava/nio/ByteBuffer;)V
  #83 = Utf8               com/fasterxml/jackson/databind/DeserializationContext
  #84 = Utf8               getBase64Variant
  #85 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;
  #86 = Utf8               readBinaryValue
  #87 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I
  #88 = Utf8               java/io/OutputStream
  #89 = Utf8               close
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 1l

  protected com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #1                  // class java/nio/ByteBuffer
         3: invokespecial #2                  // Method com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer."<init>":(Ljava/lang/Class;)V
         6: return
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer;

  public com.fasterxml.jackson.databind.type.LogicalType logicalType();
    descriptor: ()Lcom/fasterxml/jackson/databind/type/LogicalType;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #3                  // Field com/fasterxml/jackson/databind/type/LogicalType.Binary:Lcom/fasterxml/jackson/databind/type/LogicalType;
         3: areturn
      LineNumberTable:
        line 19: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcom/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer;

  public java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/nio/ByteBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=4, args_size=3
         0: aload_1
         1: invokevirtual #4                  // Method com/fasterxml/jackson/core/JsonParser.getBinaryValue:()[B
         4: astore_3
         5: aload_3
         6: invokestatic  #5                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
         9: areturn
      LineNumberTable:
        line 24: 0
        line 25: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcom/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer;
            0      10     1 parser   Lcom/fasterxml/jackson/core/JsonParser;
            0      10     2    cx   Lcom/fasterxml/jackson/databind/DeserializationContext;
            5       5     3     b   [B
    Exceptions:
      throws java.io.IOException

  public java.nio.ByteBuffer deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.nio.ByteBuffer) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=4
         0: new           #6                  // class com/fasterxml/jackson/databind/util/ByteBufferBackedOutputStream
         3: dup
         4: aload_3
         5: invokespecial #7                  // Method com/fasterxml/jackson/databind/util/ByteBufferBackedOutputStream."<init>":(Ljava/nio/ByteBuffer;)V
         8: astore        4
        10: aload_1
        11: aload_2
        12: invokevirtual #8                  // Method com/fasterxml/jackson/databind/DeserializationContext.getBase64Variant:()Lcom/fasterxml/jackson/core/Base64Variant;
        15: aload         4
        17: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonParser.readBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I
        20: pop
        21: aload         4
        23: invokevirtual #10                 // Method java/io/OutputStream.close:()V
        26: aload_3
        27: areturn
      LineNumberTable:
        line 31: 0
        line 32: 10
        line 33: 21
        line 34: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcom/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer;
            0      28     1    jp   Lcom/fasterxml/jackson/core/JsonParser;
            0      28     2  ctxt   Lcom/fasterxml/jackson/databind/DeserializationContext;
            0      28     3 intoValue   Ljava/nio/ByteBuffer;
           10      18     4   out   Ljava/io/OutputStream;
    Exceptions:
      throws java.io.IOException

  public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: checkcast     #1                  // class java/nio/ByteBuffer
         7: invokevirtual #11                 // Method deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
        10: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcom/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer;
    Exceptions:
      throws java.io.IOException

  public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JacksonException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #12                 // Method deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/nio/ByteBuffer;
         6: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/databind/deser/std/ByteBufferDeserializer;
    Exceptions:
      throws java.io.IOException, com.fasterxml.jackson.core.JacksonException
}
Signature: #50                          // Lcom/fasterxml/jackson/databind/deser/std/StdScalarDeserializer<Ljava/nio/ByteBuffer;>;
SourceFile: "ByteBufferDeserializer.java"
