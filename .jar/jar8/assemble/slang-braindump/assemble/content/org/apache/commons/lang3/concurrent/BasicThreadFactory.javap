Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/concurrent/BasicThreadFactory.class
  Last modified May 29, 2022; size 4105 bytes
  SHA-256 checksum 8eb2afd996799152f018c40388ab8c5f3bf310a9fd99896066c1731f1307c0e3
  Compiled from "BasicThreadFactory.java"
public class org.apache.commons.lang3.concurrent.BasicThreadFactory implements java.util.concurrent.ThreadFactory
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #35                         // org/apache/commons/lang3/concurrent/BasicThreadFactory
  super_class: #24                        // java/lang/Object
  interfaces: 1, fields: 6, methods: 10, attributes: 2
Constant pool:
    #1 = Methodref          #35.#93       // org/apache/commons/lang3/concurrent/BasicThreadFactory."<init>":(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)V
    #2 = Methodref          #24.#94       // java/lang/Object."<init>":()V
    #3 = Methodref          #39.#95       // org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$000:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/util/concurrent/ThreadFactory;
    #4 = Methodref          #96.#97       // java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
    #5 = Fieldref           #35.#98       // org/apache/commons/lang3/concurrent/BasicThreadFactory.wrappedFactory:Ljava/util/concurrent/ThreadFactory;
    #6 = Methodref          #39.#99       // org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$100:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/String;
    #7 = Fieldref           #35.#100      // org/apache/commons/lang3/concurrent/BasicThreadFactory.namingPattern:Ljava/lang/String;
    #8 = Methodref          #39.#101      // org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$200:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Integer;
    #9 = Fieldref           #35.#102      // org/apache/commons/lang3/concurrent/BasicThreadFactory.priority:Ljava/lang/Integer;
   #10 = Methodref          #39.#103      // org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$300:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Boolean;
   #11 = Fieldref           #35.#104      // org/apache/commons/lang3/concurrent/BasicThreadFactory.daemon:Ljava/lang/Boolean;
   #12 = Methodref          #39.#105      // org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$400:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Thread$UncaughtExceptionHandler;
   #13 = Fieldref           #35.#106      // org/apache/commons/lang3/concurrent/BasicThreadFactory.uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
   #14 = Class              #107          // java/util/concurrent/atomic/AtomicLong
   #15 = Methodref          #14.#94       // java/util/concurrent/atomic/AtomicLong."<init>":()V
   #16 = Fieldref           #35.#108      // org/apache/commons/lang3/concurrent/BasicThreadFactory.threadCounter:Ljava/util/concurrent/atomic/AtomicLong;
   #17 = Methodref          #14.#109      // java/util/concurrent/atomic/AtomicLong.get:()J
   #18 = Methodref          #35.#110      // org/apache/commons/lang3/concurrent/BasicThreadFactory.getWrappedFactory:()Ljava/util/concurrent/ThreadFactory;
   #19 = InterfaceMethodref #36.#111      // java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
   #20 = Methodref          #35.#112      // org/apache/commons/lang3/concurrent/BasicThreadFactory.initializeThread:(Ljava/lang/Thread;)V
   #21 = Methodref          #35.#113      // org/apache/commons/lang3/concurrent/BasicThreadFactory.getNamingPattern:()Ljava/lang/String;
   #22 = Methodref          #14.#114      // java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
   #23 = Methodref          #115.#116     // java/lang/Long.valueOf:(J)Ljava/lang/Long;
   #24 = Class              #117          // java/lang/Object
   #25 = Methodref          #118.#119     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #26 = Methodref          #120.#121     // java/lang/Thread.setName:(Ljava/lang/String;)V
   #27 = Methodref          #35.#122      // org/apache/commons/lang3/concurrent/BasicThreadFactory.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
   #28 = Methodref          #120.#123     // java/lang/Thread.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
   #29 = Methodref          #35.#124      // org/apache/commons/lang3/concurrent/BasicThreadFactory.getPriority:()Ljava/lang/Integer;
   #30 = Methodref          #125.#126     // java/lang/Integer.intValue:()I
   #31 = Methodref          #120.#127     // java/lang/Thread.setPriority:(I)V
   #32 = Methodref          #35.#128      // org/apache/commons/lang3/concurrent/BasicThreadFactory.getDaemonFlag:()Ljava/lang/Boolean;
   #33 = Methodref          #129.#130     // java/lang/Boolean.booleanValue:()Z
   #34 = Methodref          #120.#131     // java/lang/Thread.setDaemon:(Z)V
   #35 = Class              #132          // org/apache/commons/lang3/concurrent/BasicThreadFactory
   #36 = Class              #133          // java/util/concurrent/ThreadFactory
   #37 = Class              #134          // org/apache/commons/lang3/concurrent/BasicThreadFactory$1
   #38 = Utf8               InnerClasses
   #39 = Class              #135          // org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder
   #40 = Utf8               Builder
   #41 = Utf8               threadCounter
   #42 = Utf8               Ljava/util/concurrent/atomic/AtomicLong;
   #43 = Utf8               wrappedFactory
   #44 = Utf8               Ljava/util/concurrent/ThreadFactory;
   #45 = Utf8               uncaughtExceptionHandler
   #46 = Class              #136          // java/lang/Thread$UncaughtExceptionHandler
   #47 = Utf8               UncaughtExceptionHandler
   #48 = Utf8               Ljava/lang/Thread$UncaughtExceptionHandler;
   #49 = Utf8               namingPattern
   #50 = Utf8               Ljava/lang/String;
   #51 = Utf8               priority
   #52 = Utf8               Ljava/lang/Integer;
   #53 = Utf8               daemon
   #54 = Utf8               Ljava/lang/Boolean;
   #55 = Utf8               <init>
   #56 = Utf8               (Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)V
   #57 = Utf8               Code
   #58 = Utf8               LineNumberTable
   #59 = Utf8               LocalVariableTable
   #60 = Utf8               this
   #61 = Utf8               Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;
   #62 = Utf8               builder
   #63 = Utf8               Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
   #64 = Utf8               StackMapTable
   #65 = Utf8               getWrappedFactory
   #66 = Utf8               ()Ljava/util/concurrent/ThreadFactory;
   #67 = Utf8               getNamingPattern
   #68 = Utf8               ()Ljava/lang/String;
   #69 = Utf8               getDaemonFlag
   #70 = Utf8               ()Ljava/lang/Boolean;
   #71 = Utf8               getPriority
   #72 = Utf8               ()Ljava/lang/Integer;
   #73 = Utf8               getUncaughtExceptionHandler
   #74 = Utf8               ()Ljava/lang/Thread$UncaughtExceptionHandler;
   #75 = Utf8               getThreadCount
   #76 = Utf8               ()J
   #77 = Utf8               newThread
   #78 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;
   #79 = Utf8               runnable
   #80 = Utf8               Ljava/lang/Runnable;
   #81 = Utf8               thread
   #82 = Utf8               Ljava/lang/Thread;
   #83 = Utf8               initializeThread
   #84 = Utf8               (Ljava/lang/Thread;)V
   #85 = Utf8               count
   #86 = Utf8               Ljava/lang/Long;
   #87 = Utf8               (Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$1;)V
   #88 = Utf8               x0
   #89 = Utf8               x1
   #90 = Utf8               Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$1;
   #91 = Utf8               SourceFile
   #92 = Utf8               BasicThreadFactory.java
   #93 = NameAndType        #55:#56       // "<init>":(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)V
   #94 = NameAndType        #55:#137      // "<init>":()V
   #95 = NameAndType        #138:#139     // access$000:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/util/concurrent/ThreadFactory;
   #96 = Class              #140          // java/util/concurrent/Executors
   #97 = NameAndType        #141:#66      // defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
   #98 = NameAndType        #43:#44       // wrappedFactory:Ljava/util/concurrent/ThreadFactory;
   #99 = NameAndType        #142:#143     // access$100:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/String;
  #100 = NameAndType        #49:#50       // namingPattern:Ljava/lang/String;
  #101 = NameAndType        #144:#145     // access$200:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Integer;
  #102 = NameAndType        #51:#52       // priority:Ljava/lang/Integer;
  #103 = NameAndType        #146:#147     // access$300:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Boolean;
  #104 = NameAndType        #53:#54       // daemon:Ljava/lang/Boolean;
  #105 = NameAndType        #148:#149     // access$400:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Thread$UncaughtExceptionHandler;
  #106 = NameAndType        #45:#48       // uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
  #107 = Utf8               java/util/concurrent/atomic/AtomicLong
  #108 = NameAndType        #41:#42       // threadCounter:Ljava/util/concurrent/atomic/AtomicLong;
  #109 = NameAndType        #150:#76      // get:()J
  #110 = NameAndType        #65:#66       // getWrappedFactory:()Ljava/util/concurrent/ThreadFactory;
  #111 = NameAndType        #77:#78       // newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
  #112 = NameAndType        #83:#84       // initializeThread:(Ljava/lang/Thread;)V
  #113 = NameAndType        #67:#68       // getNamingPattern:()Ljava/lang/String;
  #114 = NameAndType        #151:#76      // incrementAndGet:()J
  #115 = Class              #152          // java/lang/Long
  #116 = NameAndType        #153:#154     // valueOf:(J)Ljava/lang/Long;
  #117 = Utf8               java/lang/Object
  #118 = Class              #155          // java/lang/String
  #119 = NameAndType        #156:#157     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #120 = Class              #158          // java/lang/Thread
  #121 = NameAndType        #159:#160     // setName:(Ljava/lang/String;)V
  #122 = NameAndType        #73:#74       // getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
  #123 = NameAndType        #161:#162     // setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
  #124 = NameAndType        #71:#72       // getPriority:()Ljava/lang/Integer;
  #125 = Class              #163          // java/lang/Integer
  #126 = NameAndType        #164:#165     // intValue:()I
  #127 = NameAndType        #166:#167     // setPriority:(I)V
  #128 = NameAndType        #69:#70       // getDaemonFlag:()Ljava/lang/Boolean;
  #129 = Class              #168          // java/lang/Boolean
  #130 = NameAndType        #169:#170     // booleanValue:()Z
  #131 = NameAndType        #171:#172     // setDaemon:(Z)V
  #132 = Utf8               org/apache/commons/lang3/concurrent/BasicThreadFactory
  #133 = Utf8               java/util/concurrent/ThreadFactory
  #134 = Utf8               org/apache/commons/lang3/concurrent/BasicThreadFactory$1
  #135 = Utf8               org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder
  #136 = Utf8               java/lang/Thread$UncaughtExceptionHandler
  #137 = Utf8               ()V
  #138 = Utf8               access$000
  #139 = Utf8               (Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/util/concurrent/ThreadFactory;
  #140 = Utf8               java/util/concurrent/Executors
  #141 = Utf8               defaultThreadFactory
  #142 = Utf8               access$100
  #143 = Utf8               (Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/String;
  #144 = Utf8               access$200
  #145 = Utf8               (Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Integer;
  #146 = Utf8               access$300
  #147 = Utf8               (Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Boolean;
  #148 = Utf8               access$400
  #149 = Utf8               (Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Thread$UncaughtExceptionHandler;
  #150 = Utf8               get
  #151 = Utf8               incrementAndGet
  #152 = Utf8               java/lang/Long
  #153 = Utf8               valueOf
  #154 = Utf8               (J)Ljava/lang/Long;
  #155 = Utf8               java/lang/String
  #156 = Utf8               format
  #157 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #158 = Utf8               java/lang/Thread
  #159 = Utf8               setName
  #160 = Utf8               (Ljava/lang/String;)V
  #161 = Utf8               setUncaughtExceptionHandler
  #162 = Utf8               (Ljava/lang/Thread$UncaughtExceptionHandler;)V
  #163 = Utf8               java/lang/Integer
  #164 = Utf8               intValue
  #165 = Utf8               ()I
  #166 = Utf8               setPriority
  #167 = Utf8               (I)V
  #168 = Utf8               java/lang/Boolean
  #169 = Utf8               booleanValue
  #170 = Utf8               ()Z
  #171 = Utf8               setDaemon
  #172 = Utf8               (Z)V
{
  private final java.util.concurrent.atomic.AtomicLong threadCounter;
    descriptor: Ljava/util/concurrent/atomic/AtomicLong;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.util.concurrent.ThreadFactory wrappedFactory;
    descriptor: Ljava/util/concurrent/ThreadFactory;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler;
    descriptor: Ljava/lang/Thread$UncaughtExceptionHandler;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String namingPattern;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.Integer priority;
    descriptor: Ljava/lang/Integer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.Boolean daemon;
    descriptor: Ljava/lang/Boolean;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private org.apache.commons.lang3.concurrent.BasicThreadFactory(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder);
    descriptor: (Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: aload_1
         5: invokestatic  #3                  // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$000:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/util/concurrent/ThreadFactory;
         8: ifnonnull     21
        11: aload_0
        12: invokestatic  #4                  // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
        15: putfield      #5                  // Field wrappedFactory:Ljava/util/concurrent/ThreadFactory;
        18: goto          29
        21: aload_0
        22: aload_1
        23: invokestatic  #3                  // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$000:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/util/concurrent/ThreadFactory;
        26: putfield      #5                  // Field wrappedFactory:Ljava/util/concurrent/ThreadFactory;
        29: aload_0
        30: aload_1
        31: invokestatic  #6                  // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$100:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/String;
        34: putfield      #7                  // Field namingPattern:Ljava/lang/String;
        37: aload_0
        38: aload_1
        39: invokestatic  #8                  // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$200:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Integer;
        42: putfield      #9                  // Field priority:Ljava/lang/Integer;
        45: aload_0
        46: aload_1
        47: invokestatic  #10                 // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$300:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Boolean;
        50: putfield      #11                 // Field daemon:Ljava/lang/Boolean;
        53: aload_0
        54: aload_1
        55: invokestatic  #12                 // Method org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder.access$400:(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)Ljava/lang/Thread$UncaughtExceptionHandler;
        58: putfield      #13                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
        61: aload_0
        62: new           #14                 // class java/util/concurrent/atomic/AtomicLong
        65: dup
        66: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
        69: putfield      #16                 // Field threadCounter:Ljava/util/concurrent/atomic/AtomicLong;
        72: return
      LineNumberTable:
        line 116: 0
        line 117: 4
        line 118: 11
        line 120: 21
        line 123: 29
        line 124: 37
        line 125: 45
        line 126: 53
        line 128: 61
        line 129: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      73     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;
            0      73     1 builder   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class org/apache/commons/lang3/concurrent/BasicThreadFactory, class org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder ]
          stack = []
        frame_type = 7 /* same */

  public final java.util.concurrent.ThreadFactory getWrappedFactory();
    descriptor: ()Ljava/util/concurrent/ThreadFactory;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field wrappedFactory:Ljava/util/concurrent/ThreadFactory;
         4: areturn
      LineNumberTable:
        line 140: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;

  public final java.lang.String getNamingPattern();
    descriptor: ()Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #7                  // Field namingPattern:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 150: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;

  public final java.lang.Boolean getDaemonFlag();
    descriptor: ()Ljava/lang/Boolean;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #11                 // Field daemon:Ljava/lang/Boolean;
         4: areturn
      LineNumberTable:
        line 162: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;

  public final java.lang.Integer getPriority();
    descriptor: ()Ljava/lang/Integer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #9                  // Field priority:Ljava/lang/Integer;
         4: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;

  public final java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler();
    descriptor: ()Ljava/lang/Thread$UncaughtExceptionHandler;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #13                 // Field uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
         4: areturn
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;

  public long getThreadCount();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #16                 // Field threadCounter:Ljava/util/concurrent/atomic/AtomicLong;
         4: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
         7: lreturn
      LineNumberTable:
        line 193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;

  public java.lang.Thread newThread(java.lang.Runnable);
    descriptor: (Ljava/lang/Runnable;)Ljava/lang/Thread;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #18                 // Method getWrappedFactory:()Ljava/util/concurrent/ThreadFactory;
         4: aload_1
         5: invokeinterface #19,  2           // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
        10: astore_2
        11: aload_0
        12: aload_2
        13: invokespecial #20                 // Method initializeThread:(Ljava/lang/Thread;)V
        16: aload_2
        17: areturn
      LineNumberTable:
        line 206: 0
        line 207: 11
        line 209: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;
            0      18     1 runnable   Ljava/lang/Runnable;
           11       7     2 thread   Ljava/lang/Thread;

  private void initializeThread(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #21                 // Method getNamingPattern:()Ljava/lang/String;
         4: ifnull        37
         7: aload_0
         8: getfield      #16                 // Field threadCounter:Ljava/util/concurrent/atomic/AtomicLong;
        11: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
        14: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        17: astore_2
        18: aload_1
        19: aload_0
        20: invokevirtual #21                 // Method getNamingPattern:()Ljava/lang/String;
        23: iconst_1
        24: anewarray     #24                 // class java/lang/Object
        27: dup
        28: iconst_0
        29: aload_2
        30: aastore
        31: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        34: invokevirtual #26                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
        37: aload_0
        38: invokevirtual #27                 // Method getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
        41: ifnull        52
        44: aload_1
        45: aload_0
        46: invokevirtual #27                 // Method getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;
        49: invokevirtual #28                 // Method java/lang/Thread.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
        52: aload_0
        53: invokevirtual #29                 // Method getPriority:()Ljava/lang/Integer;
        56: ifnull        70
        59: aload_1
        60: aload_0
        61: invokevirtual #29                 // Method getPriority:()Ljava/lang/Integer;
        64: invokevirtual #30                 // Method java/lang/Integer.intValue:()I
        67: invokevirtual #31                 // Method java/lang/Thread.setPriority:(I)V
        70: aload_0
        71: invokevirtual #32                 // Method getDaemonFlag:()Ljava/lang/Boolean;
        74: ifnull        88
        77: aload_1
        78: aload_0
        79: invokevirtual #32                 // Method getDaemonFlag:()Ljava/lang/Boolean;
        82: invokevirtual #33                 // Method java/lang/Boolean.booleanValue:()Z
        85: invokevirtual #34                 // Method java/lang/Thread.setDaemon:(Z)V
        88: return
      LineNumberTable:
        line 222: 0
        line 223: 7
        line 224: 18
        line 227: 37
        line 228: 44
        line 231: 52
        line 232: 59
        line 235: 70
        line 236: 77
        line 238: 88
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      19     2 count   Ljava/lang/Long;
            0      89     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;
            0      89     1 thread   Ljava/lang/Thread;
      StackMapTable: number_of_entries = 4
        frame_type = 37 /* same */
        frame_type = 14 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */

  org.apache.commons.lang3.concurrent.BasicThreadFactory(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder, org.apache.commons.lang3.concurrent.BasicThreadFactory$1);
    descriptor: (Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$1;)V
    flags: (0x1000) ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;)V
         5: return
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory;
            0       6     1    x0   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$Builder;
            0       6     2    x1   Lorg/apache/commons/lang3/concurrent/BasicThreadFactory$1;
}
SourceFile: "BasicThreadFactory.java"
InnerClasses:
  static #37;                             // class org/apache/commons/lang3/concurrent/BasicThreadFactory$1
  public static #40= #39 of #35;          // Builder=class org/apache/commons/lang3/concurrent/BasicThreadFactory$Builder of class org/apache/commons/lang3/concurrent/BasicThreadFactory
  public static #47= #46 of #120;         // UncaughtExceptionHandler=class java/lang/Thread$UncaughtExceptionHandler of class java/lang/Thread
