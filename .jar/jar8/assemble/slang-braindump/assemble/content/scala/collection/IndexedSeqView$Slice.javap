Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/IndexedSeqView$Slice.class
  Last modified May 29, 2022; size 2032 bytes
  SHA-256 checksum 34b7596b432782b46db7686d08e241c38362dc353b7ab0989b7b4e32863ffc7c
  Compiled from "IndexedSeqView.scala"
public class scala.collection.IndexedSeqView$Slice<A extends java.lang.Object> extends scala.collection.AbstractIndexedSeqView<A>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/IndexedSeqView$Slice
  super_class: #5                         // scala/collection/AbstractIndexedSeqView
  interfaces: 0, fields: 5, methods: 6, attributes: 5
Constant pool:
   #1 = Utf8               scala/collection/IndexedSeqView$Slice
   #2 = Class              #1             // scala/collection/IndexedSeqView$Slice
   #3 = Utf8               <A:Ljava/lang/Object;>Lscala/collection/AbstractIndexedSeqView<TA;>;
   #4 = Utf8               scala/collection/AbstractIndexedSeqView
   #5 = Class              #4             // scala/collection/AbstractIndexedSeqView
   #6 = Utf8               IndexedSeqView.scala
   #7 = Utf8               scala/collection/IndexedSeqView
   #8 = Class              #7             // scala/collection/IndexedSeqView
   #9 = Utf8               Slice
  #10 = Utf8               serialVersionUID
  #11 = Utf8               J
  #12 = Long               3l
  #14 = Utf8               underlying
  #15 = Utf8               Lscala/collection/IndexedSeqOps;
  #16 = Utf8               Lscala/collection/IndexedSeqOps<TA;*Ljava/lang/Object;>;
  #17 = Utf8               lo
  #18 = Utf8               I
  #19 = Utf8               hi
  #20 = Utf8               len
  #21 = Utf8               ()I
  #22 = NameAndType        #17:#18        // lo:I
  #23 = Fieldref           #2.#22         // scala/collection/IndexedSeqView$Slice.lo:I
  #24 = Utf8               this
  #25 = Utf8               Lscala/collection/IndexedSeqView$Slice;
  #26 = NameAndType        #19:#18        // hi:I
  #27 = Fieldref           #2.#26         // scala/collection/IndexedSeqView$Slice.hi:I
  #28 = NameAndType        #20:#18        // len:I
  #29 = Fieldref           #2.#28         // scala/collection/IndexedSeqView$Slice.len:I
  #30 = Utf8               apply
  #31 = Utf8               (I)Ljava/lang/Object;
  #32 = Utf8               (I)TA;^Ljava/lang/IndexOutOfBoundsException;
  #33 = Utf8               java/lang/IndexOutOfBoundsException
  #34 = Class              #33            // java/lang/IndexOutOfBoundsException
  #35 = Utf8               i
  #36 = NameAndType        #14:#15        // underlying:Lscala/collection/IndexedSeqOps;
  #37 = Fieldref           #2.#36         // scala/collection/IndexedSeqView$Slice.underlying:Lscala/collection/IndexedSeqOps;
  #38 = NameAndType        #17:#21        // lo:()I
  #39 = Methodref          #2.#38         // scala/collection/IndexedSeqView$Slice.lo:()I
  #40 = Utf8               scala/collection/IndexedSeqOps
  #41 = Class              #40            // scala/collection/IndexedSeqOps
  #42 = NameAndType        #30:#31        // apply:(I)Ljava/lang/Object;
  #43 = InterfaceMethodref #41.#42        // scala/collection/IndexedSeqOps.apply:(I)Ljava/lang/Object;
  #44 = Utf8               length
  #45 = NameAndType        #20:#21        // len:()I
  #46 = Methodref          #2.#45         // scala/collection/IndexedSeqView$Slice.len:()I
  #47 = Utf8               <init>
  #48 = Utf8               (Lscala/collection/IndexedSeqOps;II)V
  #49 = Utf8               (Lscala/collection/IndexedSeqOps<TA;*Ljava/lang/Object;>;II)V
  #50 = Utf8               from
  #51 = Utf8               until
  #52 = Utf8               ()V
  #53 = NameAndType        #47:#52        // "<init>":()V
  #54 = Methodref          #5.#53         // scala/collection/AbstractIndexedSeqView."<init>":()V
  #55 = Utf8               scala/runtime/RichInt$
  #56 = Class              #55            // scala/runtime/RichInt$
  #57 = Utf8               MODULE$
  #58 = Utf8               Lscala/runtime/RichInt$;
  #59 = NameAndType        #57:#58        // MODULE$:Lscala/runtime/RichInt$;
  #60 = Fieldref           #56.#59        // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
  #61 = Utf8               scala/math/package$
  #62 = Class              #61            // scala/math/package$
  #63 = Utf8               Lscala/math/package$;
  #64 = NameAndType        #57:#63        // MODULE$:Lscala/math/package$;
  #65 = Fieldref           #62.#64        // scala/math/package$.MODULE$:Lscala/math/package$;
  #66 = Utf8               java/lang/Math
  #67 = Class              #66            // java/lang/Math
  #68 = Utf8               max
  #69 = Utf8               (II)I
  #70 = NameAndType        #68:#69        // max:(II)I
  #71 = Methodref          #67.#70        // java/lang/Math.max:(II)I
  #72 = NameAndType        #44:#21        // length:()I
  #73 = InterfaceMethodref #41.#72        // scala/collection/IndexedSeqOps.length:()I
  #74 = Utf8               min
  #75 = NameAndType        #74:#69        // min:(II)I
  #76 = Methodref          #67.#75        // java/lang/Math.min:(II)I
  #77 = NameAndType        #19:#21        // hi:()I
  #78 = Methodref          #2.#77         // scala/collection/IndexedSeqView$Slice.hi:()I
  #79 = Utf8               max$extension_that
  #80 = Utf8               min$extension_that
  #81 = Utf8               ConstantValue
  #82 = Utf8               Signature
  #83 = Utf8               Code
  #84 = Utf8               LineNumberTable
  #85 = Utf8               LocalVariableTable
  #86 = Utf8               Exceptions
  #87 = Utf8               MethodParameters
  #88 = Utf8               InnerClasses
  #89 = Utf8               SourceFile
  #90 = Utf8               ScalaInlineInfo
  #91 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 3l

  private final scala.collection.IndexedSeqOps<A, ?, java.lang.Object> underlying;
    descriptor: Lscala/collection/IndexedSeqOps;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #16                          // Lscala/collection/IndexedSeqOps<TA;*Ljava/lang/Object;>;

  private final int lo;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int hi;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int len;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public int lo();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #23                 // Field lo:I
         4: ireturn
      LineNumberTable:
        line 169: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/IndexedSeqView$Slice;

  public int hi();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #27                 // Field hi:I
         4: ireturn
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/IndexedSeqView$Slice;

  public int len();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field len:I
         4: ireturn
      LineNumberTable:
        line 171: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/IndexedSeqView$Slice;

  public A apply(int) throws java/lang/IndexOutOfBoundsException;
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field underlying:Lscala/collection/IndexedSeqOps;
         4: aload_0
         5: invokevirtual #39                 // Method lo:()I
         8: iload_1
         9: iadd
        10: invokeinterface #43,  2           // InterfaceMethod scala/collection/IndexedSeqOps.apply:(I)Ljava/lang/Object;
        15: areturn
      LineNumberTable:
        line 173: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/collection/IndexedSeqView$Slice;
            0      16     1     i   I
    Exceptions:
      throws java.lang.IndexOutOfBoundsException
    Signature: #32                          // (I)TA;^Ljava/lang/IndexOutOfBoundsException;
    MethodParameters:
      Name                           Flags
      i                              final

  public int length();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #46                 // Method len:()I
         4: ireturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/IndexedSeqView$Slice;

  public scala.collection.IndexedSeqView$Slice(scala.collection.IndexedSeqOps<A, ?, java.lang.Object>, int, int);
    descriptor: (Lscala/collection/IndexedSeqOps;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=10, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #37                 // Field underlying:Lscala/collection/IndexedSeqOps;
         5: aload_0
         6: invokespecial #54                 // Method scala/collection/AbstractIndexedSeqView."<init>":()V
         9: aload_0
        10: getstatic     #60                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        13: pop
        14: iconst_0
        15: istore        5
        17: getstatic     #65                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        20: pop
        21: iload_2
        22: iload         5
        24: invokestatic  #71                 // Method java/lang/Math.max:(II)I
        27: putfield      #23                 // Field lo:I
        30: aload_0
        31: getstatic     #60                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        34: pop
        35: getstatic     #60                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        38: pop
        39: iconst_0
        40: istore        6
        42: getstatic     #65                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        45: pop
        46: iload_3
        47: iload         6
        49: invokestatic  #71                 // Method java/lang/Math.max:(II)I
        52: istore        7
        54: aload_1
        55: invokeinterface #73,  1           // InterfaceMethod scala/collection/IndexedSeqOps.length:()I
        60: istore        8
        62: getstatic     #65                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        65: pop
        66: iload         7
        68: iload         8
        70: invokestatic  #76                 // Method java/lang/Math.min:(II)I
        73: putfield      #27                 // Field hi:I
        76: aload_0
        77: getstatic     #60                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        80: pop
        81: aload_0
        82: invokevirtual #78                 // Method hi:()I
        85: aload_0
        86: invokevirtual #39                 // Method lo:()I
        89: isub
        90: istore        4
        92: iconst_0
        93: istore        9
        95: getstatic     #65                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
        98: pop
        99: iload         4
       101: iload         9
       103: invokestatic  #71                 // Method java/lang/Math.max:(II)I
       106: putfield      #29                 // Field len:I
       109: return
      LineNumberTable:
        line 168: 0
        line 169: 9
        line 170: 30
        line 171: 76
        line 168: 109
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     110     0  this   Lscala/collection/IndexedSeqView$Slice;
            0     110     1 underlying   Lscala/collection/IndexedSeqOps;
            0     110     2  from   I
            0     110     3 until   I
           17      10     5 max$extension_that   I
           42      12     6 max$extension_that   I
           62      11     8 min$extension_that   I
           95      11     9 max$extension_that   I
    Signature: #49                          // (Lscala/collection/IndexedSeqOps<TA;*Ljava/lang/Object;>;II)V
    MethodParameters:
      Name                           Flags
      underlying                     final
      from                           final
      until                          final
}
InnerClasses:
  public static #9= #2 of #8;             // Slice=class scala/collection/IndexedSeqView$Slice of class scala/collection/IndexedSeqView
Signature: #3                           // <A:Ljava/lang/Object;>Lscala/collection/AbstractIndexedSeqView<TA;>;
SourceFile: "IndexedSeqView.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 00 00 06 00 2F 00 30 00 00 1E 00 1F 00 00 13
   00 15 00 00 14 00 15 00 00 2C 00 15 00 00 11 00
   15 00
  Scala: length = 0x0 (unknown attribute)

