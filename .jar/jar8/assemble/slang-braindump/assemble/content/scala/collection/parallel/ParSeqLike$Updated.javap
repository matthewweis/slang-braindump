Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParSeqLike$Updated.class
  Last modified May 29, 2022; size 10629 bytes
  SHA-256 checksum 8b9505d8556c2cc2d43517b131267bb1db0ef7eed9e9d724892fda7f3b542f79
  Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$Updated<U extends java.lang.Object, That extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ParSeqLikeTransformer<scala.collection.parallel.Combiner<U, That>, scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.Updated<U, That>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParSeqLike$Updated
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 7, methods: 34, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParSeqLike$Updated
    #2 = Class              #1            // scala/collection/parallel/ParSeqLike$Updated
    #3 = Utf8               <U:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeTransformer<Lscala/collection/parallel/Combiner<TU;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Updated<TU;TThat;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParSeqLike$ParSeqLikeTransformer
    #7 = Class              #6            // scala/collection/parallel/ParSeqLike$ParSeqLikeTransformer
    #8 = Utf8               ParSeqLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$Accessor
   #16 = Utf8               scala/collection/parallel/ParIterableLike
   #17 = Class              #16           // scala/collection/parallel/ParIterableLike
   #18 = Utf8               Accessor
   #19 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #20 = Class              #19           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #21 = Utf8               StrictSplitterCheckTask
   #22 = Utf8               scala/collection/parallel/ParSeqLike
   #23 = Class              #22           // scala/collection/parallel/ParSeqLike
   #24 = Utf8               ParSeqLikeTransformer
   #25 = Utf8               Updated
   #26 = Utf8               pos
   #27 = Utf8               I
   #28 = Utf8               elem
   #29 = Utf8               Ljava/lang/Object;
   #30 = Utf8               TU;
   #31 = Utf8               pbf
   #32 = Utf8               Lscala/collection/parallel/CombinerFactory;
   #33 = Utf8               Lscala/collection/parallel/CombinerFactory<TU;TThat;>;
   #34 = Utf8               pit
   #35 = Utf8               Lscala/collection/parallel/SeqSplitter;
   #36 = Utf8               Lscala/collection/parallel/SeqSplitter<TT;>;
   #37 = Utf8               result
   #38 = Utf8               Lscala/collection/parallel/Combiner;
   #39 = Utf8               Lscala/collection/parallel/Combiner<TU;TThat;>;
   #40 = Utf8               throwable
   #41 = Utf8               Ljava/lang/Throwable;
   #42 = Utf8               $outer
   #43 = Utf8               Lscala/collection/parallel/ParSeqLike;
   #44 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #45 = Utf8               ()Ljava/lang/String;
   #46 = Utf8               toString
   #47 = NameAndType        #46:#45       // toString:()Ljava/lang/String;
   #48 = Methodref          #5.#47        // java/lang/Object.toString:()Ljava/lang/String;
   #49 = Utf8               this
   #50 = Utf8               Lscala/collection/parallel/ParSeqLike$Updated;
   #51 = Utf8               shouldSplitFurther
   #52 = Utf8               ()Z
   #53 = Utf8               shouldSplitFurther$
   #54 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #55 = NameAndType        #53:#54       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #56 = InterfaceMethodref #15.#55       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #57 = Utf8               signalAbort
   #58 = Utf8               ()V
   #59 = Utf8               signalAbort$
   #60 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #61 = NameAndType        #59:#60       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #62 = InterfaceMethodref #15.#61       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #63 = Utf8               toString$
   #64 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #65 = NameAndType        #63:#64       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #66 = InterfaceMethodref #15.#65       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #67 = Utf8               repr
   #68 = Utf8               ()Ljava/lang/Object;
   #69 = Utf8               scala/collection/parallel/Task
   #70 = Class              #69           // scala/collection/parallel/Task
   #71 = Utf8               repr$
   #72 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #73 = NameAndType        #71:#72       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #74 = InterfaceMethodref #70.#73       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #75 = Utf8               forwardThrowable
   #76 = Utf8               forwardThrowable$
   #77 = Utf8               (Lscala/collection/parallel/Task;)V
   #78 = NameAndType        #76:#77       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #79 = InterfaceMethodref #70.#78       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #80 = Utf8               tryLeaf
   #81 = Utf8               (Lscala/Option;)V
   #82 = Utf8               (Lscala/Option<Lscala/collection/parallel/Combiner<TU;TThat;>;>;)V
   #83 = Utf8               lastres
   #84 = Utf8               tryLeaf$
   #85 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #86 = NameAndType        #84:#85       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #87 = InterfaceMethodref #70.#86       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #88 = Utf8               Lscala/Option;
   #89 = Utf8               tryMerge
   #90 = Utf8               (Ljava/lang/Object;)V
   #91 = Utf8               t
   #92 = Utf8               tryMerge$
   #93 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #94 = NameAndType        #92:#93       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #95 = InterfaceMethodref #70.#94       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #96 = Utf8               mergeThrowables
   #97 = Utf8               (Lscala/collection/parallel/Task<**>;)V
   #98 = Utf8               that
   #99 = Utf8               mergeThrowables$
  #100 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #101 = NameAndType        #99:#100      // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #102 = InterfaceMethodref #70.#101      // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #103 = Utf8               Lscala/collection/parallel/Task;
  #104 = Utf8               ()Ljava/lang/Throwable;
  #105 = NameAndType        #40:#41       // throwable:Ljava/lang/Throwable;
  #106 = Fieldref           #2.#105       // scala/collection/parallel/ParSeqLike$Updated.throwable:Ljava/lang/Throwable;
  #107 = Utf8               throwable_$eq
  #108 = Utf8               (Ljava/lang/Throwable;)V
  #109 = Utf8               x$1
  #110 = Utf8               ()Lscala/collection/parallel/SeqSplitter;
  #111 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TT;>;
  #112 = NameAndType        #34:#35       // pit:Lscala/collection/parallel/SeqSplitter;
  #113 = Fieldref           #2.#112       // scala/collection/parallel/ParSeqLike$Updated.pit:Lscala/collection/parallel/SeqSplitter;
  #114 = Utf8               ()Lscala/collection/parallel/Combiner;
  #115 = Utf8               ()Lscala/collection/parallel/Combiner<TU;TThat;>;
  #116 = NameAndType        #37:#38       // result:Lscala/collection/parallel/Combiner;
  #117 = Fieldref           #2.#116       // scala/collection/parallel/ParSeqLike$Updated.result:Lscala/collection/parallel/Combiner;
  #118 = Utf8               result_$eq
  #119 = Utf8               (Lscala/collection/parallel/Combiner;)V
  #120 = Utf8               (Lscala/collection/parallel/Combiner<TU;TThat;>;)V
  #121 = Utf8               leaf
  #122 = Utf8               prev
  #123 = NameAndType        #34:#110      // pit:()Lscala/collection/parallel/SeqSplitter;
  #124 = Methodref          #2.#123       // scala/collection/parallel/ParSeqLike$Updated.pit:()Lscala/collection/parallel/SeqSplitter;
  #125 = NameAndType        #26:#27       // pos:I
  #126 = Fieldref           #2.#125       // scala/collection/parallel/ParSeqLike$Updated.pos:I
  #127 = NameAndType        #28:#29       // elem:Ljava/lang/Object;
  #128 = Fieldref           #2.#127       // scala/collection/parallel/ParSeqLike$Updated.elem:Ljava/lang/Object;
  #129 = NameAndType        #31:#32       // pbf:Lscala/collection/parallel/CombinerFactory;
  #130 = Fieldref           #2.#129       // scala/collection/parallel/ParSeqLike$Updated.pbf:Lscala/collection/parallel/CombinerFactory;
  #131 = Utf8               scala/collection/parallel/CombinerFactory
  #132 = Class              #131          // scala/collection/parallel/CombinerFactory
  #133 = Utf8               apply
  #134 = NameAndType        #133:#114     // apply:()Lscala/collection/parallel/Combiner;
  #135 = InterfaceMethodref #132.#134     // scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
  #136 = Utf8               scala/collection/parallel/SeqSplitter
  #137 = Class              #136          // scala/collection/parallel/SeqSplitter
  #138 = Utf8               updated2combiner
  #139 = Utf8               (ILjava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #140 = NameAndType        #138:#139     // updated2combiner:(ILjava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #141 = InterfaceMethodref #137.#140     // scala/collection/parallel/SeqSplitter.updated2combiner:(ILjava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #142 = NameAndType        #118:#119     // result_$eq:(Lscala/collection/parallel/Combiner;)V
  #143 = Methodref          #2.#142       // scala/collection/parallel/ParSeqLike$Updated.result_$eq:(Lscala/collection/parallel/Combiner;)V
  #144 = Utf8               newSubtask
  #145 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #146 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #147 = Utf8               p
  #148 = Utf8               java/lang/UnsupportedOperationException
  #149 = Class              #148          // java/lang/UnsupportedOperationException
  #150 = Utf8               <init>
  #151 = NameAndType        #150:#58      // "<init>":()V
  #152 = Methodref          #149.#151     // java/lang/UnsupportedOperationException."<init>":()V
  #153 = Utf8               Lscala/collection/parallel/IterableSplitter;
  #154 = Utf8               split
  #155 = Utf8               ()Lscala/collection/immutable/Seq;
  #156 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/Combiner<TU;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Updated<TU;TThat;>;>;>;
  #157 = Utf8               splitWithSignalling
  #158 = NameAndType        #157:#155     // splitWithSignalling:()Lscala/collection/immutable/Seq;
  #159 = InterfaceMethodref #137.#158     // scala/collection/parallel/SeqSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
  #160 = Utf8               scala/runtime/BoxesRunTime
  #161 = Class              #160          // scala/runtime/BoxesRunTime
  #162 = Utf8               boxToInteger
  #163 = Utf8               (I)Ljava/lang/Integer;
  #164 = NameAndType        #162:#163     // boxToInteger:(I)Ljava/lang/Integer;
  #165 = Methodref          #161.#164     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #166 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #167 = MethodType         #166          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #168 = Utf8               $anonfun$split$12$adapted
  #169 = Utf8               (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #170 = NameAndType        #168:#169     // $anonfun$split$12$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #171 = Methodref          #2.#170       // scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$12$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #172 = MethodHandle       6:#171        // REF_invokeStatic scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$12$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #173 = MethodType         #169          //  (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #174 = Integer            5
  #175 = Integer            1
  #176 = Utf8               java/lang/invoke/LambdaMetafactory
  #177 = Class              #176          // java/lang/invoke/LambdaMetafactory
  #178 = Utf8               altMetafactory
  #179 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #180 = NameAndType        #178:#179     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #181 = Methodref          #177.#180     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #182 = MethodHandle       6:#181        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #183 = Utf8               ()Lscala/Function2;
  #184 = NameAndType        #133:#183     // apply:()Lscala/Function2;
  #185 = InvokeDynamic      #0:#184       // #0:apply:()Lscala/Function2;
  #186 = Utf8               scala/collection/immutable/Seq
  #187 = Class              #186          // scala/collection/immutable/Seq
  #188 = Utf8               scanLeft
  #189 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #190 = NameAndType        #188:#189     // scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #191 = InterfaceMethodref #187.#190     // scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #192 = Utf8               scala/collection/IterableOnce
  #193 = Class              #192          // scala/collection/IterableOnce
  #194 = Utf8               zip
  #195 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #196 = NameAndType        #194:#195     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #197 = InterfaceMethodref #187.#196     // scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #198 = Utf8               scala/collection/IterableOps
  #199 = Class              #198          // scala/collection/IterableOps
  #200 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #201 = MethodType         #200          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #202 = Utf8               $anonfun$split$13$adapted
  #203 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #204 = NameAndType        #202:#203     // $anonfun$split$13$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #205 = Methodref          #2.#204       // scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$13$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #206 = MethodHandle       6:#205        // REF_invokeStatic scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$13$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #207 = MethodType         #203          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #208 = Utf8               ()Lscala/Function1;
  #209 = NameAndType        #133:#208     // apply:()Lscala/Function1;
  #210 = InvokeDynamic      #1:#209       // #1:apply:()Lscala/Function1;
  #211 = Utf8               withFilter
  #212 = Utf8               (Lscala/Function1;)Lscala/collection/WithFilter;
  #213 = NameAndType        #211:#212     // withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #214 = InterfaceMethodref #199.#213     // scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #215 = Utf8               $anonfun$split$14
  #216 = Utf8               (Lscala/collection/parallel/ParSeqLike$Updated;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #217 = NameAndType        #215:#216     // $anonfun$split$14:(Lscala/collection/parallel/ParSeqLike$Updated;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #218 = Methodref          #2.#217       // scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$14:(Lscala/collection/parallel/ParSeqLike$Updated;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #219 = MethodHandle       6:#218        // REF_invokeStatic scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$14:(Lscala/collection/parallel/ParSeqLike$Updated;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #220 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #221 = MethodType         #220          //  (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #222 = Utf8               (Lscala/collection/parallel/ParSeqLike$Updated;)Lscala/Function1;
  #223 = NameAndType        #133:#222     // apply:(Lscala/collection/parallel/ParSeqLike$Updated;)Lscala/Function1;
  #224 = InvokeDynamic      #2:#223       // #2:apply:(Lscala/collection/parallel/ParSeqLike$Updated;)Lscala/Function1;
  #225 = Utf8               scala/collection/WithFilter
  #226 = Class              #225          // scala/collection/WithFilter
  #227 = Utf8               map
  #228 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #229 = NameAndType        #227:#228     // map:(Lscala/Function1;)Ljava/lang/Object;
  #230 = Methodref          #226.#229     // scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
  #231 = Utf8               pits
  #232 = Utf8               Lscala/collection/immutable/Seq;
  #233 = Utf8               merge
  #234 = Utf8               (Lscala/collection/parallel/ParSeqLike$Updated;)V
  #235 = Utf8               (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Updated<TU;TThat;>;)V
  #236 = NameAndType        #37:#114      // result:()Lscala/collection/parallel/Combiner;
  #237 = Methodref          #2.#236       // scala/collection/parallel/ParSeqLike$Updated.result:()Lscala/collection/parallel/Combiner;
  #238 = Utf8               scala/collection/parallel/Combiner
  #239 = Class              #238          // scala/collection/parallel/Combiner
  #240 = Utf8               combine
  #241 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #242 = NameAndType        #240:#241     // combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #243 = InterfaceMethodref #239.#242     // scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #244 = Utf8               requiresStrictSplitters
  #245 = Utf8               scala$collection$parallel$ParSeqLike$Updated$$$outer
  #246 = Utf8               ()Lscala/collection/parallel/ParSeqLike;
  #247 = NameAndType        #42:#43       // $outer:Lscala/collection/parallel/ParSeqLike;
  #248 = Fieldref           #2.#247       // scala/collection/parallel/ParSeqLike$Updated.$outer:Lscala/collection/parallel/ParSeqLike;
  #249 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #250 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #251 = NameAndType        #245:#246     // scala$collection$parallel$ParSeqLike$Updated$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #252 = Methodref          #2.#251       // scala/collection/parallel/ParSeqLike$Updated.scala$collection$parallel$ParSeqLike$Updated$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #253 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #254 = NameAndType        #233:#234     // merge:(Lscala/collection/parallel/ParSeqLike$Updated;)V
  #255 = Methodref          #2.#254       // scala/collection/parallel/ParSeqLike$Updated.merge:(Lscala/collection/parallel/ParSeqLike$Updated;)V
  #256 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #257 = NameAndType        #144:#145     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #258 = Methodref          #2.#257       // scala/collection/parallel/ParSeqLike$Updated.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #259 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #260 = Utf8               $anonfun$split$12
  #261 = Utf8               (ILscala/collection/parallel/SeqSplitter;)I
  #262 = Utf8               x$29
  #263 = Utf8               x$30
  #264 = Utf8               remaining
  #265 = Utf8               ()I
  #266 = NameAndType        #264:#265     // remaining:()I
  #267 = InterfaceMethodref #137.#266     // scala/collection/parallel/SeqSplitter.remaining:()I
  #268 = Utf8               $anonfun$split$13
  #269 = Utf8               (Lscala/Tuple2;)Z
  #270 = Utf8               check$ifrefutable$6
  #271 = Utf8               Lscala/Tuple2;
  #272 = Utf8               scala/Tuple2
  #273 = Class              #272          // scala/Tuple2
  #274 = Utf8               $this
  #275 = Utf8               x$31
  #276 = Utf8               _1
  #277 = NameAndType        #276:#68      // _1:()Ljava/lang/Object;
  #278 = Methodref          #273.#277     // scala/Tuple2._1:()Ljava/lang/Object;
  #279 = Utf8               _2$mcI$sp
  #280 = NameAndType        #279:#265     // _2$mcI$sp:()I
  #281 = Methodref          #273.#280     // scala/Tuple2._2$mcI$sp:()I
  #282 = Utf8               (Lscala/collection/parallel/ParSeqLike;ILjava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;)V
  #283 = NameAndType        #150:#282     // "<init>":(Lscala/collection/parallel/ParSeqLike;ILjava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;)V
  #284 = Methodref          #2.#283       // scala/collection/parallel/ParSeqLike$Updated."<init>":(Lscala/collection/parallel/ParSeqLike;ILjava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;)V
  #285 = Utf8               scala/MatchError
  #286 = Class              #285          // scala/MatchError
  #287 = NameAndType        #150:#90      // "<init>":(Ljava/lang/Object;)V
  #288 = Methodref          #286.#287     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #289 = Utf8               untilp
  #290 = Utf8               (ITU;Lscala/collection/parallel/CombinerFactory<TU;TThat;>;Lscala/collection/parallel/SeqSplitter<TT;>;)V
  #291 = Methodref          #5.#151       // java/lang/Object."<init>":()V
  #292 = Utf8               $init$
  #293 = NameAndType        #292:#77      // $init$:(Lscala/collection/parallel/Task;)V
  #294 = InterfaceMethodref #70.#293      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #295 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #296 = NameAndType        #292:#295     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #297 = InterfaceMethodref #20.#296      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #298 = NameAndType        #292:#60      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #299 = InterfaceMethodref #15.#298      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #300 = Utf8               unboxToInt
  #301 = Utf8               (Ljava/lang/Object;)I
  #302 = NameAndType        #300:#301     // unboxToInt:(Ljava/lang/Object;)I
  #303 = Methodref          #161.#302     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #304 = NameAndType        #260:#261     // $anonfun$split$12:(ILscala/collection/parallel/SeqSplitter;)I
  #305 = Methodref          #2.#304       // scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$12:(ILscala/collection/parallel/SeqSplitter;)I
  #306 = NameAndType        #268:#269     // $anonfun$split$13:(Lscala/Tuple2;)Z
  #307 = Methodref          #2.#306       // scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$13:(Lscala/Tuple2;)Z
  #308 = Utf8               boxToBoolean
  #309 = Utf8               (Z)Ljava/lang/Boolean;
  #310 = NameAndType        #308:#309     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #311 = Methodref          #161.#310     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #312 = Utf8               $deserializeLambda$
  #313 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #314 = Utf8               scala/runtime/LambdaDeserialize
  #315 = Class              #314          // scala/runtime/LambdaDeserialize
  #316 = Utf8               bootstrap
  #317 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #318 = NameAndType        #316:#317     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #319 = Methodref          #315.#318     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #320 = MethodHandle       6:#319        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #321 = Utf8               lambdaDeserialize
  #322 = NameAndType        #321:#313     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #323 = InvokeDynamic      #3:#322       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #324 = Utf8               Signature
  #325 = Utf8               Code
  #326 = Utf8               LineNumberTable
  #327 = Utf8               LocalVariableTable
  #328 = Utf8               MethodParameters
  #329 = Utf8               StackMapTable
  #330 = Utf8               InnerClasses
  #331 = Utf8               SourceFile
  #332 = Utf8               BootstrapMethods
  #333 = Utf8               ScalaInlineInfo
  #334 = Utf8               Scala
{
  private final int pos;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final U elem;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #30                          // TU;

  private final scala.collection.parallel.CombinerFactory<U, That> pbf;
    descriptor: Lscala/collection/parallel/CombinerFactory;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #33                          // Lscala/collection/parallel/CombinerFactory<TU;TThat;>;

  private final scala.collection.parallel.SeqSplitter<T> pit;
    descriptor: Lscala/collection/parallel/SeqSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #36                          // Lscala/collection/parallel/SeqSplitter<TT;>;

  private volatile scala.collection.parallel.Combiner<U, That> result;
    descriptor: Lscala/collection/parallel/Combiner;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #39                          // Lscala/collection/parallel/Combiner<TU;TThat;>;

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParSeqLike $outer;
    descriptor: Lscala/collection/parallel/ParSeqLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #56                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #66                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<U, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #87                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0       6     1 lastres   Lscala/Option;
    Signature: #82                          // (Lscala/Option<Lscala/collection/parallel/Combiner<TU;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #95                 // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #102                // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #97                          // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #106                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.SeqSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #113                // Field pit:Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
    Signature: #111                         // ()Lscala/collection/parallel/SeqSplitter<TT;>;

  public scala.collection.parallel.Combiner<U, That> result();
    descriptor: ()Lscala/collection/parallel/Combiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #117                // Field result:Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 573: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
    Signature: #115                         // ()Lscala/collection/parallel/Combiner<TU;TThat;>;

  public void result_$eq(scala.collection.parallel.Combiner<U, That>);
    descriptor: (Lscala/collection/parallel/Combiner;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #117                // Field result:Lscala/collection/parallel/Combiner;
         5: return
      LineNumberTable:
        line 573: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0       6     1   x$1   Lscala/collection/parallel/Combiner;
    Signature: #120                         // (Lscala/collection/parallel/Combiner<TU;TThat;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.collection.parallel.Combiner<U, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #124                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         5: aload_0
         6: getfield      #126                // Field pos:I
         9: aload_0
        10: getfield      #128                // Field elem:Ljava/lang/Object;
        13: aload_0
        14: getfield      #130                // Field pbf:Lscala/collection/parallel/CombinerFactory;
        17: invokeinterface #135,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
        22: invokeinterface #141,  4          // InterfaceMethod scala/collection/parallel/SeqSplitter.updated2combiner:(ILjava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        27: invokevirtual #143                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        30: return
      LineNumberTable:
        line 574: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0      31     1  prev   Lscala/Option;
    Signature: #82                          // (Lscala/Option<Lscala/collection/parallel/Combiner<TU;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #149                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #152                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 575: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0       8     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #146                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<scala.collection.parallel.Combiner<U, That>, scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.Updated<U, That>>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #124                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         4: invokeinterface #159,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
         9: astore_1
        10: aload_1
        11: aload_1
        12: iconst_0
        13: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        16: invokedynamic #185,  0            // InvokeDynamic #0:apply:()Lscala/Function2;
        21: invokeinterface #191,  3          // InterfaceMethod scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        26: checkcast     #193                // class scala/collection/IterableOnce
        29: invokeinterface #197,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        34: checkcast     #199                // class scala/collection/IterableOps
        37: invokedynamic #210,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        42: invokeinterface #214,  2          // InterfaceMethod scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        47: aload_0
        48: invokedynamic #224,  0            // InvokeDynamic #2:apply:(Lscala/collection/parallel/ParSeqLike$Updated;)Lscala/Function1;
        53: invokevirtual #230                // Method scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
        56: checkcast     #187                // class scala/collection/immutable/Seq
        59: areturn
      LineNumberTable:
        line 577: 0
        line 578: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      49     1  pits   Lscala/collection/immutable/Seq;
            0      60     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
    Signature: #156                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/Combiner<TU;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Updated<TU;TThat;>;>;>;

  public void merge(scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.Updated<U, That>);
    descriptor: (Lscala/collection/parallel/ParSeqLike$Updated;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #237                // Method result:()Lscala/collection/parallel/Combiner;
         5: aload_1
         6: invokevirtual #237                // Method result:()Lscala/collection/parallel/Combiner;
         9: invokeinterface #243,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        14: invokevirtual #143                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        17: return
      LineNumberTable:
        line 580: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0      18     1  that   Lscala/collection/parallel/ParSeqLike$Updated;
    Signature: #235                         // (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Updated<TU;TThat;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 581: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$Updated$$$outer();
    descriptor: ()Lscala/collection/parallel/ParSeqLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #248                // Field $outer:Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method scala$collection$parallel$ParSeqLike$Updated$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method scala$collection$parallel$ParSeqLike$Updated$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$Updated
         5: invokevirtual #255                // Method merge:(Lscala/collection/parallel/ParSeqLike$Updated;)V
         8: return
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #258                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #239                // class scala/collection/parallel/Combiner
         5: invokevirtual #143                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
         8: return
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #237                // Method result:()Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public scala.collection.parallel.IterableSplitter pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #124                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$Updated;

  public static final int $anonfun$split$12(int, scala.collection.parallel.SeqSplitter);
    descriptor: (ILscala/collection/parallel/SeqSplitter;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: aload_1
         2: invokeinterface #267,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.remaining:()I
         7: iadd
         8: ireturn
      LineNumberTable:
        line 578: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$29   I
            0       9     1  x$30   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      x$29                           final
      x$30                           final

  public static final boolean $anonfun$split$13(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 578: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$6   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$6            final

  public static final scala.collection.parallel.ParIterableLike$Accessor $anonfun$split$14(scala.collection.parallel.ParSeqLike$Updated, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParSeqLike$Updated;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        53
         6: aload_3
         7: invokevirtual #278                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #137                // class scala/collection/parallel/SeqSplitter
        13: astore        4
        15: aload_3
        16: invokevirtual #281                // Method scala/Tuple2._2$mcI$sp:()I
        19: istore        5
        21: new           #2                  // class scala/collection/parallel/ParSeqLike$Updated
        24: dup
        25: aload_0
        26: invokevirtual #252                // Method scala$collection$parallel$ParSeqLike$Updated$$$outer:()Lscala/collection/parallel/ParSeqLike;
        29: aload_0
        30: getfield      #126                // Field pos:I
        33: iload         5
        35: isub
        36: aload_0
        37: getfield      #128                // Field elem:Ljava/lang/Object;
        40: aload_0
        41: getfield      #130                // Field pbf:Lscala/collection/parallel/CombinerFactory;
        44: aload         4
        46: invokespecial #284                // Method "<init>":(Lscala/collection/parallel/ParSeqLike;ILjava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;)V
        49: astore_2
        50: goto          65
        53: goto          56
        56: new           #286                // class scala/MatchError
        59: dup
        60: aload_3
        61: invokespecial #288                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        64: athrow
        65: aload_2
        66: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 53
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParSeqLike$Updated, class scala/Tuple2, class scala/collection/parallel/ParSeqLike$Updated, class scala/Tuple2, class scala/collection/parallel/SeqSplitter, int ]
          stack = []
      LineNumberTable:
        line 578: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      38     4     p   Lscala/collection/parallel/SeqSplitter;
           21      32     5 untilp   I
            0      67     0 $this   Lscala/collection/parallel/ParSeqLike$Updated;
            0      67     1  x$31   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$31                           final

  public scala.collection.parallel.ParSeqLike$Updated(int, U, scala.collection.parallel.CombinerFactory<U, That>, scala.collection.parallel.SeqSplitter<T>);
    descriptor: (Lscala/collection/parallel/ParSeqLike;ILjava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: aload_0
         1: iload_2
         2: putfield      #126                // Field pos:I
         5: aload_0
         6: aload_3
         7: putfield      #128                // Field elem:Ljava/lang/Object;
        10: aload_0
        11: aload         4
        13: putfield      #130                // Field pbf:Lscala/collection/parallel/CombinerFactory;
        16: aload_0
        17: aload         5
        19: putfield      #113                // Field pit:Lscala/collection/parallel/SeqSplitter;
        22: aload_1
        23: ifnonnull     28
        26: aconst_null
        27: athrow
        28: aload_0
        29: aload_1
        30: putfield      #248                // Field $outer:Lscala/collection/parallel/ParSeqLike;
        33: aload_0
        34: invokespecial #291                // Method java/lang/Object."<init>":()V
        37: aload_0
        38: invokestatic  #294                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        41: aload_0
        42: invokestatic  #297                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        45: aload_0
        46: invokestatic  #299                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        49: aload_0
        50: aconst_null
        51: putfield      #117                // Field result:Lscala/collection/parallel/Combiner;
        54: return
      StackMapTable: number_of_entries = 1
        frame_type = 28 /* same */
      LineNumberTable:
        line 571: 0
        line 572: 33
        line 573: 49
        line 571: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0  this   Lscala/collection/parallel/ParSeqLike$Updated;
            0      55     1 $outer   Lscala/collection/parallel/ParSeqLike;
            0      55     2   pos   I
            0      55     3  elem   Ljava/lang/Object;
            0      55     4   pbf   Lscala/collection/parallel/CombinerFactory;
            0      55     5   pit   Lscala/collection/parallel/SeqSplitter;
    Signature: #290                         // (ITU;Lscala/collection/parallel/CombinerFactory<TU;TThat;>;Lscala/collection/parallel/SeqSplitter<TT;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      pos                            final
      elem                           final
      pbf                            final
      pit                            final

  public static final java.lang.Object $anonfun$split$12$adapted(java.lang.Object, scala.collection.parallel.SeqSplitter);
    descriptor: (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokestatic  #303                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: aload_1
         5: invokestatic  #305                // Method $anonfun$split$12:(ILscala/collection/parallel/SeqSplitter;)I
         8: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 578: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  x$29   Ljava/lang/Object;
            0      12     1  x$30   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      x$29                           final
      x$30                           final

  public static final java.lang.Object $anonfun$split$13$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #307                // Method $anonfun$split$13:(Lscala/Tuple2;)Z
         4: invokestatic  #311                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 578: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$6   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$6            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #323,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #15 of #17;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #21= #20 of #17;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #24= #7 of #23;                  // ParSeqLikeTransformer=class scala/collection/parallel/ParSeqLike$ParSeqLikeTransformer of class scala/collection/parallel/ParSeqLike
  public #25= #2 of #23;                  // Updated=class scala/collection/parallel/ParSeqLike$Updated of class scala/collection/parallel/ParSeqLike
Signature: #3                           // <U:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeTransformer<Lscala/collection/parallel/Combiner<TU;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.Updated<TU;TThat;>;>;
SourceFile: "ParSeqLike.scala"
BootstrapMethods:
  0: #182 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #167 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #172 REF_invokeStatic scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$12$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #173 (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #174 5
      #175 1
      #173 (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  1: #182 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #201 (Ljava/lang/Object;)Ljava/lang/Object;
      #206 REF_invokeStatic scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$13$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #207 (Lscala/Tuple2;)Ljava/lang/Object;
      #174 5
      #175 1
      #207 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #182 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #201 (Ljava/lang/Object;)Ljava/lang/Object;
      #219 REF_invokeStatic scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$14:(Lscala/collection/parallel/ParSeqLike$Updated;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #221 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #174 5
      #175 1
      #221 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  3: #320 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #172 REF_invokeStatic scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$12$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #206 REF_invokeStatic scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$13$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #219 REF_invokeStatic scala/collection/parallel/ParSeqLike$Updated.$anonfun$split$14:(Lscala/collection/parallel/ParSeqLike$Updated;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  ScalaInlineInfo: length = 0xA9 (unknown attribute)
   01 00 00 21 01 04 01 05 01 00 A8 00 A9 01 01 0C
   01 0D 01 00 CA 00 CB 01 00 D7 00 D8 01 00 96 01
   1A 00 00 4B 00 3A 00 00 79 00 51 00 00 E9 00 5A
   00 00 E9 00 EA 00 00 60 00 4D 00 00 90 01 00 00
   00 90 00 91 00 00 22 01 03 00 00 22 00 6E 00 00
   43 00 44 00 00 F4 00 34 00 00 25 00 44 00 00 25
   00 72 00 00 76 00 5A 00 00 76 00 77 00 00 F9 00
   FA 00 00 2C 00 2D 01 00 FD 00 FA 00 00 F5 00 F6
   00 00 33 00 34 00 00 39 00 3A 00 00 9A 00 9B 00
   00 28 00 68 00 00 6B 00 6C 00 00 2E 00 2D 00 00
   50 00 51 00 00 59 00 5A 00
  Scala: length = 0x0 (unknown attribute)

