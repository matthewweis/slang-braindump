Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParIterableLike$Span.class
  Last modified May 29, 2022; size 12141 bytes
  SHA-256 checksum 48ad4ea0c57f0439fe74fa528819ed8ca0e5965de874bcdbd83bb77036f9ba0a
  Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$Span<U extends java.lang.Object, This extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Transformer<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Span<U, This>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParIterableLike$Span
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 8, methods: 35, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParIterableLike$Span
    #2 = Class              #1            // scala/collection/parallel/ParIterableLike$Span
    #3 = Utf8               <U:Ljava/lang/Object;This:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Span<TU;TThis;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParIterableLike$Transformer
    #7 = Class              #6            // scala/collection/parallel/ParIterableLike$Transformer
    #8 = Utf8               ParIterableLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$Accessor
   #16 = Utf8               scala/collection/parallel/ParIterableLike
   #17 = Class              #16           // scala/collection/parallel/ParIterableLike
   #18 = Utf8               Accessor
   #19 = Utf8               Span
   #20 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #21 = Class              #20           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #22 = Utf8               StrictSplitterCheckTask
   #23 = Utf8               Transformer
   #24 = Utf8               pos
   #25 = Utf8               I
   #26 = Utf8               pred
   #27 = Utf8               Lscala/Function1;
   #28 = Utf8               Lscala/Function1<TT;Ljava/lang/Object;>;
   #29 = Utf8               cbfBefore
   #30 = Utf8               Lscala/collection/parallel/CombinerFactory;
   #31 = Utf8               Lscala/collection/parallel/CombinerFactory<TU;TThis;>;
   #32 = Utf8               cbfAfter
   #33 = Utf8               pit
   #34 = Utf8               Lscala/collection/parallel/IterableSplitter;
   #35 = Utf8               Lscala/collection/parallel/IterableSplitter<TT;>;
   #36 = Utf8               result
   #37 = Utf8               Lscala/Tuple2;
   #38 = Utf8               Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;
   #39 = Utf8               throwable
   #40 = Utf8               Ljava/lang/Throwable;
   #41 = Utf8               $outer
   #42 = Utf8               Lscala/collection/parallel/ParIterableLike;
   #43 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #44 = Utf8               ()Ljava/lang/String;
   #45 = Utf8               toString
   #46 = NameAndType        #45:#44       // toString:()Ljava/lang/String;
   #47 = Methodref          #5.#46        // java/lang/Object.toString:()Ljava/lang/String;
   #48 = Utf8               this
   #49 = Utf8               Lscala/collection/parallel/ParIterableLike$Span;
   #50 = Utf8               shouldSplitFurther
   #51 = Utf8               ()Z
   #52 = Utf8               shouldSplitFurther$
   #53 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #54 = NameAndType        #52:#53       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #55 = InterfaceMethodref #15.#54       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #56 = Utf8               signalAbort
   #57 = Utf8               ()V
   #58 = Utf8               signalAbort$
   #59 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #60 = NameAndType        #58:#59       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #61 = InterfaceMethodref #15.#60       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #62 = Utf8               toString$
   #63 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #64 = NameAndType        #62:#63       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #65 = InterfaceMethodref #15.#64       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #66 = Utf8               repr
   #67 = Utf8               ()Ljava/lang/Object;
   #68 = Utf8               scala/collection/parallel/Task
   #69 = Class              #68           // scala/collection/parallel/Task
   #70 = Utf8               repr$
   #71 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #72 = NameAndType        #70:#71       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #73 = InterfaceMethodref #69.#72       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #74 = Utf8               forwardThrowable
   #75 = Utf8               forwardThrowable$
   #76 = Utf8               (Lscala/collection/parallel/Task;)V
   #77 = NameAndType        #75:#76       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #78 = InterfaceMethodref #69.#77       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #79 = Utf8               tryLeaf
   #80 = Utf8               (Lscala/Option;)V
   #81 = Utf8               (Lscala/Option<Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;>;)V
   #82 = Utf8               lastres
   #83 = Utf8               tryLeaf$
   #84 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #85 = NameAndType        #83:#84       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #86 = InterfaceMethodref #69.#85       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #87 = Utf8               Lscala/Option;
   #88 = Utf8               tryMerge
   #89 = Utf8               (Ljava/lang/Object;)V
   #90 = Utf8               t
   #91 = Utf8               tryMerge$
   #92 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #93 = NameAndType        #91:#92       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #94 = InterfaceMethodref #69.#93       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #95 = Utf8               Ljava/lang/Object;
   #96 = Utf8               mergeThrowables
   #97 = Utf8               (Lscala/collection/parallel/Task<**>;)V
   #98 = Utf8               that
   #99 = Utf8               mergeThrowables$
  #100 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #101 = NameAndType        #99:#100      // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #102 = InterfaceMethodref #69.#101      // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #103 = Utf8               Lscala/collection/parallel/Task;
  #104 = Utf8               ()Ljava/lang/Throwable;
  #105 = NameAndType        #39:#40       // throwable:Ljava/lang/Throwable;
  #106 = Fieldref           #2.#105       // scala/collection/parallel/ParIterableLike$Span.throwable:Ljava/lang/Throwable;
  #107 = Utf8               throwable_$eq
  #108 = Utf8               (Ljava/lang/Throwable;)V
  #109 = Utf8               x$1
  #110 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #111 = Utf8               ()Lscala/collection/parallel/IterableSplitter<TT;>;
  #112 = NameAndType        #33:#34       // pit:Lscala/collection/parallel/IterableSplitter;
  #113 = Fieldref           #2.#112       // scala/collection/parallel/ParIterableLike$Span.pit:Lscala/collection/parallel/IterableSplitter;
  #114 = Utf8               ()Lscala/Tuple2;
  #115 = Utf8               ()Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;
  #116 = NameAndType        #36:#37       // result:Lscala/Tuple2;
  #117 = Fieldref           #2.#116       // scala/collection/parallel/ParIterableLike$Span.result:Lscala/Tuple2;
  #118 = Utf8               result_$eq
  #119 = Utf8               (Lscala/Tuple2;)V
  #120 = Utf8               (Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;)V
  #121 = Utf8               leaf
  #122 = Utf8               prev
  #123 = NameAndType        #24:#25       // pos:I
  #124 = Fieldref           #2.#123       // scala/collection/parallel/ParIterableLike$Span.pos:I
  #125 = NameAndType        #33:#110      // pit:()Lscala/collection/parallel/IterableSplitter;
  #126 = Methodref          #2.#125       // scala/collection/parallel/ParIterableLike$Span.pit:()Lscala/collection/parallel/IterableSplitter;
  #127 = Utf8               scala/collection/parallel/IterableSplitter
  #128 = Class              #127          // scala/collection/parallel/IterableSplitter
  #129 = Utf8               indexFlag
  #130 = Utf8               ()I
  #131 = NameAndType        #129:#130     // indexFlag:()I
  #132 = InterfaceMethodref #128.#131     // scala/collection/parallel/IterableSplitter.indexFlag:()I
  #133 = NameAndType        #26:#27       // pred:Lscala/Function1;
  #134 = Fieldref           #2.#133       // scala/collection/parallel/ParIterableLike$Span.pred:Lscala/Function1;
  #135 = NameAndType        #29:#30       // cbfBefore:Lscala/collection/parallel/CombinerFactory;
  #136 = Fieldref           #2.#135       // scala/collection/parallel/ParIterableLike$Span.cbfBefore:Lscala/collection/parallel/CombinerFactory;
  #137 = Utf8               scala/collection/parallel/CombinerFactory
  #138 = Class              #137          // scala/collection/parallel/CombinerFactory
  #139 = Utf8               apply
  #140 = Utf8               ()Lscala/collection/parallel/Combiner;
  #141 = NameAndType        #139:#140     // apply:()Lscala/collection/parallel/Combiner;
  #142 = InterfaceMethodref #138.#141     // scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
  #143 = NameAndType        #32:#30       // cbfAfter:Lscala/collection/parallel/CombinerFactory;
  #144 = Fieldref           #2.#143       // scala/collection/parallel/ParIterableLike$Span.cbfAfter:Lscala/collection/parallel/CombinerFactory;
  #145 = Utf8               span2combiners
  #146 = Utf8               (Lscala/Function1;Lscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
  #147 = NameAndType        #145:#146     // span2combiners:(Lscala/Function1;Lscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
  #148 = InterfaceMethodref #128.#147     // scala/collection/parallel/IterableSplitter.span2combiners:(Lscala/Function1;Lscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
  #149 = NameAndType        #118:#119     // result_$eq:(Lscala/Tuple2;)V
  #150 = Methodref          #2.#149       // scala/collection/parallel/ParIterableLike$Span.result_$eq:(Lscala/Tuple2;)V
  #151 = NameAndType        #36:#114      // result:()Lscala/Tuple2;
  #152 = Methodref          #2.#151       // scala/collection/parallel/ParIterableLike$Span.result:()Lscala/Tuple2;
  #153 = Utf8               scala/Tuple2
  #154 = Class              #153          // scala/Tuple2
  #155 = Utf8               _2
  #156 = NameAndType        #155:#67      // _2:()Ljava/lang/Object;
  #157 = Methodref          #154.#156     // scala/Tuple2._2:()Ljava/lang/Object;
  #158 = Utf8               scala/collection/generic/Sizing
  #159 = Class              #158          // scala/collection/generic/Sizing
  #160 = Utf8               size
  #161 = NameAndType        #160:#130     // size:()I
  #162 = InterfaceMethodref #159.#161     // scala/collection/generic/Sizing.size:()I
  #163 = Utf8               setIndexFlagIfLesser
  #164 = Utf8               (I)V
  #165 = NameAndType        #163:#164     // setIndexFlagIfLesser:(I)V
  #166 = InterfaceMethodref #128.#165     // scala/collection/parallel/IterableSplitter.setIndexFlagIfLesser:(I)V
  #167 = Utf8               scala$collection$parallel$ParIterableLike$Span$$$outer
  #168 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #169 = NameAndType        #167:#168     // scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #170 = Methodref          #2.#169       // scala/collection/parallel/ParIterableLike$Span.scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #171 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #172 = MethodType         #171          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #173 = Utf8               $anonfun$leaf$7
  #174 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  #175 = NameAndType        #173:#174     // $anonfun$leaf$7:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  #176 = Methodref          #2.#175       // scala/collection/parallel/ParIterableLike$Span.$anonfun$leaf$7:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  #177 = MethodHandle       6:#176        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$leaf$7:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  #178 = MethodType         #174          //  (Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  #179 = Integer            5
  #180 = Integer            1
  #181 = Utf8               java/lang/invoke/LambdaMetafactory
  #182 = Class              #181          // java/lang/invoke/LambdaMetafactory
  #183 = Utf8               altMetafactory
  #184 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #185 = NameAndType        #183:#184     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #186 = Methodref          #182.#185     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #187 = MethodHandle       6:#186        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #188 = Utf8               ()Lscala/Function1;
  #189 = NameAndType        #139:#188     // apply:()Lscala/Function1;
  #190 = InvokeDynamic      #0:#189       // #0:apply:()Lscala/Function1;
  #191 = Utf8               scala/Option
  #192 = Class              #191          // scala/Option
  #193 = Utf8               map
  #194 = Utf8               (Lscala/Function1;)Lscala/Option;
  #195 = NameAndType        #193:#194     // map:(Lscala/Function1;)Lscala/Option;
  #196 = Methodref          #192.#195     // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #197 = Utf8               reuse
  #198 = Utf8               (Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #199 = NameAndType        #197:#198     // reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #200 = InterfaceMethodref #17.#199      // scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #201 = Utf8               $anonfun$leaf$8
  #202 = NameAndType        #201:#174     // $anonfun$leaf$8:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  #203 = Methodref          #2.#202       // scala/collection/parallel/ParIterableLike$Span.$anonfun$leaf$8:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  #204 = MethodHandle       6:#203        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$leaf$8:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  #205 = InvokeDynamic      #1:#189       // #1:apply:()Lscala/Function1;
  #206 = Utf8               copy2builder
  #207 = Utf8               (Lscala/collection/mutable/Builder;)Lscala/collection/mutable/Builder;
  #208 = NameAndType        #206:#207     // copy2builder:(Lscala/collection/mutable/Builder;)Lscala/collection/mutable/Builder;
  #209 = InterfaceMethodref #128.#208     // scala/collection/parallel/IterableSplitter.copy2builder:(Lscala/collection/mutable/Builder;)Lscala/collection/mutable/Builder;
  #210 = Utf8               <init>
  #211 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #212 = NameAndType        #210:#211     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #213 = Methodref          #154.#212     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #214 = Utf8               newSubtask
  #215 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #216 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #217 = Utf8               p
  #218 = Utf8               java/lang/UnsupportedOperationException
  #219 = Class              #218          // java/lang/UnsupportedOperationException
  #220 = NameAndType        #210:#57      // "<init>":()V
  #221 = Methodref          #219.#220     // java/lang/UnsupportedOperationException."<init>":()V
  #222 = Utf8               split
  #223 = Utf8               ()Lscala/collection/immutable/Seq;
  #224 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Span<TU;TThis;>;>;>;
  #225 = Utf8               splitWithSignalling
  #226 = NameAndType        #225:#223     // splitWithSignalling:()Lscala/collection/immutable/Seq;
  #227 = InterfaceMethodref #128.#226     // scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
  #228 = Utf8               scala/runtime/BoxesRunTime
  #229 = Class              #228          // scala/runtime/BoxesRunTime
  #230 = Utf8               boxToInteger
  #231 = Utf8               (I)Ljava/lang/Integer;
  #232 = NameAndType        #230:#231     // boxToInteger:(I)Ljava/lang/Integer;
  #233 = Methodref          #229.#232     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #234 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #235 = MethodType         #234          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #236 = Utf8               $anonfun$split$20$adapted
  #237 = Utf8               (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #238 = NameAndType        #236:#237     // $anonfun$split$20$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #239 = Methodref          #2.#238       // scala/collection/parallel/ParIterableLike$Span.$anonfun$split$20$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #240 = MethodHandle       6:#239        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$split$20$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #241 = MethodType         #237          //  (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #242 = Utf8               ()Lscala/Function2;
  #243 = NameAndType        #139:#242     // apply:()Lscala/Function2;
  #244 = InvokeDynamic      #2:#243       // #2:apply:()Lscala/Function2;
  #245 = Utf8               scala/collection/immutable/Seq
  #246 = Class              #245          // scala/collection/immutable/Seq
  #247 = Utf8               scanLeft
  #248 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #249 = NameAndType        #247:#248     // scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #250 = InterfaceMethodref #246.#249     // scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #251 = Utf8               scala/collection/IterableOnce
  #252 = Class              #251          // scala/collection/IterableOnce
  #253 = Utf8               zip
  #254 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #255 = NameAndType        #253:#254     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #256 = InterfaceMethodref #246.#255     // scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #257 = Utf8               scala/collection/IterableOps
  #258 = Class              #257          // scala/collection/IterableOps
  #259 = Utf8               $anonfun$split$21$adapted
  #260 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #261 = NameAndType        #259:#260     // $anonfun$split$21$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #262 = Methodref          #2.#261       // scala/collection/parallel/ParIterableLike$Span.$anonfun$split$21$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #263 = MethodHandle       6:#262        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$split$21$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #264 = MethodType         #260          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #265 = InvokeDynamic      #3:#189       // #3:apply:()Lscala/Function1;
  #266 = Utf8               withFilter
  #267 = Utf8               (Lscala/Function1;)Lscala/collection/WithFilter;
  #268 = NameAndType        #266:#267     // withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #269 = InterfaceMethodref #258.#268     // scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #270 = Utf8               $anonfun$split$22
  #271 = Utf8               (Lscala/collection/parallel/ParIterableLike$Span;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #272 = NameAndType        #270:#271     // $anonfun$split$22:(Lscala/collection/parallel/ParIterableLike$Span;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #273 = Methodref          #2.#272       // scala/collection/parallel/ParIterableLike$Span.$anonfun$split$22:(Lscala/collection/parallel/ParIterableLike$Span;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #274 = MethodHandle       6:#273        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$split$22:(Lscala/collection/parallel/ParIterableLike$Span;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #275 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #276 = MethodType         #275          //  (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #277 = Utf8               (Lscala/collection/parallel/ParIterableLike$Span;)Lscala/Function1;
  #278 = NameAndType        #139:#277     // apply:(Lscala/collection/parallel/ParIterableLike$Span;)Lscala/Function1;
  #279 = InvokeDynamic      #4:#278       // #4:apply:(Lscala/collection/parallel/ParIterableLike$Span;)Lscala/Function1;
  #280 = Utf8               scala/collection/WithFilter
  #281 = Class              #280          // scala/collection/WithFilter
  #282 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #283 = NameAndType        #193:#282     // map:(Lscala/Function1;)Ljava/lang/Object;
  #284 = Methodref          #281.#283     // scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
  #285 = Utf8               pits
  #286 = Utf8               Lscala/collection/immutable/Seq;
  #287 = Utf8               merge
  #288 = Utf8               (Lscala/collection/parallel/ParIterableLike$Span;)V
  #289 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Span<TU;TThis;>;)V
  #290 = Utf8               _1
  #291 = NameAndType        #290:#67      // _1:()Ljava/lang/Object;
  #292 = Methodref          #154.#291     // scala/Tuple2._1:()Ljava/lang/Object;
  #293 = Utf8               scala/collection/parallel/Combiner
  #294 = Class              #293          // scala/collection/parallel/Combiner
  #295 = Utf8               combine
  #296 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #297 = NameAndType        #295:#296     // combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #298 = InterfaceMethodref #294.#297     // scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #299 = Utf8               requiresStrictSplitters
  #300 = NameAndType        #41:#42       // $outer:Lscala/collection/parallel/ParIterableLike;
  #301 = Fieldref           #2.#300       // scala/collection/parallel/ParIterableLike$Span.$outer:Lscala/collection/parallel/ParIterableLike;
  #302 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #303 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #304 = NameAndType        #287:#288     // merge:(Lscala/collection/parallel/ParIterableLike$Span;)V
  #305 = Methodref          #2.#304       // scala/collection/parallel/ParIterableLike$Span.merge:(Lscala/collection/parallel/ParIterableLike$Span;)V
  #306 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #307 = NameAndType        #214:#215     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #308 = Methodref          #2.#307       // scala/collection/parallel/ParIterableLike$Span.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #309 = Utf8               x$31
  #310 = Utf8               x$32
  #311 = Utf8               $anonfun$split$20
  #312 = Utf8               (ILscala/collection/parallel/IterableSplitter;)I
  #313 = Utf8               x$33
  #314 = Utf8               x$34
  #315 = Utf8               remaining
  #316 = NameAndType        #315:#130     // remaining:()I
  #317 = InterfaceMethodref #128.#316     // scala/collection/parallel/IterableSplitter.remaining:()I
  #318 = Utf8               $anonfun$split$21
  #319 = Utf8               (Lscala/Tuple2;)Z
  #320 = Utf8               check$ifrefutable$6
  #321 = Utf8               $this
  #322 = Utf8               x$35
  #323 = Utf8               _2$mcI$sp
  #324 = NameAndType        #323:#130     // _2$mcI$sp:()I
  #325 = Methodref          #154.#324     // scala/Tuple2._2$mcI$sp:()I
  #326 = Utf8               (Lscala/collection/parallel/ParIterableLike;ILscala/Function1;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
  #327 = NameAndType        #210:#326     // "<init>":(Lscala/collection/parallel/ParIterableLike;ILscala/Function1;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
  #328 = Methodref          #2.#327       // scala/collection/parallel/ParIterableLike$Span."<init>":(Lscala/collection/parallel/ParIterableLike;ILscala/Function1;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
  #329 = Utf8               scala/MatchError
  #330 = Class              #329          // scala/MatchError
  #331 = NameAndType        #210:#89      // "<init>":(Ljava/lang/Object;)V
  #332 = Methodref          #330.#331     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #333 = Utf8               untilp
  #334 = Utf8               (ILscala/Function1<TT;Ljava/lang/Object;>;Lscala/collection/parallel/CombinerFactory<TU;TThis;>;Lscala/collection/parallel/CombinerFactory<TU;TThis;>;Lscala/collection/parallel/IterableSplitter<TT;>;)V
  #335 = Methodref          #5.#220       // java/lang/Object."<init>":()V
  #336 = Utf8               $init$
  #337 = NameAndType        #336:#76      // $init$:(Lscala/collection/parallel/Task;)V
  #338 = InterfaceMethodref #69.#337      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #339 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #340 = NameAndType        #336:#339     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #341 = InterfaceMethodref #21.#340      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #342 = NameAndType        #336:#59      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #343 = InterfaceMethodref #15.#342      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #344 = Utf8               unboxToInt
  #345 = Utf8               (Ljava/lang/Object;)I
  #346 = NameAndType        #344:#345     // unboxToInt:(Ljava/lang/Object;)I
  #347 = Methodref          #229.#346     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #348 = NameAndType        #311:#312     // $anonfun$split$20:(ILscala/collection/parallel/IterableSplitter;)I
  #349 = Methodref          #2.#348       // scala/collection/parallel/ParIterableLike$Span.$anonfun$split$20:(ILscala/collection/parallel/IterableSplitter;)I
  #350 = NameAndType        #318:#319     // $anonfun$split$21:(Lscala/Tuple2;)Z
  #351 = Methodref          #2.#350       // scala/collection/parallel/ParIterableLike$Span.$anonfun$split$21:(Lscala/Tuple2;)Z
  #352 = Utf8               boxToBoolean
  #353 = Utf8               (Z)Ljava/lang/Boolean;
  #354 = NameAndType        #352:#353     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #355 = Methodref          #229.#354     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #356 = Utf8               $deserializeLambda$
  #357 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #358 = Utf8               scala/runtime/LambdaDeserialize
  #359 = Class              #358          // scala/runtime/LambdaDeserialize
  #360 = Utf8               bootstrap
  #361 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #362 = NameAndType        #360:#361     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #363 = Methodref          #359.#362     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #364 = MethodHandle       6:#363        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #365 = Utf8               lambdaDeserialize
  #366 = NameAndType        #365:#357     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #367 = InvokeDynamic      #5:#366       // #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #368 = Utf8               Signature
  #369 = Utf8               Code
  #370 = Utf8               LineNumberTable
  #371 = Utf8               LocalVariableTable
  #372 = Utf8               MethodParameters
  #373 = Utf8               StackMapTable
  #374 = Utf8               InnerClasses
  #375 = Utf8               SourceFile
  #376 = Utf8               BootstrapMethods
  #377 = Utf8               ScalaInlineInfo
  #378 = Utf8               Scala
{
  private final int pos;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Function1<T, java.lang.Object> pred;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #28                          // Lscala/Function1<TT;Ljava/lang/Object;>;

  private final scala.collection.parallel.CombinerFactory<U, This> cbfBefore;
    descriptor: Lscala/collection/parallel/CombinerFactory;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #31                          // Lscala/collection/parallel/CombinerFactory<TU;TThis;>;

  private final scala.collection.parallel.CombinerFactory<U, This> cbfAfter;
    descriptor: Lscala/collection/parallel/CombinerFactory;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #31                          // Lscala/collection/parallel/CombinerFactory<TU;TThis;>;

  private final scala.collection.parallel.IterableSplitter<T> pit;
    descriptor: Lscala/collection/parallel/IterableSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #35                          // Lscala/collection/parallel/IterableSplitter<TT;>;

  private volatile scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> result;
    descriptor: Lscala/Tuple2;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #38                          // Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParIterableLike $outer;
    descriptor: Lscala/collection/parallel/ParIterableLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #47                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #55                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #65                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #73                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #78                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public void tryLeaf(scala.Option<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #86                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0       6     1 lastres   Lscala/Option;
    Signature: #81                          // (Lscala/Option<Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #94                 // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #102                // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #97                          // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #106                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.IterableSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #113                // Field pit:Lscala/collection/parallel/IterableSplitter;
         4: areturn
      LineNumberTable:
        line 1223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;
    Signature: #111                         // ()Lscala/collection/parallel/IterableSplitter<TT;>;

  public scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>> result();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #117                // Field result:Lscala/Tuple2;
         4: areturn
      LineNumberTable:
        line 1225: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;
    Signature: #115                         // ()Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;

  public void result_$eq(scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>);
    descriptor: (Lscala/Tuple2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #117                // Field result:Lscala/Tuple2;
         5: return
      LineNumberTable:
        line 1225: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0       6     1   x$1   Lscala/Tuple2;
    Signature: #120                         // (Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: aload_0
         1: getfield      #124                // Field pos:I
         4: aload_0
         5: invokevirtual #126                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         8: invokeinterface #132,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.indexFlag:()I
        13: if_icmpge     89
        16: aload_0
        17: aload_0
        18: invokevirtual #126                // Method pit:()Lscala/collection/parallel/IterableSplitter;
        21: aload_0
        22: getfield      #134                // Field pred:Lscala/Function1;
        25: aload_0
        26: getfield      #136                // Field cbfBefore:Lscala/collection/parallel/CombinerFactory;
        29: invokeinterface #142,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
        34: aload_0
        35: getfield      #144                // Field cbfAfter:Lscala/collection/parallel/CombinerFactory;
        38: invokeinterface #142,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
        43: invokeinterface #148,  4          // InterfaceMethod scala/collection/parallel/IterableSplitter.span2combiners:(Lscala/Function1;Lscala/collection/parallel/Combiner;Lscala/collection/parallel/Combiner;)Lscala/Tuple2;
        48: invokevirtual #150                // Method result_$eq:(Lscala/Tuple2;)V
        51: aload_0
        52: invokevirtual #152                // Method result:()Lscala/Tuple2;
        55: invokevirtual #157                // Method scala/Tuple2._2:()Ljava/lang/Object;
        58: checkcast     #159                // class scala/collection/generic/Sizing
        61: invokeinterface #162,  1          // InterfaceMethod scala/collection/generic/Sizing.size:()I
        66: iconst_0
        67: if_icmple     86
        70: aload_0
        71: invokevirtual #126                // Method pit:()Lscala/collection/parallel/IterableSplitter;
        74: aload_0
        75: getfield      #124                // Field pos:I
        78: invokeinterface #166,  2          // InterfaceMethod scala/collection/parallel/IterableSplitter.setIndexFlagIfLesser:(I)V
        83: goto          86
        86: goto          163
        89: aload_0
        90: new           #154                // class scala/Tuple2
        93: dup
        94: aload_0
        95: invokevirtual #170                // Method scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
        98: aload_1
        99: invokedynamic #190,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       104: invokevirtual #196                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       107: aload_0
       108: getfield      #136                // Field cbfBefore:Lscala/collection/parallel/CombinerFactory;
       111: invokeinterface #142,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
       116: invokeinterface #200,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       121: aload_0
       122: invokevirtual #126                // Method pit:()Lscala/collection/parallel/IterableSplitter;
       125: aload_0
       126: invokevirtual #170                // Method scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
       129: aload_1
       130: invokedynamic #205,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
       135: invokevirtual #196                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       138: aload_0
       139: getfield      #144                // Field cbfAfter:Lscala/collection/parallel/CombinerFactory;
       142: invokeinterface #142,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
       147: invokeinterface #200,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       152: invokeinterface #209,  2          // InterfaceMethod scala/collection/parallel/IterableSplitter.copy2builder:(Lscala/collection/mutable/Builder;)Lscala/collection/mutable/Builder;
       157: invokespecial #213                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       160: invokevirtual #150                // Method result_$eq:(Lscala/Tuple2;)V
       163: return
      StackMapTable: number_of_entries = 3
        frame_type = 251 /* same_frame_extended */
          offset_delta = 86
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 73
      LineNumberTable:
        line 1226: 0
        line 1230: 16
        line 1232: 51
        line 1234: 89
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     164     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0     164     1  prev   Lscala/Option;
    Signature: #81                          // (Lscala/Option<Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #219                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #221                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 1236: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0       8     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #216                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<scala.Tuple2<scala.collection.parallel.Combiner<U, This>, scala.collection.parallel.Combiner<U, This>>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Span<U, This>>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #126                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         4: invokeinterface #227,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
         9: astore_1
        10: aload_1
        11: aload_1
        12: iconst_0
        13: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        16: invokedynamic #244,  0            // InvokeDynamic #2:apply:()Lscala/Function2;
        21: invokeinterface #250,  3          // InterfaceMethod scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        26: checkcast     #252                // class scala/collection/IterableOnce
        29: invokeinterface #256,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        34: checkcast     #258                // class scala/collection/IterableOps
        37: invokedynamic #265,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        42: invokeinterface #269,  2          // InterfaceMethod scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        47: aload_0
        48: invokedynamic #279,  0            // InvokeDynamic #4:apply:(Lscala/collection/parallel/ParIterableLike$Span;)Lscala/Function1;
        53: invokevirtual #284                // Method scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
        56: checkcast     #246                // class scala/collection/immutable/Seq
        59: areturn
      LineNumberTable:
        line 1238: 0
        line 1239: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      49     1  pits   Lscala/collection/immutable/Seq;
            0      60     0  this   Lscala/collection/parallel/ParIterableLike$Span;
    Signature: #224                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Span<TU;TThis;>;>;>;

  public void merge(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Span<U, This>);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Span;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #152                // Method result:()Lscala/Tuple2;
         5: invokevirtual #157                // Method scala/Tuple2._2:()Ljava/lang/Object;
         8: checkcast     #159                // class scala/collection/generic/Sizing
        11: invokeinterface #162,  1          // InterfaceMethod scala/collection/generic/Sizing.size:()I
        16: iconst_0
        17: if_icmpne     62
        20: new           #154                // class scala/Tuple2
        23: dup
        24: aload_0
        25: invokevirtual #152                // Method result:()Lscala/Tuple2;
        28: invokevirtual #292                // Method scala/Tuple2._1:()Ljava/lang/Object;
        31: checkcast     #294                // class scala/collection/parallel/Combiner
        34: aload_1
        35: invokevirtual #152                // Method result:()Lscala/Tuple2;
        38: invokevirtual #292                // Method scala/Tuple2._1:()Ljava/lang/Object;
        41: checkcast     #294                // class scala/collection/parallel/Combiner
        44: invokeinterface #298,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        49: aload_1
        50: invokevirtual #152                // Method result:()Lscala/Tuple2;
        53: invokevirtual #157                // Method scala/Tuple2._2:()Ljava/lang/Object;
        56: invokespecial #213                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        59: goto          116
        62: new           #154                // class scala/Tuple2
        65: dup
        66: aload_0
        67: invokevirtual #152                // Method result:()Lscala/Tuple2;
        70: invokevirtual #292                // Method scala/Tuple2._1:()Ljava/lang/Object;
        73: aload_0
        74: invokevirtual #152                // Method result:()Lscala/Tuple2;
        77: invokevirtual #157                // Method scala/Tuple2._2:()Ljava/lang/Object;
        80: checkcast     #294                // class scala/collection/parallel/Combiner
        83: aload_1
        84: invokevirtual #152                // Method result:()Lscala/Tuple2;
        87: invokevirtual #292                // Method scala/Tuple2._1:()Ljava/lang/Object;
        90: checkcast     #294                // class scala/collection/parallel/Combiner
        93: invokeinterface #298,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        98: aload_1
        99: invokevirtual #152                // Method result:()Lscala/Tuple2;
       102: invokevirtual #157                // Method scala/Tuple2._2:()Ljava/lang/Object;
       105: checkcast     #294                // class scala/collection/parallel/Combiner
       108: invokeinterface #298,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       113: invokespecial #213                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       116: invokevirtual #150                // Method result_$eq:(Lscala/Tuple2;)V
       119: return
      StackMapTable: number_of_entries = 2
        frame_type = 126 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/ParIterableLike$Span ]
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class scala/collection/parallel/ParIterableLike$Span, class scala/collection/parallel/ParIterableLike$Span ]
          stack = [ class scala/collection/parallel/ParIterableLike$Span, class scala/Tuple2 ]
      LineNumberTable:
        line 1241: 0
        line 1242: 20
        line 1244: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     120     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0     120     1  that   Lscala/collection/parallel/ParIterableLike$Span;
    Signature: #289                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Span<TU;TThis;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 1246: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Span$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #301                // Field $outer:Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #170                // Method scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #170                // Method scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$Span
         5: invokevirtual #305                // Method merge:(Lscala/collection/parallel/ParIterableLike$Span;)V
         8: return
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #308                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #154                // class scala/Tuple2
         5: invokevirtual #150                // Method result_$eq:(Lscala/Tuple2;)V
         8: return
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #152                // Method result:()Lscala/Tuple2;
         4: areturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Span;

  public static final scala.collection.parallel.Combiner $anonfun$leaf$7(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #157                // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: checkcast     #294                // class scala/collection/parallel/Combiner
         7: areturn
      LineNumberTable:
        line 1234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$31   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$31                           final

  public static final scala.collection.parallel.Combiner $anonfun$leaf$8(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #157                // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: checkcast     #294                // class scala/collection/parallel/Combiner
         7: areturn
      LineNumberTable:
        line 1234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$32   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$32                           final

  public static final int $anonfun$split$20(int, scala.collection.parallel.IterableSplitter);
    descriptor: (ILscala/collection/parallel/IterableSplitter;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: aload_1
         2: invokeinterface #317,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
         7: iadd
         8: ireturn
      LineNumberTable:
        line 1239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$33   I
            0       9     1  x$34   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$33                           final
      x$34                           final

  public static final boolean $anonfun$split$21(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 1239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$6   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$6            final

  public static final scala.collection.parallel.ParIterableLike$Accessor $anonfun$split$22(scala.collection.parallel.ParIterableLike$Span, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Span;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=8, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        57
         6: aload_3
         7: invokevirtual #292                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #128                // class scala/collection/parallel/IterableSplitter
        13: astore        4
        15: aload_3
        16: invokevirtual #325                // Method scala/Tuple2._2$mcI$sp:()I
        19: istore        5
        21: new           #2                  // class scala/collection/parallel/ParIterableLike$Span
        24: dup
        25: aload_0
        26: invokevirtual #170                // Method scala$collection$parallel$ParIterableLike$Span$$$outer:()Lscala/collection/parallel/ParIterableLike;
        29: aload_0
        30: getfield      #124                // Field pos:I
        33: iload         5
        35: iadd
        36: aload_0
        37: getfield      #134                // Field pred:Lscala/Function1;
        40: aload_0
        41: getfield      #136                // Field cbfBefore:Lscala/collection/parallel/CombinerFactory;
        44: aload_0
        45: getfield      #144                // Field cbfAfter:Lscala/collection/parallel/CombinerFactory;
        48: aload         4
        50: invokespecial #328                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;ILscala/Function1;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
        53: astore_2
        54: goto          69
        57: goto          60
        60: new           #330                // class scala/MatchError
        63: dup
        64: aload_3
        65: invokespecial #332                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        68: athrow
        69: aload_2
        70: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 57
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParIterableLike$Span, class scala/Tuple2, class scala/collection/parallel/ParIterableLike$Span, class scala/Tuple2, class scala/collection/parallel/IterableSplitter, int ]
          stack = []
      LineNumberTable:
        line 1239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      42     4     p   Lscala/collection/parallel/IterableSplitter;
           21      36     5 untilp   I
            0      71     0 $this   Lscala/collection/parallel/ParIterableLike$Span;
            0      71     1  x$35   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$35                           final

  public scala.collection.parallel.ParIterableLike$Span(int, scala.Function1<T, java.lang.Object>, scala.collection.parallel.CombinerFactory<U, This>, scala.collection.parallel.CombinerFactory<U, This>, scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/ParIterableLike;ILscala/Function1;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=7
         0: aload_0
         1: iload_2
         2: putfield      #124                // Field pos:I
         5: aload_0
         6: aload_3
         7: putfield      #134                // Field pred:Lscala/Function1;
        10: aload_0
        11: aload         4
        13: putfield      #136                // Field cbfBefore:Lscala/collection/parallel/CombinerFactory;
        16: aload_0
        17: aload         5
        19: putfield      #144                // Field cbfAfter:Lscala/collection/parallel/CombinerFactory;
        22: aload_0
        23: aload         6
        25: putfield      #113                // Field pit:Lscala/collection/parallel/IterableSplitter;
        28: aload_1
        29: ifnonnull     34
        32: aconst_null
        33: athrow
        34: aload_0
        35: aload_1
        36: putfield      #301                // Field $outer:Lscala/collection/parallel/ParIterableLike;
        39: aload_0
        40: invokespecial #335                // Method java/lang/Object."<init>":()V
        43: aload_0
        44: invokestatic  #338                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        47: aload_0
        48: invokestatic  #341                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        51: aload_0
        52: invokestatic  #343                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        55: aload_0
        56: aconst_null
        57: putfield      #117                // Field result:Lscala/Tuple2;
        60: return
      StackMapTable: number_of_entries = 1
        frame_type = 34 /* same */
      LineNumberTable:
        line 1223: 0
        line 1222: 28
        line 1224: 39
        line 1225: 55
        line 1223: 60
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0  this   Lscala/collection/parallel/ParIterableLike$Span;
            0      61     1 $outer   Lscala/collection/parallel/ParIterableLike;
            0      61     2   pos   I
            0      61     3  pred   Lscala/Function1;
            0      61     4 cbfBefore   Lscala/collection/parallel/CombinerFactory;
            0      61     5 cbfAfter   Lscala/collection/parallel/CombinerFactory;
            0      61     6   pit   Lscala/collection/parallel/IterableSplitter;
    Signature: #334                         // (ILscala/Function1<TT;Ljava/lang/Object;>;Lscala/collection/parallel/CombinerFactory<TU;TThis;>;Lscala/collection/parallel/CombinerFactory<TU;TThis;>;Lscala/collection/parallel/IterableSplitter<TT;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      pos                            final
      pred                           final
      cbfBefore                      final
      cbfAfter                       final
      pit                            final

  public static final java.lang.Object $anonfun$split$20$adapted(java.lang.Object, scala.collection.parallel.IterableSplitter);
    descriptor: (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokestatic  #347                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: aload_1
         5: invokestatic  #349                // Method $anonfun$split$20:(ILscala/collection/parallel/IterableSplitter;)I
         8: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 1239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  x$33   Ljava/lang/Object;
            0      12     1  x$34   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$33                           final
      x$34                           final

  public static final java.lang.Object $anonfun$split$21$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #351                // Method $anonfun$split$21:(Lscala/Tuple2;)Z
         4: invokestatic  #355                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 1239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$6   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$6            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #367,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #15 of #17;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #19= #2 of #17;                  // Span=class scala/collection/parallel/ParIterableLike$Span of class scala/collection/parallel/ParIterableLike
  public #22= #21 of #17;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #23= #7 of #17;                  // Transformer=class scala/collection/parallel/ParIterableLike$Transformer of class scala/collection/parallel/ParIterableLike
Signature: #3                           // <U:Ljava/lang/Object;This:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/Tuple2<Lscala/collection/parallel/Combiner<TU;TThis;>;Lscala/collection/parallel/Combiner<TU;TThis;>;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Span<TU;TThis;>;>;
SourceFile: "ParIterableLike.scala"
BootstrapMethods:
  0: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #172 (Ljava/lang/Object;)Ljava/lang/Object;
      #177 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$leaf$7:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
      #178 (Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
      #179 5
      #180 1
      #178 (Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  1: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #172 (Ljava/lang/Object;)Ljava/lang/Object;
      #204 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$leaf$8:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
      #178 (Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
      #179 5
      #180 1
      #178 (Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
  2: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #235 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #240 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$split$20$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #241 (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #179 5
      #180 1
      #241 (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  3: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #172 (Ljava/lang/Object;)Ljava/lang/Object;
      #263 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$split$21$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #264 (Lscala/Tuple2;)Ljava/lang/Object;
      #179 5
      #180 1
      #264 (Lscala/Tuple2;)Ljava/lang/Object;
  4: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #172 (Ljava/lang/Object;)Ljava/lang/Object;
      #274 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$split$22:(Lscala/collection/parallel/ParIterableLike$Span;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #276 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #179 5
      #180 1
      #276 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  5: #364 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #177 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$leaf$7:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
      #204 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$leaf$8:(Lscala/Tuple2;)Lscala/collection/parallel/Combiner;
      #240 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$split$20$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #263 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$split$21$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #274 REF_invokeStatic scala/collection/parallel/ParIterableLike$Span.$anonfun$split$22:(Lscala/collection/parallel/ParIterableLike$Span;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  ScalaInlineInfo: length = 0xAE (unknown attribute)
   01 00 00 22 00 AD 00 AE 01 00 C9 00 AE 01 01 37
   01 38 01 00 EC 00 ED 01 01 3E 01 3F 01 01 03 01
   04 01 01 0E 01 0F 01 00 D2 01 46 00 00 4A 00 39
   00 00 79 00 50 00 01 1F 00 59 00 01 1F 01 20 00
   00 60 00 4C 00 00 D6 01 32 00 00 D6 00 D7 00 00
   21 00 6E 00 00 42 00 43 00 01 2B 00 33 00 00 24
   00 43 00 00 24 00 72 00 00 76 00 59 00 00 76 00
   77 00 01 2E 00 A8 00 00 2B 00 2C 01 00 A7 00 A8
   00 01 2F 00 A8 00 00 32 00 33 00 00 38 00 39 00
   00 DE 00 DF 00 00 27 00 68 00 00 6B 00 6C 00 00
   2D 00 2C 00 00 4F 00 50 00 00 58 00 59 00
  Scala: length = 0x0 (unknown attribute)

