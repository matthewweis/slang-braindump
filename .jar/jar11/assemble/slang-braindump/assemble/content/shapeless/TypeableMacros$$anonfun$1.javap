Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/TypeableMacros$$anonfun$1.class
  Last modified May 29, 2022; size 3146 bytes
  SHA-256 checksum 32a1b2134bdecac6bb115e2384899aa9fb6b1d2cf5550061d6e09652fcf1443c
  Compiled from "typeable.scala"
public final class shapeless.TypeableMacros$$anonfun$1 extends scala.runtime.AbstractPartialFunction<scala.reflect.api.Symbols$SymbolApi, scala.reflect.api.Types$TypeApi> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // shapeless/TypeableMacros$$anonfun$1
  super_class: #5                         // scala/runtime/AbstractPartialFunction
  interfaces: 1, fields: 3, methods: 5, attributes: 6
Constant pool:
    #1 = Utf8               shapeless/TypeableMacros$$anonfun$1
    #2 = Class              #1            // shapeless/TypeableMacros$$anonfun$1
    #3 = Utf8               Lscala/runtime/AbstractPartialFunction<Lscala/reflect/api/Symbols$SymbolApi;Lscala/reflect/api/Types$TypeApi;>;Ljava/io/Serializable;
    #4 = Utf8               scala/runtime/AbstractPartialFunction
    #5 = Class              #4            // scala/runtime/AbstractPartialFunction
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               typeable.scala
    #9 = Utf8               shapeless/TypeableMacros
   #10 = Class              #9            // shapeless/TypeableMacros
   #11 = Utf8               mkCaseClassTypeable
   #12 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
   #13 = NameAndType        #11:#12       // mkCaseClassTypeable:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
   #14 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #15 = Class              #14           // scala/reflect/api/Symbols$SymbolApi
   #16 = Utf8               scala/reflect/api/Symbols
   #17 = Class              #16           // scala/reflect/api/Symbols
   #18 = Utf8               SymbolApi
   #19 = Utf8               scala/reflect/api/Symbols$TermSymbolApi
   #20 = Class              #19           // scala/reflect/api/Symbols$TermSymbolApi
   #21 = Utf8               TermSymbolApi
   #22 = Utf8               scala/reflect/api/Types$TypeApi
   #23 = Class              #22           // scala/reflect/api/Types$TypeApi
   #24 = Utf8               scala/reflect/api/Types
   #25 = Class              #24           // scala/reflect/api/Types
   #26 = Utf8               TypeApi
   #27 = Utf8               serialVersionUID
   #28 = Utf8               J
   #29 = Long               0l
   #31 = Utf8               $outer
   #32 = Utf8               Lshapeless/TypeableMacros;
   #33 = Utf8               tpe$2
   #34 = Utf8               Lscala/reflect/api/Types$TypeApi;
   #35 = Utf8               applyOrElse
   #36 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
   #37 = Utf8               <A1:Lscala/reflect/api/Symbols$SymbolApi;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
   #38 = Utf8               x1
   #39 = Utf8               default
   #40 = NameAndType        #31:#32       // $outer:Lshapeless/TypeableMacros;
   #41 = Fieldref           #2.#40        // shapeless/TypeableMacros$$anonfun$1.$outer:Lshapeless/TypeableMacros;
   #42 = Utf8               c
   #43 = Utf8               ()Lscala/reflect/macros/blackbox/Context;
   #44 = NameAndType        #42:#43       // c:()Lscala/reflect/macros/blackbox/Context;
   #45 = Methodref          #10.#44       // shapeless/TypeableMacros.c:()Lscala/reflect/macros/blackbox/Context;
   #46 = Utf8               scala/reflect/macros/blackbox/Context
   #47 = Class              #46           // scala/reflect/macros/blackbox/Context
   #48 = Utf8               universe
   #49 = Utf8               ()Lscala/reflect/macros/Universe;
   #50 = NameAndType        #48:#49       // universe:()Lscala/reflect/macros/Universe;
   #51 = InterfaceMethodref #47.#50       // scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
   #52 = Utf8               scala/reflect/macros/Universe
   #53 = Class              #52           // scala/reflect/macros/Universe
   #54 = Utf8               TermSymbolTag
   #55 = Utf8               ()Lscala/reflect/ClassTag;
   #56 = NameAndType        #54:#55       // TermSymbolTag:()Lscala/reflect/ClassTag;
   #57 = Methodref          #53.#56       // scala/reflect/macros/Universe.TermSymbolTag:()Lscala/reflect/ClassTag;
   #58 = Utf8               scala/reflect/ClassTag
   #59 = Class              #58           // scala/reflect/ClassTag
   #60 = Utf8               unapply
   #61 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #62 = NameAndType        #60:#61       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #63 = InterfaceMethodref #59.#62       // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
   #64 = Utf8               scala/Option
   #65 = Class              #64           // scala/Option
   #66 = Utf8               isEmpty
   #67 = Utf8               ()Z
   #68 = NameAndType        #66:#67       // isEmpty:()Z
   #69 = Methodref          #65.#68       // scala/Option.isEmpty:()Z
   #70 = Utf8               get
   #71 = Utf8               ()Ljava/lang/Object;
   #72 = NameAndType        #70:#71       // get:()Ljava/lang/Object;
   #73 = Methodref          #65.#72       // scala/Option.get:()Ljava/lang/Object;
   #74 = Utf8               isVal
   #75 = NameAndType        #74:#67       // isVal:()Z
   #76 = InterfaceMethodref #20.#75       // scala/reflect/api/Symbols$TermSymbolApi.isVal:()Z
   #77 = Utf8               isCaseAccessor
   #78 = NameAndType        #77:#67       // isCaseAccessor:()Z
   #79 = InterfaceMethodref #20.#78       // scala/reflect/api/Symbols$TermSymbolApi.isCaseAccessor:()Z
   #80 = NameAndType        #33:#34       // tpe$2:Lscala/reflect/api/Types$TypeApi;
   #81 = Fieldref           #2.#80        // shapeless/TypeableMacros$$anonfun$1.tpe$2:Lscala/reflect/api/Types$TypeApi;
   #82 = Utf8               typeSignatureIn
   #83 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
   #84 = NameAndType        #82:#83       // typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
   #85 = InterfaceMethodref #15.#84       // scala/reflect/api/Symbols$SymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
   #86 = Utf8               scala/Function1
   #87 = Class              #86           // scala/Function1
   #88 = Utf8               apply
   #89 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #90 = NameAndType        #88:#89       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #91 = InterfaceMethodref #87.#90       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #92 = Utf8               this
   #93 = Utf8               Lshapeless/TypeableMacros$$anonfun$1;
   #94 = Utf8               Lscala/reflect/api/Symbols$SymbolApi;
   #95 = Utf8               Lscala/Function1;
   #96 = Utf8               java/lang/Object
   #97 = Class              #96           // java/lang/Object
   #98 = Utf8               isDefinedAt
   #99 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Z
  #100 = Utf8               (Ljava/lang/Object;)Z
  #101 = Utf8               x
  #102 = NameAndType        #98:#99       // isDefinedAt:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #103 = Methodref          #2.#102       // shapeless/TypeableMacros$$anonfun$1.isDefinedAt:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #104 = Utf8               Ljava/lang/Object;
  #105 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #106 = NameAndType        #35:#36       // applyOrElse:(Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
  #107 = Methodref          #2.#106       // shapeless/TypeableMacros$$anonfun$1.applyOrElse:(Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
  #108 = Utf8               <init>
  #109 = Utf8               (Lshapeless/TypeableMacros;Lscala/reflect/api/Types$TypeApi;)V
  #110 = Utf8               ()V
  #111 = NameAndType        #108:#110     // "<init>":()V
  #112 = Methodref          #5.#111       // scala/runtime/AbstractPartialFunction."<init>":()V
  #113 = Utf8               ConstantValue
  #114 = Utf8               Code
  #115 = Utf8               StackMapTable
  #116 = Utf8               LineNumberTable
  #117 = Utf8               LocalVariableTable
  #118 = Utf8               Signature
  #119 = Utf8               MethodParameters
  #120 = Utf8               InnerClasses
  #121 = Utf8               EnclosingMethod
  #122 = Utf8               SourceFile
  #123 = Utf8               ScalaInlineInfo
  #124 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 0l

  private final shapeless.TypeableMacros $outer;
    descriptor: Lshapeless/TypeableMacros;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private final scala.reflect.api.Types$TypeApi tpe$2;
    descriptor: Lscala/reflect/api/Types$TypeApi;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final <A1 extends scala.reflect.api.Symbols$SymbolApi, B1 extends java.lang.Object> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    descriptor: (Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=6, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: ifnull        92
         8: aload_0
         9: getfield      #41                 // Field $outer:Lshapeless/TypeableMacros;
        12: invokevirtual #45                 // Method shapeless/TypeableMacros.c:()Lscala/reflect/macros/blackbox/Context;
        15: invokeinterface #51,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        20: invokevirtual #57                 // Method scala/reflect/macros/Universe.TermSymbolTag:()Lscala/reflect/ClassTag;
        23: aload         4
        25: invokeinterface #63,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        30: astore        5
        32: aload         5
        34: invokevirtual #69                 // Method scala/Option.isEmpty:()Z
        37: ifne          89
        40: aload         5
        42: invokevirtual #73                 // Method scala/Option.get:()Ljava/lang/Object;
        45: ifnull        89
        48: aload         4
        50: checkcast     #20                 // class scala/reflect/api/Symbols$TermSymbolApi
        53: invokeinterface #76,  1           // InterfaceMethod scala/reflect/api/Symbols$TermSymbolApi.isVal:()Z
        58: ifeq          89
        61: aload         4
        63: checkcast     #20                 // class scala/reflect/api/Symbols$TermSymbolApi
        66: invokeinterface #79,  1           // InterfaceMethod scala/reflect/api/Symbols$TermSymbolApi.isCaseAccessor:()Z
        71: ifeq          89
        74: aload         4
        76: aload_0
        77: getfield      #81                 // Field tpe$2:Lscala/reflect/api/Types$TypeApi;
        80: invokeinterface #85,  2           // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
        85: astore_3
        86: goto          106
        89: goto          95
        92: goto          95
        95: aload_2
        96: aload_1
        97: invokeinterface #91,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       102: astore_3
       103: goto          106
       106: aload_3
       107: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 89
          locals = [ top, class scala/reflect/api/Symbols$SymbolApi, class scala/Option ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class shapeless/TypeableMacros$$anonfun$1, class scala/reflect/api/Symbols$SymbolApi, class scala/Function1, class java/lang/Object, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 477: 0
        line 478: 3
        line 477: 40
        line 478: 48
        line 477: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     108     0  this   Lshapeless/TypeableMacros$$anonfun$1;
            0     108     1    x1   Lscala/reflect/api/Symbols$SymbolApi;
            0     108     2 default   Lscala/Function1;
    Signature: #37                          // <A1:Lscala/reflect/api/Symbols$SymbolApi;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      x1                             final
      default                        final

  public final boolean isDefinedAt(scala.reflect.api.Symbols$SymbolApi);
    descriptor: (Lscala/reflect/api/Symbols$SymbolApi;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        77
         6: aload_0
         7: getfield      #41                 // Field $outer:Lshapeless/TypeableMacros;
        10: invokevirtual #45                 // Method shapeless/TypeableMacros.c:()Lscala/reflect/macros/blackbox/Context;
        13: invokeinterface #51,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        18: invokevirtual #57                 // Method scala/reflect/macros/Universe.TermSymbolTag:()Lscala/reflect/ClassTag;
        21: aload_3
        22: invokeinterface #63,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        27: astore        4
        29: aload         4
        31: invokevirtual #69                 // Method scala/Option.isEmpty:()Z
        34: ifne          74
        37: aload         4
        39: invokevirtual #73                 // Method scala/Option.get:()Ljava/lang/Object;
        42: ifnull        74
        45: aload_3
        46: checkcast     #20                 // class scala/reflect/api/Symbols$TermSymbolApi
        49: invokeinterface #76,  1           // InterfaceMethod scala/reflect/api/Symbols$TermSymbolApi.isVal:()Z
        54: ifeq          74
        57: aload_3
        58: checkcast     #20                 // class scala/reflect/api/Symbols$TermSymbolApi
        61: invokeinterface #79,  1           // InterfaceMethod scala/reflect/api/Symbols$TermSymbolApi.isCaseAccessor:()Z
        66: ifeq          74
        69: iconst_1
        70: istore_2
        71: goto          85
        74: goto          80
        77: goto          80
        80: iconst_0
        81: istore_2
        82: goto          85
        85: iload_2
        86: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 74
          locals = [ top, class scala/reflect/api/Symbols$SymbolApi, class scala/Option ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class shapeless/TypeableMacros$$anonfun$1, class scala/reflect/api/Symbols$SymbolApi, int, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 477: 0
        line 478: 2
        line 477: 37
        line 478: 45
        line 477: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      87     0  this   Lshapeless/TypeableMacros$$anonfun$1;
            0      87     1    x1   Lscala/reflect/api/Symbols$SymbolApi;
    MethodParameters:
      Name                           Flags
      x1                             final

  public final boolean isDefinedAt(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #15                 // class scala/reflect/api/Symbols$SymbolApi
         5: invokevirtual #103                // Method isDefinedAt:(Lscala/reflect/api/Symbols$SymbolApi;)Z
         8: ireturn
      LineNumberTable:
        line 477: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lshapeless/TypeableMacros$$anonfun$1;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #15                 // class scala/reflect/api/Symbols$SymbolApi
         5: aload_2
         6: invokevirtual #107                // Method applyOrElse:(Lscala/reflect/api/Symbols$SymbolApi;Lscala/Function1;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 477: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lshapeless/TypeableMacros$$anonfun$1;
            0      10     1     x   Ljava/lang/Object;
            0      10     2 default   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public shapeless.TypeableMacros$$anonfun$1(shapeless.TypeableMacros, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/TypeableMacros;Lscala/reflect/api/Types$TypeApi;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #41                 // Field $outer:Lshapeless/TypeableMacros;
        11: aload_0
        12: aload_2
        13: putfield      #81                 // Field tpe$2:Lscala/reflect/api/Types$TypeApi;
        16: aload_0
        17: invokespecial #112                // Method scala/runtime/AbstractPartialFunction."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 477: 0
        line 466: 11
        line 477: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lshapeless/TypeableMacros$$anonfun$1;
            0      21     1 $outer   Lshapeless/TypeableMacros;
            0      21     2 tpe$2   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      tpe$2                          final
}
InnerClasses:
  public #18= #15 of #17;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public #21= #20 of #17;                 // TermSymbolApi=class scala/reflect/api/Symbols$TermSymbolApi of class scala/reflect/api/Symbols
  public abstract #26= #23 of #25;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public final #2;                        // class shapeless/TypeableMacros$$anonfun$1
EnclosingMethod: #10.#13                // shapeless.TypeableMacros.mkCaseClassTypeable
Signature: #3                           // Lscala/runtime/AbstractPartialFunction<Lscala/reflect/api/Symbols$SymbolApi;Lscala/reflect/api/Types$TypeApi;>;Ljava/io/Serializable;
SourceFile: "typeable.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 6C 00 6D 01 00 23 00 69 01 00 23
   00 24 01 00 62 00 64 01 00 62 00 63 01
  Scala: length = 0x0 (unknown attribute)

