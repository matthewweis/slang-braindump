Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/RandomAccessFileInputStream.class
  Last modified May 29, 2022; size 2357 bytes
  SHA-256 checksum bff110a190026eeb8796b94ef220df82977ffbad9ca3639374c45fb17a6dea8c
  Compiled from "RandomAccessFileInputStream.java"
public class org.apache.commons.io.input.RandomAccessFileInputStream extends java.io.InputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #22                         // org/apache/commons/io/input/RandomAccessFileInputStream
  super_class: #23                        // java/io/InputStream
  interfaces: 0, fields: 2, methods: 12, attributes: 1
Constant pool:
   #1 = Methodref          #22.#72        // org/apache/commons/io/input/RandomAccessFileInputStream."<init>":(Ljava/io/RandomAccessFile;Z)V
   #2 = Methodref          #23.#73        // java/io/InputStream."<init>":()V
   #3 = String             #35            // file
   #4 = Methodref          #74.#75        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #5 = Class              #76            // java/io/RandomAccessFile
   #6 = Fieldref           #22.#77        // org/apache/commons/io/input/RandomAccessFileInputStream.randomAccessFile:Ljava/io/RandomAccessFile;
   #7 = Fieldref           #22.#78        // org/apache/commons/io/input/RandomAccessFileInputStream.closeOnClose:Z
   #8 = Methodref          #22.#79        // org/apache/commons/io/input/RandomAccessFileInputStream.availableLong:()J
   #9 = Class              #80            // java/lang/Integer
  #10 = Long               2147483647l
  #12 = Integer            2147483647
  #13 = Methodref          #5.#81         // java/io/RandomAccessFile.length:()J
  #14 = Methodref          #5.#82         // java/io/RandomAccessFile.getFilePointer:()J
  #15 = Methodref          #23.#83        // java/io/InputStream.close:()V
  #16 = Methodref          #5.#83         // java/io/RandomAccessFile.close:()V
  #17 = Methodref          #5.#84         // java/io/RandomAccessFile.read:()I
  #18 = Methodref          #5.#85         // java/io/RandomAccessFile.read:([B)I
  #19 = Methodref          #5.#86         // java/io/RandomAccessFile.read:([BII)I
  #20 = Methodref          #5.#87         // java/io/RandomAccessFile.seek:(J)V
  #21 = Methodref          #22.#87        // org/apache/commons/io/input/RandomAccessFileInputStream.seek:(J)V
  #22 = Class              #88            // org/apache/commons/io/input/RandomAccessFileInputStream
  #23 = Class              #89            // java/io/InputStream
  #24 = Utf8               closeOnClose
  #25 = Utf8               Z
  #26 = Utf8               randomAccessFile
  #27 = Utf8               Ljava/io/RandomAccessFile;
  #28 = Utf8               <init>
  #29 = Utf8               (Ljava/io/RandomAccessFile;)V
  #30 = Utf8               Code
  #31 = Utf8               LineNumberTable
  #32 = Utf8               LocalVariableTable
  #33 = Utf8               this
  #34 = Utf8               Lorg/apache/commons/io/input/RandomAccessFileInputStream;
  #35 = Utf8               file
  #36 = Utf8               (Ljava/io/RandomAccessFile;Z)V
  #37 = Utf8               available
  #38 = Utf8               ()I
  #39 = Utf8               avail
  #40 = Utf8               J
  #41 = Utf8               StackMapTable
  #42 = Utf8               Exceptions
  #43 = Class              #90            // java/io/IOException
  #44 = Utf8               availableLong
  #45 = Utf8               ()J
  #46 = Utf8               close
  #47 = Utf8               ()V
  #48 = Utf8               getRandomAccessFile
  #49 = Utf8               ()Ljava/io/RandomAccessFile;
  #50 = Utf8               isCloseOnClose
  #51 = Utf8               ()Z
  #52 = Utf8               read
  #53 = Utf8               ([B)I
  #54 = Utf8               bytes
  #55 = Utf8               [B
  #56 = Utf8               ([BII)I
  #57 = Utf8               offset
  #58 = Utf8               I
  #59 = Utf8               length
  #60 = Utf8               seek
  #61 = Utf8               (J)V
  #62 = Utf8               position
  #63 = Utf8               skip
  #64 = Utf8               (J)J
  #65 = Utf8               skipCount
  #66 = Utf8               filePointer
  #67 = Utf8               fileLength
  #68 = Utf8               targetPos
  #69 = Utf8               newPos
  #70 = Utf8               SourceFile
  #71 = Utf8               RandomAccessFileInputStream.java
  #72 = NameAndType        #28:#36        // "<init>":(Ljava/io/RandomAccessFile;Z)V
  #73 = NameAndType        #28:#47        // "<init>":()V
  #74 = Class              #91            // java/util/Objects
  #75 = NameAndType        #92:#93        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #76 = Utf8               java/io/RandomAccessFile
  #77 = NameAndType        #26:#27        // randomAccessFile:Ljava/io/RandomAccessFile;
  #78 = NameAndType        #24:#25        // closeOnClose:Z
  #79 = NameAndType        #44:#45        // availableLong:()J
  #80 = Utf8               java/lang/Integer
  #81 = NameAndType        #59:#45        // length:()J
  #82 = NameAndType        #94:#45        // getFilePointer:()J
  #83 = NameAndType        #46:#47        // close:()V
  #84 = NameAndType        #52:#38        // read:()I
  #85 = NameAndType        #52:#53        // read:([B)I
  #86 = NameAndType        #52:#56        // read:([BII)I
  #87 = NameAndType        #60:#61        // seek:(J)V
  #88 = Utf8               org/apache/commons/io/input/RandomAccessFileInputStream
  #89 = Utf8               java/io/InputStream
  #90 = Utf8               java/io/IOException
  #91 = Utf8               java/util/Objects
  #92 = Utf8               requireNonNull
  #93 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #94 = Utf8               getFilePointer
{
  private final boolean closeOnClose;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.io.RandomAccessFile randomAccessFile;
    descriptor: Ljava/io/RandomAccessFile;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.input.RandomAccessFileInputStream(java.io.RandomAccessFile);
    descriptor: (Ljava/io/RandomAccessFile;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: invokespecial #1                  // Method "<init>":(Ljava/io/RandomAccessFile;Z)V
         6: return
      LineNumberTable:
        line 41: 0
        line 42: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
            0       7     1  file   Ljava/io/RandomAccessFile;

  public org.apache.commons.io.input.RandomAccessFileInputStream(java.io.RandomAccessFile, boolean);
    descriptor: (Ljava/io/RandomAccessFile;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #2                  // Method java/io/InputStream."<init>":()V
         4: aload_0
         5: aload_1
         6: ldc           #3                  // String file
         8: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
        11: checkcast     #5                  // class java/io/RandomAccessFile
        14: putfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
        17: aload_0
        18: iload_2
        19: putfield      #7                  // Field closeOnClose:Z
        22: return
      LineNumberTable:
        line 50: 0
        line 51: 4
        line 52: 17
        line 53: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
            0      23     1  file   Ljava/io/RandomAccessFile;
            0      23     2 closeOnClose   Z

  public int available() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #8                  // Method availableLong:()J
         4: lstore_1
         5: lload_1
         6: ldc2_w        #10                 // long 2147483647l
         9: lcmp
        10: ifle          16
        13: ldc           #12                 // int 2147483647
        15: ireturn
        16: lload_1
        17: l2i
        18: ireturn
      LineNumberTable:
        line 65: 0
        line 66: 5
        line 67: 13
        line 69: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
            5      14     1 avail   J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ long ]
    Exceptions:
      throws java.io.IOException

  public long availableLong() throws java.io.IOException;
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
         4: invokevirtual #13                 // Method java/io/RandomAccessFile.length:()J
         7: aload_0
         8: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
        11: invokevirtual #14                 // Method java/io/RandomAccessFile.getFilePointer:()J
        14: lsub
        15: lreturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #15                 // Method java/io/InputStream.close:()V
         4: aload_0
         5: getfield      #7                  // Field closeOnClose:Z
         8: ifeq          18
        11: aload_0
        12: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
        15: invokevirtual #16                 // Method java/io/RandomAccessFile.close:()V
        18: return
      LineNumberTable:
        line 84: 0
        line 85: 4
        line 86: 11
        line 88: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
    Exceptions:
      throws java.io.IOException

  public java.io.RandomAccessFile getRandomAccessFile();
    descriptor: ()Ljava/io/RandomAccessFile;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
         4: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;

  public boolean isCloseOnClose();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #7                  // Field closeOnClose:Z
         4: ireturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;

  public int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
         4: invokevirtual #17                 // Method java/io/RandomAccessFile.read:()I
         7: ireturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
    Exceptions:
      throws java.io.IOException

  public int read(byte[]) throws java.io.IOException;
    descriptor: ([B)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
         4: aload_1
         5: invokevirtual #18                 // Method java/io/RandomAccessFile.read:([B)I
         8: ireturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
            0       9     1 bytes   [B
    Exceptions:
      throws java.io.IOException

  public int read(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
         4: aload_1
         5: iload_2
         6: iload_3
         7: invokevirtual #19                 // Method java/io/RandomAccessFile.read:([BII)I
        10: ireturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
            0      11     1 bytes   [B
            0      11     2 offset   I
            0      11     3 length   I
    Exceptions:
      throws java.io.IOException

  private void seek(long) throws java.io.IOException;
    descriptor: (J)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
         4: lload_1
         5: invokevirtual #20                 // Method java/io/RandomAccessFile.seek:(J)V
         8: return
      LineNumberTable:
        line 131: 0
        line 132: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
            0       9     1 position   J
    Exceptions:
      throws java.io.IOException

  public long skip(long) throws java.io.IOException;
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=11, args_size=2
         0: lload_1
         1: lconst_0
         2: lcmp
         3: ifgt          8
         6: lconst_0
         7: lreturn
         8: aload_0
         9: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
        12: invokevirtual #14                 // Method java/io/RandomAccessFile.getFilePointer:()J
        15: lstore_3
        16: aload_0
        17: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
        20: invokevirtual #13                 // Method java/io/RandomAccessFile.length:()J
        23: lstore        5
        25: lload_3
        26: lload         5
        28: lcmp
        29: iflt          34
        32: lconst_0
        33: lreturn
        34: lload_3
        35: lload_1
        36: ladd
        37: lstore        7
        39: lload         7
        41: lload         5
        43: lcmp
        44: ifle          54
        47: lload         5
        49: lconst_1
        50: lsub
        51: goto          56
        54: lload         7
        56: lstore        9
        58: lload         9
        60: lconst_0
        61: lcmp
        62: ifle          71
        65: aload_0
        66: lload         9
        68: invokespecial #21                 // Method seek:(J)V
        71: aload_0
        72: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
        75: invokevirtual #14                 // Method java/io/RandomAccessFile.getFilePointer:()J
        78: lload_3
        79: lsub
        80: lreturn
      LineNumberTable:
        line 136: 0
        line 137: 6
        line 139: 8
        line 140: 16
        line 141: 25
        line 142: 32
        line 144: 34
        line 145: 39
        line 146: 58
        line 147: 65
        line 149: 71
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      81     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;
            0      81     1 skipCount   J
           16      65     3 filePointer   J
           25      56     5 fileLength   J
           39      42     7 targetPos   J
           58      23     9 newPos   J
      StackMapTable: number_of_entries = 5
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ long, long ]
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ long ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ long ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ long ]
    Exceptions:
      throws java.io.IOException
}
SourceFile: "RandomAccessFileInputStream.java"
