Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/dk/brics/automaton/Transition.class
  Last modified May 29, 2022; size 2807 bytes
  SHA-256 checksum edc58de0cb1c8a3c12792f39c0310bf69c7b3cc3c21e468dae12c62e09467941
  Compiled from "Transition.java"
public class dk.brics.automaton.Transition implements java.io.Serializable,java.lang.Cloneable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #5                          // dk/brics/automaton/Transition
  super_class: #35                        // java/lang/Object
  interfaces: 2, fields: 6, methods: 14, attributes: 1
Constant pool:
    #1 = Methodref          #35.#82       // java/lang/Object."<init>":()V
    #2 = Fieldref           #5.#83        // dk/brics/automaton/Transition.max:I
    #3 = Fieldref           #5.#84        // dk/brics/automaton/Transition.min:I
    #4 = Fieldref           #5.#85        // dk/brics/automaton/Transition.to:Ldk/brics/automaton/State;
    #5 = Class              #86           // dk/brics/automaton/Transition
    #6 = Methodref          #35.#87       // java/lang/Object.clone:()Ljava/lang/Object;
    #7 = Class              #88           // java/lang/CloneNotSupportedException
    #8 = Class              #89           // java/lang/RuntimeException
    #9 = Methodref          #8.#90        // java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
   #10 = Methodref          #21.#91       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #11 = String             #92           // \\u
   #12 = Methodref          #21.#93       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #13 = Methodref          #94.#95       // java/lang/Integer.toHexString:(I)Ljava/lang/String;
   #14 = String             #96           // 000
   #15 = String             #97           // 00
   #16 = String             #98           // 0
   #17 = Integer            65535
   #18 = String             #99           // \\u{
   #19 = Methodref          #69.#100      // java/lang/String.toUpperCase:()Ljava/lang/String;
   #20 = Methodref          #5.#101       // dk/brics/automaton/Transition.appendCharStringH:(CLjava/lang/StringBuilder;)V
   #21 = Class              #102          // java/lang/StringBuilder
   #22 = Methodref          #21.#82       // java/lang/StringBuilder."<init>":()V
   #23 = Methodref          #5.#103       // dk/brics/automaton/Transition.appendCharString:(ILjava/lang/StringBuilder;)V
   #24 = String             #104          // -
   #25 = String             #105          //  ->
   #26 = Fieldref           #56.#106      // dk/brics/automaton/State.number:I
   #27 = Methodref          #21.#107      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #28 = Methodref          #21.#108      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #29 = String             #109          //  [label=\"
   #30 = String             #110          // \"]\n
   #31 = Methodref          #5.#111       // dk/brics/automaton/Transition.clone:()Ldk/brics/automaton/Transition;
   #32 = Fieldref           #5.#112       // dk/brics/automaton/Transition.MIN_VALUE:I
   #33 = Integer            1114111
   #34 = Fieldref           #5.#113       // dk/brics/automaton/Transition.MAX_VALUE:I
   #35 = Class              #114          // java/lang/Object
   #36 = Class              #115          // java/io/Serializable
   #37 = Class              #116          // java/lang/Cloneable
   #38 = Utf8               serialVersionUID
   #39 = Utf8               J
   #40 = Utf8               ConstantValue
   #41 = Long               40001l
   #43 = Utf8               MIN_VALUE
   #44 = Utf8               I
   #45 = Utf8               MAX_VALUE
   #46 = Utf8               min
   #47 = Utf8               max
   #48 = Utf8               to
   #49 = Utf8               Ldk/brics/automaton/State;
   #50 = Utf8               <init>
   #51 = Utf8               (ILdk/brics/automaton/State;)V
   #52 = Utf8               Code
   #53 = Utf8               LineNumberTable
   #54 = Utf8               (IILdk/brics/automaton/State;)V
   #55 = Utf8               StackMapTable
   #56 = Class              #117          // dk/brics/automaton/State
   #57 = Utf8               getMin
   #58 = Utf8               ()I
   #59 = Utf8               getMax
   #60 = Utf8               getDest
   #61 = Utf8               ()Ldk/brics/automaton/State;
   #62 = Utf8               equals
   #63 = Utf8               (Ljava/lang/Object;)Z
   #64 = Utf8               hashCode
   #65 = Utf8               clone
   #66 = Utf8               ()Ldk/brics/automaton/Transition;
   #67 = Utf8               appendCharStringH
   #68 = Utf8               (CLjava/lang/StringBuilder;)V
   #69 = Class              #118          // java/lang/String
   #70 = Utf8               appendCharString
   #71 = Utf8               (ILjava/lang/StringBuilder;)V
   #72 = Utf8               toString
   #73 = Utf8               ()Ljava/lang/String;
   #74 = Utf8               appendDot
   #75 = Utf8               (Ljava/lang/StringBuilder;)V
   #76 = Utf8               ()Ljava/lang/Object;
   #77 = Utf8               Exceptions
   #78 = Utf8               <clinit>
   #79 = Utf8               ()V
   #80 = Utf8               SourceFile
   #81 = Utf8               Transition.java
   #82 = NameAndType        #50:#79       // "<init>":()V
   #83 = NameAndType        #47:#44       // max:I
   #84 = NameAndType        #46:#44       // min:I
   #85 = NameAndType        #48:#49       // to:Ldk/brics/automaton/State;
   #86 = Utf8               dk/brics/automaton/Transition
   #87 = NameAndType        #65:#76       // clone:()Ljava/lang/Object;
   #88 = Utf8               java/lang/CloneNotSupportedException
   #89 = Utf8               java/lang/RuntimeException
   #90 = NameAndType        #50:#119      // "<init>":(Ljava/lang/Throwable;)V
   #91 = NameAndType        #120:#121     // append:(C)Ljava/lang/StringBuilder;
   #92 = Utf8               \\u
   #93 = NameAndType        #120:#122     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #94 = Class              #123          // java/lang/Integer
   #95 = NameAndType        #124:#125     // toHexString:(I)Ljava/lang/String;
   #96 = Utf8               000
   #97 = Utf8               00
   #98 = Utf8               0
   #99 = Utf8               \\u{
  #100 = NameAndType        #126:#73      // toUpperCase:()Ljava/lang/String;
  #101 = NameAndType        #67:#68       // appendCharStringH:(CLjava/lang/StringBuilder;)V
  #102 = Utf8               java/lang/StringBuilder
  #103 = NameAndType        #70:#71       // appendCharString:(ILjava/lang/StringBuilder;)V
  #104 = Utf8               -
  #105 = Utf8                ->
  #106 = NameAndType        #127:#44      // number:I
  #107 = NameAndType        #120:#128     // append:(I)Ljava/lang/StringBuilder;
  #108 = NameAndType        #72:#73       // toString:()Ljava/lang/String;
  #109 = Utf8                [label=\"
  #110 = Utf8               \"]\n
  #111 = NameAndType        #65:#66       // clone:()Ldk/brics/automaton/Transition;
  #112 = NameAndType        #43:#44       // MIN_VALUE:I
  #113 = NameAndType        #45:#44       // MAX_VALUE:I
  #114 = Utf8               java/lang/Object
  #115 = Utf8               java/io/Serializable
  #116 = Utf8               java/lang/Cloneable
  #117 = Utf8               dk/brics/automaton/State
  #118 = Utf8               java/lang/String
  #119 = Utf8               (Ljava/lang/Throwable;)V
  #120 = Utf8               append
  #121 = Utf8               (C)Ljava/lang/StringBuilder;
  #122 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #123 = Utf8               java/lang/Integer
  #124 = Utf8               toHexString
  #125 = Utf8               (I)Ljava/lang/String;
  #126 = Utf8               toUpperCase
  #127 = Utf8               number
  #128 = Utf8               (I)Ljava/lang/StringBuilder;
{
  static final long serialVersionUID;
    descriptor: J
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: long 40001l

  public static int MIN_VALUE;
    descriptor: I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC

  public static int MAX_VALUE;
    descriptor: I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC

  int min;
    descriptor: I
    flags: (0x0000)

  int max;
    descriptor: I
    flags: (0x0000)

  dk.brics.automaton.State to;
    descriptor: Ldk/brics/automaton/State;
    flags: (0x0000)

  public dk.brics.automaton.Transition(int, dk.brics.automaton.State);
    descriptor: (ILdk/brics/automaton/State;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_0
         6: iload_1
         7: dup_x1
         8: putfield      #2                  // Field max:I
        11: putfield      #3                  // Field min:I
        14: aload_0
        15: aload_2
        16: putfield      #4                  // Field to:Ldk/brics/automaton/State;
        19: return
      LineNumberTable:
        line 62: 0
        line 63: 4
        line 64: 14
        line 65: 19

  public dk.brics.automaton.Transition(int, int, dk.brics.automaton.State);
    descriptor: (IILdk/brics/automaton/State;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=4
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: iload_2
         5: iload_1
         6: if_icmpge     17
         9: iload_2
        10: istore        4
        12: iload_1
        13: istore_2
        14: iload         4
        16: istore_1
        17: aload_0
        18: iload_1
        19: putfield      #3                  // Field min:I
        22: aload_0
        23: iload_2
        24: putfield      #2                  // Field max:I
        27: aload_0
        28: aload_3
        29: putfield      #4                  // Field to:Ldk/brics/automaton/State;
        32: return
      LineNumberTable:
        line 74: 0
        line 75: 4
        line 76: 9
        line 77: 12
        line 78: 14
        line 80: 17
        line 81: 22
        line 82: 27
        line 83: 32
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class dk/brics/automaton/Transition, int, int, class dk/brics/automaton/State ]
          stack = []

  public int getMin();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field min:I
         4: ireturn
      LineNumberTable:
        line 87: 0

  public int getMax();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field max:I
         4: ireturn
      LineNumberTable:
        line 92: 0

  public dk.brics.automaton.State getDest();
    descriptor: ()Ldk/brics/automaton/State;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field to:Ldk/brics/automaton/State;
         4: areturn
      LineNumberTable:
        line 97: 0

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: instanceof    #5                  // class dk/brics/automaton/Transition
         4: ifeq          51
         7: aload_1
         8: checkcast     #5                  // class dk/brics/automaton/Transition
        11: astore_2
        12: aload_2
        13: getfield      #3                  // Field min:I
        16: aload_0
        17: getfield      #3                  // Field min:I
        20: if_icmpne     49
        23: aload_2
        24: getfield      #2                  // Field max:I
        27: aload_0
        28: getfield      #2                  // Field max:I
        31: if_icmpne     49
        34: aload_2
        35: getfield      #4                  // Field to:Ldk/brics/automaton/State;
        38: aload_0
        39: getfield      #4                  // Field to:Ldk/brics/automaton/State;
        42: if_acmpne     49
        45: iconst_1
        46: goto          50
        49: iconst_0
        50: ireturn
        51: iconst_0
        52: ireturn
      LineNumberTable:
        line 108: 0
        line 109: 7
        line 110: 12
        line 112: 51
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 49
          locals = [ class dk/brics/automaton/Transition ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 0

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field min:I
         4: iconst_2
         5: imul
         6: aload_0
         7: getfield      #2                  // Field max:I
        10: iconst_3
        11: imul
        12: iadd
        13: ireturn
      LineNumberTable:
        line 122: 0

  public dk.brics.automaton.Transition clone();
    descriptor: ()Ldk/brics/automaton/Transition;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokespecial #6                  // Method java/lang/Object.clone:()Ljava/lang/Object;
         4: checkcast     #5                  // class dk/brics/automaton/Transition
         7: areturn
         8: astore_1
         9: new           #8                  // class java/lang/RuntimeException
        12: dup
        13: aload_1
        14: invokespecial #9                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
        17: athrow
      Exception table:
         from    to  target type
             0     7     8   Class java/lang/CloneNotSupportedException
      LineNumberTable:
        line 132: 0
        line 133: 8
        line 134: 9
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/CloneNotSupportedException ]

  static void appendCharStringH(char, java.lang.StringBuilder);
    descriptor: (CLjava/lang/StringBuilder;)V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=3, args_size=2
         0: iload_0
         1: bipush        33
         3: if_icmplt     33
         6: iload_0
         7: bipush        126
         9: if_icmpgt     33
        12: iload_0
        13: bipush        92
        15: if_icmpeq     33
        18: iload_0
        19: bipush        34
        21: if_icmpeq     33
        24: aload_1
        25: iload_0
        26: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        29: pop
        30: goto          113
        33: aload_1
        34: ldc           #11                 // String \\u
        36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        39: pop
        40: iload_0
        41: invokestatic  #13                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
        44: astore_2
        45: iload_0
        46: bipush        16
        48: if_icmpge     65
        51: aload_1
        52: ldc           #14                 // String 000
        54: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: aload_2
        58: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        61: pop
        62: goto          113
        65: iload_0
        66: sipush        256
        69: if_icmpge     86
        72: aload_1
        73: ldc           #15                 // String 00
        75: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        78: aload_2
        79: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        82: pop
        83: goto          113
        86: iload_0
        87: sipush        4096
        90: if_icmpge     107
        93: aload_1
        94: ldc           #16                 // String 0
        96: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        99: aload_2
       100: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       103: pop
       104: goto          113
       107: aload_1
       108: aload_2
       109: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       112: pop
       113: return
      LineNumberTable:
        line 139: 0
        line 140: 24
        line 142: 33
        line 143: 40
        line 144: 45
        line 145: 51
        line 146: 65
        line 147: 72
        line 148: 86
        line 149: 93
        line 151: 107
        line 153: 113
      StackMapTable: number_of_entries = 5
        frame_type = 33 /* same */
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ class java/lang/String ]
        frame_type = 20 /* same */
        frame_type = 20 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  static void appendCharString(int, java.lang.StringBuilder);
    descriptor: (ILjava/lang/StringBuilder;)V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: ldc           #17                 // int 65535
         3: if_icmple     35
         6: aload_1
         7: ldc           #18                 // String \\u{
         9: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        12: pop
        13: aload_1
        14: iload_0
        15: invokestatic  #13                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
        18: invokevirtual #19                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
        21: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: pop
        25: aload_1
        26: bipush        125
        28: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        31: pop
        32: goto          41
        35: iload_0
        36: i2c
        37: aload_1
        38: invokestatic  #20                 // Method appendCharStringH:(CLjava/lang/StringBuilder;)V
        41: return
      LineNumberTable:
        line 156: 0
        line 157: 6
        line 158: 13
        line 159: 25
        line 161: 35
        line 163: 41
      StackMapTable: number_of_entries = 2
        frame_type = 35 /* same */
        frame_type = 5 /* same */

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: new           #21                 // class java/lang/StringBuilder
         3: dup
         4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
         7: astore_1
         8: aload_0
         9: getfield      #3                  // Field min:I
        12: aload_1
        13: invokestatic  #23                 // Method appendCharString:(ILjava/lang/StringBuilder;)V
        16: aload_0
        17: getfield      #3                  // Field min:I
        20: aload_0
        21: getfield      #2                  // Field max:I
        24: if_icmpeq     42
        27: aload_1
        28: ldc           #24                 // String -
        30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        33: pop
        34: aload_0
        35: getfield      #2                  // Field max:I
        38: aload_1
        39: invokestatic  #23                 // Method appendCharString:(ILjava/lang/StringBuilder;)V
        42: aload_1
        43: ldc           #25                 // String  ->
        45: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        48: aload_0
        49: getfield      #4                  // Field to:Ldk/brics/automaton/State;
        52: getfield      #26                 // Field dk/brics/automaton/State.number:I
        55: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        58: pop
        59: aload_1
        60: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        63: areturn
      LineNumberTable:
        line 171: 0
        line 172: 8
        line 173: 16
        line 174: 27
        line 175: 34
        line 177: 42
        line 178: 59
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 42
          locals = [ class java/lang/StringBuilder ]

  void appendDot(java.lang.StringBuilder);
    descriptor: (Ljava/lang/StringBuilder;)V
    flags: (0x0000)
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ldc           #25                 // String  ->
         3: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         6: aload_0
         7: getfield      #4                  // Field to:Ldk/brics/automaton/State;
        10: getfield      #26                 // Field dk/brics/automaton/State.number:I
        13: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        16: ldc           #29                 // String  [label=\"
        18: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: pop
        22: aload_0
        23: getfield      #3                  // Field min:I
        26: aload_1
        27: invokestatic  #23                 // Method appendCharString:(ILjava/lang/StringBuilder;)V
        30: aload_0
        31: getfield      #3                  // Field min:I
        34: aload_0
        35: getfield      #2                  // Field max:I
        38: if_icmpeq     56
        41: aload_1
        42: ldc           #24                 // String -
        44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        47: pop
        48: aload_0
        49: getfield      #2                  // Field max:I
        52: aload_1
        53: invokestatic  #23                 // Method appendCharString:(ILjava/lang/StringBuilder;)V
        56: aload_1
        57: ldc           #30                 // String \"]\n
        59: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: pop
        63: return
      LineNumberTable:
        line 182: 0
        line 183: 22
        line 184: 30
        line 185: 41
        line 186: 48
        line 188: 56
        line 189: 63
      StackMapTable: number_of_entries = 1
        frame_type = 56 /* same */

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #31                 // Method clone:()Ldk/brics/automaton/Transition;
         4: areturn
      LineNumberTable:
        line 41: 0
    Exceptions:
      throws java.lang.CloneNotSupportedException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: putstatic     #32                 // Field MIN_VALUE:I
         4: ldc           #33                 // int 1114111
         6: putstatic     #34                 // Field MAX_VALUE:I
         9: return
      LineNumberTable:
        line 45: 0
        line 46: 4
}
SourceFile: "Transition.java"
