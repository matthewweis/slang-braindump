Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/cache/shaded/dirs/dev/dirs/Util.class
  Last modified May 29, 2022; size 10079 bytes
  SHA-256 checksum c60f377d75ab1e52a38b375b9033eb873b508ea467ecf0a2a12ac948eb027353
  Compiled from "Util.java"
final class coursier.cache.shaded.dirs.dev.dirs.Util
  minor version: 0
  major version: 52
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/shaded/dirs/dev/dirs/Util
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 11, methods: 22, attributes: 1
Constant pool:
    #1 = Utf8               coursier/cache/shaded/dirs/dev/dirs/Util
    #2 = Class              #1            // coursier/cache/shaded/dirs/dev/dirs/Util
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Util.java
    #6 = Utf8               operatingSystemName
    #7 = Utf8               Ljava/lang/String;
    #8 = Utf8               operatingSystem
    #9 = Utf8               C
   #10 = Utf8               LIN
   #11 = Integer            108
   #12 = Utf8               MAC
   #13 = Integer            109
   #14 = Utf8               WIN
   #15 = Integer            119
   #16 = Utf8               BSD
   #17 = Integer            98
   #18 = Utf8               SOLARIS
   #19 = Integer            115
   #20 = Utf8               UTF8_BOM
   #21 = Utf8               ﻿
   #22 = String             #21           // ﻿
   #23 = Utf8               base64Encoder
   #24 = Utf8               Ljava/lang/Object;
   #25 = Utf8               base64EncodeMethod
   #26 = Utf8               Ljava/lang/reflect/Method;
   #27 = Utf8               SCRIPT_START_BASE64
   #28 = Utf8               <init>
   #29 = Utf8               ()V
   #30 = NameAndType        #28:#29       // "<init>":()V
   #31 = Methodref          #4.#30        // java/lang/Object."<init>":()V
   #32 = Utf8               java/lang/Error
   #33 = Class              #32           // java/lang/Error
   #34 = Methodref          #33.#30       // java/lang/Error."<init>":()V
   #35 = Utf8               requireNonNull
   #36 = Utf8               (Ljava/lang/Object;)V
   #37 = Utf8               java/lang/NullPointerException
   #38 = Class              #37           // java/lang/NullPointerException
   #39 = Methodref          #38.#30       // java/lang/NullPointerException."<init>":()V
   #40 = Utf8               isNullOrEmpty
   #41 = Utf8               (Ljava/lang/String;)Z
   #42 = Utf8               java/lang/String
   #43 = Class              #42           // java/lang/String
   #44 = Utf8               isEmpty
   #45 = Utf8               ()Z
   #46 = NameAndType        #44:#45       // isEmpty:()Z
   #47 = Methodref          #43.#46       // java/lang/String.isEmpty:()Z
   #48 = Utf8               defaultIfNullOrEmpty
   #49 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #50 = NameAndType        #35:#36       // requireNonNull:(Ljava/lang/Object;)V
   #51 = Methodref          #2.#50        // coursier/cache/shaded/dirs/dev/dirs/Util.requireNonNull:(Ljava/lang/Object;)V
   #52 = NameAndType        #40:#41       // isNullOrEmpty:(Ljava/lang/String;)Z
   #53 = Methodref          #2.#52        // coursier/cache/shaded/dirs/dev/dirs/Util.isNullOrEmpty:(Ljava/lang/String;)Z
   #54 = Utf8               ensureSingleSlash
   #55 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #56 = NameAndType        #54:#55       // ensureSingleSlash:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #57 = Methodref          #2.#56        // coursier/cache/shaded/dirs/dev/dirs/Util.ensureSingleSlash:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #58 = Utf8               defaultIfNullOrEmptyExtended
   #59 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #60 = Utf8               /
   #61 = String             #60           // /
   #62 = Utf8               endsWith
   #63 = NameAndType        #62:#41       // endsWith:(Ljava/lang/String;)Z
   #64 = Methodref          #43.#63       // java/lang/String.endsWith:(Ljava/lang/String;)Z
   #65 = Utf8               startsWith
   #66 = NameAndType        #65:#41       // startsWith:(Ljava/lang/String;)Z
   #67 = Methodref          #43.#66       // java/lang/String.startsWith:(Ljava/lang/String;)Z
   #68 = Utf8               java/lang/StringBuilder
   #69 = Class              #68           // java/lang/StringBuilder
   #70 = Utf8               length
   #71 = Utf8               ()I
   #72 = NameAndType        #70:#71       // length:()I
   #73 = Methodref          #43.#72       // java/lang/String.length:()I
   #74 = Utf8               (I)V
   #75 = NameAndType        #28:#74       // "<init>":(I)V
   #76 = Methodref          #69.#75       // java/lang/StringBuilder."<init>":(I)V
   #77 = Utf8               append
   #78 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
   #79 = NameAndType        #77:#78       // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
   #80 = Methodref          #69.#79       // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
   #81 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #82 = NameAndType        #77:#81       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #83 = Methodref          #69.#82       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #84 = Utf8               toString
   #85 = Utf8               ()Ljava/lang/String;
   #86 = NameAndType        #84:#85       // toString:()Ljava/lang/String;
   #87 = Methodref          #69.#86       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #88 = Methodref          #69.#30       // java/lang/StringBuilder."<init>":()V
   #89 = Utf8               (C)Ljava/lang/StringBuilder;
   #90 = NameAndType        #77:#89       // append:(C)Ljava/lang/StringBuilder;
   #91 = Methodref          #69.#90       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #92 = Utf8               linuxRuntimeDir
   #93 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #94 = Utf8               XDG_RUNTIME_DIR
   #95 = String             #94           // XDG_RUNTIME_DIR
   #96 = Utf8               java/lang/System
   #97 = Class              #96           // java/lang/System
   #98 = Utf8               getenv
   #99 = NameAndType        #98:#93       // getenv:(Ljava/lang/String;)Ljava/lang/String;
  #100 = Methodref          #97.#99       // java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
  #101 = Utf8               linuxExecutableDir
  #102 = Utf8               XDG_BIN_HOME
  #103 = String             #102          // XDG_BIN_HOME
  #104 = Utf8               /../bin/
  #105 = String             #104          // /../bin/
  #106 = Utf8               /.local/bin/
  #107 = String             #106          // /.local/bin/
  #108 = NameAndType        #58:#59       // defaultIfNullOrEmptyExtended:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #109 = Methodref          #2.#108       // coursier/cache/shaded/dirs/dev/dirs/Util.defaultIfNullOrEmptyExtended:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #110 = Utf8               getXDGUserDirs
  #111 = Utf8               ([Ljava/lang/String;)[Ljava/lang/String;
  #112 = Utf8               java/io/IOException
  #113 = Class              #112          // java/io/IOException
  #114 = Utf8               /bin/sh
  #115 = String             #114          // /bin/sh
  #116 = Utf8               -c
  #117 = String             #116          // -c
  #118 = Utf8               [Ljava/lang/String;
  #119 = Class              #118          // "[Ljava/lang/String;"
  #120 = Utf8               xdg-user-dir
  #121 = String             #120          // xdg-user-dir
  #122 = Utf8               java/nio/charset/Charset
  #123 = Class              #122          // java/nio/charset/Charset
  #124 = Utf8               defaultCharset
  #125 = Utf8               ()Ljava/nio/charset/Charset;
  #126 = NameAndType        #124:#125     // defaultCharset:()Ljava/nio/charset/Charset;
  #127 = Methodref          #123.#126     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
  #128 = Utf8               runCommands
  #129 = Utf8               (ILjava/nio/charset/Charset;[Ljava/lang/String;)[Ljava/lang/String;
  #130 = NameAndType        #128:#129     // runCommands:(ILjava/nio/charset/Charset;[Ljava/lang/String;)[Ljava/lang/String;
  #131 = Methodref          #2.#130       // coursier/cache/shaded/dirs/dev/dirs/Util.runCommands:(ILjava/nio/charset/Charset;[Ljava/lang/String;)[Ljava/lang/String;
  #132 = Utf8               java/lang/RuntimeException
  #133 = Class              #132          // java/lang/RuntimeException
  #134 = Utf8               (Ljava/lang/Throwable;)V
  #135 = NameAndType        #28:#134      // "<init>":(Ljava/lang/Throwable;)V
  #136 = Methodref          #133.#135     // java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
  #137 = Utf8               getWinDirs
  #138 = Utf8               [Dir]::GetKnownFolderPath(\"
  #139 = String             #138          // [Dir]::GetKnownFolderPath(\"
  #140 = Utf8               \")\n
  #141 = String             #140          // \")\n
  #142 = NameAndType        #27:#7        // SCRIPT_START_BASE64:Ljava/lang/String;
  #143 = Fieldref           #2.#142       // coursier/cache/shaded/dirs/dev/dirs/Util.SCRIPT_START_BASE64:Ljava/lang/String;
  #144 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #145 = NameAndType        #77:#144      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #146 = Methodref          #69.#145      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #147 = Utf8               }
  #148 = String             #147          // }
  #149 = Utf8               toUTF16LEBase64
  #150 = NameAndType        #149:#93      // toUTF16LEBase64:(Ljava/lang/String;)Ljava/lang/String;
  #151 = Methodref          #2.#150       // coursier/cache/shaded/dirs/dev/dirs/Util.toUTF16LEBase64:(Ljava/lang/String;)Ljava/lang/String;
  #152 = Utf8               Path
  #153 = String             #152          // Path
  #154 = Utf8               java/io/File
  #155 = Class              #154          // java/io/File
  #156 = Utf8               pathSeparator
  #157 = NameAndType        #156:#7       // pathSeparator:Ljava/lang/String;
  #158 = Fieldref           #155.#157     // java/io/File.pathSeparator:Ljava/lang/String;
  #159 = Utf8               split
  #160 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;
  #161 = NameAndType        #159:#160     // split:(Ljava/lang/String;)[Ljava/lang/String;
  #162 = Methodref          #43.#161      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
  #163 = Utf8               windowsFallback
  #164 = Utf8               (ILjava/lang/String;)[Ljava/lang/String;
  #165 = NameAndType        #163:#164     // windowsFallback:(ILjava/lang/String;)[Ljava/lang/String;
  #166 = Methodref          #2.#165       // coursier/cache/shaded/dirs/dev/dirs/Util.windowsFallback:(ILjava/lang/String;)[Ljava/lang/String;
  #167 = Utf8               runWinCommands
  #168 = Utf8               (I[Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
  #169 = NameAndType        #167:#168     // runWinCommands:(I[Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
  #170 = Methodref          #2.#169       // coursier/cache/shaded/dirs/dev/dirs/Util.runWinCommands:(I[Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
  #171 = Utf8               java/lang/Exception
  #172 = Class              #171          // java/lang/Exception
  #173 = Utf8               UTF-16LE
  #174 = String             #173          // UTF-16LE
  #175 = Utf8               forName
  #176 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;
  #177 = NameAndType        #175:#176     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
  #178 = Methodref          #123.#177     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
  #179 = Utf8               getBytes
  #180 = Utf8               (Ljava/nio/charset/Charset;)[B
  #181 = NameAndType        #179:#180     // getBytes:(Ljava/nio/charset/Charset;)[B
  #182 = Methodref          #43.#181      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
  #183 = NameAndType        #25:#26       // base64EncodeMethod:Ljava/lang/reflect/Method;
  #184 = Fieldref           #2.#183       // coursier/cache/shaded/dirs/dev/dirs/Util.base64EncodeMethod:Ljava/lang/reflect/Method;
  #185 = Utf8               initBase64Encoding
  #186 = NameAndType        #185:#29      // initBase64Encoding:()V
  #187 = Methodref          #2.#186       // coursier/cache/shaded/dirs/dev/dirs/Util.initBase64Encoding:()V
  #188 = Utf8               [B
  #189 = Class              #188          // "[B"
  #190 = NameAndType        #23:#24       // base64Encoder:Ljava/lang/Object;
  #191 = Fieldref           #2.#190       // coursier/cache/shaded/dirs/dev/dirs/Util.base64Encoder:Ljava/lang/Object;
  #192 = Utf8               java/lang/reflect/Method
  #193 = Class              #192          // java/lang/reflect/Method
  #194 = Utf8               invoke
  #195 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  #196 = NameAndType        #194:#195     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  #197 = Methodref          #193.#196     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  #198 = Utf8               Base64 encoding failed!
  #199 = String             #198          // Base64 encoding failed!
  #200 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V
  #201 = NameAndType        #28:#200      // "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #202 = Methodref          #133.#201     // java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #203 = Utf8               java.util.Base64
  #204 = String             #203          // java.util.Base64
  #205 = Utf8               java/lang/Class
  #206 = Class              #205          // java/lang/Class
  #207 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;
  #208 = NameAndType        #175:#207     // forName:(Ljava/lang/String;)Ljava/lang/Class;
  #209 = Methodref          #206.#208     // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
  #210 = Utf8               getEncoder
  #211 = String             #210          // getEncoder
  #212 = Utf8               getMethod
  #213 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
  #214 = NameAndType        #212:#213     // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
  #215 = Methodref          #206.#214     // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
  #216 = Utf8               getClass
  #217 = Utf8               ()Ljava/lang/Class;
  #218 = NameAndType        #216:#217     // getClass:()Ljava/lang/Class;
  #219 = Methodref          #4.#218       // java/lang/Object.getClass:()Ljava/lang/Class;
  #220 = Utf8               encodeToString
  #221 = String             #220          // encodeToString
  #222 = Utf8               sun.misc.BASE64Encoder
  #223 = String             #222          // sun.misc.BASE64Encoder
  #224 = Utf8               encode
  #225 = String             #224          // encode
  #226 = Utf8               Could not find any viable Base64 encoder! (java.util.Base64 failed with:
  #227 = String             #226          // Could not find any viable Base64 encoder! (java.util.Base64 failed with:
  #228 = Utf8               getMessage
  #229 = NameAndType        #228:#85      // getMessage:()Ljava/lang/String;
  #230 = Methodref          #172.#229     // java/lang/Exception.getMessage:()Ljava/lang/String;
  #231 = Utf8               )
  #232 = String             #231          // )
  #233 = Utf8               java/lang/ProcessBuilder
  #234 = Class              #233          // java/lang/ProcessBuilder
  #235 = Utf8               ([Ljava/lang/String;)V
  #236 = NameAndType        #28:#235      // "<init>":([Ljava/lang/String;)V
  #237 = Methodref          #234.#236     // java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
  #238 = Utf8               start
  #239 = Utf8               ()Ljava/lang/Process;
  #240 = NameAndType        #238:#239     // start:()Ljava/lang/Process;
  #241 = Methodref          #234.#240     // java/lang/ProcessBuilder.start:()Ljava/lang/Process;
  #242 = Utf8               java/io/BufferedReader
  #243 = Class              #242          // java/io/BufferedReader
  #244 = Utf8               java/io/InputStreamReader
  #245 = Class              #244          // java/io/InputStreamReader
  #246 = Utf8               java/lang/Process
  #247 = Class              #246          // java/lang/Process
  #248 = Utf8               getInputStream
  #249 = Utf8               ()Ljava/io/InputStream;
  #250 = NameAndType        #248:#249     // getInputStream:()Ljava/io/InputStream;
  #251 = Methodref          #247.#250     // java/lang/Process.getInputStream:()Ljava/io/InputStream;
  #252 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
  #253 = NameAndType        #28:#252      // "<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
  #254 = Methodref          #245.#253     // java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
  #255 = Utf8               (Ljava/io/Reader;)V
  #256 = NameAndType        #28:#255      // "<init>":(Ljava/io/Reader;)V
  #257 = Methodref          #243.#256     // java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
  #258 = Utf8               readLine
  #259 = NameAndType        #258:#85      // readLine:()Ljava/lang/String;
  #260 = Methodref          #243.#259     // java/io/BufferedReader.readLine:()Ljava/lang/String;
  #261 = NameAndType        #8:#9         // operatingSystem:C
  #262 = Fieldref           #2.#261       // coursier/cache/shaded/dirs/dev/dirs/Util.operatingSystem:C
  #263 = Utf8               substring
  #264 = Utf8               (I)Ljava/lang/String;
  #265 = NameAndType        #263:#264     // substring:(I)Ljava/lang/String;
  #266 = Methodref          #43.#265      // java/lang/String.substring:(I)Ljava/lang/String;
  #267 = Utf8               destroy
  #268 = NameAndType        #267:#29      // destroy:()V
  #269 = Methodref          #247.#268     // java/lang/Process.destroy:()V
  #270 = Utf8               close
  #271 = NameAndType        #270:#29      // close:()V
  #272 = Methodref          #243.#271     // java/io/BufferedReader.close:()V
  #273 = Utf8               printStackTrace
  #274 = NameAndType        #273:#29      // printStackTrace:()V
  #275 = Methodref          #113.#274     // java/io/IOException.printStackTrace:()V
  #276 = Utf8               java/lang/Throwable
  #277 = Class              #276          // java/lang/Throwable
  #278 = Utf8               powershell.exe
  #279 = String             #278          // powershell.exe
  #280 = Utf8               pwsh.exe
  #281 = String             #280          // pwsh.exe
  #282 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #283 = NameAndType        #28:#282      // "<init>":(Ljava/lang/String;Ljava/lang/String;)V
  #284 = Methodref          #155.#283     // java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
  #285 = Utf8               exists
  #286 = NameAndType        #285:#45      // exists:()Z
  #287 = Methodref          #155.#286     // java/io/File.exists:()Z
  #288 = Utf8               UTF-8
  #289 = String             #288          // UTF-8
  #290 = Methodref          #155.#86      // java/io/File.toString:()Ljava/lang/String;
  #291 = Utf8               -version
  #292 = String             #291          // -version
  #293 = Utf8               2
  #294 = String             #293          // 2
  #295 = Utf8               -NoProfile
  #296 = String             #295          // -NoProfile
  #297 = Utf8               -EncodedCommand
  #298 = String             #297          // -EncodedCommand
  #299 = Utf8               no directories
  #300 = String             #299          // no directories
  #301 = Utf8               (Ljava/lang/String;)V
  #302 = NameAndType        #28:#301      // "<init>":(Ljava/lang/String;)V
  #303 = Methodref          #113.#302     // java/io/IOException."<init>":(Ljava/lang/String;)V
  #304 = Utf8               C:\\Program Files\\Powershell
  #305 = String             #304          // C:\\Program Files\\Powershell
  #306 = Methodref          #155.#302     // java/io/File."<init>":(Ljava/lang/String;)V
  #307 = Utf8               list
  #308 = Utf8               ()[Ljava/lang/String;
  #309 = NameAndType        #307:#308     // list:()[Ljava/lang/String;
  #310 = Methodref          #155.#309     // java/io/File.list:()[Ljava/lang/String;
  #311 = Utf8               SystemRoot
  #312 = String             #311          // SystemRoot
  #313 = Utf8               C:\\Windows
  #314 = String             #313          // C:\\Windows
  #315 = Utf8               \\System32\\WindowsPowerShell\\v1.0\\
  #316 = String             #315          // \\System32\\WindowsPowerShell\\v1.0\\
  #317 = Utf8               (Ljava/io/File;Ljava/lang/String;)V
  #318 = NameAndType        #28:#317      // "<init>":(Ljava/io/File;Ljava/lang/String;)V
  #319 = Methodref          #155.#318     // java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
  #320 = Utf8               Couldn\'t find pwsh.exe or powershell.exe on path or in default system locations
  #321 = String             #320          // Couldn\'t find pwsh.exe or powershell.exe on path or in default system locations
  #322 = Utf8               macOSApplicationPath
  #323 = Utf8               stringLength
  #324 = Utf8               (Ljava/lang/String;)I
  #325 = NameAndType        #323:#324     // stringLength:(Ljava/lang/String;)I
  #326 = Methodref          #2.#325       // coursier/cache/shaded/dirs/dev/dirs/Util.stringLength:(Ljava/lang/String;)I
  #327 = Utf8               java/lang/Math
  #328 = Class              #327          // java/lang/Math
  #329 = Utf8               max
  #330 = Utf8               (II)I
  #331 = NameAndType        #329:#330     // max:(II)I
  #332 = Methodref          #328.#331     // java/lang/Math.max:(II)I
  #333 = Utf8               -
  #334 = String             #333          // -
  #335 = Utf8               trimLowercaseReplaceWhitespace
  #336 = Utf8               (Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
  #337 = NameAndType        #335:#336     // trimLowercaseReplaceWhitespace:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
  #338 = Methodref          #2.#337       // coursier/cache/shaded/dirs/dev/dirs/Util.trimLowercaseReplaceWhitespace:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
  #339 = Utf8               windowsApplicationPath
  #340 = Utf8               stripQualification
  #341 = Utf8               lastIndexOf
  #342 = Utf8               (I)I
  #343 = NameAndType        #341:#342     // lastIndexOf:(I)I
  #344 = Methodref          #43.#343      // java/lang/String.lastIndexOf:(I)I
  #345 = Utf8               codePointCount
  #346 = NameAndType        #345:#330     // codePointCount:(II)I
  #347 = Methodref          #43.#346      // java/lang/String.codePointCount:(II)I
  #348 = Utf8               codePointAt
  #349 = NameAndType        #348:#342     // codePointAt:(I)I
  #350 = Methodref          #43.#349      // java/lang/String.codePointAt:(I)I
  #351 = Utf8               codePointExistsAndNotSpace
  #352 = Utf8               (Ljava/lang/String;II)Z
  #353 = NameAndType        #351:#352     // codePointExistsAndNotSpace:(Ljava/lang/String;II)Z
  #354 = Methodref          #2.#353       // coursier/cache/shaded/dirs/dev/dirs/Util.codePointExistsAndNotSpace:(Ljava/lang/String;II)Z
  #355 = Utf8               java/lang/Character
  #356 = Class              #355          // java/lang/Character
  #357 = Utf8               toLowerCase
  #358 = NameAndType        #357:#342     // toLowerCase:(I)I
  #359 = Methodref          #356.#358     // java/lang/Character.toLowerCase:(I)I
  #360 = Utf8               appendCodePoint
  #361 = Utf8               (I)Ljava/lang/StringBuilder;
  #362 = NameAndType        #360:#361     // appendCodePoint:(I)Ljava/lang/StringBuilder;
  #363 = Methodref          #69.#362      // java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
  #364 = Utf8               <clinit>
  #365 = Utf8               os.name
  #366 = String             #365          // os.name
  #367 = Utf8               getProperty
  #368 = NameAndType        #367:#93      // getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #369 = Methodref          #97.#368      // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #370 = NameAndType        #6:#7         // operatingSystemName:Ljava/lang/String;
  #371 = Fieldref           #2.#370       // coursier/cache/shaded/dirs/dev/dirs/Util.operatingSystemName:Ljava/lang/String;
  #372 = Utf8               java/util/Locale
  #373 = Class              #372          // java/util/Locale
  #374 = Utf8               ROOT
  #375 = Utf8               Ljava/util/Locale;
  #376 = NameAndType        #374:#375     // ROOT:Ljava/util/Locale;
  #377 = Fieldref           #373.#376     // java/util/Locale.ROOT:Ljava/util/Locale;
  #378 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
  #379 = NameAndType        #357:#378     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #380 = Methodref          #43.#379      // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #381 = Utf8               linux
  #382 = String             #381          // linux
  #383 = Utf8               contains
  #384 = Utf8               (Ljava/lang/CharSequence;)Z
  #385 = NameAndType        #383:#384     // contains:(Ljava/lang/CharSequence;)Z
  #386 = Methodref          #43.#385      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z
  #387 = Utf8               mac
  #388 = String             #387          // mac
  #389 = Utf8               windows
  #390 = String             #389          // windows
  #391 = Utf8               bsd
  #392 = String             #391          // bsd
  #393 = Utf8               sunos
  #394 = String             #393          // sunos
  #395 = Utf8               coursier/cache/shaded/dirs/dev/dirs/UnsupportedOperatingSystemException
  #396 = Class              #395          // coursier/cache/shaded/dirs/dev/dirs/UnsupportedOperatingSystemException
  #397 = Utf8               directories are not supported on
  #398 = String             #397          // directories are not supported on
  #399 = Methodref          #396.#302     // coursier/cache/shaded/dirs/dev/dirs/UnsupportedOperatingSystemException."<init>":(Ljava/lang/String;)V
  #400 = Utf8               & {\n[Console]::OutputEncoding = [System.Text.Encoding]::UTF8\nAdd-Type @\"\nusing System;\nusing System.Runtime.InteropServices;\npublic class Dir {\n  [DllImport(\"shell32.dll\")]\n  private static extern int SHGetKnownFolderPath([MarshalAs(UnmanagedType.LPStruct)] Guid rfid, uint dwFlags, IntPtr hToken, out IntPtr pszPath);\n  public static string GetKnownFolderPath(string rfid) {\n    IntPtr pszPath;\n    if (SHGetKnownFolderPath(new Guid(rfid), 0, IntPtr.Zero, out pszPath) != 0) return \"\";\n    string path = Marshal.PtrToStringUni(pszPath);\n    Marshal.FreeCoTaskMem(pszPath);\n    return path;\n  }\n}\n\"@\n
  #401 = String             #400          // & {\n[Console]::OutputEncoding = [System.Text.Encoding]::UTF8\nAdd-Type @\"\nusing System;\nusing System.Runtime.InteropServices;\npublic class Dir {\n  [DllImport(\"shell32.dll\")]\n  private static extern int SHGetKnownFolderPath([MarshalAs(UnmanagedType.LPStruct)] Guid rfid, uint dwFlags, IntPtr hToken, out IntPtr pszPath);\n  public static string GetKnownFolderPath(string rfid) {\n    IntPtr pszPath;\n    if (SHGetKnownFolderPath(new Guid(rfid), 0, IntPtr.Zero, out pszPath) != 0) return \"\";\n    string path = Marshal.PtrToStringUni(pszPath);\n    Marshal.FreeCoTaskMem(pszPath);\n    return path;\n  }\n}\n\"@\n
  #402 = Utf8               ConstantValue
  #403 = Utf8               Code
  #404 = Utf8               LineNumberTable
  #405 = Utf8               StackMapTable
  #406 = Utf8               Exceptions
  #407 = Utf8               SourceFile
{
  static final java.lang.String operatingSystemName;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  static final char operatingSystem;
    descriptor: C
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  static final char LIN;
    descriptor: C
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 108

  static final char MAC;
    descriptor: C
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 109

  static final char WIN;
    descriptor: C
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 119

  static final char BSD;
    descriptor: C
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 98

  static final char SOLARIS;
    descriptor: C
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 115

  static final java.lang.String UTF8_BOM;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String ﻿

  private static java.lang.Object base64Encoder;
    descriptor: Ljava/lang/Object;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static java.lang.reflect.Method base64EncodeMethod;
    descriptor: Ljava/lang/reflect/Method;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  static final java.lang.String SCRIPT_START_BASE64;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  private coursier.cache.shaded.dirs.dev.dirs.Util();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #31                 // Method java/lang/Object."<init>":()V
         4: new           #33                 // class java/lang/Error
         7: dup
         8: invokespecial #34                 // Method java/lang/Error."<init>":()V
        11: athrow
      LineNumberTable:
        line 13: 0
        line 14: 4

  static void requireNonNull(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     12
         4: new           #38                 // class java/lang/NullPointerException
         7: dup
         8: invokespecial #39                 // Method java/lang/NullPointerException."<init>":()V
        11: athrow
        12: return
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */
      LineNumberTable:
        line 68: 0
        line 69: 4
        line 70: 12

  static boolean isNullOrEmpty(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnull        11
         4: aload_0
         5: invokevirtual #47                 // Method java/lang/String.isEmpty:()Z
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 11 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 73: 0

  static java.lang.String defaultIfNullOrEmpty(java.lang.String, java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_2
         1: invokestatic  #51                 // Method requireNonNull:(Ljava/lang/Object;)V
         4: aload_0
         5: invokestatic  #53                 // Method isNullOrEmpty:(Ljava/lang/String;)Z
         8: ifeq          17
        11: aload_1
        12: aload_2
        13: invokestatic  #57                 // Method ensureSingleSlash:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        16: areturn
        17: aload_0
        18: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
      LineNumberTable:
        line 77: 0
        line 78: 4
        line 79: 11
        line 81: 17

  static java.lang.String defaultIfNullOrEmptyExtended(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_1
         1: invokestatic  #51                 // Method requireNonNull:(Ljava/lang/Object;)V
         4: aload_2
         5: invokestatic  #51                 // Method requireNonNull:(Ljava/lang/Object;)V
         8: aload_3
         9: invokestatic  #51                 // Method requireNonNull:(Ljava/lang/Object;)V
        12: aload_0
        13: invokestatic  #53                 // Method isNullOrEmpty:(Ljava/lang/String;)Z
        16: ifeq          25
        19: aload_2
        20: aload_3
        21: invokestatic  #57                 // Method ensureSingleSlash:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        24: areturn
        25: aload_0
        26: aload_1
        27: invokestatic  #57                 // Method ensureSingleSlash:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        30: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 25 /* same */
      LineNumberTable:
        line 85: 0
        line 86: 4
        line 87: 8
        line 88: 12
        line 89: 19
        line 91: 25

  static java.lang.String ensureSingleSlash(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=5, locals=5, args_size=2
         0: aload_0
         1: ldc           #61                 // String /
         3: invokevirtual #64                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
         6: istore_2
         7: aload_1
         8: ldc           #61                 // String /
        10: invokevirtual #67                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        13: istore_3
        14: iload_2
        15: ifeq          66
        18: iload_3
        19: ifeq          66
        22: new           #69                 // class java/lang/StringBuilder
        25: dup
        26: aload_0
        27: invokevirtual #73                 // Method java/lang/String.length:()I
        30: aload_1
        31: invokevirtual #73                 // Method java/lang/String.length:()I
        34: iadd
        35: iconst_1
        36: isub
        37: invokespecial #76                 // Method java/lang/StringBuilder."<init>":(I)V
        40: astore        4
        42: aload         4
        44: aload_0
        45: iconst_0
        46: aload_0
        47: invokevirtual #73                 // Method java/lang/String.length:()I
        50: iconst_1
        51: isub
        52: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
        55: aload_1
        56: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        59: pop
        60: aload         4
        62: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        65: areturn
        66: iload_2
        67: ifne          98
        70: iload_3
        71: ifne          98
        74: new           #69                 // class java/lang/StringBuilder
        77: dup
        78: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
        81: aload_0
        82: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        85: bipush        47
        87: invokevirtual #91                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        90: aload_1
        91: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        94: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        97: areturn
        98: new           #69                 // class java/lang/StringBuilder
       101: dup
       102: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
       105: aload_0
       106: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       109: aload_1
       110: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       113: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       116: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 66
          locals = [ int, int ]
        frame_type = 31 /* same */
      LineNumberTable:
        line 95: 0
        line 96: 7
        line 97: 14
        line 98: 22
        line 99: 42
        line 100: 60
        line 101: 66
        line 102: 74
        line 104: 98

  static java.lang.String linuxRuntimeDir(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: ldc           #95                 // String XDG_RUNTIME_DIR
         2: invokestatic  #100                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
         5: astore_1
         6: aload_1
         7: invokestatic  #53                 // Method isNullOrEmpty:(Ljava/lang/String;)Z
        10: ifeq          15
        13: aconst_null
        14: areturn
        15: aload_0
        16: ifnonnull     21
        19: aload_1
        20: areturn
        21: new           #69                 // class java/lang/StringBuilder
        24: dup
        25: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
        28: aload_1
        29: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: bipush        47
        34: invokevirtual #91                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        37: aload_0
        38: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        44: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ class java/lang/String ]
        frame_type = 5 /* same */
      LineNumberTable:
        line 109: 0
        line 110: 6
        line 111: 13
        line 112: 15
        line 113: 19
        line 115: 21

  static java.lang.String linuxExecutableDir(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=3, args_size=2
         0: ldc           #103                // String XDG_BIN_HOME
         2: invokestatic  #100                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
         5: astore_2
         6: aload_2
         7: invokestatic  #53                 // Method isNullOrEmpty:(Ljava/lang/String;)Z
        10: ifeq          23
        13: aload_1
        14: ldc           #105                // String /../bin/
        16: aload_0
        17: ldc           #107                // String /.local/bin/
        19: invokestatic  #109                // Method defaultIfNullOrEmptyExtended:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        22: areturn
        23: aload_2
        24: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class java/lang/String ]
      LineNumberTable:
        line 119: 0
        line 120: 6
        line 121: 13
        line 123: 23

  static java.lang.String[] getXDGUserDirs(java.lang.String...);
    descriptor: ([Ljava/lang/String;)[Ljava/lang/String;
    flags: (0x0088) ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=5, args_size=1
         0: aload_0
         1: arraylength
         2: istore_1
         3: new           #69                 // class java/lang/StringBuilder
         6: dup
         7: iload_1
         8: bipush        22
        10: imul
        11: invokespecial #76                 // Method java/lang/StringBuilder."<init>":(I)V
        14: astore_2
        15: iconst_3
        16: anewarray     #43                 // class java/lang/String
        19: astore_3
        20: aload_3
        21: iconst_0
        22: ldc           #115                // String /bin/sh
        24: aastore
        25: aload_3
        26: iconst_1
        27: ldc           #117                // String -c
        29: aastore
        30: iconst_0
        31: istore        4
        33: iload         4
        35: iload_1
        36: if_icmpge     68
        39: aload_2
        40: ldc           #121                // String xdg-user-dir
        42: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: pop
        46: aload_2
        47: aload_0
        48: iload         4
        50: aaload
        51: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        54: pop
        55: aload_2
        56: bipush        59
        58: invokevirtual #91                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        61: pop
        62: iinc          4, 1
        65: goto          33
        68: aload_3
        69: iconst_2
        70: aload_2
        71: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        74: aastore
        75: iload_1
        76: invokestatic  #127                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
        79: aload_3
        80: invokestatic  #131                // Method runCommands:(ILjava/nio/charset/Charset;[Ljava/lang/String;)[Ljava/lang/String;
        83: areturn
        84: astore        4
        86: new           #133                // class java/lang/RuntimeException
        89: dup
        90: aload         4
        92: invokespecial #136                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
        95: athrow
      Exception table:
         from    to  target type
            75    83    84   Class java/io/IOException
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class "[Ljava/lang/String;", int, class java/lang/StringBuilder, class "[Ljava/lang/String;", int ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 34
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
      LineNumberTable:
        line 127: 0
        line 128: 3
        line 129: 15
        line 130: 20
        line 131: 25
        line 132: 30
        line 133: 39
        line 134: 46
        line 135: 55
        line 132: 62
        line 137: 68
        line 139: 75
        line 140: 84
        line 141: 86

  static java.lang.String[] getWinDirs(java.lang.String...);
    descriptor: ([Ljava/lang/String;)[Ljava/lang/String;
    flags: (0x0088) ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=7, args_size=1
         0: aload_0
         1: arraylength
         2: istore_1
         3: new           #69                 // class java/lang/StringBuilder
         6: dup
         7: iload_1
         8: bipush        68
        10: imul
        11: invokespecial #76                 // Method java/lang/StringBuilder."<init>":(I)V
        14: astore_2
        15: iconst_0
        16: istore_3
        17: iload_3
        18: iload_1
        19: if_icmpge     50
        22: aload_2
        23: ldc           #139                // String [Dir]::GetKnownFolderPath(\"
        25: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_2
        30: aload_0
        31: iload_3
        32: aaload
        33: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: pop
        37: aload_2
        38: ldc           #141                // String \")\n
        40: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: pop
        44: iinc          3, 1
        47: goto          17
        50: new           #69                 // class java/lang/StringBuilder
        53: dup
        54: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
        57: getstatic     #143                // Field SCRIPT_START_BASE64:Ljava/lang/String;
        60: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        63: new           #69                 // class java/lang/StringBuilder
        66: dup
        67: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
        70: aload_2
        71: invokevirtual #146                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        74: ldc           #148                // String }
        76: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        82: invokestatic  #151                // Method toUTF16LEBase64:(Ljava/lang/String;)Ljava/lang/String;
        85: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        88: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        91: astore_3
        92: ldc           #153                // String Path
        94: invokestatic  #100                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
        97: astore        4
        99: aload         4
       101: ifnonnull     111
       104: iconst_0
       105: anewarray     #43                 // class java/lang/String
       108: goto          119
       111: aload         4
       113: getstatic     #158                // Field java/io/File.pathSeparator:Ljava/lang/String;
       116: invokevirtual #162                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       119: astore        5
       121: aload         5
       123: arraylength
       124: ifne          133
       127: iload_1
       128: aload_3
       129: invokestatic  #166                // Method windowsFallback:(ILjava/lang/String;)[Ljava/lang/String;
       132: areturn
       133: iload_1
       134: aload         5
       136: aload_3
       137: invokestatic  #170                // Method runWinCommands:(I[Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
       140: areturn
       141: astore        6
       143: iload_1
       144: aload_3
       145: invokestatic  #166                // Method windowsFallback:(ILjava/lang/String;)[Ljava/lang/String;
       148: areturn
      Exception table:
         from    to  target type
           133   140   141   Class java/io/IOException
      StackMapTable: number_of_entries = 6
        frame_type = 254 /* append */
          offset_delta = 17
          locals = [ int, class java/lang/StringBuilder, int ]
        frame_type = 250 /* chop */
          offset_delta = 32
        frame_type = 253 /* append */
          offset_delta = 60
          locals = [ class java/lang/String, class java/lang/String ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class "[Ljava/lang/String;" ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class "[Ljava/lang/String;" ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
      LineNumberTable:
        line 146: 0
        line 147: 3
        line 148: 15
        line 149: 22
        line 150: 29
        line 151: 37
        line 148: 44
        line 154: 50
        line 155: 92
        line 156: 99
        line 157: 121
        line 158: 127
        line 161: 133
        line 162: 141
        line 163: 143

  private static java.lang.String toUTF16LEBase64(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=6, locals=3, args_size=1
         0: aload_0
         1: ldc           #174                // String UTF-16LE
         3: invokestatic  #178                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
         6: invokevirtual #182                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
         9: astore_1
        10: getstatic     #184                // Field base64EncodeMethod:Ljava/lang/reflect/Method;
        13: ifnonnull     19
        16: invokestatic  #187                // Method initBase64Encoding:()V
        19: getstatic     #184                // Field base64EncodeMethod:Ljava/lang/reflect/Method;
        22: getstatic     #191                // Field base64Encoder:Ljava/lang/Object;
        25: iconst_1
        26: anewarray     #4                  // class java/lang/Object
        29: dup
        30: iconst_0
        31: aload_1
        32: aastore
        33: invokevirtual #197                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
        36: checkcast     #43                 // class java/lang/String
        39: areturn
        40: astore_2
        41: new           #133                // class java/lang/RuntimeException
        44: dup
        45: ldc           #199                // String Base64 encoding failed!
        47: aload_2
        48: invokespecial #202                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
        51: athrow
      Exception table:
         from    to  target type
            19    39    40   Class java/lang/Exception
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class "[B" ]
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
      LineNumberTable:
        line 168: 0
        line 169: 10
        line 170: 16
        line 173: 19
        line 174: 40
        line 175: 41

  private static void initBase64Encoding();
    descriptor: ()V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=6, locals=2, args_size=0
         0: ldc           #204                // String java.util.Base64
         2: invokestatic  #209                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
         5: ldc           #211                // String getEncoder
         7: iconst_0
         8: anewarray     #206                // class java/lang/Class
        11: invokevirtual #215                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
        14: aconst_null
        15: iconst_0
        16: anewarray     #4                  // class java/lang/Object
        19: invokevirtual #197                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
        22: putstatic     #191                // Field base64Encoder:Ljava/lang/Object;
        25: getstatic     #191                // Field base64Encoder:Ljava/lang/Object;
        28: invokevirtual #219                // Method java/lang/Object.getClass:()Ljava/lang/Class;
        31: ldc           #221                // String encodeToString
        33: iconst_1
        34: anewarray     #206                // class java/lang/Class
        37: dup
        38: iconst_0
        39: ldc           #189                // class "[B"
        41: aastore
        42: invokevirtual #215                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
        45: putstatic     #184                // Field base64EncodeMethod:Ljava/lang/reflect/Method;
        48: goto          114
        51: astore_0
        52: ldc           #223                // String sun.misc.BASE64Encoder
        54: invokestatic  #209                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
        57: ldc           #225                // String encode
        59: iconst_1
        60: anewarray     #206                // class java/lang/Class
        63: dup
        64: iconst_0
        65: ldc           #189                // class "[B"
        67: aastore
        68: invokevirtual #215                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
        71: putstatic     #184                // Field base64EncodeMethod:Ljava/lang/reflect/Method;
        74: goto          114
        77: astore_1
        78: new           #133                // class java/lang/RuntimeException
        81: dup
        82: new           #69                 // class java/lang/StringBuilder
        85: dup
        86: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
        89: ldc           #227                // String Could not find any viable Base64 encoder! (java.util.Base64 failed with:
        91: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        94: aload_0
        95: invokevirtual #230                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
        98: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       101: ldc           #232                // String )
       103: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       106: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       109: aload_1
       110: invokespecial #202                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       113: athrow
       114: return
      Exception table:
         from    to  target type
             0    48    51   Class java/lang/Exception
            52    74    77   Class java/lang/Exception
      StackMapTable: number_of_entries = 3
        frame_type = 115 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class java/lang/Exception ]
          stack = [ class java/lang/Exception ]
        frame_type = 250 /* chop */
          offset_delta = 36
      LineNumberTable:
        line 181: 0
        line 182: 25
        line 190: 48
        line 183: 51
        line 185: 52
        line 189: 74
        line 186: 77
        line 187: 78
        line 188: 95
        line 191: 114

  private static java.lang.String[] runCommands(int, java.nio.charset.Charset, java.lang.String...) throws java.io.IOException;
    descriptor: (ILjava/nio/charset/Charset;[Ljava/lang/String;)[Ljava/lang/String;
    flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS
    Code:
      stack=6, locals=10, args_size=3
         0: new           #234                // class java/lang/ProcessBuilder
         3: dup
         4: aload_2
         5: invokespecial #237                // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
         8: invokevirtual #241                // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
        11: astore_3
        12: iload_0
        13: anewarray     #43                 // class java/lang/String
        16: astore        4
        18: new           #243                // class java/io/BufferedReader
        21: dup
        22: new           #245                // class java/io/InputStreamReader
        25: dup
        26: aload_3
        27: invokevirtual #251                // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
        30: aload_1
        31: invokespecial #254                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
        34: invokespecial #257                // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
        37: astore        5
        39: iconst_0
        40: istore        6
        42: iload         6
        44: iload_0
        45: if_icmpge     108
        48: aload         5
        50: invokevirtual #260                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
        53: astore        7
        55: iload         6
        57: ifne          95
        60: getstatic     #262                // Field operatingSystem:C
        63: bipush        119
        65: if_icmpne     95
        68: aload         7
        70: ifnull        95
        73: aload         7
        75: ldc           #22                 // String ﻿
        77: invokevirtual #67                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        80: ifeq          95
        83: aload         7
        85: ldc           #22                 // String ﻿
        87: invokevirtual #73                 // Method java/lang/String.length:()I
        90: invokevirtual #266                // Method java/lang/String.substring:(I)Ljava/lang/String;
        93: astore        7
        95: aload         4
        97: iload         6
        99: aload         7
       101: aastore
       102: iinc          6, 1
       105: goto          42
       108: aload         4
       110: astore        6
       112: aload_3
       113: invokevirtual #269                // Method java/lang/Process.destroy:()V
       116: aload         5
       118: invokevirtual #272                // Method java/io/BufferedReader.close:()V
       121: goto          131
       124: astore        7
       126: aload         7
       128: invokevirtual #275                // Method java/io/IOException.printStackTrace:()V
       131: aload         6
       133: areturn
       134: astore        8
       136: aload_3
       137: invokevirtual #269                // Method java/lang/Process.destroy:()V
       140: aload         5
       142: invokevirtual #272                // Method java/io/BufferedReader.close:()V
       145: goto          155
       148: astore        9
       150: aload         9
       152: invokevirtual #275                // Method java/io/IOException.printStackTrace:()V
       155: aload         8
       157: athrow
      Exception table:
         from    to  target type
           116   121   124   Class java/io/IOException
            39   112   134   any
           140   145   148   Class java/io/IOException
           134   136   134   any
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ int, class java/nio/charset/Charset, class "[Ljava/lang/String;", class java/lang/Process, class "[Ljava/lang/String;", class java/io/BufferedReader, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 52
          locals = [ class java/lang/String ]
        frame_type = 249 /* chop */
          offset_delta = 12
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ int, class java/nio/charset/Charset, class "[Ljava/lang/String;", class java/lang/Process, class "[Ljava/lang/String;", class java/io/BufferedReader, class "[Ljava/lang/String;" ]
          stack = [ class java/io/IOException ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ int, class java/nio/charset/Charset, class "[Ljava/lang/String;", class java/lang/Process, class "[Ljava/lang/String;", class java/io/BufferedReader ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ int, class java/nio/charset/Charset, class "[Ljava/lang/String;", class java/lang/Process, class "[Ljava/lang/String;", class java/io/BufferedReader, top, top, class java/lang/Throwable ]
          stack = [ class java/io/IOException ]
        frame_type = 6 /* same */
      LineNumberTable:
        line 194: 0
        line 196: 12
        line 197: 18
        line 199: 39
        line 200: 48
        line 201: 55
        line 202: 83
        line 203: 95
        line 199: 102
        line 205: 108
        line 207: 112
        line 209: 116
        line 212: 121
        line 210: 124
        line 211: 126
        line 205: 131
        line 207: 134
        line 209: 140
        line 212: 145
        line 210: 148
        line 211: 150
        line 213: 155
    Exceptions:
      throws java.io.IOException

  private static java.lang.String[] runWinCommands(int, java.lang.String[], java.lang.String) throws java.io.IOException;
    descriptor: (I[Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=6, locals=15, args_size=3
         0: iconst_2
         1: anewarray     #43                 // class java/lang/String
         4: dup
         5: iconst_0
         6: ldc_w         #279                // String powershell.exe
         9: aastore
        10: dup
        11: iconst_1
        12: ldc_w         #281                // String pwsh.exe
        15: aastore
        16: astore_3
        17: aconst_null
        18: astore        4
        20: aload_1
        21: astore        5
        23: aload         5
        25: arraylength
        26: istore        6
        28: iconst_0
        29: istore        7
        31: iload         7
        33: iload         6
        35: if_icmpge     225
        38: aload         5
        40: iload         7
        42: aaload
        43: astore        8
        45: aload_3
        46: astore        9
        48: aload         9
        50: arraylength
        51: istore        10
        53: iconst_0
        54: istore        11
        56: iload         11
        58: iload         10
        60: if_icmpge     219
        63: aload         9
        65: iload         11
        67: aaload
        68: astore        12
        70: new           #155                // class java/io/File
        73: dup
        74: aload         8
        76: aload         12
        78: invokespecial #284                // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
        81: astore        13
        83: aload         13
        85: invokevirtual #287                // Method java/io/File.exists:()Z
        88: ifeq          213
        91: iload_0
        92: ldc_w         #289                // String UTF-8
        95: invokestatic  #178                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
        98: bipush        6
       100: anewarray     #43                 // class java/lang/String
       103: dup
       104: iconst_0
       105: aload         13
       107: invokevirtual #290                // Method java/io/File.toString:()Ljava/lang/String;
       110: aastore
       111: dup
       112: iconst_1
       113: ldc_w         #292                // String -version
       116: aastore
       117: dup
       118: iconst_2
       119: ldc_w         #294                // String 2
       122: aastore
       123: dup
       124: iconst_3
       125: ldc_w         #296                // String -NoProfile
       128: aastore
       129: dup
       130: iconst_4
       131: ldc_w         #298                // String -EncodedCommand
       134: aastore
       135: dup
       136: iconst_5
       137: aload_2
       138: aastore
       139: invokestatic  #131                // Method runCommands:(ILjava/nio/charset/Charset;[Ljava/lang/String;)[Ljava/lang/String;
       142: astore        14
       144: aload         14
       146: iconst_0
       147: aaload
       148: ifnull        154
       151: aload         14
       153: areturn
       154: iload_0
       155: ldc_w         #289                // String UTF-8
       158: invokestatic  #178                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       161: iconst_4
       162: anewarray     #43                 // class java/lang/String
       165: dup
       166: iconst_0
       167: aload         13
       169: invokevirtual #290                // Method java/io/File.toString:()Ljava/lang/String;
       172: aastore
       173: dup
       174: iconst_1
       175: ldc_w         #296                // String -NoProfile
       178: aastore
       179: dup
       180: iconst_2
       181: ldc_w         #298                // String -EncodedCommand
       184: aastore
       185: dup
       186: iconst_3
       187: aload_2
       188: aastore
       189: invokestatic  #131                // Method runCommands:(ILjava/nio/charset/Charset;[Ljava/lang/String;)[Ljava/lang/String;
       192: astore        14
       194: aload         14
       196: areturn
       197: astore        14
       199: aload         4
       201: ifnonnull     209
       204: aload         14
       206: goto          211
       209: aload         4
       211: astore        4
       213: iinc          11, 1
       216: goto          56
       219: iinc          7, 1
       222: goto          31
       225: aload         4
       227: ifnull        233
       230: aload         4
       232: athrow
       233: new           #113                // class java/io/IOException
       236: dup
       237: ldc_w         #300                // String no directories
       240: invokespecial #303                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       243: athrow
      Exception table:
         from    to  target type
            91   153   197   Class java/io/IOException
           154   196   197   Class java/io/IOException
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ int, class "[Ljava/lang/String;", class java/lang/String, class "[Ljava/lang/String;", class java/io/IOException, class "[Ljava/lang/String;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ int, class "[Ljava/lang/String;", class java/lang/String, class "[Ljava/lang/String;", class java/io/IOException, class "[Ljava/lang/String;", int, int, class java/lang/String, class "[Ljava/lang/String;", int, int ]
          stack = []
        frame_type = 254 /* append */
          offset_delta = 97
          locals = [ class java/lang/String, class java/io/File, class "[Ljava/lang/String;" ]
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ int, class "[Ljava/lang/String;", class java/lang/String, class "[Ljava/lang/String;", class java/io/IOException, class "[Ljava/lang/String;", int, int, class java/lang/String, class "[Ljava/lang/String;", int, int, class java/lang/String, class java/io/File ]
          stack = [ class java/io/IOException ]
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ class java/io/IOException ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 248 /* chop */
          offset_delta = 1
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ int, class "[Ljava/lang/String;", class java/lang/String, class "[Ljava/lang/String;", class java/io/IOException, class "[Ljava/lang/String;", int, int ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 7 /* same */
      LineNumberTable:
        line 218: 0
        line 219: 17
        line 220: 20
        line 221: 45
        line 222: 70
        line 223: 83
        line 230: 91
        line 231: 107
        line 230: 139
        line 238: 144
        line 241: 154
        line 242: 169
        line 241: 189
        line 247: 194
        line 248: 197
        line 249: 199
        line 221: 213
        line 220: 219
        line 254: 225
        line 255: 230
        line 257: 233
    Exceptions:
      throws java.io.IOException

  private static java.lang.String[] windowsFallback(int, java.lang.String);
    descriptor: (ILjava/lang/String;)[Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=7, locals=7, args_size=2
         0: new           #155                // class java/io/File
         3: dup
         4: ldc_w         #305                // String C:\\Program Files\\Powershell
         7: invokespecial #306                // Method java/io/File."<init>":(Ljava/lang/String;)V
        10: astore_2
        11: aload_2
        12: invokevirtual #310                // Method java/io/File.list:()[Ljava/lang/String;
        15: astore_3
        16: aload_3
        17: ifnonnull     25
        20: iconst_0
        21: anewarray     #43                 // class java/lang/String
        24: astore_3
        25: aload_3
        26: arraylength
        27: iconst_1
        28: iadd
        29: anewarray     #43                 // class java/lang/String
        32: astore        4
        34: ldc_w         #312                // String SystemRoot
        37: invokestatic  #100                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
        40: astore        5
        42: aload         5
        44: ifnonnull     52
        47: ldc_w         #314                // String C:\\Windows
        50: astore        5
        52: aload         4
        54: iconst_0
        55: new           #69                 // class java/lang/StringBuilder
        58: dup
        59: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
        62: aload         5
        64: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        67: ldc_w         #316                // String \\System32\\WindowsPowerShell\\v1.0\\
        70: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        73: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        76: aastore
        77: iconst_0
        78: istore        6
        80: iload         6
        82: aload_3
        83: arraylength
        84: if_icmpge     115
        87: aload         4
        89: iload         6
        91: iconst_1
        92: iadd
        93: new           #155                // class java/io/File
        96: dup
        97: aload_2
        98: aload_3
        99: iload         6
       101: aaload
       102: invokespecial #319                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
       105: invokevirtual #290                // Method java/io/File.toString:()Ljava/lang/String;
       108: aastore
       109: iinc          6, 1
       112: goto          80
       115: iload_0
       116: aload         4
       118: aload_1
       119: invokestatic  #170                // Method runWinCommands:(I[Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
       122: areturn
       123: astore        6
       125: new           #133                // class java/lang/RuntimeException
       128: dup
       129: ldc_w         #321                // String Couldn\'t find pwsh.exe or powershell.exe on path or in default system locations
       132: aload         6
       134: invokespecial #202                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       137: athrow
      Exception table:
         from    to  target type
           115   122   123   Class java/io/IOException
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ class java/io/File, class "[Ljava/lang/String;" ]
        frame_type = 253 /* append */
          offset_delta = 26
          locals = [ class "[Ljava/lang/String;", class java/lang/String ]
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 34
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
      LineNumberTable:
        line 261: 0
        line 262: 11
        line 263: 16
        line 264: 20
        line 266: 25
        line 269: 34
        line 270: 42
        line 271: 47
        line 273: 52
        line 275: 77
        line 276: 87
        line 275: 109
        line 279: 115
        line 280: 123
        line 281: 125

  static java.lang.String macOSApplicationPath(java.lang.String, java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=7, args_size=3
         0: new           #69                 // class java/lang/StringBuilder
         3: dup
         4: aload_0
         5: invokestatic  #326                // Method stringLength:(Ljava/lang/String;)I
         8: aload_1
         9: invokestatic  #326                // Method stringLength:(Ljava/lang/String;)I
        12: iadd
        13: aload_2
        14: invokestatic  #326                // Method stringLength:(Ljava/lang/String;)I
        17: iadd
        18: iconst_0
        19: invokestatic  #332                // Method java/lang/Math.max:(II)I
        22: invokespecial #76                 // Method java/lang/StringBuilder."<init>":(I)V
        25: astore_3
        26: aload_0
        27: invokestatic  #53                 // Method isNullOrEmpty:(Ljava/lang/String;)Z
        30: ifne          37
        33: iconst_1
        34: goto          38
        37: iconst_0
        38: istore        4
        40: aload_1
        41: invokestatic  #53                 // Method isNullOrEmpty:(Ljava/lang/String;)Z
        44: ifne          51
        47: iconst_1
        48: goto          52
        51: iconst_0
        52: istore        5
        54: aload_2
        55: invokestatic  #53                 // Method isNullOrEmpty:(Ljava/lang/String;)Z
        58: ifne          65
        61: iconst_1
        62: goto          66
        65: iconst_0
        66: istore        6
        68: iload         4
        70: ifeq          103
        73: aload_3
        74: aload_0
        75: ldc_w         #334                // String -
        78: iconst_0
        79: invokestatic  #338                // Method trimLowercaseReplaceWhitespace:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
        82: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        85: pop
        86: iload         5
        88: ifne          96
        91: iload         6
        93: ifeq          103
        96: aload_3
        97: bipush        46
        99: invokevirtual #91                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       102: pop
       103: iload         5
       105: ifeq          133
       108: aload_3
       109: aload_1
       110: ldc_w         #334                // String -
       113: iconst_0
       114: invokestatic  #338                // Method trimLowercaseReplaceWhitespace:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
       117: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       120: pop
       121: iload         6
       123: ifeq          133
       126: aload_3
       127: bipush        46
       129: invokevirtual #91                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       132: pop
       133: iload         6
       135: ifeq          151
       138: aload_3
       139: aload_2
       140: ldc_w         #334                // String -
       143: iconst_0
       144: invokestatic  #338                // Method trimLowercaseReplaceWhitespace:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
       147: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       150: pop
       151: aload_3
       152: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       155: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class java/lang/StringBuilder ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 29 /* same */
        frame_type = 17 /* same */
      LineNumberTable:
        line 286: 0
        line 287: 26
        line 288: 40
        line 289: 54
        line 290: 68
        line 291: 73
        line 292: 86
        line 293: 96
        line 295: 103
        line 296: 108
        line 297: 121
        line 298: 126
        line 300: 133
        line 301: 138
        line 302: 151

  static java.lang.String windowsApplicationPath(java.lang.String, java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=6, args_size=3
         0: new           #69                 // class java/lang/StringBuilder
         3: dup
         4: aload_1
         5: invokestatic  #326                // Method stringLength:(Ljava/lang/String;)I
         8: aload_2
         9: invokestatic  #326                // Method stringLength:(Ljava/lang/String;)I
        12: iadd
        13: iconst_0
        14: invokestatic  #332                // Method java/lang/Math.max:(II)I
        17: invokespecial #76                 // Method java/lang/StringBuilder."<init>":(I)V
        20: astore_3
        21: aload_1
        22: invokestatic  #53                 // Method isNullOrEmpty:(Ljava/lang/String;)Z
        25: ifne          32
        28: iconst_1
        29: goto          33
        32: iconst_0
        33: istore        4
        35: aload_2
        36: invokestatic  #53                 // Method isNullOrEmpty:(Ljava/lang/String;)Z
        39: ifne          46
        42: iconst_1
        43: goto          47
        46: iconst_0
        47: istore        5
        49: iload         4
        51: ifeq          72
        54: aload_3
        55: aload_1
        56: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        59: pop
        60: iload         5
        62: ifeq          72
        65: aload_3
        66: bipush        92
        68: invokevirtual #91                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        71: pop
        72: iload         5
        74: ifeq          83
        77: aload_3
        78: aload_2
        79: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        82: pop
        83: aload_3
        84: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        87: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ class java/lang/StringBuilder ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 10 /* same */
      LineNumberTable:
        line 306: 0
        line 307: 21
        line 308: 35
        line 309: 49
        line 310: 54
        line 311: 60
        line 312: 65
        line 314: 72
        line 315: 77
        line 316: 83

  static java.lang.String stripQualification(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: bipush        46
         3: invokevirtual #344                // Method java/lang/String.lastIndexOf:(I)I
         6: iconst_1
         7: iadd
         8: istore_1
         9: aload_0
        10: iload_1
        11: invokevirtual #266                // Method java/lang/String.substring:(I)Ljava/lang/String;
        14: areturn
      LineNumberTable:
        line 320: 0
        line 321: 9

  static int stringLength(java.lang.String);
    descriptor: (Ljava/lang/String;)I
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: iconst_m1
         5: ireturn
         6: aload_0
         7: invokevirtual #73                 // Method java/lang/String.length:()I
        10: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 325: 0
        line 326: 4
        line 328: 6

  static java.lang.String trimLowercaseReplaceWhitespace(java.lang.String, java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=9, args_size=3
         0: new           #69                 // class java/lang/StringBuilder
         3: dup
         4: aload_0
         5: invokevirtual #73                 // Method java/lang/String.length:()I
         8: invokespecial #76                 // Method java/lang/StringBuilder."<init>":(I)V
        11: astore_3
        12: iconst_0
        13: istore        4
        15: aload_0
        16: iconst_0
        17: aload_0
        18: invokevirtual #73                 // Method java/lang/String.length:()I
        21: invokevirtual #347                // Method java/lang/String.codePointCount:(II)I
        24: istore        5
        26: aload_1
        27: invokevirtual #47                 // Method java/lang/String.isEmpty:()Z
        30: ifne          37
        33: iconst_1
        34: goto          38
        37: iconst_0
        38: istore        6
        40: iconst_0
        41: istore        7
        43: iload         7
        45: iload         5
        47: if_icmpge     129
        50: aload_0
        51: iload         7
        53: invokevirtual #350                // Method java/lang/String.codePointAt:(I)I
        56: istore        8
        58: iload         8
        60: bipush        32
        62: if_icmpne     101
        65: iload         4
        67: ifeq          123
        70: iload         6
        72: ifeq          123
        75: aload_0
        76: iload         5
        78: iload         7
        80: iconst_1
        81: iadd
        82: invokestatic  #354                // Method codePointExistsAndNotSpace:(Ljava/lang/String;II)Z
        85: ifeq          123
        88: aload_3
        89: bipush        45
        91: invokevirtual #91                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        94: pop
        95: iconst_0
        96: istore        4
        98: goto          123
       101: aload_3
       102: iload_2
       103: ifeq          114
       106: iload         8
       108: invokestatic  #359                // Method java/lang/Character.toLowerCase:(I)I
       111: goto          116
       114: iload         8
       116: invokevirtual #363                // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
       119: pop
       120: iconst_1
       121: istore        4
       123: iinc          7, 1
       126: goto          43
       129: aload_3
       130: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       133: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 254 /* append */
          offset_delta = 37
          locals = [ class java/lang/StringBuilder, int, int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 253 /* append */
          offset_delta = 4
          locals = [ int, int ]
        frame_type = 252 /* append */
          offset_delta = 57
          locals = [ int ]
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class java/lang/String, class java/lang/String, int, class java/lang/StringBuilder, int, int, int, int, int ]
          stack = [ class java/lang/StringBuilder, int ]
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 250 /* chop */
          offset_delta = 5
      LineNumberTable:
        line 332: 0
        line 333: 12
        line 334: 15
        line 335: 26
        line 336: 40
        line 337: 50
        line 338: 58
        line 339: 65
        line 340: 88
        line 341: 95
        line 344: 101
        line 345: 120
        line 336: 123
        line 348: 129

  private static boolean codePointExistsAndNotSpace(java.lang.String, int, int);
    descriptor: (Ljava/lang/String;II)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_2
         1: iload_1
         2: if_icmpge     19
         5: aload_0
         6: iload_2
         7: invokevirtual #350                // Method java/lang/String.codePointAt:(I)I
        10: bipush        32
        12: if_icmpeq     19
        15: iconst_1
        16: goto          20
        19: iconst_0
        20: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 19 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 352: 0

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=1, args_size=0
         0: ldc_w         #366                // String os.name
         3: invokestatic  #369                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
         6: putstatic     #371                // Field operatingSystemName:Ljava/lang/String;
         9: getstatic     #371                // Field operatingSystemName:Ljava/lang/String;
        12: getstatic     #377                // Field java/util/Locale.ROOT:Ljava/util/Locale;
        15: invokevirtual #380                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
        18: astore_0
        19: aload_0
        20: ldc_w         #382                // String linux
        23: invokevirtual #386                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        26: ifeq          37
        29: bipush        108
        31: putstatic     #262                // Field operatingSystem:C
        34: goto          139
        37: aload_0
        38: ldc_w         #388                // String mac
        41: invokevirtual #386                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        44: ifeq          55
        47: bipush        109
        49: putstatic     #262                // Field operatingSystem:C
        52: goto          139
        55: aload_0
        56: ldc_w         #390                // String windows
        59: invokevirtual #386                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        62: ifeq          73
        65: bipush        119
        67: putstatic     #262                // Field operatingSystem:C
        70: goto          139
        73: aload_0
        74: ldc_w         #392                // String bsd
        77: invokevirtual #386                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        80: ifeq          91
        83: bipush        98
        85: putstatic     #262                // Field operatingSystem:C
        88: goto          139
        91: aload_0
        92: ldc_w         #394                // String sunos
        95: invokevirtual #386                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        98: ifeq          109
       101: bipush        115
       103: putstatic     #262                // Field operatingSystem:C
       106: goto          139
       109: new           #396                // class coursier/cache/shaded/dirs/dev/dirs/UnsupportedOperatingSystemException
       112: dup
       113: new           #69                 // class java/lang/StringBuilder
       116: dup
       117: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
       120: ldc_w         #398                // String directories are not supported on
       123: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       126: getstatic     #371                // Field operatingSystemName:Ljava/lang/String;
       129: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       132: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       135: invokespecial #399                // Method coursier/cache/shaded/dirs/dev/dirs/UnsupportedOperatingSystemException."<init>":(Ljava/lang/String;)V
       138: athrow
       139: aconst_null
       140: putstatic     #191                // Field base64Encoder:Ljava/lang/Object;
       143: aconst_null
       144: putstatic     #184                // Field base64EncodeMethod:Ljava/lang/reflect/Method;
       147: getstatic     #262                // Field operatingSystem:C
       150: bipush        119
       152: if_icmpne     164
       155: ldc_w         #401                // String & {\n[Console]::OutputEncoding = [System.Text.Encoding]::UTF8\nAdd-Type @\"\nusing System;\nusing System.Runtime.InteropServices;\npublic class Dir {\n  [DllImport(\"shell32.dll\")]\n  private static extern int SHGetKnownFolderPath([MarshalAs(UnmanagedType.LPStruct)] Guid rfid, uint dwFlags, IntPtr hToken, out IntPtr pszPath);\n  public static string GetKnownFolderPath(string rfid) {\n    IntPtr pszPath;\n    if (SHGetKnownFolderPath(new Guid(rfid), 0, IntPtr.Zero, out pszPath) != 0) return \"\";\n    string path = Marshal.PtrToStringUni(pszPath);\n    Marshal.FreeCoTaskMem(pszPath);\n    return path;\n  }\n}\n\"@\n
       158: invokestatic  #151                // Method toUTF16LEBase64:(Ljava/lang/String;)Ljava/lang/String;
       161: goto          165
       164: aconst_null
       165: putstatic     #143                // Field SCRIPT_START_BASE64:Ljava/lang/String;
       168: return
      StackMapTable: number_of_entries = 8
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class java/lang/String ]
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 250 /* chop */
          offset_delta = 29
        frame_type = 24 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 18: 0
        line 29: 9
        line 30: 19
        line 31: 29
        line 32: 37
        line 33: 47
        line 34: 55
        line 35: 65
        line 36: 73
        line 37: 83
        line 38: 91
        line 39: 101
        line 41: 109
        line 44: 139
        line 45: 143
        line 49: 147
}
SourceFile: "Util.java"
