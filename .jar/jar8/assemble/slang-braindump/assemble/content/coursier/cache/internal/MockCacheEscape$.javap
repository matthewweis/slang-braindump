Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/cache/internal/MockCacheEscape$.class
  Last modified May 29, 2022; size 5953 bytes
  SHA-256 checksum 7daf02b43c68d0ee4d2e376ae1df54ba0ef97dea28bf516b79729d1352a14ee4
  Compiled from "MockCacheEscape.scala"
public final class coursier.cache.internal.MockCacheEscape$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/internal/MockCacheEscape$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 13, attributes: 5
Constant pool:
    #1 = Utf8               coursier/cache/internal/MockCacheEscape$
    #2 = Class              #1            // coursier/cache/internal/MockCacheEscape$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               MockCacheEscape.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/Array$UnapplySeqWrapper
   #12 = Class              #11           // scala/Array$UnapplySeqWrapper
   #13 = Utf8               scala/Array
   #14 = Class              #13           // scala/Array
   #15 = Utf8               UnapplySeqWrapper
   #16 = Utf8               scala/Array$UnapplySeqWrapper$
   #17 = Class              #16           // scala/Array$UnapplySeqWrapper$
   #18 = Utf8
   #19 = Utf8               MODULE$
   #20 = Utf8               Lcoursier/cache/internal/MockCacheEscape$;
   #21 = Utf8               unsafeChars
   #22 = Utf8               Lscala/collection/immutable/Set;
   #23 = Utf8               Lscala/collection/immutable/Set<Ljava/lang/Object;>;
   #24 = Utf8               <clinit>
   #25 = Utf8               ()V
   #26 = Utf8               <init>
   #27 = NameAndType        #26:#25       // "<init>":()V
   #28 = Methodref          #2.#27        // coursier/cache/internal/MockCacheEscape$."<init>":()V
   #29 = NameAndType        #19:#20       // MODULE$:Lcoursier/cache/internal/MockCacheEscape$;
   #30 = Fieldref           #2.#29        // coursier/cache/internal/MockCacheEscape$.MODULE$:Lcoursier/cache/internal/MockCacheEscape$;
   #31 = Utf8               scala/Predef$
   #32 = Class              #31           // scala/Predef$
   #33 = Utf8               Lscala/Predef$;
   #34 = NameAndType        #19:#33       // MODULE$:Lscala/Predef$;
   #35 = Fieldref           #32.#34       // scala/Predef$.MODULE$:Lscala/Predef$;
   #36 = Utf8                %$&+,:;=?@<>#
   #37 = String             #36           //  %$&+,:;=?@<>#
   #38 = Utf8               wrapString
   #39 = Utf8               (Ljava/lang/String;)Lscala/collection/immutable/WrappedString;
   #40 = NameAndType        #38:#39       // wrapString:(Ljava/lang/String;)Lscala/collection/immutable/WrappedString;
   #41 = Methodref          #32.#40       // scala/Predef$.wrapString:(Ljava/lang/String;)Lscala/collection/immutable/WrappedString;
   #42 = Utf8               scala/collection/immutable/WrappedString
   #43 = Class              #42           // scala/collection/immutable/WrappedString
   #44 = Utf8               toSet
   #45 = Utf8               ()Lscala/collection/immutable/Set;
   #46 = NameAndType        #44:#45       // toSet:()Lscala/collection/immutable/Set;
   #47 = Methodref          #43.#46       // scala/collection/immutable/WrappedString.toSet:()Lscala/collection/immutable/Set;
   #48 = NameAndType        #21:#22       // unsafeChars:Lscala/collection/immutable/Set;
   #49 = Fieldref           #2.#48        // coursier/cache/internal/MockCacheEscape$.unsafeChars:Lscala/collection/immutable/Set;
   #50 = Utf8               ()Lscala/collection/immutable/Set<Ljava/lang/Object;>;
   #51 = Utf8               this
   #52 = Utf8               escape
   #53 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #54 = Utf8               input
   #55 = Utf8               scala/collection/StringOps$
   #56 = Class              #55           // scala/collection/StringOps$
   #57 = Utf8               Lscala/collection/StringOps$;
   #58 = NameAndType        #19:#57       // MODULE$:Lscala/collection/StringOps$;
   #59 = Fieldref           #56.#58       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #60 = Utf8               augmentString
   #61 = NameAndType        #60:#53       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #62 = Methodref          #32.#61       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #63 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #64 = MethodType         #63           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #65 = Utf8               $anonfun$escape$1$adapted
   #66 = Utf8               (Lcoursier/cache/internal/MockCacheEscape$;Ljava/lang/Object;)Ljava/lang/String;
   #67 = NameAndType        #65:#66       // $anonfun$escape$1$adapted:(Lcoursier/cache/internal/MockCacheEscape$;Ljava/lang/Object;)Ljava/lang/String;
   #68 = Methodref          #2.#67        // coursier/cache/internal/MockCacheEscape$.$anonfun$escape$1$adapted:(Lcoursier/cache/internal/MockCacheEscape$;Ljava/lang/Object;)Ljava/lang/String;
   #69 = MethodHandle       6:#68         // REF_invokeStatic coursier/cache/internal/MockCacheEscape$.$anonfun$escape$1$adapted:(Lcoursier/cache/internal/MockCacheEscape$;Ljava/lang/Object;)Ljava/lang/String;
   #70 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #71 = MethodType         #70           //  (Ljava/lang/Object;)Ljava/lang/String;
   #72 = Integer            5
   #73 = Integer            1
   #74 = Utf8               java/lang/invoke/LambdaMetafactory
   #75 = Class              #74           // java/lang/invoke/LambdaMetafactory
   #76 = Utf8               altMetafactory
   #77 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #78 = NameAndType        #76:#77       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #79 = Methodref          #75.#78       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #80 = MethodHandle       6:#79         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #81 = Utf8               apply
   #82 = Utf8               (Lcoursier/cache/internal/MockCacheEscape$;)Lscala/Function1;
   #83 = NameAndType        #81:#82       // apply:(Lcoursier/cache/internal/MockCacheEscape$;)Lscala/Function1;
   #84 = InvokeDynamic      #0:#83        // #0:apply:(Lcoursier/cache/internal/MockCacheEscape$;)Lscala/Function1;
   #85 = Utf8               flatMap$extension
   #86 = Utf8               (Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
   #87 = NameAndType        #85:#86       // flatMap$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
   #88 = Methodref          #56.#87       // scala/collection/StringOps$.flatMap$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
   #89 = Utf8               Ljava/lang/String;
   #90 = Utf8               urlAsPath
   #91 = Utf8               url
   #92 = Utf8               file:/
   #93 = String             #92           // file:/
   #94 = Utf8               java/lang/String
   #95 = Class              #94           // java/lang/String
   #96 = Utf8               startsWith
   #97 = Utf8               (Ljava/lang/String;)Z
   #98 = NameAndType        #96:#97       // startsWith:(Ljava/lang/String;)Z
   #99 = Methodref          #95.#98       // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #100 = Utf8               ()Ljava/lang/Object;
  #101 = MethodType         #100          //  ()Ljava/lang/Object;
  #102 = Utf8               $anonfun$urlAsPath$1
  #103 = NameAndType        #102:#53      // $anonfun$urlAsPath$1:(Ljava/lang/String;)Ljava/lang/String;
  #104 = Methodref          #2.#103       // coursier/cache/internal/MockCacheEscape$.$anonfun$urlAsPath$1:(Ljava/lang/String;)Ljava/lang/String;
  #105 = MethodHandle       6:#104        // REF_invokeStatic coursier/cache/internal/MockCacheEscape$.$anonfun$urlAsPath$1:(Ljava/lang/String;)Ljava/lang/String;
  #106 = Utf8               ()Ljava/lang/String;
  #107 = MethodType         #106          //  ()Ljava/lang/String;
  #108 = Utf8               (Ljava/lang/String;)Lscala/Function0;
  #109 = NameAndType        #81:#108      // apply:(Ljava/lang/String;)Lscala/Function0;
  #110 = InvokeDynamic      #1:#109       // #1:apply:(Ljava/lang/String;)Lscala/Function0;
  #111 = Utf8               assert
  #112 = Utf8               (ZLscala/Function0;)V
  #113 = NameAndType        #111:#112     // assert:(ZLscala/Function0;)V
  #114 = Methodref          #32.#113      // scala/Predef$.assert:(ZLscala/Function0;)V
  #115 = Utf8               :
  #116 = String             #115          // :
  #117 = Utf8               split
  #118 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;
  #119 = NameAndType        #117:#118     // split:(Ljava/lang/String;I)[Ljava/lang/String;
  #120 = Methodref          #95.#119      // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
  #121 = Utf8               scala/Array$
  #122 = Class              #121          // scala/Array$
  #123 = Utf8               Lscala/Array$;
  #124 = NameAndType        #19:#123      // MODULE$:Lscala/Array$;
  #125 = Fieldref           #122.#124     // scala/Array$.MODULE$:Lscala/Array$;
  #126 = Utf8               unapplySeq
  #127 = NameAndType        #126:#63      // unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
  #128 = Methodref          #122.#127     // scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
  #129 = Utf8               Lscala/Array$UnapplySeqWrapper$;
  #130 = NameAndType        #19:#129      // MODULE$:Lscala/Array$UnapplySeqWrapper$;
  #131 = Fieldref           #17.#130      // scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
  #132 = Utf8               isEmpty$extension
  #133 = Utf8               (Ljava/lang/Object;)Z
  #134 = NameAndType        #132:#133     // isEmpty$extension:(Ljava/lang/Object;)Z
  #135 = Methodref          #17.#134      // scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
  #136 = Utf8               get$extension
  #137 = NameAndType        #136:#63      // get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #138 = Methodref          #17.#137      // scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #139 = Utf8               (Ljava/lang/Object;)V
  #140 = NameAndType        #26:#139      // "<init>":(Ljava/lang/Object;)V
  #141 = Methodref          #12.#140      // scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
  #142 = Utf8               lengthCompare$extension
  #143 = Utf8               (Ljava/lang/Object;I)I
  #144 = NameAndType        #142:#143     // lengthCompare$extension:(Ljava/lang/Object;I)I
  #145 = Methodref          #17.#144      // scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
  #146 = Utf8               apply$extension
  #147 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #148 = NameAndType        #146:#147     // apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #149 = Methodref          #17.#148      // scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #150 = Utf8               ///
  #151 = String             #150          // ///
  #152 = Utf8               stripPrefix$extension
  #153 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #154 = NameAndType        #152:#153     // stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #155 = Methodref          #56.#154      // scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #156 = Utf8               [Ljava/lang/String;
  #157 = Class              #156          // "[Ljava/lang/String;"
  #158 = Utf8               /
  #159 = String             #158          // /
  #160 = Utf8               java/lang/Exception
  #161 = Class              #160          // java/lang/Exception
  #162 = Utf8               java/lang/StringBuilder
  #163 = Class              #162          // java/lang/StringBuilder
  #164 = Integer            37
  #165 = Utf8               (I)V
  #166 = NameAndType        #26:#165      // "<init>":(I)V
  #167 = Methodref          #163.#166     // java/lang/StringBuilder."<init>":(I)V
  #168 = Utf8               URL
  #169 = String             #168          // URL
  #170 = Utf8               append
  #171 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #172 = NameAndType        #170:#171     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #173 = Methodref          #163.#172     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #174 = Utf8                doesn\'t contain an absolute path
  #175 = String             #174          //  doesn\'t contain an absolute path
  #176 = Utf8               toString
  #177 = NameAndType        #176:#106     // toString:()Ljava/lang/String;
  #178 = Methodref          #163.#177     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #179 = Utf8               (Ljava/lang/String;)V
  #180 = NameAndType        #26:#179      // "<init>":(Ljava/lang/String;)V
  #181 = Methodref          #161.#180     // java/lang/Exception."<init>":(Ljava/lang/String;)V
  #182 = Utf8               endsWith
  #183 = NameAndType        #182:#97      // endsWith:(Ljava/lang/String;)Z
  #184 = Methodref          #95.#183      // java/lang/String.endsWith:(Ljava/lang/String;)Z
  #185 = Integer            10
  #186 = Utf8               .directory
  #187 = String             #186          // .directory
  #188 = Utf8               $anonfun$urlAsPath$2$adapted
  #189 = NameAndType        #188:#63      // $anonfun$urlAsPath$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #190 = Methodref          #2.#189       // coursier/cache/internal/MockCacheEscape$.$anonfun$urlAsPath$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #191 = MethodHandle       6:#190        // REF_invokeStatic coursier/cache/internal/MockCacheEscape$.$anonfun$urlAsPath$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #192 = Utf8               ()Lscala/Function1;
  #193 = NameAndType        #81:#192      // apply:()Lscala/Function1;
  #194 = InvokeDynamic      #2:#193       // #2:apply:()Lscala/Function1;
  #195 = Utf8               dropWhile$extension
  #196 = NameAndType        #195:#86      // dropWhile$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #197 = Methodref          #56.#196      // scala/collection/StringOps$.dropWhile$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #198 = NameAndType        #52:#53       // escape:(Ljava/lang/String;)Ljava/lang/String;
  #199 = Methodref          #2.#198       // coursier/cache/internal/MockCacheEscape$.escape:(Ljava/lang/String;)Ljava/lang/String;
  #200 = Integer            25
  #201 = Utf8               No protocol found in URL
  #202 = String             #201          // No protocol found in URL
  #203 = Utf8               remaining0
  #204 = Utf8               remaining1
  #205 = Utf8               protocol
  #206 = Utf8               remaining
  #207 = Utf8               toHex$1
  #208 = Utf8               (I)C
  #209 = Utf8               ch
  #210 = Utf8               I
  #211 = Utf8               isUnsafe$1
  #212 = Utf8               (C)Z
  #213 = NameAndType        #21:#45       // unsafeChars:()Lscala/collection/immutable/Set;
  #214 = Methodref          #2.#213       // coursier/cache/internal/MockCacheEscape$.unsafeChars:()Lscala/collection/immutable/Set;
  #215 = Utf8               scala/runtime/BoxesRunTime
  #216 = Class              #215          // scala/runtime/BoxesRunTime
  #217 = Utf8               boxToCharacter
  #218 = Utf8               (C)Ljava/lang/Character;
  #219 = NameAndType        #217:#218     // boxToCharacter:(C)Ljava/lang/Character;
  #220 = Methodref          #216.#219     // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
  #221 = Utf8               scala/collection/immutable/Set
  #222 = Class              #221          // scala/collection/immutable/Set
  #223 = NameAndType        #81:#133      // apply:(Ljava/lang/Object;)Z
  #224 = InterfaceMethodref #222.#223     // scala/collection/immutable/Set.apply:(Ljava/lang/Object;)Z
  #225 = Utf8               C
  #226 = Utf8               $anonfun$escape$1
  #227 = Utf8               (Lcoursier/cache/internal/MockCacheEscape$;C)Ljava/lang/String;
  #228 = Utf8               $this
  #229 = Utf8               x0$1
  #230 = NameAndType        #211:#212     // isUnsafe$1:(C)Z
  #231 = Methodref          #2.#230       // coursier/cache/internal/MockCacheEscape$.isUnsafe$1:(C)Z
  #232 = Utf8               %
  #233 = String             #232          // %
  #234 = NameAndType        #207:#208     // toHex$1:(I)C
  #235 = Methodref          #2.#234       // coursier/cache/internal/MockCacheEscape$.toHex$1:(I)C
  #236 = Utf8               (C)Ljava/lang/StringBuilder;
  #237 = NameAndType        #170:#236     // append:(C)Ljava/lang/StringBuilder;
  #238 = Methodref          #163.#237     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #239 = Methodref          #4.#177       // java/lang/Object.toString:()Ljava/lang/String;
  #240 = Utf8               url$1
  #241 = Integer            14
  #242 = Utf8               Got file URL:
  #243 = String             #242          // Got file URL:
  #244 = Utf8               $anonfun$urlAsPath$2
  #245 = Utf8               x$1
  #246 = Methodref          #4.#27        // java/lang/Object."<init>":()V
  #247 = Utf8               unboxToChar
  #248 = Utf8               (Ljava/lang/Object;)C
  #249 = NameAndType        #247:#248     // unboxToChar:(Ljava/lang/Object;)C
  #250 = Methodref          #216.#249     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #251 = NameAndType        #226:#227     // $anonfun$escape$1:(Lcoursier/cache/internal/MockCacheEscape$;C)Ljava/lang/String;
  #252 = Methodref          #2.#251       // coursier/cache/internal/MockCacheEscape$.$anonfun$escape$1:(Lcoursier/cache/internal/MockCacheEscape$;C)Ljava/lang/String;
  #253 = Utf8               Ljava/lang/Object;
  #254 = NameAndType        #244:#212     // $anonfun$urlAsPath$2:(C)Z
  #255 = Methodref          #2.#254       // coursier/cache/internal/MockCacheEscape$.$anonfun$urlAsPath$2:(C)Z
  #256 = Utf8               boxToBoolean
  #257 = Utf8               (Z)Ljava/lang/Boolean;
  #258 = NameAndType        #256:#257     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #259 = Methodref          #216.#258     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #260 = Utf8               $deserializeLambda$
  #261 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #262 = Utf8               scala/runtime/LambdaDeserialize
  #263 = Class              #262          // scala/runtime/LambdaDeserialize
  #264 = Utf8               bootstrap
  #265 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #266 = NameAndType        #264:#265     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #267 = Methodref          #263.#266     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #268 = MethodHandle       6:#267        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #269 = Utf8               lambdaDeserialize
  #270 = NameAndType        #269:#261     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #271 = InvokeDynamic      #3:#270       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #272 = Utf8               Signature
  #273 = Utf8               Code
  #274 = Utf8               LineNumberTable
  #275 = Utf8               LocalVariableTable
  #276 = Utf8               MethodParameters
  #277 = Utf8               StackMapTable
  #278 = Utf8               InnerClasses
  #279 = Utf8               SourceFile
  #280 = Utf8               BootstrapMethods
  #281 = Utf8               ScalaInlineInfo
  #282 = Utf8               Scala
{
  public static final coursier.cache.internal.MockCacheEscape$ MODULE$;
    descriptor: Lcoursier/cache/internal/MockCacheEscape$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.collection.immutable.Set<java.lang.Object> unsafeChars;
    descriptor: Lscala/collection/immutable/Set;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #23                          // Lscala/collection/immutable/Set<Ljava/lang/Object;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/cache/internal/MockCacheEscape$
         3: dup
         4: invokespecial #28                 // Method "<init>":()V
         7: putstatic     #30                 // Field MODULE$:Lcoursier/cache/internal/MockCacheEscape$;
        10: getstatic     #35                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        13: ldc           #37                 // String  %$&+,:;=?@<>#
        15: invokevirtual #41                 // Method scala/Predef$.wrapString:(Ljava/lang/String;)Lscala/collection/immutable/WrappedString;
        18: invokevirtual #47                 // Method scala/collection/immutable/WrappedString.toSet:()Lscala/collection/immutable/Set;
        21: putstatic     #49                 // Field unsafeChars:Lscala/collection/immutable/Set;
        24: return
      LineNumberTable:
        line 3: 0
        line 5: 10
        line 3: 24

  private scala.collection.immutable.Set<java.lang.Object> unsafeChars();
    descriptor: ()Lscala/collection/immutable/Set;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #49                 // Field unsafeChars:Lscala/collection/immutable/Set;
         3: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/cache/internal/MockCacheEscape$;
    Signature: #50                          // ()Lscala/collection/immutable/Set<Ljava/lang/Object;>;

  private java.lang.String escape(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #59                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #35                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #62                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: aload_0
        11: invokedynamic #84,  0             // InvokeDynamic #0:apply:(Lcoursier/cache/internal/MockCacheEscape$;)Lscala/Function1;
        16: invokevirtual #88                 // Method scala/collection/StringOps$.flatMap$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
        19: areturn
      LineNumberTable:
        line 17: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lcoursier/cache/internal/MockCacheEscape$;
            0      20     1 input   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      input                          final

  public java.lang.String urlAsPath(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=9, args_size=2
         0: getstatic     #35                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_1
         4: ldc           #93                 // String file:/
         6: invokevirtual #99                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         9: ifne          16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: aload_1
        18: invokedynamic #110,  0            // InvokeDynamic #1:apply:(Ljava/lang/String;)Lscala/Function0;
        23: invokevirtual #114                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        26: aload_1
        27: ldc           #116                // String :
        29: iconst_2
        30: invokevirtual #120                // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
        33: astore_3
        34: aload_3
        35: ifnull        323
        38: getstatic     #125                // Field scala/Array$.MODULE$:Lscala/Array$;
        41: aload_3
        42: invokevirtual #128                // Method scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
        45: astore        4
        47: getstatic     #131                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        50: aload         4
        52: invokevirtual #135                // Method scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
        55: ifne          320
        58: new           #12                 // class scala/Array$UnapplySeqWrapper
        61: dup
        62: getstatic     #131                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        65: aload         4
        67: invokevirtual #138                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        70: invokespecial #141                // Method scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
        73: ifnull        320
        76: getstatic     #131                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        79: getstatic     #131                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        82: aload         4
        84: invokevirtual #138                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        87: iconst_2
        88: invokevirtual #145                // Method scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
        91: iconst_0
        92: if_icmpne     320
        95: getstatic     #131                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        98: getstatic     #131                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       101: aload         4
       103: invokevirtual #138                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       106: iconst_0
       107: invokevirtual #149                // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       110: checkcast     #95                 // class java/lang/String
       113: astore        5
       115: getstatic     #131                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       118: getstatic     #131                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       121: aload         4
       123: invokevirtual #138                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       126: iconst_1
       127: invokevirtual #149                // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       130: checkcast     #95                 // class java/lang/String
       133: astore        6
       135: aload         6
       137: ldc           #151                // String ///
       139: invokevirtual #99                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       142: ifeq          164
       145: getstatic     #59                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       148: getstatic     #35                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       151: aload         6
       153: invokevirtual #62                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       156: ldc           #151                // String ///
       158: invokevirtual #155                // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       161: goto          227
       164: aload         6
       166: ldc           #159                // String /
       168: invokevirtual #99                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       171: ifeq          193
       174: getstatic     #59                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       177: getstatic     #35                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       180: aload         6
       182: invokevirtual #62                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       185: ldc           #159                // String /
       187: invokevirtual #155                // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       190: goto          227
       193: new           #161                // class java/lang/Exception
       196: dup
       197: new           #163                // class java/lang/StringBuilder
       200: dup
       201: ldc           #164                // int 37
       203: invokespecial #167                // Method java/lang/StringBuilder."<init>":(I)V
       206: ldc           #169                // String URL
       208: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       211: aload_1
       212: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       215: ldc           #175                // String  doesn\'t contain an absolute path
       217: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       220: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       223: invokespecial #181                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       226: athrow
       227: astore        7
       229: aload         7
       231: ldc           #159                // String /
       233: invokevirtual #184                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       236: ifeq          264
       239: new           #163                // class java/lang/StringBuilder
       242: dup
       243: ldc           #185                // int 10
       245: invokespecial #167                // Method java/lang/StringBuilder."<init>":(I)V
       248: aload         7
       250: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       253: ldc           #187                // String .directory
       255: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       258: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       261: goto          266
       264: aload         7
       266: astore        8
       268: aload_0
       269: new           #163                // class java/lang/StringBuilder
       272: dup
       273: ldc           #73                 // int 1
       275: invokespecial #167                // Method java/lang/StringBuilder."<init>":(I)V
       278: aload         5
       280: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       283: ldc           #159                // String /
       285: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       288: getstatic     #59                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       291: getstatic     #35                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       294: aload         8
       296: invokevirtual #62                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       299: invokedynamic #194,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       304: invokevirtual #197                // Method scala/collection/StringOps$.dropWhile$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
       307: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       310: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       313: invokespecial #199                // Method escape:(Ljava/lang/String;)Ljava/lang/String;
       316: astore_2
       317: goto          355
       320: goto          326
       323: goto          326
       326: new           #161                // class java/lang/Exception
       329: dup
       330: new           #163                // class java/lang/StringBuilder
       333: dup
       334: ldc           #200                // int 25
       336: invokespecial #167                // Method java/lang/StringBuilder."<init>":(I)V
       339: ldc           #202                // String No protocol found in URL
       341: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       344: aload_1
       345: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       348: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       351: invokespecial #181                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       354: athrow
       355: aload_2
       356: areturn
      StackMapTable: number_of_entries = 11
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/internal/MockCacheEscape$, class java/lang/String ]
          stack = [ class scala/Predef$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 146
          locals = [ class coursier/cache/internal/MockCacheEscape$, class java/lang/String, top, class "[Ljava/lang/String;", class java/lang/Object, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 28 /* same */
        frame_type = 97 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ class java/lang/String ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 248 /* chop */
          offset_delta = 53
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [ class coursier/cache/internal/MockCacheEscape$, class java/lang/String, class java/lang/String, class "[Ljava/lang/String;", class java/lang/Object, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 27: 0
        line 29: 26
        line 30: 34
        line 32: 135
        line 33: 148
        line 34: 164
        line 35: 177
        line 37: 193
        line 40: 229
        line 42: 239
        line 44: 264
        line 46: 268
        line 30: 320
        line 49: 326
        line 29: 355
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          229      87     7 remaining0   Ljava/lang/String;
          268      48     8 remaining1   Ljava/lang/String;
          115     205     5 protocol   Ljava/lang/String;
          135     185     6 remaining   Ljava/lang/String;
            0     357     0  this   Lcoursier/cache/internal/MockCacheEscape$;
            0     357     1   url   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url                            final

  private static final char toHex$1(int);
    descriptor: (I)C
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        10
         3: if_icmpge     13
         6: bipush        48
         8: iload_0
         9: iadd
        10: goto          20
        13: bipush        65
        15: iload_0
        16: iadd
        17: bipush        10
        19: isub
        20: i2c
        21: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0    ch   I
    MethodParameters:
      Name                           Flags
      ch                             final

  private final boolean isUnsafe$1(char);
    descriptor: (C)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: sipush        128
         4: if_icmpgt     28
         7: iload_1
         8: iconst_0
         9: if_icmplt     28
        12: aload_0
        13: invokespecial #214                // Method unsafeChars:()Lscala/collection/immutable/Set;
        16: iload_1
        17: invokestatic  #220                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
        20: invokeinterface #224,  2          // InterfaceMethod scala/collection/immutable/Set.apply:(Ljava/lang/Object;)Z
        25: ifeq          32
        28: iconst_1
        29: goto          33
        32: iconst_0
        33: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 28 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lcoursier/cache/internal/MockCacheEscape$;
            0      34     1    ch   C
    MethodParameters:
      Name                           Flags
      ch                             final

  public static final java.lang.String $anonfun$escape$1(coursier.cache.internal.MockCacheEscape$, char);
    descriptor: (Lcoursier/cache/internal/MockCacheEscape$;C)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: lookupswitch  { // 0
                 default: 12
            }
        12: aload_0
        13: iload_2
        14: invokespecial #231                // Method isUnsafe$1:(C)Z
        17: ifeq          60
        20: new           #163                // class java/lang/StringBuilder
        23: dup
        24: ldc           #73                 // int 1
        26: invokespecial #167                // Method java/lang/StringBuilder."<init>":(I)V
        29: ldc           #233                // String %
        31: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: iload_2
        35: bipush        16
        37: idiv
        38: invokestatic  #235                // Method toHex$1:(I)C
        41: invokevirtual #238                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        44: iload_2
        45: bipush        16
        47: irem
        48: invokestatic  #235                // Method toHex$1:(I)C
        51: invokevirtual #238                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        54: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        57: goto          67
        60: iload_2
        61: invokestatic  #220                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
        64: invokevirtual #239                // Method java/lang/Object.toString:()Ljava/lang/String;
        67: goto          70
        70: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
        frame_type = 47 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 17: 0
        line 18: 12
        line 19: 20
        line 21: 60
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0 $this   Lcoursier/cache/internal/MockCacheEscape$;
            0      71     1  x0$1   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x0$1                           final

  public static final java.lang.String $anonfun$urlAsPath$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #163                // class java/lang/StringBuilder
         3: dup
         4: ldc           #241                // int 14
         6: invokespecial #167                // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #243                // String Got file URL:
        11: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_0
        15: invokevirtual #173                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        18: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        21: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 url$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url$1                          final

  public static final boolean $anonfun$urlAsPath$2(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        47
         3: if_icmpne     10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   x$1   C
    MethodParameters:
      Name                           Flags
      x$1                            final

  private coursier.cache.internal.MockCacheEscape$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #246                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 53: 0
        line 3: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/internal/MockCacheEscape$;

  public static final java.lang.String $anonfun$escape$1$adapted(coursier.cache.internal.MockCacheEscape$, java.lang.Object);
    descriptor: (Lcoursier/cache/internal/MockCacheEscape$;Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #250                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         5: invokestatic  #252                // Method $anonfun$escape$1:(Lcoursier/cache/internal/MockCacheEscape$;C)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lcoursier/cache/internal/MockCacheEscape$;
            0       9     1  x0$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x0$1                           final

  public static final java.lang.Object $anonfun$urlAsPath$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #250                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #255                // Method $anonfun$urlAsPath$2:(C)Z
         7: invokestatic  #259                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #271,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #15= #12 of #14;    // UnapplySeqWrapper=class scala/Array$UnapplySeqWrapper of class scala/Array
  public static #18= #17 of #14;          // =class scala/Array$UnapplySeqWrapper$ of class scala/Array
SourceFile: "MockCacheEscape.scala"
BootstrapMethods:
  0: #80 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #64 (Ljava/lang/Object;)Ljava/lang/Object;
      #69 REF_invokeStatic coursier/cache/internal/MockCacheEscape$.$anonfun$escape$1$adapted:(Lcoursier/cache/internal/MockCacheEscape$;Ljava/lang/Object;)Ljava/lang/String;
      #71 (Ljava/lang/Object;)Ljava/lang/String;
      #72 5
      #73 1
      #71 (Ljava/lang/Object;)Ljava/lang/String;
  1: #80 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 ()Ljava/lang/Object;
      #105 REF_invokeStatic coursier/cache/internal/MockCacheEscape$.$anonfun$urlAsPath$1:(Ljava/lang/String;)Ljava/lang/String;
      #107 ()Ljava/lang/String;
      #72 5
      #73 1
      #107 ()Ljava/lang/String;
  2: #80 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #64 (Ljava/lang/Object;)Ljava/lang/Object;
      #191 REF_invokeStatic coursier/cache/internal/MockCacheEscape$.$anonfun$urlAsPath$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #64 (Ljava/lang/Object;)Ljava/lang/Object;
      #73 1
  3: #268 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 REF_invokeStatic coursier/cache/internal/MockCacheEscape$.$anonfun$escape$1$adapted:(Lcoursier/cache/internal/MockCacheEscape$;Ljava/lang/Object;)Ljava/lang/String;
      #105 REF_invokeStatic coursier/cache/internal/MockCacheEscape$.$anonfun$urlAsPath$1:(Ljava/lang/String;)Ljava/lang/String;
      #191 REF_invokeStatic coursier/cache/internal/MockCacheEscape$.$anonfun$urlAsPath$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 01 00 0B 00 E2 00 E3 01 00 41 00 42 01 00 66
   00 35 01 00 F4 00 D4 01 00 BA 00 3F 01 00 1A 00
   19 01 00 34 00 35 01 00 D3 00 D4 01 00 CF 00 D0
   01 00 15 00 2D 01 00 5A 00 35 01
  Scala: length = 0x0 (unknown attribute)

