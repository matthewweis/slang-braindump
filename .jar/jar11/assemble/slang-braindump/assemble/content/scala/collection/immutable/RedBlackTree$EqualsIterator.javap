Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/immutable/RedBlackTree$EqualsIterator.class
  Last modified May 29, 2022; size 4840 bytes
  SHA-256 checksum 81dbd3e541ab988b9938392a13fe72685ae382ed41f62db506bfa4e54d91c5ec
  Compiled from "RedBlackTree.scala"
public class scala.collection.immutable.RedBlackTree$EqualsIterator<A extends java.lang.Object, B extends java.lang.Object> extends scala.collection.immutable.RedBlackTree$TreeIterator<A, B, scala.runtime.BoxedUnit>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/immutable/RedBlackTree$EqualsIterator
  super_class: #5                         // scala/collection/immutable/RedBlackTree$TreeIterator
  interfaces: 0, fields: 0, methods: 6, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/immutable/RedBlackTree$EqualsIterator
    #2 = Class              #1            // scala/collection/immutable/RedBlackTree$EqualsIterator
    #3 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>Lscala/collection/immutable/RedBlackTree$TreeIterator<TA;TB;Lscala/runtime/BoxedUnit;>;
    #4 = Utf8               scala/collection/immutable/RedBlackTree$TreeIterator
    #5 = Class              #4            // scala/collection/immutable/RedBlackTree$TreeIterator
    #6 = Utf8               RedBlackTree.scala
    #7 = Utf8               scala/collection/immutable/RedBlackTree
    #8 = Class              #7            // scala/collection/immutable/RedBlackTree
    #9 = Utf8               EqualsIterator
   #10 = Utf8               scala/collection/immutable/RedBlackTree$Tree
   #11 = Class              #10           // scala/collection/immutable/RedBlackTree$Tree
   #12 = Utf8               Tree
   #13 = Utf8               TreeIterator
   #14 = Utf8               nextResult
   #15 = Utf8               (Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/runtime/Nothing$;
   #16 = Utf8               (Lscala/collection/immutable/RedBlackTree$Tree<TA;TB;>;)Lscala/runtime/Nothing$;
   #17 = Utf8               tree
   #18 = Utf8               scala/NotImplementedError
   #19 = Class              #18           // scala/NotImplementedError
   #20 = Utf8               <init>
   #21 = Utf8               ()V
   #22 = NameAndType        #20:#21       // "<init>":()V
   #23 = Methodref          #19.#22       // scala/NotImplementedError."<init>":()V
   #24 = Utf8               this
   #25 = Utf8               Lscala/collection/immutable/RedBlackTree$EqualsIterator;
   #26 = Utf8               Lscala/collection/immutable/RedBlackTree$Tree;
   #27 = Utf8               sameKeys
   #28 = Utf8               (Lscala/collection/immutable/RedBlackTree$EqualsIterator;)Z
   #29 = Utf8               <X:Ljava/lang/Object;>(Lscala/collection/immutable/RedBlackTree$EqualsIterator<TA;TX;>;)Z
   #30 = Utf8               that
   #31 = Utf8               lookahead
   #32 = Utf8               ()Lscala/collection/immutable/RedBlackTree$Tree;
   #33 = NameAndType        #31:#32       // lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
   #34 = Methodref          #2.#33        // scala/collection/immutable/RedBlackTree$EqualsIterator.lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
   #35 = Utf8               scala$collection$immutable$RedBlackTree$TreeIterator$$index
   #36 = Utf8               I
   #37 = NameAndType        #35:#36       // scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
   #38 = Fieldref           #5.#37        // scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
   #39 = Utf8               stackOfNexts
   #40 = Utf8               ()[Lscala/collection/immutable/RedBlackTree$Tree;
   #41 = NameAndType        #39:#40       // stackOfNexts:()[Lscala/collection/immutable/RedBlackTree$Tree;
   #42 = Methodref          #5.#41        // scala/collection/immutable/RedBlackTree$TreeIterator.stackOfNexts:()[Lscala/collection/immutable/RedBlackTree$Tree;
   #43 = Utf8               lookahead_$eq
   #44 = Utf8               (Lscala/collection/immutable/RedBlackTree$Tree;)V
   #45 = NameAndType        #43:#44       // lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
   #46 = Methodref          #2.#45        // scala/collection/immutable/RedBlackTree$EqualsIterator.lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
   #47 = Utf8               scala$collection$immutable$RedBlackTree$Tree$$_key
   #48 = Utf8               Ljava/lang/Object;
   #49 = NameAndType        #47:#48       // scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
   #50 = Fieldref           #11.#49       // scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
   #51 = Utf8               ordering
   #52 = Utf8               ()Lscala/math/Ordering;
   #53 = NameAndType        #51:#52       // ordering:()Lscala/math/Ordering;
   #54 = Methodref          #2.#53        // scala/collection/immutable/RedBlackTree$EqualsIterator.ordering:()Lscala/math/Ordering;
   #55 = Utf8               scala/math/Ordering
   #56 = Class              #55           // scala/math/Ordering
   #57 = Utf8               equiv
   #58 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #59 = NameAndType        #57:#58       // equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #60 = InterfaceMethodref #56.#59       // scala/math/Ordering.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #61 = Utf8               scala$collection$immutable$RedBlackTree$Tree$$_right
   #62 = NameAndType        #61:#26       // scala$collection$immutable$RedBlackTree$Tree$$_right:Lscala/collection/immutable/RedBlackTree$Tree;
   #63 = Fieldref           #11.#62       // scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_right:Lscala/collection/immutable/RedBlackTree$Tree;
   #64 = Utf8               findLeftMostOrPopOnEmpty
   #65 = Utf8               (Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
   #66 = NameAndType        #64:#65       // findLeftMostOrPopOnEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
   #67 = Methodref          #2.#66        // scala/collection/immutable/RedBlackTree$EqualsIterator.findLeftMostOrPopOnEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
   #68 = Utf8               equal
   #69 = Utf8               Z
   #70 = Utf8               goRight_tree
   #71 = Utf8               java/lang/Object
   #72 = Class              #71           // java/lang/Object
   #73 = Utf8               sameValues
   #74 = Utf8               scala$collection$immutable$RedBlackTree$Tree$$_value
   #75 = NameAndType        #74:#48       // scala$collection$immutable$RedBlackTree$Tree$$_value:Ljava/lang/Object;
   #76 = Fieldref           #11.#75       // scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_value:Ljava/lang/Object;
   #77 = Utf8               scala/runtime/BoxesRunTime
   #78 = Class              #77           // scala/runtime/BoxesRunTime
   #79 = Utf8               equals
   #80 = NameAndType        #79:#58       // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #81 = Methodref          #78.#80       // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #82 = Utf8               sameEntries
   #83 = Utf8               (Lscala/collection/immutable/RedBlackTree$Tree;)Ljava/lang/Object;
   #84 = NameAndType        #14:#15       // nextResult:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/runtime/Nothing$;
   #85 = Methodref          #2.#84        // scala/collection/immutable/RedBlackTree$EqualsIterator.nextResult:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/runtime/Nothing$;
   #86 = Utf8               (Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
   #87 = Utf8               (Lscala/collection/immutable/RedBlackTree$Tree<TA;TB;>;Lscala/math/Ordering<TA;>;)V
   #88 = Utf8               evidence$19
   #89 = Utf8               scala/None$
   #90 = Class              #89           // scala/None$
   #91 = Utf8               MODULE$
   #92 = Utf8               Lscala/None$;
   #93 = NameAndType        #91:#92       // MODULE$:Lscala/None$;
   #94 = Fieldref           #90.#93       // scala/None$.MODULE$:Lscala/None$;
   #95 = Utf8               (Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)V
   #96 = NameAndType        #20:#95       // "<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)V
   #97 = Methodref          #5.#96        // scala/collection/immutable/RedBlackTree$TreeIterator."<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)V
   #98 = Utf8               Lscala/math/Ordering;
   #99 = Utf8               Code
  #100 = Utf8               LineNumberTable
  #101 = Utf8               LocalVariableTable
  #102 = Utf8               Signature
  #103 = Utf8               MethodParameters
  #104 = Utf8               StackMapTable
  #105 = Utf8               InnerClasses
  #106 = Utf8               SourceFile
  #107 = Utf8               ScalaInlineInfo
  #108 = Utf8               Scala
{
  public scala.runtime.Nothing$ nextResult(scala.collection.immutable.RedBlackTree$Tree<A, B>);
    descriptor: (Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #19                 // class scala/NotImplementedError
         3: dup
         4: invokespecial #23                 // Method scala/NotImplementedError."<init>":()V
         7: athrow
      LineNumberTable:
        line 867: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/immutable/RedBlackTree$EqualsIterator;
            0       8     1  tree   Lscala/collection/immutable/RedBlackTree$Tree;
    Signature: #16                          // (Lscala/collection/immutable/RedBlackTree$Tree<TA;TB;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      tree                           final

  public <X extends java.lang.Object> boolean sameKeys(scala.collection.immutable.RedBlackTree$EqualsIterator<A, X>);
    descriptor: (Lscala/collection/immutable/RedBlackTree$EqualsIterator;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=2
         0: iconst_1
         1: istore_2
         2: iload_2
         3: ifeq          234
         6: aload_0
         7: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        10: ifnull        234
        13: aload_1
        14: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        17: ifnull        234
        20: aload_0
        21: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        24: aload_1
        25: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        28: if_acmpne     104
        31: aload_0
        32: aload_0
        33: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        36: iconst_0
        37: if_icmpne     44
        40: aconst_null
        41: goto          63
        44: aload_0
        45: aload_0
        46: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        49: iconst_1
        50: isub
        51: putfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        54: aload_0
        55: invokevirtual #42                 // Method scala/collection/immutable/RedBlackTree$TreeIterator.stackOfNexts:()[Lscala/collection/immutable/RedBlackTree$Tree;
        58: aload_0
        59: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        62: aaload
        63: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
        66: aload_1
        67: aload_1
        68: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        71: iconst_0
        72: if_icmpne     79
        75: aconst_null
        76: goto          98
        79: aload_1
        80: aload_1
        81: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        84: iconst_1
        85: isub
        86: putfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        89: aload_1
        90: invokevirtual #42                 // Method scala/collection/immutable/RedBlackTree$TreeIterator.stackOfNexts:()[Lscala/collection/immutable/RedBlackTree$Tree;
        93: aload_1
        94: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        97: aaload
        98: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
       101: goto          2
       104: aload_0
       105: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       108: dup
       109: ifnonnull     114
       112: aconst_null
       113: athrow
       114: getfield      #50                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
       117: aload_1
       118: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       121: dup
       122: ifnonnull     127
       125: aconst_null
       126: athrow
       127: getfield      #50                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
       130: if_acmpeq     171
       133: aload_0
       134: invokevirtual #54                 // Method ordering:()Lscala/math/Ordering;
       137: aload_0
       138: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       141: dup
       142: ifnonnull     147
       145: aconst_null
       146: athrow
       147: getfield      #50                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
       150: aload_1
       151: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       154: dup
       155: ifnonnull     160
       158: aconst_null
       159: athrow
       160: getfield      #50                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
       163: invokeinterface #60,  3           // InterfaceMethod scala/math/Ordering.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       168: ifeq          175
       171: iconst_1
       172: goto          176
       175: iconst_0
       176: istore_2
       177: aload_0
       178: aload_0
       179: aload_0
       180: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       183: astore_3
       184: aload_3
       185: ifnonnull     190
       188: aconst_null
       189: athrow
       190: aload_3
       191: getfield      #63                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_right:Lscala/collection/immutable/RedBlackTree$Tree;
       194: aconst_null
       195: astore_3
       196: invokevirtual #67                 // Method findLeftMostOrPopOnEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
       199: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
       202: aload_1
       203: aload_1
       204: aload_1
       205: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       208: astore        4
       210: aload         4
       212: ifnonnull     217
       215: aconst_null
       216: athrow
       217: aload         4
       219: getfield      #63                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_right:Lscala/collection/immutable/RedBlackTree$Tree;
       222: aconst_null
       223: astore        4
       225: invokevirtual #67                 // Method findLeftMostOrPopOnEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
       228: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
       231: goto          2
       234: iload_2
       235: ifeq          254
       238: aload_0
       239: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       242: ifnonnull     254
       245: aload_1
       246: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       249: ifnonnull     254
       252: iconst_1
       253: ireturn
       254: iconst_0
       255: ireturn
      StackMapTable: number_of_entries = 17
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 105 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 5 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class java/lang/Object, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/math/Ordering, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/math/Ordering, class java/lang/Object, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 10 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int, class scala/collection/immutable/RedBlackTree$Tree ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int, null, class scala/collection/immutable/RedBlackTree$Tree ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 249 /* chop */
          offset_delta = 16
        frame_type = 19 /* same */
      LineNumberTable:
        line 870: 0
        line 871: 2
        line 872: 20
        line 873: 31
        line 821: 32
        line 822: 44
        line 823: 54
        line 873: 63
        line 874: 66
        line 821: 67
        line 822: 79
        line 823: 89
        line 874: 98
        line 876: 104
        line 541: 114
        line 876: 117
        line 541: 127
        line 876: 130
        line 877: 133
        line 541: 147
        line 877: 150
        line 541: 160
        line 877: 163
        line 876: 176
        line 878: 177
        line 863: 184
        line 544: 190
        line 878: 194
        line 879: 202
        line 863: 210
        line 544: 217
        line 879: 222
        line 872: 231
        line 882: 234
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2     253     2 equal   Z
            0     256     0  this   Lscala/collection/immutable/RedBlackTree$EqualsIterator;
            0     256     1  that   Lscala/collection/immutable/RedBlackTree$EqualsIterator;
          184      10     3 goRight_tree   Lscala/collection/immutable/RedBlackTree$Tree;
          210      12     4 goRight_tree   Lscala/collection/immutable/RedBlackTree$Tree;
    Signature: #29                          // <X:Ljava/lang/Object;>(Lscala/collection/immutable/RedBlackTree$EqualsIterator<TA;TX;>;)Z
    MethodParameters:
      Name                           Flags
      that                           final

  public <X extends java.lang.Object> boolean sameValues(scala.collection.immutable.RedBlackTree$EqualsIterator<A, X>);
    descriptor: (Lscala/collection/immutable/RedBlackTree$EqualsIterator;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=2
         0: iconst_1
         1: istore_2
         2: iload_2
         3: ifeq          199
         6: aload_0
         7: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        10: ifnull        199
        13: aload_1
        14: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        17: ifnull        199
        20: aload_0
        21: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        24: aload_1
        25: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        28: if_acmpne     104
        31: aload_0
        32: aload_0
        33: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        36: iconst_0
        37: if_icmpne     44
        40: aconst_null
        41: goto          63
        44: aload_0
        45: aload_0
        46: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        49: iconst_1
        50: isub
        51: putfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        54: aload_0
        55: invokevirtual #42                 // Method scala/collection/immutable/RedBlackTree$TreeIterator.stackOfNexts:()[Lscala/collection/immutable/RedBlackTree$Tree;
        58: aload_0
        59: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        62: aaload
        63: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
        66: aload_1
        67: aload_1
        68: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        71: iconst_0
        72: if_icmpne     79
        75: aconst_null
        76: goto          98
        79: aload_1
        80: aload_1
        81: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        84: iconst_1
        85: isub
        86: putfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        89: aload_1
        90: invokevirtual #42                 // Method scala/collection/immutable/RedBlackTree$TreeIterator.stackOfNexts:()[Lscala/collection/immutable/RedBlackTree$Tree;
        93: aload_1
        94: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        97: aaload
        98: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
       101: goto          2
       104: aload_0
       105: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       108: dup
       109: ifnonnull     114
       112: aconst_null
       113: athrow
       114: getfield      #76                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_value:Ljava/lang/Object;
       117: aload_1
       118: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       121: dup
       122: ifnonnull     127
       125: aconst_null
       126: athrow
       127: getfield      #76                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_value:Ljava/lang/Object;
       130: invokestatic  #81                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       133: ifeq          140
       136: iconst_1
       137: goto          141
       140: iconst_0
       141: istore_2
       142: aload_0
       143: aload_0
       144: aload_0
       145: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       148: astore_3
       149: aload_3
       150: ifnonnull     155
       153: aconst_null
       154: athrow
       155: aload_3
       156: getfield      #63                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_right:Lscala/collection/immutable/RedBlackTree$Tree;
       159: aconst_null
       160: astore_3
       161: invokevirtual #67                 // Method findLeftMostOrPopOnEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
       164: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
       167: aload_1
       168: aload_1
       169: aload_1
       170: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       173: astore        4
       175: aload         4
       177: ifnonnull     182
       180: aconst_null
       181: athrow
       182: aload         4
       184: getfield      #63                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_right:Lscala/collection/immutable/RedBlackTree$Tree;
       187: aconst_null
       188: astore        4
       190: invokevirtual #67                 // Method findLeftMostOrPopOnEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
       193: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
       196: goto          2
       199: iload_2
       200: ifeq          219
       203: aload_0
       204: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       207: ifnonnull     219
       210: aload_1
       211: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       214: ifnonnull     219
       217: iconst_1
       218: ireturn
       219: iconst_0
       220: ireturn
      StackMapTable: number_of_entries = 14
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 105 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 5 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class java/lang/Object, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int, class scala/collection/immutable/RedBlackTree$Tree ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int, null, class scala/collection/immutable/RedBlackTree$Tree ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 249 /* chop */
          offset_delta = 16
        frame_type = 19 /* same */
      LineNumberTable:
        line 885: 0
        line 886: 2
        line 887: 20
        line 888: 31
        line 821: 32
        line 822: 44
        line 823: 54
        line 888: 63
        line 889: 66
        line 821: 67
        line 822: 79
        line 823: 89
        line 889: 98
        line 891: 104
        line 542: 114
        line 891: 117
        line 542: 127
        line 891: 130
        line 892: 142
        line 863: 149
        line 544: 155
        line 892: 159
        line 893: 167
        line 863: 175
        line 544: 182
        line 893: 187
        line 887: 196
        line 896: 199
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2     218     2 equal   Z
            0     221     0  this   Lscala/collection/immutable/RedBlackTree$EqualsIterator;
            0     221     1  that   Lscala/collection/immutable/RedBlackTree$EqualsIterator;
          149      10     3 goRight_tree   Lscala/collection/immutable/RedBlackTree$Tree;
          175      12     4 goRight_tree   Lscala/collection/immutable/RedBlackTree$Tree;
    Signature: #29                          // <X:Ljava/lang/Object;>(Lscala/collection/immutable/RedBlackTree$EqualsIterator<TA;TX;>;)Z
    MethodParameters:
      Name                           Flags
      that                           final

  public <X extends java.lang.Object> boolean sameEntries(scala.collection.immutable.RedBlackTree$EqualsIterator<A, X>);
    descriptor: (Lscala/collection/immutable/RedBlackTree$EqualsIterator;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=2
         0: iconst_1
         1: istore_2
         2: iload_2
         3: ifeq          266
         6: aload_0
         7: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        10: ifnull        266
        13: aload_1
        14: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        17: ifnull        266
        20: aload_0
        21: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        24: aload_1
        25: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
        28: if_acmpne     104
        31: aload_0
        32: aload_0
        33: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        36: iconst_0
        37: if_icmpne     44
        40: aconst_null
        41: goto          63
        44: aload_0
        45: aload_0
        46: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        49: iconst_1
        50: isub
        51: putfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        54: aload_0
        55: invokevirtual #42                 // Method scala/collection/immutable/RedBlackTree$TreeIterator.stackOfNexts:()[Lscala/collection/immutable/RedBlackTree$Tree;
        58: aload_0
        59: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        62: aaload
        63: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
        66: aload_1
        67: aload_1
        68: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        71: iconst_0
        72: if_icmpne     79
        75: aconst_null
        76: goto          98
        79: aload_1
        80: aload_1
        81: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        84: iconst_1
        85: isub
        86: putfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        89: aload_1
        90: invokevirtual #42                 // Method scala/collection/immutable/RedBlackTree$TreeIterator.stackOfNexts:()[Lscala/collection/immutable/RedBlackTree$Tree;
        93: aload_1
        94: getfield      #38                 // Field scala/collection/immutable/RedBlackTree$TreeIterator.scala$collection$immutable$RedBlackTree$TreeIterator$$index:I
        97: aaload
        98: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
       101: goto          2
       104: aload_0
       105: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       108: dup
       109: ifnonnull     114
       112: aconst_null
       113: athrow
       114: getfield      #50                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
       117: aload_1
       118: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       121: dup
       122: ifnonnull     127
       125: aconst_null
       126: athrow
       127: getfield      #50                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
       130: if_acmpeq     171
       133: aload_0
       134: invokevirtual #54                 // Method ordering:()Lscala/math/Ordering;
       137: aload_0
       138: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       141: dup
       142: ifnonnull     147
       145: aconst_null
       146: athrow
       147: getfield      #50                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
       150: aload_1
       151: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       154: dup
       155: ifnonnull     160
       158: aconst_null
       159: athrow
       160: getfield      #50                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_key:Ljava/lang/Object;
       163: invokeinterface #60,  3           // InterfaceMethod scala/math/Ordering.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       168: ifeq          207
       171: aload_0
       172: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       175: dup
       176: ifnonnull     181
       179: aconst_null
       180: athrow
       181: getfield      #76                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_value:Ljava/lang/Object;
       184: aload_1
       185: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       188: dup
       189: ifnonnull     194
       192: aconst_null
       193: athrow
       194: getfield      #76                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_value:Ljava/lang/Object;
       197: invokestatic  #81                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       200: ifeq          207
       203: iconst_1
       204: goto          208
       207: iconst_0
       208: istore_2
       209: aload_0
       210: aload_0
       211: aload_0
       212: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       215: astore_3
       216: aload_3
       217: ifnonnull     222
       220: aconst_null
       221: athrow
       222: aload_3
       223: getfield      #63                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_right:Lscala/collection/immutable/RedBlackTree$Tree;
       226: aconst_null
       227: astore_3
       228: invokevirtual #67                 // Method findLeftMostOrPopOnEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
       231: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
       234: aload_1
       235: aload_1
       236: aload_1
       237: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       240: astore        4
       242: aload         4
       244: ifnonnull     249
       247: aconst_null
       248: athrow
       249: aload         4
       251: getfield      #63                 // Field scala/collection/immutable/RedBlackTree$Tree.scala$collection$immutable$RedBlackTree$Tree$$_right:Lscala/collection/immutable/RedBlackTree$Tree;
       254: aconst_null
       255: astore        4
       257: invokevirtual #67                 // Method findLeftMostOrPopOnEmpty:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/collection/immutable/RedBlackTree$Tree;
       260: invokevirtual #46                 // Method lookahead_$eq:(Lscala/collection/immutable/RedBlackTree$Tree;)V
       263: goto          2
       266: iload_2
       267: ifeq          286
       270: aload_0
       271: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       274: ifnonnull     286
       277: aload_1
       278: invokevirtual #34                 // Method lookahead:()Lscala/collection/immutable/RedBlackTree$Tree;
       281: ifnonnull     286
       284: iconst_1
       285: ireturn
       286: iconst_0
       287: ireturn
      StackMapTable: number_of_entries = 19
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 105 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 5 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class java/lang/Object, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/math/Ordering, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class scala/math/Ordering, class java/lang/Object, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 10 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int ]
          stack = [ class java/lang/Object, class scala/collection/immutable/RedBlackTree$Tree ]
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int, class scala/collection/immutable/RedBlackTree$Tree ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator, int, null, class scala/collection/immutable/RedBlackTree$Tree ]
          stack = [ class scala/collection/immutable/RedBlackTree$EqualsIterator, class scala/collection/immutable/RedBlackTree$EqualsIterator ]
        frame_type = 249 /* chop */
          offset_delta = 16
        frame_type = 19 /* same */
      LineNumberTable:
        line 899: 0
        line 900: 2
        line 901: 20
        line 902: 31
        line 821: 32
        line 822: 44
        line 823: 54
        line 902: 63
        line 903: 66
        line 821: 67
        line 822: 79
        line 823: 89
        line 903: 98
        line 905: 104
        line 541: 114
        line 905: 117
        line 541: 127
        line 905: 130
        line 906: 133
        line 541: 147
        line 906: 150
        line 541: 160
        line 906: 163
        line 542: 181
        line 906: 184
        line 542: 194
        line 906: 197
        line 905: 208
        line 907: 209
        line 863: 216
        line 544: 222
        line 907: 226
        line 908: 234
        line 863: 242
        line 544: 249
        line 908: 254
        line 901: 263
        line 911: 266
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2     285     2 equal   Z
            0     288     0  this   Lscala/collection/immutable/RedBlackTree$EqualsIterator;
            0     288     1  that   Lscala/collection/immutable/RedBlackTree$EqualsIterator;
          216      10     3 goRight_tree   Lscala/collection/immutable/RedBlackTree$Tree;
          242      12     4 goRight_tree   Lscala/collection/immutable/RedBlackTree$Tree;
    Signature: #29                          // <X:Ljava/lang/Object;>(Lscala/collection/immutable/RedBlackTree$EqualsIterator<TA;TX;>;)Z
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Object nextResult(scala.collection.immutable.RedBlackTree$Tree);
    descriptor: (Lscala/collection/immutable/RedBlackTree$Tree;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #85                 // Method nextResult:(Lscala/collection/immutable/RedBlackTree$Tree;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 866: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/RedBlackTree$EqualsIterator;
            0       6     1  tree   Lscala/collection/immutable/RedBlackTree$Tree;
    MethodParameters:
      Name                           Flags
      tree                           final

  public scala.collection.immutable.RedBlackTree$EqualsIterator(scala.collection.immutable.RedBlackTree$Tree<A, B>, scala.math.Ordering<A>);
    descriptor: (Lscala/collection/immutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #94                 // Field scala/None$.MODULE$:Lscala/None$;
         5: aload_2
         6: invokespecial #97                 // Method scala/collection/immutable/RedBlackTree$TreeIterator."<init>":(Lscala/collection/immutable/RedBlackTree$Tree;Lscala/Option;Lscala/math/Ordering;)V
         9: return
      LineNumberTable:
        line 866: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/immutable/RedBlackTree$EqualsIterator;
            0      10     1  tree   Lscala/collection/immutable/RedBlackTree$Tree;
            0      10     2 evidence$19   Lscala/math/Ordering;
    Signature: #87                          // (Lscala/collection/immutable/RedBlackTree$Tree<TA;TB;>;Lscala/math/Ordering<TA;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      evidence$19                    final
}
InnerClasses:
  private static #9= #2 of #8;            // EqualsIterator=class scala/collection/immutable/RedBlackTree$EqualsIterator of class scala/collection/immutable/RedBlackTree
  public static final #12= #11 of #8;     // Tree=class scala/collection/immutable/RedBlackTree$Tree of class scala/collection/immutable/RedBlackTree
  private static abstract #13= #5 of #8;  // TreeIterator=class scala/collection/immutable/RedBlackTree$TreeIterator of class scala/collection/immutable/RedBlackTree
Signature: #3                           // <A:Ljava/lang/Object;B:Ljava/lang/Object;>Lscala/collection/immutable/RedBlackTree$TreeIterator<TA;TB;Lscala/runtime/BoxedUnit;>;
SourceFile: "RedBlackTree.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 00 00 06 00 14 00 56 00 00 0E 00 53 00 00 0E
   00 0F 00 00 52 00 1C 00 00 1B 00 1C 00 00 49 00
   1C 00
  Scala: length = 0x0 (unknown attribute)

