Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/ivy/IvyComplete.class
  Last modified May 29, 2022; size 16629 bytes
  SHA-256 checksum 30658034aac7faa03e9b9a22a55f437b4aa81c2675066eb114517f37ad5da4e8
  Compiled from "IvyComplete.scala"
public final class coursier.ivy.IvyComplete<F extends java.lang.Object> extends java.lang.Object implements coursier.core.Repository$Complete<F>, scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/ivy/IvyComplete
  super_class: #5                         // java/lang/Object
  interfaces: 3, fields: 6, methods: 37, attributes: 7
Constant pool:
    #1 = Utf8               coursier/ivy/IvyComplete
    #2 = Class              #1            // coursier/ivy/IvyComplete
    #3 = Utf8               <F:Ljava/lang/Object;>Ljava/lang/Object;Lcoursier/core/Repository$Complete<TF;>;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               coursier/core/Repository$Complete
    #7 = Class              #6            // coursier/core/Repository$Complete
    #8 = Utf8               scala/Product
    #9 = Class              #8            // scala/Product
   #10 = Utf8               java/io/Serializable
   #11 = Class              #10           // java/io/Serializable
   #12 = Utf8               IvyComplete.scala
   #13 = Utf8               Lscala/reflect/ScalaSignature;
   #14 = Utf8               bytes
   #15 = Utf8               \u0006\u0005\u0005]g\u0001B\u0010!\u0005\u0015B\u0001\u0002\u0016\u0001\u0003\u0006\u0004%\t!\u0016\u0005\t5\u0002\u0011\t\u0011)A\u0005-\"A1\f\u0001BC\u0002\u0013\u0005A\f\u0003\u0005a\u0001\t\u0005\t\u0015!\u0003^\u0011!\t\u0007A!b\u0001\n\u0003\u0011\u0007\u0002C5\u0001\u0005\u0003\u0005\u000b\u0011B2\t\u000b)\u0004A\u0011A6\t\u000bA\u0004A1\u00022\t\u0011E\u0004\u0001R1A\u0005\nID\u0001\"\u001f\u0001\t\u0006\u0004%IA\u001d\u0005\u0006u\u0002!\ta\u001f\u0005\b\u0003C\u0001A\u0011AA\u0012\u0011\u001d\ty\u0003\u0001C\u0001\u0003cAq!a\u0010\u0001\t\u0003\t\t\u0005C\u0004\u0002F\u0001!\t!a\u0012\t\u000f\u0005-\u0003\u0001\"\u0001\u0002N!9\u0011\u0011\u000b\u0001\u0005B\u0005M\u0003bBA2\u0001\u0011\u0005\u0013Q\r\u0005\b\u0003c\u0002A\u0011IA:\u0011\u001d\t9\b\u0001C!\u0003sBq!!!\u0001\t\u0013\t\u0019\tC\u0004\u0002\f\u0002!\t%!$\t\u000f\u0005=\u0005\u0001\"\u0011\u0002\u0012\"9\u00111\u0013\u0001\u0005B\u0005U\u0005bBAN\u0001\u0011\u0005\u0013QT\u0004\b\u0003C\u0003\u0003\u0012AAR\r\u0019y\u0002\u0005#\u0001\u0002&\"1!n\u0007C\u0001\u0003cCq!a-\u001c\t\u0003\t)\fC\u0005\u0002Nn\t\t\u0011\"\u0003\u0002P\nY\u0011J^=D_6\u0004H.\u001a;f\u0015\t\t#%A\u0002jmfT\u0011aI\u0001\tG>,(o]5fe\u000e\u0001QC\u0001\u0014:\'\u0015\u0001q%L#I!\tA3&D\u0001*\u0015\u0005Q\u0013!B:dC2\f\u0017B\u0001\u0017*\u0005\u0019\te.\u001f*fMB\u0019a\u0006N\u001c\u000f\u0005=\u0012T\"\u0001\u0019\u000b\u0005E\u0012\u0013\u0001B2pe\u0016L!a\r\u0019\u0002\u0015I+\u0007o\\:ji>\u0014\u00180\u0003\u00026m\tA1i\\7qY\u0016$XM\u0003\u00024aA\u0011\u0001(\u000f\u0007\u0001\t\u0015Q\u0004A1\u0001<\u0005\u00051UC\u0001\u001fD#\ti\u0004\t\u0005\u0002)}%\u0011q(\u000b\u0002\b\u001d>$\b.\u001b8h!\tA\u0013)\u0003\u0002CS\t\u0019\u0011I\\=\u0005\u000b\u0011K$\u0019\u0001\u001f\u0003\u0003}\u0003\"\u0001\u000b$\n\u0005\u001dK#a\u0002)s_\u0012,8\r\u001e\t\u0003\u0013Fs!AS(\u000f\u0005-sU\"\u0001\'\u000b\u00055#\u0013A\u0002\u001fs_>$h(C\u0001+\u0013\t\u0001\u0016&A\u0004qC\u000e\\\u0017mZ3\n\u0005I\u001b&\u0001D*fe&\fG.\u001b>bE2,\'B\u0001)*\u0003\u0011\u0011X\r]8\u0016\u0003Y\u0003\"a\u0016-\u000e\u0003\u0001J!!\u0017\u0011\u0003\u001b%3\u0018PU3q_NLGo\u001c:z\u0003\u0015\u0011X\r]8!\u0003\u00151W\r^2i+\u0005i\u0006c\u0001\u0018_o%\u0011qL\u000e\u0002\u0006\r\u0016$8\r[\u0001\u0007M\u0016$8\r\u001b\u0011\u0002\u0003\u0019+\u0012a\u0019\t\u0004I\u001e<T\"A3\u000b\u0005\u0019\u0014\u0013\u0001B;uS2L!\u0001[3\u0003\u000b5{g.\u00193\u0002\u0005\u0019\u0003\u0013A\u0002\u001fj]&$h\b\u0006\u0003m[:|\u0007cA,\u0001o!)Ak\u0002a\u0001-\")1l\u0002a\u0001;\")\u0011m\u0002a\u0001G\u0006\u0011a\tM\u0001\u001e_J<\u0017M\\5{CRLwN\u001c\'jgRLgn\u001a)biR,\'O\\(qiV\t1\u000fE\u0002)iZL!!^\u0015\u0003\r=\u0003H/[8o!\t9v/\u0003\u0002yA\t9\u0001+\u0019;uKJt\u0017!\u00068b[\u0016d\u0015n\u001d;j]\u001e\u0004\u0016\r\u001e;fe:|\u0005\u000f^\u0001\r_J<\u0017M\\5{CRLwN\u001c\u000b\u0004y\u0006u\u0001c\u0001\u001d:{B1\u0011J`A\u0001\u0003\u000fI!a`*\u0003\r\u0015KG\u000f[3s!\rI\u00151A\u0005\u0004\u0003\u000b\u0019&!\u0003+ie><\u0018M\u00197f!\u0015I\u0015\u0011BA\u0007\u0013\r\tYa\u0015\u0002\u0004\'\u0016\f\b\u0003BA\b\u0003/qA!!\u0005\u0002\u0014A\u00111*K\u0005\u0004\u0003+I\u0013A\u0002)sK\u0012,g-\u0003\u0003\u0002\u001a\u0005m!AB*ue&twMC\u0002\u0002\u0016%Bq!a\b\f\u0001\u0004\ti!\u0001\u0004qe\u00164\u0017\u000e_\u0001\u000b[>$W\u000f\\3OC6,G#\u0002?\u0002&\u00055\u0002B\u0002>\r\u0001\u0004\t9\u0003E\u00020\u0003SI1!a\u000b1\u00051y%oZ1oSj\fG/[8o\u0011\u001d\ty\u0002\u0004a\u0001\u0003\u001b\t\u0001B^3sg&|gn\u001d\u000b\u0006y\u0006M\u0012Q\b\u0005\b\u0003ki\u0001\u0019AA\u001c\u0003\u0019iw\u000eZ;mKB\u0019q&!\u000f\n\u0007\u0005m\u0002G\u0001\u0004N_\u0012,H.\u001a\u0005\b\u0003?i\u0001\u0019AA\u0007\u0003!9\u0018\u000e\u001e5SKB|Gc\u00017\u0002D!)AK\u0004a\u0001-\u0006Iq/\u001b;i\r\u0016$8\r\u001b\u000b\u0004Y\u0006%\u0003\"B.\u0010\u0001\u0004i\u0016!B<ji\"4Ec\u00017\u0002P!)\u0011\r\u0005a\u0001G\u0006AAo\\*ue&tw\r\u0006\u0002\u0002VA!\u0011qKA1\u001b\t\tIF\u0003\u0003\u0002\\\u0005u\u0013\u0001\u00027b]\u001eT!!a\u0018\u0002\t)\fg/Y\u0005\u0005\u00033\tI&\u0001\u0005dC:,\u0015/^1m)\u0011\t9\'!\u001c\u0011\u0007!\nI\'C\u0002\u0002l%\u0012qAQ8pY\u0016\fg\u000e\u0003\u0004\u0002pI\u0001\r\u0001Q\u0001\u0004_\nT\u0017AB3rk\u0006d7\u000f\u0006\u0003\u0002h\u0005U\u0004BBA8\'\u0001\u0007\u0001)\u0001\u0005iCND7i\u001c3f)\t\tY\bE\u0002)\u0003{J1!a *\u0005\rIe\u000e^\u0001\u0006iV\u0004H.Z\u000b\u0003\u0003\u000b\u0003b\u0001KAD-v\u001b\u0017bAAES\t1A+\u001e9mKN\nQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&DXCAA+\u00031\u0001(o\u001c3vGR\f%/\u001b;z+\t\tY(\u0001\bqe>$Wo\u0019;FY\u0016lWM\u001c;\u0015\u0007\u0001\u000b9\nC\u0004\u0002\u001ab\u0001\r!a\u001f\u0002\u00039\f!\u0003\u001d:pIV\u001cG/\u00127f[\u0016tGOT1nKR!\u0011QKAP\u0011\u001d\tI*\u0007a\u0001\u0003w\n1\"\u0013<z\u0007>l\u0007\u000f\\3uKB\u0011qkG\n\u00057\u001d\n9\u000b\u0005\u0003\u0002*\u0006=VBAAV\u0015\u0011\ti+!\u0018\u0002\u0005%|\u0017b\u0001*\u0002,R\u0011\u00111U\u0001\u0006CB\u0004H._\u000b\u0005\u0003o\u000bi\f\u0006\u0005\u0002:\u0006\r\u0017QYAe!\u00119\u0006!a/\u0011\u0007a\ni\f\u0002\u0004;;\t\u0007\u0011qX\u000b\u0004y\u0005\u0005GA\u0002#\u0002>\n\u0007A\bC\u0003U;\u0001\u0007a\u000b\u0003\u0004\\;\u0001\u0007\u0011q\u0019\t\u0005]y\u000bY\f\u0003\u0004b;\u0001\u0007\u00111\u001a\t\u0005I\u001e\fY,\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0002RB!\u0011qKAj\u0013\u0011\t).!\u0017\u0003\r=\u0013\'.Z2u\u0001
   #16 = Utf8               coursier/core/Repository
   #17 = Class              #16           // coursier/core/Repository
   #18 = Utf8               Complete
   #19 = Utf8               coursier/core/Repository$Complete$
   #20 = Class              #19           // coursier/core/Repository$Complete$
   #21 = Utf8
   #22 = Utf8               coursier/core/Repository$Complete$Input
   #23 = Class              #22           // coursier/core/Repository$Complete$Input
   #24 = Utf8               Input
   #25 = Utf8               coursier/ivy/Pattern$Chunk
   #26 = Class              #25           // coursier/ivy/Pattern$Chunk
   #27 = Utf8               coursier/ivy/Pattern
   #28 = Class              #27           // coursier/ivy/Pattern
   #29 = Utf8               Chunk
   #30 = Utf8               coursier/ivy/Pattern$Chunk$
   #31 = Class              #30           // coursier/ivy/Pattern$Chunk$
   #32 = Utf8               coursier/ivy/Pattern$Chunk$Var
   #33 = Class              #32           // coursier/ivy/Pattern$Chunk$Var
   #34 = Utf8               Var
   #35 = Utf8               coursier/ivy/Pattern$Chunk$Var$
   #36 = Class              #35           // coursier/ivy/Pattern$Chunk$Var$
   #37 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #38 = Class              #37           // java/lang/invoke/MethodHandles$Lookup
   #39 = Utf8               java/lang/invoke/MethodHandles
   #40 = Class              #39           // java/lang/invoke/MethodHandles
   #41 = Utf8               Lookup
   #42 = Utf8               organizationListingPatternOpt
   #43 = Utf8               Lscala/Option;
   #44 = Utf8               Lscala/Option<Lcoursier/ivy/Pattern;>;
   #45 = Utf8               nameListingPatternOpt
   #46 = Utf8               repo
   #47 = Utf8               Lcoursier/ivy/IvyRepository;
   #48 = Utf8               fetch
   #49 = Utf8               Lscala/Function1;
   #50 = Utf8               Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;
   #51 = Utf8               F
   #52 = Utf8               Lcoursier/util/Monad;
   #53 = Utf8               Lcoursier/util/Monad<TF;>;
   #54 = Utf8               bitmap$0
   #55 = Utf8               B
   #56 = Utf8               apply
   #57 = Utf8               (Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/ivy/IvyComplete;
   #58 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/ivy/IvyRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/ivy/IvyComplete<TF;>;
   #59 = Utf8               coursier/ivy/IvyComplete$
   #60 = Class              #59           // coursier/ivy/IvyComplete$
   #61 = Utf8               MODULE$
   #62 = Utf8               Lcoursier/ivy/IvyComplete$;
   #63 = NameAndType        #61:#62       // MODULE$:Lcoursier/ivy/IvyComplete$;
   #64 = Fieldref           #60.#63       // coursier/ivy/IvyComplete$.MODULE$:Lcoursier/ivy/IvyComplete$;
   #65 = NameAndType        #56:#57       // apply:(Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/ivy/IvyComplete;
   #66 = Methodref          #60.#65       // coursier/ivy/IvyComplete$.apply:(Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/ivy/IvyComplete;
   #67 = Utf8               productIterator
   #68 = Utf8               ()Lscala/collection/Iterator;
   #69 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #70 = Utf8               productIterator$
   #71 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #72 = NameAndType        #70:#71       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #73 = InterfaceMethodref #9.#72        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #74 = Utf8               this
   #75 = Utf8               Lcoursier/ivy/IvyComplete;
   #76 = Utf8               productElementNames
   #77 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #78 = Utf8               productElementNames$
   #79 = NameAndType        #78:#71       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #80 = InterfaceMethodref #9.#79        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #81 = Utf8               sbtAttrStub
   #82 = Utf8               ()Z
   #83 = Utf8               sbtAttrStub$
   #84 = Utf8               (Lcoursier/core/Repository$Complete;)Z
   #85 = NameAndType        #83:#84       // sbtAttrStub$:(Lcoursier/core/Repository$Complete;)Z
   #86 = InterfaceMethodref #7.#85        // coursier/core/Repository$Complete.sbtAttrStub$:(Lcoursier/core/Repository$Complete;)Z
   #87 = Utf8               hasModule
   #88 = Utf8               (Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
   #89 = Utf8               (Lcoursier/core/Module;ZLcoursier/util/Monad<TF;>;)TF;
   #90 = Utf8               module
   #91 = Utf8               hasModule$
   #92 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
   #93 = NameAndType        #91:#92       // hasModule$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
   #94 = InterfaceMethodref #7.#93        // coursier/core/Repository$Complete.hasModule$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
   #95 = Utf8               Lcoursier/core/Module;
   #96 = Utf8               Z
   #97 = Utf8               hasModule$default$2
   #98 = Utf8               hasModule$default$2$
   #99 = NameAndType        #98:#84       // hasModule$default$2$:(Lcoursier/core/Repository$Complete;)Z
  #100 = InterfaceMethodref #7.#99        // coursier/core/Repository$Complete.hasModule$default$2$:(Lcoursier/core/Repository$Complete;)Z
  #101 = Utf8               complete
  #102 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #103 = Utf8               (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad<TF;>;)TF;
  #104 = Utf8               input
  #105 = Utf8               complete$
  #106 = Utf8               (Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #107 = NameAndType        #105:#106     // complete$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #108 = InterfaceMethodref #7.#107       // coursier/core/Repository$Complete.complete$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
  #109 = Utf8               Lcoursier/core/Repository$Complete$Input;
  #110 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
  #111 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad<TF;>;)TF;
  #112 = Utf8               scalaVersion
  #113 = Utf8               scalaBinaryVersion
  #114 = Utf8               (Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
  #115 = NameAndType        #105:#114     // complete$:(Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
  #116 = InterfaceMethodref #7.#115       // coursier/core/Repository$Complete.complete$:(Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
  #117 = Utf8               Ljava/lang/String;
  #118 = Utf8               ()Lcoursier/ivy/IvyRepository;
  #119 = NameAndType        #46:#47       // repo:Lcoursier/ivy/IvyRepository;
  #120 = Fieldref           #2.#119       // coursier/ivy/IvyComplete.repo:Lcoursier/ivy/IvyRepository;
  #121 = Utf8               ()Lscala/Function1;
  #122 = Utf8               ()Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;
  #123 = NameAndType        #48:#49       // fetch:Lscala/Function1;
  #124 = Fieldref           #2.#123       // coursier/ivy/IvyComplete.fetch:Lscala/Function1;
  #125 = Utf8               ()Lcoursier/util/Monad;
  #126 = Utf8               ()Lcoursier/util/Monad<TF;>;
  #127 = NameAndType        #51:#52       // F:Lcoursier/util/Monad;
  #128 = Fieldref           #2.#127       // coursier/ivy/IvyComplete.F:Lcoursier/util/Monad;
  #129 = Utf8               F0
  #130 = NameAndType        #51:#125      // F:()Lcoursier/util/Monad;
  #131 = Methodref          #2.#130       // coursier/ivy/IvyComplete.F:()Lcoursier/util/Monad;
  #132 = Utf8               organizationListingPatternOpt$lzycompute
  #133 = Utf8               ()Lscala/Option;
  #134 = Utf8               ()Lscala/Option<Lcoursier/ivy/Pattern;>;
  #135 = NameAndType        #54:#55       // bitmap$0:B
  #136 = Fieldref           #2.#135       // coursier/ivy/IvyComplete.bitmap$0:B
  #137 = NameAndType        #46:#118      // repo:()Lcoursier/ivy/IvyRepository;
  #138 = Methodref          #2.#137       // coursier/ivy/IvyComplete.repo:()Lcoursier/ivy/IvyRepository;
  #139 = Utf8               Lcoursier/ivy/Pattern$Chunk$Var$;
  #140 = NameAndType        #61:#139      // MODULE$:Lcoursier/ivy/Pattern$Chunk$Var$;
  #141 = Fieldref           #36.#140      // coursier/ivy/Pattern$Chunk$Var$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Var$;
  #142 = Utf8               organisation
  #143 = String             #142          // organisation
  #144 = Utf8               (Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Var;
  #145 = NameAndType        #56:#144      // apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Var;
  #146 = Methodref          #36.#145      // coursier/ivy/Pattern$Chunk$Var$.apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Var;
  #147 = Utf8               coursier/ivy/IvyRepository
  #148 = Class              #147          // coursier/ivy/IvyRepository
  #149 = Utf8               patternUpTo
  #150 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
  #151 = NameAndType        #149:#150     // patternUpTo:(Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
  #152 = Methodref          #148.#151     // coursier/ivy/IvyRepository.patternUpTo:(Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
  #153 = NameAndType        #42:#43       // organizationListingPatternOpt:Lscala/Option;
  #154 = Fieldref           #2.#153       // coursier/ivy/IvyComplete.organizationListingPatternOpt:Lscala/Option;
  #155 = Utf8               java/lang/Throwable
  #156 = Class              #155          // java/lang/Throwable
  #157 = NameAndType        #132:#133     // organizationListingPatternOpt$lzycompute:()Lscala/Option;
  #158 = Methodref          #2.#157       // coursier/ivy/IvyComplete.organizationListingPatternOpt$lzycompute:()Lscala/Option;
  #159 = Utf8               scala/Option
  #160 = Class              #159          // scala/Option
  #161 = Utf8               nameListingPatternOpt$lzycompute
  #162 = String             #90           // module
  #163 = NameAndType        #45:#43       // nameListingPatternOpt:Lscala/Option;
  #164 = Fieldref           #2.#163       // coursier/ivy/IvyComplete.nameListingPatternOpt:Lscala/Option;
  #165 = NameAndType        #161:#133     // nameListingPatternOpt$lzycompute:()Lscala/Option;
  #166 = Methodref          #2.#165       // coursier/ivy/IvyComplete.nameListingPatternOpt$lzycompute:()Lscala/Option;
  #167 = Utf8               organization
  #168 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #169 = Utf8               (Ljava/lang/String;)TF;
  #170 = Utf8               prefix
  #171 = NameAndType        #42:#133      // organizationListingPatternOpt:()Lscala/Option;
  #172 = Methodref          #2.#171       // coursier/ivy/IvyComplete.organizationListingPatternOpt:()Lscala/Option;
  #173 = Utf8               organizations
  #174 = String             #173          // organizations
  #175 = Utf8               scala/Predef$
  #176 = Class              #175          // scala/Predef$
  #177 = Utf8               Lscala/Predef$;
  #178 = NameAndType        #61:#177      // MODULE$:Lscala/Predef$;
  #179 = Fieldref           #176.#178     // scala/Predef$.MODULE$:Lscala/Predef$;
  #180 = Utf8               Map
  #181 = Utf8               ()Lscala/collection/immutable/Map$;
  #182 = NameAndType        #180:#181     // Map:()Lscala/collection/immutable/Map$;
  #183 = Methodref          #176.#182     // scala/Predef$.Map:()Lscala/collection/immutable/Map$;
  #184 = Utf8               scala/collection/immutable/Map$
  #185 = Class              #184          // scala/collection/immutable/Map$
  #186 = Utf8               empty
  #187 = Utf8               ()Lscala/collection/immutable/Map;
  #188 = NameAndType        #186:#187     // empty:()Lscala/collection/immutable/Map;
  #189 = Methodref          #185.#188     // scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
  #190 = NameAndType        #48:#121      // fetch:()Lscala/Function1;
  #191 = Methodref          #2.#190       // coursier/ivy/IvyComplete.fetch:()Lscala/Function1;
  #192 = NameAndType        #129:#125     // F0:()Lcoursier/util/Monad;
  #193 = Methodref          #2.#192       // coursier/ivy/IvyComplete.F0:()Lcoursier/util/Monad;
  #194 = Utf8               listing
  #195 = Utf8               (Lscala/Option;Ljava/lang/String;Lscala/collection/immutable/Map;Lscala/Function1;Ljava/lang/String;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #196 = NameAndType        #194:#195     // listing:(Lscala/Option;Ljava/lang/String;Lscala/collection/immutable/Map;Lscala/Function1;Ljava/lang/String;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #197 = Methodref          #148.#196     // coursier/ivy/IvyRepository.listing:(Lscala/Option;Ljava/lang/String;Lscala/collection/immutable/Map;Lscala/Function1;Ljava/lang/String;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #198 = Utf8               coursier/util/EitherT
  #199 = Class              #198          // coursier/util/EitherT
  #200 = Utf8               run
  #201 = Utf8               ()Ljava/lang/Object;
  #202 = NameAndType        #200:#201     // run:()Ljava/lang/Object;
  #203 = Methodref          #199.#202     // coursier/util/EitherT.run:()Ljava/lang/Object;
  #204 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #205 = MethodType         #204          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #206 = Utf8               $anonfun$organization$1
  #207 = Utf8               (Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
  #208 = NameAndType        #206:#207     // $anonfun$organization$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
  #209 = Methodref          #2.#208       // coursier/ivy/IvyComplete.$anonfun$organization$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
  #210 = MethodHandle       6:#209        // REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$organization$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
  #211 = Utf8               (Lscala/util/Either;)Lscala/util/Either;
  #212 = MethodType         #211          //  (Lscala/util/Either;)Lscala/util/Either;
  #213 = Integer            5
  #214 = Integer            1
  #215 = Utf8               java/lang/invoke/LambdaMetafactory
  #216 = Class              #215          // java/lang/invoke/LambdaMetafactory
  #217 = Utf8               altMetafactory
  #218 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #219 = NameAndType        #217:#218     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #220 = Methodref          #216.#219     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #221 = MethodHandle       6:#220        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #222 = Utf8               (Lcoursier/ivy/IvyComplete;)Lscala/Function1;
  #223 = NameAndType        #56:#222      // apply:(Lcoursier/ivy/IvyComplete;)Lscala/Function1;
  #224 = InvokeDynamic      #0:#223       // #0:apply:(Lcoursier/ivy/IvyComplete;)Lscala/Function1;
  #225 = Utf8               coursier/util/Monad
  #226 = Class              #225          // coursier/util/Monad
  #227 = Utf8               map
  #228 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #229 = NameAndType        #227:#228     // map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #230 = InterfaceMethodref #226.#229     // coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #231 = Utf8               moduleName
  #232 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #233 = Utf8               (Ljava/lang/String;Ljava/lang/String;)TF;
  #234 = NameAndType        #45:#133      // nameListingPatternOpt:()Lscala/Option;
  #235 = Methodref          #2.#234       // coursier/ivy/IvyComplete.nameListingPatternOpt:()Lscala/Option;
  #236 = Utf8               module names
  #237 = String             #236          // module names
  #238 = Utf8               orgVariables
  #239 = Utf8               (Ljava/lang/String;)Lscala/collection/immutable/Map;
  #240 = NameAndType        #238:#239     // orgVariables:(Ljava/lang/String;)Lscala/collection/immutable/Map;
  #241 = Methodref          #148.#240     // coursier/ivy/IvyRepository.orgVariables:(Ljava/lang/String;)Lscala/collection/immutable/Map;
  #242 = Utf8               $anonfun$moduleName$1
  #243 = NameAndType        #242:#207     // $anonfun$moduleName$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
  #244 = Methodref          #2.#243       // coursier/ivy/IvyComplete.$anonfun$moduleName$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
  #245 = MethodHandle       6:#244        // REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$moduleName$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
  #246 = InvokeDynamic      #1:#223       // #1:apply:(Lcoursier/ivy/IvyComplete;)Lscala/Function1;
  #247 = Utf8               versions
  #248 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;)Ljava/lang/Object;
  #249 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;)TF;
  #250 = Utf8               availableVersions
  #251 = Utf8               (Lcoursier/core/Module;Lscala/Function1;Ljava/lang/String;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #252 = NameAndType        #250:#251     // availableVersions:(Lcoursier/core/Module;Lscala/Function1;Ljava/lang/String;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #253 = Methodref          #148.#252     // coursier/ivy/IvyRepository.availableVersions:(Lcoursier/core/Module;Lscala/Function1;Ljava/lang/String;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #254 = Utf8               $anonfun$versions$1
  #255 = NameAndType        #254:#211     // $anonfun$versions$1:(Lscala/util/Either;)Lscala/util/Either;
  #256 = Methodref          #2.#255       // coursier/ivy/IvyComplete.$anonfun$versions$1:(Lscala/util/Either;)Lscala/util/Either;
  #257 = MethodHandle       6:#256        // REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$versions$1:(Lscala/util/Either;)Lscala/util/Either;
  #258 = NameAndType        #56:#121      // apply:()Lscala/Function1;
  #259 = InvokeDynamic      #2:#258       // #2:apply:()Lscala/Function1;
  #260 = Utf8               withRepo
  #261 = Utf8               (Lcoursier/ivy/IvyRepository;)Lcoursier/ivy/IvyComplete;
  #262 = Utf8               (Lcoursier/ivy/IvyRepository;)Lcoursier/ivy/IvyComplete<TF;>;
  #263 = Utf8               <init>
  #264 = Utf8               (Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)V
  #265 = NameAndType        #263:#264     // "<init>":(Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)V
  #266 = Methodref          #2.#265       // coursier/ivy/IvyComplete."<init>":(Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)V
  #267 = Utf8               withFetch
  #268 = Utf8               (Lscala/Function1;)Lcoursier/ivy/IvyComplete;
  #269 = Utf8               (Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;)Lcoursier/ivy/IvyComplete<TF;>;
  #270 = Utf8               withF
  #271 = Utf8               (Lcoursier/util/Monad;)Lcoursier/ivy/IvyComplete;
  #272 = Utf8               (Lcoursier/util/Monad<TF;>;)Lcoursier/ivy/IvyComplete<TF;>;
  #273 = Utf8               toString
  #274 = Utf8               ()Ljava/lang/String;
  #275 = Utf8               java/lang/StringBuilder
  #276 = Class              #275          // java/lang/StringBuilder
  #277 = Utf8               IvyComplete(
  #278 = String             #277          // IvyComplete(
  #279 = Utf8               (Ljava/lang/String;)V
  #280 = NameAndType        #263:#279     // "<init>":(Ljava/lang/String;)V
  #281 = Methodref          #276.#280     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #282 = Utf8               java/lang/String
  #283 = Class              #282          // java/lang/String
  #284 = Utf8               valueOf
  #285 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #286 = NameAndType        #284:#285     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #287 = Methodref          #283.#286     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #288 = Utf8               append
  #289 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #290 = NameAndType        #288:#289     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #291 = Methodref          #276.#290     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #292 = Utf8               ,
  #293 = String             #292          // ,
  #294 = Utf8               )
  #295 = String             #294          // )
  #296 = NameAndType        #273:#274     // toString:()Ljava/lang/String;
  #297 = Methodref          #276.#296     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #298 = Utf8               b
  #299 = Utf8               Ljava/lang/StringBuilder;
  #300 = Utf8               canEqual
  #301 = Utf8               (Ljava/lang/Object;)Z
  #302 = Utf8               obj
  #303 = Utf8               Ljava/lang/Object;
  #304 = Utf8               equals
  #305 = NameAndType        #300:#301     // canEqual:(Ljava/lang/Object;)Z
  #306 = Methodref          #2.#305       // coursier/ivy/IvyComplete.canEqual:(Ljava/lang/Object;)Z
  #307 = NameAndType        #304:#301     // equals:(Ljava/lang/Object;)Z
  #308 = Methodref          #5.#307       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #309 = Utf8               scala/Function1
  #310 = Class              #309          // scala/Function1
  #311 = Utf8               other
  #312 = Utf8               hashCode
  #313 = Utf8               ()I
  #314 = Utf8               IvyComplete
  #315 = String             #314          // IvyComplete
  #316 = Utf8               scala/runtime/Statics
  #317 = Class              #316          // scala/runtime/Statics
  #318 = Utf8               anyHash
  #319 = Utf8               (Ljava/lang/Object;)I
  #320 = NameAndType        #318:#319     // anyHash:(Ljava/lang/Object;)I
  #321 = Methodref          #317.#320     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #322 = Utf8               code
  #323 = Utf8               I
  #324 = Utf8               tuple
  #325 = Utf8               ()Lscala/Tuple3;
  #326 = Utf8               ()Lscala/Tuple3<Lcoursier/ivy/IvyRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;>;
  #327 = Utf8               scala/Tuple3
  #328 = Class              #327          // scala/Tuple3
  #329 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #330 = NameAndType        #263:#329     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #331 = Methodref          #328.#330     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #332 = Utf8               productPrefix
  #333 = Utf8               productArity
  #334 = Utf8               productElement
  #335 = Utf8               (I)Ljava/lang/Object;
  #336 = Utf8               n
  #337 = Utf8               java/lang/IndexOutOfBoundsException
  #338 = Class              #337          // java/lang/IndexOutOfBoundsException
  #339 = Utf8               scala/runtime/BoxesRunTime
  #340 = Class              #339          // scala/runtime/BoxesRunTime
  #341 = Utf8               boxToInteger
  #342 = Utf8               (I)Ljava/lang/Integer;
  #343 = NameAndType        #341:#342     // boxToInteger:(I)Ljava/lang/Integer;
  #344 = Methodref          #340.#343     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #345 = Methodref          #5.#296       // java/lang/Object.toString:()Ljava/lang/String;
  #346 = Methodref          #338.#280     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #347 = Utf8               productElementName
  #348 = Utf8               (I)Ljava/lang/String;
  #349 = String             #46           // repo
  #350 = String             #48           // fetch
  #351 = String             #51           // F
  #352 = Utf8               $this
  #353 = Utf8               x0$1
  #354 = Utf8               scala/util/Left
  #355 = Class              #354          // scala/util/Left
  #356 = Utf8               value
  #357 = NameAndType        #356:#201     // value:()Ljava/lang/Object;
  #358 = Methodref          #355.#357     // scala/util/Left.value:()Ljava/lang/Object;
  #359 = Utf8               scala/package$
  #360 = Class              #359          // scala/package$
  #361 = Utf8               Lscala/package$;
  #362 = NameAndType        #61:#361      // MODULE$:Lscala/package$;
  #363 = Fieldref           #360.#362     // scala/package$.MODULE$:Lscala/package$;
  #364 = Utf8               Left
  #365 = Utf8               ()Lscala/util/Left$;
  #366 = NameAndType        #364:#365     // Left:()Lscala/util/Left$;
  #367 = Methodref          #360.#366     // scala/package$.Left:()Lscala/util/Left$;
  #368 = Utf8               java/lang/Exception
  #369 = Class              #368          // java/lang/Exception
  #370 = Methodref          #369.#280     // java/lang/Exception."<init>":(Ljava/lang/String;)V
  #371 = Utf8               scala/util/Left$
  #372 = Class              #371          // scala/util/Left$
  #373 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #374 = NameAndType        #56:#373      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #375 = Methodref          #372.#374     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #376 = Utf8               scala/util/Either
  #377 = Class              #376          // scala/util/Either
  #378 = Utf8               scala/util/Right
  #379 = Class              #378          // scala/util/Right
  #380 = Methodref          #379.#357     // scala/util/Right.value:()Ljava/lang/Object;
  #381 = Utf8               scala/None$
  #382 = Class              #381          // scala/None$
  #383 = Utf8               Lscala/None$;
  #384 = NameAndType        #61:#383      // MODULE$:Lscala/None$;
  #385 = Fieldref           #382.#384     // scala/None$.MODULE$:Lscala/None$;
  #386 = Integer            28
  #387 = Utf8               (I)V
  #388 = NameAndType        #263:#387     // "<init>":(I)V
  #389 = Methodref          #276.#388     // java/lang/StringBuilder."<init>":(I)V
  #390 = Utf8               Can\'t list organizations of
  #391 = String             #390          // Can\'t list organizations of
  #392 = Utf8               metadataPattern
  #393 = Utf8               ()Lcoursier/ivy/Pattern;
  #394 = NameAndType        #392:#393     // metadataPattern:()Lcoursier/ivy/Pattern;
  #395 = Methodref          #148.#394     // coursier/ivy/IvyRepository.metadataPattern:()Lcoursier/ivy/Pattern;
  #396 = Utf8               string
  #397 = NameAndType        #396:#274     // string:()Ljava/lang/String;
  #398 = Methodref          #28.#397      // coursier/ivy/Pattern.string:()Ljava/lang/String;
  #399 = Utf8               scala/Some
  #400 = Class              #399          // scala/Some
  #401 = Methodref          #400.#357     // scala/Some.value:()Ljava/lang/Object;
  #402 = Utf8               scala/Tuple2
  #403 = Class              #402          // scala/Tuple2
  #404 = Utf8               _2
  #405 = NameAndType        #404:#201     // _2:()Ljava/lang/Object;
  #406 = Methodref          #403.#405     // scala/Tuple2._2:()Ljava/lang/Object;
  #407 = Utf8               scala/collection/immutable/Seq
  #408 = Class              #407          // scala/collection/immutable/Seq
  #409 = Utf8               Right
  #410 = Utf8               ()Lscala/util/Right$;
  #411 = NameAndType        #409:#410     // Right:()Lscala/util/Right$;
  #412 = Methodref          #360.#411     // scala/package$.Right:()Lscala/util/Right$;
  #413 = Utf8               scala/util/Right$
  #414 = Class              #413          // scala/util/Right$
  #415 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #416 = NameAndType        #56:#415      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #417 = Methodref          #414.#416     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #418 = Utf8               scala/MatchError
  #419 = Class              #418          // scala/MatchError
  #420 = Utf8               (Ljava/lang/Object;)V
  #421 = NameAndType        #263:#420     // "<init>":(Ljava/lang/Object;)V
  #422 = Methodref          #419.#421     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #423 = Utf8               e
  #424 = Utf8               l
  #425 = Utf8               Lscala/collection/immutable/Seq;
  #426 = Utf8               Lscala/util/Either;
  #427 = Integer            27
  #428 = Utf8               Can\'t list module names of
  #429 = String             #428          // Can\'t list module names of
  #430 = Utf8               $anonfun$versions$2
  #431 = Utf8               (Lcoursier/core/Version;)Ljava/lang/String;
  #432 = Utf8               x$1
  #433 = Utf8               coursier/core/Version
  #434 = Class              #433          // coursier/core/Version
  #435 = Utf8               repr
  #436 = NameAndType        #435:#274     // repr:()Ljava/lang/String;
  #437 = Methodref          #434.#436     // coursier/core/Version.repr:()Ljava/lang/String;
  #438 = Utf8               Lcoursier/core/Version;
  #439 = Utf8               Version listing not available on this repository
  #440 = String             #439          // Version listing not available on this repository
  #441 = NameAndType        #430:#431     // $anonfun$versions$2:(Lcoursier/core/Version;)Ljava/lang/String;
  #442 = Methodref          #2.#441       // coursier/ivy/IvyComplete.$anonfun$versions$2:(Lcoursier/core/Version;)Ljava/lang/String;
  #443 = MethodHandle       6:#442        // REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$versions$2:(Lcoursier/core/Version;)Ljava/lang/String;
  #444 = MethodType         #431          //  (Lcoursier/core/Version;)Ljava/lang/String;
  #445 = InvokeDynamic      #3:#258       // #3:apply:()Lscala/Function1;
  #446 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #447 = NameAndType        #227:#446     // map:(Lscala/Function1;)Ljava/lang/Object;
  #448 = InterfaceMethodref #408.#447     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #449 = Utf8               (Lcoursier/ivy/IvyRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)V
  #450 = Utf8               ()V
  #451 = NameAndType        #263:#450     // "<init>":()V
  #452 = Methodref          #5.#451       // java/lang/Object."<init>":()V
  #453 = Utf8               $init$
  #454 = Utf8               (Lcoursier/core/Repository$Complete;)V
  #455 = NameAndType        #453:#454     // $init$:(Lcoursier/core/Repository$Complete;)V
  #456 = InterfaceMethodref #7.#455       // coursier/core/Repository$Complete.$init$:(Lcoursier/core/Repository$Complete;)V
  #457 = Utf8               (Lscala/Product;)V
  #458 = NameAndType        #453:#457     // $init$:(Lscala/Product;)V
  #459 = InterfaceMethodref #9.#458       // scala/Product.$init$:(Lscala/Product;)V
  #460 = Utf8               $deserializeLambda$
  #461 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #462 = Utf8               scala/runtime/LambdaDeserialize
  #463 = Class              #462          // scala/runtime/LambdaDeserialize
  #464 = Utf8               bootstrap
  #465 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #466 = NameAndType        #464:#465     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #467 = Methodref          #463.#466     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #468 = MethodHandle       6:#467        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #469 = Utf8               lambdaDeserialize
  #470 = NameAndType        #469:#461     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #471 = InvokeDynamic      #4:#470       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #472 = Utf8               Signature
  #473 = Utf8               Code
  #474 = Utf8               MethodParameters
  #475 = Utf8               LineNumberTable
  #476 = Utf8               LocalVariableTable
  #477 = Utf8               StackMapTable
  #478 = Utf8               InnerClasses
  #479 = Utf8               SourceFile
  #480 = Utf8               RuntimeVisibleAnnotations
  #481 = Utf8               BootstrapMethods
  #482 = Utf8               ScalaInlineInfo
  #483 = Utf8               ScalaSig
{
  private scala.Option<coursier.ivy.Pattern> organizationListingPatternOpt;
    descriptor: Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Signature: #44                          // Lscala/Option<Lcoursier/ivy/Pattern;>;

  private scala.Option<coursier.ivy.Pattern> nameListingPatternOpt;
    descriptor: Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Signature: #44                          // Lscala/Option<Lcoursier/ivy/Pattern;>;

  private final coursier.ivy.IvyRepository repo;
    descriptor: Lcoursier/ivy/IvyRepository;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>> fetch;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #50                          // Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;

  private final coursier.util.Monad<F> F;
    descriptor: Lcoursier/util/Monad;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #53                          // Lcoursier/util/Monad<TF;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static <F extends java.lang.Object> coursier.ivy.IvyComplete<F> apply(coursier.ivy.IvyRepository, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/ivy/IvyComplete;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #64                 // Field coursier/ivy/IvyComplete$.MODULE$:Lcoursier/ivy/IvyComplete$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #66                 // Method coursier/ivy/IvyComplete$.apply:(Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/ivy/IvyComplete;
         9: areturn
    Signature: #58                          // <F:Ljava/lang/Object;>(Lcoursier/ivy/IvyRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/ivy/IvyComplete<TF;>;
    MethodParameters:
      Name                           Flags
      repo                           final
      fetch                          final
      F                              final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #73                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #69                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #80                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #77                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public boolean sbtAttrStub();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #86                 // InterfaceMethod coursier/core/Repository$Complete.sbtAttrStub$:(Lcoursier/core/Repository$Complete;)Z
         4: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/IvyComplete;

  public F hasModule(coursier.core.Module, boolean, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: iload_2
         3: aload_3
         4: invokestatic  #94                 // InterfaceMethod coursier/core/Repository$Complete.hasModule$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/ivy/IvyComplete;
            0       8     1 module   Lcoursier/core/Module;
            0       8     2 sbtAttrStub   Z
            0       8     3     F   Lcoursier/util/Monad;
    Signature: #89                          // (Lcoursier/core/Module;ZLcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      module                         final
      sbtAttrStub                    final
      F                              final

  public boolean hasModule$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #100                // InterfaceMethod coursier/core/Repository$Complete.hasModule$default$2$:(Lcoursier/core/Repository$Complete;)Z
         4: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/IvyComplete;

  public final F complete(coursier.core.Repository$Complete$Input, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #108                // InterfaceMethod coursier/core/Repository$Complete.complete$:(Lcoursier/core/Repository$Complete;Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/ivy/IvyComplete;
            0       7     1 input   Lcoursier/core/Repository$Complete$Input;
            0       7     2     F   Lcoursier/util/Monad;
    Signature: #103                         // (Lcoursier/core/Repository$Complete$Input;Lcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      input                          final
      F                              final

  public final F complete(java.lang.String, java.lang.String, java.lang.String, coursier.util.Monad<F>);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #116                // InterfaceMethod coursier/core/Repository$Complete.complete$:(Lcoursier/core/Repository$Complete;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/ivy/IvyComplete;
            0      10     1 input   Ljava/lang/String;
            0      10     2 scalaVersion   Ljava/lang/String;
            0      10     3 scalaBinaryVersion   Ljava/lang/String;
            0      10     4     F   Lcoursier/util/Monad;
    Signature: #111                         // (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      input                          final
      scalaVersion                   final
      scalaBinaryVersion             final
      F                              final

  public coursier.ivy.IvyRepository repo();
    descriptor: ()Lcoursier/ivy/IvyRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #120                // Field repo:Lcoursier/ivy/IvyRepository;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/IvyComplete;

  public scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>> fetch();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #124                // Field fetch:Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #122                         // ()Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;

  public coursier.util.Monad<F> F();
    descriptor: ()Lcoursier/util/Monad;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #128                // Field F:Lcoursier/util/Monad;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #126                         // ()Lcoursier/util/Monad<TF;>;

  private coursier.util.Monad<F> F0();
    descriptor: ()Lcoursier/util/Monad;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #126                         // ()Lcoursier/util/Monad<TF;>;

  private scala.Option<coursier.ivy.Pattern> organizationListingPatternOpt$lzycompute();
    descriptor: ()Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #136                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     45
        15: aload_0
        16: aload_0
        17: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
        20: getstatic     #141                // Field coursier/ivy/Pattern$Chunk$Var$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Var$;
        23: ldc           #143                // String organisation
        25: invokevirtual #146                // Method coursier/ivy/Pattern$Chunk$Var$.apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Var;
        28: invokevirtual #152                // Method coursier/ivy/IvyRepository.patternUpTo:(Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
        31: putfield      #154                // Field organizationListingPatternOpt:Lscala/Option;
        34: aload_0
        35: aload_0
        36: getfield      #136                // Field bitmap$0:B
        39: iconst_1
        40: ior
        41: i2b
        42: putfield      #136                // Field bitmap$0:B
        45: aload_1
        46: monitorexit
        47: goto          53
        50: aload_1
        51: monitorexit
        52: athrow
        53: aload_0
        54: getfield      #154                // Field organizationListingPatternOpt:Lscala/Option;
        57: areturn
      Exception table:
         from    to  target type
             4    45    50   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ class coursier/ivy/IvyComplete ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 15: 0
        line 16: 16
        line 15: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #134                         // ()Lscala/Option<Lcoursier/ivy/Pattern;>;

  private scala.Option<coursier.ivy.Pattern> organizationListingPatternOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #136                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #158                // Method organizationListingPatternOpt$lzycompute:()Lscala/Option;
        15: goto          22
        18: aload_0
        19: getfield      #154                // Field organizationListingPatternOpt:Lscala/Option;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #134                         // ()Lscala/Option<Lcoursier/ivy/Pattern;>;

  private scala.Option<coursier.ivy.Pattern> nameListingPatternOpt$lzycompute();
    descriptor: ()Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #136                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     45
        15: aload_0
        16: aload_0
        17: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
        20: getstatic     #141                // Field coursier/ivy/Pattern$Chunk$Var$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Var$;
        23: ldc           #162                // String module
        25: invokevirtual #146                // Method coursier/ivy/Pattern$Chunk$Var$.apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Var;
        28: invokevirtual #152                // Method coursier/ivy/IvyRepository.patternUpTo:(Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
        31: putfield      #164                // Field nameListingPatternOpt:Lscala/Option;
        34: aload_0
        35: aload_0
        36: getfield      #136                // Field bitmap$0:B
        39: iconst_2
        40: ior
        41: i2b
        42: putfield      #136                // Field bitmap$0:B
        45: aload_1
        46: monitorexit
        47: goto          53
        50: aload_1
        51: monitorexit
        52: athrow
        53: aload_0
        54: getfield      #164                // Field nameListingPatternOpt:Lscala/Option;
        57: areturn
      Exception table:
         from    to  target type
             4    45    50   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ class coursier/ivy/IvyComplete ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 17: 0
        line 18: 16
        line 17: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #134                         // ()Lscala/Option<Lcoursier/ivy/Pattern;>;

  private scala.Option<coursier.ivy.Pattern> nameListingPatternOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #136                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #166                // Method nameListingPatternOpt$lzycompute:()Lscala/Option;
        15: goto          22
        18: aload_0
        19: getfield      #164                // Field nameListingPatternOpt:Lscala/Option;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #134                         // ()Lscala/Option<Lcoursier/ivy/Pattern;>;

  public F organization(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
         4: aload_0
         5: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
         8: aload_0
         9: invokespecial #172                // Method organizationListingPatternOpt:()Lscala/Option;
        12: ldc           #174                // String organizations
        14: getstatic     #179                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        17: invokevirtual #183                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
        20: invokevirtual #189                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
        23: aload_0
        24: invokevirtual #191                // Method fetch:()Lscala/Function1;
        27: aload_1
        28: aload_0
        29: invokespecial #193                // Method F0:()Lcoursier/util/Monad;
        32: invokevirtual #197                // Method coursier/ivy/IvyRepository.listing:(Lscala/Option;Ljava/lang/String;Lscala/collection/immutable/Map;Lscala/Function1;Ljava/lang/String;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        35: invokevirtual #203                // Method coursier/util/EitherT.run:()Ljava/lang/Object;
        38: aload_0
        39: invokedynamic #224,  0            // InvokeDynamic #0:apply:(Lcoursier/ivy/IvyComplete;)Lscala/Function1;
        44: invokeinterface #230,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        49: areturn
      LineNumberTable:
        line 22: 0
        line 22: 4
        line 23: 8
        line 24: 12
        line 25: 14
        line 26: 23
        line 27: 27
        line 22: 28
        line 28: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lcoursier/ivy/IvyComplete;
            0      50     1 prefix   Ljava/lang/String;
    Signature: #169                         // (Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      prefix                         final

  public F moduleName(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
         4: aload_0
         5: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
         8: aload_0
         9: invokespecial #235                // Method nameListingPatternOpt:()Lscala/Option;
        12: ldc           #237                // String module names
        14: aload_0
        15: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
        18: aload_1
        19: invokevirtual #241                // Method coursier/ivy/IvyRepository.orgVariables:(Ljava/lang/String;)Lscala/collection/immutable/Map;
        22: aload_0
        23: invokevirtual #191                // Method fetch:()Lscala/Function1;
        26: aload_2
        27: aload_0
        28: invokespecial #193                // Method F0:()Lcoursier/util/Monad;
        31: invokevirtual #197                // Method coursier/ivy/IvyRepository.listing:(Lscala/Option;Ljava/lang/String;Lscala/collection/immutable/Map;Lscala/Function1;Ljava/lang/String;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        34: invokevirtual #203                // Method coursier/util/EitherT.run:()Ljava/lang/Object;
        37: aload_0
        38: invokedynamic #246,  0            // InvokeDynamic #1:apply:(Lcoursier/ivy/IvyComplete;)Lscala/Function1;
        43: invokeinterface #230,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        48: areturn
      LineNumberTable:
        line 35: 0
        line 35: 4
        line 36: 8
        line 37: 12
        line 38: 14
        line 39: 22
        line 40: 26
        line 35: 27
        line 41: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lcoursier/ivy/IvyComplete;
            0      49     1 organization   Ljava/lang/String;
            0      49     2 prefix   Ljava/lang/String;
    Signature: #233                         // (Ljava/lang/String;Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      organization                   final
      prefix                         final

  public F versions(coursier.core.Module, java.lang.String);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
         4: aload_0
         5: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
         8: aload_1
         9: aload_0
        10: invokevirtual #191                // Method fetch:()Lscala/Function1;
        13: aload_2
        14: aload_0
        15: invokespecial #193                // Method F0:()Lcoursier/util/Monad;
        18: invokevirtual #253                // Method coursier/ivy/IvyRepository.availableVersions:(Lcoursier/core/Module;Lscala/Function1;Ljava/lang/String;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        21: invokevirtual #203                // Method coursier/util/EitherT.run:()Ljava/lang/Object;
        24: invokedynamic #259,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        29: invokeinterface #230,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        34: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lcoursier/ivy/IvyComplete;
            0      35     1 module   Lcoursier/core/Module;
            0      35     2 prefix   Ljava/lang/String;
    Signature: #249                         // (Lcoursier/core/Module;Ljava/lang/String;)TF;
    MethodParameters:
      Name                           Flags
      module                         final
      prefix                         final

  public coursier.ivy.IvyComplete<F> withRepo(coursier.ivy.IvyRepository);
    descriptor: (Lcoursier/ivy/IvyRepository;)Lcoursier/ivy/IvyComplete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/ivy/IvyComplete
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #191                // Method fetch:()Lscala/Function1;
         9: aload_0
        10: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
        13: invokespecial #266                // Method "<init>":(Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)V
        16: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/ivy/IvyComplete;
            0      17     1  repo   Lcoursier/ivy/IvyRepository;
    Signature: #262                         // (Lcoursier/ivy/IvyRepository;)Lcoursier/ivy/IvyComplete<TF;>;
    MethodParameters:
      Name                           Flags
      repo                           final

  public coursier.ivy.IvyComplete<F> withFetch(scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>);
    descriptor: (Lscala/Function1;)Lcoursier/ivy/IvyComplete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/ivy/IvyComplete
         3: dup
         4: aload_0
         5: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
         8: aload_1
         9: aload_0
        10: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
        13: invokespecial #266                // Method "<init>":(Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)V
        16: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/ivy/IvyComplete;
            0      17     1 fetch   Lscala/Function1;
    Signature: #269                         // (Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;)Lcoursier/ivy/IvyComplete<TF;>;
    MethodParameters:
      Name                           Flags
      fetch                          final

  public coursier.ivy.IvyComplete<F> withF(coursier.util.Monad<F>);
    descriptor: (Lcoursier/util/Monad;)Lcoursier/ivy/IvyComplete;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/ivy/IvyComplete
         3: dup
         4: aload_0
         5: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
         8: aload_0
         9: invokevirtual #191                // Method fetch:()Lscala/Function1;
        12: aload_1
        13: invokespecial #266                // Method "<init>":(Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)V
        16: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/ivy/IvyComplete;
            0      17     1     F   Lcoursier/util/Monad;
    Signature: #272                         // (Lcoursier/util/Monad<TF;>;)Lcoursier/ivy/IvyComplete<TF;>;
    MethodParameters:
      Name                           Flags
      F                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #276                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #278                // String IvyComplete(
         7: invokespecial #281                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
        16: invokestatic  #287                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #293                // String ,
        27: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: aload_0
        33: invokevirtual #191                // Method fetch:()Lscala/Function1;
        36: invokestatic  #287                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        39: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: pop
        43: aload_1
        44: ldc_w         #293                // String ,
        47: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
        56: invokestatic  #287                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        59: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: pop
        63: aload_1
        64: ldc_w         #295                // String )
        67: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: pop
        71: aload_1
        72: invokevirtual #297                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        75: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      64     1     b   Ljava/lang/StringBuilder;
            0      76     0  this   Lcoursier/ivy/IvyComplete;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/ivy/IvyComplete
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/ivy/IvyComplete;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     120
         5: aload_0
         6: aload_1
         7: invokevirtual #306                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          124
        13: aload_1
        14: checkcast     #2                  // class coursier/ivy/IvyComplete
        17: astore_2
        18: iconst_1
        19: ifeq          116
        22: aload_0
        23: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
        26: aload_2
        27: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          116
        43: aload_3
        44: invokevirtual #308                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          116
        50: aload_0
        51: invokevirtual #191                // Method fetch:()Lscala/Function1;
        54: aload_2
        55: invokevirtual #191                // Method fetch:()Lscala/Function1;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          116
        73: aload         4
        75: invokevirtual #308                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          116
        81: aload_0
        82: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
        85: aload_2
        86: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
        89: astore        5
        91: dup
        92: ifnonnull     104
        95: pop
        96: aload         5
        98: ifnull        112
       101: goto          116
       104: aload         5
       106: invokevirtual #308                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       109: ifeq          116
       112: iconst_1
       113: goto          117
       116: iconst_0
       117: ifeq          124
       120: iconst_1
       121: goto          125
       124: iconst_0
       125: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/ivy/IvyComplete, class java/lang/Object, class coursier/ivy/IvyComplete, class coursier/ivy/IvyRepository ]
          stack = [ class coursier/ivy/IvyRepository ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/ivy/IvyComplete, class java/lang/Object, class coursier/ivy/IvyComplete, class coursier/ivy/IvyRepository, class scala/Function1 ]
          stack = [ class scala/Function1 ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/ivy/IvyComplete, class java/lang/Object, class coursier/ivy/IvyComplete, class coursier/ivy/IvyRepository, class scala/Function1, class coursier/util/Monad ]
          stack = [ class coursier/util/Monad ]
        frame_type = 7 /* same */
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      99     2 other   Lcoursier/ivy/IvyComplete;
            0     126     0  this   Lcoursier/ivy/IvyComplete;
            0     126     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #315                // String IvyComplete
         5: invokestatic  #321                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
        18: invokestatic  #321                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: aload_0
        28: invokevirtual #191                // Method fetch:()Lscala/Function1;
        31: invokestatic  #321                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        34: iadd
        35: istore_1
        36: bipush        37
        38: iload_1
        39: imul
        40: aload_0
        41: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
        44: invokestatic  #321                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        47: iadd
        48: istore_1
        49: bipush        37
        51: iload_1
        52: imul
        53: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      43     1  code   I
            0      54     0  this   Lcoursier/ivy/IvyComplete;

  private scala.Tuple3<coursier.ivy.IvyRepository, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>> tuple();
    descriptor: ()Lscala/Tuple3;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=1, args_size=1
         0: new           #328                // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
         8: aload_0
         9: invokevirtual #191                // Method fetch:()Lscala/Function1;
        12: aload_0
        13: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
        16: invokespecial #331                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        19: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lcoursier/ivy/IvyComplete;
    Signature: #326                         // ()Lscala/Tuple3<Lcoursier/ivy/IvyRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #315                // String IvyComplete
         3: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/ivy/IvyComplete;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_3
         1: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/ivy/IvyComplete;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 35
                       2: 42
                 default: 49
            }
        28: aload_0
        29: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
        32: goto          64
        35: aload_0
        36: invokevirtual #191                // Method fetch:()Lscala/Function1;
        39: goto          64
        42: aload_0
        43: invokevirtual #131                // Method F:()Lcoursier/util/Monad;
        46: goto          64
        49: new           #338                // class java/lang/IndexOutOfBoundsException
        52: dup
        53: iload_2
        54: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        57: invokevirtual #345                // Method java/lang/Object.toString:()Ljava/lang/String;
        60: invokespecial #346                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        63: athrow
        64: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0  this   Lcoursier/ivy/IvyComplete;
            0      65     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 34
                       2: 40
                 default: 46
            }
        28: ldc_w         #349                // String repo
        31: goto          61
        34: ldc_w         #350                // String fetch
        37: goto          61
        40: ldc_w         #351                // String F
        43: goto          61
        46: new           #338                // class java/lang/IndexOutOfBoundsException
        49: dup
        50: iload_2
        51: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        54: invokevirtual #345                // Method java/lang/Object.toString:()Ljava/lang/String;
        57: invokespecial #346                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        60: athrow
        61: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lcoursier/ivy/IvyComplete;
            0      62     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.util.Either $anonfun$organization$1(coursier.ivy.IvyComplete, scala.util.Either);
    descriptor: (Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=13, args_size=2
         0: iconst_0
         1: istore_3
         2: aconst_null
         3: astore        4
         5: aload_1
         6: astore        5
         8: aload         5
        10: instanceof    #355                // class scala/util/Left
        13: ifeq          55
        16: aload         5
        18: checkcast     #355                // class scala/util/Left
        21: astore        6
        23: aload         6
        25: invokevirtual #358                // Method scala/util/Left.value:()Ljava/lang/Object;
        28: checkcast     #283                // class java/lang/String
        31: astore        7
        33: getstatic     #363                // Field scala/package$.MODULE$:Lscala/package$;
        36: invokevirtual #367                // Method scala/package$.Left:()Lscala/util/Left$;
        39: new           #369                // class java/lang/Exception
        42: dup
        43: aload         7
        45: invokespecial #370                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
        48: invokevirtual #375                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        51: astore_2
        52: goto          242
        55: goto          58
        58: aload         5
        60: instanceof    #379                // class scala/util/Right
        63: ifeq          151
        66: iconst_1
        67: istore_3
        68: aload         5
        70: checkcast     #379                // class scala/util/Right
        73: astore        4
        75: aload         4
        77: invokevirtual #380                // Method scala/util/Right.value:()Ljava/lang/Object;
        80: checkcast     #160                // class scala/Option
        83: astore        8
        85: getstatic     #385                // Field scala/None$.MODULE$:Lscala/None$;
        88: aload         8
        90: invokevirtual #308                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        93: ifeq          148
        96: getstatic     #363                // Field scala/package$.MODULE$:Lscala/package$;
        99: invokevirtual #367                // Method scala/package$.Left:()Lscala/util/Left$;
       102: new           #369                // class java/lang/Exception
       105: dup
       106: new           #276                // class java/lang/StringBuilder
       109: dup
       110: ldc_w         #386                // int 28
       113: invokespecial #389                // Method java/lang/StringBuilder."<init>":(I)V
       116: ldc_w         #391                // String Can\'t list organizations of
       119: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       122: aload_0
       123: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
       126: invokevirtual #395                // Method coursier/ivy/IvyRepository.metadataPattern:()Lcoursier/ivy/Pattern;
       129: invokevirtual #398                // Method coursier/ivy/Pattern.string:()Ljava/lang/String;
       132: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       135: invokevirtual #297                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       138: invokespecial #370                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       141: invokevirtual #375                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       144: astore_2
       145: goto          242
       148: goto          154
       151: goto          154
       154: iload_3
       155: ifeq          229
       158: aload         4
       160: invokevirtual #380                // Method scala/util/Right.value:()Ljava/lang/Object;
       163: checkcast     #160                // class scala/Option
       166: astore        9
       168: aload         9
       170: instanceof    #400                // class scala/Some
       173: ifeq          226
       176: aload         9
       178: checkcast     #400                // class scala/Some
       181: astore        10
       183: aload         10
       185: invokevirtual #401                // Method scala/Some.value:()Ljava/lang/Object;
       188: checkcast     #403                // class scala/Tuple2
       191: astore        11
       193: aload         11
       195: ifnull        223
       198: aload         11
       200: invokevirtual #406                // Method scala/Tuple2._2:()Ljava/lang/Object;
       203: checkcast     #408                // class scala/collection/immutable/Seq
       206: astore        12
       208: getstatic     #363                // Field scala/package$.MODULE$:Lscala/package$;
       211: invokevirtual #412                // Method scala/package$.Right:()Lscala/util/Right$;
       214: aload         12
       216: invokevirtual #417                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       219: astore_2
       220: goto          242
       223: goto          232
       226: goto          232
       229: goto          232
       232: new           #419                // class scala/MatchError
       235: dup
       236: aload         5
       238: invokespecial #422                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       241: athrow
       242: aload_2
       243: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, null, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 89
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either, top, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, null, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either, top, top, top, class scala/Option, class scala/Some, class scala/Tuple2 ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, class scala/util/Either, int, class scala/util/Right, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 28: 0
        line 29: 8
        line 30: 58
        line 31: 154
        line 28: 232
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           33      22     7     e   Ljava/lang/String;
          208      15    12     l   Lscala/collection/immutable/Seq;
            0     244     0 $this   Lcoursier/ivy/IvyComplete;
            0     244     1  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x0$1                           final

  public static final scala.util.Either $anonfun$moduleName$1(coursier.ivy.IvyComplete, scala.util.Either);
    descriptor: (Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=13, args_size=2
         0: iconst_0
         1: istore_3
         2: aconst_null
         3: astore        4
         5: aload_1
         6: astore        5
         8: aload         5
        10: instanceof    #355                // class scala/util/Left
        13: ifeq          55
        16: aload         5
        18: checkcast     #355                // class scala/util/Left
        21: astore        6
        23: aload         6
        25: invokevirtual #358                // Method scala/util/Left.value:()Ljava/lang/Object;
        28: checkcast     #283                // class java/lang/String
        31: astore        7
        33: getstatic     #363                // Field scala/package$.MODULE$:Lscala/package$;
        36: invokevirtual #367                // Method scala/package$.Left:()Lscala/util/Left$;
        39: new           #369                // class java/lang/Exception
        42: dup
        43: aload         7
        45: invokespecial #370                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
        48: invokevirtual #375                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        51: astore_2
        52: goto          242
        55: goto          58
        58: aload         5
        60: instanceof    #379                // class scala/util/Right
        63: ifeq          151
        66: iconst_1
        67: istore_3
        68: aload         5
        70: checkcast     #379                // class scala/util/Right
        73: astore        4
        75: aload         4
        77: invokevirtual #380                // Method scala/util/Right.value:()Ljava/lang/Object;
        80: checkcast     #160                // class scala/Option
        83: astore        8
        85: getstatic     #385                // Field scala/None$.MODULE$:Lscala/None$;
        88: aload         8
        90: invokevirtual #308                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        93: ifeq          148
        96: getstatic     #363                // Field scala/package$.MODULE$:Lscala/package$;
        99: invokevirtual #367                // Method scala/package$.Left:()Lscala/util/Left$;
       102: new           #369                // class java/lang/Exception
       105: dup
       106: new           #276                // class java/lang/StringBuilder
       109: dup
       110: ldc_w         #427                // int 27
       113: invokespecial #389                // Method java/lang/StringBuilder."<init>":(I)V
       116: ldc_w         #429                // String Can\'t list module names of
       119: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       122: aload_0
       123: invokevirtual #138                // Method repo:()Lcoursier/ivy/IvyRepository;
       126: invokevirtual #395                // Method coursier/ivy/IvyRepository.metadataPattern:()Lcoursier/ivy/Pattern;
       129: invokevirtual #398                // Method coursier/ivy/Pattern.string:()Ljava/lang/String;
       132: invokevirtual #291                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       135: invokevirtual #297                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       138: invokespecial #370                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       141: invokevirtual #375                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       144: astore_2
       145: goto          242
       148: goto          154
       151: goto          154
       154: iload_3
       155: ifeq          229
       158: aload         4
       160: invokevirtual #380                // Method scala/util/Right.value:()Ljava/lang/Object;
       163: checkcast     #160                // class scala/Option
       166: astore        9
       168: aload         9
       170: instanceof    #400                // class scala/Some
       173: ifeq          226
       176: aload         9
       178: checkcast     #400                // class scala/Some
       181: astore        10
       183: aload         10
       185: invokevirtual #401                // Method scala/Some.value:()Ljava/lang/Object;
       188: checkcast     #403                // class scala/Tuple2
       191: astore        11
       193: aload         11
       195: ifnull        223
       198: aload         11
       200: invokevirtual #406                // Method scala/Tuple2._2:()Ljava/lang/Object;
       203: checkcast     #408                // class scala/collection/immutable/Seq
       206: astore        12
       208: getstatic     #363                // Field scala/package$.MODULE$:Lscala/package$;
       211: invokevirtual #412                // Method scala/package$.Right:()Lscala/util/Right$;
       214: aload         12
       216: invokevirtual #417                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       219: astore_2
       220: goto          242
       223: goto          232
       226: goto          232
       229: goto          232
       232: new           #419                // class scala/MatchError
       235: dup
       236: aload         5
       238: invokespecial #422                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       241: athrow
       242: aload_2
       243: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, null, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 89
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either, top, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, null, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either, top, top, top, class scala/Option, class scala/Some, class scala/Tuple2 ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/ivy/IvyComplete, class scala/util/Either, class scala/util/Either, int, class scala/util/Right, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 41: 0
        line 42: 8
        line 43: 58
        line 44: 154
        line 41: 232
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           33      22     7     e   Ljava/lang/String;
          208      15    12     l   Lscala/collection/immutable/Seq;
            0     244     0 $this   Lcoursier/ivy/IvyComplete;
            0     244     1  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x0$1                           final

  public static final java.lang.String $anonfun$versions$2(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #437                // Method coursier/core/Version.repr:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.util.Either $anonfun$versions$1(scala.util.Either);
    descriptor: (Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=12, args_size=1
         0: iconst_0
         1: istore_2
         2: aconst_null
         3: astore_3
         4: aload_0
         5: astore        4
         7: aload         4
         9: instanceof    #355                // class scala/util/Left
        12: ifeq          54
        15: aload         4
        17: checkcast     #355                // class scala/util/Left
        20: astore        5
        22: aload         5
        24: invokevirtual #358                // Method scala/util/Left.value:()Ljava/lang/Object;
        27: checkcast     #283                // class java/lang/String
        30: astore        6
        32: getstatic     #363                // Field scala/package$.MODULE$:Lscala/package$;
        35: invokevirtual #367                // Method scala/package$.Left:()Lscala/util/Left$;
        38: new           #369                // class java/lang/Exception
        41: dup
        42: aload         6
        44: invokespecial #370                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
        47: invokevirtual #375                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        50: astore_1
        51: goto          219
        54: goto          57
        57: aload         4
        59: instanceof    #379                // class scala/util/Right
        62: ifeq          119
        65: iconst_1
        66: istore_2
        67: aload         4
        69: checkcast     #379                // class scala/util/Right
        72: astore_3
        73: aload_3
        74: invokevirtual #380                // Method scala/util/Right.value:()Ljava/lang/Object;
        77: checkcast     #160                // class scala/Option
        80: astore        7
        82: getstatic     #385                // Field scala/None$.MODULE$:Lscala/None$;
        85: aload         7
        87: invokevirtual #308                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        90: ifeq          116
        93: getstatic     #363                // Field scala/package$.MODULE$:Lscala/package$;
        96: invokevirtual #367                // Method scala/package$.Left:()Lscala/util/Left$;
        99: new           #369                // class java/lang/Exception
       102: dup
       103: ldc_w         #440                // String Version listing not available on this repository
       106: invokespecial #370                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       109: invokevirtual #375                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       112: astore_1
       113: goto          219
       116: goto          122
       119: goto          122
       122: iload_2
       123: ifeq          206
       126: aload_3
       127: invokevirtual #380                // Method scala/util/Right.value:()Ljava/lang/Object;
       130: checkcast     #160                // class scala/Option
       133: astore        8
       135: aload         8
       137: instanceof    #400                // class scala/Some
       140: ifeq          203
       143: aload         8
       145: checkcast     #400                // class scala/Some
       148: astore        9
       150: aload         9
       152: invokevirtual #401                // Method scala/Some.value:()Ljava/lang/Object;
       155: checkcast     #403                // class scala/Tuple2
       158: astore        10
       160: aload         10
       162: ifnull        200
       165: aload         10
       167: invokevirtual #406                // Method scala/Tuple2._2:()Ljava/lang/Object;
       170: checkcast     #408                // class scala/collection/immutable/Seq
       173: astore        11
       175: getstatic     #363                // Field scala/package$.MODULE$:Lscala/package$;
       178: invokevirtual #412                // Method scala/package$.Right:()Lscala/util/Right$;
       181: aload         11
       183: invokedynamic #445,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       188: invokeinterface #448,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       193: invokevirtual #417                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       196: astore_1
       197: goto          219
       200: goto          209
       203: goto          209
       206: goto          209
       209: new           #419                // class scala/MatchError
       212: dup
       213: aload         4
       215: invokespecial #422                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       218: athrow
       219: aload_1
       220: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 54
          locals = [ class scala/util/Either, top, int, null, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 58
          locals = [ class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either, top, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/util/Either, top, int, null, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 77
          locals = [ class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either, top, top, top, class scala/Option, class scala/Some, class scala/Tuple2 ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/util/Either, top, int, class scala/util/Right, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/util/Either, class scala/util/Either, int, class scala/util/Right, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 48: 0
        line 49: 7
        line 50: 57
        line 51: 122
        line 48: 209
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           32      22     6     e   Ljava/lang/String;
          175      25    11     l   Lscala/collection/immutable/Seq;
            0     221     0  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public coursier.ivy.IvyComplete(coursier.ivy.IvyRepository, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/ivy/IvyRepository;Lscala/Function1;Lcoursier/util/Monad;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #120                // Field repo:Lcoursier/ivy/IvyRepository;
         5: aload_0
         6: aload_2
         7: putfield      #124                // Field fetch:Lscala/Function1;
        10: aload_0
        11: aload_3
        12: putfield      #128                // Field F:Lcoursier/util/Monad;
        15: aload_0
        16: invokespecial #452                // Method java/lang/Object."<init>":()V
        19: aload_0
        20: invokestatic  #456                // InterfaceMethod coursier/core/Repository$Complete.$init$:(Lcoursier/core/Repository$Complete;)V
        23: aload_0
        24: invokestatic  #459                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        27: return
      LineNumberTable:
        line 7: 0
        line 11: 15
        line 7: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/ivy/IvyComplete;
            0      28     1  repo   Lcoursier/ivy/IvyRepository;
            0      28     2 fetch   Lscala/Function1;
            0      28     3     F   Lcoursier/util/Monad;
    Signature: #449                         // (Lcoursier/ivy/IvyRepository;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)V
    MethodParameters:
      Name                           Flags
      repo                           final
      fetch                          final
      F                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #471,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #18= #7 of #17;           // Complete=class coursier/core/Repository$Complete of class coursier/core/Repository
  public static #21= #20 of #17;          // =class coursier/core/Repository$Complete$ of class coursier/core/Repository
  public static abstract #24= #23 of #20; // Input=class coursier/core/Repository$Complete$Input of class coursier/core/Repository$Complete$
  public static abstract #29= #26 of #28; // Chunk=class coursier/ivy/Pattern$Chunk of class coursier/ivy/Pattern
  public static #21= #31 of #28;          // =class coursier/ivy/Pattern$Chunk$ of class coursier/ivy/Pattern
  public static final #34= #33 of #31;    // Var=class coursier/ivy/Pattern$Chunk$Var of class coursier/ivy/Pattern$Chunk$
  public static #21= #36 of #31;          // =class coursier/ivy/Pattern$Chunk$Var$ of class coursier/ivy/Pattern$Chunk$
  public static final #41= #38 of #40;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // <F:Ljava/lang/Object;>Ljava/lang/Object;Lcoursier/core/Repository$Complete<TF;>;Lscala/Product;Ljava/io/Serializable;
SourceFile: "IvyComplete.scala"
RuntimeVisibleAnnotations:
  0: #13(#14=s#15)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005]g\u0001B\u0010!\u0005\u0015B\u0001\u0002\u0016\u0001\u0003\u0006\u0004%\t!\u0016\u0005\t5\u0002\u0011\t\u0011)A\u0005-\"A1\f\u0001BC\u0002\u0013\u0005A\f\u0003\u0005a\u0001\t\u0005\t\u0015!\u0003^\u0011!\t\u0007A!b\u0001\n\u0003\u0011\u0007\u0002C5\u0001\u0005\u0003\u0005\u000b\u0011B2\t\u000b)\u0004A\u0011A6\t\u000bA\u0004A1\u00022\t\u0011E\u0004\u0001R1A\u0005\nID\u0001\"\u001f\u0001\t\u0006\u0004%IA\u001d\u0005\u0006u\u0002!\ta\u001f\u0005\b\u0003C\u0001A\u0011AA\u0012\u0011\u001d\ty\u0003\u0001C\u0001\u0003cAq!a\u0010\u0001\t\u0003\t\t\u0005C\u0004\u0002F\u0001!\t!a\u0012\t\u000f\u0005-\u0003\u0001\"\u0001\u0002N!9\u0011\u0011\u000b\u0001\u0005B\u0005M\u0003bBA2\u0001\u0011\u0005\u0013Q\r\u0005\b\u0003c\u0002A\u0011IA:\u0011\u001d\t9\b\u0001C!\u0003sBq!!!\u0001\t\u0013\t\u0019\tC\u0004\u0002\f\u0002!\t%!$\t\u000f\u0005=\u0005\u0001\"\u0011\u0002\u0012\"9\u00111\u0013\u0001\u0005B\u0005U\u0005bBAN\u0001\u0011\u0005\u0013QT\u0004\b\u0003C\u0003\u0003\u0012AAR\r\u0019y\u0002\u0005#\u0001\u0002&\"1!n\u0007C\u0001\u0003cCq!a-\u001c\t\u0003\t)\fC\u0005\u0002Nn\t\t\u0011\"\u0003\u0002P\nY\u0011J^=D_6\u0004H.\u001a;f\u0015\t\t#%A\u0002jmfT\u0011aI\u0001\tG>,(o]5fe\u000e\u0001QC\u0001\u0014:\'\u0015\u0001q%L#I!\tA3&D\u0001*\u0015\u0005Q\u0013!B:dC2\f\u0017B\u0001\u0017*\u0005\u0019\te.\u001f*fMB\u0019a\u0006N\u001c\u000f\u0005=\u0012T\"\u0001\u0019\u000b\u0005E\u0012\u0013\u0001B2pe\u0016L!a\r\u0019\u0002\u0015I+\u0007o\\:ji>\u0014\u00180\u0003\u00026m\tA1i\\7qY\u0016$XM\u0003\u00024aA\u0011\u0001(\u000f\u0007\u0001\t\u0015Q\u0004A1\u0001<\u0005\u00051UC\u0001\u001fD#\ti\u0004\t\u0005\u0002)}%\u0011q(\u000b\u0002\b\u001d>$\b.\u001b8h!\tA\u0013)\u0003\u0002CS\t\u0019\u0011I\\=\u0005\u000b\u0011K$\u0019\u0001\u001f\u0003\u0003}\u0003\"\u0001\u000b$\n\u0005\u001dK#a\u0002)s_\u0012,8\r\u001e\t\u0003\u0013Fs!AS(\u000f\u0005-sU\"\u0001\'\u000b\u00055#\u0013A\u0002\u001fs_>$h(C\u0001+\u0013\t\u0001\u0016&A\u0004qC\u000e\\\u0017mZ3\n\u0005I\u001b&\u0001D*fe&\fG.\u001b>bE2,\'B\u0001)*\u0003\u0011\u0011X\r]8\u0016\u0003Y\u0003\"a\u0016-\u000e\u0003\u0001J!!\u0017\u0011\u0003\u001b%3\u0018PU3q_NLGo\u001c:z\u0003\u0015\u0011X\r]8!\u0003\u00151W\r^2i+\u0005i\u0006c\u0001\u0018_o%\u0011qL\u000e\u0002\u0006\r\u0016$8\r[\u0001\u0007M\u0016$8\r\u001b\u0011\u0002\u0003\u0019+\u0012a\u0019\t\u0004I\u001e<T\"A3\u000b\u0005\u0019\u0014\u0013\u0001B;uS2L!\u0001[3\u0003\u000b5{g.\u00193\u0002\u0005\u0019\u0003\u0013A\u0002\u001fj]&$h\b\u0006\u0003m[:|\u0007cA,\u0001o!)Ak\u0002a\u0001-\")1l\u0002a\u0001;\")\u0011m\u0002a\u0001G\u0006\u0011a\tM\u0001\u001e_J<\u0017M\\5{CRLwN\u001c\'jgRLgn\u001a)biR,\'O\\(qiV\t1\u000fE\u0002)iZL!!^\u0015\u0003\r=\u0003H/[8o!\t9v/\u0003\u0002yA\t9\u0001+\u0019;uKJt\u0017!\u00068b[\u0016d\u0015n\u001d;j]\u001e\u0004\u0016\r\u001e;fe:|\u0005\u000f^\u0001\r_J<\u0017M\\5{CRLwN\u001c\u000b\u0004y\u0006u\u0001c\u0001\u001d:{B1\u0011J`A\u0001\u0003\u000fI!a`*\u0003\r\u0015KG\u000f[3s!\rI\u00151A\u0005\u0004\u0003\u000b\u0019&!\u0003+ie><\u0018M\u00197f!\u0015I\u0015\u0011BA\u0007\u0013\r\tYa\u0015\u0002\u0004\'\u0016\f\b\u0003BA\b\u0003/qA!!\u0005\u0002\u0014A\u00111*K\u0005\u0004\u0003+I\u0013A\u0002)sK\u0012,g-\u0003\u0003\u0002\u001a\u0005m!AB*ue&twMC\u0002\u0002\u0016%Bq!a\b\f\u0001\u0004\ti!\u0001\u0004qe\u00164\u0017\u000e_\u0001\u000b[>$W\u000f\\3OC6,G#\u0002?\u0002&\u00055\u0002B\u0002>\r\u0001\u0004\t9\u0003E\u00020\u0003SI1!a\u000b1\u00051y%oZ1oSj\fG/[8o\u0011\u001d\ty\u0002\u0004a\u0001\u0003\u001b\t\u0001B^3sg&|gn\u001d\u000b\u0006y\u0006M\u0012Q\b\u0005\b\u0003ki\u0001\u0019AA\u001c\u0003\u0019iw\u000eZ;mKB\u0019q&!\u000f\n\u0007\u0005m\u0002G\u0001\u0004N_\u0012,H.\u001a\u0005\b\u0003?i\u0001\u0019AA\u0007\u0003!9\u0018\u000e\u001e5SKB|Gc\u00017\u0002D!)AK\u0004a\u0001-\u0006Iq/\u001b;i\r\u0016$8\r\u001b\u000b\u0004Y\u0006%\u0003\"B.\u0010\u0001\u0004i\u0016!B<ji\"4Ec\u00017\u0002P!)\u0011\r\u0005a\u0001G\u0006AAo\\*ue&tw\r\u0006\u0002\u0002VA!\u0011qKA1\u001b\t\tIF\u0003\u0003\u0002\\\u0005u\u0013\u0001\u00027b]\u001eT!!a\u0018\u0002\t)\fg/Y\u0005\u0005\u00033\tI&\u0001\u0005dC:,\u0015/^1m)\u0011\t9\'!\u001c\u0011\u0007!\nI\'C\u0002\u0002l%\u0012qAQ8pY\u0016\fg\u000e\u0003\u0004\u0002pI\u0001\r\u0001Q\u0001\u0004_\nT\u0017AB3rk\u0006d7\u000f\u0006\u0003\u0002h\u0005U\u0004BBA8\'\u0001\u0007\u0001)\u0001\u0005iCND7i\u001c3f)\t\tY\bE\u0002)\u0003{J1!a *\u0005\rIe\u000e^\u0001\u0006iV\u0004H.Z\u000b\u0003\u0003\u000b\u0003b\u0001KAD-v\u001b\u0017bAAES\t1A+\u001e9mKN\nQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&DXCAA+\u00031\u0001(o\u001c3vGR\f%/\u001b;z+\t\tY(\u0001\bqe>$Wo\u0019;FY\u0016lWM\u001c;\u0015\u0007\u0001\u000b9\nC\u0004\u0002\u001ab\u0001\r!a\u001f\u0002\u00039\f!\u0003\u001d:pIV\u001cG/\u00127f[\u0016tGOT1nKR!\u0011QKAP\u0011\u001d\tI*\u0007a\u0001\u0003w\n1\"\u0013<z\u0007>l\u0007\u000f\\3uKB\u0011qkG\n\u00057\u001d\n9\u000b\u0005\u0003\u0002*\u0006=VBAAV\u0015\u0011\ti+!\u0018\u0002\u0005%|\u0017b\u0001*\u0002,R\u0011\u00111U\u0001\u0006CB\u0004H._\u000b\u0005\u0003o\u000bi\f\u0006\u0005\u0002:\u0006\r\u0017QYAe!\u00119\u0006!a/\u0011\u0007a\ni\f\u0002\u0004;;\t\u0007\u0011qX\u000b\u0004y\u0005\u0005GA\u0002#\u0002>\n\u0007A\bC\u0003U;\u0001\u0007a\u000b\u0003\u0004\\;\u0001\u0007\u0011q\u0019\t\u0005]y\u000bY\f\u0003\u0004b;\u0001\u0007\u00111\u001a\t\u0005I\u001e\fY,\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0002RB!\u0011qKAj\u0013\u0011\t).!\u0017\u0003\r=\u0013\'.Z2u\u0001"
    )
BootstrapMethods:
  0: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #205 (Ljava/lang/Object;)Ljava/lang/Object;
      #210 REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$organization$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
      #212 (Lscala/util/Either;)Lscala/util/Either;
      #213 5
      #214 1
      #212 (Lscala/util/Either;)Lscala/util/Either;
  1: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #205 (Ljava/lang/Object;)Ljava/lang/Object;
      #245 REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$moduleName$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
      #212 (Lscala/util/Either;)Lscala/util/Either;
      #213 5
      #214 1
      #212 (Lscala/util/Either;)Lscala/util/Either;
  2: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #205 (Ljava/lang/Object;)Ljava/lang/Object;
      #257 REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$versions$1:(Lscala/util/Either;)Lscala/util/Either;
      #212 (Lscala/util/Either;)Lscala/util/Either;
      #213 5
      #214 1
      #212 (Lscala/util/Either;)Lscala/util/Either;
  3: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #205 (Ljava/lang/Object;)Ljava/lang/Object;
      #443 REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$versions$2:(Lcoursier/core/Version;)Ljava/lang/String;
      #444 (Lcoursier/core/Version;)Ljava/lang/String;
      #213 5
      #214 1
      #444 (Lcoursier/core/Version;)Ljava/lang/String;
  4: #468 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #245 REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$moduleName$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
      #210 REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$organization$1:(Lcoursier/ivy/IvyComplete;Lscala/util/Either;)Lscala/util/Either;
      #257 REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$versions$1:(Lscala/util/Either;)Lscala/util/Either;
      #443 REF_invokeStatic coursier/ivy/IvyComplete.$anonfun$versions$2:(Lcoursier/core/Version;)Ljava/lang/String;
  ScalaInlineInfo: length = 0xB3 (unknown attribute)
   01 01 00 23 00 F4 00 D1 01 00 D0 00 D1 01 01 00
   00 D5 01 01 B0 01 B1 01 01 09 01 0A 01 00 35 00
   7F 01 00 83 00 7F 01 01 2E 01 2F 01 00 67 00 68
   01 00 67 00 70 01 01 32 01 2F 01 00 32 00 7B 01
   00 59 00 5A 01 00 63 00 54 01 01 3A 01 3B 01 00
   E9 00 EA 01 00 2F 00 87 01 00 A3 00 87 01 00 A9
   00 AA 01 00 2C 00 87 01 00 86 00 87 01 01 4F 01
   3B 01 01 50 01 51 01 01 5D 01 5E 01 00 4E 00 46
   01 00 45 00 46 01 01 4E 01 14 01 00 30 00 78 01
   00 53 00 54 01 01 13 01 14 01 01 46 01 47 01 00
   F9 00 FA 01 01 10 01 11 01 01 0D 01 0E 01 01 06
   01 07 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
