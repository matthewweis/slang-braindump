Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/output/WriterOutputStream.class
  Last modified May 29, 2022; size 5568 bytes
  SHA-256 checksum a3421b865358a017cdbf9dadc4e1f8fa5d09bb42a4233997ef94e7ef761cbed2
  Compiled from "WriterOutputStream.java"
public class org.apache.commons.io.output.WriterOutputStream extends java.io.OutputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #1                          // org/apache/commons/io/output/WriterOutputStream
  super_class: #55                        // java/io/OutputStream
  interfaces: 0, fields: 6, methods: 15, attributes: 1
Constant pool:
    #1 = Class              #131          // org/apache/commons/io/output/WriterOutputStream
    #2 = Methodref          #1.#132       // org/apache/commons/io/output/WriterOutputStream."<init>":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V
    #3 = Methodref          #55.#133      // java/io/OutputStream."<init>":()V
    #4 = Methodref          #134.#135     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
    #5 = Fieldref           #1.#136       // org/apache/commons/io/output/WriterOutputStream.decoderIn:Ljava/nio/ByteBuffer;
    #6 = Methodref          #137.#138     // java/nio/charset/CharsetDecoder.charset:()Ljava/nio/charset/Charset;
    #7 = Methodref          #1.#139       // org/apache/commons/io/output/WriterOutputStream.checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V
    #8 = Fieldref           #1.#140       // org/apache/commons/io/output/WriterOutputStream.writer:Ljava/io/Writer;
    #9 = Fieldref           #1.#141       // org/apache/commons/io/output/WriterOutputStream.decoder:Ljava/nio/charset/CharsetDecoder;
   #10 = Fieldref           #1.#142       // org/apache/commons/io/output/WriterOutputStream.writeImmediately:Z
   #11 = Methodref          #143.#144     // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
   #12 = Fieldref           #1.#145       // org/apache/commons/io/output/WriterOutputStream.decoderOut:Ljava/nio/CharBuffer;
   #13 = Methodref          #146.#147     // java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
   #14 = Fieldref           #148.#149     // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
   #15 = Methodref          #137.#150     // java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
   #16 = Methodref          #137.#151     // java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
   #17 = String             #152          // ?
   #18 = Methodref          #137.#153     // java/nio/charset/CharsetDecoder.replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;
   #19 = Methodref          #1.#154       // org/apache/commons/io/output/WriterOutputStream."<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
   #20 = Methodref          #146.#155     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
   #21 = Methodref          #1.#156       // org/apache/commons/io/output/WriterOutputStream."<init>":(Ljava/io/Writer;Ljava/lang/String;IZ)V
   #22 = Methodref          #146.#157     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
   #23 = Methodref          #134.#158     // java/nio/ByteBuffer.remaining:()I
   #24 = Methodref          #159.#160     // java/lang/Math.min:(II)I
   #25 = Methodref          #134.#161     // java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
   #26 = Methodref          #1.#162       // org/apache/commons/io/output/WriterOutputStream.processInput:(Z)V
   #27 = Methodref          #1.#163       // org/apache/commons/io/output/WriterOutputStream.flushOutput:()V
   #28 = Methodref          #1.#164       // org/apache/commons/io/output/WriterOutputStream.write:([BII)V
   #29 = Methodref          #165.#166     // java/io/Writer.flush:()V
   #30 = Methodref          #165.#167     // java/io/Writer.close:()V
   #31 = Methodref          #134.#168     // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
   #32 = Methodref          #137.#169     // java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
   #33 = Methodref          #170.#171     // java/nio/charset/CoderResult.isOverflow:()Z
   #34 = Methodref          #170.#172     // java/nio/charset/CoderResult.isUnderflow:()Z
   #35 = Class              #173          // java/io/IOException
   #36 = String             #174          // Unexpected coder result
   #37 = Methodref          #35.#175      // java/io/IOException."<init>":(Ljava/lang/String;)V
   #38 = Methodref          #134.#176     // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
   #39 = Methodref          #143.#177     // java/nio/CharBuffer.position:()I
   #40 = Methodref          #143.#178     // java/nio/CharBuffer.array:()[C
   #41 = Methodref          #165.#179     // java/io/Writer.write:([CII)V
   #42 = Methodref          #143.#180     // java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;
   #43 = String             #181          // UTF-16
   #44 = Methodref          #146.#182     // java/nio/charset/Charset.name:()Ljava/lang/String;
   #45 = Methodref          #183.#184     // java/lang/String.equals:(Ljava/lang/Object;)Z
   #46 = String             #185          // v√©s
   #47 = Methodref          #183.#186     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
   #48 = Methodref          #183.#187     // java/lang/String.length:()I
   #49 = Methodref          #134.#188     // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
   #50 = Class              #189          // java/lang/IllegalArgumentException
   #51 = Class              #190          // java/lang/UnsupportedOperationException
   #52 = String             #191          // UTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream
   #53 = Methodref          #51.#175      // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
   #54 = Methodref          #143.#192     // java/nio/CharBuffer.toString:()Ljava/lang/String;
   #55 = Class              #193          // java/io/OutputStream
   #56 = Utf8               BUFFER_SIZE
   #57 = Utf8               I
   #58 = Utf8               ConstantValue
   #59 = Integer            1024
   #60 = Utf8               writer
   #61 = Utf8               Ljava/io/Writer;
   #62 = Utf8               decoder
   #63 = Utf8               Ljava/nio/charset/CharsetDecoder;
   #64 = Utf8               writeImmediately
   #65 = Utf8               Z
   #66 = Utf8               decoderIn
   #67 = Utf8               Ljava/nio/ByteBuffer;
   #68 = Utf8               decoderOut
   #69 = Utf8               Ljava/nio/CharBuffer;
   #70 = Utf8               <init>
   #71 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V
   #72 = Utf8               Code
   #73 = Utf8               LineNumberTable
   #74 = Utf8               LocalVariableTable
   #75 = Utf8               this
   #76 = Utf8               Lorg/apache/commons/io/output/WriterOutputStream;
   #77 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V
   #78 = Utf8               bufferSize
   #79 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
   #80 = Utf8               charset
   #81 = Utf8               Ljava/nio/charset/Charset;
   #82 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/Charset;)V
   #83 = Utf8               (Ljava/io/Writer;Ljava/lang/String;IZ)V
   #84 = Utf8               charsetName
   #85 = Utf8               Ljava/lang/String;
   #86 = Utf8               (Ljava/io/Writer;Ljava/lang/String;)V
   #87 = Utf8               (Ljava/io/Writer;)V
   #88 = Utf8               Deprecated
   #89 = Utf8               RuntimeVisibleAnnotations
   #90 = Utf8               Ljava/lang/Deprecated;
   #91 = Utf8               write
   #92 = Utf8               ([BII)V
   #93 = Utf8               c
   #94 = Utf8               b
   #95 = Utf8               [B
   #96 = Utf8               off
   #97 = Utf8               len
   #98 = Utf8               StackMapTable
   #99 = Utf8               Exceptions
  #100 = Utf8               ([B)V
  #101 = Utf8               (I)V
  #102 = Utf8               flush
  #103 = Utf8               ()V
  #104 = Utf8               close
  #105 = Utf8               processInput
  #106 = Utf8               (Z)V
  #107 = Utf8               endOfInput
  #108 = Utf8               coderResult
  #109 = Utf8               Ljava/nio/charset/CoderResult;
  #110 = Class              #194          // java/nio/charset/CoderResult
  #111 = Utf8               flushOutput
  #112 = Utf8               checkIbmJdkWithBrokenUTF16
  #113 = Utf8               (Ljava/nio/charset/Charset;)V
  #114 = Utf8               e
  #115 = Utf8               Ljava/lang/IllegalArgumentException;
  #116 = Utf8               i
  #117 = Utf8               TEST_STRING_2
  #118 = Utf8               bytes
  #119 = Utf8               charsetDecoder2
  #120 = Utf8               bb2
  #121 = Utf8               cb2
  #122 = Class              #195          // java/nio/charset/Charset
  #123 = Class              #196          // java/lang/String
  #124 = Class              #95           // "[B"
  #125 = Class              #197          // java/nio/charset/CharsetDecoder
  #126 = Class              #198          // java/nio/ByteBuffer
  #127 = Class              #199          // java/nio/CharBuffer
  #128 = Class              #189          // java/lang/IllegalArgumentException
  #129 = Utf8               SourceFile
  #130 = Utf8               WriterOutputStream.java
  #131 = Utf8               org/apache/commons/io/output/WriterOutputStream
  #132 = NameAndType        #70:#77       // "<init>":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V
  #133 = NameAndType        #70:#103      // "<init>":()V
  #134 = Class              #198          // java/nio/ByteBuffer
  #135 = NameAndType        #200:#201     // allocate:(I)Ljava/nio/ByteBuffer;
  #136 = NameAndType        #66:#67       // decoderIn:Ljava/nio/ByteBuffer;
  #137 = Class              #197          // java/nio/charset/CharsetDecoder
  #138 = NameAndType        #80:#202      // charset:()Ljava/nio/charset/Charset;
  #139 = NameAndType        #112:#113     // checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V
  #140 = NameAndType        #60:#61       // writer:Ljava/io/Writer;
  #141 = NameAndType        #62:#63       // decoder:Ljava/nio/charset/CharsetDecoder;
  #142 = NameAndType        #64:#65       // writeImmediately:Z
  #143 = Class              #199          // java/nio/CharBuffer
  #144 = NameAndType        #200:#203     // allocate:(I)Ljava/nio/CharBuffer;
  #145 = NameAndType        #68:#69       // decoderOut:Ljava/nio/CharBuffer;
  #146 = Class              #195          // java/nio/charset/Charset
  #147 = NameAndType        #204:#205     // newDecoder:()Ljava/nio/charset/CharsetDecoder;
  #148 = Class              #206          // java/nio/charset/CodingErrorAction
  #149 = NameAndType        #207:#208     // REPLACE:Ljava/nio/charset/CodingErrorAction;
  #150 = NameAndType        #209:#210     // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
  #151 = NameAndType        #211:#210     // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
  #152 = Utf8               ?
  #153 = NameAndType        #212:#213     // replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;
  #154 = NameAndType        #70:#79       // "<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
  #155 = NameAndType        #214:#215     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
  #156 = NameAndType        #70:#83       // "<init>":(Ljava/io/Writer;Ljava/lang/String;IZ)V
  #157 = NameAndType        #216:#202     // defaultCharset:()Ljava/nio/charset/Charset;
  #158 = NameAndType        #217:#218     // remaining:()I
  #159 = Class              #219          // java/lang/Math
  #160 = NameAndType        #220:#221     // min:(II)I
  #161 = NameAndType        #222:#223     // put:([BII)Ljava/nio/ByteBuffer;
  #162 = NameAndType        #105:#106     // processInput:(Z)V
  #163 = NameAndType        #111:#103     // flushOutput:()V
  #164 = NameAndType        #91:#92       // write:([BII)V
  #165 = Class              #224          // java/io/Writer
  #166 = NameAndType        #102:#103     // flush:()V
  #167 = NameAndType        #104:#103     // close:()V
  #168 = NameAndType        #225:#226     // flip:()Ljava/nio/Buffer;
  #169 = NameAndType        #227:#228     // decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
  #170 = Class              #194          // java/nio/charset/CoderResult
  #171 = NameAndType        #229:#230     // isOverflow:()Z
  #172 = NameAndType        #231:#230     // isUnderflow:()Z
  #173 = Utf8               java/io/IOException
  #174 = Utf8               Unexpected coder result
  #175 = NameAndType        #70:#232      // "<init>":(Ljava/lang/String;)V
  #176 = NameAndType        #233:#234     // compact:()Ljava/nio/ByteBuffer;
  #177 = NameAndType        #235:#218     // position:()I
  #178 = NameAndType        #236:#237     // array:()[C
  #179 = NameAndType        #91:#238      // write:([CII)V
  #180 = NameAndType        #239:#226     // rewind:()Ljava/nio/Buffer;
  #181 = Utf8               UTF-16
  #182 = NameAndType        #240:#241     // name:()Ljava/lang/String;
  #183 = Class              #196          // java/lang/String
  #184 = NameAndType        #242:#243     // equals:(Ljava/lang/Object;)Z
  #185 = Utf8               v√©s
  #186 = NameAndType        #244:#245     // getBytes:(Ljava/nio/charset/Charset;)[B
  #187 = NameAndType        #246:#218     // length:()I
  #188 = NameAndType        #222:#247     // put:(B)Ljava/nio/ByteBuffer;
  #189 = Utf8               java/lang/IllegalArgumentException
  #190 = Utf8               java/lang/UnsupportedOperationException
  #191 = Utf8               UTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream
  #192 = NameAndType        #248:#241     // toString:()Ljava/lang/String;
  #193 = Utf8               java/io/OutputStream
  #194 = Utf8               java/nio/charset/CoderResult
  #195 = Utf8               java/nio/charset/Charset
  #196 = Utf8               java/lang/String
  #197 = Utf8               java/nio/charset/CharsetDecoder
  #198 = Utf8               java/nio/ByteBuffer
  #199 = Utf8               java/nio/CharBuffer
  #200 = Utf8               allocate
  #201 = Utf8               (I)Ljava/nio/ByteBuffer;
  #202 = Utf8               ()Ljava/nio/charset/Charset;
  #203 = Utf8               (I)Ljava/nio/CharBuffer;
  #204 = Utf8               newDecoder
  #205 = Utf8               ()Ljava/nio/charset/CharsetDecoder;
  #206 = Utf8               java/nio/charset/CodingErrorAction
  #207 = Utf8               REPLACE
  #208 = Utf8               Ljava/nio/charset/CodingErrorAction;
  #209 = Utf8               onMalformedInput
  #210 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
  #211 = Utf8               onUnmappableCharacter
  #212 = Utf8               replaceWith
  #213 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;
  #214 = Utf8               forName
  #215 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;
  #216 = Utf8               defaultCharset
  #217 = Utf8               remaining
  #218 = Utf8               ()I
  #219 = Utf8               java/lang/Math
  #220 = Utf8               min
  #221 = Utf8               (II)I
  #222 = Utf8               put
  #223 = Utf8               ([BII)Ljava/nio/ByteBuffer;
  #224 = Utf8               java/io/Writer
  #225 = Utf8               flip
  #226 = Utf8               ()Ljava/nio/Buffer;
  #227 = Utf8               decode
  #228 = Utf8               (Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
  #229 = Utf8               isOverflow
  #230 = Utf8               ()Z
  #231 = Utf8               isUnderflow
  #232 = Utf8               (Ljava/lang/String;)V
  #233 = Utf8               compact
  #234 = Utf8               ()Ljava/nio/ByteBuffer;
  #235 = Utf8               position
  #236 = Utf8               array
  #237 = Utf8               ()[C
  #238 = Utf8               ([CII)V
  #239 = Utf8               rewind
  #240 = Utf8               name
  #241 = Utf8               ()Ljava/lang/String;
  #242 = Utf8               equals
  #243 = Utf8               (Ljava/lang/Object;)Z
  #244 = Utf8               getBytes
  #245 = Utf8               (Ljava/nio/charset/Charset;)[B
  #246 = Utf8               length
  #247 = Utf8               (B)Ljava/nio/ByteBuffer;
  #248 = Utf8               toString
{
  private static final int BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1024

  private final java.io.Writer writer;
    descriptor: Ljava/io/Writer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.nio.charset.CharsetDecoder decoder;
    descriptor: Ljava/nio/charset/CharsetDecoder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean writeImmediately;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.nio.ByteBuffer decoderIn;
    descriptor: Ljava/nio/ByteBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.nio.CharBuffer decoderOut;
    descriptor: Ljava/nio/CharBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.CharsetDecoder);
    descriptor: (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: sipush        1024
         6: iconst_0
         7: invokespecial #2                  // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V
        10: return
      LineNumberTable:
        line 104: 0
        line 105: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      11     1 writer   Ljava/io/Writer;
            0      11     2 decoder   Ljava/nio/charset/CharsetDecoder;

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.CharsetDecoder, int, boolean);
    descriptor: (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: invokespecial #3                  // Method java/io/OutputStream."<init>":()V
         4: aload_0
         5: sipush        128
         8: invokestatic  #4                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
        11: putfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
        14: aload_2
        15: invokevirtual #6                  // Method java/nio/charset/CharsetDecoder.charset:()Ljava/nio/charset/Charset;
        18: invokestatic  #7                  // Method checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V
        21: aload_0
        22: aload_1
        23: putfield      #8                  // Field writer:Ljava/io/Writer;
        26: aload_0
        27: aload_2
        28: putfield      #9                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
        31: aload_0
        32: iload         4
        34: putfield      #10                 // Field writeImmediately:Z
        37: aload_0
        38: iload_3
        39: invokestatic  #11                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
        42: putfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
        45: return
      LineNumberTable:
        line 121: 0
        line 85: 4
        line 122: 14
        line 123: 21
        line 124: 26
        line 125: 31
        line 126: 37
        line 127: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      46     1 writer   Ljava/io/Writer;
            0      46     2 decoder   Ljava/nio/charset/CharsetDecoder;
            0      46     3 bufferSize   I
            0      46     4 writeImmediately   Z

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.Charset, int, boolean);
    descriptor: (Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #13                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
         6: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
         9: invokevirtual #15                 // Method java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
        12: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
        15: invokevirtual #16                 // Method java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
        18: ldc           #17                 // String ?
        20: invokevirtual #18                 // Method java/nio/charset/CharsetDecoder.replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;
        23: iload_3
        24: iload         4
        26: invokespecial #2                  // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V
        29: return
      LineNumberTable:
        line 143: 0
        line 144: 3
        line 145: 9
        line 146: 15
        line 147: 20
        line 143: 26
        line 150: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      30     1 writer   Ljava/io/Writer;
            0      30     2 charset   Ljava/nio/charset/Charset;
            0      30     3 bufferSize   I
            0      30     4 writeImmediately   Z

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.Charset);
    descriptor: (Ljava/io/Writer;Ljava/nio/charset/Charset;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: sipush        1024
         6: iconst_0
         7: invokespecial #19                 // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
        10: return
      LineNumberTable:
        line 161: 0
        line 162: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      11     1 writer   Ljava/io/Writer;
            0      11     2 charset   Ljava/nio/charset/Charset;

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.lang.String, int, boolean);
    descriptor: (Ljava/io/Writer;Ljava/lang/String;IZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #20                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
         6: iload_3
         7: iload         4
         9: invokespecial #19                 // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
        12: return
      LineNumberTable:
        line 178: 0
        line 179: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      13     1 writer   Ljava/io/Writer;
            0      13     2 charsetName   Ljava/lang/String;
            0      13     3 bufferSize   I
            0      13     4 writeImmediately   Z

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.lang.String);
    descriptor: (Ljava/io/Writer;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: sipush        1024
         6: iconst_0
         7: invokespecial #21                 // Method "<init>":(Ljava/io/Writer;Ljava/lang/String;IZ)V
        10: return
      LineNumberTable:
        line 190: 0
        line 191: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      11     1 writer   Ljava/io/Writer;
            0      11     2 charsetName   Ljava/lang/String;

  public org.apache.commons.io.output.WriterOutputStream(java.io.Writer);
    descriptor: (Ljava/io/Writer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #22                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
         5: sipush        1024
         8: iconst_0
         9: invokespecial #19                 // Method "<init>":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V
        12: return
      LineNumberTable:
        line 203: 0
        line 204: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      13     1 writer   Ljava/io/Writer;
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #90()
        java.lang.Deprecated

  public void write(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=4
         0: iload_3
         1: ifle          47
         4: iload_3
         5: aload_0
         6: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
         9: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
        12: invokestatic  #24                 // Method java/lang/Math.min:(II)I
        15: istore        4
        17: aload_0
        18: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
        21: aload_1
        22: iload_2
        23: iload         4
        25: invokevirtual #25                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
        28: pop
        29: aload_0
        30: iconst_0
        31: invokespecial #26                 // Method processInput:(Z)V
        34: iload_3
        35: iload         4
        37: isub
        38: istore_3
        39: iload_2
        40: iload         4
        42: iadd
        43: istore_2
        44: goto          0
        47: aload_0
        48: getfield      #10                 // Field writeImmediately:Z
        51: ifeq          58
        54: aload_0
        55: invokespecial #27                 // Method flushOutput:()V
        58: return
      LineNumberTable:
        line 216: 0
        line 217: 4
        line 218: 17
        line 219: 29
        line 220: 34
        line 221: 39
        line 222: 44
        line 223: 47
        line 224: 54
        line 226: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      27     4     c   I
            0      59     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      59     1     b   [B
            0      59     2   off   I
            0      59     3   len   I
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 46 /* same */
        frame_type = 10 /* same */
    Exceptions:
      throws java.io.IOException

  public void write(byte[]) throws java.io.IOException;
    descriptor: ([B)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: aload_1
         4: arraylength
         5: invokevirtual #28                 // Method write:([BII)V
         8: return
      LineNumberTable:
        line 236: 0
        line 237: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0       9     1     b   [B
    Exceptions:
      throws java.io.IOException

  public void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: iconst_1
         2: newarray       byte
         4: dup
         5: iconst_0
         6: iload_1
         7: i2b
         8: bastore
         9: iconst_0
        10: iconst_1
        11: invokevirtual #28                 // Method write:([BII)V
        14: return
      LineNumberTable:
        line 247: 0
        line 248: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      15     1     b   I
    Exceptions:
      throws java.io.IOException

  public void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #27                 // Method flushOutput:()V
         4: aload_0
         5: getfield      #8                  // Field writer:Ljava/io/Writer;
         8: invokevirtual #29                 // Method java/io/Writer.flush:()V
        11: return
      LineNumberTable:
        line 258: 0
        line 259: 4
        line 260: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_1
         2: invokespecial #26                 // Method processInput:(Z)V
         5: aload_0
         6: invokespecial #27                 // Method flushOutput:()V
         9: aload_0
        10: getfield      #8                  // Field writer:Ljava/io/Writer;
        13: invokevirtual #30                 // Method java/io/Writer.close:()V
        16: return
      LineNumberTable:
        line 270: 0
        line 271: 5
        line 272: 9
        line 273: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
    Exceptions:
      throws java.io.IOException

  private void processInput(boolean) throws java.io.IOException;
    descriptor: (Z)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
         4: invokevirtual #31                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
         7: pop
         8: aload_0
         9: getfield      #9                  // Field decoder:Ljava/nio/charset/CharsetDecoder;
        12: aload_0
        13: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
        16: aload_0
        17: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
        20: iload_1
        21: invokevirtual #32                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
        24: astore_2
        25: aload_2
        26: invokevirtual #33                 // Method java/nio/charset/CoderResult.isOverflow:()Z
        29: ifeq          39
        32: aload_0
        33: invokespecial #27                 // Method flushOutput:()V
        36: goto          8
        39: aload_2
        40: invokevirtual #34                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
        43: ifeq          49
        46: goto          59
        49: new           #35                 // class java/io/IOException
        52: dup
        53: ldc           #36                 // String Unexpected coder result
        55: invokespecial #37                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        58: athrow
        59: aload_0
        60: getfield      #5                  // Field decoderIn:Ljava/nio/ByteBuffer;
        63: invokevirtual #38                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
        66: pop
        67: return
      LineNumberTable:
        line 283: 0
        line 286: 8
        line 287: 25
        line 288: 32
        line 289: 39
        line 290: 46
        line 294: 49
        line 298: 59
        line 299: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
            0      68     1 endOfInput   Z
           25      43     2 coderResult   Ljava/nio/charset/CoderResult;
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 30
          locals = [ class java/nio/charset/CoderResult ]
        frame_type = 9 /* same */
        frame_type = 9 /* same */
    Exceptions:
      throws java.io.IOException

  private void flushOutput() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
         4: invokevirtual #39                 // Method java/nio/CharBuffer.position:()I
         7: ifle          40
        10: aload_0
        11: getfield      #8                  // Field writer:Ljava/io/Writer;
        14: aload_0
        15: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
        18: invokevirtual #40                 // Method java/nio/CharBuffer.array:()[C
        21: iconst_0
        22: aload_0
        23: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
        26: invokevirtual #39                 // Method java/nio/CharBuffer.position:()I
        29: invokevirtual #41                 // Method java/io/Writer.write:([CII)V
        32: aload_0
        33: getfield      #12                 // Field decoderOut:Ljava/nio/CharBuffer;
        36: invokevirtual #42                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;
        39: pop
        40: return
      LineNumberTable:
        line 307: 0
        line 308: 10
        line 309: 32
        line 311: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/apache/commons/io/output/WriterOutputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 40 /* same */
    Exceptions:
      throws java.io.IOException

  private static void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset);
    descriptor: (Ljava/nio/charset/Charset;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=6, locals=9, args_size=1
         0: ldc           #43                 // String UTF-16
         2: aload_0
         3: invokevirtual #44                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
         6: invokevirtual #45                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
         9: ifne          13
        12: return
        13: ldc           #46                 // String v√©s
        15: astore_1
        16: ldc           #46                 // String v√©s
        18: aload_0
        19: invokevirtual #47                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
        22: astore_2
        23: aload_0
        24: invokevirtual #13                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
        27: astore_3
        28: bipush        16
        30: invokestatic  #4                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
        33: astore        4
        35: ldc           #46                 // String v√©s
        37: invokevirtual #48                 // Method java/lang/String.length:()I
        40: invokestatic  #11                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
        43: astore        5
        45: aload_2
        46: arraylength
        47: istore        6
        49: iconst_0
        50: istore        7
        52: iload         7
        54: iload         6
        56: if_icmpge     125
        59: aload         4
        61: aload_2
        62: iload         7
        64: baload
        65: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
        68: pop
        69: aload         4
        71: invokevirtual #31                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
        74: pop
        75: aload_3
        76: aload         4
        78: aload         5
        80: iload         7
        82: iload         6
        84: iconst_1
        85: isub
        86: if_icmpne     93
        89: iconst_1
        90: goto          94
        93: iconst_0
        94: invokevirtual #32                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
        97: pop
        98: goto          113
       101: astore        8
       103: new           #51                 // class java/lang/UnsupportedOperationException
       106: dup
       107: ldc           #52                 // String UTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream
       109: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       112: athrow
       113: aload         4
       115: invokevirtual #38                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
       118: pop
       119: iinc          7, 1
       122: goto          52
       125: aload         5
       127: invokevirtual #42                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;
       130: pop
       131: ldc           #46                 // String v√©s
       133: aload         5
       135: invokevirtual #54                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
       138: invokevirtual #45                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       141: ifne          154
       144: new           #51                 // class java/lang/UnsupportedOperationException
       147: dup
       148: ldc           #52                 // String UTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream
       150: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       153: athrow
       154: return
      Exception table:
         from    to  target type
            75    98   101   Class java/lang/IllegalArgumentException
      LineNumberTable:
        line 319: 0
        line 320: 12
        line 322: 13
        line 323: 16
        line 325: 23
        line 326: 28
        line 327: 35
        line 328: 45
        line 329: 49
        line 330: 59
        line 331: 69
        line 333: 75
        line 337: 98
        line 334: 101
        line 335: 103
        line 338: 113
        line 329: 119
        line 340: 125
        line 341: 131
        line 342: 144
        line 346: 154
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          103      10     8     e   Ljava/lang/IllegalArgumentException;
           52      73     7     i   I
            0     155     0 charset   Ljava/nio/charset/Charset;
           16     139     1 TEST_STRING_2   Ljava/lang/String;
           23     132     2 bytes   [B
           28     127     3 charsetDecoder2   Ljava/nio/charset/CharsetDecoder;
           35     120     4   bb2   Ljava/nio/ByteBuffer;
           45     110     5   cb2   Ljava/nio/CharBuffer;
           49     106     6   len   I
      StackMapTable: number_of_entries = 8
        frame_type = 13 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class java/nio/charset/Charset, class java/lang/String, class "[B", class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ class java/nio/charset/Charset, class java/lang/String, class "[B", class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int, int ]
          stack = [ class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/nio/charset/Charset, class java/lang/String, class "[B", class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int, int ]
          stack = [ class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/IllegalArgumentException ]
        frame_type = 11 /* same */
        frame_type = 250 /* chop */
          offset_delta = 11
        frame_type = 28 /* same */
}
SourceFile: "WriterOutputStream.java"
