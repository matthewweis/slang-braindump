Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/matchers/NotEqualMatchResult.class
  Last modified May 29, 2022; size 4740 bytes
  SHA-256 checksum 027a93cb65ee8ffbe54cdb136b47bd273674cc403921dca6e06c1727db1e5fbe
  Compiled from "MatchResult.scala"
public class org.scalatest.matchers.NotEqualMatchResult extends org.scalatest.matchers.MatchResult
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/matchers/NotEqualMatchResult
  super_class: #4                         // org/scalatest/matchers/MatchResult
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
    #1 = Utf8               org/scalatest/matchers/NotEqualMatchResult
    #2 = Class              #1            // org/scalatest/matchers/NotEqualMatchResult
    #3 = Utf8               org/scalatest/matchers/MatchResult
    #4 = Class              #3            // org/scalatest/matchers/MatchResult
    #5 = Utf8               MatchResult.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005A4Q!\u0004\b\u0001!QA\u0011\"\u0007\u0001\u0003\u0002\u0003\u0006IaG\u0011\t\u0013\t\u0002!\u0011!Q\u0001\n\rr\u0003\"\u0003\u0019\u0001\u0005\u0003\u0005\u000b\u0011B\u00122\u0011%\u0019\u0004A!A!\u0002\u0013!\u0004\tC\u0005C\u0001\t\u0005\t\u0015!\u00035\u0007\")Q\t\u0001C\u0001\r\"AQ\n\u0001b\u0001\n\u0003\u0001b\n\u0003\u0004_\u0001\u0001\u0006Ia\u0014\u0005\u0007?\u0002!\t\u0001\u00051\t\u000b\u0005\u0004A\u0011\t2\t\u000b-\u0004A\u0011\t7\t\u000b9\u0004A\u0011I8\u0003\'9{G/R9vC2l\u0015\r^2i%\u0016\u001cX\u000f\u001c;\u000b\u0005=\u0001\u0012\u0001C7bi\u000eDWM]:\u000b\u0005E\u0011\u0012!C:dC2\fG/Z:u\u0015\u0005\u0019\u0012aA8sON\u0011\u0001!\u0006\t\u0003-]i\u0011AD\u0005\u000319\u00111\"T1uG\"\u0014Vm];mi\u00069Q.\u0019;dQ\u0016\u001c8\u0001\u0001\t\u00039}i\u0011!\b\u0006\u0002=\u0005)1oY1mC&\u0011\u0001%\b\u0002\b\u0005>|G.Z1o\u0013\tIr#A\tsC^4\u0015-\u001b7ve\u0016lUm]:bO\u0016\u0004\"\u0001J\u0016\u000f\u0005\u0015J\u0003C\u0001\u0014\u001e\u001b\u00059#B\u0001\u0015\u001b\u0003\u0019a$o\\8u}%\u0011!&H\u0001\u0007!J,G-\u001a4\n\u00051j#AB*ue&twM\u0003\u0002+;%\u0011qfF\u0001\u001de\u0006<X*\u001b3TK:$XM\\2f\r\u0006LG.\u001e:f\u001b\u0016\u001c8/Y4f\u0003a\u0011\u0018m\u001e(fO\u0006$X\r\u001a$bS2,(/Z\'fgN\fw-Z\u0005\u0003e]\t1E]1x\u001b&$7+\u001a8uK:\u001cWMT3hCR,GMR1jYV\u0014X-T3tg\u0006<W-\u0001\ngC&dWO]3NKN\u001c\u0018mZ3Be\u001e\u001c\bcA\u001b;{9\u0011a\u0007\u000f\b\u0003M]J\u0011AH\u0005\u0003su\tq\u0001]1dW\u0006<W-\u0003\u0002<y\tQ\u0011J\u001c3fq\u0016$7+Z9\u000b\u0005ej\u0002C\u0001\u000f?\u0013\tyTDA\u0002B]fL!!Q\f\u0002;5LGmU3oi\u0016t7-\u001a$bS2,(/Z\'fgN\fw-Z!sON\f\u0011D\\3hCR,GMR1jYV\u0014X-T3tg\u0006<W-\u0011:hg&\u0011AiF\u0001%[&$7+\u001a8uK:\u001cWMT3hCR,GMR1jYV\u0014X-T3tg\u0006<W-\u0011:hg\u00061A(\u001b8jiz\"ba\u0012%J\u0015.c\u0005C\u0001\f\u0001\u0011\u0015Ib\u00011\u0001\u001c\u0011\u0015\u0011c\u00011\u0001$\u0011\u0015\u0001d\u00011\u0001$\u0011\u0015\u0019d\u00011\u00015\u0011\u0015\u0011e\u00011\u00015\u00039\tGo\\7jG\u0006s\u0017\r\\=tSN,\u0012a\u0014\t\u0004!f[V\"A)\u000b\u0005I\u001b\u0016AB1u_6L7M\u0003\u0002U+\u0006Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005Y;\u0016\u0001B;uS2T\u0011\u0001W\u0001\u0005U\u00064\u0018-\u0003\u0002[#\ny\u0011\t^8nS\u000e\u0014VMZ3sK:\u001cW\rE\u0002\u001d9\u000eJ!!X\u000f\u0003\r=\u0003H/[8o\u0003=\tGo\\7jG\u0006s\u0017\r\\=tSN\u0004\u0013\u0001C1oC2L8/[:\u0016\u0003m\u000bQC\\3hCR,GMR1jYV\u0014X-T3tg\u0006<W\r\u0006\u0002$G\")AM\u0003a\u0002K\u0006Q\u0001O]3ui&4\u0017.\u001a:\u0011\u0005\u0019LW\"A4\u000b\u0005!\u0014\u0012!C:dC2\f7\r^5d\u0013\tQwM\u0001\u0006Qe\u0016$H/\u001b4jKJ\f\u0001%\\5e\'\u0016tG/\u001a8dK:+w-\u0019;fI\u001a\u000b\u0017\u000e\\;sK6+7o]1hKR\u00111%\u001c\u0005\u0006I.\u0001\u001d!Z\u0001\b]\u0016<\u0017\r^3e+\u0005)\u0002
    #9 = Utf8               atomicAnalysis
   #10 = Utf8               Ljava/util/concurrent/atomic/AtomicReference;
   #11 = Utf8               Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/lang/String;>;>;
   #12 = Utf8               ()Ljava/util/concurrent/atomic/AtomicReference;
   #13 = Utf8               ()Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/lang/String;>;>;
   #14 = NameAndType        #9:#10        // atomicAnalysis:Ljava/util/concurrent/atomic/AtomicReference;
   #15 = Fieldref           #2.#14        // org/scalatest/matchers/NotEqualMatchResult.atomicAnalysis:Ljava/util/concurrent/atomic/AtomicReference;
   #16 = Utf8               this
   #17 = Utf8               Lorg/scalatest/matchers/NotEqualMatchResult;
   #18 = Utf8               analysis
   #19 = Utf8               ()Lscala/Option;
   #20 = Utf8               ()Lscala/Option<Ljava/lang/String;>;
   #21 = NameAndType        #9:#12        // atomicAnalysis:()Ljava/util/concurrent/atomic/AtomicReference;
   #22 = Methodref          #2.#21        // org/scalatest/matchers/NotEqualMatchResult.atomicAnalysis:()Ljava/util/concurrent/atomic/AtomicReference;
   #23 = Utf8               java/util/concurrent/atomic/AtomicReference
   #24 = Class              #23           // java/util/concurrent/atomic/AtomicReference
   #25 = Utf8               get
   #26 = Utf8               ()Ljava/lang/Object;
   #27 = NameAndType        #25:#26       // get:()Ljava/lang/Object;
   #28 = Methodref          #24.#27       // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
   #29 = Utf8               scala/Option
   #30 = Class              #29           // scala/Option
   #31 = Utf8               negatedFailureMessage
   #32 = Utf8               (Lorg/scalactic/Prettifier;)Ljava/lang/String;
   #33 = Utf8               prettifier
   #34 = Utf8               midSentenceNegatedFailureMessageArgs
   #35 = Utf8               ()Lscala/collection/immutable/IndexedSeq;
   #36 = NameAndType        #34:#35       // midSentenceNegatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
   #37 = Methodref          #4.#36        // org/scalatest/matchers/MatchResult.midSentenceNegatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
   #38 = Utf8               scala/collection/immutable/IndexedSeq
   #39 = Class              #38           // scala/collection/immutable/IndexedSeq
   #40 = Utf8               apply
   #41 = Utf8               (I)Ljava/lang/Object;
   #42 = NameAndType        #40:#41       // apply:(I)Ljava/lang/Object;
   #43 = InterfaceMethodref #39.#42       // scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
   #44 = Utf8               org/scalactic/Prettifier
   #45 = Class              #44           // org/scalactic/Prettifier
   #46 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lorg/scalactic/PrettyPair;
   #47 = NameAndType        #40:#46       // apply:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/scalactic/PrettyPair;
   #48 = InterfaceMethodref #45.#47       // org/scalactic/Prettifier.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/scalactic/PrettyPair;
   #49 = Utf8               org/scalactic/PrettyPair
   #50 = Class              #49           // org/scalactic/PrettyPair
   #51 = NameAndType        #18:#19       // analysis:()Lscala/Option;
   #52 = Methodref          #50.#51       // org/scalactic/PrettyPair.analysis:()Lscala/Option;
   #53 = Utf8               getAndSet
   #54 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #55 = NameAndType        #53:#54       // getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
   #56 = Methodref          #24.#55       // java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
   #57 = Utf8               org/scalatest/Resources$
   #58 = Class              #57           // org/scalatest/Resources$
   #59 = Utf8               MODULE$
   #60 = Utf8               Lorg/scalatest/Resources$;
   #61 = NameAndType        #59:#60       // MODULE$:Lorg/scalatest/Resources$;
   #62 = Fieldref           #58.#61       // org/scalatest/Resources$.MODULE$:Lorg/scalatest/Resources$;
   #63 = Utf8               rawMidSentenceNegatedFailureMessage
   #64 = Utf8               ()Ljava/lang/String;
   #65 = NameAndType        #63:#64       // rawMidSentenceNegatedFailureMessage:()Ljava/lang/String;
   #66 = Methodref          #4.#65        // org/scalatest/matchers/MatchResult.rawMidSentenceNegatedFailureMessage:()Ljava/lang/String;
   #67 = Utf8               java/lang/Object
   #68 = Class              #67           // java/lang/Object
   #69 = Utf8               left
   #70 = NameAndType        #69:#64       // left:()Ljava/lang/String;
   #71 = Methodref          #50.#70       // org/scalactic/PrettyPair.left:()Ljava/lang/String;
   #72 = Utf8               right
   #73 = NameAndType        #72:#64       // right:()Ljava/lang/String;
   #74 = Methodref          #50.#73       // org/scalactic/PrettyPair.right:()Ljava/lang/String;
   #75 = Utf8               [Ljava/lang/Object;
   #76 = Class              #75           // "[Ljava/lang/Object;"
   #77 = Utf8               formatString
   #78 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #79 = NameAndType        #77:#78       // formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #80 = Methodref          #58.#79       // org/scalatest/Resources$.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #81 = Utf8               prettyPair
   #82 = Utf8               Lorg/scalactic/PrettyPair;
   #83 = Utf8               Lorg/scalactic/Prettifier;
   #84 = Utf8               midSentenceNegatedFailureMessage
   #85 = Methodref          #2.#36        // org/scalatest/matchers/NotEqualMatchResult.midSentenceNegatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
   #86 = Methodref          #2.#65        // org/scalatest/matchers/NotEqualMatchResult.rawMidSentenceNegatedFailureMessage:()Ljava/lang/String;
   #87 = Utf8               negated
   #88 = Utf8               ()Lorg/scalatest/matchers/MatchResult;
   #89 = Utf8               org/scalatest/matchers/EqualMatchResult
   #90 = Class              #89           // org/scalatest/matchers/EqualMatchResult
   #91 = Utf8               matches
   #92 = Utf8               ()Z
   #93 = NameAndType        #91:#92       // matches:()Z
   #94 = Methodref          #4.#93        // org/scalatest/matchers/MatchResult.matches:()Z
   #95 = Utf8               rawMidSentenceFailureMessage
   #96 = NameAndType        #95:#64       // rawMidSentenceFailureMessage:()Ljava/lang/String;
   #97 = Methodref          #4.#96        // org/scalatest/matchers/MatchResult.rawMidSentenceFailureMessage:()Ljava/lang/String;
   #98 = Utf8               midSentenceFailureMessageArgs
   #99 = NameAndType        #98:#35       // midSentenceFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #100 = Methodref          #4.#99        // org/scalatest/matchers/MatchResult.midSentenceFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
  #101 = Utf8               <init>
  #102 = Utf8               (ZLjava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;)V
  #103 = NameAndType        #101:#102     // "<init>":(ZLjava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;)V
  #104 = Methodref          #90.#103      // org/scalatest/matchers/EqualMatchResult."<init>":(ZLjava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;)V
  #105 = Utf8               (ZLjava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;)V
  #106 = Utf8               rawFailureMessage
  #107 = Utf8               rawNegatedFailureMessage
  #108 = Utf8               failureMessageArgs
  #109 = Utf8               negatedFailureMessageArgs
  #110 = Utf8               (ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;)V
  #111 = NameAndType        #101:#110     // "<init>":(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;)V
  #112 = Methodref          #4.#111       // org/scalatest/matchers/MatchResult."<init>":(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;)V
  #113 = Utf8               scala/None$
  #114 = Class              #113          // scala/None$
  #115 = Utf8               Lscala/None$;
  #116 = NameAndType        #59:#115      // MODULE$:Lscala/None$;
  #117 = Fieldref           #114.#116     // scala/None$.MODULE$:Lscala/None$;
  #118 = Utf8               (Ljava/lang/Object;)V
  #119 = NameAndType        #101:#118     // "<init>":(Ljava/lang/Object;)V
  #120 = Methodref          #24.#119      // java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
  #121 = Utf8               Z
  #122 = Utf8               Ljava/lang/String;
  #123 = Utf8               Lscala/collection/immutable/IndexedSeq;
  #124 = Utf8               Signature
  #125 = Utf8               Code
  #126 = Utf8               LineNumberTable
  #127 = Utf8               LocalVariableTable
  #128 = Utf8               MethodParameters
  #129 = Utf8               StackMapTable
  #130 = Utf8               SourceFile
  #131 = Utf8               RuntimeVisibleAnnotations
  #132 = Utf8               ScalaInlineInfo
  #133 = Utf8               ScalaSig
{
  private final java.util.concurrent.atomic.AtomicReference<scala.Option<java.lang.String>> atomicAnalysis;
    descriptor: Ljava/util/concurrent/atomic/AtomicReference;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #11                          // Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/lang/String;>;>;

  public java.util.concurrent.atomic.AtomicReference<scala.Option<java.lang.String>> atomicAnalysis();
    descriptor: ()Ljava/util/concurrent/atomic/AtomicReference;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #15                 // Field atomicAnalysis:Ljava/util/concurrent/atomic/AtomicReference;
         4: areturn
      LineNumberTable:
        line 430: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/matchers/NotEqualMatchResult;
    Signature: #13                          // ()Ljava/util/concurrent/atomic/AtomicReference<Lscala/Option<Ljava/lang/String;>;>;

  public scala.Option<java.lang.String> analysis();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #22                 // Method atomicAnalysis:()Ljava/util/concurrent/atomic/AtomicReference;
         4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         7: checkcast     #30                 // class scala/Option
        10: areturn
      LineNumberTable:
        line 432: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/scalatest/matchers/NotEqualMatchResult;
    Signature: #20                          // ()Lscala/Option<Ljava/lang/String;>;

  public java.lang.String negatedFailureMessage(org.scalactic.Prettifier);
    descriptor: (Lorg/scalactic/Prettifier;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: invokespecial #37                 // Method org/scalatest/matchers/MatchResult.midSentenceNegatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
         5: iconst_0
         6: invokeinterface #43,  2           // InterfaceMethod scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
        11: aload_0
        12: invokespecial #37                 // Method org/scalatest/matchers/MatchResult.midSentenceNegatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
        15: iconst_1
        16: invokeinterface #43,  2           // InterfaceMethod scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
        21: invokeinterface #48,  3           // InterfaceMethod org/scalactic/Prettifier.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/scalactic/PrettyPair;
        26: astore_2
        27: aload_0
        28: invokevirtual #22                 // Method atomicAnalysis:()Ljava/util/concurrent/atomic/AtomicReference;
        31: aload_2
        32: invokevirtual #52                 // Method org/scalactic/PrettyPair.analysis:()Lscala/Option;
        35: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
        38: pop
        39: getstatic     #62                 // Field org/scalatest/Resources$.MODULE$:Lorg/scalatest/Resources$;
        42: aload_0
        43: invokespecial #66                 // Method org/scalatest/matchers/MatchResult.rawMidSentenceNegatedFailureMessage:()Ljava/lang/String;
        46: iconst_2
        47: anewarray     #68                 // class java/lang/Object
        50: dup
        51: iconst_0
        52: aload_2
        53: invokevirtual #71                 // Method org/scalactic/PrettyPair.left:()Ljava/lang/String;
        56: aastore
        57: dup
        58: iconst_1
        59: aload_2
        60: invokevirtual #74                 // Method org/scalactic/PrettyPair.right:()Ljava/lang/String;
        63: aastore
        64: checkcast     #76                 // class "[Ljava/lang/Object;"
        67: invokevirtual #80                 // Method org/scalatest/Resources$.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        70: areturn
      LineNumberTable:
        line 436: 0
        line 437: 27
        line 438: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      43     2 prettyPair   Lorg/scalactic/PrettyPair;
            0      71     0  this   Lorg/scalatest/matchers/NotEqualMatchResult;
            0      71     1 prettifier   Lorg/scalactic/Prettifier;
    MethodParameters:
      Name                           Flags
      prettifier                     final

  public java.lang.String midSentenceNegatedFailureMessage(org.scalactic.Prettifier);
    descriptor: (Lorg/scalactic/Prettifier;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #85                 // Method midSentenceNegatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
         5: iconst_0
         6: invokeinterface #43,  2           // InterfaceMethod scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
        11: aload_0
        12: invokevirtual #85                 // Method midSentenceNegatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
        15: iconst_1
        16: invokeinterface #43,  2           // InterfaceMethod scala/collection/immutable/IndexedSeq.apply:(I)Ljava/lang/Object;
        21: invokeinterface #48,  3           // InterfaceMethod org/scalactic/Prettifier.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/scalactic/PrettyPair;
        26: astore_2
        27: aload_0
        28: invokevirtual #22                 // Method atomicAnalysis:()Ljava/util/concurrent/atomic/AtomicReference;
        31: aload_2
        32: invokevirtual #52                 // Method org/scalactic/PrettyPair.analysis:()Lscala/Option;
        35: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
        38: pop
        39: getstatic     #62                 // Field org/scalatest/Resources$.MODULE$:Lorg/scalatest/Resources$;
        42: aload_0
        43: invokevirtual #86                 // Method rawMidSentenceNegatedFailureMessage:()Ljava/lang/String;
        46: iconst_2
        47: anewarray     #68                 // class java/lang/Object
        50: dup
        51: iconst_0
        52: aload_2
        53: invokevirtual #71                 // Method org/scalactic/PrettyPair.left:()Ljava/lang/String;
        56: aastore
        57: dup
        58: iconst_1
        59: aload_2
        60: invokevirtual #74                 // Method org/scalactic/PrettyPair.right:()Ljava/lang/String;
        63: aastore
        64: checkcast     #76                 // class "[Ljava/lang/Object;"
        67: invokevirtual #80                 // Method org/scalatest/Resources$.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        70: areturn
      LineNumberTable:
        line 442: 0
        line 443: 27
        line 444: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      43     2 prettyPair   Lorg/scalactic/PrettyPair;
            0      71     0  this   Lorg/scalatest/matchers/NotEqualMatchResult;
            0      71     1 prettifier   Lorg/scalactic/Prettifier;
    MethodParameters:
      Name                           Flags
      prettifier                     final

  public org.scalatest.matchers.MatchResult negated();
    descriptor: ()Lorg/scalatest/matchers/MatchResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: new           #90                 // class org/scalatest/matchers/EqualMatchResult
         3: dup
         4: aload_0
         5: invokespecial #94                 // Method org/scalatest/matchers/MatchResult.matches:()Z
         8: ifne          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: aload_0
        17: invokespecial #66                 // Method org/scalatest/matchers/MatchResult.rawMidSentenceNegatedFailureMessage:()Ljava/lang/String;
        20: aload_0
        21: invokespecial #97                 // Method org/scalatest/matchers/MatchResult.rawMidSentenceFailureMessage:()Ljava/lang/String;
        24: aload_0
        25: invokespecial #37                 // Method org/scalatest/matchers/MatchResult.midSentenceNegatedFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
        28: aload_0
        29: invokespecial #100                // Method org/scalatest/matchers/MatchResult.midSentenceFailureMessageArgs:()Lscala/collection/immutable/IndexedSeq;
        32: invokespecial #104                // Method org/scalatest/matchers/EqualMatchResult."<init>":(ZLjava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;)V
        35: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class org/scalatest/matchers/NotEqualMatchResult ]
          stack = [ uninitialized 0, uninitialized 0 ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/matchers/NotEqualMatchResult ]
          stack = [ uninitialized 0, uninitialized 0, int ]
      LineNumberTable:
        line 448: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/scalatest/matchers/NotEqualMatchResult;

  public org.scalatest.matchers.NotEqualMatchResult(boolean, java.lang.String, java.lang.String, scala.collection.immutable.IndexedSeq<java.lang.Object>, scala.collection.immutable.IndexedSeq<java.lang.Object>);
    descriptor: (ZLjava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=6, args_size=6
         0: aload_0
         1: iload_1
         2: aload_2
         3: aload_3
         4: aload_2
         5: aload_3
         6: aload         4
         8: aload         5
        10: aload         4
        12: aload         5
        14: invokespecial #112                // Method org/scalatest/matchers/MatchResult."<init>":(ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;Lscala/collection/immutable/IndexedSeq;)V
        17: aload_0
        18: new           #24                 // class java/util/concurrent/atomic/AtomicReference
        21: dup
        22: getstatic     #117                // Field scala/None$.MODULE$:Lscala/None$;
        25: invokespecial #120                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
        28: putfield      #15                 // Field atomicAnalysis:Ljava/util/concurrent/atomic/AtomicReference;
        31: return
      LineNumberTable:
        line 427: 0
        line 428: 6
        line 430: 17
        line 421: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/scalatest/matchers/NotEqualMatchResult;
            0      32     1 matches   Z
            0      32     2 rawFailureMessage   Ljava/lang/String;
            0      32     3 rawNegatedFailureMessage   Ljava/lang/String;
            0      32     4 failureMessageArgs   Lscala/collection/immutable/IndexedSeq;
            0      32     5 negatedFailureMessageArgs   Lscala/collection/immutable/IndexedSeq;
    Signature: #105                         // (ZLjava/lang/String;Ljava/lang/String;Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;Lscala/collection/immutable/IndexedSeq<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      matches                        final
      rawFailureMessage              final
      rawNegatedFailureMessage       final
      failureMessageArgs             final
      negatedFailureMessageArgs      final
}
SourceFile: "MatchResult.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005A4Q!\u0004\b\u0001!QA\u0011\"\u0007\u0001\u0003\u0002\u0003\u0006IaG\u0011\t\u0013\t\u0002!\u0011!Q\u0001\n\rr\u0003\"\u0003\u0019\u0001\u0005\u0003\u0005\u000b\u0011B\u00122\u0011%\u0019\u0004A!A!\u0002\u0013!\u0004\tC\u0005C\u0001\t\u0005\t\u0015!\u00035\u0007\")Q\t\u0001C\u0001\r\"AQ\n\u0001b\u0001\n\u0003\u0001b\n\u0003\u0004_\u0001\u0001\u0006Ia\u0014\u0005\u0007?\u0002!\t\u0001\u00051\t\u000b\u0005\u0004A\u0011\t2\t\u000b-\u0004A\u0011\t7\t\u000b9\u0004A\u0011I8\u0003\'9{G/R9vC2l\u0015\r^2i%\u0016\u001cX\u000f\u001c;\u000b\u0005=\u0001\u0012\u0001C7bi\u000eDWM]:\u000b\u0005E\u0011\u0012!C:dC2\fG/Z:u\u0015\u0005\u0019\u0012aA8sON\u0011\u0001!\u0006\t\u0003-]i\u0011AD\u0005\u000319\u00111\"T1uG\"\u0014Vm];mi\u00069Q.\u0019;dQ\u0016\u001c8\u0001\u0001\t\u00039}i\u0011!\b\u0006\u0002=\u0005)1oY1mC&\u0011\u0001%\b\u0002\b\u0005>|G.Z1o\u0013\tIr#A\tsC^4\u0015-\u001b7ve\u0016lUm]:bO\u0016\u0004\"\u0001J\u0016\u000f\u0005\u0015J\u0003C\u0001\u0014\u001e\u001b\u00059#B\u0001\u0015\u001b\u0003\u0019a$o\\8u}%\u0011!&H\u0001\u0007!J,G-\u001a4\n\u00051j#AB*ue&twM\u0003\u0002+;%\u0011qfF\u0001\u001de\u0006<X*\u001b3TK:$XM\\2f\r\u0006LG.\u001e:f\u001b\u0016\u001c8/Y4f\u0003a\u0011\u0018m\u001e(fO\u0006$X\r\u001a$bS2,(/Z\'fgN\fw-Z\u0005\u0003e]\t1E]1x\u001b&$7+\u001a8uK:\u001cWMT3hCR,GMR1jYV\u0014X-T3tg\u0006<W-\u0001\ngC&dWO]3NKN\u001c\u0018mZ3Be\u001e\u001c\bcA\u001b;{9\u0011a\u0007\u000f\b\u0003M]J\u0011AH\u0005\u0003su\tq\u0001]1dW\u0006<W-\u0003\u0002<y\tQ\u0011J\u001c3fq\u0016$7+Z9\u000b\u0005ej\u0002C\u0001\u000f?\u0013\tyTDA\u0002B]fL!!Q\f\u0002;5LGmU3oi\u0016t7-\u001a$bS2,(/Z\'fgN\fw-Z!sON\f\u0011D\\3hCR,GMR1jYV\u0014X-T3tg\u0006<W-\u0011:hg&\u0011AiF\u0001%[&$7+\u001a8uK:\u001cWMT3hCR,GMR1jYV\u0014X-T3tg\u0006<W-\u0011:hg\u00061A(\u001b8jiz\"ba\u0012%J\u0015.c\u0005C\u0001\f\u0001\u0011\u0015Ib\u00011\u0001\u001c\u0011\u0015\u0011c\u00011\u0001$\u0011\u0015\u0001d\u00011\u0001$\u0011\u0015\u0019d\u00011\u00015\u0011\u0015\u0011e\u00011\u00015\u00039\tGo\\7jG\u0006s\u0017\r\\=tSN,\u0012a\u0014\t\u0004!f[V\"A)\u000b\u0005I\u001b\u0016AB1u_6L7M\u0003\u0002U+\u0006Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005Y;\u0016\u0001B;uS2T\u0011\u0001W\u0001\u0005U\u00064\u0018-\u0003\u0002[#\ny\u0011\t^8nS\u000e\u0014VMZ3sK:\u001cW\rE\u0002\u001d9\u000eJ!!X\u000f\u0003\r=\u0003H/[8o\u0003=\tGo\\7jG\u0006s\u0017\r\\=tSN\u0004\u0013\u0001C1oC2L8/[:\u0016\u0003m\u000bQC\\3hCR,GMR1jYV\u0014X-T3tg\u0006<W\r\u0006\u0002$G\")AM\u0003a\u0002K\u0006Q\u0001O]3ui&4\u0017.\u001a:\u0011\u0005\u0019LW\"A4\u000b\u0005!\u0014\u0012!C:dC2\f7\r^5d\u0013\tQwM\u0001\u0006Qe\u0016$H/\u001b4jKJ\f\u0001%\\5e\'\u0016tG/\u001a8dK:+w-\u0019;fI\u001a\u000b\u0017\u000e\\;sK6+7o]1hKR\u00111%\u001c\u0005\u0006I.\u0001\u001d!Z\u0001\b]\u0016<\u0017\r^3e+\u0005)\u0002"
    )
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 00 00 06 00 65 00 66 00 00 12 00 13 00 00 09
   00 0C 00 00 54 00 20 00 00 57 00 58 00 00 1F 00
   20 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
