Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/util/ModuleMatcher.class
  Last modified May 29, 2022; size 10912 bytes
  SHA-256 checksum ea194bf91a6770d41228083c0186632b8910d64e5adecc17987ab7d34aed4dc6
  Compiled from "ModuleMatcher.scala"
public final class coursier.util.ModuleMatcher implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/util/ModuleMatcher
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 5, methods: 31, attributes: 6
Constant pool:
    #1 = Utf8               coursier/util/ModuleMatcher
    #2 = Class              #1            // coursier/util/ModuleMatcher
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               ModuleMatcher.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005\u001df\u0001\u0002\u000f\u001e\u0005\tB\u0001\u0002\u000f\u0001\u0003\u0006\u0004%\t!\u000f\u0005\t\u0001\u0002\u0011\t\u0011)A\u0005u!)\u0011\t\u0001C\u0001\u0005\"Aa\t\u0001EC\u0002\u0013\u0005q\t\u0003\u0005P\u0001!\u0015\r\u0011\"\u0001H\u0011!\u0001\u0006\u0001#b\u0001\n\u0003\t\u0006\"\u00022\u0001\t\u0003\u0019\u0007\"B5\u0001\t\u0003Q\u0007\"\u00027\u0001\t\u0003j\u0007\"B;\u0001\t\u00032\b\"\u0002?\u0001\t\u0003j\bBB@\u0001\t\u0003\n\t\u0001C\u0004\u0002\n\u0001!I!a\u0003\t\u000f\u0005M\u0001\u0001\"\u0011\u0002\u0016!9\u0011q\u0003\u0001\u0005B\u0005e\u0001bBA\u000e\u0001\u0011\u0005\u0013Q\u0004\u0005\b\u0003G\u0001A\u0011IA\u0013\u000f\u001d\tI#\bE\u0001\u0003W1a\u0001H\u000f\t\u0002\u00055\u0002BB!\u0014\t\u0003\tI\u0004C\u0004\u0002<M!\t!!\u0010\t\u0013\u0005m3#%A\u0005\u0002\u0005u\u0003bBA:\'\u0011\u0005\u0011Q\u000f\u0005\b\u0003o\u001aB\u0011BA=\u0011\u001d\tYd\u0005C\u0001\u0003\'C\u0011\"a&\u0014#\u0003%I!!\'\t\u0013\u0005u5#!A\u0005\n\u0005}%!D\'pIVdW-T1uG\",\'O\u0003\u0002\u001f?\u0005!Q\u000f^5m\u0015\u0005\u0001\u0013\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001M!\u0001aI\u0015-!\t!s%D\u0001&\u0015\u00051\u0013!B:dC2\f\u0017B\u0001\u0015&\u0005\u0019\te.\u001f*fMB\u0011AEK\u0005\u0003W\u0015\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002.k9\u0011af\r\b\u0003_Ij\u0011\u0001\r\u0006\u0003c\u0005\na\u0001\u0010:p_Rt\u0014\"\u0001\u0014\n\u0005Q*\u0013a\u00029bG.\fw-Z\u0005\u0003m]\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001N\u0013\u0002\u000f5\fGo\u00195feV\t!\b\u0005\u0002<}5\tAH\u0003\u0002>?\u0005!1m\u001c:f\u0013\tyDH\u0001\u0004N_\u0012,H.Z\u0001\t[\u0006$8\r[3sA\u00051A(\u001b8jiz\"\"aQ#\u0011\u0005\u0011\u0003Q\"A\u000f\t\u000ba\u001a\u0001\u0019\u0001\u001e\u0002\u0015=\u0014x\rU1ui\u0016\u0014h.F\u0001I!\tIU*D\u0001K\u0015\tYE*\u0001\u0005nCR\u001c\u0007.\u001b8h\u0015\tqR%\u0003\u0002O\u0015\n)!+Z4fq\u0006Ya.Y7f!\u0006$H/\u001a:o\u0003E\tG\u000f\u001e:jEV$Xm\u001d)biR,\'O\\\u000b\u0002%B!1\u000b\u0017.I\u001b\u0005!&BA+W\u0003%IW.\\;uC\ndWM\u0003\u0002XK\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\u0005e#&aA\'baB\u00111l\u0018\b\u00039v\u0003\"aL\u0013\n\u0005y+\u0013A\u0002)sK\u0012,g-\u0003\u0002aC\n11\u000b\u001e:j]\u001eT!AX\u0013\u0002\u000f5\fGo\u00195fgR\u0011Am\u001a\t\u0003I\u0015L!AZ\u0013\u0003\u000f\t{w\u000e\\3b]\")\u0001n\u0002a\u0001u\u00051Qn\u001c3vY\u0016\f1b^5uQ6\u000bGo\u00195feR\u00111i\u001b\u0005\u0006q!\u0001\rAO\u0001\ti>\u001cFO]5oOR\ta\u000e\u0005\u0002pi6\t\u0001O\u0003\u0002re\u0006!A.\u00198h\u0015\u0005\u0019\u0018\u0001\u00026bm\u0006L!\u0001\u00199\u0002\u0011\r\fg.R9vC2$\"\u0001Z<\t\u000baT\u0001\u0019A=\u0002\u0007=\u0014\'\u000e\u0005\u0002%u&\u001110\n\u0002\u0004\u0003:L\u0018AB3rk\u0006d7\u000f\u0006\u0002e}\")\u0001p\u0003a\u0001s\u0006A\u0001.Y:i\u0007>$W\r\u0006\u0002\u0002\u0004A\u0019A%!\u0002\n\u0007\u0005\u001dQEA\u0002J]R\fQ\u0001^;qY\u0016,\"!!\u0004\u0011\t\u0011\nyAO\u0005\u0004\u0003#)#A\u0002+va2,\u0017\'A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0002]\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u00111A\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\rI\u0018q\u0004\u0005\b\u0003C\u0001\u0002\u0019AA\u0002\u0003\u0005q\u0017A\u00059s_\u0012,8\r^#mK6,g\u000e\u001e(b[\u0016$2A\\A\u0014\u0011\u001d\t\t#\u0005a\u0001\u0003\u0007\tQ\"T8ek2,W*\u0019;dQ\u0016\u0014\bC\u0001#\u0014\'\u0011\u00192%a\f\u0011\t\u0005E\u0012qG\u0007\u0003\u0003gQ1!!\u000es\u0003\tIw.C\u00027\u0003g!\"!a\u000b\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u000f\r\u000by$!\u0013\u0002T!9\u0011\u0011I\u000bA\u0002\u0005\r\u0013aA8sOB\u00191(!\u0012\n\u0007\u0005\u001dCH\u0001\u0007Pe\u001e\fg.\u001b>bi&|g\u000eC\u0004\u0002LU\u0001\r!!\u0014\u0002\t9\fW.\u001a\t\u0004w\u0005=\u0013bAA)y\tQQj\u001c3vY\u0016t\u0015-\\3\t\u0013\u0005US\u0003%AA\u0002\u0005]\u0013AC1uiJL\'-\u001e;fgB)1,!\u0017[5&\u0011\u0011,Y\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%gU\u0011\u0011q\f\u0016\u0005\u0003/\n\tg\u000b\u0002\u0002dA!\u0011QMA8\u001b\t\t9G\u0003\u0003\u0002j\u0005-\u0014!C;oG\",7m[3e\u0015\r\ti\'J\u0001\u000bC:tw\u000e^1uS>t\u0017\u0002BA9\u0003O\u0012\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u0003\r\tG\u000e\\\u000b\u0002\u0007\u0006i!\r\\8c)>\u0004\u0016\r\u001e;fe:$R\u0001SA>\u0003\u007fBa!! \u0019\u0001\u0004Q\u0016!A:\t\u0013\u0005\u0005\u0005\u0004%AA\u0002\u0005\r\u0015!\u00012\u0011\u00075\n))C\u0002\u0002\b^\u0012Qb\u0015;sS:<\')^5mI\u0016\u0014\bf\u0001\r\u0002\fB!\u0011QRAH\u001b\t\tY\'\u0003\u0003\u0002\u0012\u0006-$a\u0002;bS2\u0014Xm\u0019\u000b\u0004\u0007\u0006U\u0005\"\u0002\u001d\u001a\u0001\u0004Q\u0014a\u00062m_\n$v\u000eU1ui\u0016\u0014h\u000e\n3fM\u0006,H\u000e\u001e\u00133+\t\tYJ\u000b\u0003\u0002\u0004\u0006\u0005\u0014\u0001D<sSR,\'+\u001a9mC\u000e,GCAAQ!\ry\u00171U\u0005\u0004\u0003K\u0003(AB(cU\u0016\u001cG\u000f
   #13 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #14 = Class              #13           // java/lang/invoke/MethodHandles$Lookup
   #15 = Utf8               java/lang/invoke/MethodHandles
   #16 = Class              #15           // java/lang/invoke/MethodHandles
   #17 = Utf8               Lookup
   #18 = Utf8               orgPattern
   #19 = Utf8               Lscala/util/matching/Regex;
   #20 = Utf8               namePattern
   #21 = Utf8               attributesPattern
   #22 = Utf8               Lscala/collection/immutable/Map;
   #23 = Utf8               Lscala/collection/immutable/Map<Ljava/lang/String;Lscala/util/matching/Regex;>;
   #24 = Utf8               matcher
   #25 = Utf8               Lcoursier/core/Module;
   #26 = Utf8               bitmap$0
   #27 = Utf8               B
   #28 = Utf8               apply
   #29 = Utf8               (Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #30 = Utf8               coursier/util/ModuleMatcher$
   #31 = Class              #30           // coursier/util/ModuleMatcher$
   #32 = Utf8               MODULE$
   #33 = Utf8               Lcoursier/util/ModuleMatcher$;
   #34 = NameAndType        #32:#33       // MODULE$:Lcoursier/util/ModuleMatcher$;
   #35 = Fieldref           #31.#34       // coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
   #36 = NameAndType        #28:#29       // apply:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #37 = Methodref          #31.#36       // coursier/util/ModuleMatcher$.apply:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
   #38 = Utf8               all
   #39 = Utf8               ()Lcoursier/util/ModuleMatcher;
   #40 = NameAndType        #38:#39       // all:()Lcoursier/util/ModuleMatcher;
   #41 = Methodref          #31.#40       // coursier/util/ModuleMatcher$.all:()Lcoursier/util/ModuleMatcher;
   #42 = Utf8               apply$default$3
   #43 = Utf8               ()Lscala/collection/immutable/Map;
   #44 = Utf8               ()Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;
   #45 = NameAndType        #42:#43       // apply$default$3:()Lscala/collection/immutable/Map;
   #46 = Methodref          #31.#45       // coursier/util/ModuleMatcher$.apply$default$3:()Lscala/collection/immutable/Map;
   #47 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/util/ModuleMatcher;
   #48 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;)Lcoursier/util/ModuleMatcher;
   #49 = Utf8               org
   #50 = Utf8               name
   #51 = Utf8               attributes
   #52 = NameAndType        #28:#47       // apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/util/ModuleMatcher;
   #53 = Methodref          #31.#52       // coursier/util/ModuleMatcher$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/util/ModuleMatcher;
   #54 = Utf8               productIterator
   #55 = Utf8               ()Lscala/collection/Iterator;
   #56 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #57 = Utf8               productIterator$
   #58 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #59 = NameAndType        #57:#58       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #60 = InterfaceMethodref #6.#59        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #61 = Utf8               this
   #62 = Utf8               Lcoursier/util/ModuleMatcher;
   #63 = Utf8               productElementNames
   #64 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #65 = Utf8               productElementNames$
   #66 = NameAndType        #65:#58       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #67 = InterfaceMethodref #6.#66        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #68 = Utf8               ()Lcoursier/core/Module;
   #69 = NameAndType        #24:#25       // matcher:Lcoursier/core/Module;
   #70 = Fieldref           #2.#69        // coursier/util/ModuleMatcher.matcher:Lcoursier/core/Module;
   #71 = Utf8               orgPattern$lzycompute
   #72 = Utf8               ()Lscala/util/matching/Regex;
   #73 = NameAndType        #26:#27       // bitmap$0:B
   #74 = Fieldref           #2.#73        // coursier/util/ModuleMatcher.bitmap$0:B
   #75 = NameAndType        #24:#68       // matcher:()Lcoursier/core/Module;
   #76 = Methodref          #2.#75        // coursier/util/ModuleMatcher.matcher:()Lcoursier/core/Module;
   #77 = Utf8               coursier/core/Module
   #78 = Class              #77           // coursier/core/Module
   #79 = Utf8               organization
   #80 = Utf8               ()Ljava/lang/String;
   #81 = NameAndType        #79:#80       // organization:()Ljava/lang/String;
   #82 = Methodref          #78.#81       // coursier/core/Module.organization:()Ljava/lang/String;
   #83 = Utf8               coursier$util$ModuleMatcher$$blobToPattern$default$2
   #84 = Utf8               ()Lscala/collection/mutable/StringBuilder;
   #85 = NameAndType        #83:#84       // coursier$util$ModuleMatcher$$blobToPattern$default$2:()Lscala/collection/mutable/StringBuilder;
   #86 = Methodref          #31.#85       // coursier/util/ModuleMatcher$.coursier$util$ModuleMatcher$$blobToPattern$default$2:()Lscala/collection/mutable/StringBuilder;
   #87 = Utf8               coursier$util$ModuleMatcher$$blobToPattern
   #88 = Utf8               (Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/util/matching/Regex;
   #89 = NameAndType        #87:#88       // coursier$util$ModuleMatcher$$blobToPattern:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/util/matching/Regex;
   #90 = Methodref          #31.#89       // coursier/util/ModuleMatcher$.coursier$util$ModuleMatcher$$blobToPattern:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/util/matching/Regex;
   #91 = NameAndType        #18:#19       // orgPattern:Lscala/util/matching/Regex;
   #92 = Fieldref           #2.#91        // coursier/util/ModuleMatcher.orgPattern:Lscala/util/matching/Regex;
   #93 = Utf8               java/lang/Throwable
   #94 = Class              #93           // java/lang/Throwable
   #95 = NameAndType        #71:#72       // orgPattern$lzycompute:()Lscala/util/matching/Regex;
   #96 = Methodref          #2.#95        // coursier/util/ModuleMatcher.orgPattern$lzycompute:()Lscala/util/matching/Regex;
   #97 = Utf8               scala/util/matching/Regex
   #98 = Class              #97           // scala/util/matching/Regex
   #99 = Utf8               namePattern$lzycompute
  #100 = NameAndType        #50:#80       // name:()Ljava/lang/String;
  #101 = Methodref          #78.#100      // coursier/core/Module.name:()Ljava/lang/String;
  #102 = NameAndType        #20:#19       // namePattern:Lscala/util/matching/Regex;
  #103 = Fieldref           #2.#102       // coursier/util/ModuleMatcher.namePattern:Lscala/util/matching/Regex;
  #104 = NameAndType        #99:#72       // namePattern$lzycompute:()Lscala/util/matching/Regex;
  #105 = Methodref          #2.#104       // coursier/util/ModuleMatcher.namePattern$lzycompute:()Lscala/util/matching/Regex;
  #106 = Utf8               attributesPattern$lzycompute
  #107 = Utf8               ()Lscala/collection/immutable/Map<Ljava/lang/String;Lscala/util/matching/Regex;>;
  #108 = NameAndType        #51:#43       // attributes:()Lscala/collection/immutable/Map;
  #109 = Methodref          #78.#108      // coursier/core/Module.attributes:()Lscala/collection/immutable/Map;
  #110 = Utf8               scala/collection/immutable/Map
  #111 = Class              #110          // scala/collection/immutable/Map
  #112 = Utf8               view
  #113 = Utf8               ()Lscala/collection/MapView;
  #114 = NameAndType        #112:#113     // view:()Lscala/collection/MapView;
  #115 = InterfaceMethodref #111.#114     // scala/collection/immutable/Map.view:()Lscala/collection/MapView;
  #116 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #117 = MethodType         #116          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #118 = Utf8               $anonfun$attributesPattern$1
  #119 = Utf8               (Ljava/lang/String;)Lscala/util/matching/Regex;
  #120 = NameAndType        #118:#119     // $anonfun$attributesPattern$1:(Ljava/lang/String;)Lscala/util/matching/Regex;
  #121 = Methodref          #2.#120       // coursier/util/ModuleMatcher.$anonfun$attributesPattern$1:(Ljava/lang/String;)Lscala/util/matching/Regex;
  #122 = MethodHandle       6:#121        // REF_invokeStatic coursier/util/ModuleMatcher.$anonfun$attributesPattern$1:(Ljava/lang/String;)Lscala/util/matching/Regex;
  #123 = MethodType         #119          //  (Ljava/lang/String;)Lscala/util/matching/Regex;
  #124 = Integer            5
  #125 = Integer            1
  #126 = Utf8               java/lang/invoke/LambdaMetafactory
  #127 = Class              #126          // java/lang/invoke/LambdaMetafactory
  #128 = Utf8               altMetafactory
  #129 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #130 = NameAndType        #128:#129     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #131 = Methodref          #127.#130     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #132 = MethodHandle       6:#131        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #133 = Utf8               ()Lscala/Function1;
  #134 = NameAndType        #28:#133      // apply:()Lscala/Function1;
  #135 = InvokeDynamic      #0:#134       // #0:apply:()Lscala/Function1;
  #136 = Utf8               scala/collection/MapView
  #137 = Class              #136          // scala/collection/MapView
  #138 = Utf8               mapValues
  #139 = Utf8               (Lscala/Function1;)Lscala/collection/MapView;
  #140 = NameAndType        #138:#139     // mapValues:(Lscala/Function1;)Lscala/collection/MapView;
  #141 = InterfaceMethodref #137.#140     // scala/collection/MapView.mapValues:(Lscala/Function1;)Lscala/collection/MapView;
  #142 = Utf8               iterator
  #143 = NameAndType        #142:#55      // iterator:()Lscala/collection/Iterator;
  #144 = InterfaceMethodref #137.#143     // scala/collection/MapView.iterator:()Lscala/collection/Iterator;
  #145 = Utf8               scala/$less$colon$less$
  #146 = Class              #145          // scala/$less$colon$less$
  #147 = Utf8               Lscala/$less$colon$less$;
  #148 = NameAndType        #32:#147      // MODULE$:Lscala/$less$colon$less$;
  #149 = Fieldref           #146.#148     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #150 = Utf8               refl
  #151 = Utf8               ()Lscala/$eq$colon$eq;
  #152 = NameAndType        #150:#151     // refl:()Lscala/$eq$colon$eq;
  #153 = Methodref          #146.#152     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #154 = Utf8               scala/collection/Iterator
  #155 = Class              #154          // scala/collection/Iterator
  #156 = Utf8               toMap
  #157 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #158 = NameAndType        #156:#157     // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #159 = InterfaceMethodref #155.#158     // scala/collection/Iterator.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #160 = NameAndType        #21:#22       // attributesPattern:Lscala/collection/immutable/Map;
  #161 = Fieldref           #2.#160       // coursier/util/ModuleMatcher.attributesPattern:Lscala/collection/immutable/Map;
  #162 = NameAndType        #106:#43      // attributesPattern$lzycompute:()Lscala/collection/immutable/Map;
  #163 = Methodref          #2.#162       // coursier/util/ModuleMatcher.attributesPattern$lzycompute:()Lscala/collection/immutable/Map;
  #164 = Utf8               matches
  #165 = Utf8               (Lcoursier/core/Module;)Z
  #166 = Utf8               module
  #167 = NameAndType        #18:#72       // orgPattern:()Lscala/util/matching/Regex;
  #168 = Methodref          #2.#167       // coursier/util/ModuleMatcher.orgPattern:()Lscala/util/matching/Regex;
  #169 = Utf8               pattern
  #170 = Utf8               ()Ljava/util/regex/Pattern;
  #171 = NameAndType        #169:#170     // pattern:()Ljava/util/regex/Pattern;
  #172 = Methodref          #98.#171      // scala/util/matching/Regex.pattern:()Ljava/util/regex/Pattern;
  #173 = Utf8               java/util/regex/Pattern
  #174 = Class              #173          // java/util/regex/Pattern
  #175 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
  #176 = NameAndType        #24:#175      // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
  #177 = Methodref          #174.#176     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
  #178 = Utf8               java/util/regex/Matcher
  #179 = Class              #178          // java/util/regex/Matcher
  #180 = Utf8               ()Z
  #181 = NameAndType        #164:#180     // matches:()Z
  #182 = Methodref          #179.#181     // java/util/regex/Matcher.matches:()Z
  #183 = NameAndType        #20:#72       // namePattern:()Lscala/util/matching/Regex;
  #184 = Methodref          #2.#183       // coursier/util/ModuleMatcher.namePattern:()Lscala/util/matching/Regex;
  #185 = Utf8               keySet
  #186 = Utf8               ()Lscala/collection/immutable/Set;
  #187 = NameAndType        #185:#186     // keySet:()Lscala/collection/immutable/Set;
  #188 = InterfaceMethodref #111.#187     // scala/collection/immutable/Map.keySet:()Lscala/collection/immutable/Set;
  #189 = NameAndType        #21:#43       // attributesPattern:()Lscala/collection/immutable/Map;
  #190 = Methodref          #2.#189       // coursier/util/ModuleMatcher.attributesPattern:()Lscala/collection/immutable/Map;
  #191 = Utf8               scala/collection/immutable/Set
  #192 = Class              #191          // scala/collection/immutable/Set
  #193 = Utf8               equals
  #194 = Utf8               (Ljava/lang/Object;)Z
  #195 = NameAndType        #193:#194     // equals:(Ljava/lang/Object;)Z
  #196 = Methodref          #4.#195       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #197 = Utf8               $anonfun$matches$1$adapted
  #198 = Utf8               (Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
  #199 = NameAndType        #197:#198     // $anonfun$matches$1$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
  #200 = Methodref          #2.#199       // coursier/util/ModuleMatcher.$anonfun$matches$1$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
  #201 = MethodHandle       6:#200        // REF_invokeStatic coursier/util/ModuleMatcher.$anonfun$matches$1$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
  #202 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #203 = MethodType         #202          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #204 = Utf8               (Lcoursier/core/Module;)Lscala/Function1;
  #205 = NameAndType        #28:#204      // apply:(Lcoursier/core/Module;)Lscala/Function1;
  #206 = InvokeDynamic      #1:#205       // #1:apply:(Lcoursier/core/Module;)Lscala/Function1;
  #207 = Utf8               forall
  #208 = Utf8               (Lscala/Function1;)Z
  #209 = NameAndType        #207:#208     // forall:(Lscala/Function1;)Z
  #210 = InterfaceMethodref #111.#209     // scala/collection/immutable/Map.forall:(Lscala/Function1;)Z
  #211 = Utf8               withMatcher
  #212 = Utf8               <init>
  #213 = Utf8               (Lcoursier/core/Module;)V
  #214 = NameAndType        #212:#213     // "<init>":(Lcoursier/core/Module;)V
  #215 = Methodref          #2.#214       // coursier/util/ModuleMatcher."<init>":(Lcoursier/core/Module;)V
  #216 = Utf8               toString
  #217 = Utf8               java/lang/StringBuilder
  #218 = Class              #217          // java/lang/StringBuilder
  #219 = Utf8               ModuleMatcher(
  #220 = String             #219          // ModuleMatcher(
  #221 = Utf8               (Ljava/lang/String;)V
  #222 = NameAndType        #212:#221     // "<init>":(Ljava/lang/String;)V
  #223 = Methodref          #218.#222     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #224 = Utf8               java/lang/String
  #225 = Class              #224          // java/lang/String
  #226 = Utf8               valueOf
  #227 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #228 = NameAndType        #226:#227     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #229 = Methodref          #225.#228     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #230 = Utf8               append
  #231 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #232 = NameAndType        #230:#231     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #233 = Methodref          #218.#232     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #234 = Utf8               )
  #235 = String             #234          // )
  #236 = NameAndType        #216:#80      // toString:()Ljava/lang/String;
  #237 = Methodref          #218.#236     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #238 = Utf8               b
  #239 = Utf8               Ljava/lang/StringBuilder;
  #240 = Utf8               canEqual
  #241 = Utf8               obj
  #242 = Utf8               Ljava/lang/Object;
  #243 = NameAndType        #240:#194     // canEqual:(Ljava/lang/Object;)Z
  #244 = Methodref          #2.#243       // coursier/util/ModuleMatcher.canEqual:(Ljava/lang/Object;)Z
  #245 = Utf8               other
  #246 = Utf8               hashCode
  #247 = Utf8               ()I
  #248 = Utf8               ModuleMatcher
  #249 = String             #248          // ModuleMatcher
  #250 = Utf8               scala/runtime/Statics
  #251 = Class              #250          // scala/runtime/Statics
  #252 = Utf8               anyHash
  #253 = Utf8               (Ljava/lang/Object;)I
  #254 = NameAndType        #252:#253     // anyHash:(Ljava/lang/Object;)I
  #255 = Methodref          #251.#254     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #256 = Utf8               code
  #257 = Utf8               I
  #258 = Utf8               tuple
  #259 = Utf8               ()Lscala/Tuple1;
  #260 = Utf8               ()Lscala/Tuple1<Lcoursier/core/Module;>;
  #261 = Utf8               scala/Tuple1
  #262 = Class              #261          // scala/Tuple1
  #263 = Utf8               (Ljava/lang/Object;)V
  #264 = NameAndType        #212:#263     // "<init>":(Ljava/lang/Object;)V
  #265 = Methodref          #262.#264     // scala/Tuple1."<init>":(Ljava/lang/Object;)V
  #266 = Utf8               productPrefix
  #267 = Utf8               productArity
  #268 = Utf8               productElement
  #269 = Utf8               (I)Ljava/lang/Object;
  #270 = Utf8               n
  #271 = Utf8               java/lang/IndexOutOfBoundsException
  #272 = Class              #271          // java/lang/IndexOutOfBoundsException
  #273 = Utf8               scala/runtime/BoxesRunTime
  #274 = Class              #273          // scala/runtime/BoxesRunTime
  #275 = Utf8               boxToInteger
  #276 = Utf8               (I)Ljava/lang/Integer;
  #277 = NameAndType        #275:#276     // boxToInteger:(I)Ljava/lang/Integer;
  #278 = Methodref          #274.#277     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #279 = Methodref          #4.#236       // java/lang/Object.toString:()Ljava/lang/String;
  #280 = Methodref          #272.#222     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #281 = Utf8               productElementName
  #282 = Utf8               (I)Ljava/lang/String;
  #283 = String             #24           // matcher
  #284 = Utf8               x$1
  #285 = Utf8               Ljava/lang/String;
  #286 = Utf8               $anonfun$matches$2
  #287 = Utf8               (Lscala/util/matching/Regex;Ljava/lang/String;)Z
  #288 = Utf8               p$1
  #289 = Utf8               x$2
  #290 = Utf8               $anonfun$matches$1
  #291 = Utf8               (Lcoursier/core/Module;Lscala/Tuple2;)Z
  #292 = Utf8               module$1
  #293 = Utf8               x0$1
  #294 = Utf8               scala/Tuple2
  #295 = Class              #294          // scala/Tuple2
  #296 = Utf8               _1
  #297 = Utf8               ()Ljava/lang/Object;
  #298 = NameAndType        #296:#297     // _1:()Ljava/lang/Object;
  #299 = Methodref          #295.#298     // scala/Tuple2._1:()Ljava/lang/Object;
  #300 = Utf8               _2
  #301 = NameAndType        #300:#297     // _2:()Ljava/lang/Object;
  #302 = Methodref          #295.#301     // scala/Tuple2._2:()Ljava/lang/Object;
  #303 = Utf8               get
  #304 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #305 = NameAndType        #303:#304     // get:(Ljava/lang/Object;)Lscala/Option;
  #306 = InterfaceMethodref #111.#305     // scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
  #307 = Utf8               $anonfun$matches$2$adapted
  #308 = Utf8               (Lscala/util/matching/Regex;Ljava/lang/String;)Ljava/lang/Object;
  #309 = NameAndType        #307:#308     // $anonfun$matches$2$adapted:(Lscala/util/matching/Regex;Ljava/lang/String;)Ljava/lang/Object;
  #310 = Methodref          #2.#309       // coursier/util/ModuleMatcher.$anonfun$matches$2$adapted:(Lscala/util/matching/Regex;Ljava/lang/String;)Ljava/lang/Object;
  #311 = MethodHandle       6:#310        // REF_invokeStatic coursier/util/ModuleMatcher.$anonfun$matches$2$adapted:(Lscala/util/matching/Regex;Ljava/lang/String;)Ljava/lang/Object;
  #312 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #313 = MethodType         #312          //  (Ljava/lang/String;)Ljava/lang/Object;
  #314 = Utf8               (Lscala/util/matching/Regex;)Lscala/Function1;
  #315 = NameAndType        #28:#314      // apply:(Lscala/util/matching/Regex;)Lscala/Function1;
  #316 = InvokeDynamic      #2:#315       // #2:apply:(Lscala/util/matching/Regex;)Lscala/Function1;
  #317 = Utf8               scala/Option
  #318 = Class              #317          // scala/Option
  #319 = Utf8               exists
  #320 = NameAndType        #319:#208     // exists:(Lscala/Function1;)Z
  #321 = Methodref          #318.#320     // scala/Option.exists:(Lscala/Function1;)Z
  #322 = Utf8               scala/MatchError
  #323 = Class              #322          // scala/MatchError
  #324 = Methodref          #323.#264     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #325 = Utf8               k
  #326 = Utf8               p
  #327 = Utf8               Lscala/Tuple2;
  #328 = Utf8               ()V
  #329 = NameAndType        #212:#328     // "<init>":()V
  #330 = Methodref          #4.#329       // java/lang/Object."<init>":()V
  #331 = Utf8               $init$
  #332 = Utf8               (Lscala/Product;)V
  #333 = NameAndType        #331:#332     // $init$:(Lscala/Product;)V
  #334 = InterfaceMethodref #6.#333       // scala/Product.$init$:(Lscala/Product;)V
  #335 = NameAndType        #290:#291     // $anonfun$matches$1:(Lcoursier/core/Module;Lscala/Tuple2;)Z
  #336 = Methodref          #2.#335       // coursier/util/ModuleMatcher.$anonfun$matches$1:(Lcoursier/core/Module;Lscala/Tuple2;)Z
  #337 = Utf8               boxToBoolean
  #338 = Utf8               (Z)Ljava/lang/Boolean;
  #339 = NameAndType        #337:#338     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #340 = Methodref          #274.#339     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #341 = NameAndType        #286:#287     // $anonfun$matches$2:(Lscala/util/matching/Regex;Ljava/lang/String;)Z
  #342 = Methodref          #2.#341       // coursier/util/ModuleMatcher.$anonfun$matches$2:(Lscala/util/matching/Regex;Ljava/lang/String;)Z
  #343 = Utf8               $deserializeLambda$
  #344 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #345 = Utf8               scala/runtime/LambdaDeserialize
  #346 = Class              #345          // scala/runtime/LambdaDeserialize
  #347 = Utf8               bootstrap
  #348 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #349 = NameAndType        #347:#348     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #350 = Methodref          #346.#349     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #351 = MethodHandle       6:#350        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #352 = Utf8               lambdaDeserialize
  #353 = NameAndType        #352:#344     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #354 = InvokeDynamic      #3:#353       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #355 = Utf8               Signature
  #356 = Utf8               Code
  #357 = Utf8               MethodParameters
  #358 = Utf8               LineNumberTable
  #359 = Utf8               LocalVariableTable
  #360 = Utf8               StackMapTable
  #361 = Utf8               InnerClasses
  #362 = Utf8               SourceFile
  #363 = Utf8               RuntimeVisibleAnnotations
  #364 = Utf8               BootstrapMethods
  #365 = Utf8               ScalaInlineInfo
  #366 = Utf8               ScalaSig
{
  private scala.util.matching.Regex orgPattern;
    descriptor: Lscala/util/matching/Regex;
    flags: (0x0002) ACC_PRIVATE

  private scala.util.matching.Regex namePattern;
    descriptor: Lscala/util/matching/Regex;
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Map<java.lang.String, scala.util.matching.Regex> attributesPattern;
    descriptor: Lscala/collection/immutable/Map;
    flags: (0x0002) ACC_PRIVATE
    Signature: #23                          // Lscala/collection/immutable/Map<Ljava/lang/String;Lscala/util/matching/Regex;>;

  private final coursier.core.Module matcher;
    descriptor: Lcoursier/core/Module;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static coursier.util.ModuleMatcher apply(coursier.core.Module);
    descriptor: (Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
         3: aload_0
         4: invokevirtual #37                 // Method coursier/util/ModuleMatcher$.apply:(Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
         7: areturn
    MethodParameters:
      Name                           Flags
      matcher                        final

  public static coursier.util.ModuleMatcher all();
    descriptor: ()Lcoursier/util/ModuleMatcher;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
         3: invokevirtual #41                 // Method coursier/util/ModuleMatcher$.all:()Lcoursier/util/ModuleMatcher;
         6: areturn

  public static scala.collection.immutable.Map<java.lang.String, java.lang.String> apply$default$3();
    descriptor: ()Lscala/collection/immutable/Map;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
         3: invokevirtual #46                 // Method coursier/util/ModuleMatcher$.apply$default$3:()Lscala/collection/immutable/Map;
         6: areturn
    Signature: #44                          // ()Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;

  public static coursier.util.ModuleMatcher apply(java.lang.String, java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.String>);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/util/ModuleMatcher;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #53                 // Method coursier/util/ModuleMatcher$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/util/ModuleMatcher;
         9: areturn
    Signature: #48                          // (Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;)Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      org                            final
      name                           final
      attributes                     final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #60                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/ModuleMatcher;
    Signature: #56                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #67                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/ModuleMatcher;
    Signature: #64                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public coursier.core.Module matcher();
    descriptor: ()Lcoursier/core/Module;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #70                 // Field matcher:Lcoursier/core/Module;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/ModuleMatcher;

  private scala.util.matching.Regex orgPattern$lzycompute();
    descriptor: ()Lscala/util/matching/Regex;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #74                 // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     49
        15: aload_0
        16: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
        19: aload_0
        20: invokevirtual #76                 // Method matcher:()Lcoursier/core/Module;
        23: invokevirtual #82                 // Method coursier/core/Module.organization:()Ljava/lang/String;
        26: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
        29: invokevirtual #86                 // Method coursier/util/ModuleMatcher$.coursier$util$ModuleMatcher$$blobToPattern$default$2:()Lscala/collection/mutable/StringBuilder;
        32: invokevirtual #90                 // Method coursier/util/ModuleMatcher$.coursier$util$ModuleMatcher$$blobToPattern:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/util/matching/Regex;
        35: putfield      #92                 // Field orgPattern:Lscala/util/matching/Regex;
        38: aload_0
        39: aload_0
        40: getfield      #74                 // Field bitmap$0:B
        43: iconst_1
        44: ior
        45: i2b
        46: putfield      #74                 // Field bitmap$0:B
        49: aload_1
        50: monitorexit
        51: goto          57
        54: aload_1
        55: monitorexit
        56: athrow
        57: aload_0
        58: getfield      #92                 // Field orgPattern:Lscala/util/matching/Regex;
        61: areturn
      Exception table:
         from    to  target type
             4    49    54   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 49
          locals = [ class coursier/util/ModuleMatcher ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lcoursier/util/ModuleMatcher;

  public scala.util.matching.Regex orgPattern();
    descriptor: ()Lscala/util/matching/Regex;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #74                 // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #96                 // Method orgPattern$lzycompute:()Lscala/util/matching/Regex;
        15: goto          22
        18: aload_0
        19: getfield      #92                 // Field orgPattern:Lscala/util/matching/Regex;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/util/matching/Regex ]
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/util/ModuleMatcher;

  private scala.util.matching.Regex namePattern$lzycompute();
    descriptor: ()Lscala/util/matching/Regex;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #74                 // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     49
        15: aload_0
        16: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
        19: aload_0
        20: invokevirtual #76                 // Method matcher:()Lcoursier/core/Module;
        23: invokevirtual #101                // Method coursier/core/Module.name:()Ljava/lang/String;
        26: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
        29: invokevirtual #86                 // Method coursier/util/ModuleMatcher$.coursier$util$ModuleMatcher$$blobToPattern$default$2:()Lscala/collection/mutable/StringBuilder;
        32: invokevirtual #90                 // Method coursier/util/ModuleMatcher$.coursier$util$ModuleMatcher$$blobToPattern:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/util/matching/Regex;
        35: putfield      #103                // Field namePattern:Lscala/util/matching/Regex;
        38: aload_0
        39: aload_0
        40: getfield      #74                 // Field bitmap$0:B
        43: iconst_2
        44: ior
        45: i2b
        46: putfield      #74                 // Field bitmap$0:B
        49: aload_1
        50: monitorexit
        51: goto          57
        54: aload_1
        55: monitorexit
        56: athrow
        57: aload_0
        58: getfield      #103                // Field namePattern:Lscala/util/matching/Regex;
        61: areturn
      Exception table:
         from    to  target type
             4    49    54   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 49
          locals = [ class coursier/util/ModuleMatcher ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lcoursier/util/ModuleMatcher;

  public scala.util.matching.Regex namePattern();
    descriptor: ()Lscala/util/matching/Regex;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #74                 // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #105                // Method namePattern$lzycompute:()Lscala/util/matching/Regex;
        15: goto          22
        18: aload_0
        19: getfield      #103                // Field namePattern:Lscala/util/matching/Regex;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/util/matching/Regex ]
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/util/ModuleMatcher;

  private scala.collection.immutable.Map<java.lang.String, scala.util.matching.Regex> attributesPattern$lzycompute();
    descriptor: ()Lscala/collection/immutable/Map;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #74                 // Field bitmap$0:B
         8: iconst_4
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     68
        15: aload_0
        16: aload_0
        17: invokevirtual #76                 // Method matcher:()Lcoursier/core/Module;
        20: invokevirtual #109                // Method coursier/core/Module.attributes:()Lscala/collection/immutable/Map;
        23: invokeinterface #115,  1          // InterfaceMethod scala/collection/immutable/Map.view:()Lscala/collection/MapView;
        28: invokedynamic #135,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        33: invokeinterface #141,  2          // InterfaceMethod scala/collection/MapView.mapValues:(Lscala/Function1;)Lscala/collection/MapView;
        38: invokeinterface #144,  1          // InterfaceMethod scala/collection/MapView.iterator:()Lscala/collection/Iterator;
        43: getstatic     #149                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
        46: invokevirtual #153                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
        49: invokeinterface #159,  2          // InterfaceMethod scala/collection/Iterator.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
        54: putfield      #161                // Field attributesPattern:Lscala/collection/immutable/Map;
        57: aload_0
        58: aload_0
        59: getfield      #74                 // Field bitmap$0:B
        62: iconst_4
        63: ior
        64: i2b
        65: putfield      #74                 // Field bitmap$0:B
        68: aload_1
        69: monitorexit
        70: goto          76
        73: aload_1
        74: monitorexit
        75: athrow
        76: aload_0
        77: getfield      #161                // Field attributesPattern:Lscala/collection/immutable/Map;
        80: areturn
      Exception table:
         from    to  target type
             4    68    73   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 68
          locals = [ class coursier/util/ModuleMatcher ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 18: 0
        line 18: 16
        line 21: 28
        line 23: 43
        line 18: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      81     0  this   Lcoursier/util/ModuleMatcher;
    Signature: #107                         // ()Lscala/collection/immutable/Map<Ljava/lang/String;Lscala/util/matching/Regex;>;

  public scala.collection.immutable.Map<java.lang.String, scala.util.matching.Regex> attributesPattern();
    descriptor: ()Lscala/collection/immutable/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #74                 // Field bitmap$0:B
         4: iconst_4
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #163                // Method attributesPattern$lzycompute:()Lscala/collection/immutable/Map;
        15: goto          22
        18: aload_0
        19: getfield      #161                // Field attributesPattern:Lscala/collection/immutable/Map;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Map ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/util/ModuleMatcher;
    Signature: #107                         // ()Lscala/collection/immutable/Map<Ljava/lang/String;Lscala/util/matching/Regex;>;

  public boolean matches(coursier.core.Module);
    descriptor: (Lcoursier/core/Module;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #168                // Method orgPattern:()Lscala/util/matching/Regex;
         4: invokevirtual #172                // Method scala/util/matching/Regex.pattern:()Ljava/util/regex/Pattern;
         7: aload_1
         8: invokevirtual #82                 // Method coursier/core/Module.organization:()Ljava/lang/String;
        11: invokevirtual #177                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
        14: invokevirtual #182                // Method java/util/regex/Matcher.matches:()Z
        17: ifeq          100
        20: aload_0
        21: invokevirtual #184                // Method namePattern:()Lscala/util/matching/Regex;
        24: invokevirtual #172                // Method scala/util/matching/Regex.pattern:()Ljava/util/regex/Pattern;
        27: aload_1
        28: invokevirtual #101                // Method coursier/core/Module.name:()Ljava/lang/String;
        31: invokevirtual #177                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
        34: invokevirtual #182                // Method java/util/regex/Matcher.matches:()Z
        37: ifeq          100
        40: aload_1
        41: invokevirtual #109                // Method coursier/core/Module.attributes:()Lscala/collection/immutable/Map;
        44: invokeinterface #188,  1          // InterfaceMethod scala/collection/immutable/Map.keySet:()Lscala/collection/immutable/Set;
        49: aload_0
        50: invokevirtual #190                // Method attributesPattern:()Lscala/collection/immutable/Map;
        53: invokeinterface #188,  1          // InterfaceMethod scala/collection/immutable/Map.keySet:()Lscala/collection/immutable/Set;
        58: astore_2
        59: dup
        60: ifnonnull     71
        63: pop
        64: aload_2
        65: ifnull        78
        68: goto          100
        71: aload_2
        72: invokevirtual #196                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        75: ifeq          100
        78: aload_0
        79: invokevirtual #190                // Method attributesPattern:()Lscala/collection/immutable/Map;
        82: aload_1
        83: invokedynamic #206,  0            // InvokeDynamic #1:apply:(Lcoursier/core/Module;)Lscala/Function1;
        88: invokeinterface #210,  2          // InterfaceMethod scala/collection/immutable/Map.forall:(Lscala/Function1;)Z
        93: ifeq          100
        96: iconst_1
        97: goto          101
       100: iconst_0
       101: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 71
          locals = [ class coursier/util/ModuleMatcher, class coursier/core/Module, class scala/collection/immutable/Set ]
          stack = [ class scala/collection/immutable/Set ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 21
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 26: 0
        line 27: 20
        line 28: 40
        line 29: 78
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     102     0  this   Lcoursier/util/ModuleMatcher;
            0     102     1 module   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      module                         final

  public coursier.util.ModuleMatcher withMatcher(coursier.core.Module);
    descriptor: (Lcoursier/core/Module;)Lcoursier/util/ModuleMatcher;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class coursier/util/ModuleMatcher
         3: dup
         4: aload_1
         5: invokespecial #215                // Method "<init>":(Lcoursier/core/Module;)V
         8: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/util/ModuleMatcher;
            0       9     1 matcher   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      matcher                        final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #218                // class java/lang/StringBuilder
         3: dup
         4: ldc           #220                // String ModuleMatcher(
         6: invokespecial #223                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: aload_1
        11: aload_0
        12: invokevirtual #76                 // Method matcher:()Lcoursier/core/Module;
        15: invokestatic  #229                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        18: invokevirtual #233                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: pop
        22: aload_1
        23: ldc           #235                // String )
        25: invokevirtual #233                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: invokevirtual #237                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        33: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      23     1     b   Ljava/lang/StringBuilder;
            0      34     0  this   Lcoursier/util/ModuleMatcher;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/util/ModuleMatcher
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/util/ModuleMatcher;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     58
         5: aload_0
         6: aload_1
         7: invokevirtual #244                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          62
        13: aload_1
        14: checkcast     #2                  // class coursier/util/ModuleMatcher
        17: astore_2
        18: iconst_1
        19: ifeq          54
        22: aload_0
        23: invokevirtual #76                 // Method matcher:()Lcoursier/core/Module;
        26: aload_2
        27: invokevirtual #76                 // Method matcher:()Lcoursier/core/Module;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          54
        43: aload_3
        44: invokevirtual #196                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          54
        50: iconst_1
        51: goto          55
        54: iconst_0
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/util/ModuleMatcher, class java/lang/Object, class coursier/util/ModuleMatcher, class coursier/core/Module ]
          stack = [ class coursier/core/Module ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      37     2 other   Lcoursier/util/ModuleMatcher;
            0      64     0  this   Lcoursier/util/ModuleMatcher;
            0      64     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc           #249                // String ModuleMatcher
         4: invokestatic  #255                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         7: iadd
         8: istore_1
         9: bipush        37
        11: iload_1
        12: imul
        13: aload_0
        14: invokevirtual #76                 // Method matcher:()Lcoursier/core/Module;
        17: invokestatic  #255                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        20: iadd
        21: istore_1
        22: bipush        37
        24: iload_1
        25: imul
        26: ireturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      17     1  code   I
            0      27     0  this   Lcoursier/util/ModuleMatcher;

  private scala.Tuple1<coursier.core.Module> tuple();
    descriptor: ()Lscala/Tuple1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #262                // class scala/Tuple1
         3: dup
         4: aload_0
         5: invokevirtual #76                 // Method matcher:()Lcoursier/core/Module;
         8: invokespecial #265                // Method scala/Tuple1."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/util/ModuleMatcher;
    Signature: #260                         // ()Lscala/Tuple1<Lcoursier/core/Module;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #249                // String ModuleMatcher
         2: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/util/ModuleMatcher;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/util/ModuleMatcher;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #76                 // Method matcher:()Lcoursier/core/Module;
        24: goto          42
        27: new           #272                // class java/lang/IndexOutOfBoundsException
        30: dup
        31: iload_2
        32: invokestatic  #278                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        35: invokevirtual #279                // Method java/lang/Object.toString:()Ljava/lang/String;
        38: invokespecial #280                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class coursier/core/Module ]
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/util/ModuleMatcher;
            0      43     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 26
            }
        20: ldc_w         #283                // String matcher
        23: goto          41
        26: new           #272                // class java/lang/IndexOutOfBoundsException
        29: dup
        30: iload_2
        31: invokestatic  #278                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        34: invokevirtual #279                // Method java/lang/Object.toString:()Ljava/lang/String;
        37: invokespecial #280                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        40: athrow
        41: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/util/ModuleMatcher;
            0      42     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.util.matching.Regex $anonfun$attributesPattern$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/matching/Regex;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
         3: aload_0
         4: getstatic     #35                 // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
         7: invokevirtual #86                 // Method coursier/util/ModuleMatcher$.coursier$util$ModuleMatcher$$blobToPattern$default$2:()Lscala/collection/mutable/StringBuilder;
        10: invokevirtual #90                 // Method coursier/util/ModuleMatcher$.coursier$util$ModuleMatcher$$blobToPattern:(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/util/matching/Regex;
        13: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final boolean $anonfun$matches$2(scala.util.matching.Regex, java.lang.String);
    descriptor: (Lscala/util/matching/Regex;Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #172                // Method scala/util/matching/Regex.pattern:()Ljava/util/regex/Pattern;
         4: aload_1
         5: invokevirtual #177                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
         8: invokevirtual #182                // Method java/util/regex/Matcher.matches:()Z
        11: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   p$1   Lscala/util/matching/Regex;
            0      12     1   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      p$1                            final
      x$2                            final

  public static final boolean $anonfun$matches$1(coursier.core.Module, scala.Tuple2);
    descriptor: (Lcoursier/core/Module;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        49
         6: aload_3
         7: invokevirtual #299                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #225                // class java/lang/String
        13: astore        4
        15: aload_3
        16: invokevirtual #302                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #98                 // class scala/util/matching/Regex
        22: astore        5
        24: aload_0
        25: invokevirtual #109                // Method coursier/core/Module.attributes:()Lscala/collection/immutable/Map;
        28: aload         4
        30: invokeinterface #306,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        35: aload         5
        37: invokedynamic #316,  0            // InvokeDynamic #2:apply:(Lscala/util/matching/Regex;)Lscala/Function1;
        42: invokevirtual #321                // Method scala/Option.exists:(Lscala/Function1;)Z
        45: istore_2
        46: goto          61
        49: goto          52
        52: new           #323                // class scala/MatchError
        55: dup
        56: aload_3
        57: invokespecial #324                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        60: athrow
        61: iload_2
        62: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 49
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/core/Module, class scala/Tuple2, int, class scala/Tuple2, class java/lang/String, class scala/util/matching/Regex ]
          stack = []
      LineNumberTable:
        line 29: 0
        line 30: 2
        line 31: 24
        line 30: 49
        line 29: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      34     4     k   Ljava/lang/String;
           24      25     5     p   Lscala/util/matching/Regex;
            0      63     0 module$1   Lcoursier/core/Module;
            0      63     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      module$1                       final
      x0$1                           final

  public coursier.util.ModuleMatcher(coursier.core.Module);
    descriptor: (Lcoursier/core/Module;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #70                 // Field matcher:Lcoursier/core/Module;
         5: aload_0
         6: invokespecial #330                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #334                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: return
      LineNumberTable:
        line 12: 0
        line 36: 5
        line 12: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/util/ModuleMatcher;
            0      14     1 matcher   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      matcher                        final

  public static final java.lang.Object $anonfun$matches$1$adapted(coursier.core.Module, scala.Tuple2);
    descriptor: (Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #336                // Method $anonfun$matches$1:(Lcoursier/core/Module;Lscala/Tuple2;)Z
         5: invokestatic  #340                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 module$1   Lcoursier/core/Module;
            0       9     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      module$1                       final
      x0$1                           final

  public static final java.lang.Object $anonfun$matches$2$adapted(scala.util.matching.Regex, java.lang.String);
    descriptor: (Lscala/util/matching/Regex;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #342                // Method $anonfun$matches$2:(Lscala/util/matching/Regex;Ljava/lang/String;)Z
         5: invokestatic  #340                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   p$1   Lscala/util/matching/Regex;
            0       9     1   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      p$1                            final
      x$2                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #354,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #17= #14 of #16;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "ModuleMatcher.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u001df\u0001\u0002\u000f\u001e\u0005\tB\u0001\u0002\u000f\u0001\u0003\u0006\u0004%\t!\u000f\u0005\t\u0001\u0002\u0011\t\u0011)A\u0005u!)\u0011\t\u0001C\u0001\u0005\"Aa\t\u0001EC\u0002\u0013\u0005q\t\u0003\u0005P\u0001!\u0015\r\u0011\"\u0001H\u0011!\u0001\u0006\u0001#b\u0001\n\u0003\t\u0006\"\u00022\u0001\t\u0003\u0019\u0007\"B5\u0001\t\u0003Q\u0007\"\u00027\u0001\t\u0003j\u0007\"B;\u0001\t\u00032\b\"\u0002?\u0001\t\u0003j\bBB@\u0001\t\u0003\n\t\u0001C\u0004\u0002\n\u0001!I!a\u0003\t\u000f\u0005M\u0001\u0001\"\u0011\u0002\u0016!9\u0011q\u0003\u0001\u0005B\u0005e\u0001bBA\u000e\u0001\u0011\u0005\u0013Q\u0004\u0005\b\u0003G\u0001A\u0011IA\u0013\u000f\u001d\tI#\bE\u0001\u0003W1a\u0001H\u000f\t\u0002\u00055\u0002BB!\u0014\t\u0003\tI\u0004C\u0004\u0002<M!\t!!\u0010\t\u0013\u0005m3#%A\u0005\u0002\u0005u\u0003bBA:\'\u0011\u0005\u0011Q\u000f\u0005\b\u0003o\u001aB\u0011BA=\u0011\u001d\tYd\u0005C\u0001\u0003\'C\u0011\"a&\u0014#\u0003%I!!\'\t\u0013\u0005u5#!A\u0005\n\u0005}%!D\'pIVdW-T1uG\",\'O\u0003\u0002\u001f?\u0005!Q\u000f^5m\u0015\u0005\u0001\u0013\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001M!\u0001aI\u0015-!\t!s%D\u0001&\u0015\u00051\u0013!B:dC2\f\u0017B\u0001\u0015&\u0005\u0019\te.\u001f*fMB\u0011AEK\u0005\u0003W\u0015\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002.k9\u0011af\r\b\u0003_Ij\u0011\u0001\r\u0006\u0003c\u0005\na\u0001\u0010:p_Rt\u0014\"\u0001\u0014\n\u0005Q*\u0013a\u00029bG.\fw-Z\u0005\u0003m]\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001N\u0013\u0002\u000f5\fGo\u00195feV\t!\b\u0005\u0002<}5\tAH\u0003\u0002>?\u0005!1m\u001c:f\u0013\tyDH\u0001\u0004N_\u0012,H.Z\u0001\t[\u0006$8\r[3sA\u00051A(\u001b8jiz\"\"aQ#\u0011\u0005\u0011\u0003Q\"A\u000f\t\u000ba\u001a\u0001\u0019\u0001\u001e\u0002\u0015=\u0014x\rU1ui\u0016\u0014h.F\u0001I!\tIU*D\u0001K\u0015\tYE*\u0001\u0005nCR\u001c\u0007.\u001b8h\u0015\tqR%\u0003\u0002O\u0015\n)!+Z4fq\u0006Ya.Y7f!\u0006$H/\u001a:o\u0003E\tG\u000f\u001e:jEV$Xm\u001d)biR,\'O\\\u000b\u0002%B!1\u000b\u0017.I\u001b\u0005!&BA+W\u0003%IW.\\;uC\ndWM\u0003\u0002XK\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\u0005e#&aA\'baB\u00111l\u0018\b\u00039v\u0003\"aL\u0013\n\u0005y+\u0013A\u0002)sK\u0012,g-\u0003\u0002aC\n11\u000b\u001e:j]\u001eT!AX\u0013\u0002\u000f5\fGo\u00195fgR\u0011Am\u001a\t\u0003I\u0015L!AZ\u0013\u0003\u000f\t{w\u000e\\3b]\")\u0001n\u0002a\u0001u\u00051Qn\u001c3vY\u0016\f1b^5uQ6\u000bGo\u00195feR\u00111i\u001b\u0005\u0006q!\u0001\rAO\u0001\ti>\u001cFO]5oOR\ta\u000e\u0005\u0002pi6\t\u0001O\u0003\u0002re\u0006!A.\u00198h\u0015\u0005\u0019\u0018\u0001\u00026bm\u0006L!\u0001\u00199\u0002\u0011\r\fg.R9vC2$\"\u0001Z<\t\u000baT\u0001\u0019A=\u0002\u0007=\u0014\'\u000e\u0005\u0002%u&\u001110\n\u0002\u0004\u0003:L\u0018AB3rk\u0006d7\u000f\u0006\u0002e}\")\u0001p\u0003a\u0001s\u0006A\u0001.Y:i\u0007>$W\r\u0006\u0002\u0002\u0004A\u0019A%!\u0002\n\u0007\u0005\u001dQEA\u0002J]R\fQ\u0001^;qY\u0016,\"!!\u0004\u0011\t\u0011\nyAO\u0005\u0004\u0003#)#A\u0002+va2,\u0017\'A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0002]\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u00111A\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\rI\u0018q\u0004\u0005\b\u0003C\u0001\u0002\u0019AA\u0002\u0003\u0005q\u0017A\u00059s_\u0012,8\r^#mK6,g\u000e\u001e(b[\u0016$2A\\A\u0014\u0011\u001d\t\t#\u0005a\u0001\u0003\u0007\tQ\"T8ek2,W*\u0019;dQ\u0016\u0014\bC\u0001#\u0014\'\u0011\u00192%a\f\u0011\t\u0005E\u0012qG\u0007\u0003\u0003gQ1!!\u000es\u0003\tIw.C\u00027\u0003g!\"!a\u000b\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u000f\r\u000by$!\u0013\u0002T!9\u0011\u0011I\u000bA\u0002\u0005\r\u0013aA8sOB\u00191(!\u0012\n\u0007\u0005\u001dCH\u0001\u0007Pe\u001e\fg.\u001b>bi&|g\u000eC\u0004\u0002LU\u0001\r!!\u0014\u0002\t9\fW.\u001a\t\u0004w\u0005=\u0013bAA)y\tQQj\u001c3vY\u0016t\u0015-\\3\t\u0013\u0005US\u0003%AA\u0002\u0005]\u0013AC1uiJL\'-\u001e;fgB)1,!\u0017[5&\u0011\u0011,Y\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%gU\u0011\u0011q\f\u0016\u0005\u0003/\n\tg\u000b\u0002\u0002dA!\u0011QMA8\u001b\t\t9G\u0003\u0003\u0002j\u0005-\u0014!C;oG\",7m[3e\u0015\r\ti\'J\u0001\u000bC:tw\u000e^1uS>t\u0017\u0002BA9\u0003O\u0012\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u0003\r\tG\u000e\\\u000b\u0002\u0007\u0006i!\r\\8c)>\u0004\u0016\r\u001e;fe:$R\u0001SA>\u0003\u007fBa!! \u0019\u0001\u0004Q\u0016!A:\t\u0013\u0005\u0005\u0005\u0004%AA\u0002\u0005\r\u0015!\u00012\u0011\u00075\n))C\u0002\u0002\b^\u0012Qb\u0015;sS:<\')^5mI\u0016\u0014\bf\u0001\r\u0002\fB!\u0011QRAH\u001b\t\tY\'\u0003\u0003\u0002\u0012\u0006-$a\u0002;bS2\u0014Xm\u0019\u000b\u0004\u0007\u0006U\u0005\"\u0002\u001d\u001a\u0001\u0004Q\u0014a\u00062m_\n$v\u000eU1ui\u0016\u0014h\u000e\n3fM\u0006,H\u000e\u001e\u00133+\t\tYJ\u000b\u0003\u0002\u0004\u0006\u0005\u0014\u0001D<sSR,\'+\u001a9mC\u000e,GCAAQ!\ry\u00171U\u0005\u0004\u0003K\u0003(AB(cU\u0016\u001cG\u000f"
    )
BootstrapMethods:
  0: #132 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #117 (Ljava/lang/Object;)Ljava/lang/Object;
      #122 REF_invokeStatic coursier/util/ModuleMatcher.$anonfun$attributesPattern$1:(Ljava/lang/String;)Lscala/util/matching/Regex;
      #123 (Ljava/lang/String;)Lscala/util/matching/Regex;
      #124 5
      #125 1
      #123 (Ljava/lang/String;)Lscala/util/matching/Regex;
  1: #132 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #117 (Ljava/lang/Object;)Ljava/lang/Object;
      #201 REF_invokeStatic coursier/util/ModuleMatcher.$anonfun$matches$1$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
      #203 (Lscala/Tuple2;)Ljava/lang/Object;
      #124 5
      #125 1
      #203 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #132 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #117 (Ljava/lang/Object;)Ljava/lang/Object;
      #311 REF_invokeStatic coursier/util/ModuleMatcher.$anonfun$matches$2$adapted:(Lscala/util/matching/Regex;Ljava/lang/String;)Ljava/lang/Object;
      #313 (Ljava/lang/String;)Ljava/lang/Object;
      #124 5
      #125 1
      #313 (Ljava/lang/String;)Ljava/lang/Object;
  3: #351 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #122 REF_invokeStatic coursier/util/ModuleMatcher.$anonfun$attributesPattern$1:(Ljava/lang/String;)Lscala/util/matching/Regex;
      #201 REF_invokeStatic coursier/util/ModuleMatcher.$anonfun$matches$1$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
      #311 REF_invokeStatic coursier/util/ModuleMatcher.$anonfun$matches$2$adapted:(Lscala/util/matching/Regex;Ljava/lang/String;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 01 00 1A 00 76 00 77 01 01 22 01 23 01 00 C3
   00 C4 01 01 1E 01 1F 01 01 33 01 34 01 00 D4 00
   D5 01 00 15 00 2B 01 00 6A 00 2B 01 00 F0 00 C0
   01 00 BF 00 C0 01 00 F6 00 F7 01 00 18 00 44 01
   00 A4 00 A5 01 00 14 00 48 01 00 63 00 48 01 00
   12 00 48 01 00 47 00 48 01 01 0B 00 F7 01 01 0C
   01 0D 01 01 19 01 1A 01 00 3F 00 37 01 00 36 00
   37 01 01 0A 00 50 01 00 D8 00 50 01 01 02 01 03
   01 00 D3 00 1D 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
