Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/output/ChunkedWriter.class
  Last modified May 29, 2022; size 1159 bytes
  SHA-256 checksum 4bde28863a76877b29b330aa4ea8bfa22d31fc591b70af7bd1d6ada17cefce71
  Compiled from "ChunkedWriter.java"
public class org.apache.commons.io.output.ChunkedWriter extends java.io.FilterWriter
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #5                          // org/apache/commons/io/output/ChunkedWriter
  super_class: #10                        // java/io/FilterWriter
  interfaces: 0, fields: 2, methods: 3, attributes: 1
Constant pool:
   #1 = Methodref          #10.#42        // java/io/FilterWriter."<init>":(Ljava/io/Writer;)V
   #2 = Class              #43            // java/lang/IllegalArgumentException
   #3 = Methodref          #2.#44         // java/lang/IllegalArgumentException."<init>":()V
   #4 = Fieldref           #5.#45         // org/apache/commons/io/output/ChunkedWriter.chunkSize:I
   #5 = Class              #46            // org/apache/commons/io/output/ChunkedWriter
   #6 = Methodref          #5.#47         // org/apache/commons/io/output/ChunkedWriter."<init>":(Ljava/io/Writer;I)V
   #7 = Methodref          #48.#49        // java/lang/Math.min:(II)I
   #8 = Fieldref           #5.#50         // org/apache/commons/io/output/ChunkedWriter.out:Ljava/io/Writer;
   #9 = Methodref          #51.#52        // java/io/Writer.write:([CII)V
  #10 = Class              #53            // java/io/FilterWriter
  #11 = Utf8               DEFAULT_CHUNK_SIZE
  #12 = Utf8               I
  #13 = Utf8               ConstantValue
  #14 = Integer            4096
  #15 = Utf8               chunkSize
  #16 = Utf8               <init>
  #17 = Utf8               (Ljava/io/Writer;I)V
  #18 = Utf8               Code
  #19 = Utf8               LineNumberTable
  #20 = Utf8               LocalVariableTable
  #21 = Utf8               this
  #22 = Utf8               Lorg/apache/commons/io/output/ChunkedWriter;
  #23 = Utf8               writer
  #24 = Utf8               Ljava/io/Writer;
  #25 = Utf8               StackMapTable
  #26 = Class              #46            // org/apache/commons/io/output/ChunkedWriter
  #27 = Class              #54            // java/io/Writer
  #28 = Utf8               (Ljava/io/Writer;)V
  #29 = Utf8               write
  #30 = Utf8               ([CII)V
  #31 = Utf8               chunk
  #32 = Utf8               data
  #33 = Utf8               [C
  #34 = Utf8               srcOffset
  #35 = Utf8               length
  #36 = Utf8               bytes
  #37 = Utf8               dstOffset
  #38 = Utf8               Exceptions
  #39 = Class              #55            // java/io/IOException
  #40 = Utf8               SourceFile
  #41 = Utf8               ChunkedWriter.java
  #42 = NameAndType        #16:#28        // "<init>":(Ljava/io/Writer;)V
  #43 = Utf8               java/lang/IllegalArgumentException
  #44 = NameAndType        #16:#56        // "<init>":()V
  #45 = NameAndType        #15:#12        // chunkSize:I
  #46 = Utf8               org/apache/commons/io/output/ChunkedWriter
  #47 = NameAndType        #16:#17        // "<init>":(Ljava/io/Writer;I)V
  #48 = Class              #57            // java/lang/Math
  #49 = NameAndType        #58:#59        // min:(II)I
  #50 = NameAndType        #60:#24        // out:Ljava/io/Writer;
  #51 = Class              #54            // java/io/Writer
  #52 = NameAndType        #29:#30        // write:([CII)V
  #53 = Utf8               java/io/FilterWriter
  #54 = Utf8               java/io/Writer
  #55 = Utf8               java/io/IOException
  #56 = Utf8               ()V
  #57 = Utf8               java/lang/Math
  #58 = Utf8               min
  #59 = Utf8               (II)I
  #60 = Utf8               out
{
  private static final int DEFAULT_CHUNK_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 4096

  private final int chunkSize;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.output.ChunkedWriter(java.io.Writer, int);
    descriptor: (Ljava/io/Writer;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokespecial #1                  // Method java/io/FilterWriter."<init>":(Ljava/io/Writer;)V
         5: iload_2
         6: ifgt          17
         9: new           #2                  // class java/lang/IllegalArgumentException
        12: dup
        13: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":()V
        16: athrow
        17: aload_0
        18: iload_2
        19: putfield      #4                  // Field chunkSize:I
        22: return
      LineNumberTable:
        line 50: 0
        line 51: 5
        line 52: 9
        line 54: 17
        line 55: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/apache/commons/io/output/ChunkedWriter;
            0      23     1 writer   Ljava/io/Writer;
            0      23     2 chunkSize   I
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class org/apache/commons/io/output/ChunkedWriter, class java/io/Writer, int ]
          stack = []

  public org.apache.commons.io.output.ChunkedWriter(java.io.Writer);
    descriptor: (Ljava/io/Writer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: sipush        4096
         5: invokespecial #6                  // Method "<init>":(Ljava/io/Writer;I)V
         8: return
      LineNumberTable:
        line 62: 0
        line 63: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/output/ChunkedWriter;
            0       9     1 writer   Ljava/io/Writer;

  public void write(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=4
         0: iload_3
         1: istore        4
         3: iload_2
         4: istore        5
         6: iload         4
         8: ifle          51
        11: iload         4
        13: aload_0
        14: getfield      #4                  // Field chunkSize:I
        17: invokestatic  #7                  // Method java/lang/Math.min:(II)I
        20: istore        6
        22: aload_0
        23: getfield      #8                  // Field out:Ljava/io/Writer;
        26: aload_1
        27: iload         5
        29: iload         6
        31: invokevirtual #9                  // Method java/io/Writer.write:([CII)V
        34: iload         4
        36: iload         6
        38: isub
        39: istore        4
        41: iload         5
        43: iload         6
        45: iadd
        46: istore        5
        48: goto          6
        51: return
      LineNumberTable:
        line 75: 0
        line 76: 3
        line 77: 6
        line 78: 11
        line 79: 22
        line 80: 34
        line 81: 41
        line 82: 48
        line 83: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      26     6 chunk   I
            0      52     0  this   Lorg/apache/commons/io/output/ChunkedWriter;
            0      52     1  data   [C
            0      52     2 srcOffset   I
            0      52     3 length   I
            3      49     4 bytes   I
            6      46     5 dstOffset   I
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 6
          locals = [ int, int ]
        frame_type = 44 /* same */
    Exceptions:
      throws java.io.IOException
}
SourceFile: "ChunkedWriter.java"
