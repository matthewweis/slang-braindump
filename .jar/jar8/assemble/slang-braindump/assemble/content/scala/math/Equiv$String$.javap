Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/math/Equiv$String$.class
  Last modified May 29, 2022; size 1244 bytes
  SHA-256 checksum 42d2cde34a4b14bbf8fbe5a832f0c4ef230bbb3ce312ad6dd956fd2ef169860f
  Compiled from "Equiv.scala"
public class scala.math.Equiv$String$ extends java.lang.Object implements scala.math.Equiv<java.lang.String>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/math/Equiv$String$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 5, attributes: 5
Constant pool:
   #1 = Utf8               scala/math/Equiv$String$
   #2 = Class              #1             // scala/math/Equiv$String$
   #3 = Utf8               Ljava/lang/Object;Lscala/math/Equiv<Ljava/lang/String;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               scala/math/Equiv
   #7 = Class              #6             // scala/math/Equiv
   #8 = Utf8               Equiv.scala
   #9 = Utf8               String$
  #10 = Utf8               MODULE$
  #11 = Utf8               Lscala/math/Equiv$String$;
  #12 = Utf8               <clinit>
  #13 = Utf8               ()V
  #14 = Utf8               <init>
  #15 = NameAndType        #14:#13        // "<init>":()V
  #16 = Methodref          #2.#15         // scala/math/Equiv$String$."<init>":()V
  #17 = NameAndType        #10:#11        // MODULE$:Lscala/math/Equiv$String$;
  #18 = Fieldref           #2.#17         // scala/math/Equiv$String$.MODULE$:Lscala/math/Equiv$String$;
  #19 = Utf8               equiv
  #20 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
  #21 = Utf8               x
  #22 = Utf8               y
  #23 = Utf8               equals
  #24 = Utf8               (Ljava/lang/Object;)Z
  #25 = NameAndType        #23:#24        // equals:(Ljava/lang/Object;)Z
  #26 = Methodref          #5.#25         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #27 = Utf8               this
  #28 = Utf8               Ljava/lang/String;
  #29 = Utf8               java/lang/String
  #30 = Class              #29            // java/lang/String
  #31 = Utf8               writeReplace
  #32 = Utf8               ()Ljava/lang/Object;
  #33 = Utf8               scala/runtime/ModuleSerializationProxy
  #34 = Class              #33            // scala/runtime/ModuleSerializationProxy
  #35 = Utf8               (Ljava/lang/Class;)V
  #36 = NameAndType        #14:#35        // "<init>":(Ljava/lang/Class;)V
  #37 = Methodref          #34.#36        // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #38 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #39 = NameAndType        #19:#20        // equiv:(Ljava/lang/String;Ljava/lang/String;)Z
  #40 = Methodref          #2.#39         // scala/math/Equiv$String$.equiv:(Ljava/lang/String;Ljava/lang/String;)Z
  #41 = Utf8               Ljava/lang/Object;
  #42 = Methodref          #5.#15         // java/lang/Object."<init>":()V
  #43 = Utf8               Code
  #44 = Utf8               LineNumberTable
  #45 = Utf8               StackMapTable
  #46 = Utf8               LocalVariableTable
  #47 = Utf8               MethodParameters
  #48 = Utf8               InnerClasses
  #49 = Utf8               Signature
  #50 = Utf8               SourceFile
  #51 = Utf8               ScalaInlineInfo
  #52 = Utf8               Scala
{
  public static final scala.math.Equiv$String$ MODULE$;
    descriptor: Lscala/math/Equiv$String$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/math/Equiv$String$
         3: dup
         4: invokespecial #16                 // Method "<init>":()V
         7: putstatic     #18                 // Field MODULE$:Lscala/math/Equiv$String$;
        10: return
      LineNumberTable:
        line 239: 0

  public boolean equiv(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: dup
         2: ifnonnull     13
         5: pop
         6: aload_2
         7: ifnull        20
        10: goto          22
        13: aload_2
        14: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        17: ifeq          22
        20: iconst_1
        21: ireturn
        22: iconst_0
        23: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 240: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lscala/math/Equiv$String$;
            0      24     1     x   Ljava/lang/String;
            0      24     2     y   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #34                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class scala/math/Equiv$String$
         6: invokespecial #37                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/Equiv$String$;

  public boolean equiv(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #30                 // class java/lang/String
         5: aload_2
         6: checkcast     #30                 // class java/lang/String
         9: invokevirtual #40                 // Method equiv:(Ljava/lang/String;Ljava/lang/String;)Z
        12: ireturn
      LineNumberTable:
        line 239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Equiv$String$;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Equiv$String$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #42                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$String$;
}
InnerClasses:
  public static #9= #2 of #7;             // String$=class scala/math/Equiv$String$ of class scala/math/Equiv
Signature: #3                           // Ljava/lang/Object;Lscala/math/Equiv<Ljava/lang/String;>;
SourceFile: "Equiv.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 01 00 04 00 0E 00 0D 01 00 13 00 26 01 00 13
   00 14 01 00 1F 00 20 01
  Scala: length = 0x0 (unknown attribute)

