Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/HashSet.class
  Last modified May 29, 2022; size 14114 bytes
  SHA-256 checksum 991e3b2e18de33fbec7bb32562f654b120f82bce67c60ec983337a6ce7d18ea5
  Compiled from "HashSet.scala"
public final class org.sireum.HashSet<T extends java.lang.Object> extends java.lang.Object implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/HashSet
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 4, methods: 44, attributes: 7
Constant pool:
    #1 = Utf8               org/sireum/HashSet
    #2 = Class              #1            // org/sireum/HashSet
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/DatatypeSig
    #7 = Class              #6            // org/sireum/DatatypeSig
    #8 = Utf8               HashSet.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\t=r!B\u0013\'\u0011\u0003Yc!B\u0017\'\u0011\u0003q\u0003\"B\u001b\u0002\t\u00031\u0004\"B\u001c\u0002\t\u0003A\u0004bBAr\u0003\u0011\u0005\u0011Q\u001d\u0005\b\u0003_\tA\u0011AA{\u0011\u0019y\u0017\u0001\"\u0001\u0003\f!9!\u0011D\u0001\u0005\u0002\tma\u0001B\u0017\'\u0005mB\u0001\u0002\u0011\u0005\u0003\u0002\u0003\u0006I!\u0011\u0005\u0006k!!\tA\u0015\u0005\u0007+\"\u0001\u000b\u0011B!\t\u000bYCA\u0011A,\t\u000baCA\u0011A,\t\u000beCA\u0011\t.\t\u0011\rD\u0001R1A\u0005B\u0011DQ\u0001\u001b\u0005\u0005B%DQa\u001c\u0005\u0005\u0002ADqA\u001d\u0005\u0012\u0002\u0013\u00051\u000f\u0003\u0005\u007f\u0011!\u0015\r\u0011\"\u0011\u0000\u0011\u001d\ty\u0002\u0003C\u0001\u0003CAq!a\f\t\t\u0003\t\t\u0004C\u0004\u0002H!!\t!!\u0013\t\u000f\u0005=\u0003\u0002\"\u0001\u0002R!9\u0011q\f\u0005\u0005\u0002\u0005\u0005\u0004bBA4\u0011\u0011\u0005\u0011\u0011\u000e\u0005\b\u0003cBA\u0011AA:\u0011\u001d\tI\b\u0003C\u0001\u0003wBq!!!\t\t\u0003\t\u0019\tC\u0004\u0002\n\"!\t!a#\t\u000f\u0005E\u0005\u0002\"\u0001\u0002\u0014\"9\u0011\u0011\u0014\u0005\u0005B\u0005m\u0005bBAS\u0011\u0011\u0005\u0011q\u0015\u0005\b\u0003WCA\u0011AAT\u0011\u001d\ty\u000b\u0003C\u0001\u00037Cq!a-\t\t\u0003\t)\fC\u0004\u0002L\"!\t%!4\u0002\u000f!\u000b7\u000f[*fi*\u0011q\u0005K\u0001\u0007g&\u0014X-^7\u000b\u0003%\n1a\u001c:h\u0007\u0001\u0001\"\u0001L\u0001\u000e\u0003\u0019\u0012q\u0001S1tQN+Go\u0005\u0002\u0002_A\u0011\u0001gM\u0007\u0002c)\t!\'A\u0003tG\u0006d\u0017-\u0003\u00025c\t1\u0011I\\=SK\u001a\fa\u0001P5oSRtD#A\u0016\u0002\u000b\u0015l\u0007\u000f^=\u0016\u0007e\ny.F\u0001;!\u0011a\u0003\"!8\u0016\u0005q25c\u0001\u00050{A\u0011AFP\u0005\u0003\u007f\u0019\u00121\u0002R1uCRL\b/Z*jO\u0006)qlX7baB!AF\u0011#P\u0013\t\u0019eEA\u0004ICNDW*\u00199\u0011\u0005\u00153E\u0002\u0001\u0003\u0006\u000f\"\u0011\r\u0001\u0013\u0002\u0002)F\u0011\u0011\n\u0014\t\u0003a)K!aS\u0019\u0003\u000f9{G\u000f[5oOB\u0011\u0001\'T\u0005\u0003\u001dF\u00121!\u00118z!\ta\u0003+\u0003\u0002RM\t\t!\t\u0006\u0002T)B\u0019A\u0006\u0003#\t\u000b\u0001S\u0001\u0019A!\u0002\t}k\u0017\r]\u0001\u0004[\u0006\u0004X#A!\u0002\r\u001d,G/T1q\u0003!!xn\u0015;sS:<G#A.\u0011\u0005q\u000bW\"A/\u000b\u0005y{\u0016\u0001\u00027b]\u001eT\u0011\u0001Y\u0001\u0005U\u00064\u0018-\u0003\u0002c;\n11\u000b\u001e:j]\u001e\f\u0001\u0002[1tQ\u000e{G-Z\u000b\u0002KB\u0011\u0001GZ\u0005\u0003OF\u00121!\u00138u\u0003\u0019)\u0017/^1mgR\u0011!.\u001c\t\u0003a-L!\u0001\\\u0019\u0003\u000f\t{w\u000e\\3b]\")a\u000e\u0005a\u0001\u0019\u0006\tq.A\u0003baBd\u0017\u0010\u0006\u0002Tc\"9a+\u0005I\u0001\u0002\u0004\t\u0015aD1qa2LH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0003QT#!Q;,\u0003Y\u0004\"a\u001e?\u000e\u0003aT!!\u001f>\u0002\u0013Ut7\r[3dW\u0016$\'BA>2\u0003)\tgN\\8uCRLwN\\\u0005\u0003{b\u0014\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u0003!!3m\u001c8uK:$XCAA\u0001!\u0019\t\u0019!a\u0005\u0002\u001a9!\u0011QAA\b\u001d\u0011\t9!!\u0004\u000e\u0005\u0005%!bAA\u0006U\u00051AH]8pizJ\u0011AM\u0005\u0004\u0003#\t\u0014a\u00029bG.\fw-Z\u0005\u0005\u0003+\t9BA\u0002TKFT1!!\u00052!\u0015\u0001\u00141D.M\u0013\r\ti\"\r\u0002\u0007)V\u0004H.\u001a\u001a\u0002\u000b\u0011\u0002H.^:\u0015\u0007M\u000b\u0019\u0003\u0003\u0004\u0002&Q\u0001\r\u0001R\u0001\u0002K\"\u001aA#!\u000b\u0011\u00071\nY#C\u0002\u0002.\u0019\u0012A\u0001];sK\u0006QA\u0005\u001d7vg\u0012\u0002H.^:\u0016\t\u0005M\u0012\u0011\t\u000b\u0004\'\u0006U\u0002bBA\u001c+\u0001\u0007\u0011\u0011H\u0001\u0003SN\u0004b\u0001LA\u001e\u0003\u007f!\u0015bAA\u001fM\t\u0011\u0011j\u0015\t\u0004\u000b\u0006\u0005CABA\"+\t\u0007\u0001JA\u0001JQ\r)\u0012\u0011F\u0001\u0007I5Lg.^:\u0015\u0007M\u000bY\u0005\u0003\u0004\u0002&Y\u0001\r\u0001\u0012\u0015\u0004-\u0005%\u0012\u0001\u0004\u0013nS:,8\u000fJ7j]V\u001cX\u0003BA*\u00037\"2aUA+\u0011\u001d\t9d\u0006a\u0001\u0003/\u0002b\u0001LA\u001e\u00033\"\u0005cA#\u0002\\\u00111\u00111I\fC\u0002!C3aFA\u0015\u0003!\u0019wN\u001c;bS:\u001cHcA(\u0002d!1\u0011Q\u0005\rA\u0002\u0011C3\u0001GA\u0015\u0003\u0015)h.[8o)\r\u0019\u00161\u000e\u0005\u0007\u0003[J\u0002\u0019A*\u0002\u000b=$\b.\u001a:)\u0007e\tI#\u0001\u0004%kJ\u0012$\'\u0011\u000b\u0004\'\u0006U\u0004BBA75\u0001\u00071\u000bK\u0002\u001b\u0003S\t\u0011\"\u001b8uKJ\u001cXm\u0019;\u0015\u0007M\u000bi\b\u0003\u0004\u0002nm\u0001\ra\u0015\u0015\u00047\u0005%\u0012A\u0002\u0013veI\u0012\u0014\bF\u0002T\u0003\u000bCa!!\u001c\u001d\u0001\u0004\u0019\u0006f\u0001\u000f\u0002*\u00059AEY:mCNDGcA*\u0002\u000e\"1\u0011QN\u000fA\u0002MC3!HA\u0015\u0003\u001dI7/R9vC2$2aTAK\u0011\u0019\tiG\ba\u0001\'\"\u001aa$!\u000b\u0002\t!\f7\u000f[\u000b\u0003\u0003;\u00032\u0001LAP\u0013\r\t\tK\n\u0002\u00025\"\u001aq$!\u000b\u0002\u000f%\u001cX)\u001c9usV\tq\nK\u0002!\u0003S\t\u0001B\\8o\u000b6\u0004H/\u001f\u0015\u0004C\u0005%\u0012\u0001B:ju\u0016D3AIA\u0015\u0003!)G.Z7f]R\u001cXCAA\\!\u0015\tI,!0E\u001d\ra\u00131X\u0005\u0004\u0003#1\u0013\u0002BA`\u0003\u0003\u00141!S*[\u0013\u0011\t\u0019-!2\u0003\u0019A\u000b7m[1hKR\u0013\u0018-\u001b;\u000b\u0007\u0005\u001dg%A\u0005%S:$XM\u001d8bY\"\u001a1%!\u000b\u0002\rM$(/\u001b8h+\t\ty\rE\u0002-\u0003#L!A\u0019\u0014)\u0007\u0011\nI\u0003K\u0002\t\u0003/\u00042\u0001LAm\u0013\r\tYN\n\u0002\tI\u0006$\u0018\r^=qKB\u0019Q)a8\u0005\u000b\u001d\u001b!\u0019\u0001%)\u0007\r\tI#A\u0005f[B$\u00180\u00138jiV!\u0011q]Aw)\u0011\tI/a<\u0011\t1B\u00111\u001e\t\u0004\u000b\u00065H!B$\u0005\u0005\u0004A\u0005bBAy\t\u0001\u0007\u0011QT\u0001\u0010S:LG/[1m\u0007\u0006\u0004\u0018mY5us\"\u001aA!!\u000b\u0016\r\u0005](qAA\u007f)\u0011\tI0a@\u0011\t1B\u00111 \t\u0004\u000b\u0006uH!B$\u0006\u0005\u0004A\u0005b\u0002B\u0001\u000b\u0001\u0007!1A\u0001\u0002gB9A&a\u000f\u0003\u0006\u0005m\bcA#\u0003\b\u00111\u00111I\u0003C\u0002!C3!BA\u0015+\u0011\u0011iAa\u0005\u0015\t\t=!Q\u0003\t\u0005Y!\u0011\t\u0002E\u0002F\u0005\'!Qa\u0012\u0004C\u0002!CaA\u0016\u0004A\u0002\t]\u0001#\u0002\u0017C\u0005#y\u0015aB;oCB\u0004H._\u000b\u0005\u0005;\u0011I\u0003\u0006\u0003\u0003 \t-\u0002#\u0002\u0019\u0003\"\t\u0015\u0012b\u0001B\u0012c\t!1k\\7f!\u0015a#Ia\nP!\r)%\u0011\u0006\u0003\u0006\u000f\u001e\u0011\r\u0001\u0013\u0005\u0007]\u001e\u0001\rA!\f\u0011\t1B!q\u0005
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               org/sireum/ST$Any
   #18 = Class              #17           // org/sireum/ST$Any
   #19 = Utf8               org/sireum/ST
   #20 = Class              #19           // org/sireum/ST
   #21 = Utf8               Any
   #22 = Utf8               org/sireum/ST$Any$
   #23 = Class              #22           // org/sireum/ST$Any$
   #24 = Utf8               Any$
   #25 = Utf8               org/sireum/ST$Arg
   #26 = Class              #25           // org/sireum/ST$Arg
   #27 = Utf8               Arg
   #28 = Utf8               org/sireum/Z$$String$
   #29 = Class              #28           // org/sireum/Z$$String$
   #30 = Utf8               org/sireum/Z
   #31 = Class              #30           // org/sireum/Z
   #32 = Utf8               $String$
   #33 = Utf8               org/sireum/package$$Arrow$
   #34 = Class              #33           // org/sireum/package$$Arrow$
   #35 = Utf8               org/sireum/package
   #36 = Class              #35           // org/sireum/package
   #37 = Utf8               $Arrow$
   #38 = Utf8               hashCode
   #39 = Utf8               I
   #40 = Utf8               $content
   #41 = Utf8               Lscala/collection/immutable/Seq;
   #42 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #43 = Utf8               _map
   #44 = Utf8               Lorg/sireum/HashMap;
   #45 = Utf8               Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;
   #46 = Utf8               bitmap$0
   #47 = Utf8               B
   #48 = Utf8               unapply
   #49 = Utf8               (Lorg/sireum/HashSet;)Lscala/Some;
   #50 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/HashSet<TT;>;)Lscala/Some<Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;>;
   #51 = Utf8               o
   #52 = Utf8               org/sireum/HashSet$
   #53 = Class              #52           // org/sireum/HashSet$
   #54 = Utf8               MODULE$
   #55 = Utf8               Lorg/sireum/HashSet$;
   #56 = NameAndType        #54:#55       // MODULE$:Lorg/sireum/HashSet$;
   #57 = Fieldref           #53.#56       // org/sireum/HashSet$.MODULE$:Lorg/sireum/HashSet$;
   #58 = NameAndType        #48:#49       // unapply:(Lorg/sireum/HashSet;)Lscala/Some;
   #59 = Methodref          #53.#58       // org/sireum/HashSet$.unapply:(Lorg/sireum/HashSet;)Lscala/Some;
   #60 = Utf8               Lorg/sireum/HashSet;
   #61 = Utf8               emptyInit
   #62 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashSet;
   #63 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashSet<TT;>;
   #64 = Utf8               initialCapacity
   #65 = NameAndType        #61:#62       // emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSet;
   #66 = Methodref          #53.#65       // org/sireum/HashSet$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSet;
   #67 = Utf8               Lorg/sireum/Z;
   #68 = Utf8               empty
   #69 = Utf8               ()Lorg/sireum/HashSet;
   #70 = Utf8               <T:Ljava/lang/Object;>()Lorg/sireum/HashSet<TT;>;
   #71 = NameAndType        #68:#69       // empty:()Lorg/sireum/HashSet;
   #72 = Methodref          #53.#71       // org/sireum/HashSet$.empty:()Lorg/sireum/HashSet;
   #73 = Utf8               $cannotMixImmutableAndMutable
   #74 = Utf8               ()Lscala/runtime/Nothing$;
   #75 = Utf8               org/sireum/Immutable
   #76 = Class              #75           // org/sireum/Immutable
   #77 = Utf8               $cannotMixImmutableAndMutable$
   #78 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #79 = NameAndType        #77:#78       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #80 = InterfaceMethodref #76.#79       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #81 = Utf8               this
   #82 = Utf8               $hasEquals
   #83 = Utf8               ()Z
   #84 = Utf8               $hasEquals$
   #85 = Utf8               (Lorg/sireum/Immutable;)Z
   #86 = NameAndType        #84:#85       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #87 = InterfaceMethodref #76.#86       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #88 = Utf8               $hasString
   #89 = Utf8               $hasString$
   #90 = NameAndType        #89:#85       // $hasString$:(Lorg/sireum/Immutable;)Z
   #91 = InterfaceMethodref #76.#90       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #92 = Utf8               $clone
   #93 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #94 = Utf8               org/sireum/$internal/ImmutableMarker
   #95 = Class              #94           // org/sireum/$internal/ImmutableMarker
   #96 = Utf8               $clone$
   #97 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #98 = NameAndType        #96:#97       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #99 = InterfaceMethodref #95.#98       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #100 = Utf8               map
  #101 = Utf8               ()Lorg/sireum/HashMap;
  #102 = Utf8               ()Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;
  #103 = NameAndType        #43:#44       // _map:Lorg/sireum/HashMap;
  #104 = Fieldref           #2.#103       // org/sireum/HashSet._map:Lorg/sireum/HashMap;
  #105 = Utf8               getMap
  #106 = Utf8               toString
  #107 = Utf8               ()Ljava/lang/String;
  #108 = Utf8               string
  #109 = NameAndType        #108:#107     // string:()Ljava/lang/String;
  #110 = Methodref          #2.#109       // org/sireum/HashSet.string:()Ljava/lang/String;
  #111 = Utf8               hashCode$lzycompute
  #112 = Utf8               ()I
  #113 = NameAndType        #46:#47       // bitmap$0:B
  #114 = Fieldref           #2.#113       // org/sireum/HashSet.bitmap$0:B
  #115 = Utf8               hash
  #116 = Utf8               ()Lorg/sireum/Z;
  #117 = NameAndType        #115:#116     // hash:()Lorg/sireum/Z;
  #118 = Methodref          #2.#117       // org/sireum/HashSet.hash:()Lorg/sireum/Z;
  #119 = NameAndType        #38:#112      // hashCode:()I
  #120 = Methodref          #5.#119       // java/lang/Object.hashCode:()I
  #121 = NameAndType        #38:#39       // hashCode:I
  #122 = Fieldref           #2.#121       // org/sireum/HashSet.hashCode:I
  #123 = Utf8               java/lang/Throwable
  #124 = Class              #123          // java/lang/Throwable
  #125 = NameAndType        #111:#112     // hashCode$lzycompute:()I
  #126 = Methodref          #2.#125       // org/sireum/HashSet.hashCode$lzycompute:()I
  #127 = Utf8               equals
  #128 = Utf8               (Ljava/lang/Object;)Z
  #129 = Utf8               org/sireum/B$
  #130 = Class              #129          // org/sireum/B$
  #131 = Utf8               Lorg/sireum/B$;
  #132 = NameAndType        #54:#131      // MODULE$:Lorg/sireum/B$;
  #133 = Fieldref           #130.#132     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #134 = Utf8               isEqual
  #135 = Utf8               (Lorg/sireum/HashSet;)Z
  #136 = NameAndType        #134:#135     // isEqual:(Lorg/sireum/HashSet;)Z
  #137 = Methodref          #2.#136       // org/sireum/HashSet.isEqual:(Lorg/sireum/HashSet;)Z
  #138 = Utf8               $4B
  #139 = Utf8               (Z)Z
  #140 = NameAndType        #138:#139     // $4B:(Z)Z
  #141 = Methodref          #130.#140     // org/sireum/B$.$4B:(Z)Z
  #142 = Utf8               Ljava/lang/Object;
  #143 = Utf8               apply
  #144 = Utf8               (Lorg/sireum/HashMap;)Lorg/sireum/HashSet;
  #145 = Utf8               (Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;)Lorg/sireum/HashSet<TT;>;
  #146 = Utf8               <init>
  #147 = Utf8               (Lorg/sireum/HashMap;)V
  #148 = NameAndType        #146:#147     // "<init>":(Lorg/sireum/HashMap;)V
  #149 = Methodref          #2.#148       // org/sireum/HashSet."<init>":(Lorg/sireum/HashMap;)V
  #150 = Utf8               apply$default$1
  #151 = NameAndType        #100:#101     // map:()Lorg/sireum/HashMap;
  #152 = Methodref          #2.#151       // org/sireum/HashSet.map:()Lorg/sireum/HashMap;
  #153 = Utf8               $content$lzycompute
  #154 = Utf8               ()Lscala/collection/immutable/Seq;
  #155 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #156 = Utf8               scala/package$
  #157 = Class              #156          // scala/package$
  #158 = Utf8               Lscala/package$;
  #159 = NameAndType        #54:#158      // MODULE$:Lscala/package$;
  #160 = Fieldref           #157.#159     // scala/package$.MODULE$:Lscala/package$;
  #161 = Utf8               Seq
  #162 = Utf8               ()Lscala/collection/immutable/Seq$;
  #163 = NameAndType        #161:#162     // Seq:()Lscala/collection/immutable/Seq$;
  #164 = Methodref          #157.#163     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #165 = Utf8               scala/runtime/ScalaRunTime$
  #166 = Class              #165          // scala/runtime/ScalaRunTime$
  #167 = Utf8               Lscala/runtime/ScalaRunTime$;
  #168 = NameAndType        #54:#167      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #169 = Fieldref           #166.#168     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #170 = Utf8               scala/Tuple2
  #171 = Class              #170          // scala/Tuple2
  #172 = Utf8               type
  #173 = String             #172          // type
  #174 = Utf8               List
  #175 = Utf8               ()Lscala/collection/immutable/List$;
  #176 = NameAndType        #174:#175     // List:()Lscala/collection/immutable/List$;
  #177 = Methodref          #157.#176     // scala/package$.List:()Lscala/collection/immutable/List$;
  #178 = Utf8               java/lang/String
  #179 = Class              #178          // java/lang/String
  #180 = Utf8               org
  #181 = String             #180          // org
  #182 = Utf8               sireum
  #183 = String             #182          // sireum
  #184 = Utf8               HashSet
  #185 = String             #184          // HashSet
  #186 = Utf8               [Ljava/lang/Object;
  #187 = Class              #186          // "[Ljava/lang/Object;"
  #188 = Utf8               wrapRefArray
  #189 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #190 = NameAndType        #188:#189     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #191 = Methodref          #166.#190     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #192 = Utf8               scala/collection/immutable/List$
  #193 = Class              #192          // scala/collection/immutable/List$
  #194 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #195 = NameAndType        #143:#194     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #196 = Methodref          #193.#195     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #197 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #198 = NameAndType        #146:#197     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #199 = Methodref          #171.#198     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #200 = String             #100          // map
  #201 = Utf8               scala/collection/immutable/Seq$
  #202 = Class              #201          // scala/collection/immutable/Seq$
  #203 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #204 = NameAndType        #143:#203     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #205 = Methodref          #202.#204     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #206 = Utf8               scala/collection/immutable/Seq
  #207 = Class              #206          // scala/collection/immutable/Seq
  #208 = NameAndType        #40:#41       // $content:Lscala/collection/immutable/Seq;
  #209 = Fieldref           #2.#208       // org/sireum/HashSet.$content:Lscala/collection/immutable/Seq;
  #210 = NameAndType        #153:#154     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #211 = Methodref          #2.#210       // org/sireum/HashSet.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #212 = Utf8               $plus
  #213 = Utf8               (Ljava/lang/Object;)Lorg/sireum/HashSet;
  #214 = Utf8               (TT;)Lorg/sireum/HashSet<TT;>;
  #215 = Utf8               e
  #216 = Utf8               Lorg/sireum/package$$Arrow$;
  #217 = NameAndType        #54:#216      // MODULE$:Lorg/sireum/package$$Arrow$;
  #218 = Fieldref           #34.#217      // org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
  #219 = Utf8               org/sireum/package$
  #220 = Class              #219          // org/sireum/package$
  #221 = Utf8               Lorg/sireum/package$;
  #222 = NameAndType        #54:#221      // MODULE$:Lorg/sireum/package$;
  #223 = Fieldref           #220.#222     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #224 = Utf8               $Arrow
  #225 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #226 = NameAndType        #224:#225     // $Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #227 = Methodref          #220.#226     // org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #228 = Utf8               org/sireum/B
  #229 = Class              #228          // org/sireum/B
  #230 = Utf8               T
  #231 = NameAndType        #230:#83      // T:()Z
  #232 = Methodref          #220.#231     // org/sireum/package$.T:()Z
  #233 = Utf8               (Z)V
  #234 = NameAndType        #146:#233     // "<init>":(Z)V
  #235 = Methodref          #229.#234     // org/sireum/B."<init>":(Z)V
  #236 = Utf8               $tilde$greater$extension
  #237 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #238 = NameAndType        #236:#237     // $tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #239 = Methodref          #34.#238      // org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #240 = Utf8               org/sireum/HashMap
  #241 = Class              #240          // org/sireum/HashMap
  #242 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashMap;
  #243 = NameAndType        #212:#242     // $plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #244 = Methodref          #241.#243     // org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #245 = NameAndType        #143:#144     // apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashSet;
  #246 = Methodref          #53.#245      // org/sireum/HashSet$.apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashSet;
  #247 = Utf8               $plus$plus
  #248 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashSet;
  #249 = Utf8               <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;)Lorg/sireum/HashSet<TT;>;
  #250 = Utf8               is
  #251 = Utf8               scala/runtime/ObjectRef
  #252 = Class              #251          // scala/runtime/ObjectRef
  #253 = Utf8               create
  #254 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #255 = NameAndType        #253:#254     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #256 = Methodref          #252.#255     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #257 = MethodType         #225          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #258 = Utf8               $anonfun$$plus$plus$1$adapted
  #259 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #260 = NameAndType        #258:#259     // $anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #261 = Methodref          #2.#260       // org/sireum/HashSet.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #262 = MethodHandle       6:#261        // REF_invokeStatic org/sireum/HashSet.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #263 = Integer            1
  #264 = Utf8               java/lang/invoke/LambdaMetafactory
  #265 = Class              #264          // java/lang/invoke/LambdaMetafactory
  #266 = Utf8               altMetafactory
  #267 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #268 = NameAndType        #266:#267     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #269 = Methodref          #265.#268     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #270 = MethodHandle       6:#269        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #271 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
  #272 = NameAndType        #143:#271     // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #273 = InvokeDynamic      #0:#272       // #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #274 = Utf8               org/sireum/IS
  #275 = Class              #274          // org/sireum/IS
  #276 = Utf8               foreach
  #277 = Utf8               (Lscala/Function1;)V
  #278 = NameAndType        #276:#277     // foreach:(Lscala/Function1;)V
  #279 = Methodref          #275.#278     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #280 = Utf8               elem
  #281 = NameAndType        #280:#142     // elem:Ljava/lang/Object;
  #282 = Fieldref           #252.#281     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #283 = Utf8               r
  #284 = Utf8               Lscala/runtime/ObjectRef;
  #285 = Utf8               Lorg/sireum/IS;
  #286 = Utf8               $minus
  #287 = NameAndType        #286:#242     // $minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #288 = Methodref          #241.#287     // org/sireum/HashMap.$minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #289 = Utf8               $minus$minus
  #290 = Utf8               $anonfun$$minus$minus$1$adapted
  #291 = NameAndType        #290:#259     // $anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #292 = Methodref          #2.#291       // org/sireum/HashSet.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #293 = MethodHandle       6:#292        // REF_invokeStatic org/sireum/HashSet.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #294 = InvokeDynamic      #1:#272       // #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #295 = Utf8               contains
  #296 = Utf8               (TT;)Z
  #297 = NameAndType        #295:#128     // contains:(Ljava/lang/Object;)Z
  #298 = Methodref          #241.#297     // org/sireum/HashMap.contains:(Ljava/lang/Object;)Z
  #299 = Utf8               union
  #300 = Utf8               (Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
  #301 = Utf8               (Lorg/sireum/HashSet<TT;>;)Lorg/sireum/HashSet<TT;>;
  #302 = Utf8               other
  #303 = Utf8               $u222A
  #304 = NameAndType        #303:#300     // $u222A:(Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
  #305 = Methodref          #2.#304       // org/sireum/HashSet.$u222A:(Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
  #306 = Utf8               elements
  #307 = Utf8               ()Lorg/sireum/IS;
  #308 = NameAndType        #306:#307     // elements:()Lorg/sireum/IS;
  #309 = Methodref          #2.#308       // org/sireum/HashSet.elements:()Lorg/sireum/IS;
  #310 = NameAndType        #247:#248     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSet;
  #311 = Methodref          #2.#310       // org/sireum/HashSet.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSet;
  #312 = Utf8               intersect
  #313 = Utf8               $u2229
  #314 = NameAndType        #313:#300     // $u2229:(Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
  #315 = Methodref          #2.#314       // org/sireum/HashSet.$u2229:(Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
  #316 = Utf8               size
  #317 = NameAndType        #316:#116     // size:()Lorg/sireum/Z;
  #318 = Methodref          #2.#317       // org/sireum/HashSet.size:()Lorg/sireum/Z;
  #319 = Utf8               keys
  #320 = NameAndType        #319:#307     // keys:()Lorg/sireum/IS;
  #321 = Methodref          #241.#320     // org/sireum/HashMap.keys:()Lorg/sireum/IS;
  #322 = Utf8               $anonfun$$u2229$1$adapted
  #323 = Utf8               (Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #324 = NameAndType        #322:#323     // $anonfun$$u2229$1$adapted:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #325 = Methodref          #2.#324       // org/sireum/HashSet.$anonfun$$u2229$1$adapted:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #326 = MethodHandle       6:#325        // REF_invokeStatic org/sireum/HashSet.$anonfun$$u2229$1$adapted:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #327 = Utf8               (Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #328 = NameAndType        #143:#327     // apply:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #329 = InvokeDynamic      #2:#328       // #2:apply:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #330 = Utf8               $bslash
  #331 = NameAndType        #289:#248     // $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashSet;
  #332 = Methodref          #2.#331       // org/sireum/HashSet.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashSet;
  #333 = Utf8               (Lorg/sireum/HashSet<TT;>;)Z
  #334 = Utf8               (Lorg/sireum/HashMap;)Z
  #335 = NameAndType        #134:#334     // isEqual:(Lorg/sireum/HashMap;)Z
  #336 = Methodref          #241.#335     // org/sireum/HashMap.isEqual:(Lorg/sireum/HashMap;)Z
  #337 = Utf8               org/sireum/Z$
  #338 = Class              #337          // org/sireum/Z$
  #339 = Utf8               Lorg/sireum/Z$;
  #340 = NameAndType        #54:#339      // MODULE$:Lorg/sireum/Z$;
  #341 = Fieldref           #338.#340     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #342 = Methodref          #241.#119     // org/sireum/HashMap.hashCode:()I
  #343 = Utf8               (I)Lorg/sireum/Z;
  #344 = NameAndType        #143:#343     // apply:(I)Lorg/sireum/Z;
  #345 = Methodref          #338.#344     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #346 = Utf8               isEmpty
  #347 = Utf8               Lorg/sireum/Z$$String$;
  #348 = NameAndType        #54:#347      // MODULE$:Lorg/sireum/Z$$String$;
  #349 = Fieldref           #29.#348      // org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
  #350 = Utf8               0
  #351 = String             #350          // 0
  #352 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #353 = NameAndType        #143:#352     // apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #354 = Methodref          #29.#353      // org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #355 = NameAndType        #127:#128     // equals:(Ljava/lang/Object;)Z
  #356 = Methodref          #5.#355       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #357 = NameAndType        #143:#139     // apply:(Z)Z
  #358 = Methodref          #130.#357     // org/sireum/B$.apply:(Z)Z
  #359 = Utf8               nonEmpty
  #360 = Methodref          #241.#317     // org/sireum/HashMap.size:()Lorg/sireum/Z;
  #361 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;
  #362 = Utf8               org/sireum/ST$
  #363 = Class              #362          // org/sireum/ST$
  #364 = Utf8               Lorg/sireum/ST$;
  #365 = NameAndType        #54:#364      // MODULE$:Lorg/sireum/ST$;
  #366 = Fieldref           #363.#365     // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
  #367 = Utf8               {\n      |
  #368 = String             #367          // {\n      |
  #369 = Utf8               \n      |}
  #370 = String             #369          // \n      |}
  #371 = Utf8               Lorg/sireum/ST$Any$;
  #372 = NameAndType        #54:#371      // MODULE$:Lorg/sireum/ST$Any$;
  #373 = Fieldref           #23.#372      // org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
  #374 = NameAndType        #306:#154     // elements:()Lscala/collection/immutable/Seq;
  #375 = Methodref          #275.#374     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #376 = Utf8               $anonfun$string$1
  #377 = NameAndType        #376:#225     // $anonfun$string$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #378 = Methodref          #2.#377       // org/sireum/HashSet.$anonfun$string$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #379 = MethodHandle       6:#378        // REF_invokeStatic org/sireum/HashSet.$anonfun$string$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #380 = Utf8               ()Lscala/Function1;
  #381 = NameAndType        #143:#380     // apply:()Lscala/Function1;
  #382 = InvokeDynamic      #3:#381       // #3:apply:()Lscala/Function1;
  #383 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #384 = NameAndType        #100:#383     // map:(Lscala/Function1;)Ljava/lang/Object;
  #385 = InterfaceMethodref #207.#384     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #386 = Utf8               org/sireum/String$
  #387 = Class              #386          // org/sireum/String$
  #388 = Utf8               Lorg/sireum/String$;
  #389 = NameAndType        #54:#388      // MODULE$:Lorg/sireum/String$;
  #390 = Fieldref           #387.#389     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #391 = Utf8               ,\n
  #392 = String             #391          // ,\n
  #393 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #394 = NameAndType        #143:#393     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #395 = Methodref          #387.#394     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #396 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #397 = NameAndType        #143:#396     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #398 = Methodref          #23.#397      // org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #399 = Utf8                     st\"\"\"{\n      |  ${(elements, \",\\n\")}\n      |}\"\"\"
  #400 = String             #399          //       st\"\"\"{\n      |  ${(elements, \",\\n\")}\n      |}\"\"\"
  #401 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #402 = NameAndType        #143:#401     // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #403 = Methodref          #363.#402     // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #404 = Utf8               render
  #405 = NameAndType        #404:#107     // render:()Ljava/lang/String;
  #406 = Methodref          #20.#405      // org/sireum/ST.render:()Ljava/lang/String;
  #407 = Utf8               Lorg/sireum/ST;
  #408 = Utf8               ()Ljava/lang/Object;
  #409 = NameAndType        #92:#93       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #410 = Methodref          #2.#409       // org/sireum/HashSet.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #411 = Utf8               $anonfun$$plus$plus$1
  #412 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #413 = Utf8               r$1
  #414 = NameAndType        #212:#213     // $plus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
  #415 = Methodref          #2.#414       // org/sireum/HashSet.$plus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
  #416 = Utf8               $anonfun$$minus$minus$1
  #417 = Utf8               r$2
  #418 = NameAndType        #286:#213     // $minus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
  #419 = Methodref          #2.#418       // org/sireum/HashSet.$minus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
  #420 = Utf8               $anonfun$$u2229$1
  #421 = Utf8               (Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #422 = Utf8               $this
  #423 = Utf8               r$3
  #424 = Methodref          #2.#297       // org/sireum/HashSet.contains:(Ljava/lang/Object;)Z
  #425 = Utf8               org/sireum/$internal/Option$
  #426 = Class              #425          // org/sireum/$internal/Option$
  #427 = Utf8               Lorg/sireum/$internal/Option$;
  #428 = NameAndType        #54:#427      // MODULE$:Lorg/sireum/$internal/Option$;
  #429 = Fieldref           #426.#428     // org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
  #430 = NameAndType        #143:#225     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #431 = Methodref          #426.#430     // org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #432 = Utf8               (Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;)V
  #433 = Utf8               __map
  #434 = Utf8               ()V
  #435 = NameAndType        #146:#434     // "<init>":()V
  #436 = Methodref          #5.#435       // java/lang/Object."<init>":()V
  #437 = Utf8               $init$
  #438 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #439 = NameAndType        #437:#438     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #440 = InterfaceMethodref #95.#439      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #441 = Utf8               (Lorg/sireum/Immutable;)V
  #442 = NameAndType        #437:#441     // $init$:(Lorg/sireum/Immutable;)V
  #443 = InterfaceMethodref #76.#442      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #444 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #445 = NameAndType        #437:#444     // $init$:(Lorg/sireum/DatatypeSig;)V
  #446 = InterfaceMethodref #7.#445       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #447 = NameAndType        #411:#412     // $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #448 = Methodref          #2.#447       // org/sireum/HashSet.$anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #449 = Utf8               scala/runtime/BoxedUnit
  #450 = Class              #449          // scala/runtime/BoxedUnit
  #451 = Utf8               UNIT
  #452 = Utf8               Lscala/runtime/BoxedUnit;
  #453 = NameAndType        #451:#452     // UNIT:Lscala/runtime/BoxedUnit;
  #454 = Fieldref           #450.#453     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #455 = NameAndType        #416:#412     // $anonfun$$minus$minus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #456 = Methodref          #2.#455       // org/sireum/HashSet.$anonfun$$minus$minus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #457 = NameAndType        #420:#421     // $anonfun$$u2229$1:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #458 = Methodref          #2.#457       // org/sireum/HashSet.$anonfun$$u2229$1:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #459 = Utf8               $deserializeLambda$
  #460 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #461 = Utf8               scala/runtime/LambdaDeserialize
  #462 = Class              #461          // scala/runtime/LambdaDeserialize
  #463 = Utf8               bootstrap
  #464 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #465 = NameAndType        #463:#464     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #466 = Methodref          #462.#465     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #467 = MethodHandle       6:#466        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #468 = Utf8               lambdaDeserialize
  #469 = NameAndType        #468:#460     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #470 = InvokeDynamic      #4:#469       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #471 = Utf8               Signature
  #472 = Utf8               Code
  #473 = Utf8               LocalVariableTable
  #474 = Utf8               MethodParameters
  #475 = Utf8               LineNumberTable
  #476 = Utf8               StackMapTable
  #477 = Utf8               InnerClasses
  #478 = Utf8               SourceFile
  #479 = Utf8               RuntimeVisibleAnnotations
  #480 = Utf8               BootstrapMethods
  #481 = Utf8               ScalaInlineInfo
  #482 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #42                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.HashMap<T, org.sireum.B> _map;
    descriptor: Lorg/sireum/HashMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #45                          // Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static <T extends java.lang.Object> scala.Some<org.sireum.HashMap<T, org.sireum.B>> unapply(org.sireum.HashSet<T>);
    descriptor: (Lorg/sireum/HashSet;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #57                 // Field org/sireum/HashSet$.MODULE$:Lorg/sireum/HashSet$;
         3: aload_0
         4: invokevirtual #59                 // Method org/sireum/HashSet$.unapply:(Lorg/sireum/HashSet;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/HashSet;
    Signature: #50                          // <T:Ljava/lang/Object;>(Lorg/sireum/HashSet<TT;>;)Lscala/Some<Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static <T extends java.lang.Object> org.sireum.HashSet<T> emptyInit(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/HashSet;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #57                 // Field org/sireum/HashSet$.MODULE$:Lorg/sireum/HashSet$;
         3: aload_0
         4: invokevirtual #66                 // Method org/sireum/HashSet$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSet;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 initialCapacity   Lorg/sireum/Z;
    Signature: #63                          // <T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      initialCapacity                final

  public static <T extends java.lang.Object> org.sireum.HashSet<T> empty();
    descriptor: ()Lorg/sireum/HashSet;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #57                 // Field org/sireum/HashSet$.MODULE$:Lorg/sireum/HashSet$;
         3: invokevirtual #72                 // Method org/sireum/HashSet$.empty:()Lorg/sireum/HashSet;
         6: areturn
    Signature: #70                          // <T:Ljava/lang/Object;>()Lorg/sireum/HashSet<TT;>;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #80                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSet;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSet;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSet;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #99                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSet;

  public org.sireum.HashMap<T, org.sireum.B> map();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _map:Lorg/sireum/HashMap;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSet;
    Signature: #102                         // ()Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;

  public org.sireum.HashMap<T, org.sireum.B> getMap();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _map:Lorg/sireum/HashMap;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSet;
    Signature: #102                         // ()Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #110                // Method string:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSet;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #114                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     37
        15: aload_0
        16: aload_0
        17: invokevirtual #118                // Method hash:()Lorg/sireum/Z;
        20: invokevirtual #120                // Method java/lang/Object.hashCode:()I
        23: putfield      #122                // Field hashCode:I
        26: aload_0
        27: aload_0
        28: getfield      #114                // Field bitmap$0:B
        31: iconst_1
        32: ior
        33: i2b
        34: putfield      #114                // Field bitmap$0:B
        37: aload_1
        38: monitorexit
        39: goto          45
        42: aload_1
        43: monitorexit
        44: athrow
        45: aload_0
        46: getfield      #122                // Field hashCode:I
        49: ireturn
      Exception table:
         from    to  target type
             4    37    42   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class org/sireum/HashSet ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lorg/sireum/HashSet;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #126                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #122                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashSet;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     9
         5: iconst_1
         6: goto          46
         9: aload_1
        10: astore_3
        11: aload_3
        12: instanceof    #2                  // class org/sireum/HashSet
        15: ifeq          40
        18: aload_3
        19: checkcast     #2                  // class org/sireum/HashSet
        22: astore        4
        24: getstatic     #133                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        27: aload_0
        28: aload         4
        30: invokevirtual #137                // Method isEqual:(Lorg/sireum/HashSet;)Z
        33: invokevirtual #141                // Method org/sireum/B$.$4B:(Z)Z
        36: istore_2
        37: goto          45
        40: goto          43
        43: iconst_0
        44: ireturn
        45: iload_2
        46: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/HashSet, class java/lang/Object, int, class java/lang/Object, class org/sireum/HashSet ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashSet, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/sireum/HashSet;
            0      47     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.HashSet<T> apply(org.sireum.HashMap<T, org.sireum.B>);
    descriptor: (Lorg/sireum/HashMap;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/sireum/HashSet
         3: dup
         4: aload_1
         5: invokespecial #149                // Method "<init>":(Lorg/sireum/HashMap;)V
         8: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashSet;
            0       9     1   map   Lorg/sireum/HashMap;
    Signature: #145                         // (Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      map                            final

  public org.sireum.HashMap<T, org.sireum.B> apply$default$1();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSet;
    Signature: #102                         // ()Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #114                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     120
        15: aload_0
        16: getstatic     #160                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #164                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_2
        26: anewarray     #171                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #171                // class scala/Tuple2
        34: dup
        35: ldc           #173                // String type
        37: getstatic     #160                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #177                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #179                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #181                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #183                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #185                // String HashSet
        64: aastore
        65: checkcast     #187                // class "[Ljava/lang/Object;"
        68: invokevirtual #191                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #196                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #199                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #171                // class scala/Tuple2
        83: dup
        84: ldc           #200                // String map
        86: aload_0
        87: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
        90: invokespecial #199                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: aastore
        94: checkcast     #187                // class "[Ljava/lang/Object;"
        97: invokevirtual #191                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       100: invokevirtual #205                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       103: checkcast     #207                // class scala/collection/immutable/Seq
       106: putfield      #209                // Field $content:Lscala/collection/immutable/Seq;
       109: aload_0
       110: aload_0
       111: getfield      #114                // Field bitmap$0:B
       114: iconst_2
       115: ior
       116: i2b
       117: putfield      #114                // Field bitmap$0:B
       120: aload_1
       121: monitorexit
       122: goto          128
       125: aload_1
       126: monitorexit
       127: athrow
       128: aload_0
       129: getfield      #209                // Field $content:Lscala/collection/immutable/Seq;
       132: areturn
      Exception table:
         from    to  target type
             4   120   125   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 120
          locals = [ class org/sireum/HashSet ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     133     0  this   Lorg/sireum/HashSet;
    Signature: #155                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #211                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #209                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashSet;
    Signature: #155                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.HashSet<T> $plus(T);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: getstatic     #57                 // Field org/sireum/HashSet$.MODULE$:Lorg/sireum/HashSet$;
         3: aload_0
         4: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
         7: getstatic     #218                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        10: getstatic     #223                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        13: aload_1
        14: invokevirtual #227                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        17: new           #229                // class org/sireum/B
        20: dup
        21: getstatic     #223                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        24: invokevirtual #232                // Method org/sireum/package$.T:()Z
        27: invokespecial #235                // Method org/sireum/B."<init>":(Z)V
        30: invokevirtual #239                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        33: invokevirtual #244                // Method org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        36: invokevirtual #246                // Method org/sireum/HashSet$.apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashSet;
        39: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lorg/sireum/HashSet;
            0      40     1     e   Ljava/lang/Object;
    Signature: #214                         // (TT;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public <I extends java.lang.Object> org.sireum.HashSet<T> $plus$plus(org.sireum.IS<I, T>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         4: astore_2
         5: aload_1
         6: aload_2
         7: invokedynamic #273,  0            // InvokeDynamic #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        12: invokevirtual #279                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        15: aload_2
        16: getfield      #282                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: checkcast     #2                  // class org/sireum/HashSet
        22: areturn
      LineNumberTable:
        line 51: 0
        line 52: 5
        line 55: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      18     2     r   Lscala/runtime/ObjectRef;
            0      23     0  this   Lorg/sireum/HashSet;
            0      23     1    is   Lorg/sireum/IS;
    Signature: #249                         // <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      is                             final

  public org.sireum.HashSet<T> $minus(T);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: getstatic     #57                 // Field org/sireum/HashSet$.MODULE$:Lorg/sireum/HashSet$;
         3: aload_0
         4: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
         7: getstatic     #218                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        10: getstatic     #223                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        13: aload_1
        14: invokevirtual #227                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        17: new           #229                // class org/sireum/B
        20: dup
        21: getstatic     #223                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        24: invokevirtual #232                // Method org/sireum/package$.T:()Z
        27: invokespecial #235                // Method org/sireum/B."<init>":(Z)V
        30: invokevirtual #239                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        33: invokevirtual #288                // Method org/sireum/HashMap.$minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        36: invokevirtual #246                // Method org/sireum/HashSet$.apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashSet;
        39: areturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lorg/sireum/HashSet;
            0      40     1     e   Ljava/lang/Object;
    Signature: #214                         // (TT;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public <I extends java.lang.Object> org.sireum.HashSet<T> $minus$minus(org.sireum.IS<I, T>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         4: astore_2
         5: aload_1
         6: aload_2
         7: invokedynamic #294,  0            // InvokeDynamic #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        12: invokevirtual #279                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        15: aload_2
        16: getfield      #282                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: checkcast     #2                  // class org/sireum/HashSet
        22: areturn
      LineNumberTable:
        line 63: 0
        line 64: 5
        line 67: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      18     2     r   Lscala/runtime/ObjectRef;
            0      23     0  this   Lorg/sireum/HashSet;
            0      23     1    is   Lorg/sireum/IS;
    Signature: #249                         // <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      is                             final

  public boolean contains(T);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
         4: aload_1
         5: invokevirtual #298                // Method org/sireum/HashMap.contains:(Ljava/lang/Object;)Z
         8: ireturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashSet;
            0       9     1     e   Ljava/lang/Object;
    Signature: #296                         // (TT;)Z
    MethodParameters:
      Name                           Flags
      e                              final

  public org.sireum.HashSet<T> union(org.sireum.HashSet<T>);
    descriptor: (Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #305                // Method $u222A:(Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
         5: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/HashSet;
            0       6     1 other   Lorg/sireum/HashSet;
    Signature: #301                         // (Lorg/sireum/HashSet<TT;>;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.HashSet<T> $u222A(org.sireum.HashSet<T>);
    descriptor: (Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #309                // Method elements:()Lorg/sireum/IS;
         5: invokevirtual #311                // Method $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSet;
         8: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashSet;
            0       9     1 other   Lorg/sireum/HashSet;
    Signature: #301                         // (Lorg/sireum/HashSet<TT;>;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.HashSet<T> intersect(org.sireum.HashSet<T>);
    descriptor: (Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #315                // Method $u2229:(Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
         5: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/HashSet;
            0       6     1 other   Lorg/sireum/HashSet;
    Signature: #301                         // (Lorg/sireum/HashSet<TT;>;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.HashSet<T> $u2229(org.sireum.HashSet<T>);
    descriptor: (Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #57                 // Field org/sireum/HashSet$.MODULE$:Lorg/sireum/HashSet$;
         3: aload_0
         4: invokevirtual #318                // Method size:()Lorg/sireum/Z;
         7: invokevirtual #66                 // Method org/sireum/HashSet$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSet;
        10: invokestatic  #256                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        13: astore_2
        14: aload_1
        15: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
        18: invokevirtual #321                // Method org/sireum/HashMap.keys:()Lorg/sireum/IS;
        21: aload_0
        22: aload_2
        23: invokedynamic #329,  0            // InvokeDynamic #2:apply:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;)Lscala/Function1;
        28: invokevirtual #279                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        31: aload_2
        32: getfield      #282                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        35: checkcast     #2                  // class org/sireum/HashSet
        38: areturn
      LineNumberTable:
        line 87: 0
        line 88: 14
        line 93: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      25     2     r   Lscala/runtime/ObjectRef;
            0      39     0  this   Lorg/sireum/HashSet;
            0      39     1 other   Lorg/sireum/HashSet;
    Signature: #301                         // (Lorg/sireum/HashSet<TT;>;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.HashSet<T> $bslash(org.sireum.HashSet<T>);
    descriptor: (Lorg/sireum/HashSet;)Lorg/sireum/HashSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #309                // Method elements:()Lorg/sireum/IS;
         5: invokevirtual #332                // Method $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashSet;
         8: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashSet;
            0       9     1 other   Lorg/sireum/HashSet;
    Signature: #301                         // (Lorg/sireum/HashSet<TT;>;)Lorg/sireum/HashSet<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public boolean isEqual(org.sireum.HashSet<T>);
    descriptor: (Lorg/sireum/HashSet;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
         4: aload_1
         5: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
         8: invokevirtual #336                // Method org/sireum/HashMap.isEqual:(Lorg/sireum/HashMap;)Z
        11: ireturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/HashSet;
            0      12     1 other   Lorg/sireum/HashSet;
    Signature: #333                         // (Lorg/sireum/HashSet<TT;>;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #341                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: aload_0
         4: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
         7: invokevirtual #342                // Method org/sireum/HashMap.hashCode:()I
        10: invokevirtual #345                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        13: areturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/HashSet;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #133                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #318                // Method size:()Lorg/sireum/Z;
         7: getstatic     #349                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
        10: ldc_w         #351                // String 0
        13: invokevirtual #354                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        16: astore_1
        17: dup
        18: ifnonnull     29
        21: pop
        22: aload_1
        23: ifnull        36
        26: goto          40
        29: aload_1
        30: invokevirtual #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        33: ifeq          40
        36: iconst_1
        37: goto          41
        40: iconst_0
        41: invokevirtual #358                // Method org/sireum/B$.apply:(Z)Z
        44: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/sireum/HashSet, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashSet, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/HashSet;

  public boolean nonEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #133                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #318                // Method size:()Lorg/sireum/Z;
         7: getstatic     #349                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
        10: ldc_w         #351                // String 0
        13: invokevirtual #354                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        16: astore_1
        17: dup
        18: ifnonnull     29
        21: pop
        22: aload_1
        23: ifnull        40
        26: goto          36
        29: aload_1
        30: invokevirtual #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        33: ifne          40
        36: iconst_1
        37: goto          41
        40: iconst_0
        41: invokevirtual #358                // Method org/sireum/B$.apply:(Z)Z
        44: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/sireum/HashSet, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashSet, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/HashSet;

  public org.sireum.Z size();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
         4: invokevirtual #360                // Method org/sireum/HashMap.size:()Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/HashSet;

  public org.sireum.IS<org.sireum.Z, T> elements();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #152                // Method map:()Lorg/sireum/HashMap;
         4: invokevirtual #321                // Method org/sireum/HashMap.keys:()Lorg/sireum/IS;
         7: areturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/HashSet;
    Signature: #361                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=2, args_size=1
         0: getstatic     #366                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: getstatic     #160                // Field scala/package$.MODULE$:Lscala/package$;
         6: invokevirtual #164                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         9: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        12: iconst_2
        13: anewarray     #179                // class java/lang/String
        16: dup
        17: iconst_0
        18: ldc_w         #368                // String {\n      |
        21: aastore
        22: dup
        23: iconst_1
        24: ldc_w         #370                // String \n      |}
        27: aastore
        28: checkcast     #187                // class "[Ljava/lang/Object;"
        31: invokevirtual #191                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        34: invokevirtual #205                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        37: checkcast     #207                // class scala/collection/immutable/Seq
        40: getstatic     #160                // Field scala/package$.MODULE$:Lscala/package$;
        43: invokevirtual #164                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        46: getstatic     #169                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        49: iconst_1
        50: anewarray     #26                 // class org/sireum/ST$Arg
        53: dup
        54: iconst_0
        55: getstatic     #373                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
        58: aload_0
        59: invokevirtual #309                // Method elements:()Lorg/sireum/IS;
        62: invokevirtual #375                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
        65: invokedynamic #382,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        70: invokeinterface #385,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        75: checkcast     #207                // class scala/collection/immutable/Seq
        78: getstatic     #390                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        81: ldc_w         #392                // String ,\n
        84: invokevirtual #395                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        87: invokevirtual #398                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
        90: aastore
        91: checkcast     #187                // class "[Ljava/lang/Object;"
        94: invokevirtual #191                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        97: invokevirtual #205                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       100: checkcast     #207                // class scala/collection/immutable/Seq
       103: ldc_w         #400                // String       st\"\"\"{\n      |  ${(elements, \",\\n\")}\n      |}\"\"\"
       106: invokevirtual #403                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       109: astore_1
       110: aload_1
       111: invokevirtual #406                // Method org/sireum/ST.render:()Ljava/lang/String;
       114: areturn
      LineNumberTable:
        line 126: 0
        line 127: 24
        line 126: 40
        line 127: 58
        line 126: 65
        line 127: 78
        line 126: 103
        line 129: 110
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          110       5     1     r   Lorg/sireum/ST;
            0     115     0  this   Lorg/sireum/HashSet;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #410                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSet;

  public static final void $anonfun$$plus$plus$1(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #282                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class org/sireum/HashSet
         8: aload_1
         9: invokevirtual #415                // Method $plus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
        12: putfield      #282                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        15: return
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   r$1   Lscala/runtime/ObjectRef;
            0      16     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$1                            final
      e                              final

  public static final void $anonfun$$minus$minus$1(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #282                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class org/sireum/HashSet
         8: aload_1
         9: invokevirtual #419                // Method $minus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
        12: putfield      #282                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        15: return
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   r$2   Lscala/runtime/ObjectRef;
            0      16     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$2                            final
      e                              final

  public static final void $anonfun$$u2229$1(org.sireum.HashSet, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #133                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: aload_2
         5: invokevirtual #424                // Method contains:(Ljava/lang/Object;)Z
         8: invokevirtual #141                // Method org/sireum/B$.$4B:(Z)Z
        11: ifeq          32
        14: aload_1
        15: aload_1
        16: getfield      #282                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: checkcast     #2                  // class org/sireum/HashSet
        22: aload_2
        23: invokevirtual #415                // Method $plus:(Ljava/lang/Object;)Lorg/sireum/HashSet;
        26: putfield      #282                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        29: goto          32
        32: return
      StackMapTable: number_of_entries = 1
        frame_type = 32 /* same */
      LineNumberTable:
        line 89: 0
        line 90: 14
        line 89: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0 $this   Lorg/sireum/HashSet;
            0      33     1   r$3   Lscala/runtime/ObjectRef;
            0      33     2     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      r$3                            final
      e                              final

  public static final java.lang.Object $anonfun$string$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #429                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
         3: aload_0
         4: invokevirtual #431                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.HashSet(org.sireum.HashMap<T, org.sireum.B>);
    descriptor: (Lorg/sireum/HashMap;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #436                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #440                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #443                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #446                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #104                // Field _map:Lorg/sireum/HashMap;
        21: return
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/HashSet;
            0      22     1 __map   Lorg/sireum/HashMap;
    Signature: #432                         // (Lorg/sireum/HashMap<TT;Lorg/sireum/B;>;)V
    MethodParameters:
      Name                           Flags
      __map                          final

  public static final java.lang.Object $anonfun$$plus$plus$1$adapted(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #448                // Method $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         5: getstatic     #454                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$1   Lscala/runtime/ObjectRef;
            0       9     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$1                            final
      e                              final

  public static final java.lang.Object $anonfun$$minus$minus$1$adapted(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #456                // Method $anonfun$$minus$minus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         5: getstatic     #454                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$2   Lscala/runtime/ObjectRef;
            0       9     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$2                            final
      e                              final

  public static final java.lang.Object $anonfun$$u2229$1$adapted(org.sireum.HashSet, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #458                // Method $anonfun$$u2229$1:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         6: getstatic     #454                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 88: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lorg/sireum/HashSet;
            0      10     1   r$3   Lscala/runtime/ObjectRef;
            0      10     2     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      r$3                            final
      e                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #470,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #21= #18 of #20;    // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #24= #23 of #20;          // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #27= #26 of #20;          // Arg=class org/sireum/ST$Arg of class org/sireum/ST
  public static #32= #29 of #31;          // $String$=class org/sireum/Z$$String$ of class org/sireum/Z
  public static #37= #34 of #36;          // $Arrow$=class org/sireum/package$$Arrow$ of class org/sireum/package
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
SourceFile: "HashSet.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t=r!B\u0013\'\u0011\u0003Yc!B\u0017\'\u0011\u0003q\u0003\"B\u001b\u0002\t\u00031\u0004\"B\u001c\u0002\t\u0003A\u0004bBAr\u0003\u0011\u0005\u0011Q\u001d\u0005\b\u0003_\tA\u0011AA{\u0011\u0019y\u0017\u0001\"\u0001\u0003\f!9!\u0011D\u0001\u0005\u0002\tma\u0001B\u0017\'\u0005mB\u0001\u0002\u0011\u0005\u0003\u0002\u0003\u0006I!\u0011\u0005\u0006k!!\tA\u0015\u0005\u0007+\"\u0001\u000b\u0011B!\t\u000bYCA\u0011A,\t\u000baCA\u0011A,\t\u000beCA\u0011\t.\t\u0011\rD\u0001R1A\u0005B\u0011DQ\u0001\u001b\u0005\u0005B%DQa\u001c\u0005\u0005\u0002ADqA\u001d\u0005\u0012\u0002\u0013\u00051\u000f\u0003\u0005\u007f\u0011!\u0015\r\u0011\"\u0011\u0000\u0011\u001d\ty\u0002\u0003C\u0001\u0003CAq!a\f\t\t\u0003\t\t\u0004C\u0004\u0002H!!\t!!\u0013\t\u000f\u0005=\u0003\u0002\"\u0001\u0002R!9\u0011q\f\u0005\u0005\u0002\u0005\u0005\u0004bBA4\u0011\u0011\u0005\u0011\u0011\u000e\u0005\b\u0003cBA\u0011AA:\u0011\u001d\tI\b\u0003C\u0001\u0003wBq!!!\t\t\u0003\t\u0019\tC\u0004\u0002\n\"!\t!a#\t\u000f\u0005E\u0005\u0002\"\u0001\u0002\u0014\"9\u0011\u0011\u0014\u0005\u0005B\u0005m\u0005bBAS\u0011\u0011\u0005\u0011q\u0015\u0005\b\u0003WCA\u0011AAT\u0011\u001d\ty\u000b\u0003C\u0001\u00037Cq!a-\t\t\u0003\t)\fC\u0004\u0002L\"!\t%!4\u0002\u000f!\u000b7\u000f[*fi*\u0011q\u0005K\u0001\u0007g&\u0014X-^7\u000b\u0003%\n1a\u001c:h\u0007\u0001\u0001\"\u0001L\u0001\u000e\u0003\u0019\u0012q\u0001S1tQN+Go\u0005\u0002\u0002_A\u0011\u0001gM\u0007\u0002c)\t!\'A\u0003tG\u0006d\u0017-\u0003\u00025c\t1\u0011I\\=SK\u001a\fa\u0001P5oSRtD#A\u0016\u0002\u000b\u0015l\u0007\u000f^=\u0016\u0007e\ny.F\u0001;!\u0011a\u0003\"!8\u0016\u0005q25c\u0001\u00050{A\u0011AFP\u0005\u0003\u007f\u0019\u00121\u0002R1uCRL\b/Z*jO\u0006)qlX7baB!AF\u0011#P\u0013\t\u0019eEA\u0004ICNDW*\u00199\u0011\u0005\u00153E\u0002\u0001\u0003\u0006\u000f\"\u0011\r\u0001\u0013\u0002\u0002)F\u0011\u0011\n\u0014\t\u0003a)K!aS\u0019\u0003\u000f9{G\u000f[5oOB\u0011\u0001\'T\u0005\u0003\u001dF\u00121!\u00118z!\ta\u0003+\u0003\u0002RM\t\t!\t\u0006\u0002T)B\u0019A\u0006\u0003#\t\u000b\u0001S\u0001\u0019A!\u0002\t}k\u0017\r]\u0001\u0004[\u0006\u0004X#A!\u0002\r\u001d,G/T1q\u0003!!xn\u0015;sS:<G#A.\u0011\u0005q\u000bW\"A/\u000b\u0005y{\u0016\u0001\u00027b]\u001eT\u0011\u0001Y\u0001\u0005U\u00064\u0018-\u0003\u0002c;\n11\u000b\u001e:j]\u001e\f\u0001\u0002[1tQ\u000e{G-Z\u000b\u0002KB\u0011\u0001GZ\u0005\u0003OF\u00121!\u00138u\u0003\u0019)\u0017/^1mgR\u0011!.\u001c\t\u0003a-L!\u0001\\\u0019\u0003\u000f\t{w\u000e\\3b]\")a\u000e\u0005a\u0001\u0019\u0006\tq.A\u0003baBd\u0017\u0010\u0006\u0002Tc\"9a+\u0005I\u0001\u0002\u0004\t\u0015aD1qa2LH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0003QT#!Q;,\u0003Y\u0004\"a\u001e?\u000e\u0003aT!!\u001f>\u0002\u0013Ut7\r[3dW\u0016$\'BA>2\u0003)\tgN\\8uCRLwN\\\u0005\u0003{b\u0014\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u0003!!3m\u001c8uK:$XCAA\u0001!\u0019\t\u0019!a\u0005\u0002\u001a9!\u0011QAA\b\u001d\u0011\t9!!\u0004\u000e\u0005\u0005%!bAA\u0006U\u00051AH]8pizJ\u0011AM\u0005\u0004\u0003#\t\u0014a\u00029bG.\fw-Z\u0005\u0005\u0003+\t9BA\u0002TKFT1!!\u00052!\u0015\u0001\u00141D.M\u0013\r\ti\"\r\u0002\u0007)V\u0004H.\u001a\u001a\u0002\u000b\u0011\u0002H.^:\u0015\u0007M\u000b\u0019\u0003\u0003\u0004\u0002&Q\u0001\r\u0001R\u0001\u0002K\"\u001aA#!\u000b\u0011\u00071\nY#C\u0002\u0002.\u0019\u0012A\u0001];sK\u0006QA\u0005\u001d7vg\u0012\u0002H.^:\u0016\t\u0005M\u0012\u0011\t\u000b\u0004\'\u0006U\u0002bBA\u001c+\u0001\u0007\u0011\u0011H\u0001\u0003SN\u0004b\u0001LA\u001e\u0003\u007f!\u0015bAA\u001fM\t\u0011\u0011j\u0015\t\u0004\u000b\u0006\u0005CABA\"+\t\u0007\u0001JA\u0001JQ\r)\u0012\u0011F\u0001\u0007I5Lg.^:\u0015\u0007M\u000bY\u0005\u0003\u0004\u0002&Y\u0001\r\u0001\u0012\u0015\u0004-\u0005%\u0012\u0001\u0004\u0013nS:,8\u000fJ7j]V\u001cX\u0003BA*\u00037\"2aUA+\u0011\u001d\t9d\u0006a\u0001\u0003/\u0002b\u0001LA\u001e\u00033\"\u0005cA#\u0002\\\u00111\u00111I\fC\u0002!C3aFA\u0015\u0003!\u0019wN\u001c;bS:\u001cHcA(\u0002d!1\u0011Q\u0005\rA\u0002\u0011C3\u0001GA\u0015\u0003\u0015)h.[8o)\r\u0019\u00161\u000e\u0005\u0007\u0003[J\u0002\u0019A*\u0002\u000b=$\b.\u001a:)\u0007e\tI#\u0001\u0004%kJ\u0012$\'\u0011\u000b\u0004\'\u0006U\u0004BBA75\u0001\u00071\u000bK\u0002\u001b\u0003S\t\u0011\"\u001b8uKJ\u001cXm\u0019;\u0015\u0007M\u000bi\b\u0003\u0004\u0002nm\u0001\ra\u0015\u0015\u00047\u0005%\u0012A\u0002\u0013veI\u0012\u0014\bF\u0002T\u0003\u000bCa!!\u001c\u001d\u0001\u0004\u0019\u0006f\u0001\u000f\u0002*\u00059AEY:mCNDGcA*\u0002\u000e\"1\u0011QN\u000fA\u0002MC3!HA\u0015\u0003\u001dI7/R9vC2$2aTAK\u0011\u0019\tiG\ba\u0001\'\"\u001aa$!\u000b\u0002\t!\f7\u000f[\u000b\u0003\u0003;\u00032\u0001LAP\u0013\r\t\tK\n\u0002\u00025\"\u001aq$!\u000b\u0002\u000f%\u001cX)\u001c9usV\tq\nK\u0002!\u0003S\t\u0001B\\8o\u000b6\u0004H/\u001f\u0015\u0004C\u0005%\u0012\u0001B:ju\u0016D3AIA\u0015\u0003!)G.Z7f]R\u001cXCAA\\!\u0015\tI,!0E\u001d\ra\u00131X\u0005\u0004\u0003#1\u0013\u0002BA`\u0003\u0003\u00141!S*[\u0013\u0011\t\u0019-!2\u0003\u0019A\u000b7m[1hKR\u0013\u0018-\u001b;\u000b\u0007\u0005\u001dg%A\u0005%S:$XM\u001d8bY\"\u001a1%!\u000b\u0002\rM$(/\u001b8h+\t\ty\rE\u0002-\u0003#L!A\u0019\u0014)\u0007\u0011\nI\u0003K\u0002\t\u0003/\u00042\u0001LAm\u0013\r\tYN\n\u0002\tI\u0006$\u0018\r^=qKB\u0019Q)a8\u0005\u000b\u001d\u001b!\u0019\u0001%)\u0007\r\tI#A\u0005f[B$\u00180\u00138jiV!\u0011q]Aw)\u0011\tI/a<\u0011\t1B\u00111\u001e\t\u0004\u000b\u00065H!B$\u0005\u0005\u0004A\u0005bBAy\t\u0001\u0007\u0011QT\u0001\u0010S:LG/[1m\u0007\u0006\u0004\u0018mY5us\"\u001aA!!\u000b\u0016\r\u0005](qAA\u007f)\u0011\tI0a@\u0011\t1B\u00111 \t\u0004\u000b\u0006uH!B$\u0006\u0005\u0004A\u0005b\u0002B\u0001\u000b\u0001\u0007!1A\u0001\u0002gB9A&a\u000f\u0003\u0006\u0005m\bcA#\u0003\b\u00111\u00111I\u0003C\u0002!C3!BA\u0015+\u0011\u0011iAa\u0005\u0015\t\t=!Q\u0003\t\u0005Y!\u0011\t\u0002E\u0002F\u0005\'!Qa\u0012\u0004C\u0002!CaA\u0016\u0004A\u0002\t]\u0001#\u0002\u0017C\u0005#y\u0015aB;oCB\u0004H._\u000b\u0005\u0005;\u0011I\u0003\u0006\u0003\u0003 \t-\u0002#\u0002\u0019\u0003\"\t\u0015\u0012b\u0001B\u0012c\t!1k\\7f!\u0015a#Ia\nP!\r)%\u0011\u0006\u0003\u0006\u000f\u001e\u0011\r\u0001\u0013\u0005\u0007]\u001e\u0001\rA!\f\u0011\t1B!q\u0005"
    )
BootstrapMethods:
  0: #270 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #257 (Ljava/lang/Object;)Ljava/lang/Object;
      #262 REF_invokeStatic org/sireum/HashSet.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #257 (Ljava/lang/Object;)Ljava/lang/Object;
      #263 1
  1: #270 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #257 (Ljava/lang/Object;)Ljava/lang/Object;
      #293 REF_invokeStatic org/sireum/HashSet.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #257 (Ljava/lang/Object;)Ljava/lang/Object;
      #263 1
  2: #270 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #257 (Ljava/lang/Object;)Ljava/lang/Object;
      #326 REF_invokeStatic org/sireum/HashSet.$anonfun$$u2229$1$adapted:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #257 (Ljava/lang/Object;)Ljava/lang/Object;
      #263 1
  3: #270 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #257 (Ljava/lang/Object;)Ljava/lang/Object;
      #379 REF_invokeStatic org/sireum/HashSet.$anonfun$string$1:(Ljava/lang/Object;)Ljava/lang/Object;
      #257 (Ljava/lang/Object;)Ljava/lang/Object;
      #263 1
  4: #467 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #293 REF_invokeStatic org/sireum/HashSet.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #262 REF_invokeStatic org/sireum/HashSet.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #326 REF_invokeStatic org/sireum/HashSet.$anonfun$$u2229$1$adapted:(Lorg/sireum/HashSet;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #379 REF_invokeStatic org/sireum/HashSet.$anonfun$string$1:(Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xCC (unknown attribute)
   01 01 00 28 01 A0 01 9C 01 01 22 01 03 01 01 9B
   01 9C 01 01 02 01 03 01 01 A4 01 A5 01 01 42 01
   43 01 01 78 00 E1 01 01 4A 01 2C 01 00 49 00 4A
   01 00 5C 01 98 01 00 5C 00 5D 01 00 28 00 9A 01
   00 99 00 9A 01 00 52 00 53 01 00 58 00 53 01 01
   1E 00 D5 01 01 21 00 F8 01 00 D4 00 D5 01 00 F7
   00 F8 01 01 39 01 2C 01 01 2F 01 2C 01 00 92 00
   93 01 00 8F 00 90 01 00 96 00 65 01 01 27 00 80
   01 01 32 01 33 01 00 7F 00 80 01 00 69 00 65 01
   00 73 00 74 01 00 26 00 70 01 00 6F 00 70 01 01
   38 01 2C 01 01 5A 00 53 01 00 86 00 87 01 00 64
   00 65 01 01 67 00 53 01 01 3C 00 74 01 00 6C 00
   6B 01 00 6A 00 6B 01 01 2B 01 2C 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
