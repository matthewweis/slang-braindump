Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/xml/dtd/impl/Base$Alt$.class
  Last modified May 29, 2022; size 1679 bytes
  SHA-256 checksum cf889941e1e5cf84622aef034ae865a964ff9e409fe2ab0faabd729ef79a65a9
  Compiled from "Base.scala"
public class scala.xml.dtd.impl.Base$Alt$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/xml/dtd/impl/Base$Alt$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 4
Constant pool:
   #1 = Utf8               scala/xml/dtd/impl/Base$Alt$
   #2 = Class              #1             // scala/xml/dtd/impl/Base$Alt$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               Base.scala
   #6 = Utf8               scala/xml/dtd/impl/Base$Alt
   #7 = Class              #6             // scala/xml/dtd/impl/Base$Alt
   #8 = Utf8               scala/xml/dtd/impl/Base
   #9 = Class              #8             // scala/xml/dtd/impl/Base
  #10 = Utf8               Alt
  #11 = Utf8               Alt$
  #12 = Utf8               scala/xml/dtd/impl/Base$RegExp
  #13 = Class              #12            // scala/xml/dtd/impl/Base$RegExp
  #14 = Utf8               RegExp
  #15 = Utf8               $outer
  #16 = Utf8               Lscala/xml/dtd/impl/Base;
  #17 = Utf8               apply
  #18 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/xml/dtd/impl/Base$Alt;
  #19 = Utf8               (Lscala/collection/immutable/Seq<Lscala/xml/dtd/impl/Base$RegExp;>;)Lscala/xml/dtd/impl/Base$Alt;
  #20 = Utf8               rs
  #21 = Utf8               scala/collection/immutable/Seq
  #22 = Class              #21            // scala/collection/immutable/Seq
  #23 = Utf8               size
  #24 = Utf8               ()I
  #25 = NameAndType        #23:#24        // size:()I
  #26 = InterfaceMethodref #22.#25        // scala/collection/immutable/Seq.size:()I
  #27 = Utf8               scala/xml/dtd/impl/SyntaxError
  #28 = Class              #27            // scala/xml/dtd/impl/SyntaxError
  #29 = Utf8               need at least 2 branches in Alt
  #30 = String             #29            // need at least 2 branches in Alt
  #31 = Utf8               <init>
  #32 = Utf8               (Ljava/lang/String;)V
  #33 = NameAndType        #31:#32        // "<init>":(Ljava/lang/String;)V
  #34 = Methodref          #28.#33        // scala/xml/dtd/impl/SyntaxError."<init>":(Ljava/lang/String;)V
  #35 = NameAndType        #15:#16        // $outer:Lscala/xml/dtd/impl/Base;
  #36 = Fieldref           #2.#35         // scala/xml/dtd/impl/Base$Alt$.$outer:Lscala/xml/dtd/impl/Base;
  #37 = Utf8               (Lscala/xml/dtd/impl/Base;Lscala/collection/immutable/Seq;)V
  #38 = NameAndType        #31:#37        // "<init>":(Lscala/xml/dtd/impl/Base;Lscala/collection/immutable/Seq;)V
  #39 = Methodref          #7.#38         // scala/xml/dtd/impl/Base$Alt."<init>":(Lscala/xml/dtd/impl/Base;Lscala/collection/immutable/Seq;)V
  #40 = Utf8               this
  #41 = Utf8               Lscala/xml/dtd/impl/Base$Alt$;
  #42 = Utf8               Lscala/collection/immutable/Seq;
  #43 = Utf8               unapplySeq
  #44 = Utf8               (Lscala/xml/dtd/impl/Base$Alt;)Lscala/Some;
  #45 = Utf8               (Lscala/xml/dtd/impl/Base$Alt;)Lscala/Some<Lscala/collection/immutable/Seq<Lscala/xml/dtd/impl/Base$RegExp;>;>;
  #46 = Utf8               x
  #47 = Utf8               scala/Some
  #48 = Class              #47            // scala/Some
  #49 = Utf8               ()Lscala/collection/immutable/Seq;
  #50 = NameAndType        #20:#49        // rs:()Lscala/collection/immutable/Seq;
  #51 = Methodref          #7.#50         // scala/xml/dtd/impl/Base$Alt.rs:()Lscala/collection/immutable/Seq;
  #52 = Utf8               (Ljava/lang/Object;)V
  #53 = NameAndType        #31:#52        // "<init>":(Ljava/lang/Object;)V
  #54 = Methodref          #48.#53        // scala/Some."<init>":(Ljava/lang/Object;)V
  #55 = Utf8               Lscala/xml/dtd/impl/Base$Alt;
  #56 = Utf8               (Lscala/xml/dtd/impl/Base;)V
  #57 = Utf8               ()V
  #58 = NameAndType        #31:#57        // "<init>":()V
  #59 = Methodref          #4.#58         // java/lang/Object."<init>":()V
  #60 = Utf8               Code
  #61 = Utf8               StackMapTable
  #62 = Utf8               LineNumberTable
  #63 = Utf8               LocalVariableTable
  #64 = Utf8               Signature
  #65 = Utf8               MethodParameters
  #66 = Utf8               InnerClasses
  #67 = Utf8               SourceFile
  #68 = Utf8               ScalaInlineInfo
  #69 = Utf8               Scala
{
  private final scala.xml.dtd.impl.Base $outer;
    descriptor: Lscala/xml/dtd/impl/Base;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public scala.xml.dtd.impl.Base$Alt apply(scala.collection.immutable.Seq<scala.xml.dtd.impl.Base$RegExp>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/xml/dtd/impl/Base$Alt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokeinterface #26,  1           // InterfaceMethod scala/collection/immutable/Seq.size:()I
         6: iconst_2
         7: if_icmpge     20
        10: new           #28                 // class scala/xml/dtd/impl/SyntaxError
        13: dup
        14: ldc           #30                 // String need at least 2 branches in Alt
        16: invokespecial #34                 // Method scala/xml/dtd/impl/SyntaxError."<init>":(Ljava/lang/String;)V
        19: athrow
        20: new           #7                  // class scala/xml/dtd/impl/Base$Alt
        23: dup
        24: aload_0
        25: getfield      #36                 // Field $outer:Lscala/xml/dtd/impl/Base;
        28: aload_1
        29: invokespecial #39                 // Method scala/xml/dtd/impl/Base$Alt."<init>":(Lscala/xml/dtd/impl/Base;Lscala/collection/immutable/Seq;)V
        32: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */
      LineNumberTable:
        line 33: 0
        line 34: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lscala/xml/dtd/impl/Base$Alt$;
            0      33     1    rs   Lscala/collection/immutable/Seq;
    Signature: #19                          // (Lscala/collection/immutable/Seq<Lscala/xml/dtd/impl/Base$RegExp;>;)Lscala/xml/dtd/impl/Base$Alt;
    MethodParameters:
      Name                           Flags
      rs                             final

  public scala.Some<scala.collection.immutable.Seq<scala.xml.dtd.impl.Base$RegExp>> unapplySeq(scala.xml.dtd.impl.Base$Alt);
    descriptor: (Lscala/xml/dtd/impl/Base$Alt;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #48                 // class scala/Some
         3: dup
         4: aload_1
         5: invokevirtual #51                 // Method scala/xml/dtd/impl/Base$Alt.rs:()Lscala/collection/immutable/Seq;
         8: invokespecial #54                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/xml/dtd/impl/Base$Alt$;
            0      12     1     x   Lscala/xml/dtd/impl/Base$Alt;
    Signature: #45                          // (Lscala/xml/dtd/impl/Base$Alt;)Lscala/Some<Lscala/collection/immutable/Seq<Lscala/xml/dtd/impl/Base$RegExp;>;>;
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.xml.dtd.impl.Base$Alt$(scala.xml.dtd.impl.Base);
    descriptor: (Lscala/xml/dtd/impl/Base;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #36                 // Field $outer:Lscala/xml/dtd/impl/Base;
        11: aload_0
        12: invokespecial #59                 // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 30: 0
        line 40: 11
        line 30: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/xml/dtd/impl/Base$Alt$;
            0      16     1 $outer   Lscala/xml/dtd/impl/Base;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
}
InnerClasses:
  public #10= #7 of #9;                   // Alt=class scala/xml/dtd/impl/Base$Alt of class scala/xml/dtd/impl/Base
  public #11= #2 of #9;                   // Alt$=class scala/xml/dtd/impl/Base$Alt$ of class scala/xml/dtd/impl/Base
  public abstract #14= #13 of #9;         // RegExp=class scala/xml/dtd/impl/Base$RegExp of class scala/xml/dtd/impl/Base
SourceFile: "Base.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 1F 00 38 01 00 11 00 12 01 00 2B
   00 2C 01
  Scala: length = 0x0 (unknown attribute)

