Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/os/PathError$InvalidSegment.class
  Last modified May 29, 2022; size 3192 bytes
  SHA-256 checksum 9e6bc5df3623903a469ac8b4f346646f084bf14f039b67c9c0bdddc141fc8342
  Compiled from "Path.scala"
public class os.PathError$InvalidSegment extends java.lang.IllegalArgumentException implements scala.Product
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/PathError$InvalidSegment
  super_class: #4                         // java/lang/IllegalArgumentException
  interfaces: 1, fields: 2, methods: 15, attributes: 4
Constant pool:
    #1 = Utf8               os/PathError$InvalidSegment
    #2 = Class              #1            // os/PathError$InvalidSegment
    #3 = Utf8               java/lang/IllegalArgumentException
    #4 = Class              #3            // java/lang/IllegalArgumentException
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               Path.scala
    #8 = Utf8               os/PathError
    #9 = Class              #8            // os/PathError
   #10 = Utf8               InvalidSegment
   #11 = Utf8               segment
   #12 = Utf8               Ljava/lang/String;
   #13 = Utf8               msg
   #14 = Utf8               productElementNames
   #15 = Utf8               ()Lscala/collection/Iterator;
   #16 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #17 = Utf8               productElementNames$
   #18 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #19 = NameAndType        #17:#18       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #20 = InterfaceMethodref #6.#19        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #21 = Utf8               this
   #22 = Utf8               Los/PathError$InvalidSegment;
   #23 = Utf8               ()Ljava/lang/String;
   #24 = NameAndType        #11:#12       // segment:Ljava/lang/String;
   #25 = Fieldref           #2.#24        // os/PathError$InvalidSegment.segment:Ljava/lang/String;
   #26 = NameAndType        #13:#12       // msg:Ljava/lang/String;
   #27 = Fieldref           #2.#26        // os/PathError$InvalidSegment.msg:Ljava/lang/String;
   #28 = Utf8               copy
   #29 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Los/PathError$InvalidSegment;
   #30 = Utf8               <init>
   #31 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
   #32 = NameAndType        #30:#31       // "<init>":(Ljava/lang/String;Ljava/lang/String;)V
   #33 = Methodref          #2.#32        // os/PathError$InvalidSegment."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   #34 = Utf8               copy$default$1
   #35 = NameAndType        #11:#23       // segment:()Ljava/lang/String;
   #36 = Methodref          #2.#35        // os/PathError$InvalidSegment.segment:()Ljava/lang/String;
   #37 = Utf8               copy$default$2
   #38 = NameAndType        #13:#23       // msg:()Ljava/lang/String;
   #39 = Methodref          #2.#38        // os/PathError$InvalidSegment.msg:()Ljava/lang/String;
   #40 = Utf8               productPrefix
   #41 = String             #10           // InvalidSegment
   #42 = Utf8               productArity
   #43 = Utf8               ()I
   #44 = Utf8               productElement
   #45 = Utf8               (I)Ljava/lang/Object;
   #46 = Utf8               x$1
   #47 = Utf8               scala/runtime/Statics
   #48 = Class              #47           // scala/runtime/Statics
   #49 = Utf8               ioobe
   #50 = NameAndType        #49:#45       // ioobe:(I)Ljava/lang/Object;
   #51 = Methodref          #48.#50       // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
   #52 = Utf8               I
   #53 = Utf8               java/lang/Object
   #54 = Class              #53           // java/lang/Object
   #55 = Utf8               productIterator
   #56 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #57 = Utf8               scala/runtime/ScalaRunTime$
   #58 = Class              #57           // scala/runtime/ScalaRunTime$
   #59 = Utf8               MODULE$
   #60 = Utf8               Lscala/runtime/ScalaRunTime$;
   #61 = NameAndType        #59:#60       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #62 = Fieldref           #58.#61       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #63 = Utf8               typedProductIterator
   #64 = NameAndType        #63:#18       // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #65 = Methodref          #58.#64       // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #66 = Utf8               canEqual
   #67 = Utf8               (Ljava/lang/Object;)Z
   #68 = Utf8               Ljava/lang/Object;
   #69 = Utf8               productElementName
   #70 = Utf8               (I)Ljava/lang/String;
   #71 = String             #11           // segment
   #72 = String             #13           // msg
   #73 = Utf8               java/lang/String
   #74 = Class              #73           // java/lang/String
   #75 = Utf8               hashCode
   #76 = Utf8               _hashCode
   #77 = Utf8               (Lscala/Product;)I
   #78 = NameAndType        #76:#77       // _hashCode:(Lscala/Product;)I
   #79 = Methodref          #58.#78       // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   #80 = Utf8               equals
   #81 = NameAndType        #80:#67       // equals:(Ljava/lang/Object;)Z
   #82 = Methodref          #54.#81       // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #83 = NameAndType        #66:#67       // canEqual:(Ljava/lang/Object;)Z
   #84 = Methodref          #2.#83        // os/PathError$InvalidSegment.canEqual:(Ljava/lang/Object;)Z
   #85 = Utf8               os/PathError$
   #86 = Class              #85           // os/PathError$
   #87 = Utf8               Los/PathError$;
   #88 = NameAndType        #59:#87       // MODULE$:Los/PathError$;
   #89 = Fieldref           #86.#88       // os/PathError$.MODULE$:Los/PathError$;
   #90 = Utf8               os$PathError$$errorMsg
   #91 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #92 = NameAndType        #90:#91       // os$PathError$$errorMsg:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #93 = Methodref          #86.#92       // os/PathError$.os$PathError$$errorMsg:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #94 = Utf8               (Ljava/lang/String;)V
   #95 = NameAndType        #30:#94       // "<init>":(Ljava/lang/String;)V
   #96 = Methodref          #4.#95        // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #97 = Utf8               $init$
   #98 = Utf8               (Lscala/Product;)V
   #99 = NameAndType        #97:#98       // $init$:(Lscala/Product;)V
  #100 = InterfaceMethodref #6.#99        // scala/Product.$init$:(Lscala/Product;)V
  #101 = Utf8               Code
  #102 = Utf8               LineNumberTable
  #103 = Utf8               LocalVariableTable
  #104 = Utf8               Signature
  #105 = Utf8               MethodParameters
  #106 = Utf8               StackMapTable
  #107 = Utf8               InnerClasses
  #108 = Utf8               SourceFile
  #109 = Utf8               ScalaInlineInfo
  #110 = Utf8               Scala
{
  private final java.lang.String segment;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String msg;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #20                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/PathError$InvalidSegment;
    Signature: #16                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.lang.String segment();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #25                 // Field segment:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/PathError$InvalidSegment;

  public java.lang.String msg();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #27                 // Field msg:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/PathError$InvalidSegment;

  public os.PathError$InvalidSegment copy(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Los/PathError$InvalidSegment;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class os/PathError$InvalidSegment
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #33                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
         9: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Los/PathError$InvalidSegment;
            0      10     1 segment   Ljava/lang/String;
            0      10     2   msg   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      segment                        final
      msg                            final

  public java.lang.String copy$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #36                 // Method segment:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/PathError$InvalidSegment;

  public java.lang.String copy$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #39                 // Method msg:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/PathError$InvalidSegment;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #41                 // String InvalidSegment
         2: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Los/PathError$InvalidSegment;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/PathError$InvalidSegment;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 38
            }
        24: aload_0
        25: invokevirtual #36                 // Method segment:()Ljava/lang/String;
        28: goto          45
        31: aload_0
        32: invokevirtual #39                 // Method msg:()Ljava/lang/String;
        35: goto          45
        38: iload_1
        39: invokestatic  #51                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        42: goto          45
        45: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Los/PathError$InvalidSegment;
            0      46     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #62                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #65                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/PathError$InvalidSegment;
    Signature: #56                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class os/PathError$InvalidSegment
         4: ireturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/PathError$InvalidSegment;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 29
                 default: 34
            }
        24: ldc           #71                 // String segment
        26: goto          44
        29: ldc           #72                 // String msg
        31: goto          44
        34: iload_1
        35: invokestatic  #51                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        38: checkcast     #74                 // class java/lang/String
        41: goto          44
        44: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Los/PathError$InvalidSegment;
            0      45     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #62                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #79                 // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/PathError$InvalidSegment;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     118
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class os/PathError$InvalidSegment
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          122
        31: aload_1
        32: checkcast     #2                  // class os/PathError$InvalidSegment
        35: astore        4
        37: aload_0
        38: invokevirtual #36                 // Method segment:()Ljava/lang/String;
        41: aload         4
        43: invokevirtual #36                 // Method segment:()Ljava/lang/String;
        46: astore        5
        48: dup
        49: ifnonnull     61
        52: pop
        53: aload         5
        55: ifnull        69
        58: goto          114
        61: aload         5
        63: invokevirtual #82                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        66: ifeq          114
        69: aload_0
        70: invokevirtual #39                 // Method msg:()Ljava/lang/String;
        73: aload         4
        75: invokevirtual #39                 // Method msg:()Ljava/lang/String;
        78: astore        6
        80: dup
        81: ifnonnull     93
        84: pop
        85: aload         6
        87: ifnull        101
        90: goto          114
        93: aload         6
        95: invokevirtual #82                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        98: ifeq          114
       101: aload         4
       103: aload_0
       104: invokevirtual #84                 // Method canEqual:(Ljava/lang/Object;)Z
       107: ifeq          114
       110: iconst_1
       111: goto          115
       114: iconst_0
       115: ifeq          122
       118: iconst_1
       119: goto          123
       122: iconst_0
       123: ireturn
      StackMapTable: number_of_entries = 12
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class os/PathError$InvalidSegment, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class os/PathError$InvalidSegment, class java/lang/Object, int, class java/lang/Object, class os/PathError$InvalidSegment, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class os/PathError$InvalidSegment, class java/lang/Object, int, class java/lang/Object, class os/PathError$InvalidSegment, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class os/PathError$InvalidSegment, class java/lang/Object ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class os/PathError$InvalidSegment, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     124     0  this   Los/PathError$InvalidSegment;
            0     124     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public os.PathError$InvalidSegment(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #25                 // Field segment:Ljava/lang/String;
         5: aload_0
         6: aload_2
         7: putfield      #27                 // Field msg:Ljava/lang/String;
        10: aload_0
        11: getstatic     #89                 // Field os/PathError$.MODULE$:Los/PathError$;
        14: aload_1
        15: aload_2
        16: invokevirtual #93                 // Method os/PathError$.os$PathError$$errorMsg:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        19: invokespecial #96                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        22: aload_0
        23: invokestatic  #100                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        26: return
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Los/PathError$InvalidSegment;
            0      27     1 segment   Ljava/lang/String;
            0      27     2   msg   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      segment                        final
      msg                            final
}
InnerClasses:
  public static #10= #2 of #9;            // InvalidSegment=class os/PathError$InvalidSegment of class os/PathError
SourceFile: "Path.scala"
  ScalaInlineInfo: length = 0x4F (unknown attribute)
   01 00 00 0F 00 1E 00 1F 00 00 42 00 43 00 00 1C
   00 1D 00 00 22 00 17 00 00 25 00 17 00 00 50 00
   43 00 00 4B 00 2B 00 00 0D 00 17 00 00 2A 00 2B
   00 00 2C 00 2D 00 00 45 00 46 00 00 0E 00 0F 00
   00 37 00 0F 00 00 28 00 17 00 00 0B 00 17 00
  Scala: length = 0x0 (unknown attribute)

