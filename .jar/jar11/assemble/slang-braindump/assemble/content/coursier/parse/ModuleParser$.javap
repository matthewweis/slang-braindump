Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/parse/ModuleParser$.class
  Last modified May 29, 2022; size 11773 bytes
  SHA-256 checksum 925e8c05fc7ba3e4420e609384881dd3b224009b6be4d7402b6df9b7be65f54f
  Compiled from "ModuleParser.scala"
public final class coursier.parse.ModuleParser$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/parse/ModuleParser$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 16, attributes: 5
Constant pool:
    #1 = Utf8               coursier/parse/ModuleParser$
    #2 = Class              #1            // coursier/parse/ModuleParser$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               ModuleParser.scala
    #6 = Utf8               coursier/parse/JavaOrScalaModule$JavaModule
    #7 = Class              #6            // coursier/parse/JavaOrScalaModule$JavaModule
    #8 = Utf8               coursier/parse/JavaOrScalaModule
    #9 = Class              #8            // coursier/parse/JavaOrScalaModule
   #10 = Utf8               JavaModule
   #11 = Utf8               coursier/parse/JavaOrScalaModule$JavaModule$
   #12 = Class              #11           // coursier/parse/JavaOrScalaModule$JavaModule$
   #13 = Utf8
   #14 = Utf8               coursier/parse/JavaOrScalaModule$ScalaModule
   #15 = Class              #14           // coursier/parse/JavaOrScalaModule$ScalaModule
   #16 = Utf8               ScalaModule
   #17 = Utf8               coursier/parse/JavaOrScalaModule$ScalaModule$
   #18 = Class              #17           // coursier/parse/JavaOrScalaModule$ScalaModule$
   #19 = Utf8               coursier/util/Traverse$TraverseOps
   #20 = Class              #19           // coursier/util/Traverse$TraverseOps
   #21 = Utf8               coursier/util/Traverse
   #22 = Class              #21           // coursier/util/Traverse
   #23 = Utf8               TraverseOps
   #24 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #25 = Class              #24           // java/lang/invoke/MethodHandles$Lookup
   #26 = Utf8               java/lang/invoke/MethodHandles
   #27 = Class              #26           // java/lang/invoke/MethodHandles
   #28 = Utf8               Lookup
   #29 = Utf8               scala/Array$UnapplySeqWrapper
   #30 = Class              #29           // scala/Array$UnapplySeqWrapper
   #31 = Utf8               scala/Array
   #32 = Class              #31           // scala/Array
   #33 = Utf8               UnapplySeqWrapper
   #34 = Utf8               scala/Array$UnapplySeqWrapper$
   #35 = Class              #34           // scala/Array$UnapplySeqWrapper$
   #36 = Utf8               scala/Predef$ArrowAssoc$
   #37 = Class              #36           // scala/Predef$ArrowAssoc$
   #38 = Utf8               scala/Predef
   #39 = Class              #38           // scala/Predef
   #40 = Utf8               scala/collection/mutable/ArraySeq$ofRef
   #41 = Class              #40           // scala/collection/mutable/ArraySeq$ofRef
   #42 = Utf8               scala/collection/mutable/ArraySeq
   #43 = Class              #42           // scala/collection/mutable/ArraySeq
   #44 = Utf8               ofRef
   #45 = Utf8               MODULE$
   #46 = Utf8               Lcoursier/parse/ModuleParser$;
   #47 = Utf8               <clinit>
   #48 = Utf8               ()V
   #49 = Utf8               <init>
   #50 = NameAndType        #49:#48       // "<init>":()V
   #51 = Methodref          #2.#50        // coursier/parse/ModuleParser$."<init>":()V
   #52 = NameAndType        #45:#46       // MODULE$:Lcoursier/parse/ModuleParser$;
   #53 = Fieldref           #2.#52        // coursier/parse/ModuleParser$.MODULE$:Lcoursier/parse/ModuleParser$;
   #54 = Utf8               javaOrScalaModule
   #55 = Utf8               (Ljava/lang/String;)Lscala/util/Either;
   #56 = Utf8               (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;>;
   #57 = Utf8               s
   #58 = Utf8               :
   #59 = String             #58           // :
   #60 = Utf8               java/lang/String
   #61 = Class              #60           // java/lang/String
   #62 = Utf8               split
   #63 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;
   #64 = NameAndType        #62:#63       // split:(Ljava/lang/String;I)[Ljava/lang/String;
   #65 = Methodref          #61.#64       // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
   #66 = Utf8               scala/Array$
   #67 = Class              #66           // scala/Array$
   #68 = Utf8               Lscala/Array$;
   #69 = NameAndType        #45:#68       // MODULE$:Lscala/Array$;
   #70 = Fieldref           #67.#69       // scala/Array$.MODULE$:Lscala/Array$;
   #71 = Utf8               unapplySeq
   #72 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #73 = NameAndType        #71:#72       // unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
   #74 = Methodref          #67.#73       // scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
   #75 = Utf8               Lscala/Array$UnapplySeqWrapper$;
   #76 = NameAndType        #45:#75       // MODULE$:Lscala/Array$UnapplySeqWrapper$;
   #77 = Fieldref           #35.#76       // scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
   #78 = Utf8               isEmpty$extension
   #79 = Utf8               (Ljava/lang/Object;)Z
   #80 = NameAndType        #78:#79       // isEmpty$extension:(Ljava/lang/Object;)Z
   #81 = Methodref          #35.#80       // scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
   #82 = Utf8               get$extension
   #83 = NameAndType        #82:#72       // get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
   #84 = Methodref          #35.#83       // scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
   #85 = Utf8               (Ljava/lang/Object;)V
   #86 = NameAndType        #49:#85       // "<init>":(Ljava/lang/Object;)V
   #87 = Methodref          #30.#86       // scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
   #88 = Utf8               lengthCompare$extension
   #89 = Utf8               (Ljava/lang/Object;I)I
   #90 = NameAndType        #88:#89       // lengthCompare$extension:(Ljava/lang/Object;I)I
   #91 = Methodref          #35.#90       // scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
   #92 = Utf8               apply$extension
   #93 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
   #94 = NameAndType        #92:#93       // apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
   #95 = Methodref          #35.#94       // scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
   #96 = Utf8               scala/package$
   #97 = Class              #96           // scala/package$
   #98 = Utf8               Lscala/package$;
   #99 = NameAndType        #45:#98       // MODULE$:Lscala/package$;
  #100 = Fieldref           #97.#99       // scala/package$.MODULE$:Lscala/package$;
  #101 = Utf8               Right
  #102 = Utf8               ()Lscala/util/Right$;
  #103 = NameAndType        #101:#102     // Right:()Lscala/util/Right$;
  #104 = Methodref          #97.#103      // scala/package$.Right:()Lscala/util/Right$;
  #105 = Utf8               scala/Tuple3
  #106 = Class              #105          // scala/Tuple3
  #107 = Utf8               coursier/core/Organization
  #108 = Class              #107          // coursier/core/Organization
  #109 = Utf8               (Ljava/lang/String;)V
  #110 = NameAndType        #49:#109      // "<init>":(Ljava/lang/String;)V
  #111 = Methodref          #108.#110     // coursier/core/Organization."<init>":(Ljava/lang/String;)V
  #112 = Utf8               scala/None$
  #113 = Class              #112          // scala/None$
  #114 = Utf8               Lscala/None$;
  #115 = NameAndType        #45:#114      // MODULE$:Lscala/None$;
  #116 = Fieldref           #113.#115     // scala/None$.MODULE$:Lscala/None$;
  #117 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #118 = NameAndType        #49:#117      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #119 = Methodref          #106.#118     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #120 = Utf8               scala/util/Right$
  #121 = Class              #120          // scala/util/Right$
  #122 = Utf8               apply
  #123 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #124 = NameAndType        #122:#123     // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #125 = Methodref          #121.#124     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #126 = Utf8               [Ljava/lang/String;
  #127 = Class              #126          // "[Ljava/lang/String;"
  #128 = String             #13           //
  #129 = Utf8               equals
  #130 = NameAndType        #129:#79      // equals:(Ljava/lang/Object;)Z
  #131 = Methodref          #4.#130       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #132 = Utf8               scala/Some
  #133 = Class              #132          // scala/Some
  #134 = Utf8               scala/runtime/BoxesRunTime
  #135 = Class              #134          // scala/runtime/BoxesRunTime
  #136 = Utf8               boxToBoolean
  #137 = Utf8               (Z)Ljava/lang/Boolean;
  #138 = NameAndType        #136:#137     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #139 = Methodref          #135.#138     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #140 = Methodref          #133.#86      // scala/Some."<init>":(Ljava/lang/Object;)V
  #141 = Utf8               Left
  #142 = Utf8               ()Lscala/util/Left$;
  #143 = NameAndType        #141:#142     // Left:()Lscala/util/Left$;
  #144 = Methodref          #97.#143      // scala/package$.Left:()Lscala/util/Left$;
  #145 = Utf8               java/lang/StringBuilder
  #146 = Class              #145          // java/lang/StringBuilder
  #147 = Integer            18
  #148 = Utf8               (I)V
  #149 = NameAndType        #49:#148      // "<init>":(I)V
  #150 = Methodref          #146.#149     // java/lang/StringBuilder."<init>":(I)V
  #151 = Utf8               malformed module:
  #152 = String             #151          // malformed module:
  #153 = Utf8               append
  #154 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #155 = NameAndType        #153:#154     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #156 = Methodref          #146.#155     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #157 = Utf8               toString
  #158 = Utf8               ()Ljava/lang/String;
  #159 = NameAndType        #157:#158     // toString:()Ljava/lang/String;
  #160 = Methodref          #146.#159     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #161 = Utf8               scala/util/Left$
  #162 = Class              #161          // scala/util/Left$
  #163 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #164 = NameAndType        #122:#163     // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #165 = Methodref          #162.#164     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #166 = Utf8               scala/util/Either
  #167 = Class              #166          // scala/util/Either
  #168 = MethodType         #72           //  (Ljava/lang/Object;)Ljava/lang/Object;
  #169 = Utf8               $anonfun$javaOrScalaModule$1
  #170 = Utf8               (Ljava/lang/String;Lscala/Tuple3;)Lscala/util/Either;
  #171 = NameAndType        #169:#170     // $anonfun$javaOrScalaModule$1:(Ljava/lang/String;Lscala/Tuple3;)Lscala/util/Either;
  #172 = Methodref          #2.#171       // coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$1:(Ljava/lang/String;Lscala/Tuple3;)Lscala/util/Either;
  #173 = MethodHandle       6:#172        // REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$1:(Ljava/lang/String;Lscala/Tuple3;)Lscala/util/Either;
  #174 = Utf8               (Lscala/Tuple3;)Lscala/util/Either;
  #175 = MethodType         #174          //  (Lscala/Tuple3;)Lscala/util/Either;
  #176 = Integer            5
  #177 = Integer            1
  #178 = Utf8               java/lang/invoke/LambdaMetafactory
  #179 = Class              #178          // java/lang/invoke/LambdaMetafactory
  #180 = Utf8               altMetafactory
  #181 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #182 = NameAndType        #180:#181     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #183 = Methodref          #179.#182     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #184 = MethodHandle       6:#183        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #185 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #186 = NameAndType        #122:#185     // apply:(Ljava/lang/String;)Lscala/Function1;
  #187 = InvokeDynamic      #0:#186       // #0:apply:(Ljava/lang/String;)Lscala/Function1;
  #188 = Utf8               flatMap
  #189 = Utf8               (Lscala/Function1;)Lscala/util/Either;
  #190 = NameAndType        #188:#189     // flatMap:(Lscala/Function1;)Lscala/util/Either;
  #191 = Methodref          #167.#190     // scala/util/Either.flatMap:(Lscala/Function1;)Lscala/util/Either;
  #192 = Utf8               org
  #193 = Utf8               Ljava/lang/String;
  #194 = Utf8               rawName
  #195 = Utf8               parts
  #196 = Utf8               values
  #197 = Utf8               Lscala/util/Either;
  #198 = Utf8               this
  #199 = Utf8               module
  #200 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
  #201 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/core/Module;>;
  #202 = Utf8               defaultScalaVersion
  #203 = NameAndType        #54:#55       // javaOrScalaModule:(Ljava/lang/String;)Lscala/util/Either;
  #204 = Methodref          #2.#203       // coursier/parse/ModuleParser$.javaOrScalaModule:(Ljava/lang/String;)Lscala/util/Either;
  #205 = Utf8               $anonfun$module$1
  #206 = Utf8               (Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  #207 = NameAndType        #205:#206     // $anonfun$module$1:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  #208 = Methodref          #2.#207       // coursier/parse/ModuleParser$.$anonfun$module$1:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  #209 = MethodHandle       6:#208        // REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$module$1:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  #210 = Utf8               (Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  #211 = MethodType         #210          //  (Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  #212 = InvokeDynamic      #1:#186       // #1:apply:(Ljava/lang/String;)Lscala/Function1;
  #213 = Utf8               map
  #214 = NameAndType        #213:#189     // map:(Lscala/Function1;)Lscala/util/Either;
  #215 = Methodref          #167.#214     // scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
  #216 = Utf8               javaOrScalaModules
  #217 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
  #218 = Utf8               (Lscala/collection/immutable/Seq<Ljava/lang/String;>;)Lcoursier/util/ValidationNel<Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/parse/JavaOrScalaModule;>;>;
  #219 = Utf8               inputs
  #220 = Utf8               coursier/util/Traverse$
  #221 = Class              #220          // coursier/util/Traverse$
  #222 = Utf8               Lcoursier/util/Traverse$;
  #223 = NameAndType        #45:#222      // MODULE$:Lcoursier/util/Traverse$;
  #224 = Fieldref           #221.#223     // coursier/util/Traverse$.MODULE$:Lcoursier/util/Traverse$;
  #225 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
  #226 = NameAndType        #23:#225      // TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
  #227 = Methodref          #221.#226     // coursier/util/Traverse$.TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
  #228 = Utf8               $anonfun$javaOrScalaModules$1
  #229 = Utf8               (Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #230 = NameAndType        #228:#229     // $anonfun$javaOrScalaModules$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #231 = Methodref          #2.#230       // coursier/parse/ModuleParser$.$anonfun$javaOrScalaModules$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #232 = MethodHandle       6:#231        // REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModules$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #233 = MethodType         #229          //  (Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #234 = Utf8               ()Lscala/Function1;
  #235 = NameAndType        #122:#234     // apply:()Lscala/Function1;
  #236 = InvokeDynamic      #2:#235       // #2:apply:()Lscala/Function1;
  #237 = Utf8               validationNelTraverse
  #238 = Utf8               (Lscala/Function1;)Lcoursier/util/ValidationNel;
  #239 = NameAndType        #237:#238     // validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #240 = Methodref          #20.#239      // coursier/util/Traverse$TraverseOps.validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #241 = Utf8               Lscala/collection/immutable/Seq;
  #242 = Utf8               modules
  #243 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #244 = Utf8               (Lscala/collection/immutable/Seq<Ljava/lang/String;>;Ljava/lang/String;)Lcoursier/util/ValidationNel<Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;>;
  #245 = NameAndType        #216:#217     // javaOrScalaModules:(Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
  #246 = Methodref          #2.#245       // coursier/parse/ModuleParser$.javaOrScalaModules:(Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
  #247 = Utf8               $anonfun$modules$1
  #248 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #249 = NameAndType        #247:#248     // $anonfun$modules$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #250 = Methodref          #2.#249       // coursier/parse/ModuleParser$.$anonfun$modules$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #251 = MethodHandle       6:#250        // REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$modules$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #252 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #253 = MethodType         #252          //  (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #254 = InvokeDynamic      #3:#186       // #3:apply:(Ljava/lang/String;)Lscala/Function1;
  #255 = Utf8               coursier/util/ValidationNel
  #256 = Class              #255          // coursier/util/ValidationNel
  #257 = NameAndType        #213:#238     // map:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #258 = Methodref          #256.#257     // coursier/util/ValidationNel.map:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #259 = Utf8               $anonfun$javaOrScalaModule$2
  #260 = Utf8               (Ljava/lang/String;)Z
  #261 = Utf8               x$1
  #262 = Utf8               =
  #263 = String             #262          // =
  #264 = Utf8               contains
  #265 = Utf8               (Ljava/lang/CharSequence;)Z
  #266 = NameAndType        #264:#265     // contains:(Ljava/lang/CharSequence;)Z
  #267 = Methodref          #61.#266      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z
  #268 = Utf8               $anonfun$javaOrScalaModule$3
  #269 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;
  #270 = Utf8               x$2
  #271 = Utf8               $anonfun$javaOrScalaModule$4
  #272 = Utf8               ([Ljava/lang/String;)Lscala/Tuple2;
  #273 = Utf8               x0$2
  #274 = Utf8               Lscala/Predef$ArrowAssoc$;
  #275 = NameAndType        #45:#274      // MODULE$:Lscala/Predef$ArrowAssoc$;
  #276 = Fieldref           #37.#275      // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #277 = Utf8               scala/Predef$
  #278 = Class              #277          // scala/Predef$
  #279 = Utf8               Lscala/Predef$;
  #280 = NameAndType        #45:#279      // MODULE$:Lscala/Predef$;
  #281 = Fieldref           #278.#280     // scala/Predef$.MODULE$:Lscala/Predef$;
  #282 = Utf8               ArrowAssoc
  #283 = NameAndType        #282:#72      // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #284 = Methodref          #278.#283     // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #285 = Utf8               $minus$greater$extension
  #286 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #287 = NameAndType        #285:#286     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #288 = Methodref          #37.#287      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #289 = Utf8               scala/MatchError
  #290 = Class              #289          // scala/MatchError
  #291 = Methodref          #290.#86      // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #292 = Utf8               scala/Tuple2
  #293 = Class              #292          // scala/Tuple2
  #294 = Utf8               key
  #295 = Utf8               value
  #296 = Utf8               s$1
  #297 = Utf8               x0$1
  #298 = Utf8               _1
  #299 = Utf8               ()Ljava/lang/Object;
  #300 = NameAndType        #298:#299     // _1:()Ljava/lang/Object;
  #301 = Methodref          #106.#300     // scala/Tuple3._1:()Ljava/lang/Object;
  #302 = NameAndType        #295:#158     // value:()Ljava/lang/String;
  #303 = Methodref          #108.#302     // coursier/core/Organization.value:()Ljava/lang/String;
  #304 = Utf8               _2
  #305 = NameAndType        #304:#299     // _2:()Ljava/lang/Object;
  #306 = Methodref          #106.#305     // scala/Tuple3._2:()Ljava/lang/Object;
  #307 = Utf8               _3
  #308 = NameAndType        #307:#299     // _3:()Ljava/lang/Object;
  #309 = Methodref          #106.#308     // scala/Tuple3._3:()Ljava/lang/Object;
  #310 = Utf8               scala/Option
  #311 = Class              #310          // scala/Option
  #312 = Utf8               scala/collection/StringOps$
  #313 = Class              #312          // scala/collection/StringOps$
  #314 = Utf8               Lscala/collection/StringOps$;
  #315 = NameAndType        #45:#314      // MODULE$:Lscala/collection/StringOps$;
  #316 = Fieldref           #313.#315     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #317 = Utf8               augmentString
  #318 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #319 = NameAndType        #317:#318     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #320 = Methodref          #278.#319     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #321 = Utf8               split$extension
  #322 = Utf8               (Ljava/lang/String;C)[Ljava/lang/String;
  #323 = NameAndType        #321:#322     // split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
  #324 = Methodref          #313.#323     // scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
  #325 = Utf8               scala/collection/ArrayOps$
  #326 = Class              #325          // scala/collection/ArrayOps$
  #327 = Utf8               Lscala/collection/ArrayOps$;
  #328 = NameAndType        #45:#327      // MODULE$:Lscala/collection/ArrayOps$;
  #329 = Fieldref           #326.#328     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #330 = Utf8               [Ljava/lang/Object;
  #331 = Class              #330          // "[Ljava/lang/Object;"
  #332 = Utf8               refArrayOps
  #333 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #334 = NameAndType        #332:#333     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #335 = Methodref          #278.#334     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #336 = Utf8               tail$extension
  #337 = NameAndType        #336:#72      // tail$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #338 = Methodref          #326.#337     // scala/collection/ArrayOps$.tail$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #339 = Utf8               $anonfun$javaOrScalaModule$2$adapted
  #340 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #341 = NameAndType        #339:#340     // $anonfun$javaOrScalaModule$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #342 = Methodref          #2.#341       // coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #343 = MethodHandle       6:#342        // REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #344 = MethodType         #340          //  (Ljava/lang/String;)Ljava/lang/Object;
  #345 = InvokeDynamic      #4:#235       // #4:apply:()Lscala/Function1;
  #346 = Utf8               exists$extension
  #347 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Z
  #348 = NameAndType        #346:#347     // exists$extension:(Ljava/lang/Object;Lscala/Function1;)Z
  #349 = Methodref          #326.#348     // scala/collection/ArrayOps$.exists$extension:(Ljava/lang/Object;Lscala/Function1;)Z
  #350 = Integer            26
  #351 = Utf8               malformed attribute(s) in
  #352 = String             #351          // malformed attribute(s) in
  #353 = Utf8               head$extension
  #354 = NameAndType        #353:#72      // head$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #355 = Methodref          #326.#354     // scala/collection/ArrayOps$.head$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #356 = NameAndType        #268:#269     // $anonfun$javaOrScalaModule$3:(Ljava/lang/String;)[Ljava/lang/String;
  #357 = Methodref          #2.#356       // coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$3:(Ljava/lang/String;)[Ljava/lang/String;
  #358 = MethodHandle       6:#357        // REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$3:(Ljava/lang/String;)[Ljava/lang/String;
  #359 = MethodType         #269          //  (Ljava/lang/String;)[Ljava/lang/String;
  #360 = InvokeDynamic      #5:#235       // #5:apply:()Lscala/Function1;
  #361 = Utf8               scala/reflect/ClassTag$
  #362 = Class              #361          // scala/reflect/ClassTag$
  #363 = Utf8               Lscala/reflect/ClassTag$;
  #364 = NameAndType        #45:#363      // MODULE$:Lscala/reflect/ClassTag$;
  #365 = Fieldref           #362.#364     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #366 = Utf8               scala/runtime/ScalaRunTime$
  #367 = Class              #366          // scala/runtime/ScalaRunTime$
  #368 = Utf8               Lscala/runtime/ScalaRunTime$;
  #369 = NameAndType        #45:#368      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #370 = Fieldref           #367.#369     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #371 = Utf8               arrayClass
  #372 = Utf8               (Ljava/lang/Class;)Ljava/lang/Class;
  #373 = NameAndType        #371:#372     // arrayClass:(Ljava/lang/Class;)Ljava/lang/Class;
  #374 = Methodref          #367.#373     // scala/runtime/ScalaRunTime$.arrayClass:(Ljava/lang/Class;)Ljava/lang/Class;
  #375 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #376 = NameAndType        #122:#375     // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #377 = Methodref          #362.#376     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #378 = Utf8               map$extension
  #379 = Utf8               (Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #380 = NameAndType        #378:#379     // map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #381 = Methodref          #326.#380     // scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #382 = NameAndType        #271:#272     // $anonfun$javaOrScalaModule$4:([Ljava/lang/String;)Lscala/Tuple2;
  #383 = Methodref          #2.#382       // coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$4:([Ljava/lang/String;)Lscala/Tuple2;
  #384 = MethodHandle       6:#383        // REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$4:([Ljava/lang/String;)Lscala/Tuple2;
  #385 = MethodType         #272          //  ([Ljava/lang/String;)Lscala/Tuple2;
  #386 = InvokeDynamic      #6:#235       // #6:apply:()Lscala/Function1;
  #387 = Utf8               wrapRefArray
  #388 = Utf8               ([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #389 = NameAndType        #387:#388     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #390 = Methodref          #278.#389     // scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #391 = Utf8               scala/$less$colon$less$
  #392 = Class              #391          // scala/$less$colon$less$
  #393 = Utf8               Lscala/$less$colon$less$;
  #394 = NameAndType        #45:#393      // MODULE$:Lscala/$less$colon$less$;
  #395 = Fieldref           #392.#394     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #396 = Utf8               refl
  #397 = Utf8               ()Lscala/$eq$colon$eq;
  #398 = NameAndType        #396:#397     // refl:()Lscala/$eq$colon$eq;
  #399 = Methodref          #392.#398     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #400 = Utf8               toMap
  #401 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #402 = NameAndType        #400:#401     // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #403 = Methodref          #41.#402      // scala/collection/mutable/ArraySeq$ofRef.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #404 = Utf8               coursier/core/Module$
  #405 = Class              #404          // coursier/core/Module$
  #406 = Utf8               Lcoursier/core/Module$;
  #407 = NameAndType        #45:#406      // MODULE$:Lcoursier/core/Module$;
  #408 = Fieldref           #405.#407     // coursier/core/Module$.MODULE$:Lcoursier/core/Module$;
  #409 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
  #410 = NameAndType        #122:#409     // apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
  #411 = Methodref          #405.#410     // coursier/core/Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
  #412 = Utf8               Lcoursier/parse/JavaOrScalaModule$JavaModule$;
  #413 = NameAndType        #45:#412      // MODULE$:Lcoursier/parse/JavaOrScalaModule$JavaModule$;
  #414 = Fieldref           #12.#413      // coursier/parse/JavaOrScalaModule$JavaModule$.MODULE$:Lcoursier/parse/JavaOrScalaModule$JavaModule$;
  #415 = Utf8               (Lcoursier/core/Module;)Lcoursier/parse/JavaOrScalaModule$JavaModule;
  #416 = NameAndType        #122:#415     // apply:(Lcoursier/core/Module;)Lcoursier/parse/JavaOrScalaModule$JavaModule;
  #417 = Methodref          #12.#416      // coursier/parse/JavaOrScalaModule$JavaModule$.apply:(Lcoursier/core/Module;)Lcoursier/parse/JavaOrScalaModule$JavaModule;
  #418 = Utf8               scala/collection/immutable/Map
  #419 = Class              #418          // scala/collection/immutable/Map
  #420 = Utf8               coursier/core/Module
  #421 = Class              #420          // coursier/core/Module
  #422 = NameAndType        #295:#299     // value:()Ljava/lang/Object;
  #423 = Methodref          #133.#422     // scala/Some.value:()Ljava/lang/Object;
  #424 = Utf8               unboxToBoolean
  #425 = NameAndType        #424:#79      // unboxToBoolean:(Ljava/lang/Object;)Z
  #426 = Methodref          #135.#425     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #427 = Utf8               Lcoursier/parse/JavaOrScalaModule$ScalaModule$;
  #428 = NameAndType        #45:#427      // MODULE$:Lcoursier/parse/JavaOrScalaModule$ScalaModule$;
  #429 = Fieldref           #18.#428      // coursier/parse/JavaOrScalaModule$ScalaModule$.MODULE$:Lcoursier/parse/JavaOrScalaModule$ScalaModule$;
  #430 = Utf8               (Lcoursier/core/Module;Z)Lcoursier/parse/JavaOrScalaModule$ScalaModule;
  #431 = NameAndType        #122:#430     // apply:(Lcoursier/core/Module;Z)Lcoursier/parse/JavaOrScalaModule$ScalaModule;
  #432 = Methodref          #18.#431      // coursier/parse/JavaOrScalaModule$ScalaModule$.apply:(Lcoursier/core/Module;Z)Lcoursier/parse/JavaOrScalaModule$ScalaModule;
  #433 = Utf8               scalaFullVer
  #434 = Utf8               Z
  #435 = Utf8               name
  #436 = Utf8               attributes
  #437 = Utf8               Lscala/collection/immutable/Map;
  #438 = Utf8               baseModule
  #439 = Utf8               Lcoursier/core/Module;
  #440 = Utf8               Lcoursier/parse/JavaOrScalaModule;
  #441 = Utf8               splitName
  #442 = Utf8               scalaFullVerOpt
  #443 = Utf8               Lscala/Option;
  #444 = Utf8               Lscala/Tuple3;
  #445 = Utf8               defaultScalaVersion$1
  #446 = Utf8               x$3
  #447 = Utf8               (Ljava/lang/String;)Lcoursier/core/Module;
  #448 = NameAndType        #199:#447     // module:(Ljava/lang/String;)Lcoursier/core/Module;
  #449 = Methodref          #9.#448       // coursier/parse/JavaOrScalaModule.module:(Ljava/lang/String;)Lcoursier/core/Module;
  #450 = Utf8               input
  #451 = Utf8               coursier/util/ValidationNel$
  #452 = Class              #451          // coursier/util/ValidationNel$
  #453 = Utf8               Lcoursier/util/ValidationNel$;
  #454 = NameAndType        #45:#453      // MODULE$:Lcoursier/util/ValidationNel$;
  #455 = Fieldref           #452.#454     // coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
  #456 = Utf8               fromEither
  #457 = Utf8               (Lscala/util/Either;)Lcoursier/util/ValidationNel;
  #458 = NameAndType        #456:#457     // fromEither:(Lscala/util/Either;)Lcoursier/util/ValidationNel;
  #459 = Methodref          #452.#458     // coursier/util/ValidationNel$.fromEither:(Lscala/util/Either;)Lcoursier/util/ValidationNel;
  #460 = Utf8               e
  #461 = Utf8               $anonfun$modules$2
  #462 = Utf8               defaultScalaVersion$2
  #463 = Utf8               x$5
  #464 = Utf8               x$4
  #465 = NameAndType        #461:#206     // $anonfun$modules$2:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  #466 = Methodref          #2.#465       // coursier/parse/ModuleParser$.$anonfun$modules$2:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  #467 = MethodHandle       6:#466        // REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$modules$2:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  #468 = InvokeDynamic      #7:#186       // #7:apply:(Ljava/lang/String;)Lscala/Function1;
  #469 = Utf8               scala/collection/immutable/Seq
  #470 = Class              #469          // scala/collection/immutable/Seq
  #471 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #472 = NameAndType        #213:#471     // map:(Lscala/Function1;)Ljava/lang/Object;
  #473 = InterfaceMethodref #470.#472     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #474 = Methodref          #4.#50        // java/lang/Object."<init>":()V
  #475 = NameAndType        #259:#260     // $anonfun$javaOrScalaModule$2:(Ljava/lang/String;)Z
  #476 = Methodref          #2.#475       // coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$2:(Ljava/lang/String;)Z
  #477 = Utf8               $deserializeLambda$
  #478 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #479 = Utf8               scala/runtime/LambdaDeserialize
  #480 = Class              #479          // scala/runtime/LambdaDeserialize
  #481 = Utf8               bootstrap
  #482 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #483 = NameAndType        #481:#482     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #484 = Methodref          #480.#483     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #485 = MethodHandle       6:#484        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #486 = Utf8               lambdaDeserialize
  #487 = NameAndType        #486:#478     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #488 = InvokeDynamic      #8:#487       // #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #489 = Utf8               Code
  #490 = Utf8               LineNumberTable
  #491 = Utf8               StackMapTable
  #492 = Utf8               LocalVariableTable
  #493 = Utf8               Signature
  #494 = Utf8               MethodParameters
  #495 = Utf8               InnerClasses
  #496 = Utf8               SourceFile
  #497 = Utf8               BootstrapMethods
  #498 = Utf8               ScalaInlineInfo
  #499 = Utf8               Scala
{
  public static final coursier.parse.ModuleParser$ MODULE$;
    descriptor: Lcoursier/parse/ModuleParser$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/parse/ModuleParser$
         3: dup
         4: invokespecial #51                 // Method "<init>":()V
         7: putstatic     #53                 // Field MODULE$:Lcoursier/parse/ModuleParser$;
        10: return
      LineNumberTable:
        line 7: 0

  public scala.util.Either<java.lang.String, coursier.parse.JavaOrScalaModule> javaOrScalaModule(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=18, args_size=2
         0: aload_1
         1: ldc           #59                 // String :
         3: iconst_m1
         4: invokevirtual #65                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
         7: astore_3
         8: aload_3
         9: astore        5
        11: aload         5
        13: ifnull        151
        16: getstatic     #70                 // Field scala/Array$.MODULE$:Lscala/Array$;
        19: aload         5
        21: invokevirtual #74                 // Method scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
        24: astore        6
        26: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        29: aload         6
        31: invokevirtual #81                 // Method scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
        34: ifne          148
        37: new           #30                 // class scala/Array$UnapplySeqWrapper
        40: dup
        41: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        44: aload         6
        46: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        49: invokespecial #87                 // Method scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
        52: ifnull        148
        55: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        58: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        61: aload         6
        63: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        66: iconst_2
        67: invokevirtual #91                 // Method scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
        70: iconst_0
        71: if_icmpne     148
        74: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        77: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        80: aload         6
        82: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        85: iconst_0
        86: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
        89: checkcast     #61                 // class java/lang/String
        92: astore        7
        94: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        97: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       100: aload         6
       102: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       105: iconst_1
       106: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       109: checkcast     #61                 // class java/lang/String
       112: astore        8
       114: getstatic     #100                // Field scala/package$.MODULE$:Lscala/package$;
       117: invokevirtual #104                // Method scala/package$.Right:()Lscala/util/Right$;
       120: new           #106                // class scala/Tuple3
       123: dup
       124: new           #108                // class coursier/core/Organization
       127: dup
       128: aload         7
       130: invokespecial #111                // Method coursier/core/Organization."<init>":(Ljava/lang/String;)V
       133: aload         8
       135: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
       138: invokespecial #119                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       141: invokevirtual #125                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       144: astore_2
       145: goto          586
       148: goto          154
       151: goto          154
       154: aload         5
       156: ifnull        335
       159: getstatic     #70                 // Field scala/Array$.MODULE$:Lscala/Array$;
       162: aload         5
       164: invokevirtual #74                 // Method scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
       167: astore        9
       169: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       172: aload         9
       174: invokevirtual #81                 // Method scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
       177: ifne          332
       180: new           #30                 // class scala/Array$UnapplySeqWrapper
       183: dup
       184: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       187: aload         9
       189: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       192: invokespecial #87                 // Method scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
       195: ifnull        332
       198: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       201: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       204: aload         9
       206: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       209: iconst_3
       210: invokevirtual #91                 // Method scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
       213: iconst_0
       214: if_icmpne     332
       217: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       220: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       223: aload         9
       225: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       228: iconst_0
       229: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       232: checkcast     #61                 // class java/lang/String
       235: astore        10
       237: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       240: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       243: aload         9
       245: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       248: iconst_1
       249: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       252: checkcast     #61                 // class java/lang/String
       255: astore        11
       257: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       260: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       263: aload         9
       265: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       268: iconst_2
       269: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       272: checkcast     #61                 // class java/lang/String
       275: astore        12
       277: ldc           #128                // String
       279: aload         11
       281: invokevirtual #131                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       284: ifeq          329
       287: getstatic     #100                // Field scala/package$.MODULE$:Lscala/package$;
       290: invokevirtual #104                // Method scala/package$.Right:()Lscala/util/Right$;
       293: new           #106                // class scala/Tuple3
       296: dup
       297: new           #108                // class coursier/core/Organization
       300: dup
       301: aload         10
       303: invokespecial #111                // Method coursier/core/Organization."<init>":(Ljava/lang/String;)V
       306: aload         12
       308: new           #133                // class scala/Some
       311: dup
       312: iconst_0
       313: invokestatic  #139                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       316: invokespecial #140                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       319: invokespecial #119                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       322: invokevirtual #125                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       325: astore_2
       326: goto          586
       329: goto          338
       332: goto          338
       335: goto          338
       338: aload         5
       340: ifnull        549
       343: getstatic     #70                 // Field scala/Array$.MODULE$:Lscala/Array$;
       346: aload         5
       348: invokevirtual #74                 // Method scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
       351: astore        13
       353: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       356: aload         13
       358: invokevirtual #81                 // Method scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
       361: ifne          546
       364: new           #30                 // class scala/Array$UnapplySeqWrapper
       367: dup
       368: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       371: aload         13
       373: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       376: invokespecial #87                 // Method scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
       379: ifnull        546
       382: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       385: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       388: aload         13
       390: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       393: iconst_4
       394: invokevirtual #91                 // Method scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
       397: iconst_0
       398: if_icmpne     546
       401: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       404: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       407: aload         13
       409: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       412: iconst_0
       413: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       416: checkcast     #61                 // class java/lang/String
       419: astore        14
       421: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       424: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       427: aload         13
       429: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       432: iconst_1
       433: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       436: checkcast     #61                 // class java/lang/String
       439: astore        15
       441: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       444: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       447: aload         13
       449: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       452: iconst_2
       453: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       456: checkcast     #61                 // class java/lang/String
       459: astore        16
       461: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       464: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       467: aload         13
       469: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       472: iconst_3
       473: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       476: checkcast     #61                 // class java/lang/String
       479: astore        17
       481: ldc           #128                // String
       483: aload         15
       485: invokevirtual #131                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       488: ifeq          543
       491: ldc           #128                // String
       493: aload         16
       495: invokevirtual #131                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       498: ifeq          543
       501: getstatic     #100                // Field scala/package$.MODULE$:Lscala/package$;
       504: invokevirtual #104                // Method scala/package$.Right:()Lscala/util/Right$;
       507: new           #106                // class scala/Tuple3
       510: dup
       511: new           #108                // class coursier/core/Organization
       514: dup
       515: aload         14
       517: invokespecial #111                // Method coursier/core/Organization."<init>":(Ljava/lang/String;)V
       520: aload         17
       522: new           #133                // class scala/Some
       525: dup
       526: iconst_1
       527: invokestatic  #139                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       530: invokespecial #140                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       533: invokespecial #119                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       536: invokevirtual #125                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       539: astore_2
       540: goto          586
       543: goto          552
       546: goto          552
       549: goto          552
       552: getstatic     #100                // Field scala/package$.MODULE$:Lscala/package$;
       555: invokevirtual #144                // Method scala/package$.Left:()Lscala/util/Left$;
       558: new           #146                // class java/lang/StringBuilder
       561: dup
       562: ldc           #147                // int 18
       564: invokespecial #150                // Method java/lang/StringBuilder."<init>":(I)V
       567: ldc           #152                // String malformed module:
       569: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       572: aload_1
       573: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       576: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       579: invokevirtual #165                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       582: astore_2
       583: goto          586
       586: aload_2
       587: astore        4
       589: aload         4
       591: aload_1
       592: invokedynamic #187,  0            // InvokeDynamic #0:apply:(Ljava/lang/String;)Lscala/Function1;
       597: invokevirtual #191                // Method scala/util/Either.flatMap:(Lscala/Function1;)Lscala/util/Either;
       600: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 148
          locals = [ class coursier/parse/ModuleParser$, class java/lang/String, top, class "[Ljava/lang/String;", top, class "[Ljava/lang/String;", class java/lang/Object ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 174
          locals = [ class coursier/parse/ModuleParser$, class java/lang/String, top, class "[Ljava/lang/String;", top, class "[Ljava/lang/String;", top, top, top, class java/lang/Object, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/parse/ModuleParser$, class java/lang/String, top, class "[Ljava/lang/String;", top, class "[Ljava/lang/String;" ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 204
          locals = [ class coursier/parse/ModuleParser$, class java/lang/String, top, class "[Ljava/lang/String;", top, class "[Ljava/lang/String;", top, top, top, top, top, top, top, class java/lang/Object, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/parse/ModuleParser$, class java/lang/String, top, class "[Ljava/lang/String;", top, class "[Ljava/lang/String;", top, top, top, top, top, top, top, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/parse/ModuleParser$, class java/lang/String, top, class "[Ljava/lang/String;", top, class "[Ljava/lang/String;" ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class coursier/parse/ModuleParser$, class java/lang/String, class scala/util/Either, class "[Ljava/lang/String;", top, class "[Ljava/lang/String;" ]
          stack = []
      LineNumberTable:
        line 20: 0
        line 22: 8
        line 23: 11
        line 24: 114
        line 23: 148
        line 25: 154
        line 26: 287
        line 25: 329
        line 27: 338
        line 28: 501
        line 27: 543
        line 30: 552
        line 22: 586
        line 33: 589
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           94      54     7   org   Ljava/lang/String;
          114      34     8 rawName   Ljava/lang/String;
          237      95    10   org   Ljava/lang/String;
          277      55    12 rawName   Ljava/lang/String;
          421     125    14   org   Ljava/lang/String;
          481      65    17 rawName   Ljava/lang/String;
            8     592     3 parts   [Ljava/lang/String;
          589      11     4 values   Lscala/util/Either;
            0     601     0  this   Lcoursier/parse/ModuleParser$;
            0     601     1     s   Ljava/lang/String;
    Signature: #56                          // (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.util.Either<java.lang.String, coursier.core.Module> module(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #204                // Method javaOrScalaModule:(Ljava/lang/String;)Lscala/util/Either;
         5: aload_2
         6: invokedynamic #212,  0            // InvokeDynamic #1:apply:(Ljava/lang/String;)Lscala/Function1;
        11: invokevirtual #215                // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
        14: areturn
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcoursier/parse/ModuleParser$;
            0      15     1     s   Ljava/lang/String;
            0      15     2 defaultScalaVersion   Ljava/lang/String;
    Signature: #201                         // (Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/core/Module;>;
    MethodParameters:
      Name                           Flags
      s                              final
      defaultScalaVersion            final

  public coursier.util.ValidationNel<java.lang.String, scala.collection.immutable.Seq<coursier.parse.JavaOrScalaModule>> javaOrScalaModules(scala.collection.immutable.Seq<java.lang.String>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #224                // Field coursier/util/Traverse$.MODULE$:Lcoursier/util/Traverse$;
         3: aload_1
         4: invokevirtual #227                // Method coursier/util/Traverse$.TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
         7: invokedynamic #236,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        12: invokevirtual #240                // Method coursier/util/Traverse$TraverseOps.validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
        15: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/parse/ModuleParser$;
            0      16     1 inputs   Lscala/collection/immutable/Seq;
    Signature: #218                         // (Lscala/collection/immutable/Seq<Ljava/lang/String;>;)Lcoursier/util/ValidationNel<Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/parse/JavaOrScalaModule;>;>;
    MethodParameters:
      Name                           Flags
      inputs                         final

  public coursier.util.ValidationNel<java.lang.String, scala.collection.immutable.Seq<coursier.core.Module>> modules(scala.collection.immutable.Seq<java.lang.String>, java.lang.String);
    descriptor: (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lcoursier/util/ValidationNel;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #246                // Method javaOrScalaModules:(Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
         5: aload_2
         6: invokedynamic #254,  0            // InvokeDynamic #3:apply:(Ljava/lang/String;)Lscala/Function1;
        11: invokevirtual #258                // Method coursier/util/ValidationNel.map:(Lscala/Function1;)Lcoursier/util/ValidationNel;
        14: areturn
      LineNumberTable:
        line 85: 0
        line 86: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcoursier/parse/ModuleParser$;
            0      15     1 inputs   Lscala/collection/immutable/Seq;
            0      15     2 defaultScalaVersion   Ljava/lang/String;
    Signature: #244                         // (Lscala/collection/immutable/Seq<Ljava/lang/String;>;Ljava/lang/String;)Lcoursier/util/ValidationNel<Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/core/Module;>;>;
    MethodParameters:
      Name                           Flags
      inputs                         final
      defaultScalaVersion            final

  public static final boolean $anonfun$javaOrScalaModule$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #263                // String =
         4: invokevirtual #267                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
         7: ifne          14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.String[] $anonfun$javaOrScalaModule$3(java.lang.String);
    descriptor: (Ljava/lang/String;)[Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #263                // String =
         4: iconst_2
         5: invokevirtual #65                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final scala.Tuple2 $anonfun$javaOrScalaModule$4(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=6, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        120
         6: getstatic     #70                 // Field scala/Array$.MODULE$:Lscala/Array$;
         9: aload_2
        10: invokevirtual #74                 // Method scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
        13: astore_3
        14: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        17: aload_3
        18: invokevirtual #81                 // Method scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
        21: ifne          117
        24: new           #30                 // class scala/Array$UnapplySeqWrapper
        27: dup
        28: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        31: aload_3
        32: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        35: invokespecial #87                 // Method scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
        38: ifnull        117
        41: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        44: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        47: aload_3
        48: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        51: iconst_2
        52: invokevirtual #91                 // Method scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
        55: iconst_0
        56: if_icmpne     117
        59: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        62: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        65: aload_3
        66: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        69: iconst_0
        70: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
        73: checkcast     #61                 // class java/lang/String
        76: astore        4
        78: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        81: getstatic     #77                 // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        84: aload_3
        85: invokevirtual #84                 // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        88: iconst_1
        89: invokevirtual #95                 // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
        92: checkcast     #61                 // class java/lang/String
        95: astore        5
        97: getstatic     #276                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       100: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       103: aload         4
       105: invokevirtual #284                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
       108: aload         5
       110: invokevirtual #288                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       113: astore_1
       114: goto          132
       117: goto          123
       120: goto          123
       123: new           #290                // class scala/MatchError
       126: dup
       127: aload_2
       128: invokespecial #291                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       131: athrow
       132: aload_1
       133: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 117
          locals = [ top, class "[Ljava/lang/String;", class java/lang/Object ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class "[Ljava/lang/String;", class scala/Tuple2, class "[Ljava/lang/String;", class java/lang/Object, class java/lang/String, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 42: 0
        line 43: 2
        line 42: 123
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           78      39     4   key   Ljava/lang/String;
           97      20     5 value   Ljava/lang/String;
            0     134     0  x0$2   [Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  public static final scala.util.Either $anonfun$javaOrScalaModule$1(java.lang.String, scala.Tuple3);
    descriptor: (Ljava/lang/String;Lscala/Tuple3;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=9, locals=16, args_size=2
         0: aload_1
         1: astore        4
         3: aload         4
         5: ifnull        370
         8: aload         4
        10: invokevirtual #301                // Method scala/Tuple3._1:()Ljava/lang/Object;
        13: checkcast     #108                // class coursier/core/Organization
        16: invokevirtual #303                // Method coursier/core/Organization.value:()Ljava/lang/String;
        19: astore        5
        21: aload         4
        23: invokevirtual #306                // Method scala/Tuple3._2:()Ljava/lang/Object;
        26: checkcast     #61                 // class java/lang/String
        29: astore        6
        31: aload         4
        33: invokevirtual #309                // Method scala/Tuple3._3:()Ljava/lang/Object;
        36: checkcast     #311                // class scala/Option
        39: astore        7
        41: getstatic     #316                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        44: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        47: aload         6
        49: invokevirtual #320                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        52: bipush        59
        54: invokevirtual #324                // Method scala/collection/StringOps$.split$extension:(Ljava/lang/String;C)[Ljava/lang/String;
        57: astore        8
        59: getstatic     #329                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        62: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        65: getstatic     #329                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        68: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        71: aload         8
        73: checkcast     #331                // class "[Ljava/lang/Object;"
        76: invokevirtual #335                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        79: invokevirtual #338                // Method scala/collection/ArrayOps$.tail$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        82: checkcast     #331                // class "[Ljava/lang/Object;"
        85: invokevirtual #335                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        88: invokedynamic #345,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        93: invokevirtual #349                // Method scala/collection/ArrayOps$.exists$extension:(Ljava/lang/Object;Lscala/Function1;)Z
        96: ifeq          134
        99: getstatic     #100                // Field scala/package$.MODULE$:Lscala/package$;
       102: invokevirtual #144                // Method scala/package$.Left:()Lscala/util/Left$;
       105: new           #146                // class java/lang/StringBuilder
       108: dup
       109: ldc_w         #350                // int 26
       112: invokespecial #150                // Method java/lang/StringBuilder."<init>":(I)V
       115: ldc_w         #352                // String malformed attribute(s) in
       118: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       121: aload_0
       122: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       125: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       128: invokevirtual #165                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       131: goto          366
       134: getstatic     #329                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       137: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       140: aload         8
       142: checkcast     #331                // class "[Ljava/lang/Object;"
       145: invokevirtual #335                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       148: invokevirtual #355                // Method scala/collection/ArrayOps$.head$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       151: checkcast     #61                 // class java/lang/String
       154: astore        9
       156: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       159: getstatic     #329                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       162: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       165: getstatic     #329                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       168: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       171: getstatic     #329                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       174: getstatic     #281                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       177: aload         8
       179: checkcast     #331                // class "[Ljava/lang/Object;"
       182: invokevirtual #335                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       185: invokevirtual #338                // Method scala/collection/ArrayOps$.tail$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       188: checkcast     #331                // class "[Ljava/lang/Object;"
       191: invokevirtual #335                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       194: invokedynamic #360,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
       199: getstatic     #365                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       202: getstatic     #370                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       205: ldc           #61                 // class java/lang/String
       207: invokevirtual #374                // Method scala/runtime/ScalaRunTime$.arrayClass:(Ljava/lang/Class;)Ljava/lang/Class;
       210: invokevirtual #377                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       213: invokevirtual #381                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       216: checkcast     #331                // class "[Ljava/lang/Object;"
       219: invokevirtual #335                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       222: invokedynamic #386,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
       227: getstatic     #365                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       230: ldc_w         #293                // class scala/Tuple2
       233: invokevirtual #377                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       236: invokevirtual #381                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       239: checkcast     #331                // class "[Ljava/lang/Object;"
       242: invokevirtual #390                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
       245: getstatic     #395                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       248: invokevirtual #399                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       251: invokevirtual #403                // Method scala/collection/mutable/ArraySeq$ofRef.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       254: astore        10
       256: getstatic     #408                // Field coursier/core/Module$.MODULE$:Lcoursier/core/Module$;
       259: aload         5
       261: aload         9
       263: aload         10
       265: invokevirtual #411                // Method coursier/core/Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
       268: astore        11
       270: aload         7
       272: astore        13
       274: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
       277: aload         13
       279: invokevirtual #131                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       282: ifeq          297
       285: getstatic     #414                // Field coursier/parse/JavaOrScalaModule$JavaModule$.MODULE$:Lcoursier/parse/JavaOrScalaModule$JavaModule$;
       288: aload         11
       290: invokevirtual #417                // Method coursier/parse/JavaOrScalaModule$JavaModule$.apply:(Lcoursier/core/Module;)Lcoursier/parse/JavaOrScalaModule$JavaModule;
       293: astore_3
       294: goto          352
       297: goto          300
       300: aload         13
       302: instanceof    #133                // class scala/Some
       305: ifeq          339
       308: aload         13
       310: checkcast     #133                // class scala/Some
       313: astore        14
       315: aload         14
       317: invokevirtual #423                // Method scala/Some.value:()Ljava/lang/Object;
       320: invokestatic  #426                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       323: istore        15
       325: getstatic     #429                // Field coursier/parse/JavaOrScalaModule$ScalaModule$.MODULE$:Lcoursier/parse/JavaOrScalaModule$ScalaModule$;
       328: aload         11
       330: iload         15
       332: invokevirtual #432                // Method coursier/parse/JavaOrScalaModule$ScalaModule$.apply:(Lcoursier/core/Module;Z)Lcoursier/parse/JavaOrScalaModule$ScalaModule;
       335: astore_3
       336: goto          352
       339: goto          342
       342: new           #290                // class scala/MatchError
       345: dup
       346: aload         13
       348: invokespecial #291                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       351: athrow
       352: aload_3
       353: astore        12
       355: getstatic     #100                // Field scala/package$.MODULE$:Lscala/package$;
       358: invokevirtual #104                // Method scala/package$.Right:()Lscala/util/Right$;
       361: aload         12
       363: invokevirtual #125                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       366: astore_2
       367: goto          383
       370: goto          373
       373: new           #290                // class scala/MatchError
       376: dup
       377: aload         4
       379: invokespecial #291                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       382: athrow
       383: aload_2
       384: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 134
          locals = [ class java/lang/String, class scala/Tuple3, top, top, class scala/Tuple3, class java/lang/String, class java/lang/String, class scala/Option, class "[Ljava/lang/String;" ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 162
          locals = [ class java/lang/String, class scala/Tuple3, top, top, class scala/Tuple3, class java/lang/String, class java/lang/String, class scala/Option, class "[Ljava/lang/String;", class java/lang/String, class scala/collection/immutable/Map, class coursier/core/Module, top, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 38 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class java/lang/String, class scala/Tuple3, top, class coursier/parse/JavaOrScalaModule, class scala/Tuple3, class java/lang/String, class java/lang/String, class scala/Option, class "[Ljava/lang/String;", class java/lang/String, class scala/collection/immutable/Map, class coursier/core/Module, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class java/lang/String, class scala/Tuple3, top, top, class scala/Tuple3, class java/lang/String, class java/lang/String, class scala/Option, class "[Ljava/lang/String;" ]
          stack = [ class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class java/lang/String, class scala/Tuple3, top, top, class scala/Tuple3 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class java/lang/String, class scala/Tuple3, class scala/util/Either, top, class scala/Tuple3, class java/lang/String, class java/lang/String, class scala/Option, class "[Ljava/lang/String;" ]
          stack = []
      LineNumberTable:
        line 33: 0
        line 34: 3
        line 36: 41
        line 38: 59
        line 39: 99
        line 41: 134
        line 42: 156
        line 44: 245
        line 46: 256
        line 48: 270
        line 49: 274
        line 50: 285
        line 49: 297
        line 51: 300
        line 52: 325
        line 51: 339
        line 48: 342
        line 55: 355
        line 34: 370
        line 33: 373
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          325      14    15 scalaFullVer   Z
          156     210     9  name   Ljava/lang/String;
          256     110    10 attributes   Lscala/collection/immutable/Map;
          270      96    11 baseModule   Lcoursier/core/Module;
          355      11    12 module   Lcoursier/parse/JavaOrScalaModule;
           59     307     8 splitName   [Ljava/lang/String;
           21     349     5   org   Ljava/lang/String;
           31     339     6 rawName   Ljava/lang/String;
           41     329     7 scalaFullVerOpt   Lscala/Option;
            0     385     0   s$1   Ljava/lang/String;
            0     385     1  x0$1   Lscala/Tuple3;
    MethodParameters:
      Name                           Flags
      s$1                            final
      x0$1                           final

  public static final coursier.core.Module $anonfun$module$1(java.lang.String, coursier.parse.JavaOrScalaModule);
    descriptor: (Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #449                // Method coursier/parse/JavaOrScalaModule.module:(Ljava/lang/String;)Lcoursier/core/Module;
         5: areturn
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 defaultScalaVersion$1   Ljava/lang/String;
            0       6     1   x$3   Lcoursier/parse/JavaOrScalaModule;
    MethodParameters:
      Name                           Flags
      defaultScalaVersion$1          final
      x$3                            final

  public static final coursier.util.ValidationNel $anonfun$javaOrScalaModules$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/util/ValidationNel;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #53                 // Field MODULE$:Lcoursier/parse/ModuleParser$;
         3: aload_0
         4: invokevirtual #204                // Method javaOrScalaModule:(Ljava/lang/String;)Lscala/util/Either;
         7: astore_1
         8: getstatic     #455                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
        11: aload_1
        12: invokevirtual #459                // Method coursier/util/ValidationNel$.fromEither:(Lscala/util/Either;)Lcoursier/util/ValidationNel;
        15: areturn
      LineNumberTable:
        line 77: 0
        line 78: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8       7     1     e   Lscala/util/Either;
            0      16     0 input   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      input                          final

  public static final coursier.core.Module $anonfun$modules$2(java.lang.String, coursier.parse.JavaOrScalaModule);
    descriptor: (Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #449                // Method coursier/parse/JavaOrScalaModule.module:(Ljava/lang/String;)Lcoursier/core/Module;
         5: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 defaultScalaVersion$2   Ljava/lang/String;
            0       6     1   x$5   Lcoursier/parse/JavaOrScalaModule;
    MethodParameters:
      Name                           Flags
      defaultScalaVersion$2          final
      x$5                            final

  public static final scala.collection.immutable.Seq $anonfun$modules$1(java.lang.String, scala.collection.immutable.Seq);
    descriptor: (Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokedynamic #468,  0            // InvokeDynamic #7:apply:(Ljava/lang/String;)Lscala/Function1;
         7: invokeinterface #473,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        12: checkcast     #470                // class scala/collection/immutable/Seq
        15: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 defaultScalaVersion$2   Ljava/lang/String;
            0      16     1   x$4   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      defaultScalaVersion$2          final
      x$4                            final

  private coursier.parse.ModuleParser$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #474                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 88: 0
        line 7: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/parse/ModuleParser$;

  public static final java.lang.Object $anonfun$javaOrScalaModule$2$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #476                // Method $anonfun$javaOrScalaModule$2:(Ljava/lang/String;)Z
         4: invokestatic  #139                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #488,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // JavaModule=class coursier/parse/JavaOrScalaModule$JavaModule of class coursier/parse/JavaOrScalaModule
  public static #13= #12 of #9;           // =class coursier/parse/JavaOrScalaModule$JavaModule$ of class coursier/parse/JavaOrScalaModule
  public static final #16= #15 of #9;     // ScalaModule=class coursier/parse/JavaOrScalaModule$ScalaModule of class coursier/parse/JavaOrScalaModule
  public static #13= #18 of #9;           // =class coursier/parse/JavaOrScalaModule$ScalaModule$ of class coursier/parse/JavaOrScalaModule
  public static #23= #20 of #22;          // TraverseOps=class coursier/util/Traverse$TraverseOps of class coursier/util/Traverse
  public static final #28= #25 of #27;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #33= #30 of #32;    // UnapplySeqWrapper=class scala/Array$UnapplySeqWrapper of class scala/Array
  public static #13= #35 of #32;          // =class scala/Array$UnapplySeqWrapper$ of class scala/Array
  public static #13= #37 of #39;          // =class scala/Predef$ArrowAssoc$ of class scala/Predef
  public static final #44= #41 of #43;    // ofRef=class scala/collection/mutable/ArraySeq$ofRef of class scala/collection/mutable/ArraySeq
SourceFile: "ModuleParser.scala"
BootstrapMethods:
  0: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 (Ljava/lang/Object;)Ljava/lang/Object;
      #173 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$1:(Ljava/lang/String;Lscala/Tuple3;)Lscala/util/Either;
      #175 (Lscala/Tuple3;)Lscala/util/Either;
      #176 5
      #177 1
      #175 (Lscala/Tuple3;)Lscala/util/Either;
  1: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 (Ljava/lang/Object;)Ljava/lang/Object;
      #209 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$module$1:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
      #211 (Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
      #176 5
      #177 1
      #211 (Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  2: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 (Ljava/lang/Object;)Ljava/lang/Object;
      #232 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModules$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
      #233 (Ljava/lang/String;)Lcoursier/util/ValidationNel;
      #176 5
      #177 1
      #233 (Ljava/lang/String;)Lcoursier/util/ValidationNel;
  3: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 (Ljava/lang/Object;)Ljava/lang/Object;
      #251 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$modules$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #253 (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #176 5
      #177 1
      #253 (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  4: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 (Ljava/lang/Object;)Ljava/lang/Object;
      #343 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #344 (Ljava/lang/String;)Ljava/lang/Object;
      #176 5
      #177 1
      #344 (Ljava/lang/String;)Ljava/lang/Object;
  5: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 (Ljava/lang/Object;)Ljava/lang/Object;
      #358 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$3:(Ljava/lang/String;)[Ljava/lang/String;
      #359 (Ljava/lang/String;)[Ljava/lang/String;
      #176 5
      #177 1
      #359 (Ljava/lang/String;)[Ljava/lang/String;
  6: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 (Ljava/lang/Object;)Ljava/lang/Object;
      #384 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$4:([Ljava/lang/String;)Lscala/Tuple2;
      #385 ([Ljava/lang/String;)Lscala/Tuple2;
      #176 5
      #177 1
      #385 ([Ljava/lang/String;)Lscala/Tuple2;
  7: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #168 (Ljava/lang/Object;)Ljava/lang/Object;
      #467 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$modules$2:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
      #211 (Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
      #176 5
      #177 1
      #211 (Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  8: #485 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$1:(Ljava/lang/String;Lscala/Tuple3;)Lscala/util/Either;
      #343 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #358 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$3:(Ljava/lang/String;)[Ljava/lang/String;
      #384 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModule$4:([Ljava/lang/String;)Lscala/Tuple2;
      #232 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$javaOrScalaModules$1:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
      #209 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$module$1:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
      #251 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$modules$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #467 REF_invokeStatic coursier/parse/ModuleParser$.$anonfun$modules$2:(Ljava/lang/String;Lcoursier/parse/JavaOrScalaModule;)Lcoursier/core/Module;
  ScalaInlineInfo: length = 0x4A (unknown attribute)
   01 01 00 0E 00 A9 00 AA 01 01 07 01 08 01 01 57
   01 58 01 01 10 01 11 01 01 13 01 14 01 00 E8 00
   E9 01 00 D1 00 D2 01 00 FB 00 FC 01 01 D1 00 D2
   01 00 34 00 33 01 00 39 00 3A 01 00 DC 00 DD 01
   00 CB 00 CC 01 00 F6 00 F7 01
  Scala: length = 0x0 (unknown attribute)

