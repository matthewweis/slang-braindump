Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/ref/WeakReference.class
  Last modified May 29, 2022; size 5045 bytes
  SHA-256 checksum 6130cba124cbe2cbe178a03a7b66583fb73012ab8556a8ee03b143ffa6914096
  Compiled from "WeakReference.scala"
public class scala.ref.WeakReference<T extends java.lang.Object> extends java.lang.Object implements scala.ref.ReferenceWrapper<T>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/ref/WeakReference
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 24, attributes: 5
Constant pool:
    #1 = Utf8               scala/ref/WeakReference
    #2 = Class              #1            // scala/ref/WeakReference
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/ref/ReferenceWrapper<TT;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/ref/ReferenceWrapper
    #7 = Class              #6            // scala/ref/ReferenceWrapper
    #8 = Utf8               WeakReference.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005Y3A\u0001D\u0007\u0001%!AA\u0005\u0001B\u0001B\u0003%A\u0004\u0003\u0005&\u0001\t\u0005\t\u0015!\u0003\'\u0011\u0015I\u0003\u0001\"\u0001+\u0011\u0015I\u0003\u0001\"\u0001/\u0011\u001d\u0001\u0004A1A\u0005\u0002EBaA\u0010\u0001!\u0002\u0013\u0011t!\u0002!\u000e\u0011\u0003\te!\u0002\u0007\u000e\u0011\u0003\u0011\u0005\"B\u0015\t\t\u0003\u0019\u0005\"\u0002#\t\t\u0003)\u0005\"B&\t\t\u0003a%!D,fC.\u0014VMZ3sK:\u001cWM\u0003\u0002\u000f\u001f\u0005\u0019!/\u001a4\u000b\u0003A\tQa]2bY\u0006\u001c\u0001!\u0006\u0002\u0014=M\u0019\u0001\u0001\u0006\r\u0011\u0005U1R\"A\b\n\u0005]y!AB!osJ+g\rE\u0002\u001a5qi\u0011!D\u0005\u000375\u0011\u0001CU3gKJ,gnY3Xe\u0006\u0004\b/\u001a:\u0011\u0005uqB\u0002\u0001\u0003\u0007?\u0001!)\u0019\u0001\u0011\u0003\u0003Q\u000b\"!\t\u000b\u0011\u0005U\u0011\u0013BA\u0012\u0010\u0005\u001dqu\u000e\u001e5j]\u001e\fQA^1mk\u0016\fQ!];fk\u0016\u00042!G\u0014\u001d\u0013\tASB\u0001\bSK\u001a,\'/\u001a8dKF+X-^3\u0002\rqJg.\u001b;?)\rYC&\f\t\u00043\u0001a\u0002\"\u0002\u0013\u0004\u0001\u0004a\u0002\"B\u0013\u0004\u0001\u00041CCA\u00160\u0011\u0015!C\u00011\u0001\u001d\u0003))h\u000eZ3sYfLgnZ\u000b\u0002eA\u00121\u0007\u0010\t\u0004iiZT\"A\u001b\u000b\u000591$BA\u001c9\u0003\u0011a\u0017M\\4\u000b\u0003e\nAA[1wC&\u0011A\"\u000e\t\u0003;q\"\u0011\"\u0010\u0004\u0002\u0002\u0003\u0005)\u0011A \u0003\u0007}#\u0013\'A\u0006v]\u0012,\'\u000f\\=j]\u001e\u0004\u0013CA\u0011\u001d\u000359V-Y6SK\u001a,\'/\u001a8dKB\u0011\u0011\u0004C\n\u0003\u0011Q!\u0012!Q\u0001\u0006CB\u0004H._\u000b\u0003\r&#\"a\u0012&\u0011\u0007e\u0001\u0001\n\u0005\u0002\u001e\u0013\u0012)qD\u0003b\u0001A!)AE\u0003a\u0001\u0011\u00069QO\\1qa2LXCA\'S)\tq5\u000bE\u0002\u0016\u001fFK!\u0001U\b\u0003\r=\u0003H/[8o!\ti\"\u000bB\u0003 \u0017\t\u0007\u0001\u0005C\u0003U\u0017\u0001\u0007Q+\u0001\u0002xeB\u0019\u0011\u0004A)
   #12 = Utf8               underlying
   #13 = Utf8               Ljava/lang/ref/WeakReference;
   #14 = Utf8               Ljava/lang/ref/WeakReference<+TT;>;
   #15 = Utf8               unapply
   #16 = Utf8               (Lscala/ref/WeakReference;)Lscala/Option;
   #17 = Utf8               <T:Ljava/lang/Object;>(Lscala/ref/WeakReference<TT;>;)Lscala/Option<TT;>;
   #18 = Utf8               wr
   #19 = Utf8               scala/ref/WeakReference$
   #20 = Class              #19           // scala/ref/WeakReference$
   #21 = Utf8               MODULE$
   #22 = Utf8               Lscala/ref/WeakReference$;
   #23 = NameAndType        #21:#22       // MODULE$:Lscala/ref/WeakReference$;
   #24 = Fieldref           #20.#23       // scala/ref/WeakReference$.MODULE$:Lscala/ref/WeakReference$;
   #25 = NameAndType        #15:#16       // unapply:(Lscala/ref/WeakReference;)Lscala/Option;
   #26 = Methodref          #20.#25       // scala/ref/WeakReference$.unapply:(Lscala/ref/WeakReference;)Lscala/Option;
   #27 = Utf8               Lscala/ref/WeakReference;
   #28 = Utf8               get
   #29 = Utf8               ()Lscala/Option;
   #30 = Utf8               ()Lscala/Option<TT;>;
   #31 = Utf8               get$
   #32 = Utf8               (Lscala/ref/ReferenceWrapper;)Lscala/Option;
   #33 = NameAndType        #31:#32       // get$:(Lscala/ref/ReferenceWrapper;)Lscala/Option;
   #34 = InterfaceMethodref #7.#33        // scala/ref/ReferenceWrapper.get$:(Lscala/ref/ReferenceWrapper;)Lscala/Option;
   #35 = Utf8               this
   #36 = Utf8               apply
   #37 = Utf8               ()Ljava/lang/Object;
   #38 = Utf8               ()TT;
   #39 = Utf8               apply$
   #40 = Utf8               (Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;
   #41 = NameAndType        #39:#40       // apply$:(Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;
   #42 = InterfaceMethodref #7.#41        // scala/ref/ReferenceWrapper.apply$:(Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;
   #43 = Utf8               clear
   #44 = Utf8               ()V
   #45 = Utf8               clear$
   #46 = Utf8               (Lscala/ref/ReferenceWrapper;)V
   #47 = NameAndType        #45:#46       // clear$:(Lscala/ref/ReferenceWrapper;)V
   #48 = InterfaceMethodref #7.#47        // scala/ref/ReferenceWrapper.clear$:(Lscala/ref/ReferenceWrapper;)V
   #49 = Utf8               enqueue
   #50 = Utf8               ()Z
   #51 = Utf8               enqueue$
   #52 = Utf8               (Lscala/ref/ReferenceWrapper;)Z
   #53 = NameAndType        #51:#52       // enqueue$:(Lscala/ref/ReferenceWrapper;)Z
   #54 = InterfaceMethodref #7.#53        // scala/ref/ReferenceWrapper.enqueue$:(Lscala/ref/ReferenceWrapper;)Z
   #55 = Utf8               isEnqueued
   #56 = Utf8               isEnqueued$
   #57 = NameAndType        #56:#52       // isEnqueued$:(Lscala/ref/ReferenceWrapper;)Z
   #58 = InterfaceMethodref #7.#57        // scala/ref/ReferenceWrapper.isEnqueued$:(Lscala/ref/ReferenceWrapper;)Z
   #59 = Utf8               self
   #60 = Utf8               ()Ljava/lang/ref/Reference;
   #61 = Utf8               ()Ljava/lang/ref/Reference<+TT;>;
   #62 = Utf8               self$
   #63 = Utf8               (Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;
   #64 = NameAndType        #62:#63       // self$:(Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;
   #65 = InterfaceMethodref #7.#64        // scala/ref/ReferenceWrapper.self$:(Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;
   #66 = Utf8               hashCode
   #67 = Utf8               ()I
   #68 = Utf8               scala/Proxy
   #69 = Class              #68           // scala/Proxy
   #70 = Utf8               hashCode$
   #71 = Utf8               (Lscala/Proxy;)I
   #72 = NameAndType        #70:#71       // hashCode$:(Lscala/Proxy;)I
   #73 = InterfaceMethodref #69.#72       // scala/Proxy.hashCode$:(Lscala/Proxy;)I
   #74 = Utf8               equals
   #75 = Utf8               (Ljava/lang/Object;)Z
   #76 = Utf8               that
   #77 = Utf8               equals$
   #78 = Utf8               (Lscala/Proxy;Ljava/lang/Object;)Z
   #79 = NameAndType        #77:#78       // equals$:(Lscala/Proxy;Ljava/lang/Object;)Z
   #80 = InterfaceMethodref #69.#79       // scala/Proxy.equals$:(Lscala/Proxy;Ljava/lang/Object;)Z
   #81 = Utf8               Ljava/lang/Object;
   #82 = Utf8               toString
   #83 = Utf8               ()Ljava/lang/String;
   #84 = Utf8               toString$
   #85 = Utf8               (Lscala/Proxy;)Ljava/lang/String;
   #86 = NameAndType        #84:#85       // toString$:(Lscala/Proxy;)Ljava/lang/String;
   #87 = InterfaceMethodref #69.#86       // scala/Proxy.toString$:(Lscala/Proxy;)Ljava/lang/String;
   #88 = Utf8               apply$mcZ$sp
   #89 = Utf8               scala/Function0
   #90 = Class              #89           // scala/Function0
   #91 = Utf8               apply$mcZ$sp$
   #92 = Utf8               (Lscala/Function0;)Z
   #93 = NameAndType        #91:#92       // apply$mcZ$sp$:(Lscala/Function0;)Z
   #94 = InterfaceMethodref #90.#93       // scala/Function0.apply$mcZ$sp$:(Lscala/Function0;)Z
   #95 = Utf8               apply$mcB$sp
   #96 = Utf8               ()B
   #97 = Utf8               apply$mcB$sp$
   #98 = Utf8               (Lscala/Function0;)B
   #99 = NameAndType        #97:#98       // apply$mcB$sp$:(Lscala/Function0;)B
  #100 = InterfaceMethodref #90.#99       // scala/Function0.apply$mcB$sp$:(Lscala/Function0;)B
  #101 = Utf8               apply$mcC$sp
  #102 = Utf8               ()C
  #103 = Utf8               apply$mcC$sp$
  #104 = Utf8               (Lscala/Function0;)C
  #105 = NameAndType        #103:#104     // apply$mcC$sp$:(Lscala/Function0;)C
  #106 = InterfaceMethodref #90.#105      // scala/Function0.apply$mcC$sp$:(Lscala/Function0;)C
  #107 = Utf8               apply$mcD$sp
  #108 = Utf8               ()D
  #109 = Utf8               apply$mcD$sp$
  #110 = Utf8               (Lscala/Function0;)D
  #111 = NameAndType        #109:#110     // apply$mcD$sp$:(Lscala/Function0;)D
  #112 = InterfaceMethodref #90.#111      // scala/Function0.apply$mcD$sp$:(Lscala/Function0;)D
  #113 = Utf8               apply$mcF$sp
  #114 = Utf8               ()F
  #115 = Utf8               apply$mcF$sp$
  #116 = Utf8               (Lscala/Function0;)F
  #117 = NameAndType        #115:#116     // apply$mcF$sp$:(Lscala/Function0;)F
  #118 = InterfaceMethodref #90.#117      // scala/Function0.apply$mcF$sp$:(Lscala/Function0;)F
  #119 = Utf8               apply$mcI$sp
  #120 = Utf8               apply$mcI$sp$
  #121 = Utf8               (Lscala/Function0;)I
  #122 = NameAndType        #120:#121     // apply$mcI$sp$:(Lscala/Function0;)I
  #123 = InterfaceMethodref #90.#122      // scala/Function0.apply$mcI$sp$:(Lscala/Function0;)I
  #124 = Utf8               apply$mcJ$sp
  #125 = Utf8               ()J
  #126 = Utf8               apply$mcJ$sp$
  #127 = Utf8               (Lscala/Function0;)J
  #128 = NameAndType        #126:#127     // apply$mcJ$sp$:(Lscala/Function0;)J
  #129 = InterfaceMethodref #90.#128      // scala/Function0.apply$mcJ$sp$:(Lscala/Function0;)J
  #130 = Utf8               apply$mcS$sp
  #131 = Utf8               ()S
  #132 = Utf8               apply$mcS$sp$
  #133 = Utf8               (Lscala/Function0;)S
  #134 = NameAndType        #132:#133     // apply$mcS$sp$:(Lscala/Function0;)S
  #135 = InterfaceMethodref #90.#134      // scala/Function0.apply$mcS$sp$:(Lscala/Function0;)S
  #136 = Utf8               apply$mcV$sp
  #137 = Utf8               apply$mcV$sp$
  #138 = Utf8               (Lscala/Function0;)V
  #139 = NameAndType        #137:#138     // apply$mcV$sp$:(Lscala/Function0;)V
  #140 = InterfaceMethodref #90.#139      // scala/Function0.apply$mcV$sp$:(Lscala/Function0;)V
  #141 = Utf8               ()Ljava/lang/ref/WeakReference;
  #142 = Utf8               ()Ljava/lang/ref/WeakReference<+TT;>;
  #143 = NameAndType        #12:#13       // underlying:Ljava/lang/ref/WeakReference;
  #144 = Fieldref           #2.#143       // scala/ref/WeakReference.underlying:Ljava/lang/ref/WeakReference;
  #145 = NameAndType        #59:#60       // self:()Ljava/lang/ref/Reference;
  #146 = Methodref          #2.#145       // scala/ref/WeakReference.self:()Ljava/lang/ref/Reference;
  #147 = NameAndType        #12:#141      // underlying:()Ljava/lang/ref/WeakReference;
  #148 = Methodref          #2.#147       // scala/ref/WeakReference.underlying:()Ljava/lang/ref/WeakReference;
  #149 = Utf8               <init>
  #150 = Utf8               (Ljava/lang/Object;Lscala/ref/ReferenceQueue;)V
  #151 = Utf8               (TT;Lscala/ref/ReferenceQueue<TT;>;)V
  #152 = Utf8               value
  #153 = Utf8               queue
  #154 = NameAndType        #149:#44      // "<init>":()V
  #155 = Methodref          #5.#154       // java/lang/Object."<init>":()V
  #156 = Utf8               scala/ref/WeakReferenceWithWrapper
  #157 = Class              #156          // scala/ref/WeakReferenceWithWrapper
  #158 = Utf8               (Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/WeakReference;)V
  #159 = NameAndType        #149:#158     // "<init>":(Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/WeakReference;)V
  #160 = Methodref          #157.#159     // scala/ref/WeakReferenceWithWrapper."<init>":(Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/WeakReference;)V
  #161 = Utf8               Lscala/ref/ReferenceQueue;
  #162 = Utf8               (Ljava/lang/Object;)V
  #163 = Utf8               (TT;)V
  #164 = NameAndType        #149:#150     // "<init>":(Ljava/lang/Object;Lscala/ref/ReferenceQueue;)V
  #165 = Methodref          #2.#164       // scala/ref/WeakReference."<init>":(Ljava/lang/Object;Lscala/ref/ReferenceQueue;)V
  #166 = Utf8               Signature
  #167 = Utf8               Code
  #168 = Utf8               LocalVariableTable
  #169 = Utf8               MethodParameters
  #170 = Utf8               LineNumberTable
  #171 = Utf8               SourceFile
  #172 = Utf8               RuntimeVisibleAnnotations
  #173 = Utf8               ScalaInlineInfo
  #174 = Utf8               ScalaSig
{
  private final java.lang.ref.WeakReference<? extends T> underlying;
    descriptor: Ljava/lang/ref/WeakReference;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Ljava/lang/ref/WeakReference<+TT;>;

  public static <T extends java.lang.Object> scala.Option<T> unapply(scala.ref.WeakReference<T>);
    descriptor: (Lscala/ref/WeakReference;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #24                 // Field scala/ref/WeakReference$.MODULE$:Lscala/ref/WeakReference$;
         3: aload_0
         4: invokevirtual #26                 // Method scala/ref/WeakReference$.unapply:(Lscala/ref/WeakReference;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    wr   Lscala/ref/WeakReference;
    Signature: #17                          // <T:Ljava/lang/Object;>(Lscala/ref/WeakReference<TT;>;)Lscala/Option<TT;>;
    MethodParameters:
      Name                           Flags
      wr                             final

  public scala.Option<T> get();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #34                 // InterfaceMethod scala/ref/ReferenceWrapper.get$:(Lscala/ref/ReferenceWrapper;)Lscala/Option;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;
    Signature: #30                          // ()Lscala/Option<TT;>;

  public T apply();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #42                 // InterfaceMethod scala/ref/ReferenceWrapper.apply$:(Lscala/ref/ReferenceWrapper;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;
    Signature: #38                          // ()TT;

  public void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #48                 // InterfaceMethod scala/ref/ReferenceWrapper.clear$:(Lscala/ref/ReferenceWrapper;)V
         4: return
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public boolean enqueue();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #54                 // InterfaceMethod scala/ref/ReferenceWrapper.enqueue$:(Lscala/ref/ReferenceWrapper;)Z
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public boolean isEnqueued();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #58                 // InterfaceMethod scala/ref/ReferenceWrapper.isEnqueued$:(Lscala/ref/ReferenceWrapper;)Z
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public java.lang.ref.Reference<? extends T> self();
    descriptor: ()Ljava/lang/ref/Reference;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #65                 // InterfaceMethod scala/ref/ReferenceWrapper.self$:(Lscala/ref/ReferenceWrapper;)Ljava/lang/ref/Reference;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;
    Signature: #61                          // ()Ljava/lang/ref/Reference<+TT;>;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #73                 // InterfaceMethod scala/Proxy.hashCode$:(Lscala/Proxy;)I
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #80                 // InterfaceMethod scala/Proxy.equals$:(Lscala/Proxy;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/ref/WeakReference;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod scala/Proxy.toString$:(Lscala/Proxy;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public boolean apply$mcZ$sp();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #94                 // InterfaceMethod scala/Function0.apply$mcZ$sp$:(Lscala/Function0;)Z
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public byte apply$mcB$sp();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #100                // InterfaceMethod scala/Function0.apply$mcB$sp$:(Lscala/Function0;)B
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public char apply$mcC$sp();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #106                // InterfaceMethod scala/Function0.apply$mcC$sp$:(Lscala/Function0;)C
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public double apply$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #112                // InterfaceMethod scala/Function0.apply$mcD$sp$:(Lscala/Function0;)D
         4: dreturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public float apply$mcF$sp();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #118                // InterfaceMethod scala/Function0.apply$mcF$sp$:(Lscala/Function0;)F
         4: freturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public int apply$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #123                // InterfaceMethod scala/Function0.apply$mcI$sp$:(Lscala/Function0;)I
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public long apply$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #129                // InterfaceMethod scala/Function0.apply$mcJ$sp$:(Lscala/Function0;)J
         4: lreturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public short apply$mcS$sp();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #135                // InterfaceMethod scala/Function0.apply$mcS$sp$:(Lscala/Function0;)S
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public void apply$mcV$sp();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #140                // InterfaceMethod scala/Function0.apply$mcV$sp$:(Lscala/Function0;)V
         4: return
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public java.lang.ref.WeakReference<? extends T> underlying();
    descriptor: ()Ljava/lang/ref/WeakReference;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #144                // Field underlying:Ljava/lang/ref/WeakReference;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;
    Signature: #142                         // ()Ljava/lang/ref/WeakReference<+TT;>;

  public java.lang.Object self();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #146                // Method self:()Ljava/lang/ref/Reference;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public java.lang.ref.Reference underlying();
    descriptor: ()Ljava/lang/ref/Reference;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #148                // Method underlying:()Ljava/lang/ref/WeakReference;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/WeakReference;

  public scala.ref.WeakReference(T, scala.ref.ReferenceQueue<T>);
    descriptor: (Ljava/lang/Object;Lscala/ref/ReferenceQueue;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: invokespecial #155                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #157                // class scala/ref/WeakReferenceWithWrapper
         8: dup
         9: aload_1
        10: aload_2
        11: aload_0
        12: invokespecial #160                // Method scala/ref/WeakReferenceWithWrapper."<init>":(Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/WeakReference;)V
        15: putfield      #144                // Field underlying:Ljava/lang/ref/WeakReference;
        18: return
      LineNumberTable:
        line 20: 0
        line 22: 4
        line 23: 5
        line 22: 15
        line 20: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/ref/WeakReference;
            0      19     1 value   Ljava/lang/Object;
            0      19     2 queue   Lscala/ref/ReferenceQueue;
    Signature: #151                         // (TT;Lscala/ref/ReferenceQueue<TT;>;)V
    MethodParameters:
      Name                           Flags
      value                          final
      queue                          final

  public scala.ref.WeakReference(T);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: aconst_null
         3: invokespecial #165                // Method "<init>":(Ljava/lang/Object;Lscala/ref/ReferenceQueue;)V
         6: return
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/ref/WeakReference;
            0       7     1 value   Ljava/lang/Object;
    Signature: #163                         // (TT;)V
    MethodParameters:
      Name                           Flags
      value                          final
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/ref/ReferenceWrapper<TT;>;
SourceFile: "WeakReference.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005Y3A\u0001D\u0007\u0001%!AA\u0005\u0001B\u0001B\u0003%A\u0004\u0003\u0005&\u0001\t\u0005\t\u0015!\u0003\'\u0011\u0015I\u0003\u0001\"\u0001+\u0011\u0015I\u0003\u0001\"\u0001/\u0011\u001d\u0001\u0004A1A\u0005\u0002EBaA\u0010\u0001!\u0002\u0013\u0011t!\u0002!\u000e\u0011\u0003\te!\u0002\u0007\u000e\u0011\u0003\u0011\u0005\"B\u0015\t\t\u0003\u0019\u0005\"\u0002#\t\t\u0003)\u0005\"B&\t\t\u0003a%!D,fC.\u0014VMZ3sK:\u001cWM\u0003\u0002\u000f\u001f\u0005\u0019!/\u001a4\u000b\u0003A\tQa]2bY\u0006\u001c\u0001!\u0006\u0002\u0014=M\u0019\u0001\u0001\u0006\r\u0011\u0005U1R\"A\b\n\u0005]y!AB!osJ+g\rE\u0002\u001a5qi\u0011!D\u0005\u000375\u0011\u0001CU3gKJ,gnY3Xe\u0006\u0004\b/\u001a:\u0011\u0005uqB\u0002\u0001\u0003\u0007?\u0001!)\u0019\u0001\u0011\u0003\u0003Q\u000b\"!\t\u000b\u0011\u0005U\u0011\u0013BA\u0012\u0010\u0005\u001dqu\u000e\u001e5j]\u001e\fQA^1mk\u0016\fQ!];fk\u0016\u00042!G\u0014\u001d\u0013\tASB\u0001\bSK\u001a,\'/\u001a8dKF+X-^3\u0002\rqJg.\u001b;?)\rYC&\f\t\u00043\u0001a\u0002\"\u0002\u0013\u0004\u0001\u0004a\u0002\"B\u0013\u0004\u0001\u00041CCA\u00160\u0011\u0015!C\u00011\u0001\u001d\u0003))h\u000eZ3sYfLgnZ\u000b\u0002eA\u00121\u0007\u0010\t\u0004iiZT\"A\u001b\u000b\u000591$BA\u001c9\u0003\u0011a\u0017M\\4\u000b\u0003e\nAA[1wC&\u0011A\"\u000e\t\u0003;q\"\u0011\"\u0010\u0004\u0002\u0002\u0003\u0005)\u0011A \u0003\u0007}#\u0013\'A\u0006v]\u0012,\'\u000f\\=j]\u001e\u0004\u0013CA\u0011\u001d\u000359V-Y6SK\u001a,\'/\u001a8dKB\u0011\u0011\u0004C\n\u0003\u0011Q!\u0012!Q\u0001\u0006CB\u0004H._\u000b\u0003\r&#\"a\u0012&\u0011\u0007e\u0001\u0001\n\u0005\u0002\u001e\u0013\u0012)qD\u0003b\u0001A!)AE\u0003a\u0001\u0011\u00069QO\\1qa2LXCA\'S)\tq5\u000bE\u0002\u0016\u001fFK!\u0001U\b\u0003\r=\u0003H/[8o!\ti\"\u000bB\u0003 \u0017\t\u0007\u0001\u0005C\u0003U\u0017\u0001\u0007Q+\u0001\u0002xeB\u0019\u0011\u0004A)"
    )
  ScalaInlineInfo: length = 0x77 (unknown attribute)
   01 00 00 17 00 95 00 A2 00 00 95 00 96 00 00 24
   00 25 00 00 5F 00 60 00 00 65 00 66 00 00 6B 00
   6C 00 00 71 00 72 00 00 77 00 43 00 00 7C 00 7D
   00 00 82 00 83 00 00 88 00 2C 00 00 58 00 32 00
   00 2B 00 2C 00 00 31 00 32 00 00 4A 00 4B 00 00
   1C 00 1D 00 00 42 00 43 00 00 37 00 32 00 00 3B
   00 25 00 00 3B 00 3C 00 00 52 00 53 00 00 0C 00
   3C 00 00 0C 00 8D 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
