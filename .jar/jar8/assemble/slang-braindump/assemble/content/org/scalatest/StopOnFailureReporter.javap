Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/StopOnFailureReporter.class
  Last modified May 29, 2022; size 2431 bytes
  SHA-256 checksum 54fd5dd94cf7858813e32be5d30efe37a95068cb0004dc206a9594b08d1d382b
  Compiled from "StopOnFailureReporter.scala"
public class org.scalatest.StopOnFailureReporter implements org.scalatest.CatchReporter
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/StopOnFailureReporter
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 6, attributes: 4
Constant pool:
   #1 = Utf8               org/scalatest/StopOnFailureReporter
   #2 = Class              #1             // org/scalatest/StopOnFailureReporter
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               org/scalatest/CatchReporter
   #6 = Class              #5             // org/scalatest/CatchReporter
   #7 = Utf8               StopOnFailureReporter.scala
   #8 = Utf8               Lscala/reflect/ScalaSignature;
   #9 = Utf8               bytes
  #10 = Utf8               \u0006\u0005\u00053Q\u0001C\u0005\u0001\u00135A\u0001\u0002\u0007\u0001\u0003\u0002\u0003\u0006IA\u0007\u0005\t;\u0001\u0011\t\u0011)A\u0005=!A\u0011\u0005\u0001BC\u0002\u0013\u0005!\u0005\u0003\u0005,\u0001\t\u0005\t\u0015!\u0003$\u0011\u0015a\u0003\u0001\"\u0001.\u0011\u0015\u0011\u0004\u0001\"\u00014\u0011\u0015y\u0004\u0001\"\u0001A\u0005U\u0019Fo\u001c9P]\u001a\u000b\u0017\u000e\\;sKJ+\u0007o\u001c:uKJT!AC\u0006\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\u0007\u0002\u0007=\u0014xmE\u0002\u0001\u001dQ\u0001\"a\u0004\n\u000e\u0003AQ\u0011!E\u0001\u0006g\u000e\fG.Y\u0005\u0003\'A\u0011a!\u00118z%\u00164\u0007CA\u000b\u0017\u001b\u0005I\u0011BA\f\n\u00055\u0019\u0015\r^2i%\u0016\u0004xN\u001d;fe\u0006AA-[:qCR\u001c\u0007n\u0001\u0001\u0011\u0005UY\u0012B\u0001\u000f\n\u0005!\u0011V\r]8si\u0016\u0014\u0018aB:u_B\u0004XM\u001d\t\u0003+}I!\u0001I\u0005\u0003\u000fM#x\u000e\u001d9fe\u0006\u0019q.\u001e;\u0016\u0003\r\u0002\"\u0001J\u0015\u000e\u0003\u0015R!AJ\u0014\u0002\u0005%|\'\"\u0001\u0015\u0002\t)\fg/Y\u0005\u0003U\u0015\u00121\u0002\u0015:j]R\u001cFO]3b[\u0006!q.\u001e;!\u0003\u0019a\u0014N\\5u}Q!af\f\u00192!\t)\u0002\u0001C\u0003\u0019\u000b\u0001\u0007!\u0004C\u0003\u001e\u000b\u0001\u0007a\u0004C\u0003\"\u000b\u0001\u00071%A\u0004e_\u0006\u0003\b\u000f\\=\u0015\u0005Q:\u0004CA\b6\u0013\t1\u0004C\u0001\u0003V]&$\b\"\u0002\u001d\u0007\u0001\u0004I\u0014!B3wK:$\bC\u0001\u001e>\u001b\u0005Y$B\u0001\u001f\n\u0003\u0019)g/\u001a8ug&\u0011ah\u000f\u0002\u0006\u000bZ,g\u000e^\u0001\nI>$\u0015n\u001d9pg\u0016$\u0012\u0001\u000e
  #11 = Utf8               dispatch
  #12 = Utf8               Lorg/scalatest/Reporter;
  #13 = Utf8               stopper
  #14 = Utf8               Lorg/scalatest/Stopper;
  #15 = Utf8               out
  #16 = Utf8               Ljava/io/PrintStream;
  #17 = Utf8               apply
  #18 = Utf8               (Lorg/scalatest/events/Event;)V
  #19 = Utf8               event
  #20 = Utf8               apply$
  #21 = Utf8               (Lorg/scalatest/CatchReporter;Lorg/scalatest/events/Event;)V
  #22 = NameAndType        #20:#21        // apply$:(Lorg/scalatest/CatchReporter;Lorg/scalatest/events/Event;)V
  #23 = InterfaceMethodref #6.#22         // org/scalatest/CatchReporter.apply$:(Lorg/scalatest/CatchReporter;Lorg/scalatest/events/Event;)V
  #24 = Utf8               this
  #25 = Utf8               Lorg/scalatest/StopOnFailureReporter;
  #26 = Utf8               Lorg/scalatest/events/Event;
  #27 = Utf8               dispose
  #28 = Utf8               ()V
  #29 = Utf8               dispose$
  #30 = Utf8               (Lorg/scalatest/CatchReporter;)V
  #31 = NameAndType        #29:#30        // dispose$:(Lorg/scalatest/CatchReporter;)V
  #32 = InterfaceMethodref #6.#31         // org/scalatest/CatchReporter.dispose$:(Lorg/scalatest/CatchReporter;)V
  #33 = Utf8               ()Ljava/io/PrintStream;
  #34 = NameAndType        #15:#16        // out:Ljava/io/PrintStream;
  #35 = Fieldref           #2.#34         // org/scalatest/StopOnFailureReporter.out:Ljava/io/PrintStream;
  #36 = Utf8               doApply
  #37 = Utf8               org/scalatest/events/TestFailed
  #38 = Class              #37            // org/scalatest/events/TestFailed
  #39 = NameAndType        #13:#14        // stopper:Lorg/scalatest/Stopper;
  #40 = Fieldref           #2.#39         // org/scalatest/StopOnFailureReporter.stopper:Lorg/scalatest/Stopper;
  #41 = Utf8               org/scalatest/Stopper
  #42 = Class              #41            // org/scalatest/Stopper
  #43 = Utf8               requestStop
  #44 = NameAndType        #43:#28        // requestStop:()V
  #45 = InterfaceMethodref #42.#44        // org/scalatest/Stopper.requestStop:()V
  #46 = Utf8               scala/runtime/BoxedUnit
  #47 = Class              #46            // scala/runtime/BoxedUnit
  #48 = Utf8               UNIT
  #49 = Utf8               Lscala/runtime/BoxedUnit;
  #50 = NameAndType        #48:#49        // UNIT:Lscala/runtime/BoxedUnit;
  #51 = Fieldref           #47.#50        // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #52 = NameAndType        #11:#12        // dispatch:Lorg/scalatest/Reporter;
  #53 = Fieldref           #2.#52         // org/scalatest/StopOnFailureReporter.dispatch:Lorg/scalatest/Reporter;
  #54 = Utf8               org/scalatest/Reporter
  #55 = Class              #54            // org/scalatest/Reporter
  #56 = NameAndType        #17:#18        // apply:(Lorg/scalatest/events/Event;)V
  #57 = InterfaceMethodref #55.#56        // org/scalatest/Reporter.apply:(Lorg/scalatest/events/Event;)V
  #58 = Utf8               org/scalatest/events/Event
  #59 = Class              #58            // org/scalatest/events/Event
  #60 = Utf8               doDispose
  #61 = Utf8               org/scalatest/Reporter$
  #62 = Class              #61            // org/scalatest/Reporter$
  #63 = Utf8               MODULE$
  #64 = Utf8               Lorg/scalatest/Reporter$;
  #65 = NameAndType        #63:#64        // MODULE$:Lorg/scalatest/Reporter$;
  #66 = Fieldref           #62.#65        // org/scalatest/Reporter$.MODULE$:Lorg/scalatest/Reporter$;
  #67 = Utf8               propagateDispose
  #68 = Utf8               (Lorg/scalatest/Reporter;)V
  #69 = NameAndType        #67:#68        // propagateDispose:(Lorg/scalatest/Reporter;)V
  #70 = Methodref          #62.#69        // org/scalatest/Reporter$.propagateDispose:(Lorg/scalatest/Reporter;)V
  #71 = Utf8               <init>
  #72 = Utf8               (Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Ljava/io/PrintStream;)V
  #73 = NameAndType        #71:#28        // "<init>":()V
  #74 = Methodref          #4.#73         // java/lang/Object."<init>":()V
  #75 = Utf8               $init$
  #76 = NameAndType        #75:#30        // $init$:(Lorg/scalatest/CatchReporter;)V
  #77 = InterfaceMethodref #6.#76         // org/scalatest/CatchReporter.$init$:(Lorg/scalatest/CatchReporter;)V
  #78 = Utf8               Code
  #79 = Utf8               LineNumberTable
  #80 = Utf8               LocalVariableTable
  #81 = Utf8               MethodParameters
  #82 = Utf8               StackMapTable
  #83 = Utf8               SourceFile
  #84 = Utf8               RuntimeVisibleAnnotations
  #85 = Utf8               ScalaInlineInfo
  #86 = Utf8               ScalaSig
{
  private final org.scalatest.Reporter dispatch;
    descriptor: Lorg/scalatest/Reporter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.scalatest.Stopper stopper;
    descriptor: Lorg/scalatest/Stopper;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.io.PrintStream out;
    descriptor: Ljava/io/PrintStream;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public void apply(org.scalatest.events.Event);
    descriptor: (Lorg/scalatest/events/Event;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #23                 // InterfaceMethod org/scalatest/CatchReporter.apply$:(Lorg/scalatest/CatchReporter;Lorg/scalatest/events/Event;)V
         5: return
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/StopOnFailureReporter;
            0       6     1 event   Lorg/scalatest/events/Event;
    MethodParameters:
      Name                           Flags
      event                          final

  public void dispose();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #32                 // InterfaceMethod org/scalatest/CatchReporter.dispose$:(Lorg/scalatest/CatchReporter;)V
         4: return
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/StopOnFailureReporter;

  public java.io.PrintStream out();
    descriptor: ()Ljava/io/PrintStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #35                 // Field out:Ljava/io/PrintStream;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/StopOnFailureReporter;

  public void doApply(org.scalatest.events.Event);
    descriptor: (Lorg/scalatest/events/Event;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #38                 // class org/scalatest/events/TestFailed
         6: ifeq          25
         9: aload_0
        10: getfield      #40                 // Field stopper:Lorg/scalatest/Stopper;
        13: invokeinterface #45,  1           // InterfaceMethod org/scalatest/Stopper.requestStop:()V
        18: getstatic     #51                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        21: astore_2
        22: goto          35
        25: goto          28
        28: getstatic     #51                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        31: astore_2
        32: goto          35
        35: aload_0
        36: getfield      #53                 // Field dispatch:Lorg/scalatest/Reporter;
        39: aload_1
        40: invokeinterface #57,  2           // InterfaceMethod org/scalatest/Reporter.apply:(Lorg/scalatest/events/Event;)V
        45: return
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ top, class org/scalatest/events/Event ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/scalatest/StopOnFailureReporter, class org/scalatest/events/Event, class scala/runtime/BoxedUnit, class org/scalatest/events/Event ]
          stack = []
      LineNumberTable:
        line 26: 0
        line 27: 2
        line 28: 28
        line 30: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lorg/scalatest/StopOnFailureReporter;
            0      46     1 event   Lorg/scalatest/events/Event;
    MethodParameters:
      Name                           Flags
      event                          final

  public void doDispose();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #66                 // Field org/scalatest/Reporter$.MODULE$:Lorg/scalatest/Reporter$;
         3: aload_0
         4: getfield      #53                 // Field dispatch:Lorg/scalatest/Reporter;
         7: invokevirtual #70                 // Method org/scalatest/Reporter$.propagateDispose:(Lorg/scalatest/Reporter;)V
        10: return
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/scalatest/StopOnFailureReporter;

  public org.scalatest.StopOnFailureReporter(org.scalatest.Reporter, org.scalatest.Stopper, java.io.PrintStream);
    descriptor: (Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Ljava/io/PrintStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #53                 // Field dispatch:Lorg/scalatest/Reporter;
         5: aload_0
         6: aload_2
         7: putfield      #40                 // Field stopper:Lorg/scalatest/Stopper;
        10: aload_0
        11: aload_3
        12: putfield      #35                 // Field out:Ljava/io/PrintStream;
        15: aload_0
        16: invokespecial #74                 // Method java/lang/Object."<init>":()V
        19: aload_0
        20: invokestatic  #77                 // InterfaceMethod org/scalatest/CatchReporter.$init$:(Lorg/scalatest/CatchReporter;)V
        23: return
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/scalatest/StopOnFailureReporter;
            0      24     1 dispatch   Lorg/scalatest/Reporter;
            0      24     2 stopper   Lorg/scalatest/Stopper;
            0      24     3   out   Ljava/io/PrintStream;
    MethodParameters:
      Name                           Flags
      dispatch                       final
      stopper                        final
      out                            final
}
SourceFile: "StopOnFailureReporter.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00053Q\u0001C\u0005\u0001\u00135A\u0001\u0002\u0007\u0001\u0003\u0002\u0003\u0006IA\u0007\u0005\t;\u0001\u0011\t\u0011)A\u0005=!A\u0011\u0005\u0001BC\u0002\u0013\u0005!\u0005\u0003\u0005,\u0001\t\u0005\t\u0015!\u0003$\u0011\u0015a\u0003\u0001\"\u0001.\u0011\u0015\u0011\u0004\u0001\"\u00014\u0011\u0015y\u0004\u0001\"\u0001A\u0005U\u0019Fo\u001c9P]\u001a\u000b\u0017\u000e\\;sKJ+\u0007o\u001c:uKJT!AC\u0006\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\u0007\u0002\u0007=\u0014xmE\u0002\u0001\u001dQ\u0001\"a\u0004\n\u000e\u0003AQ\u0011!E\u0001\u0006g\u000e\fG.Y\u0005\u0003\'A\u0011a!\u00118z%\u00164\u0007CA\u000b\u0017\u001b\u0005I\u0011BA\f\n\u00055\u0019\u0015\r^2i%\u0016\u0004xN\u001d;fe\u0006AA-[:qCR\u001c\u0007n\u0001\u0001\u0011\u0005UY\u0012B\u0001\u000f\n\u0005!\u0011V\r]8si\u0016\u0014\u0018aB:u_B\u0004XM\u001d\t\u0003+}I!\u0001I\u0005\u0003\u000fM#x\u000e\u001d9fe\u0006\u0019q.\u001e;\u0016\u0003\r\u0002\"\u0001J\u0015\u000e\u0003\u0015R!AJ\u0014\u0002\u0005%|\'\"\u0001\u0015\u0002\t)\fg/Y\u0005\u0003U\u0015\u00121\u0002\u0015:j]R\u001cFO]3b[\u0006!q.\u001e;!\u0003\u0019a\u0014N\\5u}Q!af\f\u00192!\t)\u0002\u0001C\u0003\u0019\u000b\u0001\u0007!\u0004C\u0003\u001e\u000b\u0001\u0007a\u0004C\u0003\"\u000b\u0001\u00071%A\u0004e_\u0006\u0003\b\u000f\\=\u0015\u0005Q:\u0004CA\b6\u0013\t1\u0004C\u0001\u0003V]&$\b\"\u0002\u001d\u0007\u0001\u0004I\u0014!B3wK:$\bC\u0001\u001e>\u001b\u0005Y$B\u0001\u001f\n\u0003\u0019)g/\u001a8ug&\u0011ah\u000f\u0002\u0006\u000bZ,g\u000e^\u0001\nI>$\u0015n\u001d9pg\u0016$\u0012\u0001\u000e"
    )
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 00 00 06 00 47 00 48 00 00 11 00 12 00 00 1B
   00 1C 00 00 24 00 12 00 00 3C 00 1C 00 00 0F 00
   21 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
