Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/compat/java8/StreamConverters.class
  Last modified May 29, 2022; size 11430 bytes
  SHA-256 checksum 1234c277d213ebedcda12a2239ca2aa23c6d19724d190f50dd1c53e8fc63c105
  Compiled from "StreamConverters.scala"
public final class scala.compat.java8.StreamConverters
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/compat/java8/StreamConverters
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 36, attributes: 4
Constant pool:
    #1 = Utf8               scala/compat/java8/StreamConverters
    #2 = Class              #1            // scala/compat/java8/StreamConverters
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               StreamConverters.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\u0005;QAB\u0004\t\u000291Q\u0001E\u0004\t\u0002EAQaH\u0001\u0005\u0002\u0001BQ!I\u0001\u0005\u0004\tBQ!M\u0001\u0005\u0004IBQ!O\u0001\u0005\u0004i\n\u0001c\u0015;sK\u0006l7i\u001c8wKJ$XM]:\u000b\u0005!I\u0011!\u00026bm\u0006D$B\u0001\u0006\f\u0003\u0019\u0019w.\u001c9bi*\tA\"A\u0003tG\u0006d\u0017m\u0001\u0001\u0011\u0005=\tQ\"A\u0004\u0003!M#(/Z1n\u0007>tg/\u001a:uKJ\u001c8\u0003B\u0001\u0013-e\u0001\"a\u0005\u000b\u000e\u0003-I!!F\u0006\u0003\r\u0005s\u0017PU3g!\tyq#\u0003\u0002\u0019\u000f\t\u00012\u000b\u001e:fC6,\u0005\u0010^3og&|gn\u001d\t\u00035ui\u0011a\u0007\u0006\u00039\u001d\tQbY8om\u0016\u0014H/\u001a:J[Bd\u0017B\u0001\u0010\u001c\u0005y\u0001&/[8sSRL\u0018\'Q2dk6,H.\u0019;pe\u000e{gN^3si\u0016\u00148/\u0001\u0004=S:LGO\u0010\u000b\u0002\u001d\u0005q!/[2i\u0013:$8\u000b^3qa\u0016\u0014HCA\u0012*!\rQBEJ\u0005\u0003Km\u0011\u0011c\u0015;faB,\'/\u0012=uK:\u001c\u0018n\u001c8t!\t\u0019r%\u0003\u0002)\u0017\t\u0019\u0011J\u001c;\t\u000b)\u001a\u0001\u0019A\u0016\u0002\u0003M\u00042\u0001L\u0018\'\u001b\u0005i#B\u0001\u0018\f\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0003a5\u0012qa\u0015;faB,\'/A\bsS\u000eDGj\u001c8h\'R,\u0007\u000f]3s)\t\u0019t\u0007E\u0002\u001bIQ\u0002\"aE\u001b\n\u0005YZ!\u0001\u0002\'p]\u001eDQA\u000b\u0003A\u0002a\u00022\u0001L\u00185\u0003E\u0011\u0018n\u00195E_V\u0014G.Z*uKB\u0004XM\u001d\u000b\u0003w}\u00022A\u0007\u0013=!\t\u0019R(\u0003\u0002?\u0017\t1Ai\\;cY\u0016DQAK\u0003A\u0002\u0001\u00032\u0001L\u0018=\u0001
    #9 = Utf8               scala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream
   #10 = Class              #9            // scala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream
   #11 = Utf8               scala/compat/java8/StreamExtensions
   #12 = Class              #11           // scala/compat/java8/StreamExtensions
   #13 = Utf8               AnyArrayHasSeqParStream
   #14 = Utf8               scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream
   #15 = Class              #14           // scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream
   #16 = Utf8               ByteArrayHasSeqParStream
   #17 = Utf8               scala/compat/java8/StreamExtensions$CharArrayHasSeqParStream
   #18 = Class              #17           // scala/compat/java8/StreamExtensions$CharArrayHasSeqParStream
   #19 = Utf8               CharArrayHasSeqParStream
   #20 = Utf8               scala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream
   #21 = Class              #20           // scala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream
   #22 = Utf8               DoubleArrayHasSeqParStream
   #23 = Utf8               scala/compat/java8/StreamExtensions$DoubleStreamHasToScala
   #24 = Class              #23           // scala/compat/java8/StreamExtensions$DoubleStreamHasToScala
   #25 = Utf8               DoubleStreamHasToScala
   #26 = Utf8               scala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream
   #27 = Class              #26           // scala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream
   #28 = Utf8               FloatArrayHasSeqParStream
   #29 = Utf8               scala/compat/java8/StreamExtensions$IntArrayHasSeqParStream
   #30 = Class              #29           // scala/compat/java8/StreamExtensions$IntArrayHasSeqParStream
   #31 = Utf8               IntArrayHasSeqParStream
   #32 = Utf8               scala/compat/java8/StreamExtensions$IntStreamHasToScala
   #33 = Class              #32           // scala/compat/java8/StreamExtensions$IntStreamHasToScala
   #34 = Utf8               IntStreamHasToScala
   #35 = Utf8               scala/compat/java8/StreamExtensions$IterableHasSeqStream
   #36 = Class              #35           // scala/compat/java8/StreamExtensions$IterableHasSeqStream
   #37 = Utf8               IterableHasSeqStream
   #38 = Utf8               scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream
   #39 = Class              #38           // scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream
   #40 = Utf8               IterableNonGenericHasParStream
   #41 = Utf8               scala/compat/java8/StreamExtensions$LongArrayHasSeqParStream
   #42 = Class              #41           // scala/compat/java8/StreamExtensions$LongArrayHasSeqParStream
   #43 = Utf8               LongArrayHasSeqParStream
   #44 = Utf8               scala/compat/java8/StreamExtensions$LongStreamHasToScala
   #45 = Class              #44           // scala/compat/java8/StreamExtensions$LongStreamHasToScala
   #46 = Utf8               LongStreamHasToScala
   #47 = Utf8               scala/compat/java8/StreamExtensions$MapHasParKeyValueStream
   #48 = Class              #47           // scala/compat/java8/StreamExtensions$MapHasParKeyValueStream
   #49 = Utf8               MapHasParKeyValueStream
   #50 = Utf8               scala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream
   #51 = Class              #50           // scala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream
   #52 = Utf8               MapHasSeqKeyValueStream
   #53 = Utf8               scala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream
   #54 = Class              #53           // scala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream
   #55 = Utf8               ShortArrayHasSeqParStream
   #56 = Utf8               scala/compat/java8/StreamExtensions$StepperHasParStream
   #57 = Class              #56           // scala/compat/java8/StreamExtensions$StepperHasParStream
   #58 = Utf8               StepperHasParStream
   #59 = Utf8               scala/compat/java8/StreamExtensions$StepperHasSeqStream
   #60 = Class              #59           // scala/compat/java8/StreamExtensions$StepperHasSeqStream
   #61 = Utf8               StepperHasSeqStream
   #62 = Utf8               scala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive
   #63 = Class              #62           // scala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive
   #64 = Utf8               StreamDoubleHasAccumulatePrimitive
   #65 = Utf8               scala/compat/java8/StreamExtensions$StreamHasToScala
   #66 = Class              #65           // scala/compat/java8/StreamExtensions$StreamHasToScala
   #67 = Utf8               StreamHasToScala
   #68 = Utf8               scala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive
   #69 = Class              #68           // scala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive
   #70 = Utf8               StreamIntHasAccumulatePrimitive
   #71 = Utf8               scala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive
   #72 = Class              #71           // scala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive
   #73 = Utf8               StreamJDoubleHasAccumulatePrimitive
   #74 = Utf8               scala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive
   #75 = Class              #74           // scala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive
   #76 = Utf8               StreamJIntegerHasAccumulatePrimitive
   #77 = Utf8               scala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive
   #78 = Class              #77           // scala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive
   #79 = Utf8               StreamJLongHasAccumulatePrimitive
   #80 = Utf8               scala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive
   #81 = Class              #80           // scala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive
   #82 = Utf8               StreamLongHasAccumulatePrimitive
   #83 = Utf8               richDoubleStepper
   #84 = Utf8               (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
   #85 = Utf8               (Lscala/collection/Stepper<Ljava/lang/Object;>;)Lscala/compat/java8/converterImpl/StepperExtensions<Ljava/lang/Object;>;
   #86 = Utf8               s
   #87 = Utf8               scala/compat/java8/StreamConverters$
   #88 = Class              #87           // scala/compat/java8/StreamConverters$
   #89 = Utf8               MODULE$
   #90 = Utf8               Lscala/compat/java8/StreamConverters$;
   #91 = NameAndType        #89:#90       // MODULE$:Lscala/compat/java8/StreamConverters$;
   #92 = Fieldref           #88.#91       // scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
   #93 = NameAndType        #83:#84       // richDoubleStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
   #94 = Methodref          #88.#93       // scala/compat/java8/StreamConverters$.richDoubleStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
   #95 = Utf8               Lscala/collection/Stepper;
   #96 = Utf8               richLongStepper
   #97 = NameAndType        #96:#84       // richLongStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
   #98 = Methodref          #88.#97       // scala/compat/java8/StreamConverters$.richLongStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
   #99 = Utf8               richIntStepper
  #100 = NameAndType        #99:#84       // richIntStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
  #101 = Methodref          #88.#100      // scala/compat/java8/StreamConverters$.richIntStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
  #102 = Utf8               accumulateLongArray
  #103 = Utf8               ([J)[J
  #104 = Utf8               underlying
  #105 = NameAndType        #102:#103     // accumulateLongArray:([J)[J
  #106 = Methodref          #88.#105      // scala/compat/java8/StreamConverters$.accumulateLongArray:([J)[J
  #107 = Utf8               [J
  #108 = Utf8               accumulateIntArray
  #109 = Utf8               ([I)[I
  #110 = NameAndType        #108:#109     // accumulateIntArray:([I)[I
  #111 = Methodref          #88.#110      // scala/compat/java8/StreamConverters$.accumulateIntArray:([I)[I
  #112 = Utf8               [I
  #113 = Utf8               accumulateDoubleArray
  #114 = Utf8               ([D)[D
  #115 = NameAndType        #113:#114     // accumulateDoubleArray:([D)[D
  #116 = Methodref          #88.#115      // scala/compat/java8/StreamConverters$.accumulateDoubleArray:([D)[D
  #117 = Utf8               [D
  #118 = Utf8               accumulateAnyArray
  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #120 = NameAndType        #118:#119     // accumulateAnyArray:(Ljava/lang/Object;)Ljava/lang/Object;
  #121 = Methodref          #88.#120      // scala/compat/java8/StreamConverters$.accumulateAnyArray:(Ljava/lang/Object;)Ljava/lang/Object;
  #122 = Utf8               Ljava/lang/Object;
  #123 = Utf8               accumulateLongCollection
  #124 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #125 = NameAndType        #123:#124     // accumulateLongCollection:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #126 = Methodref          #88.#125      // scala/compat/java8/StreamConverters$.accumulateLongCollection:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #127 = Utf8               Lscala/collection/IterableOnce;
  #128 = Utf8               accumulateIntCollection
  #129 = NameAndType        #128:#124     // accumulateIntCollection:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #130 = Methodref          #88.#129      // scala/compat/java8/StreamConverters$.accumulateIntCollection:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #131 = Utf8               accumulateDoubleCollection
  #132 = NameAndType        #131:#124     // accumulateDoubleCollection:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #133 = Methodref          #88.#132      // scala/compat/java8/StreamConverters$.accumulateDoubleCollection:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #134 = Utf8               collectionCanAccumulate
  #135 = NameAndType        #134:#124     // collectionCanAccumulate:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #136 = Methodref          #88.#135      // scala/compat/java8/StreamConverters$.collectionCanAccumulate:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #137 = Utf8               (Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
  #138 = Utf8               stream
  #139 = NameAndType        #25:#137      // DoubleStreamHasToScala:(Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
  #140 = Methodref          #88.#139      // scala/compat/java8/StreamConverters$.DoubleStreamHasToScala:(Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
  #141 = Utf8               Ljava/util/stream/DoubleStream;
  #142 = Utf8               (Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
  #143 = NameAndType        #46:#142      // LongStreamHasToScala:(Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
  #144 = Methodref          #88.#143      // scala/compat/java8/StreamConverters$.LongStreamHasToScala:(Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
  #145 = Utf8               Ljava/util/stream/LongStream;
  #146 = Utf8               (Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
  #147 = NameAndType        #34:#146      // IntStreamHasToScala:(Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
  #148 = Methodref          #88.#147      // scala/compat/java8/StreamConverters$.IntStreamHasToScala:(Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
  #149 = Utf8               Ljava/util/stream/IntStream;
  #150 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
  #151 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Double;>;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
  #152 = NameAndType        #73:#150      // StreamJDoubleHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
  #153 = Methodref          #88.#152      // scala/compat/java8/StreamConverters$.StreamJDoubleHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
  #154 = Utf8               Ljava/util/stream/Stream;
  #155 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
  #156 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Long;>;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
  #157 = NameAndType        #79:#155      // StreamJLongHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
  #158 = Methodref          #88.#157      // scala/compat/java8/StreamConverters$.StreamJLongHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
  #159 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
  #160 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Integer;>;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
  #161 = NameAndType        #76:#159      // StreamJIntegerHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
  #162 = Methodref          #88.#161      // scala/compat/java8/StreamConverters$.StreamJIntegerHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
  #163 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
  #164 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
  #165 = NameAndType        #64:#163      // StreamDoubleHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
  #166 = Methodref          #88.#165      // scala/compat/java8/StreamConverters$.StreamDoubleHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
  #167 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
  #168 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
  #169 = NameAndType        #82:#167      // StreamLongHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
  #170 = Methodref          #88.#169      // scala/compat/java8/StreamConverters$.StreamLongHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
  #171 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
  #172 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
  #173 = NameAndType        #70:#171      // StreamIntHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
  #174 = Methodref          #88.#173      // scala/compat/java8/StreamConverters$.StreamIntHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
  #175 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
  #176 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/stream/Stream<TA;>;)Lscala/compat/java8/StreamExtensions$StreamHasToScala<TA;>;
  #177 = NameAndType        #67:#175      // StreamHasToScala:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
  #178 = Methodref          #88.#177      // scala/compat/java8/StreamConverters$.StreamHasToScala:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
  #179 = Utf8               ([F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
  #180 = Utf8               a
  #181 = NameAndType        #28:#179      // FloatArrayHasSeqParStream:([F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
  #182 = Methodref          #88.#181      // scala/compat/java8/StreamConverters$.FloatArrayHasSeqParStream:([F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
  #183 = Utf8               [F
  #184 = Utf8               ([C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
  #185 = NameAndType        #19:#184      // CharArrayHasSeqParStream:([C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
  #186 = Methodref          #88.#185      // scala/compat/java8/StreamConverters$.CharArrayHasSeqParStream:([C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
  #187 = Utf8               [C
  #188 = Utf8               ([S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
  #189 = NameAndType        #55:#188      // ShortArrayHasSeqParStream:([S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
  #190 = Methodref          #88.#189      // scala/compat/java8/StreamConverters$.ShortArrayHasSeqParStream:([S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
  #191 = Utf8               [S
  #192 = Utf8               ([B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
  #193 = NameAndType        #16:#192      // ByteArrayHasSeqParStream:([B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
  #194 = Methodref          #88.#193      // scala/compat/java8/StreamConverters$.ByteArrayHasSeqParStream:([B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
  #195 = Utf8               [B
  #196 = Utf8               ([Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
  #197 = Utf8               <A:Ljava/lang/Object;>([TA;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream<TA;>;
  #198 = NameAndType        #13:#196      // AnyArrayHasSeqParStream:([Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
  #199 = Methodref          #88.#198      // scala/compat/java8/StreamConverters$.AnyArrayHasSeqParStream:([Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
  #200 = Utf8               [Ljava/lang/Object;
  #201 = Utf8               ([J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
  #202 = NameAndType        #43:#201      // LongArrayHasSeqParStream:([J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
  #203 = Methodref          #88.#202      // scala/compat/java8/StreamConverters$.LongArrayHasSeqParStream:([J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
  #204 = Utf8               ([I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
  #205 = NameAndType        #31:#204      // IntArrayHasSeqParStream:([I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
  #206 = Methodref          #88.#205      // scala/compat/java8/StreamConverters$.IntArrayHasSeqParStream:([I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
  #207 = Utf8               ([D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
  #208 = NameAndType        #22:#207      // DoubleArrayHasSeqParStream:([D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
  #209 = Methodref          #88.#208      // scala/compat/java8/StreamConverters$.DoubleArrayHasSeqParStream:([D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
  #210 = Utf8               (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
  #211 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/StreamExtensions$StepperHasParStream<TA;>;
  #212 = Utf8               stepper
  #213 = NameAndType        #58:#210      // StepperHasParStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
  #214 = Methodref          #88.#213      // scala/compat/java8/StreamConverters$.StepperHasParStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
  #215 = Utf8               (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
  #216 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream<TA;>;
  #217 = NameAndType        #61:#215      // StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
  #218 = Methodref          #88.#217      // scala/compat/java8/StreamConverters$.StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
  #219 = Utf8               (Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
  #220 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream<TK;TV;TCC;>;
  #221 = Utf8               cc
  #222 = NameAndType        #49:#219      // MapHasParKeyValueStream:(Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
  #223 = Methodref          #88.#222      // scala/compat/java8/StreamConverters$.MapHasParKeyValueStream:(Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
  #224 = Utf8               Lscala/collection/MapOps;
  #225 = Utf8               (Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
  #226 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream<TK;TV;TCC;>;
  #227 = NameAndType        #52:#225      // MapHasSeqKeyValueStream:(Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
  #228 = Methodref          #88.#227      // scala/compat/java8/StreamConverters$.MapHasSeqKeyValueStream:(Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
  #229 = Utf8               (Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
  #230 = Utf8               <A:Ljava/lang/Object;C::Lscala/collection/IterableOnce<*>;>(TC;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream<TA;TC;>;
  #231 = Utf8               c
  #232 = Utf8               ev
  #233 = NameAndType        #40:#229      // IterableNonGenericHasParStream:(Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
  #234 = Methodref          #88.#233      // scala/compat/java8/StreamConverters$.IterableNonGenericHasParStream:(Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
  #235 = Utf8               Lscala/$less$colon$less;
  #236 = Utf8               (Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
  #237 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TA;>;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream<TA;>;
  #238 = NameAndType        #37:#236      // IterableHasSeqStream:(Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
  #239 = Methodref          #88.#238      // scala/compat/java8/StreamConverters$.IterableHasSeqStream:(Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
  #240 = Utf8               richStepper
  #241 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/converterImpl/StepperExtensions<TA;>;
  #242 = NameAndType        #240:#84      // richStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
  #243 = Methodref          #88.#242      // scala/compat/java8/StreamConverters$.richStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
  #244 = Utf8               Code
  #245 = Utf8               LocalVariableTable
  #246 = Utf8               Signature
  #247 = Utf8               MethodParameters
  #248 = Utf8               InnerClasses
  #249 = Utf8               SourceFile
  #250 = Utf8               RuntimeVisibleAnnotations
  #251 = Utf8               ScalaSig
{
  public static scala.compat.java8.converterImpl.StepperExtensions<java.lang.Object> richDoubleStepper(scala.collection.Stepper<java.lang.Object>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #94                 // Method scala/compat/java8/StreamConverters$.richDoubleStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Lscala/collection/Stepper;
    Signature: #85                          // (Lscala/collection/Stepper<Ljava/lang/Object;>;)Lscala/compat/java8/converterImpl/StepperExtensions<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.compat.java8.converterImpl.StepperExtensions<java.lang.Object> richLongStepper(scala.collection.Stepper<java.lang.Object>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #98                 // Method scala/compat/java8/StreamConverters$.richLongStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Lscala/collection/Stepper;
    Signature: #85                          // (Lscala/collection/Stepper<Ljava/lang/Object;>;)Lscala/compat/java8/converterImpl/StepperExtensions<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.compat.java8.converterImpl.StepperExtensions<java.lang.Object> richIntStepper(scala.collection.Stepper<java.lang.Object>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #101                // Method scala/compat/java8/StreamConverters$.richIntStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Lscala/collection/Stepper;
    Signature: #85                          // (Lscala/collection/Stepper<Ljava/lang/Object;>;)Lscala/compat/java8/converterImpl/StepperExtensions<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public static long[] accumulateLongArray(long[]);
    descriptor: ([J)[J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #106                // Method scala/compat/java8/StreamConverters$.accumulateLongArray:([J)[J
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 underlying   [J
    MethodParameters:
      Name                           Flags
      underlying                     final

  public static int[] accumulateIntArray(int[]);
    descriptor: ([I)[I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #111                // Method scala/compat/java8/StreamConverters$.accumulateIntArray:([I)[I
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 underlying   [I
    MethodParameters:
      Name                           Flags
      underlying                     final

  public static double[] accumulateDoubleArray(double[]);
    descriptor: ([D)[D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #116                // Method scala/compat/java8/StreamConverters$.accumulateDoubleArray:([D)[D
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 underlying   [D
    MethodParameters:
      Name                           Flags
      underlying                     final

  public static java.lang.Object accumulateAnyArray(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #121                // Method scala/compat/java8/StreamConverters$.accumulateAnyArray:(Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 underlying   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public static scala.collection.IterableOnce accumulateLongCollection(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #126                // Method scala/compat/java8/StreamConverters$.accumulateLongCollection:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 underlying   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public static scala.collection.IterableOnce accumulateIntCollection(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #130                // Method scala/compat/java8/StreamConverters$.accumulateIntCollection:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 underlying   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public static scala.collection.IterableOnce accumulateDoubleCollection(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #133                // Method scala/compat/java8/StreamConverters$.accumulateDoubleCollection:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 underlying   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public static scala.collection.IterableOnce collectionCanAccumulate(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #136                // Method scala/compat/java8/StreamConverters$.collectionCanAccumulate:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 underlying   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public static scala.compat.java8.StreamExtensions$DoubleStreamHasToScala DoubleStreamHasToScala(java.util.stream.DoubleStream);
    descriptor: (Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #140                // Method scala/compat/java8/StreamConverters$.DoubleStreamHasToScala:(Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stream   Ljava/util/stream/DoubleStream;
    MethodParameters:
      Name                           Flags
      stream                         final

  public static scala.compat.java8.StreamExtensions$LongStreamHasToScala LongStreamHasToScala(java.util.stream.LongStream);
    descriptor: (Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #144                // Method scala/compat/java8/StreamConverters$.LongStreamHasToScala:(Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stream   Ljava/util/stream/LongStream;
    MethodParameters:
      Name                           Flags
      stream                         final

  public static scala.compat.java8.StreamExtensions$IntStreamHasToScala IntStreamHasToScala(java.util.stream.IntStream);
    descriptor: (Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #148                // Method scala/compat/java8/StreamConverters$.IntStreamHasToScala:(Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stream   Ljava/util/stream/IntStream;
    MethodParameters:
      Name                           Flags
      stream                         final

  public static scala.compat.java8.StreamExtensions$StreamJDoubleHasAccumulatePrimitive StreamJDoubleHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Double>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #153                // Method scala/compat/java8/StreamConverters$.StreamJDoubleHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/util/stream/Stream;
    Signature: #151                         // (Ljava/util/stream/Stream<Ljava/lang/Double;>;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.compat.java8.StreamExtensions$StreamJLongHasAccumulatePrimitive StreamJLongHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Long>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #158                // Method scala/compat/java8/StreamConverters$.StreamJLongHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/util/stream/Stream;
    Signature: #156                         // (Ljava/util/stream/Stream<Ljava/lang/Long;>;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.compat.java8.StreamExtensions$StreamJIntegerHasAccumulatePrimitive StreamJIntegerHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Integer>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #162                // Method scala/compat/java8/StreamConverters$.StreamJIntegerHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/util/stream/Stream;
    Signature: #160                         // (Ljava/util/stream/Stream<Ljava/lang/Integer;>;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.compat.java8.StreamExtensions$StreamDoubleHasAccumulatePrimitive StreamDoubleHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Object>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #166                // Method scala/compat/java8/StreamConverters$.StreamDoubleHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/util/stream/Stream;
    Signature: #164                         // (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.compat.java8.StreamExtensions$StreamLongHasAccumulatePrimitive StreamLongHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Object>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #170                // Method scala/compat/java8/StreamConverters$.StreamLongHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/util/stream/Stream;
    Signature: #168                         // (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.compat.java8.StreamExtensions$StreamIntHasAccumulatePrimitive StreamIntHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Object>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #174                // Method scala/compat/java8/StreamConverters$.StreamIntHasAccumulatePrimitive:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/util/stream/Stream;
    Signature: #172                         // (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public static <A extends java.lang.Object> scala.compat.java8.StreamExtensions$StreamHasToScala<A> StreamHasToScala(java.util.stream.Stream<A>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #178                // Method scala/compat/java8/StreamConverters$.StreamHasToScala:(Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stream   Ljava/util/stream/Stream;
    Signature: #176                         // <A:Ljava/lang/Object;>(Ljava/util/stream/Stream<TA;>;)Lscala/compat/java8/StreamExtensions$StreamHasToScala<TA;>;
    MethodParameters:
      Name                           Flags
      stream                         final

  public static scala.compat.java8.StreamExtensions$FloatArrayHasSeqParStream FloatArrayHasSeqParStream(float[]);
    descriptor: ([F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #182                // Method scala/compat/java8/StreamConverters$.FloatArrayHasSeqParStream:([F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [F
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.compat.java8.StreamExtensions$CharArrayHasSeqParStream CharArrayHasSeqParStream(char[]);
    descriptor: ([C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #186                // Method scala/compat/java8/StreamConverters$.CharArrayHasSeqParStream:([C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [C
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.compat.java8.StreamExtensions$ShortArrayHasSeqParStream ShortArrayHasSeqParStream(short[]);
    descriptor: ([S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #190                // Method scala/compat/java8/StreamConverters$.ShortArrayHasSeqParStream:([S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [S
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.compat.java8.StreamExtensions$ByteArrayHasSeqParStream ByteArrayHasSeqParStream(byte[]);
    descriptor: ([B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #194                // Method scala/compat/java8/StreamConverters$.ByteArrayHasSeqParStream:([B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [B
    MethodParameters:
      Name                           Flags
      a                              final

  public static <A extends java.lang.Object> scala.compat.java8.StreamExtensions$AnyArrayHasSeqParStream<A> AnyArrayHasSeqParStream(A[]);
    descriptor: ([Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #199                // Method scala/compat/java8/StreamConverters$.AnyArrayHasSeqParStream:([Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [Ljava/lang/Object;
    Signature: #197                         // <A:Ljava/lang/Object;>([TA;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream<TA;>;
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.compat.java8.StreamExtensions$LongArrayHasSeqParStream LongArrayHasSeqParStream(long[]);
    descriptor: ([J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #203                // Method scala/compat/java8/StreamConverters$.LongArrayHasSeqParStream:([J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [J
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.compat.java8.StreamExtensions$IntArrayHasSeqParStream IntArrayHasSeqParStream(int[]);
    descriptor: ([I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #206                // Method scala/compat/java8/StreamConverters$.IntArrayHasSeqParStream:([I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [I
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.compat.java8.StreamExtensions$DoubleArrayHasSeqParStream DoubleArrayHasSeqParStream(double[]);
    descriptor: ([D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #209                // Method scala/compat/java8/StreamConverters$.DoubleArrayHasSeqParStream:([D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     a   [D
    MethodParameters:
      Name                           Flags
      a                              final

  public static <A extends java.lang.Object> scala.compat.java8.StreamExtensions$StepperHasParStream<A> StepperHasParStream(scala.collection.Stepper<A>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #214                // Method scala/compat/java8/StreamConverters$.StepperHasParStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stepper   Lscala/collection/Stepper;
    Signature: #211                         // <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/StreamExtensions$StepperHasParStream<TA;>;
    MethodParameters:
      Name                           Flags
      stepper                        final

  public static <A extends java.lang.Object> scala.compat.java8.StreamExtensions$StepperHasSeqStream<A> StepperHasSeqStream(scala.collection.Stepper<A>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #218                // Method scala/compat/java8/StreamConverters$.StepperHasSeqStream:(Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 stepper   Lscala/collection/Stepper;
    Signature: #216                         // <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream<TA;>;
    MethodParameters:
      Name                           Flags
      stepper                        final

  public static <K extends java.lang.Object, V extends java.lang.Object, CC extends scala.collection.MapOps<java.lang.Object, java.lang.Object, scala.collection.Map, ?>> scala.compat.java8.StreamExtensions$MapHasParKeyValueStream<K, V, CC> MapHasParKeyValueStream(CC);
    descriptor: (Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #223                // Method scala/compat/java8/StreamConverters$.MapHasParKeyValueStream:(Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    cc   Lscala/collection/MapOps;
    Signature: #220                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream<TK;TV;TCC;>;
    MethodParameters:
      Name                           Flags
      cc                             final

  public static <K extends java.lang.Object, V extends java.lang.Object, CC extends scala.collection.MapOps<java.lang.Object, java.lang.Object, scala.collection.Map, ?>> scala.compat.java8.StreamExtensions$MapHasSeqKeyValueStream<K, V, CC> MapHasSeqKeyValueStream(CC);
    descriptor: (Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #228                // Method scala/compat/java8/StreamConverters$.MapHasSeqKeyValueStream:(Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    cc   Lscala/collection/MapOps;
    Signature: #226                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream<TK;TV;TCC;>;
    MethodParameters:
      Name                           Flags
      cc                             final

  public static <A extends java.lang.Object, C extends scala.collection.IterableOnce<?>> scala.compat.java8.StreamExtensions$IterableNonGenericHasParStream<A, C> IterableNonGenericHasParStream(C, scala.$less$colon$less<C, scala.collection.IterableOnce<A>>);
    descriptor: (Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: aload_1
         5: invokevirtual #234                // Method scala/compat/java8/StreamConverters$.IterableNonGenericHasParStream:(Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     c   Lscala/collection/IterableOnce;
            0       9     1    ev   Lscala/$less$colon$less;
    Signature: #230                         // <A:Ljava/lang/Object;C::Lscala/collection/IterableOnce<*>;>(TC;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream<TA;TC;>;
    MethodParameters:
      Name                           Flags
      c                              final
      ev                             final

  public static <A extends java.lang.Object> scala.compat.java8.StreamExtensions$IterableHasSeqStream<A> IterableHasSeqStream(scala.collection.IterableOnce<A>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #239                // Method scala/compat/java8/StreamConverters$.IterableHasSeqStream:(Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    cc   Lscala/collection/IterableOnce;
    Signature: #237                         // <A:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TA;>;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream<TA;>;
    MethodParameters:
      Name                           Flags
      cc                             final

  public static <A extends java.lang.Object> scala.compat.java8.converterImpl.StepperExtensions<A> richStepper(scala.collection.Stepper<A>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
         3: aload_0
         4: invokevirtual #243                // Method scala/compat/java8/StreamConverters$.richStepper:(Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Lscala/collection/Stepper;
    Signature: #241                         // <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/converterImpl/StepperExtensions<TA;>;
    MethodParameters:
      Name                           Flags
      s                              final
}
InnerClasses:
  public #13= #10 of #12;                 // AnyArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #16= #15 of #12;                 // ByteArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #19= #18 of #12;                 // CharArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$CharArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #22= #21 of #12;                 // DoubleArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #25= #24 of #12;                 // DoubleStreamHasToScala=class scala/compat/java8/StreamExtensions$DoubleStreamHasToScala of class scala/compat/java8/StreamExtensions
  public #28= #27 of #12;                 // FloatArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #31= #30 of #12;                 // IntArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$IntArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #34= #33 of #12;                 // IntStreamHasToScala=class scala/compat/java8/StreamExtensions$IntStreamHasToScala of class scala/compat/java8/StreamExtensions
  public #37= #36 of #12;                 // IterableHasSeqStream=class scala/compat/java8/StreamExtensions$IterableHasSeqStream of class scala/compat/java8/StreamExtensions
  public #40= #39 of #12;                 // IterableNonGenericHasParStream=class scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream of class scala/compat/java8/StreamExtensions
  public #43= #42 of #12;                 // LongArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$LongArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #46= #45 of #12;                 // LongStreamHasToScala=class scala/compat/java8/StreamExtensions$LongStreamHasToScala of class scala/compat/java8/StreamExtensions
  public #49= #48 of #12;                 // MapHasParKeyValueStream=class scala/compat/java8/StreamExtensions$MapHasParKeyValueStream of class scala/compat/java8/StreamExtensions
  public #52= #51 of #12;                 // MapHasSeqKeyValueStream=class scala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream of class scala/compat/java8/StreamExtensions
  public #55= #54 of #12;                 // ShortArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #58= #57 of #12;                 // StepperHasParStream=class scala/compat/java8/StreamExtensions$StepperHasParStream of class scala/compat/java8/StreamExtensions
  public #61= #60 of #12;                 // StepperHasSeqStream=class scala/compat/java8/StreamExtensions$StepperHasSeqStream of class scala/compat/java8/StreamExtensions
  public #64= #63 of #12;                 // StreamDoubleHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #67= #66 of #12;                 // StreamHasToScala=class scala/compat/java8/StreamExtensions$StreamHasToScala of class scala/compat/java8/StreamExtensions
  public #70= #69 of #12;                 // StreamIntHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #73= #72 of #12;                 // StreamJDoubleHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #76= #75 of #12;                 // StreamJIntegerHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #79= #78 of #12;                 // StreamJLongHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #82= #81 of #12;                 // StreamLongHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
SourceFile: "StreamConverters.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005;QAB\u0004\t\u000291Q\u0001E\u0004\t\u0002EAQaH\u0001\u0005\u0002\u0001BQ!I\u0001\u0005\u0004\tBQ!M\u0001\u0005\u0004IBQ!O\u0001\u0005\u0004i\n\u0001c\u0015;sK\u0006l7i\u001c8wKJ$XM]:\u000b\u0005!I\u0011!\u00026bm\u0006D$B\u0001\u0006\f\u0003\u0019\u0019w.\u001c9bi*\tA\"A\u0003tG\u0006d\u0017m\u0001\u0001\u0011\u0005=\tQ\"A\u0004\u0003!M#(/Z1n\u0007>tg/\u001a:uKJ\u001c8\u0003B\u0001\u0013-e\u0001\"a\u0005\u000b\u000e\u0003-I!!F\u0006\u0003\r\u0005s\u0017PU3g!\tyq#\u0003\u0002\u0019\u000f\t\u00012\u000b\u001e:fC6,\u0005\u0010^3og&|gn\u001d\t\u00035ui\u0011a\u0007\u0006\u00039\u001d\tQbY8om\u0016\u0014H/\u001a:J[Bd\u0017B\u0001\u0010\u001c\u0005y\u0001&/[8sSRL\u0018\'Q2dk6,H.\u0019;pe\u000e{gN^3si\u0016\u00148/\u0001\u0004=S:LGO\u0010\u000b\u0002\u001d\u0005q!/[2i\u0013:$8\u000b^3qa\u0016\u0014HCA\u0012*!\rQBEJ\u0005\u0003Km\u0011\u0011c\u0015;faB,\'/\u0012=uK:\u001c\u0018n\u001c8t!\t\u0019r%\u0003\u0002)\u0017\t\u0019\u0011J\u001c;\t\u000b)\u001a\u0001\u0019A\u0016\u0002\u0003M\u00042\u0001L\u0018\'\u001b\u0005i#B\u0001\u0018\f\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0003a5\u0012qa\u0015;faB,\'/A\bsS\u000eDGj\u001c8h\'R,\u0007\u000f]3s)\t\u0019t\u0007E\u0002\u001bIQ\u0002\"aE\u001b\n\u0005YZ!\u0001\u0002\'p]\u001eDQA\u000b\u0003A\u0002a\u00022\u0001L\u00185\u0003E\u0011\u0018n\u00195E_V\u0014G.Z*uKB\u0004XM\u001d\u000b\u0003w}\u00022A\u0007\u0013=!\t\u0019R(\u0003\u0002?\u0017\t1Ai\\;cY\u0016DQAK\u0003A\u0002\u0001\u00032\u0001L\u0018=\u0001"
    )
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
