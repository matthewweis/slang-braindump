Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParIterableLike$Zip.class
  Last modified May 29, 2022; size 9938 bytes
  SHA-256 checksum 0f8329d4b2d276b61a2866e134811f50c41442eb0da9ab6eef98a5933592f72b
  Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$Zip<U extends java.lang.Object, S extends java.lang.Object, That extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Transformer<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Zip<U, S, That>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParIterableLike$Zip
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 32, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParIterableLike$Zip
    #2 = Class              #1            // scala/collection/parallel/ParIterableLike$Zip
    #3 = Utf8               <U:Ljava/lang/Object;S:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Zip<TU;TS;TThat;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParIterableLike$Transformer
    #7 = Class              #6            // scala/collection/parallel/ParIterableLike$Transformer
    #8 = Utf8               ParIterableLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$Accessor
   #16 = Utf8               scala/collection/parallel/ParIterableLike
   #17 = Class              #16           // scala/collection/parallel/ParIterableLike
   #18 = Utf8               Accessor
   #19 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #20 = Class              #19           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #21 = Utf8               StrictSplitterCheckTask
   #22 = Utf8               Transformer
   #23 = Utf8               Zip
   #24 = Utf8               pbf
   #25 = Utf8               Lscala/collection/parallel/CombinerFactory;
   #26 = Utf8               Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;
   #27 = Utf8               pit
   #28 = Utf8               Lscala/collection/parallel/IterableSplitter;
   #29 = Utf8               Lscala/collection/parallel/IterableSplitter<TT;>;
   #30 = Utf8               othpit
   #31 = Utf8               Lscala/collection/parallel/SeqSplitter;
   #32 = Utf8               Lscala/collection/parallel/SeqSplitter<TS;>;
   #33 = Utf8               result
   #34 = Utf8               Lscala/collection/parallel/Combiner;
   #35 = Utf8               Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;
   #36 = Utf8               throwable
   #37 = Utf8               Ljava/lang/Throwable;
   #38 = Utf8               $outer
   #39 = Utf8               Lscala/collection/parallel/ParIterableLike;
   #40 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #41 = Utf8               ()Ljava/lang/String;
   #42 = Utf8               toString
   #43 = NameAndType        #42:#41       // toString:()Ljava/lang/String;
   #44 = Methodref          #5.#43        // java/lang/Object.toString:()Ljava/lang/String;
   #45 = Utf8               this
   #46 = Utf8               Lscala/collection/parallel/ParIterableLike$Zip;
   #47 = Utf8               shouldSplitFurther
   #48 = Utf8               ()Z
   #49 = Utf8               shouldSplitFurther$
   #50 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #51 = NameAndType        #49:#50       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #52 = InterfaceMethodref #15.#51       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #53 = Utf8               signalAbort
   #54 = Utf8               ()V
   #55 = Utf8               signalAbort$
   #56 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #57 = NameAndType        #55:#56       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #58 = InterfaceMethodref #15.#57       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #59 = Utf8               toString$
   #60 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #61 = NameAndType        #59:#60       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #62 = InterfaceMethodref #15.#61       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #63 = Utf8               repr
   #64 = Utf8               ()Ljava/lang/Object;
   #65 = Utf8               scala/collection/parallel/Task
   #66 = Class              #65           // scala/collection/parallel/Task
   #67 = Utf8               repr$
   #68 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #69 = NameAndType        #67:#68       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #70 = InterfaceMethodref #66.#69       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #71 = Utf8               forwardThrowable
   #72 = Utf8               forwardThrowable$
   #73 = Utf8               (Lscala/collection/parallel/Task;)V
   #74 = NameAndType        #72:#73       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #75 = InterfaceMethodref #66.#74       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #76 = Utf8               tryLeaf
   #77 = Utf8               (Lscala/Option;)V
   #78 = Utf8               (Lscala/Option<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;>;)V
   #79 = Utf8               lastres
   #80 = Utf8               tryLeaf$
   #81 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #82 = NameAndType        #80:#81       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #83 = InterfaceMethodref #66.#82       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #84 = Utf8               Lscala/Option;
   #85 = Utf8               tryMerge
   #86 = Utf8               (Ljava/lang/Object;)V
   #87 = Utf8               t
   #88 = Utf8               tryMerge$
   #89 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #90 = NameAndType        #88:#89       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #91 = InterfaceMethodref #66.#90       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #92 = Utf8               Ljava/lang/Object;
   #93 = Utf8               mergeThrowables
   #94 = Utf8               (Lscala/collection/parallel/Task<**>;)V
   #95 = Utf8               that
   #96 = Utf8               mergeThrowables$
   #97 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #98 = NameAndType        #96:#97       // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #99 = InterfaceMethodref #66.#98       // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #100 = Utf8               Lscala/collection/parallel/Task;
  #101 = Utf8               ()Ljava/lang/Throwable;
  #102 = NameAndType        #36:#37       // throwable:Ljava/lang/Throwable;
  #103 = Fieldref           #2.#102       // scala/collection/parallel/ParIterableLike$Zip.throwable:Ljava/lang/Throwable;
  #104 = Utf8               throwable_$eq
  #105 = Utf8               (Ljava/lang/Throwable;)V
  #106 = Utf8               x$1
  #107 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #108 = Utf8               ()Lscala/collection/parallel/IterableSplitter<TT;>;
  #109 = NameAndType        #27:#28       // pit:Lscala/collection/parallel/IterableSplitter;
  #110 = Fieldref           #2.#109       // scala/collection/parallel/ParIterableLike$Zip.pit:Lscala/collection/parallel/IterableSplitter;
  #111 = Utf8               ()Lscala/collection/parallel/SeqSplitter;
  #112 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TS;>;
  #113 = NameAndType        #30:#31       // othpit:Lscala/collection/parallel/SeqSplitter;
  #114 = Fieldref           #2.#113       // scala/collection/parallel/ParIterableLike$Zip.othpit:Lscala/collection/parallel/SeqSplitter;
  #115 = Utf8               ()Lscala/collection/parallel/Combiner;
  #116 = Utf8               ()Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;
  #117 = NameAndType        #33:#34       // result:Lscala/collection/parallel/Combiner;
  #118 = Fieldref           #2.#117       // scala/collection/parallel/ParIterableLike$Zip.result:Lscala/collection/parallel/Combiner;
  #119 = Utf8               result_$eq
  #120 = Utf8               (Lscala/collection/parallel/Combiner;)V
  #121 = Utf8               (Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;)V
  #122 = Utf8               leaf
  #123 = Utf8               prev
  #124 = NameAndType        #27:#107      // pit:()Lscala/collection/parallel/IterableSplitter;
  #125 = Methodref          #2.#124       // scala/collection/parallel/ParIterableLike$Zip.pit:()Lscala/collection/parallel/IterableSplitter;
  #126 = NameAndType        #30:#111      // othpit:()Lscala/collection/parallel/SeqSplitter;
  #127 = Methodref          #2.#126       // scala/collection/parallel/ParIterableLike$Zip.othpit:()Lscala/collection/parallel/SeqSplitter;
  #128 = NameAndType        #24:#25       // pbf:Lscala/collection/parallel/CombinerFactory;
  #129 = Fieldref           #2.#128       // scala/collection/parallel/ParIterableLike$Zip.pbf:Lscala/collection/parallel/CombinerFactory;
  #130 = Utf8               scala/collection/parallel/CombinerFactory
  #131 = Class              #130          // scala/collection/parallel/CombinerFactory
  #132 = Utf8               apply
  #133 = NameAndType        #132:#115     // apply:()Lscala/collection/parallel/Combiner;
  #134 = InterfaceMethodref #131.#133     // scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
  #135 = Utf8               scala/collection/parallel/IterableSplitter
  #136 = Class              #135          // scala/collection/parallel/IterableSplitter
  #137 = Utf8               zip2combiner
  #138 = Utf8               (Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #139 = NameAndType        #137:#138     // zip2combiner:(Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #140 = InterfaceMethodref #136.#139     // scala/collection/parallel/IterableSplitter.zip2combiner:(Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #141 = NameAndType        #119:#120     // result_$eq:(Lscala/collection/parallel/Combiner;)V
  #142 = Methodref          #2.#141       // scala/collection/parallel/ParIterableLike$Zip.result_$eq:(Lscala/collection/parallel/Combiner;)V
  #143 = Utf8               newSubtask
  #144 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #145 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #146 = Utf8               p
  #147 = Utf8               java/lang/UnsupportedOperationException
  #148 = Class              #147          // java/lang/UnsupportedOperationException
  #149 = Utf8               <init>
  #150 = NameAndType        #149:#54      // "<init>":()V
  #151 = Methodref          #148.#150     // java/lang/UnsupportedOperationException."<init>":()V
  #152 = Utf8               split
  #153 = Utf8               ()Lscala/collection/immutable/Seq;
  #154 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Zip<TU;TS;TThat;>;>;
  #155 = Utf8               splitWithSignalling
  #156 = NameAndType        #155:#153     // splitWithSignalling:()Lscala/collection/immutable/Seq;
  #157 = InterfaceMethodref #136.#156     // scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
  #158 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #159 = MethodType         #158          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #160 = Utf8               $anonfun$split$23$adapted
  #161 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #162 = NameAndType        #160:#161     // $anonfun$split$23$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #163 = Methodref          #2.#162       // scala/collection/parallel/ParIterableLike$Zip.$anonfun$split$23$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #164 = MethodHandle       6:#163        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Zip.$anonfun$split$23$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #165 = MethodType         #161          //  (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #166 = Integer            5
  #167 = Integer            1
  #168 = Utf8               java/lang/invoke/LambdaMetafactory
  #169 = Class              #168          // java/lang/invoke/LambdaMetafactory
  #170 = Utf8               altMetafactory
  #171 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #172 = NameAndType        #170:#171     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #173 = Methodref          #169.#172     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #174 = MethodHandle       6:#173        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #175 = Utf8               ()Lscala/Function1;
  #176 = NameAndType        #132:#175     // apply:()Lscala/Function1;
  #177 = InvokeDynamic      #0:#176       // #0:apply:()Lscala/Function1;
  #178 = Utf8               scala/collection/immutable/Seq
  #179 = Class              #178          // scala/collection/immutable/Seq
  #180 = Utf8               map
  #181 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #182 = NameAndType        #180:#181     // map:(Lscala/Function1;)Ljava/lang/Object;
  #183 = InterfaceMethodref #179.#182     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #184 = Utf8               scala/collection/parallel/SeqSplitter
  #185 = Class              #184          // scala/collection/parallel/SeqSplitter
  #186 = Utf8               psplitWithSignalling
  #187 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #188 = NameAndType        #186:#187     // psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #189 = InterfaceMethodref #185.#188     // scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #190 = Utf8               zip
  #191 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #192 = NameAndType        #190:#191     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #193 = InterfaceMethodref #179.#192     // scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #194 = Utf8               scala/collection/IterableOps
  #195 = Class              #194          // scala/collection/IterableOps
  #196 = Utf8               $anonfun$split$24
  #197 = Utf8               (Lscala/collection/parallel/ParIterableLike$Zip;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
  #198 = NameAndType        #196:#197     // $anonfun$split$24:(Lscala/collection/parallel/ParIterableLike$Zip;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
  #199 = Methodref          #2.#198       // scala/collection/parallel/ParIterableLike$Zip.$anonfun$split$24:(Lscala/collection/parallel/ParIterableLike$Zip;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
  #200 = MethodHandle       6:#199        // REF_invokeStatic scala/collection/parallel/ParIterableLike$Zip.$anonfun$split$24:(Lscala/collection/parallel/ParIterableLike$Zip;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
  #201 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
  #202 = MethodType         #201          //  (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
  #203 = Utf8               (Lscala/collection/parallel/ParIterableLike$Zip;)Lscala/Function1;
  #204 = NameAndType        #132:#203     // apply:(Lscala/collection/parallel/ParIterableLike$Zip;)Lscala/Function1;
  #205 = InvokeDynamic      #1:#204       // #1:apply:(Lscala/collection/parallel/ParIterableLike$Zip;)Lscala/Function1;
  #206 = InterfaceMethodref #195.#182     // scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #207 = Utf8               pits
  #208 = Utf8               Lscala/collection/immutable/Seq;
  #209 = Utf8               sizes
  #210 = Utf8               opits
  #211 = Utf8               merge
  #212 = Utf8               (Lscala/collection/parallel/ParIterableLike$Zip;)V
  #213 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Zip<TU;TS;TThat;>;)V
  #214 = NameAndType        #33:#115      // result:()Lscala/collection/parallel/Combiner;
  #215 = Methodref          #2.#214       // scala/collection/parallel/ParIterableLike$Zip.result:()Lscala/collection/parallel/Combiner;
  #216 = Utf8               scala/collection/parallel/Combiner
  #217 = Class              #216          // scala/collection/parallel/Combiner
  #218 = Utf8               combine
  #219 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #220 = NameAndType        #218:#219     // combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #221 = InterfaceMethodref #217.#220     // scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #222 = Utf8               requiresStrictSplitters
  #223 = Utf8               scala$collection$parallel$ParIterableLike$Zip$$$outer
  #224 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #225 = NameAndType        #38:#39       // $outer:Lscala/collection/parallel/ParIterableLike;
  #226 = Fieldref           #2.#225       // scala/collection/parallel/ParIterableLike$Zip.$outer:Lscala/collection/parallel/ParIterableLike;
  #227 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #228 = NameAndType        #223:#224     // scala$collection$parallel$ParIterableLike$Zip$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #229 = Methodref          #2.#228       // scala/collection/parallel/ParIterableLike$Zip.scala$collection$parallel$ParIterableLike$Zip$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #230 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #231 = NameAndType        #211:#212     // merge:(Lscala/collection/parallel/ParIterableLike$Zip;)V
  #232 = Methodref          #2.#231       // scala/collection/parallel/ParIterableLike$Zip.merge:(Lscala/collection/parallel/ParIterableLike$Zip;)V
  #233 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #234 = NameAndType        #143:#144     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #235 = Methodref          #2.#234       // scala/collection/parallel/ParIterableLike$Zip.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #236 = Utf8               $anonfun$split$23
  #237 = Utf8               (Lscala/collection/parallel/IterableSplitter;)I
  #238 = Utf8               x$36
  #239 = Utf8               remaining
  #240 = Utf8               ()I
  #241 = NameAndType        #239:#240     // remaining:()I
  #242 = InterfaceMethodref #136.#241     // scala/collection/parallel/IterableSplitter.remaining:()I
  #243 = Utf8               $this
  #244 = Utf8               scala/Tuple2
  #245 = Class              #244          // scala/Tuple2
  #246 = Utf8               _1
  #247 = NameAndType        #246:#64      // _1:()Ljava/lang/Object;
  #248 = Methodref          #245.#247     // scala/Tuple2._1:()Ljava/lang/Object;
  #249 = Utf8               _2
  #250 = NameAndType        #249:#64      // _2:()Ljava/lang/Object;
  #251 = Methodref          #245.#250     // scala/Tuple2._2:()Ljava/lang/Object;
  #252 = Utf8               (Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #253 = NameAndType        #149:#252     // "<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #254 = Methodref          #2.#253       // scala/collection/parallel/ParIterableLike$Zip."<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #255 = Utf8               Lscala/Tuple2;
  #256 = Utf8               (Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/IterableSplitter<TT;>;Lscala/collection/parallel/SeqSplitter<TS;>;)V
  #257 = Methodref          #5.#150       // java/lang/Object."<init>":()V
  #258 = Utf8               $init$
  #259 = NameAndType        #258:#73      // $init$:(Lscala/collection/parallel/Task;)V
  #260 = InterfaceMethodref #66.#259      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #261 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #262 = NameAndType        #258:#261     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #263 = InterfaceMethodref #20.#262      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #264 = NameAndType        #258:#56      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #265 = InterfaceMethodref #15.#264      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #266 = NameAndType        #236:#237     // $anonfun$split$23:(Lscala/collection/parallel/IterableSplitter;)I
  #267 = Methodref          #2.#266       // scala/collection/parallel/ParIterableLike$Zip.$anonfun$split$23:(Lscala/collection/parallel/IterableSplitter;)I
  #268 = Utf8               scala/runtime/BoxesRunTime
  #269 = Class              #268          // scala/runtime/BoxesRunTime
  #270 = Utf8               boxToInteger
  #271 = Utf8               (I)Ljava/lang/Integer;
  #272 = NameAndType        #270:#271     // boxToInteger:(I)Ljava/lang/Integer;
  #273 = Methodref          #269.#272     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #274 = Utf8               $deserializeLambda$
  #275 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #276 = Utf8               scala/runtime/LambdaDeserialize
  #277 = Class              #276          // scala/runtime/LambdaDeserialize
  #278 = Utf8               bootstrap
  #279 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #280 = NameAndType        #278:#279     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #281 = Methodref          #277.#280     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #282 = MethodHandle       6:#281        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #283 = Utf8               lambdaDeserialize
  #284 = NameAndType        #283:#275     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #285 = InvokeDynamic      #2:#284       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #286 = Utf8               Signature
  #287 = Utf8               Code
  #288 = Utf8               LineNumberTable
  #289 = Utf8               LocalVariableTable
  #290 = Utf8               MethodParameters
  #291 = Utf8               StackMapTable
  #292 = Utf8               InnerClasses
  #293 = Utf8               SourceFile
  #294 = Utf8               BootstrapMethods
  #295 = Utf8               ScalaInlineInfo
  #296 = Utf8               Scala
{
  private final scala.collection.parallel.CombinerFactory<scala.Tuple2<U, S>, That> pbf;
    descriptor: Lscala/collection/parallel/CombinerFactory;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #26                          // Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;

  private final scala.collection.parallel.IterableSplitter<T> pit;
    descriptor: Lscala/collection/parallel/IterableSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #29                          // Lscala/collection/parallel/IterableSplitter<TT;>;

  private final scala.collection.parallel.SeqSplitter<S> othpit;
    descriptor: Lscala/collection/parallel/SeqSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #32                          // Lscala/collection/parallel/SeqSplitter<TS;>;

  private volatile scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> result;
    descriptor: Lscala/collection/parallel/Combiner;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #35                          // Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParIterableLike $outer;
    descriptor: Lscala/collection/parallel/ParIterableLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #44                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #52                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #58                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #70                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #83                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0       6     1 lastres   Lscala/Option;
    Signature: #78                          // (Lscala/Option<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #91                 // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #99                 // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #94                          // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #103                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #103                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.IterableSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #110                // Field pit:Lscala/collection/parallel/IterableSplitter;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
    Signature: #108                         // ()Lscala/collection/parallel/IterableSplitter<TT;>;

  public scala.collection.parallel.SeqSplitter<S> othpit();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field othpit:Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
    Signature: #112                         // ()Lscala/collection/parallel/SeqSplitter<TS;>;

  public scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> result();
    descriptor: ()Lscala/collection/parallel/Combiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #118                // Field result:Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 1251: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
    Signature: #116                         // ()Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;

  public void result_$eq(scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>);
    descriptor: (Lscala/collection/parallel/Combiner;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #118                // Field result:Lscala/collection/parallel/Combiner;
         5: return
      LineNumberTable:
        line 1251: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0       6     1   x$1   Lscala/collection/parallel/Combiner;
    Signature: #121                         // (Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #125                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         5: aload_0
         6: invokevirtual #127                // Method othpit:()Lscala/collection/parallel/SeqSplitter;
         9: aload_0
        10: getfield      #129                // Field pbf:Lscala/collection/parallel/CombinerFactory;
        13: invokeinterface #134,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
        18: invokeinterface #140,  3          // InterfaceMethod scala/collection/parallel/IterableSplitter.zip2combiner:(Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        23: invokevirtual #142                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        26: return
      LineNumberTable:
        line 1252: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0      27     1  prev   Lscala/Option;
    Signature: #78                          // (Lscala/Option<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #148                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #151                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 1253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0       8     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #145                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Zip<U, S, That>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=1
         0: aload_0
         1: invokevirtual #125                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         4: invokeinterface #157,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
         9: astore_1
        10: aload_1
        11: invokedynamic #177,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        16: invokeinterface #183,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        21: checkcast     #179                // class scala/collection/immutable/Seq
        24: astore_2
        25: aload_0
        26: invokevirtual #127                // Method othpit:()Lscala/collection/parallel/SeqSplitter;
        29: aload_2
        30: invokeinterface #189,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        35: astore_3
        36: aload_1
        37: aload_3
        38: invokeinterface #193,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        43: checkcast     #195                // class scala/collection/IterableOps
        46: aload_0
        47: invokedynamic #205,  0            // InvokeDynamic #1:apply:(Lscala/collection/parallel/ParIterableLike$Zip;)Lscala/Function1;
        52: invokeinterface #206,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
        57: checkcast     #179                // class scala/collection/immutable/Seq
        60: areturn
      LineNumberTable:
        line 1255: 0
        line 1256: 10
        line 1257: 25
        line 1258: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      50     1  pits   Lscala/collection/immutable/Seq;
           25      35     2 sizes   Lscala/collection/immutable/Seq;
           36      24     3 opits   Lscala/collection/immutable/Seq;
            0      61     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
    Signature: #154                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Zip<TU;TS;TThat;>;>;

  public void merge(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Zip<U, S, That>);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Zip;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #215                // Method result:()Lscala/collection/parallel/Combiner;
         5: aload_1
         6: invokevirtual #215                // Method result:()Lscala/collection/parallel/Combiner;
         9: invokeinterface #221,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        14: invokevirtual #142                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        17: return
      LineNumberTable:
        line 1260: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0      18     1  that   Lscala/collection/parallel/ParIterableLike$Zip;
    Signature: #213                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Zip<TU;TS;TThat;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 1261: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Zip$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #226                // Field $outer:Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #229                // Method scala$collection$parallel$ParIterableLike$Zip$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #229                // Method scala$collection$parallel$ParIterableLike$Zip$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$Zip
         5: invokevirtual #232                // Method merge:(Lscala/collection/parallel/ParIterableLike$Zip;)V
         8: return
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #235                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #217                // class scala/collection/parallel/Combiner
         5: invokevirtual #142                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
         8: return
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #215                // Method result:()Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 1249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$Zip;

  public static final int $anonfun$split$23(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #242,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
         6: ireturn
      LineNumberTable:
        line 1256: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  x$36   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$36                           final

  public static final scala.collection.parallel.ParIterableLike$Zip $anonfun$split$24(scala.collection.parallel.ParIterableLike$Zip, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Zip;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #2                  // class scala/collection/parallel/ParIterableLike$Zip
         3: dup
         4: aload_0
         5: invokevirtual #229                // Method scala$collection$parallel$ParIterableLike$Zip$$$outer:()Lscala/collection/parallel/ParIterableLike;
         8: aload_0
         9: getfield      #129                // Field pbf:Lscala/collection/parallel/CombinerFactory;
        12: aload_1
        13: invokevirtual #248                // Method scala/Tuple2._1:()Ljava/lang/Object;
        16: checkcast     #136                // class scala/collection/parallel/IterableSplitter
        19: aload_1
        20: invokevirtual #251                // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #185                // class scala/collection/parallel/SeqSplitter
        26: invokespecial #254                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
        29: areturn
      LineNumberTable:
        line 1258: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 $this   Lscala/collection/parallel/ParIterableLike$Zip;
            0      30     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      p                              final

  public scala.collection.parallel.ParIterableLike$Zip(scala.collection.parallel.CombinerFactory<scala.Tuple2<U, S>, That>, scala.collection.parallel.IterableSplitter<T>, scala.collection.parallel.SeqSplitter<S>);
    descriptor: (Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: aload_2
         2: putfield      #129                // Field pbf:Lscala/collection/parallel/CombinerFactory;
         5: aload_0
         6: aload_3
         7: putfield      #110                // Field pit:Lscala/collection/parallel/IterableSplitter;
        10: aload_0
        11: aload         4
        13: putfield      #114                // Field othpit:Lscala/collection/parallel/SeqSplitter;
        16: aload_1
        17: ifnonnull     22
        20: aconst_null
        21: athrow
        22: aload_0
        23: aload_1
        24: putfield      #226                // Field $outer:Lscala/collection/parallel/ParIterableLike;
        27: aload_0
        28: invokespecial #257                // Method java/lang/Object."<init>":()V
        31: aload_0
        32: invokestatic  #260                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        35: aload_0
        36: invokestatic  #263                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        39: aload_0
        40: invokestatic  #265                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        43: aload_0
        44: aconst_null
        45: putfield      #118                // Field result:Lscala/collection/parallel/Combiner;
        48: return
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 1249: 0
        line 1250: 27
        line 1251: 43
        line 1249: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lscala/collection/parallel/ParIterableLike$Zip;
            0      49     1 $outer   Lscala/collection/parallel/ParIterableLike;
            0      49     2   pbf   Lscala/collection/parallel/CombinerFactory;
            0      49     3   pit   Lscala/collection/parallel/IterableSplitter;
            0      49     4 othpit   Lscala/collection/parallel/SeqSplitter;
    Signature: #256                         // (Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/IterableSplitter<TT;>;Lscala/collection/parallel/SeqSplitter<TS;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      pbf                            final
      pit                            final
      othpit                         final

  public static final java.lang.Object $anonfun$split$23$adapted(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #267                // Method $anonfun$split$23:(Lscala/collection/parallel/IterableSplitter;)I
         4: invokestatic  #273                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 1256: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$36   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$36                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #285,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #15 of #17;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #21= #20 of #17;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #22= #7 of #17;                  // Transformer=class scala/collection/parallel/ParIterableLike$Transformer of class scala/collection/parallel/ParIterableLike
  public #23= #2 of #17;                  // Zip=class scala/collection/parallel/ParIterableLike$Zip of class scala/collection/parallel/ParIterableLike
Signature: #3                           // <U:Ljava/lang/Object;S:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Zip<TU;TS;TThat;>;>;
SourceFile: "ParIterableLike.scala"
BootstrapMethods:
  0: #174 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #159 (Ljava/lang/Object;)Ljava/lang/Object;
      #164 REF_invokeStatic scala/collection/parallel/ParIterableLike$Zip.$anonfun$split$23$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #165 (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #166 5
      #167 1
      #165 (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  1: #174 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #159 (Ljava/lang/Object;)Ljava/lang/Object;
      #200 REF_invokeStatic scala/collection/parallel/ParIterableLike$Zip.$anonfun$split$24:(Lscala/collection/parallel/ParIterableLike$Zip;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
      #202 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
      #166 5
      #167 1
      #202 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
  2: #282 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 REF_invokeStatic scala/collection/parallel/ParIterableLike$Zip.$anonfun$split$23$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #200 REF_invokeStatic scala/collection/parallel/ParIterableLike$Zip.$anonfun$split$24:(Lscala/collection/parallel/ParIterableLike$Zip;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Zip;
  ScalaInlineInfo: length = 0x9F (unknown attribute)
   01 00 00 1F 00 EC 00 ED 01 00 A0 00 A1 01 00 C4
   00 C5 01 00 95 00 FC 00 00 47 00 36 00 00 7A 00
   4D 00 00 D3 00 56 00 00 D3 00 D4 00 00 5D 00 49
   00 00 8F 00 E9 00 00 8F 00 90 00 00 1E 00 6F 00
   00 1B 00 6B 00 00 3F 00 40 00 00 DE 00 30 00 00
   21 00 40 00 00 21 00 73 00 00 77 00 56 00 00 77
   00 78 00 00 E3 00 E0 00 00 28 00 29 01 00 E6 00
   E0 00 00 DF 00 E0 00 00 2F 00 30 00 00 35 00 36
   00 00 98 00 99 00 00 24 00 65 00 00 68 00 69 00
   00 2A 00 29 00 00 4C 00 4D 00 00 55 00 56 00
  Scala: length = 0x0 (unknown attribute)

