Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/project/JSON$Parser.class
  Last modified May 29, 2022; size 18356 bytes
  SHA-256 checksum 30afe6270f9686930c86d597df3547ec8e9035bd2a2e319e645455948109fb2d
  Compiled from "JSON.scala"
public final class org.sireum.project.JSON$Parser implements org.sireum.RecordSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/project/JSON$Parser
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 63, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/project/JSON$Parser
    #2 = Class              #1            // org/sireum/project/JSON$Parser
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/RecordSig
    #6 = Class              #5            // org/sireum/RecordSig
    #7 = Utf8               JSON.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/Json$ErrorMsg
   #14 = Class              #13           // org/sireum/Json$ErrorMsg
   #15 = Utf8               org/sireum/Json
   #16 = Class              #15           // org/sireum/Json
   #17 = Utf8               ErrorMsg
   #18 = Utf8               org/sireum/Json$Parser
   #19 = Class              #18           // org/sireum/Json$Parser
   #20 = Utf8               Parser
   #21 = Utf8               org/sireum/Json$Parser$
   #22 = Class              #21           // org/sireum/Json$Parser$
   #23 = Utf8               Parser$
   #24 = Utf8               org/sireum/project/JSON
   #25 = Class              #24           // org/sireum/project/JSON
   #26 = Utf8               org/sireum/project/PublishInfo$Developer
   #27 = Class              #26           // org/sireum/project/PublishInfo$Developer
   #28 = Utf8               org/sireum/project/PublishInfo
   #29 = Class              #28           // org/sireum/project/PublishInfo
   #30 = Utf8               Developer
   #31 = Utf8               org/sireum/project/PublishInfo$Developer$
   #32 = Class              #31           // org/sireum/project/PublishInfo$Developer$
   #33 = Utf8               Developer$
   #34 = Utf8               org/sireum/project/PublishInfo$License
   #35 = Class              #34           // org/sireum/project/PublishInfo$License
   #36 = Utf8               License
   #37 = Utf8               org/sireum/project/PublishInfo$License$
   #38 = Class              #37           // org/sireum/project/PublishInfo$License$
   #39 = Utf8               License$
   #40 = Utf8               org/sireum/project/Target$Type
   #41 = Class              #40           // org/sireum/project/Target$Type
   #42 = Utf8               org/sireum/project/Target
   #43 = Class              #42           // org/sireum/project/Target
   #44 = Utf8               Type
   #45 = Utf8               _input
   #46 = Utf8               Ljava/lang/String;
   #47 = Utf8               parser
   #48 = Utf8               Lorg/sireum/Json$Parser;
   #49 = Utf8               org$sireum$RecordSig$$$isOwned
   #50 = Utf8               Z
   #51 = Utf8               $owned
   #52 = Utf8               ()Z
   #53 = Utf8               $owned$
   #54 = Utf8               (Lorg/sireum/RecordSig;)Z
   #55 = NameAndType        #53:#54       // $owned$:(Lorg/sireum/RecordSig;)Z
   #56 = InterfaceMethodref #6.#55        // org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
   #57 = Utf8               this
   #58 = Utf8               Lorg/sireum/project/JSON$Parser;
   #59 = Utf8               $owned_$eq
   #60 = Utf8               (Z)Lorg/sireum/RecordSig;
   #61 = Utf8               b
   #62 = Utf8               $owned_$eq$
   #63 = Utf8               (Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #64 = NameAndType        #62:#63       // $owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #65 = InterfaceMethodref #6.#64        // org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #66 = Utf8               hash
   #67 = Utf8               ()Lorg/sireum/Z;
   #68 = Utf8               hash$
   #69 = Utf8               (Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #70 = NameAndType        #68:#69       // hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #71 = InterfaceMethodref #6.#70        // org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #72 = Utf8               $cannotMixImmutableAndMutable
   #73 = Utf8               ()Lscala/runtime/Nothing$;
   #74 = Utf8               org/sireum/Mutable
   #75 = Class              #74           // org/sireum/Mutable
   #76 = Utf8               $cannotMixImmutableAndMutable$
   #77 = Utf8               (Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #78 = NameAndType        #76:#77       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #79 = InterfaceMethodref #75.#78       // org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #80 = Utf8               $hasEquals
   #81 = Utf8               $hasEquals$
   #82 = Utf8               (Lorg/sireum/Mutable;)Z
   #83 = NameAndType        #81:#82       // $hasEquals$:(Lorg/sireum/Mutable;)Z
   #84 = InterfaceMethodref #75.#83       // org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
   #85 = Utf8               $hasString
   #86 = Utf8               $hasString$
   #87 = NameAndType        #86:#82       // $hasString$:(Lorg/sireum/Mutable;)Z
   #88 = InterfaceMethodref #75.#87       // org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
   #89 = NameAndType        #49:#50       // org$sireum$RecordSig$$$isOwned:Z
   #90 = Fieldref           #2.#89        // org/sireum/project/JSON$Parser.org$sireum$RecordSig$$$isOwned:Z
   #91 = Utf8               org$sireum$RecordSig$$$isOwned_$eq
   #92 = Utf8               (Z)V
   #93 = Utf8               x$1
   #94 = Utf8               input
   #95 = Utf8               ()Ljava/lang/String;
   #96 = NameAndType        #45:#46       // _input:Ljava/lang/String;
   #97 = Fieldref           #2.#96        // org/sireum/project/JSON$Parser._input:Ljava/lang/String;
   #98 = Utf8               getInput
   #99 = Utf8               toString
  #100 = NameAndType        #85:#52       // $hasString:()Z
  #101 = Methodref          #2.#100       // org/sireum/project/JSON$Parser.$hasString:()Z
  #102 = Utf8               string$
  #103 = Utf8               (Lorg/sireum/RecordSig;)Ljava/lang/String;
  #104 = NameAndType        #102:#103     // string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #105 = InterfaceMethodref #6.#104       // org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #106 = Utf8               java/lang/StringBuilder
  #107 = Class              #106          // java/lang/StringBuilder
  #108 = Utf8               <init>
  #109 = Utf8               ()V
  #110 = NameAndType        #108:#109     // "<init>":()V
  #111 = Methodref          #107.#110     // java/lang/StringBuilder."<init>":()V
  #112 = String             #20           // Parser
  #113 = Utf8               append
  #114 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #115 = NameAndType        #113:#114     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #116 = Methodref          #107.#115     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #117 = Utf8               (C)Ljava/lang/StringBuilder;
  #118 = NameAndType        #113:#117     // append:(C)Ljava/lang/StringBuilder;
  #119 = Methodref          #107.#118     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #120 = Utf8               org/sireum/String$
  #121 = Class              #120          // org/sireum/String$
  #122 = Utf8               MODULE$
  #123 = Utf8               Lorg/sireum/String$;
  #124 = NameAndType        #122:#123     // MODULE$:Lorg/sireum/String$;
  #125 = Fieldref           #121.#124     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #126 = Utf8               org/sireum/String
  #127 = Class              #126          // org/sireum/String
  #128 = NameAndType        #94:#95       // input:()Ljava/lang/String;
  #129 = Methodref          #2.#128       // org/sireum/project/JSON$Parser.input:()Ljava/lang/String;
  #130 = Utf8               (Ljava/lang/String;)V
  #131 = NameAndType        #108:#130     // "<init>":(Ljava/lang/String;)V
  #132 = Methodref          #127.#131     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #133 = Utf8               escape
  #134 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #135 = NameAndType        #133:#134     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #136 = Methodref          #121.#135     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #137 = NameAndType        #99:#95       // toString:()Ljava/lang/String;
  #138 = Methodref          #107.#137     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #139 = Utf8               sb
  #140 = Utf8               Ljava/lang/StringBuilder;
  #141 = Utf8               java/lang/String
  #142 = Class              #141          // java/lang/String
  #143 = Utf8               string
  #144 = Methodref          #2.#137       // org/sireum/project/JSON$Parser.toString:()Ljava/lang/String;
  #145 = Utf8               apply
  #146 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #147 = NameAndType        #145:#146     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #148 = Methodref          #121.#147     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #149 = Utf8               hashCode
  #150 = Utf8               ()I
  #151 = NameAndType        #80:#52       // $hasEquals:()Z
  #152 = Methodref          #2.#151       // org/sireum/project/JSON$Parser.$hasEquals:()Z
  #153 = NameAndType        #149:#150     // hashCode:()I
  #154 = Methodref          #4.#153       // java/lang/Object.hashCode:()I
  #155 = Utf8               scala/package$
  #156 = Class              #155          // scala/package$
  #157 = Utf8               Lscala/package$;
  #158 = NameAndType        #122:#157     // MODULE$:Lscala/package$;
  #159 = Fieldref           #156.#158     // scala/package$.MODULE$:Lscala/package$;
  #160 = Utf8               Seq
  #161 = Utf8               ()Lscala/collection/immutable/Seq$;
  #162 = NameAndType        #160:#161     // Seq:()Lscala/collection/immutable/Seq$;
  #163 = Methodref          #156.#162     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #164 = Utf8               scala/runtime/ScalaRunTime$
  #165 = Class              #164          // scala/runtime/ScalaRunTime$
  #166 = Utf8               Lscala/runtime/ScalaRunTime$;
  #167 = NameAndType        #122:#166     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #168 = Fieldref           #165.#167     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #169 = Utf8               getClass
  #170 = Utf8               ()Ljava/lang/Class;
  #171 = NameAndType        #169:#170     // getClass:()Ljava/lang/Class;
  #172 = Methodref          #2.#171       // org/sireum/project/JSON$Parser.getClass:()Ljava/lang/Class;
  #173 = Utf8               java/lang/Class
  #174 = Class              #173          // java/lang/Class
  #175 = Utf8               getName
  #176 = NameAndType        #175:#95      // getName:()Ljava/lang/String;
  #177 = Methodref          #174.#176     // java/lang/Class.getName:()Ljava/lang/String;
  #178 = Utf8               genericWrapArray
  #179 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #180 = NameAndType        #178:#179     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #181 = Methodref          #165.#180     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #182 = Utf8               scala/collection/immutable/Seq$
  #183 = Class              #182          // scala/collection/immutable/Seq$
  #184 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #185 = NameAndType        #145:#184     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #186 = Methodref          #183.#185     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #187 = Utf8               scala/collection/Seq
  #188 = Class              #187          // scala/collection/Seq
  #189 = InterfaceMethodref #188.#153     // scala/collection/Seq.hashCode:()I
  #190 = Utf8               equals
  #191 = Utf8               (Ljava/lang/Object;)Z
  #192 = Utf8               o
  #193 = NameAndType        #190:#191     // equals:(Ljava/lang/Object;)Z
  #194 = Methodref          #4.#193       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #195 = Methodref          #2.#153       // org/sireum/project/JSON$Parser.hashCode:()I
  #196 = Utf8               Ljava/lang/Object;
  #197 = Utf8               (Ljava/lang/String;)Lorg/sireum/project/JSON$Parser;
  #198 = Methodref          #2.#131       // org/sireum/project/JSON$Parser."<init>":(Ljava/lang/String;)V
  #199 = Utf8               apply$default$1
  #200 = Utf8               $content
  #201 = Utf8               ()Lscala/collection/immutable/Seq;
  #202 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #203 = Utf8               scala/Tuple2
  #204 = Class              #203          // scala/Tuple2
  #205 = Utf8               type
  #206 = String             #205          // type
  #207 = Utf8               List
  #208 = Utf8               ()Lscala/collection/immutable/List$;
  #209 = NameAndType        #207:#208     // List:()Lscala/collection/immutable/List$;
  #210 = Methodref          #156.#209     // scala/package$.List:()Lscala/collection/immutable/List$;
  #211 = Utf8               org
  #212 = String             #211          // org
  #213 = Utf8               sireum
  #214 = String             #213          // sireum
  #215 = Utf8               project
  #216 = String             #215          // project
  #217 = Utf8               [Ljava/lang/Object;
  #218 = Class              #217          // "[Ljava/lang/Object;"
  #219 = Utf8               wrapRefArray
  #220 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #221 = NameAndType        #219:#220     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #222 = Methodref          #165.#221     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #223 = Utf8               scala/collection/immutable/List$
  #224 = Class              #223          // scala/collection/immutable/List$
  #225 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #226 = NameAndType        #145:#225     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #227 = Methodref          #224.#226     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #228 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #229 = NameAndType        #108:#228     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #230 = Methodref          #204.#229     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #231 = String             #94           // input
  #232 = Utf8               scala/collection/immutable/Seq
  #233 = Class              #232          // scala/collection/immutable/Seq
  #234 = Utf8               $clone
  #235 = Utf8               ()Lorg/sireum/project/JSON$Parser;
  #236 = Utf8               org/sireum/helper$
  #237 = Class              #236          // org/sireum/helper$
  #238 = Utf8               Lorg/sireum/helper$;
  #239 = NameAndType        #122:#238     // MODULE$:Lorg/sireum/helper$;
  #240 = Fieldref           #237.#239     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #241 = Utf8               cloneAssign
  #242 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #243 = NameAndType        #241:#242     // cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #244 = Methodref          #237.#243     // org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #245 = Utf8               value
  #246 = NameAndType        #245:#95      // value:()Ljava/lang/String;
  #247 = Methodref          #127.#246     // org/sireum/String.value:()Ljava/lang/String;
  #248 = Utf8               r
  #249 = Utf8               ()Lorg/sireum/Json$Parser;
  #250 = NameAndType        #47:#48       // parser:Lorg/sireum/Json$Parser;
  #251 = Fieldref           #2.#250       // org/sireum/project/JSON$Parser.parser:Lorg/sireum/Json$Parser;
  #252 = Utf8               errorOpt
  #253 = Utf8               ()Lorg/sireum/Option;
  #254 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/Json$ErrorMsg;>;
  #255 = NameAndType        #47:#249      // parser:()Lorg/sireum/Json$Parser;
  #256 = Methodref          #2.#255       // org/sireum/project/JSON$Parser.parser:()Lorg/sireum/Json$Parser;
  #257 = NameAndType        #252:#253     // errorOpt:()Lorg/sireum/Option;
  #258 = Methodref          #19.#257      // org/sireum/Json$Parser.errorOpt:()Lorg/sireum/Option;
  #259 = Utf8               parseProject
  #260 = Utf8               ()Lorg/sireum/project/Project;
  #261 = Utf8               org/sireum/package$
  #262 = Class              #261          // org/sireum/package$
  #263 = Utf8               Lorg/sireum/package$;
  #264 = NameAndType        #122:#263     // MODULE$:Lorg/sireum/package$;
  #265 = Fieldref           #262.#264     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #266 = Utf8               F
  #267 = NameAndType        #266:#52      // F:()Z
  #268 = Methodref          #262.#267     // org/sireum/package$.F:()Z
  #269 = Utf8               parseProjectT
  #270 = Utf8               (Z)Lorg/sireum/project/Project;
  #271 = NameAndType        #269:#270     // parseProjectT:(Z)Lorg/sireum/project/Project;
  #272 = Methodref          #2.#271       // org/sireum/project/JSON$Parser.parseProjectT:(Z)Lorg/sireum/project/Project;
  #273 = Utf8               Lorg/sireum/project/Project;
  #274 = Utf8               typeParsed
  #275 = Utf8               org/sireum/B$
  #276 = Class              #275          // org/sireum/B$
  #277 = Utf8               Lorg/sireum/B$;
  #278 = NameAndType        #122:#277     // MODULE$:Lorg/sireum/B$;
  #279 = Fieldref           #276.#278     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #280 = Utf8               unary_$bang$extension
  #281 = Utf8               (Z)Z
  #282 = NameAndType        #280:#281     // unary_$bang$extension:(Z)Z
  #283 = Methodref          #276.#282     // org/sireum/B$.unary_$bang$extension:(Z)Z
  #284 = Utf8               $4B
  #285 = NameAndType        #284:#281     // $4B:(Z)Z
  #286 = Methodref          #276.#285     // org/sireum/B$.$4B:(Z)Z
  #287 = Utf8               Project
  #288 = String             #287          // Project
  #289 = Utf8               parseObjectType
  #290 = NameAndType        #289:#146     // parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
  #291 = Methodref          #19.#290      // org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
  #292 = Utf8               scala/runtime/BoxedUnit
  #293 = Class              #292          // scala/runtime/BoxedUnit
  #294 = Utf8               UNIT
  #295 = Utf8               Lscala/runtime/BoxedUnit;
  #296 = NameAndType        #294:#295     // UNIT:Lscala/runtime/BoxedUnit;
  #297 = Fieldref           #293.#296     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #298 = Utf8               modules
  #299 = String             #298          // modules
  #300 = Utf8               parseObjectKey
  #301 = NameAndType        #300:#146     // parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
  #302 = Methodref          #19.#301      // org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
  #303 = Utf8               ()Ljava/lang/Object;
  #304 = MethodType         #303          //  ()Ljava/lang/Object;
  #305 = Utf8               $anonfun$parseProjectT$1$adapted
  #306 = Utf8               (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #307 = NameAndType        #305:#306     // $anonfun$parseProjectT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #308 = Methodref          #2.#307       // org/sireum/project/JSON$Parser.$anonfun$parseProjectT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #309 = MethodHandle       6:#308        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #310 = Integer            1
  #311 = Utf8               java/lang/invoke/LambdaMetafactory
  #312 = Class              #311          // java/lang/invoke/LambdaMetafactory
  #313 = Utf8               altMetafactory
  #314 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #315 = NameAndType        #313:#314     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #316 = Methodref          #312.#315     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #317 = MethodHandle       6:#316        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #318 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #319 = NameAndType        #145:#318     // apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #320 = InvokeDynamic      #0:#319       // #0:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #321 = Utf8               $anonfun$parseProjectT$2
  #322 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #323 = NameAndType        #321:#322     // $anonfun$parseProjectT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #324 = Methodref          #2.#323       // org/sireum/project/JSON$Parser.$anonfun$parseProjectT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #325 = MethodHandle       6:#324        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
  #326 = Utf8               ()Lorg/sireum/project/Module;
  #327 = MethodType         #326          //  ()Lorg/sireum/project/Module;
  #328 = Integer            5
  #329 = InvokeDynamic      #1:#319       // #1:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #330 = Utf8               parseHashSMap
  #331 = Utf8               (Lscala/Function0;Lscala/Function0;)Lorg/sireum/HashSMap;
  #332 = NameAndType        #330:#331     // parseHashSMap:(Lscala/Function0;Lscala/Function0;)Lorg/sireum/HashSMap;
  #333 = Methodref          #19.#332      // org/sireum/Json$Parser.parseHashSMap:(Lscala/Function0;Lscala/Function0;)Lorg/sireum/HashSMap;
  #334 = Utf8               parseObjectNext
  #335 = NameAndType        #334:#52      // parseObjectNext:()Z
  #336 = Methodref          #19.#335      // org/sireum/Json$Parser.parseObjectNext:()Z
  #337 = Utf8               poset
  #338 = String             #337          // poset
  #339 = Utf8               $anonfun$parseProjectT$3$adapted
  #340 = NameAndType        #339:#306     // $anonfun$parseProjectT$3$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #341 = Methodref          #2.#340       // org/sireum/project/JSON$Parser.$anonfun$parseProjectT$3$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #342 = MethodHandle       6:#341        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$3$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #343 = InvokeDynamic      #2:#319       // #2:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #344 = Utf8               parsePoset
  #345 = Utf8               (Lscala/Function0;)Lorg/sireum/Poset;
  #346 = NameAndType        #344:#345     // parsePoset:(Lscala/Function0;)Lorg/sireum/Poset;
  #347 = Methodref          #19.#346      // org/sireum/Json$Parser.parsePoset:(Lscala/Function0;)Lorg/sireum/Poset;
  #348 = Utf8               mavenRepoUrls
  #349 = String             #348          // mavenRepoUrls
  #350 = Utf8               $anonfun$parseProjectT$4$adapted
  #351 = NameAndType        #350:#306     // $anonfun$parseProjectT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #352 = Methodref          #2.#351       // org/sireum/project/JSON$Parser.$anonfun$parseProjectT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #353 = MethodHandle       6:#352        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #354 = InvokeDynamic      #3:#319       // #3:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #355 = Utf8               parseISZ
  #356 = Utf8               (Lscala/Function0;)Lorg/sireum/IS;
  #357 = NameAndType        #355:#356     // parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
  #358 = Methodref          #19.#357      // org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
  #359 = Utf8               org/sireum/project/Project$
  #360 = Class              #359          // org/sireum/project/Project$
  #361 = Utf8               Lorg/sireum/project/Project$;
  #362 = NameAndType        #122:#361     // MODULE$:Lorg/sireum/project/Project$;
  #363 = Fieldref           #360.#362     // org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
  #364 = Utf8               (Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
  #365 = NameAndType        #145:#364     // apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
  #366 = Methodref          #360.#365     // org/sireum/project/Project$.apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
  #367 = Utf8               Lorg/sireum/HashSMap;
  #368 = Utf8               Lorg/sireum/Poset;
  #369 = Utf8               Lorg/sireum/IS;
  #370 = Utf8               parseTargetType
  #371 = Utf8               ()Lorg/sireum/project/Target$Type;
  #372 = Utf8               parseTargetT
  #373 = Utf8               (Z)Lorg/sireum/project/Target$Type;
  #374 = NameAndType        #372:#373     // parseTargetT:(Z)Lorg/sireum/project/Target$Type;
  #375 = Methodref          #2.#374       // org/sireum/project/JSON$Parser.parseTargetT:(Z)Lorg/sireum/project/Target$Type;
  #376 = Utf8               Lorg/sireum/project/Target$Type;
  #377 = Utf8               Target
  #378 = String             #377          // Target
  #379 = String             #245          // value
  #380 = Utf8               offset
  #381 = NameAndType        #380:#67      // offset:()Lorg/sireum/Z;
  #382 = Methodref          #19.#381      // org/sireum/Json$Parser.offset:()Lorg/sireum/Z;
  #383 = Utf8               parseString
  #384 = NameAndType        #383:#95      // parseString:()Ljava/lang/String;
  #385 = Methodref          #19.#384      // org/sireum/Json$Parser.parseString:()Ljava/lang/String;
  #386 = Utf8               org/sireum/project/Target$
  #387 = Class              #386          // org/sireum/project/Target$
  #388 = Utf8               Lorg/sireum/project/Target$;
  #389 = NameAndType        #122:#388     // MODULE$:Lorg/sireum/project/Target$;
  #390 = Fieldref           #387.#389     // org/sireum/project/Target$.MODULE$:Lorg/sireum/project/Target$;
  #391 = Utf8               byName
  #392 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option;
  #393 = NameAndType        #391:#392     // byName:(Ljava/lang/String;)Lorg/sireum/Option;
  #394 = Methodref          #387.#393     // org/sireum/project/Target$.byName:(Ljava/lang/String;)Lorg/sireum/Option;
  #395 = Utf8               org/sireum/Some
  #396 = Class              #395          // org/sireum/Some
  #397 = Utf8               org/sireum/Some$
  #398 = Class              #397          // org/sireum/Some$
  #399 = Utf8               Lorg/sireum/Some$;
  #400 = NameAndType        #122:#399     // MODULE$:Lorg/sireum/Some$;
  #401 = Fieldref           #398.#400     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #402 = Utf8               unapply
  #403 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #404 = NameAndType        #402:#403     // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #405 = Methodref          #398.#404     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #406 = Utf8               scala/Some
  #407 = Class              #406          // scala/Some
  #408 = Utf8               isEmpty
  #409 = NameAndType        #408:#52      // isEmpty:()Z
  #410 = Methodref          #407.#409     // scala/Some.isEmpty:()Z
  #411 = Utf8               get
  #412 = NameAndType        #411:#303     // get:()Ljava/lang/Object;
  #413 = Methodref          #407.#412     // scala/Some.get:()Ljava/lang/Object;
  #414 = Integer            35
  #415 = Utf8               (I)V
  #416 = NameAndType        #108:#415     // "<init>":(I)V
  #417 = Methodref          #107.#416     // java/lang/StringBuilder."<init>":(I)V
  #418 = Utf8               Invalid element name \'
  #419 = String             #418          // Invalid element name \'
  #420 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #421 = NameAndType        #113:#420     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #422 = Methodref          #107.#421     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #423 = Utf8               \' for Target.
  #424 = String             #423          // \' for Target.
  #425 = Utf8               parseException
  #426 = Utf8               (Lorg/sireum/Z;Ljava/lang/String;)V
  #427 = NameAndType        #425:#426     // parseException:(Lorg/sireum/Z;Ljava/lang/String;)V
  #428 = Methodref          #19.#427      // org/sireum/Json$Parser.parseException:(Lorg/sireum/Z;Ljava/lang/String;)V
  #429 = Utf8               org/sireum/Z$
  #430 = Class              #429          // org/sireum/Z$
  #431 = Utf8               Lorg/sireum/Z$;
  #432 = NameAndType        #122:#431     // MODULE$:Lorg/sireum/Z$;
  #433 = Fieldref           #430.#432     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #434 = Utf8               (I)Lorg/sireum/Z;
  #435 = NameAndType        #145:#434     // apply:(I)Lorg/sireum/Z;
  #436 = Methodref          #430.#435     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #437 = Utf8               byOrdinal
  #438 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Option;
  #439 = NameAndType        #437:#438     // byOrdinal:(Lorg/sireum/Z;)Lorg/sireum/Option;
  #440 = Methodref          #387.#439     // org/sireum/project/Target$.byOrdinal:(Lorg/sireum/Z;)Lorg/sireum/Option;
  #441 = Utf8               org/sireum/Option
  #442 = Class              #441          // org/sireum/Option
  #443 = InterfaceMethodref #442.#412     // org/sireum/Option.get:()Ljava/lang/Object;
  #444 = Utf8               i
  #445 = Utf8               Lorg/sireum/Z;
  #446 = Utf8               s
  #447 = Utf8               org/sireum/Z
  #448 = Class              #447          // org/sireum/Z
  #449 = Utf8               parseModule
  #450 = Utf8               parseModuleT
  #451 = Utf8               (Z)Lorg/sireum/project/Module;
  #452 = NameAndType        #450:#451     // parseModuleT:(Z)Lorg/sireum/project/Module;
  #453 = Methodref          #2.#452       // org/sireum/project/JSON$Parser.parseModuleT:(Z)Lorg/sireum/project/Module;
  #454 = Utf8               Lorg/sireum/project/Module;
  #455 = Utf8               Module
  #456 = String             #455          // Module
  #457 = Utf8               id
  #458 = String             #457          // id
  #459 = Utf8               basePath
  #460 = String             #459          // basePath
  #461 = Utf8               subPathOpt
  #462 = String             #461          // subPathOpt
  #463 = Utf8               $anonfun$parseModuleT$1$adapted
  #464 = NameAndType        #463:#306     // $anonfun$parseModuleT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #465 = Methodref          #2.#464       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #466 = MethodHandle       6:#465        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #467 = InvokeDynamic      #4:#319       // #4:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #468 = Utf8               parseOption
  #469 = Utf8               (Lscala/Function0;)Lorg/sireum/Option;
  #470 = NameAndType        #468:#469     // parseOption:(Lscala/Function0;)Lorg/sireum/Option;
  #471 = Methodref          #19.#470      // org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
  #472 = Utf8               deps
  #473 = String             #472          // deps
  #474 = Utf8               $anonfun$parseModuleT$2$adapted
  #475 = NameAndType        #474:#306     // $anonfun$parseModuleT$2$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #476 = Methodref          #2.#475       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$2$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #477 = MethodHandle       6:#476        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$2$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #478 = InvokeDynamic      #5:#319       // #5:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #479 = Utf8               targets
  #480 = String             #479          // targets
  #481 = Utf8               $anonfun$parseModuleT$3
  #482 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Target$Type;
  #483 = NameAndType        #481:#482     // $anonfun$parseModuleT$3:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Target$Type;
  #484 = Methodref          #2.#483       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$3:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Target$Type;
  #485 = MethodHandle       6:#484        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$3:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Target$Type;
  #486 = MethodType         #371          //  ()Lorg/sireum/project/Target$Type;
  #487 = InvokeDynamic      #6:#319       // #6:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #488 = Utf8               ivyDeps
  #489 = String             #488          // ivyDeps
  #490 = Utf8               $anonfun$parseModuleT$4$adapted
  #491 = NameAndType        #490:#306     // $anonfun$parseModuleT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #492 = Methodref          #2.#491       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #493 = MethodHandle       6:#492        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #494 = InvokeDynamic      #7:#319       // #7:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #495 = Utf8               sources
  #496 = String             #495          // sources
  #497 = Utf8               $anonfun$parseModuleT$5$adapted
  #498 = NameAndType        #497:#306     // $anonfun$parseModuleT$5$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #499 = Methodref          #2.#498       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$5$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #500 = MethodHandle       6:#499        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$5$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #501 = InvokeDynamic      #8:#319       // #8:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #502 = Utf8               resources
  #503 = String             #502          // resources
  #504 = Utf8               $anonfun$parseModuleT$6$adapted
  #505 = NameAndType        #504:#306     // $anonfun$parseModuleT$6$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #506 = Methodref          #2.#505       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$6$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #507 = MethodHandle       6:#506        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$6$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #508 = InvokeDynamic      #9:#319       // #9:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #509 = Utf8               testSources
  #510 = String             #509          // testSources
  #511 = Utf8               $anonfun$parseModuleT$7$adapted
  #512 = NameAndType        #511:#306     // $anonfun$parseModuleT$7$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #513 = Methodref          #2.#512       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$7$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #514 = MethodHandle       6:#513        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$7$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #515 = InvokeDynamic      #10:#319      // #10:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #516 = Utf8               testResources
  #517 = String             #516          // testResources
  #518 = Utf8               $anonfun$parseModuleT$8$adapted
  #519 = NameAndType        #518:#306     // $anonfun$parseModuleT$8$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #520 = Methodref          #2.#519       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$8$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #521 = MethodHandle       6:#520        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$8$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
  #522 = InvokeDynamic      #11:#319      // #11:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #523 = Utf8               publishInfoOpt
  #524 = String             #523          // publishInfoOpt
  #525 = Utf8               $anonfun$parseModuleT$9
  #526 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #527 = NameAndType        #525:#526     // $anonfun$parseModuleT$9:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #528 = Methodref          #2.#527       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$9:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #529 = MethodHandle       6:#528        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$9:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
  #530 = Utf8               ()Lorg/sireum/project/PublishInfo;
  #531 = MethodType         #530          //  ()Lorg/sireum/project/PublishInfo;
  #532 = InvokeDynamic      #12:#319      // #12:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #533 = Utf8               org/sireum/project/Module$
  #534 = Class              #533          // org/sireum/project/Module$
  #535 = Utf8               Lorg/sireum/project/Module$;
  #536 = NameAndType        #122:#535     // MODULE$:Lorg/sireum/project/Module$;
  #537 = Fieldref           #534.#536     // org/sireum/project/Module$.MODULE$:Lorg/sireum/project/Module$;
  #538 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
  #539 = NameAndType        #145:#538     // apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
  #540 = Methodref          #534.#539     // org/sireum/project/Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
  #541 = Utf8               Lorg/sireum/Option;
  #542 = Utf8               parsePublishInfo
  #543 = Utf8               parsePublishInfoT
  #544 = Utf8               (Z)Lorg/sireum/project/PublishInfo;
  #545 = NameAndType        #543:#544     // parsePublishInfoT:(Z)Lorg/sireum/project/PublishInfo;
  #546 = Methodref          #2.#545       // org/sireum/project/JSON$Parser.parsePublishInfoT:(Z)Lorg/sireum/project/PublishInfo;
  #547 = Utf8               Lorg/sireum/project/PublishInfo;
  #548 = Utf8               PublishInfo
  #549 = String             #548          // PublishInfo
  #550 = Utf8               description
  #551 = String             #550          // description
  #552 = Utf8               url
  #553 = String             #552          // url
  #554 = Utf8               licenses
  #555 = String             #554          // licenses
  #556 = Utf8               $anonfun$parsePublishInfoT$1
  #557 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #558 = NameAndType        #556:#557     // $anonfun$parsePublishInfoT$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #559 = Methodref          #2.#558       // org/sireum/project/JSON$Parser.$anonfun$parsePublishInfoT$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #560 = MethodHandle       6:#559        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parsePublishInfoT$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
  #561 = Utf8               ()Lorg/sireum/project/PublishInfo$License;
  #562 = MethodType         #561          //  ()Lorg/sireum/project/PublishInfo$License;
  #563 = InvokeDynamic      #13:#319      // #13:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #564 = Utf8               developers
  #565 = String             #564          // developers
  #566 = Utf8               $anonfun$parsePublishInfoT$2
  #567 = Utf8               (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #568 = NameAndType        #566:#567     // $anonfun$parsePublishInfoT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #569 = Methodref          #2.#568       // org/sireum/project/JSON$Parser.$anonfun$parsePublishInfoT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #570 = MethodHandle       6:#569        // REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parsePublishInfoT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  #571 = Utf8               ()Lorg/sireum/project/PublishInfo$Developer;
  #572 = MethodType         #571          //  ()Lorg/sireum/project/PublishInfo$Developer;
  #573 = InvokeDynamic      #14:#319      // #14:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
  #574 = Utf8               org/sireum/project/PublishInfo$
  #575 = Class              #574          // org/sireum/project/PublishInfo$
  #576 = Utf8               Lorg/sireum/project/PublishInfo$;
  #577 = NameAndType        #122:#576     // MODULE$:Lorg/sireum/project/PublishInfo$;
  #578 = Fieldref           #575.#577     // org/sireum/project/PublishInfo$.MODULE$:Lorg/sireum/project/PublishInfo$;
  #579 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/project/PublishInfo;
  #580 = NameAndType        #145:#579     // apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/project/PublishInfo;
  #581 = Methodref          #575.#580     // org/sireum/project/PublishInfo$.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/project/PublishInfo;
  #582 = Utf8               parsePublishInfoLicense
  #583 = Utf8               parsePublishInfoLicenseT
  #584 = Utf8               (Z)Lorg/sireum/project/PublishInfo$License;
  #585 = NameAndType        #583:#584     // parsePublishInfoLicenseT:(Z)Lorg/sireum/project/PublishInfo$License;
  #586 = Methodref          #2.#585       // org/sireum/project/JSON$Parser.parsePublishInfoLicenseT:(Z)Lorg/sireum/project/PublishInfo$License;
  #587 = Utf8               Lorg/sireum/project/PublishInfo$License;
  #588 = Utf8               PublishInfo.License
  #589 = String             #588          // PublishInfo.License
  #590 = Utf8               name
  #591 = String             #590          // name
  #592 = Utf8               distribution
  #593 = String             #592          // distribution
  #594 = Utf8               Lorg/sireum/project/PublishInfo$License$;
  #595 = NameAndType        #122:#594     // MODULE$:Lorg/sireum/project/PublishInfo$License$;
  #596 = Fieldref           #38.#595      // org/sireum/project/PublishInfo$License$.MODULE$:Lorg/sireum/project/PublishInfo$License$;
  #597 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/project/PublishInfo$License;
  #598 = NameAndType        #145:#597     // apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/project/PublishInfo$License;
  #599 = Methodref          #38.#598      // org/sireum/project/PublishInfo$License$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/project/PublishInfo$License;
  #600 = Utf8               parsePublishInfoDeveloper
  #601 = Utf8               parsePublishInfoDeveloperT
  #602 = Utf8               (Z)Lorg/sireum/project/PublishInfo$Developer;
  #603 = NameAndType        #601:#602     // parsePublishInfoDeveloperT:(Z)Lorg/sireum/project/PublishInfo$Developer;
  #604 = Methodref          #2.#603       // org/sireum/project/JSON$Parser.parsePublishInfoDeveloperT:(Z)Lorg/sireum/project/PublishInfo$Developer;
  #605 = Utf8               Lorg/sireum/project/PublishInfo$Developer;
  #606 = Utf8               PublishInfo.Developer
  #607 = String             #606          // PublishInfo.Developer
  #608 = Utf8               Lorg/sireum/project/PublishInfo$Developer$;
  #609 = NameAndType        #122:#608     // MODULE$:Lorg/sireum/project/PublishInfo$Developer$;
  #610 = Fieldref           #32.#609      // org/sireum/project/PublishInfo$Developer$.MODULE$:Lorg/sireum/project/PublishInfo$Developer$;
  #611 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/project/PublishInfo$Developer;
  #612 = NameAndType        #145:#611     // apply:(Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/project/PublishInfo$Developer;
  #613 = Methodref          #32.#612      // org/sireum/project/PublishInfo$Developer$.apply:(Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/project/PublishInfo$Developer;
  #614 = Utf8               eof
  #615 = NameAndType        #614:#52      // eof:()Z
  #616 = Methodref          #19.#615      // org/sireum/Json$Parser.eof:()Z
  #617 = Utf8               (Z)Lorg/sireum/$internal/MutableMarker;
  #618 = NameAndType        #59:#60       // $owned_$eq:(Z)Lorg/sireum/RecordSig;
  #619 = Methodref          #2.#618       // org/sireum/project/JSON$Parser.$owned_$eq:(Z)Lorg/sireum/RecordSig;
  #620 = NameAndType        #234:#235     // $clone:()Lorg/sireum/project/JSON$Parser;
  #621 = Methodref          #2.#620       // org/sireum/project/JSON$Parser.$clone:()Lorg/sireum/project/JSON$Parser;
  #622 = Utf8               ()Lorg/sireum/$internal/MutableMarker;
  #623 = Utf8               $anonfun$parseProjectT$1
  #624 = Utf8               (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #625 = Utf8               $this
  #626 = NameAndType        #449:#326     // parseModule:()Lorg/sireum/project/Module;
  #627 = Methodref          #2.#626       // org/sireum/project/JSON$Parser.parseModule:()Lorg/sireum/project/Module;
  #628 = Utf8               $anonfun$parseProjectT$3
  #629 = Utf8               $anonfun$parseProjectT$4
  #630 = Utf8               $anonfun$parseModuleT$1
  #631 = Utf8               $anonfun$parseModuleT$2
  #632 = NameAndType        #370:#371     // parseTargetType:()Lorg/sireum/project/Target$Type;
  #633 = Methodref          #2.#632       // org/sireum/project/JSON$Parser.parseTargetType:()Lorg/sireum/project/Target$Type;
  #634 = Utf8               $anonfun$parseModuleT$4
  #635 = Utf8               $anonfun$parseModuleT$5
  #636 = Utf8               $anonfun$parseModuleT$6
  #637 = Utf8               $anonfun$parseModuleT$7
  #638 = Utf8               $anonfun$parseModuleT$8
  #639 = NameAndType        #542:#530     // parsePublishInfo:()Lorg/sireum/project/PublishInfo;
  #640 = Methodref          #2.#639       // org/sireum/project/JSON$Parser.parsePublishInfo:()Lorg/sireum/project/PublishInfo;
  #641 = NameAndType        #582:#561     // parsePublishInfoLicense:()Lorg/sireum/project/PublishInfo$License;
  #642 = Methodref          #2.#641       // org/sireum/project/JSON$Parser.parsePublishInfoLicense:()Lorg/sireum/project/PublishInfo$License;
  #643 = NameAndType        #600:#571     // parsePublishInfoDeveloper:()Lorg/sireum/project/PublishInfo$Developer;
  #644 = Methodref          #2.#643       // org/sireum/project/JSON$Parser.parsePublishInfoDeveloper:()Lorg/sireum/project/PublishInfo$Developer;
  #645 = Utf8               __input
  #646 = Methodref          #4.#110       // java/lang/Object."<init>":()V
  #647 = Utf8               $init$
  #648 = Utf8               (Lorg/sireum/Mutable;)V
  #649 = NameAndType        #647:#648     // $init$:(Lorg/sireum/Mutable;)V
  #650 = InterfaceMethodref #75.#649      // org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
  #651 = Utf8               (Lorg/sireum/RecordSig;)V
  #652 = NameAndType        #647:#651     // $init$:(Lorg/sireum/RecordSig;)V
  #653 = InterfaceMethodref #6.#652       // org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
  #654 = Utf8               Lorg/sireum/Json$Parser$;
  #655 = NameAndType        #122:#654     // MODULE$:Lorg/sireum/Json$Parser$;
  #656 = Fieldref           #22.#655      // org/sireum/Json$Parser$.MODULE$:Lorg/sireum/Json$Parser$;
  #657 = Utf8               create
  #658 = Utf8               (Ljava/lang/String;)Lorg/sireum/Json$Parser;
  #659 = NameAndType        #657:#658     // create:(Ljava/lang/String;)Lorg/sireum/Json$Parser;
  #660 = Methodref          #22.#659      // org/sireum/Json$Parser$.create:(Ljava/lang/String;)Lorg/sireum/Json$Parser;
  #661 = Utf8               assignMut
  #662 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #663 = NameAndType        #661:#662     // assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #664 = Methodref          #237.#663     // org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #665 = NameAndType        #623:#624     // $anonfun$parseProjectT$1:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #666 = Methodref          #2.#665       // org/sireum/project/JSON$Parser.$anonfun$parseProjectT$1:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #667 = NameAndType        #628:#624     // $anonfun$parseProjectT$3:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #668 = Methodref          #2.#667       // org/sireum/project/JSON$Parser.$anonfun$parseProjectT$3:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #669 = NameAndType        #629:#624     // $anonfun$parseProjectT$4:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #670 = Methodref          #2.#669       // org/sireum/project/JSON$Parser.$anonfun$parseProjectT$4:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #671 = NameAndType        #630:#624     // $anonfun$parseModuleT$1:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #672 = Methodref          #2.#671       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$1:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #673 = NameAndType        #631:#624     // $anonfun$parseModuleT$2:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #674 = Methodref          #2.#673       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$2:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #675 = NameAndType        #634:#624     // $anonfun$parseModuleT$4:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #676 = Methodref          #2.#675       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$4:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #677 = NameAndType        #635:#624     // $anonfun$parseModuleT$5:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #678 = Methodref          #2.#677       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$5:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #679 = NameAndType        #636:#624     // $anonfun$parseModuleT$6:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #680 = Methodref          #2.#679       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$6:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #681 = NameAndType        #637:#624     // $anonfun$parseModuleT$7:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #682 = Methodref          #2.#681       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$7:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #683 = NameAndType        #638:#624     // $anonfun$parseModuleT$8:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #684 = Methodref          #2.#683       // org/sireum/project/JSON$Parser.$anonfun$parseModuleT$8:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
  #685 = Utf8               $deserializeLambda$
  #686 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #687 = Utf8               scala/runtime/LambdaDeserialize
  #688 = Class              #687          // scala/runtime/LambdaDeserialize
  #689 = Utf8               bootstrap
  #690 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #691 = NameAndType        #689:#690     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #692 = Methodref          #688.#691     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #693 = MethodHandle       6:#692        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #694 = Utf8               lambdaDeserialize
  #695 = NameAndType        #694:#686     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #696 = InvokeDynamic      #15:#695      // #15:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #697 = Utf8               Code
  #698 = Utf8               LineNumberTable
  #699 = Utf8               LocalVariableTable
  #700 = Utf8               MethodParameters
  #701 = Utf8               StackMapTable
  #702 = Utf8               Signature
  #703 = Utf8               InnerClasses
  #704 = Utf8               SourceFile
  #705 = Utf8               BootstrapMethods
  #706 = Utf8               ScalaInlineInfo
  #707 = Utf8               Scala
{
  private java.lang.String _input;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private final org.sireum.Json$Parser parser;
    descriptor: Lorg/sireum/Json$Parser;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private boolean org$sireum$RecordSig$$$isOwned;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public final boolean $owned();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #56                 // InterfaceMethod org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
         4: ireturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public final org.sireum.RecordSig $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/RecordSig;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #65                 // InterfaceMethod org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/project/JSON$Parser;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #84                 // InterfaceMethod org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #88                 // InterfaceMethod org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public boolean org$sireum$RecordSig$$$isOwned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #90                 // Field org$sireum$RecordSig$$$isOwned:Z
         4: ireturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public void org$sireum$RecordSig$$$isOwned_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #90                 // Field org$sireum$RecordSig$$$isOwned:Z
         5: return
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/project/JSON$Parser;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String input();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #97                 // Field _input:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public java.lang.String getInput();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #97                 // Field _input:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #101                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #105                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          69
        14: new           #107                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #111                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #112                // String Parser
        25: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #119                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #127                // class org/sireum/String
        43: dup
        44: aload_0
        45: invokevirtual #129                // Method input:()Ljava/lang/String;
        48: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        51: invokevirtual #136                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: bipush        41
        61: invokevirtual #119                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        64: pop
        65: aload_1
        66: invokevirtual #138                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        69: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 118 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      47     1    sb   Ljava/lang/StringBuilder;
            0      70     0  this   Lorg/sireum/project/JSON$Parser;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #101                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #105                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #144                // Method toString:()Ljava/lang/String;
        21: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/project/JSON$Parser;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #152                // Method $hasEquals:()Z
         4: ifeq          14
         7: aload_0
         8: invokespecial #154                // Method java/lang/Object.hashCode:()I
        11: goto          65
        14: getstatic     #159                // Field scala/package$.MODULE$:Lscala/package$;
        17: invokevirtual #163                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        20: getstatic     #168                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        23: iconst_2
        24: anewarray     #4                  // class java/lang/Object
        27: dup
        28: iconst_0
        29: aload_0
        30: invokevirtual #172                // Method getClass:()Ljava/lang/Class;
        33: invokevirtual #177                // Method java/lang/Class.getName:()Ljava/lang/String;
        36: aastore
        37: dup
        38: iconst_1
        39: new           #127                // class org/sireum/String
        42: dup
        43: aload_0
        44: invokevirtual #129                // Method input:()Ljava/lang/String;
        47: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        50: aastore
        51: invokevirtual #181                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        54: invokevirtual #186                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        57: checkcast     #188                // class scala/collection/Seq
        60: invokeinterface #189,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        65: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 114 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lorg/sireum/project/JSON$Parser;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #152                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #194                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          105
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          105
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/project/JSON$Parser
        30: ifeq          96
        33: aload_3
        34: checkcast     #2                  // class org/sireum/project/JSON$Parser
        37: astore        4
        39: aload_0
        40: invokevirtual #195                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #195                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          92
        55: aload_0
        56: invokevirtual #129                // Method input:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #129                // Method input:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          91
        79: aload         5
        81: invokevirtual #194                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: istore_2
        93: goto          104
        96: goto          99
        99: iconst_0
       100: istore_2
       101: goto          104
       104: iload_2
       105: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/project/JSON$Parser ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/JSON$Parser, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/JSON$Parser, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/project/JSON$Parser, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/JSON$Parser ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/project/JSON$Parser, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/project/JSON$Parser, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0  this   Lorg/sireum/project/JSON$Parser;
            0     106     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.project.JSON$Parser apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/project/JSON$Parser;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/sireum/project/JSON$Parser
         3: dup
         4: aload_1
         5: invokespecial #198                // Method "<init>":(Ljava/lang/String;)V
         8: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/project/JSON$Parser;
            0       9     1 input   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      input                          final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #129                // Method input:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=1, args_size=1
         0: getstatic     #159                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #163                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         6: getstatic     #168                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: iconst_2
        10: anewarray     #204                // class scala/Tuple2
        13: dup
        14: iconst_0
        15: new           #204                // class scala/Tuple2
        18: dup
        19: ldc           #206                // String type
        21: getstatic     #159                // Field scala/package$.MODULE$:Lscala/package$;
        24: invokevirtual #210                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        27: getstatic     #168                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        30: iconst_4
        31: anewarray     #142                // class java/lang/String
        34: dup
        35: iconst_0
        36: ldc           #212                // String org
        38: aastore
        39: dup
        40: iconst_1
        41: ldc           #214                // String sireum
        43: aastore
        44: dup
        45: iconst_2
        46: ldc           #216                // String project
        48: aastore
        49: dup
        50: iconst_3
        51: ldc           #112                // String Parser
        53: aastore
        54: checkcast     #218                // class "[Ljava/lang/Object;"
        57: invokevirtual #222                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        60: invokevirtual #227                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        63: invokespecial #230                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        66: aastore
        67: dup
        68: iconst_1
        69: new           #204                // class scala/Tuple2
        72: dup
        73: ldc           #231                // String input
        75: new           #127                // class org/sireum/String
        78: dup
        79: aload_0
        80: invokevirtual #129                // Method input:()Ljava/lang/String;
        83: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        86: invokespecial #230                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        89: aastore
        90: checkcast     #218                // class "[Ljava/lang/Object;"
        93: invokevirtual #222                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        96: invokevirtual #186                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        99: checkcast     #233                // class scala/collection/immutable/Seq
       102: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     103     0  this   Lorg/sireum/project/JSON$Parser;
    Signature: #202                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.project.JSON$Parser $clone();
    descriptor: ()Lorg/sireum/project/JSON$Parser;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=1
         0: new           #2                  // class org/sireum/project/JSON$Parser
         3: dup
         4: getstatic     #240                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         7: new           #127                // class org/sireum/String
        10: dup
        11: aload_0
        12: invokevirtual #129                // Method input:()Ljava/lang/String;
        15: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        18: invokevirtual #244                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        21: checkcast     #127                // class org/sireum/String
        24: invokevirtual #247                // Method org/sireum/String.value:()Ljava/lang/String;
        27: invokespecial #198                // Method "<init>":(Ljava/lang/String;)V
        30: astore_1
        31: aload_1
        32: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31       1     1     r   Lorg/sireum/project/JSON$Parser;
            0      33     0  this   Lorg/sireum/project/JSON$Parser;

  public org.sireum.Json$Parser parser();
    descriptor: ()Lorg/sireum/Json$Parser;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #251                // Field parser:Lorg/sireum/Json$Parser;
         4: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public org.sireum.Option<org.sireum.Json$ErrorMsg> errorOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #258                // Method org/sireum/Json$Parser.errorOpt:()Lorg/sireum/Option;
         7: areturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/project/JSON$Parser;
    Signature: #254                         // ()Lorg/sireum/Option<Lorg/sireum/Json$ErrorMsg;>;

  public org.sireum.project.Project parseProject();
    descriptor: ()Lorg/sireum/project/Project;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #265                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #268                // Method org/sireum/package$.F:()Z
         7: invokevirtual #272                // Method parseProjectT:(Z)Lorg/sireum/project/Project;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 114: 0
        line 115: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/project/Project;
            0      13     0  this   Lorg/sireum/project/JSON$Parser;

  public org.sireum.project.Project parseProjectT(boolean);
    descriptor: (Z)Lorg/sireum/project/Project;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #283                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #286                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #127                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #288                // String Project
        30: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #291                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #297                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #299                // String modules
        56: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        67: aload_0
        68: invokedynamic #320,  0            // InvokeDynamic #0:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
        73: aload_0
        74: invokedynamic #329,  0            // InvokeDynamic #1:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
        79: invokevirtual #333                // Method org/sireum/Json$Parser.parseHashSMap:(Lscala/Function0;Lscala/Function0;)Lorg/sireum/HashSMap;
        82: astore_2
        83: aload_0
        84: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        87: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        90: pop
        91: aload_0
        92: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        95: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        98: ldc_w         #338                // String poset
       101: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       104: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       107: pop
       108: aload_0
       109: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       112: aload_0
       113: invokedynamic #343,  0            // InvokeDynamic #2:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       118: invokevirtual #347                // Method org/sireum/Json$Parser.parsePoset:(Lscala/Function0;)Lorg/sireum/Poset;
       121: astore_3
       122: aload_0
       123: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       126: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       129: pop
       130: aload_0
       131: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       134: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       137: ldc_w         #349                // String mavenRepoUrls
       140: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       143: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       146: pop
       147: aload_0
       148: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       151: aload_0
       152: invokedynamic #354,  0            // InvokeDynamic #3:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       157: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       160: astore        4
       162: aload_0
       163: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       166: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       169: pop
       170: getstatic     #363                // Field org/sireum/project/Project$.MODULE$:Lorg/sireum/project/Project$;
       173: aload_2
       174: aload_3
       175: aload         4
       177: invokevirtual #366                // Method org/sireum/project/Project$.apply:(Lorg/sireum/HashSMap;Lorg/sireum/Poset;Lorg/sireum/IS;)Lorg/sireum/project/Project;
       180: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 119: 0
        line 120: 16
        line 119: 42
        line 122: 46
        line 123: 63
        line 124: 83
        line 125: 91
        line 126: 108
        line 127: 122
        line 128: 130
        line 129: 147
        line 130: 162
        line 131: 170
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           83      98     2 modules   Lorg/sireum/HashSMap;
          122      59     3 poset   Lorg/sireum/Poset;
          162      19     4 mavenRepoUrls   Lorg/sireum/IS;
            0     181     0  this   Lorg/sireum/project/JSON$Parser;
            0     181     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.project.Target$Type parseTargetType();
    descriptor: ()Lorg/sireum/project/Target$Type;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #265                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #268                // Method org/sireum/package$.F:()Z
         7: invokevirtual #375                // Method parseTargetT:(Z)Lorg/sireum/project/Target$Type;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 135: 0
        line 136: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/project/Target$Type;
            0      13     0  this   Lorg/sireum/project/JSON$Parser;

  public org.sireum.project.Target$Type parseTargetT(boolean);
    descriptor: (Z)Lorg/sireum/project/Target$Type;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=9, args_size=2
         0: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #283                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #286                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #127                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #378                // String Target
        30: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #291                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #297                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #379                // String value
        56: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #382                // Method org/sireum/Json$Parser.offset:()Lorg/sireum/Z;
        70: astore_3
        71: aload_0
        72: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        78: astore        4
        80: aload_0
        81: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        84: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        87: pop
        88: getstatic     #390                // Field org/sireum/project/Target$.MODULE$:Lorg/sireum/project/Target$;
        91: aload         4
        93: invokevirtual #394                // Method org/sireum/project/Target$.byName:(Ljava/lang/String;)Lorg/sireum/Option;
        96: astore        5
        98: aload         5
       100: instanceof    #396                // class org/sireum/Some
       103: ifeq          147
       106: aload         5
       108: checkcast     #396                // class org/sireum/Some
       111: astore        6
       113: getstatic     #401                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       116: aload         6
       118: invokevirtual #405                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       121: astore        7
       123: aload         7
       125: invokevirtual #410                // Method scala/Some.isEmpty:()Z
       128: ifne          144
       131: aload         7
       133: invokevirtual #413                // Method scala/Some.get:()Ljava/lang/Object;
       136: checkcast     #41                 // class org/sireum/project/Target$Type
       139: astore        8
       141: aload         8
       143: areturn
       144: goto          150
       147: goto          150
       150: aload_0
       151: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       154: aload_3
       155: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       158: new           #107                // class java/lang/StringBuilder
       161: dup
       162: ldc_w         #414                // int 35
       165: invokespecial #417                // Method java/lang/StringBuilder."<init>":(I)V
       168: ldc_w         #419                // String Invalid element name \'
       171: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       174: new           #127                // class org/sireum/String
       177: dup
       178: aload         4
       180: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       183: invokevirtual #422                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       186: ldc_w         #424                // String \' for Target.
       189: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       192: invokevirtual #138                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       195: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       198: invokevirtual #428                // Method org/sireum/Json$Parser.parseException:(Lorg/sireum/Z;Ljava/lang/String;)V
       201: getstatic     #390                // Field org/sireum/project/Target$.MODULE$:Lorg/sireum/project/Target$;
       204: getstatic     #433                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       207: iconst_0
       208: invokevirtual #436                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       211: invokevirtual #440                // Method org/sireum/project/Target$.byOrdinal:(Lorg/sireum/Z;)Lorg/sireum/Option;
       214: invokeinterface #443,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
       219: checkcast     #41                 // class org/sireum/project/Target$Type
       222: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 98
          locals = [ class org/sireum/project/JSON$Parser, int, top, class org/sireum/Z, class java/lang/String, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
      LineNumberTable:
        line 140: 0
        line 141: 16
        line 140: 42
        line 143: 46
        line 144: 63
        line 145: 71
        line 146: 80
        line 147: 88
        line 148: 98
        line 147: 131
        line 148: 141
        line 150: 150
        line 151: 201
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          141       3     8     r   Lorg/sireum/project/Target$Type;
           71     152     3     i   Lorg/sireum/Z;
           80     143     4     s   Ljava/lang/String;
            0     223     0  this   Lorg/sireum/project/JSON$Parser;
            0     223     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.project.Module parseModule();
    descriptor: ()Lorg/sireum/project/Module;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #265                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #268                // Method org/sireum/package$.F:()Z
         7: invokevirtual #453                // Method parseModuleT:(Z)Lorg/sireum/project/Module;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 156: 0
        line 157: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/project/Module;
            0      13     0  this   Lorg/sireum/project/JSON$Parser;

  public org.sireum.project.Module parseModuleT(boolean);
    descriptor: (Z)Lorg/sireum/project/Module;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=13, args_size=2
         0: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #283                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #286                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #127                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #456                // String Module
        30: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #291                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #297                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #458                // String id
        56: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        70: astore_2
        71: aload_0
        72: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #460                // String basePath
        89: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       100: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       103: astore_3
       104: aload_0
       105: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       108: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       111: pop
       112: aload_0
       113: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       116: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       119: ldc_w         #462                // String subPathOpt
       122: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       125: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       128: pop
       129: aload_0
       130: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       133: aload_0
       134: invokedynamic #467,  0            // InvokeDynamic #4:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       139: invokevirtual #471                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       142: astore        4
       144: aload_0
       145: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       148: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       151: pop
       152: aload_0
       153: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       156: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       159: ldc_w         #473                // String deps
       162: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       165: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       168: pop
       169: aload_0
       170: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       173: aload_0
       174: invokedynamic #478,  0            // InvokeDynamic #5:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       179: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       182: astore        5
       184: aload_0
       185: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       188: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       191: pop
       192: aload_0
       193: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       196: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       199: ldc_w         #480                // String targets
       202: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       205: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       208: pop
       209: aload_0
       210: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       213: aload_0
       214: invokedynamic #487,  0            // InvokeDynamic #6:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       219: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       222: astore        6
       224: aload_0
       225: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       228: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       231: pop
       232: aload_0
       233: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       236: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       239: ldc_w         #489                // String ivyDeps
       242: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       245: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       248: pop
       249: aload_0
       250: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       253: aload_0
       254: invokedynamic #494,  0            // InvokeDynamic #7:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       259: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       262: astore        7
       264: aload_0
       265: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       268: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       271: pop
       272: aload_0
       273: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       276: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       279: ldc_w         #496                // String sources
       282: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       285: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       288: pop
       289: aload_0
       290: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       293: aload_0
       294: invokedynamic #501,  0            // InvokeDynamic #8:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       299: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       302: astore        8
       304: aload_0
       305: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       308: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       311: pop
       312: aload_0
       313: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       316: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       319: ldc_w         #503                // String resources
       322: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       325: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       328: pop
       329: aload_0
       330: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       333: aload_0
       334: invokedynamic #508,  0            // InvokeDynamic #9:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       339: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       342: astore        9
       344: aload_0
       345: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       348: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       351: pop
       352: aload_0
       353: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       356: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       359: ldc_w         #510                // String testSources
       362: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       365: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       368: pop
       369: aload_0
       370: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       373: aload_0
       374: invokedynamic #515,  0            // InvokeDynamic #10:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       379: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       382: astore        10
       384: aload_0
       385: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       388: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       391: pop
       392: aload_0
       393: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       396: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       399: ldc_w         #517                // String testResources
       402: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       405: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       408: pop
       409: aload_0
       410: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       413: aload_0
       414: invokedynamic #522,  0            // InvokeDynamic #11:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       419: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       422: astore        11
       424: aload_0
       425: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       428: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       431: pop
       432: aload_0
       433: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       436: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       439: ldc_w         #524                // String publishInfoOpt
       442: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       445: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       448: pop
       449: aload_0
       450: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       453: aload_0
       454: invokedynamic #532,  0            // InvokeDynamic #12:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       459: invokevirtual #471                // Method org/sireum/Json$Parser.parseOption:(Lscala/Function0;)Lorg/sireum/Option;
       462: astore        12
       464: aload_0
       465: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       468: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       471: pop
       472: getstatic     #537                // Field org/sireum/project/Module$.MODULE$:Lorg/sireum/project/Module$;
       475: aload_2
       476: aload_3
       477: aload         4
       479: aload         5
       481: aload         6
       483: aload         7
       485: aload         8
       487: aload         9
       489: aload         10
       491: aload         11
       493: aload         12
       495: invokevirtual #540                // Method org/sireum/project/Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
       498: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 161: 0
        line 162: 16
        line 161: 42
        line 164: 46
        line 165: 63
        line 166: 71
        line 167: 79
        line 168: 96
        line 169: 104
        line 170: 112
        line 171: 129
        line 172: 144
        line 173: 152
        line 174: 169
        line 175: 184
        line 176: 192
        line 177: 209
        line 178: 224
        line 179: 232
        line 180: 249
        line 181: 264
        line 182: 272
        line 183: 289
        line 184: 304
        line 185: 312
        line 186: 329
        line 187: 344
        line 188: 352
        line 189: 369
        line 190: 384
        line 191: 392
        line 192: 409
        line 193: 424
        line 194: 432
        line 195: 449
        line 196: 464
        line 197: 472
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71     428     2    id   Ljava/lang/String;
          104     395     3 basePath   Ljava/lang/String;
          144     355     4 subPathOpt   Lorg/sireum/Option;
          184     315     5  deps   Lorg/sireum/IS;
          224     275     6 targets   Lorg/sireum/IS;
          264     235     7 ivyDeps   Lorg/sireum/IS;
          304     195     8 sources   Lorg/sireum/IS;
          344     155     9 resources   Lorg/sireum/IS;
          384     115    10 testSources   Lorg/sireum/IS;
          424      75    11 testResources   Lorg/sireum/IS;
          464      35    12 publishInfoOpt   Lorg/sireum/Option;
            0     499     0  this   Lorg/sireum/project/JSON$Parser;
            0     499     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.project.PublishInfo parsePublishInfo();
    descriptor: ()Lorg/sireum/project/PublishInfo;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #265                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #268                // Method org/sireum/package$.F:()Z
         7: invokevirtual #546                // Method parsePublishInfoT:(Z)Lorg/sireum/project/PublishInfo;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 201: 0
        line 202: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/project/PublishInfo;
            0      13     0  this   Lorg/sireum/project/JSON$Parser;

  public org.sireum.project.PublishInfo parsePublishInfoT(boolean);
    descriptor: (Z)Lorg/sireum/project/PublishInfo;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=2
         0: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #283                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #286                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #127                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #549                // String PublishInfo
        30: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #291                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #297                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #551                // String description
        56: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        70: astore_2
        71: aload_0
        72: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #553                // String url
        89: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       100: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       103: astore_3
       104: aload_0
       105: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       108: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       111: pop
       112: aload_0
       113: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       116: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       119: ldc_w         #555                // String licenses
       122: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       125: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       128: pop
       129: aload_0
       130: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       133: aload_0
       134: invokedynamic #563,  0            // InvokeDynamic #13:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       139: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       142: astore        4
       144: aload_0
       145: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       148: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       151: pop
       152: aload_0
       153: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       156: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       159: ldc_w         #565                // String developers
       162: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       165: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       168: pop
       169: aload_0
       170: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       173: aload_0
       174: invokedynamic #573,  0            // InvokeDynamic #14:apply:(Lorg/sireum/project/JSON$Parser;)Lscala/Function0;
       179: invokevirtual #358                // Method org/sireum/Json$Parser.parseISZ:(Lscala/Function0;)Lorg/sireum/IS;
       182: astore        5
       184: aload_0
       185: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       188: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       191: pop
       192: getstatic     #578                // Field org/sireum/project/PublishInfo$.MODULE$:Lorg/sireum/project/PublishInfo$;
       195: aload_2
       196: aload_3
       197: aload         4
       199: aload         5
       201: invokevirtual #581                // Method org/sireum/project/PublishInfo$.apply:(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/IS;Lorg/sireum/IS;)Lorg/sireum/project/PublishInfo;
       204: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 206: 0
        line 207: 16
        line 206: 42
        line 209: 46
        line 210: 63
        line 211: 71
        line 212: 79
        line 213: 96
        line 214: 104
        line 215: 112
        line 216: 129
        line 217: 144
        line 218: 152
        line 219: 169
        line 220: 184
        line 221: 192
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71     134     2 description   Ljava/lang/String;
          104     101     3   url   Ljava/lang/String;
          144      61     4 licenses   Lorg/sireum/IS;
          184      21     5 developers   Lorg/sireum/IS;
            0     205     0  this   Lorg/sireum/project/JSON$Parser;
            0     205     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.project.PublishInfo$License parsePublishInfoLicense();
    descriptor: ()Lorg/sireum/project/PublishInfo$License;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #265                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #268                // Method org/sireum/package$.F:()Z
         7: invokevirtual #586                // Method parsePublishInfoLicenseT:(Z)Lorg/sireum/project/PublishInfo$License;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 225: 0
        line 226: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/project/PublishInfo$License;
            0      13     0  this   Lorg/sireum/project/JSON$Parser;

  public org.sireum.project.PublishInfo$License parsePublishInfoLicenseT(boolean);
    descriptor: (Z)Lorg/sireum/project/PublishInfo$License;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #283                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #286                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #127                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #589                // String PublishInfo.License
        30: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #291                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #297                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #591                // String name
        56: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        70: astore_2
        71: aload_0
        72: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #553                // String url
        89: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       100: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       103: astore_3
       104: aload_0
       105: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       108: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       111: pop
       112: aload_0
       113: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       116: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       119: ldc_w         #593                // String distribution
       122: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       125: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
       128: pop
       129: aload_0
       130: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       133: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       136: astore        4
       138: aload_0
       139: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       142: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       145: pop
       146: getstatic     #596                // Field org/sireum/project/PublishInfo$License$.MODULE$:Lorg/sireum/project/PublishInfo$License$;
       149: aload_2
       150: aload_3
       151: aload         4
       153: invokevirtual #599                // Method org/sireum/project/PublishInfo$License$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/project/PublishInfo$License;
       156: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 230: 0
        line 231: 16
        line 230: 42
        line 233: 46
        line 234: 63
        line 235: 71
        line 236: 79
        line 237: 96
        line 238: 104
        line 239: 112
        line 240: 129
        line 241: 138
        line 242: 146
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71      86     2  name   Ljava/lang/String;
          104      53     3   url   Ljava/lang/String;
          138      19     4 distribution   Ljava/lang/String;
            0     157     0  this   Lorg/sireum/project/JSON$Parser;
            0     157     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public org.sireum.project.PublishInfo$Developer parsePublishInfoDeveloper();
    descriptor: ()Lorg/sireum/project/PublishInfo$Developer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getstatic     #265                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #268                // Method org/sireum/package$.F:()Z
         7: invokevirtual #604                // Method parsePublishInfoDeveloperT:(Z)Lorg/sireum/project/PublishInfo$Developer;
        10: astore_1
        11: aload_1
        12: areturn
      LineNumberTable:
        line 246: 0
        line 247: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       2     1     r   Lorg/sireum/project/PublishInfo$Developer;
            0      13     0  this   Lorg/sireum/project/JSON$Parser;

  public org.sireum.project.PublishInfo$Developer parsePublishInfoDeveloperT(boolean);
    descriptor: (Z)Lorg/sireum/project/PublishInfo$Developer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #279                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: iload_1
         7: invokevirtual #283                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: invokevirtual #286                // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          42
        16: new           #127                // class org/sireum/String
        19: dup
        20: aload_0
        21: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        24: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc_w         #607                // String PublishInfo.Developer
        30: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        33: invokevirtual #291                // Method org/sireum/Json$Parser.parseObjectType:(Ljava/lang/String;)Ljava/lang/String;
        36: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        39: goto          45
        42: getstatic     #297                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        45: pop
        46: aload_0
        47: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        50: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: ldc_w         #458                // String id
        56: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        59: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        62: pop
        63: aload_0
        64: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        67: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
        70: astore_2
        71: aload_0
        72: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        75: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
        78: pop
        79: aload_0
        80: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
        83: getstatic     #125                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: ldc_w         #591                // String name
        89: invokevirtual #148                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        92: invokevirtual #302                // Method org/sireum/Json$Parser.parseObjectKey:(Ljava/lang/String;)Ljava/lang/String;
        95: pop
        96: aload_0
        97: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       100: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
       103: astore_3
       104: aload_0
       105: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
       108: invokevirtual #336                // Method org/sireum/Json$Parser.parseObjectNext:()Z
       111: pop
       112: getstatic     #610                // Field org/sireum/project/PublishInfo$Developer$.MODULE$:Lorg/sireum/project/PublishInfo$Developer$;
       115: aload_2
       116: aload_3
       117: invokevirtual #613                // Method org/sireum/project/PublishInfo$Developer$.apply:(Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/project/PublishInfo$Developer;
       120: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 42 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 251: 0
        line 252: 16
        line 251: 42
        line 254: 46
        line 255: 63
        line 256: 71
        line 257: 79
        line 258: 96
        line 259: 104
        line 260: 112
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71      50     2    id   Ljava/lang/String;
          104      17     3  name   Ljava/lang/String;
            0     121     0  this   Lorg/sireum/project/JSON$Parser;
            0     121     1 typeParsed   Z
    MethodParameters:
      Name                           Flags
      typeParsed                     final

  public boolean eof();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #616                // Method org/sireum/Json$Parser.eof:()Z
         7: istore_1
         8: iload_1
         9: ireturn
      LineNumberTable:
        line 264: 0
        line 265: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8       2     1     r   Z
            0      10     0  this   Lorg/sireum/project/JSON$Parser;

  public final org.sireum.$internal.MutableMarker $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/$internal/MutableMarker;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #619                // Method $owned_$eq:(Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/project/JSON$Parser;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #621                // Method $clone:()Lorg/sireum/project/JSON$Parser;
         4: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public org.sireum.$internal.MutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/MutableMarker;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #621                // Method $clone:()Lorg/sireum/project/JSON$Parser;
         4: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/JSON$Parser;

  public static final java.lang.String $anonfun$parseProjectT$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.project.Module $anonfun$parseProjectT$2(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #627                // Method parseModule:()Lorg/sireum/project/Module;
         4: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseProjectT$3(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseProjectT$4(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseModuleT$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 171: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseModuleT$2(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.project.Target$Type $anonfun$parseModuleT$3(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Target$Type;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #633                // Method parseTargetType:()Lorg/sireum/project/Target$Type;
         4: areturn
      LineNumberTable:
        line 177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseModuleT$4(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseModuleT$5(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseModuleT$6(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 186: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseModuleT$7(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 189: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$parseModuleT$8(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #256                // Method parser:()Lorg/sireum/Json$Parser;
         4: invokevirtual #385                // Method org/sireum/Json$Parser.parseString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.project.PublishInfo $anonfun$parseModuleT$9(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #640                // Method parsePublishInfo:()Lorg/sireum/project/PublishInfo;
         4: areturn
      LineNumberTable:
        line 195: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.project.PublishInfo$License $anonfun$parsePublishInfoT$1(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #642                // Method parsePublishInfoLicense:()Lorg/sireum/project/PublishInfo$License;
         4: areturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final org.sireum.project.PublishInfo$Developer $anonfun$parsePublishInfoT$2(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #644                // Method parsePublishInfoDeveloper:()Lorg/sireum/project/PublishInfo$Developer;
         4: areturn
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public org.sireum.project.JSON$Parser(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokespecial #646                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #650                // InterfaceMethod org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
         8: aload_0
         9: invokestatic  #653                // InterfaceMethod org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
        12: aload_0
        13: aload_1
        14: putfield      #97                 // Field _input:Ljava/lang/String;
        17: aload_0
        18: getstatic     #240                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        21: getstatic     #656                // Field org/sireum/Json$Parser$.MODULE$:Lorg/sireum/Json$Parser$;
        24: aload_0
        25: invokevirtual #129                // Method input:()Ljava/lang/String;
        28: invokevirtual #660                // Method org/sireum/Json$Parser$.create:(Ljava/lang/String;)Lorg/sireum/Json$Parser;
        31: invokevirtual #664                // Method org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        34: checkcast     #19                 // class org/sireum/Json$Parser
        37: putfield      #251                // Field parser:Lorg/sireum/Json$Parser;
        40: return
      LineNumberTable:
        line 106: 0
        line 107: 17
        line 106: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/project/JSON$Parser;
            0      41     1 __input   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      __input                        final

  public static final java.lang.Object $anonfun$parseProjectT$1$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #666                // Method $anonfun$parseProjectT$1:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseProjectT$3$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #668                // Method $anonfun$parseProjectT$3:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseProjectT$4$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #670                // Method $anonfun$parseProjectT$4:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseModuleT$1$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #672                // Method $anonfun$parseModuleT$1:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 171: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseModuleT$2$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #674                // Method $anonfun$parseModuleT$2:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseModuleT$4$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #676                // Method $anonfun$parseModuleT$4:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseModuleT$5$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #678                // Method $anonfun$parseModuleT$5:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseModuleT$6$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #680                // Method $anonfun$parseModuleT$6:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 186: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseModuleT$7$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #682                // Method $anonfun$parseModuleT$7:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 189: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$parseModuleT$8$adapted(org.sireum.project.JSON$Parser);
    descriptor: (Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #127                // class org/sireum/String
         3: dup
         4: aload_0
         5: invokestatic  #684                // Method $anonfun$parseModuleT$8:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/String;
         8: invokespecial #132                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        11: areturn
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/project/JSON$Parser;
    MethodParameters:
      Name                           Flags
      $this                          final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #696,  0            // InvokeDynamic #15:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #17= #14 of #16;    // ErrorMsg=class org/sireum/Json$ErrorMsg of class org/sireum/Json
  public static final #20= #19 of #16;    // Parser=class org/sireum/Json$Parser of class org/sireum/Json
  public static #23= #22 of #16;          // Parser$=class org/sireum/Json$Parser$ of class org/sireum/Json
  public static final #20= #2 of #25;     // Parser=class org/sireum/project/JSON$Parser of class org/sireum/project/JSON
  public static final #30= #27 of #29;    // Developer=class org/sireum/project/PublishInfo$Developer of class org/sireum/project/PublishInfo
  public static #33= #32 of #29;          // Developer$=class org/sireum/project/PublishInfo$Developer$ of class org/sireum/project/PublishInfo
  public static final #36= #35 of #29;    // License=class org/sireum/project/PublishInfo$License of class org/sireum/project/PublishInfo
  public static #39= #38 of #29;          // License$=class org/sireum/project/PublishInfo$License$ of class org/sireum/project/PublishInfo
  public static #44= #41 of #43;          // Type=class org/sireum/project/Target$Type of class org/sireum/project/Target
SourceFile: "JSON.scala"
BootstrapMethods:
  0: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #309 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  1: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #325 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
      #327 ()Lorg/sireum/project/Module;
      #328 5
      #310 1
      #327 ()Lorg/sireum/project/Module;
  2: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #342 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$3$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  3: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #353 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  4: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #466 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  5: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #477 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$2$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  6: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #485 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$3:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Target$Type;
      #486 ()Lorg/sireum/project/Target$Type;
      #328 5
      #310 1
      #486 ()Lorg/sireum/project/Target$Type;
  7: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #493 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  8: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #500 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$5$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  9: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #507 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$6$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  10: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #514 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$7$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  11: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #521 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$8$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #304 ()Ljava/lang/Object;
      #310 1
  12: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #529 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$9:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
      #531 ()Lorg/sireum/project/PublishInfo;
      #328 5
      #310 1
      #531 ()Lorg/sireum/project/PublishInfo;
  13: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #560 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parsePublishInfoT$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
      #562 ()Lorg/sireum/project/PublishInfo$License;
      #328 5
      #310 1
      #562 ()Lorg/sireum/project/PublishInfo$License;
  14: #317 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #304 ()Ljava/lang/Object;
      #570 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parsePublishInfoT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
      #572 ()Lorg/sireum/project/PublishInfo$Developer;
      #328 5
      #310 1
      #572 ()Lorg/sireum/project/PublishInfo$Developer;
  15: #693 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #466 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #477 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$2$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #485 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$3:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Target$Type;
      #493 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #500 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$5$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #507 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$6$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #514 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$7$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #521 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$8$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #529 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseModuleT$9:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo;
      #309 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$1$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #325 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/Module;
      #342 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$3$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #353 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parseProjectT$4$adapted:(Lorg/sireum/project/JSON$Parser;)Ljava/lang/Object;
      #560 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parsePublishInfoT$1:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$License;
      #570 REF_invokeStatic org/sireum/project/JSON$Parser.$anonfun$parsePublishInfoT$2:(Lorg/sireum/project/JSON$Parser;)Lorg/sireum/project/PublishInfo$Developer;
  ScalaInlineInfo: length = 0x13A (unknown attribute)
   01 01 00 3E 02 76 02 70 01 01 CF 01 32 01 02 77
   02 70 01 01 DA 01 32 01 01 E1 01 E2 01 02 7A 02
   70 01 01 EA 01 32 01 02 7B 02 70 01 01 F1 01 32
   01 02 7C 02 70 01 01 F8 01 32 01 02 7D 02 70 01
   01 FF 01 32 01 02 7E 02 70 01 02 06 01 32 01 02
   0D 02 0E 01 02 6F 02 70 01 01 31 01 32 01 01 41
   01 42 01 02 74 02 70 01 01 53 01 32 01 02 75 02
   70 01 01 5E 01 32 01 02 2C 02 2D 01 02 36 02 37
   01 00 48 00 49 01 00 EA 01 2F 01 00 EA 02 6E 01
   00 EA 00 EB 01 00 C8 00 C9 01 00 50 00 34 01 00
   55 00 34 01 00 33 00 34 01 00 3B 02 69 01 00 3B
   00 3C 01 00 6C 00 82 01 00 91 00 C5 01 00 C7 00
   5F 01 02 66 00 34 01 00 BE 00 BF 01 00 FC 00 FD
   01 00 62 00 5F 01 00 42 00 43 01 00 95 00 96 01
   00 5E 00 5F 01 00 31 00 34 01 00 5B 00 5C 01 01
   C1 01 46 01 01 C2 01 C3 01 01 03 01 04 01 01 0D
   01 0E 01 02 1E 02 12 01 02 58 02 3B 01 02 59 02
   5A 01 02 46 02 31 01 02 47 02 48 01 02 1F 02 20
   01 01 74 01 75 01 01 72 01 73 01 00 2F 00 F9 01
   00 8F 00 5F 01 00 63 00 5F 01
  Scala: length = 0x0 (unknown attribute)

