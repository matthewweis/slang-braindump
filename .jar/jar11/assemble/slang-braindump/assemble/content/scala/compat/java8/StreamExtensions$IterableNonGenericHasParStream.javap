Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream.class
  Last modified May 29, 2022; size 2461 bytes
  SHA-256 checksum 097469ff73c365279df4f301c7fb5e30713821d387ae9327d068d351ec53cf00
  Compiled from "StreamConverters.scala"
public class scala.compat.java8.StreamExtensions$IterableNonGenericHasParStream<A extends java.lang.Object, C extends scala.collection.IterableOnce<?>> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 3, attributes: 5
Constant pool:
   #1 = Utf8               scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream
   #2 = Class              #1             // scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream
   #3 = Utf8               <A:Ljava/lang/Object;C::Lscala/collection/IterableOnce<*>;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               StreamConverters.scala
   #7 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
   #8 = Class              #7             // scala/collection/convert/StreamExtensions$StreamShape
   #9 = Utf8               scala/collection/convert/StreamExtensions
  #10 = Class              #9             // scala/collection/convert/StreamExtensions
  #11 = Utf8               StreamShape
  #12 = Utf8               scala/compat/java8/StreamExtensions
  #13 = Class              #12            // scala/compat/java8/StreamExtensions
  #14 = Utf8               IterableNonGenericHasParStream
  #15 = Utf8               c
  #16 = Utf8               Lscala/collection/IterableOnce;
  #17 = Utf8               TC;
  #18 = Utf8               ev
  #19 = Utf8               Lscala/$less$colon$less;
  #20 = Utf8               Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;
  #21 = Utf8               $outer
  #22 = Utf8               Lscala/compat/java8/StreamExtensions;
  #23 = Utf8               parStream
  #24 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
  #25 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TA;TS;TSt;>;Lscala/collection/StepperShape<TA;TSt;>;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)TS;
  #26 = Utf8               s
  #27 = Utf8               st
  #28 = Utf8               isEfficient
  #29 = NameAndType        #18:#19        // ev:Lscala/$less$colon$less;
  #30 = Fieldref           #2.#29         // scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream.ev:Lscala/$less$colon$less;
  #31 = NameAndType        #15:#16        // c:Lscala/collection/IterableOnce;
  #32 = Fieldref           #2.#31         // scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream.c:Lscala/collection/IterableOnce;
  #33 = Utf8               scala/$less$colon$less
  #34 = Class              #33            // scala/$less$colon$less
  #35 = Utf8               apply
  #36 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #37 = NameAndType        #35:#36        // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #38 = Methodref          #34.#37        // scala/$less$colon$less.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #39 = Utf8               scala/collection/IterableOnce
  #40 = Class              #39            // scala/collection/IterableOnce
  #41 = Utf8               stepper
  #42 = Utf8               (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #43 = NameAndType        #41:#42        // stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #44 = InterfaceMethodref #40.#43        // scala/collection/IterableOnce.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #45 = Utf8               fromStepper
  #46 = Utf8               (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #47 = NameAndType        #45:#46        // fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #48 = InterfaceMethodref #8.#47         // scala/collection/convert/StreamExtensions$StreamShape.fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #49 = Utf8               this
  #50 = Utf8               Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
  #51 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape;
  #52 = Utf8               Lscala/collection/StepperShape;
  #53 = Utf8               scala$compat$java8$StreamExtensions$IterableNonGenericHasParStream$$$outer
  #54 = Utf8               ()Lscala/compat/java8/StreamExtensions;
  #55 = NameAndType        #21:#22        // $outer:Lscala/compat/java8/StreamExtensions;
  #56 = Fieldref           #2.#55         // scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream.$outer:Lscala/compat/java8/StreamExtensions;
  #57 = Utf8               <init>
  #58 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;Lscala/$less$colon$less;)V
  #59 = Utf8               (TC;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)V
  #60 = Utf8               ()V
  #61 = NameAndType        #57:#60        // "<init>":()V
  #62 = Methodref          #5.#61         // java/lang/Object."<init>":()V
  #63 = Utf8               Signature
  #64 = Utf8               Code
  #65 = Utf8               LineNumberTable
  #66 = Utf8               LocalVariableTable
  #67 = Utf8               MethodParameters
  #68 = Utf8               StackMapTable
  #69 = Utf8               InnerClasses
  #70 = Utf8               SourceFile
  #71 = Utf8               ScalaInlineInfo
  #72 = Utf8               Scala
{
  private final C c;
    descriptor: Lscala/collection/IterableOnce;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #17                          // TC;

  private final scala.$less$colon$less<C, scala.collection.IterableOnce<A>> ev;
    descriptor: Lscala/$less$colon$less;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;

  public final scala.compat.java8.StreamExtensions $outer;
    descriptor: Lscala/compat/java8/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S parStream(scala.collection.convert.StreamExtensions$StreamShape<A, S, St>, scala.collection.StepperShape<A, St>, scala.$less$colon$less<C, scala.collection.IterableOnce<A>>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #30                 // Field ev:Lscala/$less$colon$less;
         5: aload_0
         6: getfield      #32                 // Field c:Lscala/collection/IterableOnce;
         9: invokevirtual #38                 // Method scala/$less$colon$less.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        12: checkcast     #40                 // class scala/collection/IterableOnce
        15: aload_2
        16: invokeinterface #44,  2           // InterfaceMethod scala/collection/IterableOnce.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        21: iconst_1
        22: invokeinterface #48,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        27: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
            0      28     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      28     2    st   Lscala/collection/StepperShape;
            0      28     3 isEfficient   Lscala/$less$colon$less;
    Signature: #25                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TA;TS;TSt;>;Lscala/collection/StepperShape<TA;TSt;>;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final
      isEfficient                    final

  public scala.compat.java8.StreamExtensions scala$compat$java8$StreamExtensions$IterableNonGenericHasParStream$$$outer();
    descriptor: ()Lscala/compat/java8/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field $outer:Lscala/compat/java8/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;

  public scala.compat.java8.StreamExtensions$IterableNonGenericHasParStream(C, scala.$less$colon$less<C, scala.collection.IterableOnce<A>>);
    descriptor: (Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;Lscala/$less$colon$less;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_2
         2: putfield      #32                 // Field c:Lscala/collection/IterableOnce;
         5: aload_0
         6: aload_3
         7: putfield      #30                 // Field ev:Lscala/$less$colon$less;
        10: aload_1
        11: ifnonnull     16
        14: aconst_null
        15: athrow
        16: aload_0
        17: aload_1
        18: putfield      #56                 // Field $outer:Lscala/compat/java8/StreamExtensions;
        21: aload_0
        22: invokespecial #62                 // Method java/lang/Object."<init>":()V
        25: return
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
      LineNumberTable:
        line 44: 0
        line 63: 21
        line 44: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
            0      26     1 $outer   Lscala/compat/java8/StreamExtensions;
            0      26     2     c   Lscala/collection/IterableOnce;
            0      26     3    ev   Lscala/$less$colon$less;
    Signature: #59                          // (TC;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      c                              final
      ev                             final
}
InnerClasses:
  public static #11= #8 of #10;           // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
  public #14= #2 of #13;                  // IterableNonGenericHasParStream=class scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream of class scala/compat/java8/StreamExtensions
Signature: #3                           // <A:Ljava/lang/Object;C::Lscala/collection/IterableOnce<*>;>Ljava/lang/Object;
SourceFile: "StreamConverters.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 00 00 03 00 39 00 3A 00 00 17 00 18 00 00 35
   00 36 00
  Scala: length = 0x0 (unknown attribute)

