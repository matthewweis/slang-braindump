Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/xml/transform/BasicTransformer.class
  Last modified May 29, 2022; size 11208 bytes
  SHA-256 checksum 21e739b8ab34f3f762f045f5e69eaa7e3f44508bd176da66d6a90c2d86b49d7c
  Compiled from "BasicTransformer.scala"
public abstract class scala.xml.transform.BasicTransformer extends java.lang.Object implements scala.Function1<scala.xml.Node, scala.xml.Node>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/xml/transform/BasicTransformer
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 39, attributes: 7
Constant pool:
    #1 = Utf8               scala/xml/transform/BasicTransformer
    #2 = Class              #1            // scala/xml/transform/BasicTransformer
    #3 = Utf8               Ljava/lang/Object;Lscala/Function1<Lscala/xml/Node;Lscala/xml/Node;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Function1
    #7 = Class              #6            // scala/Function1
    #8 = Utf8               BasicTransformer.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u00113Qa\u0002\u0005\u0002\u0002=AQa\u0007\u0001\u0005\u0002qAQa\b\u0001\u0005\u0012\u0001BQ!\u0003\u0001\u0005\u00029BQ!\u0003\u0001\u0005\u0002uBQ!\u0003\u0001\u0005\u0002}BQ!\u0011\u0001\u0005\u0002\t\u0013\u0001CQ1tS\u000e$&/\u00198tM>\u0014X.\u001a:\u000b\u0005%Q\u0011!\u0003;sC:\u001chm\u001c:n\u0015\tYA\"A\u0002y[2T\u0011!D\u0001\u0006g\u000e\fG.Y\u0002\u0001\'\r\u0001\u0001\u0003\u0006\t\u0003#Ii\u0011\u0001D\u0005\u0003\'1\u0011a!\u00118z%\u00164\u0007\u0003B\t\u0016/]I!A\u0006\u0007\u0003\u0013\u0019+hn\u0019;j_:\f\u0004C\u0001\r\u001a\u001b\u0005Q\u0011B\u0001\u000e\u000b\u0005\u0011qu\u000eZ3\u0002\rqJg.\u001b;?)\u0005i\u0002C\u0001\u0010\u0001\u001b\u0005A\u0011!C;oG\"\fgnZ3e)\r\tCE\n\t\u0003#\tJ!a\t\u0007\u0003\u000f\t{w\u000e\\3b]\")QE\u0001a\u0001/\u0005\ta\u000eC\u0003(\u0005\u0001\u0007\u0001&\u0001\u0002ogB\u0019\u0011\u0006L\f\u000e\u0003)R!a\u000b\u0007\u0002\u0015\r|G\u000e\\3di&|g.\u0003\u0002.U\t\u00191+Z9\u0015\u0007!z\u0003\bC\u00031\u0007\u0001\u0007\u0011\'\u0001\u0002jiB\u0019!\'N\f\u000f\u0005E\u0019\u0014B\u0001\u001b\r\u0003\u001d\u0001\u0018mY6bO\u0016L!AN\u001c\u0003\u0011%#XM]1u_JT!\u0001\u000e\u0007\t\u000be\u001a\u0001\u0019\u0001\u001e\u0002\u00059\u0014\u0007C\u0001\r<\u0013\ta$B\u0001\u0006O_\u0012,\')\u001e4gKJ$\"\u0001\u000b \t\u000b\u001d\"\u0001\u0019\u0001\u0015\u0015\u0005!\u0002\u0005\"B\u0013\u0006\u0001\u00049\u0012!B1qa2LHCA\fD\u0011\u0015)c\u00011\u0001\u0018\u0001
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               apply$mcZD$sp
   #18 = Utf8               (D)Z
   #19 = Utf8               v1
   #20 = Utf8               apply$mcZD$sp$
   #21 = Utf8               (Lscala/Function1;D)Z
   #22 = NameAndType        #20:#21       // apply$mcZD$sp$:(Lscala/Function1;D)Z
   #23 = InterfaceMethodref #7.#22        // scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
   #24 = Utf8               this
   #25 = Utf8               Lscala/xml/transform/BasicTransformer;
   #26 = Utf8               D
   #27 = Utf8               apply$mcDD$sp
   #28 = Utf8               (D)D
   #29 = Utf8               apply$mcDD$sp$
   #30 = Utf8               (Lscala/Function1;D)D
   #31 = NameAndType        #29:#30       // apply$mcDD$sp$:(Lscala/Function1;D)D
   #32 = InterfaceMethodref #7.#31        // scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
   #33 = Utf8               apply$mcFD$sp
   #34 = Utf8               (D)F
   #35 = Utf8               apply$mcFD$sp$
   #36 = Utf8               (Lscala/Function1;D)F
   #37 = NameAndType        #35:#36       // apply$mcFD$sp$:(Lscala/Function1;D)F
   #38 = InterfaceMethodref #7.#37        // scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
   #39 = Utf8               apply$mcID$sp
   #40 = Utf8               (D)I
   #41 = Utf8               apply$mcID$sp$
   #42 = Utf8               (Lscala/Function1;D)I
   #43 = NameAndType        #41:#42       // apply$mcID$sp$:(Lscala/Function1;D)I
   #44 = InterfaceMethodref #7.#43        // scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
   #45 = Utf8               apply$mcJD$sp
   #46 = Utf8               (D)J
   #47 = Utf8               apply$mcJD$sp$
   #48 = Utf8               (Lscala/Function1;D)J
   #49 = NameAndType        #47:#48       // apply$mcJD$sp$:(Lscala/Function1;D)J
   #50 = InterfaceMethodref #7.#49        // scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
   #51 = Utf8               apply$mcVD$sp
   #52 = Utf8               (D)V
   #53 = Utf8               apply$mcVD$sp$
   #54 = Utf8               (Lscala/Function1;D)V
   #55 = NameAndType        #53:#54       // apply$mcVD$sp$:(Lscala/Function1;D)V
   #56 = InterfaceMethodref #7.#55        // scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
   #57 = Utf8               apply$mcZF$sp
   #58 = Utf8               (F)Z
   #59 = Utf8               apply$mcZF$sp$
   #60 = Utf8               (Lscala/Function1;F)Z
   #61 = NameAndType        #59:#60       // apply$mcZF$sp$:(Lscala/Function1;F)Z
   #62 = InterfaceMethodref #7.#61        // scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
   #63 = Utf8               F
   #64 = Utf8               apply$mcDF$sp
   #65 = Utf8               (F)D
   #66 = Utf8               apply$mcDF$sp$
   #67 = Utf8               (Lscala/Function1;F)D
   #68 = NameAndType        #66:#67       // apply$mcDF$sp$:(Lscala/Function1;F)D
   #69 = InterfaceMethodref #7.#68        // scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
   #70 = Utf8               apply$mcFF$sp
   #71 = Utf8               (F)F
   #72 = Utf8               apply$mcFF$sp$
   #73 = Utf8               (Lscala/Function1;F)F
   #74 = NameAndType        #72:#73       // apply$mcFF$sp$:(Lscala/Function1;F)F
   #75 = InterfaceMethodref #7.#74        // scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
   #76 = Utf8               apply$mcIF$sp
   #77 = Utf8               (F)I
   #78 = Utf8               apply$mcIF$sp$
   #79 = Utf8               (Lscala/Function1;F)I
   #80 = NameAndType        #78:#79       // apply$mcIF$sp$:(Lscala/Function1;F)I
   #81 = InterfaceMethodref #7.#80        // scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
   #82 = Utf8               apply$mcJF$sp
   #83 = Utf8               (F)J
   #84 = Utf8               apply$mcJF$sp$
   #85 = Utf8               (Lscala/Function1;F)J
   #86 = NameAndType        #84:#85       // apply$mcJF$sp$:(Lscala/Function1;F)J
   #87 = InterfaceMethodref #7.#86        // scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
   #88 = Utf8               apply$mcVF$sp
   #89 = Utf8               (F)V
   #90 = Utf8               apply$mcVF$sp$
   #91 = Utf8               (Lscala/Function1;F)V
   #92 = NameAndType        #90:#91       // apply$mcVF$sp$:(Lscala/Function1;F)V
   #93 = InterfaceMethodref #7.#92        // scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
   #94 = Utf8               apply$mcZI$sp
   #95 = Utf8               (I)Z
   #96 = Utf8               apply$mcZI$sp$
   #97 = Utf8               (Lscala/Function1;I)Z
   #98 = NameAndType        #96:#97       // apply$mcZI$sp$:(Lscala/Function1;I)Z
   #99 = InterfaceMethodref #7.#98        // scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
  #100 = Utf8               I
  #101 = Utf8               apply$mcDI$sp
  #102 = Utf8               (I)D
  #103 = Utf8               apply$mcDI$sp$
  #104 = Utf8               (Lscala/Function1;I)D
  #105 = NameAndType        #103:#104     // apply$mcDI$sp$:(Lscala/Function1;I)D
  #106 = InterfaceMethodref #7.#105       // scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
  #107 = Utf8               apply$mcFI$sp
  #108 = Utf8               (I)F
  #109 = Utf8               apply$mcFI$sp$
  #110 = Utf8               (Lscala/Function1;I)F
  #111 = NameAndType        #109:#110     // apply$mcFI$sp$:(Lscala/Function1;I)F
  #112 = InterfaceMethodref #7.#111       // scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
  #113 = Utf8               apply$mcII$sp
  #114 = Utf8               (I)I
  #115 = Utf8               apply$mcII$sp$
  #116 = Utf8               (Lscala/Function1;I)I
  #117 = NameAndType        #115:#116     // apply$mcII$sp$:(Lscala/Function1;I)I
  #118 = InterfaceMethodref #7.#117       // scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
  #119 = Utf8               apply$mcJI$sp
  #120 = Utf8               (I)J
  #121 = Utf8               apply$mcJI$sp$
  #122 = Utf8               (Lscala/Function1;I)J
  #123 = NameAndType        #121:#122     // apply$mcJI$sp$:(Lscala/Function1;I)J
  #124 = InterfaceMethodref #7.#123       // scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
  #125 = Utf8               apply$mcVI$sp
  #126 = Utf8               (I)V
  #127 = Utf8               apply$mcVI$sp$
  #128 = Utf8               (Lscala/Function1;I)V
  #129 = NameAndType        #127:#128     // apply$mcVI$sp$:(Lscala/Function1;I)V
  #130 = InterfaceMethodref #7.#129       // scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
  #131 = Utf8               apply$mcZJ$sp
  #132 = Utf8               (J)Z
  #133 = Utf8               apply$mcZJ$sp$
  #134 = Utf8               (Lscala/Function1;J)Z
  #135 = NameAndType        #133:#134     // apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #136 = InterfaceMethodref #7.#135       // scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #137 = Utf8               J
  #138 = Utf8               apply$mcDJ$sp
  #139 = Utf8               (J)D
  #140 = Utf8               apply$mcDJ$sp$
  #141 = Utf8               (Lscala/Function1;J)D
  #142 = NameAndType        #140:#141     // apply$mcDJ$sp$:(Lscala/Function1;J)D
  #143 = InterfaceMethodref #7.#142       // scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
  #144 = Utf8               apply$mcFJ$sp
  #145 = Utf8               (J)F
  #146 = Utf8               apply$mcFJ$sp$
  #147 = Utf8               (Lscala/Function1;J)F
  #148 = NameAndType        #146:#147     // apply$mcFJ$sp$:(Lscala/Function1;J)F
  #149 = InterfaceMethodref #7.#148       // scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
  #150 = Utf8               apply$mcIJ$sp
  #151 = Utf8               (J)I
  #152 = Utf8               apply$mcIJ$sp$
  #153 = Utf8               (Lscala/Function1;J)I
  #154 = NameAndType        #152:#153     // apply$mcIJ$sp$:(Lscala/Function1;J)I
  #155 = InterfaceMethodref #7.#154       // scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
  #156 = Utf8               apply$mcJJ$sp
  #157 = Utf8               (J)J
  #158 = Utf8               apply$mcJJ$sp$
  #159 = Utf8               (Lscala/Function1;J)J
  #160 = NameAndType        #158:#159     // apply$mcJJ$sp$:(Lscala/Function1;J)J
  #161 = InterfaceMethodref #7.#160       // scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
  #162 = Utf8               apply$mcVJ$sp
  #163 = Utf8               (J)V
  #164 = Utf8               apply$mcVJ$sp$
  #165 = Utf8               (Lscala/Function1;J)V
  #166 = NameAndType        #164:#165     // apply$mcVJ$sp$:(Lscala/Function1;J)V
  #167 = InterfaceMethodref #7.#166       // scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
  #168 = Utf8               compose
  #169 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #170 = Utf8               <A$:Ljava/lang/Object;>(Lscala/Function1<TA$;Lscala/xml/Node;>;)Lscala/Function1<TA$;Lscala/xml/Node;>;
  #171 = Utf8               g
  #172 = Utf8               compose$
  #173 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #174 = NameAndType        #172:#173     // compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #175 = InterfaceMethodref #7.#174       // scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #176 = Utf8               Lscala/Function1;
  #177 = Utf8               andThen
  #178 = Utf8               <A$:Ljava/lang/Object;>(Lscala/Function1<Lscala/xml/Node;TA$;>;)Lscala/Function1<Lscala/xml/Node;TA$;>;
  #179 = Utf8               andThen$
  #180 = NameAndType        #179:#173     // andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #181 = InterfaceMethodref #7.#180       // scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #182 = Utf8               toString
  #183 = Utf8               ()Ljava/lang/String;
  #184 = Utf8               toString$
  #185 = Utf8               (Lscala/Function1;)Ljava/lang/String;
  #186 = NameAndType        #184:#185     // toString$:(Lscala/Function1;)Ljava/lang/String;
  #187 = InterfaceMethodref #7.#186       // scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
  #188 = Utf8               unchanged
  #189 = Utf8               (Lscala/xml/Node;Lscala/collection/Seq;)Z
  #190 = Utf8               (Lscala/xml/Node;Lscala/collection/Seq<Lscala/xml/Node;>;)Z
  #191 = Utf8               n
  #192 = Utf8               ns
  #193 = Utf8               scala/collection/Seq
  #194 = Class              #193          // scala/collection/Seq
  #195 = Utf8               length
  #196 = Utf8               ()I
  #197 = NameAndType        #195:#196     // length:()I
  #198 = InterfaceMethodref #194.#197     // scala/collection/Seq.length:()I
  #199 = Utf8               head
  #200 = Utf8               ()Ljava/lang/Object;
  #201 = NameAndType        #199:#200     // head:()Ljava/lang/Object;
  #202 = InterfaceMethodref #194.#201     // scala/collection/Seq.head:()Ljava/lang/Object;
  #203 = Utf8               equals
  #204 = Utf8               (Ljava/lang/Object;)Z
  #205 = NameAndType        #203:#204     // equals:(Ljava/lang/Object;)Z
  #206 = Methodref          #5.#205       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #207 = Utf8               Lscala/xml/Node;
  #208 = Utf8               Lscala/collection/Seq;
  #209 = Utf8               scala/xml/Node
  #210 = Class              #209          // scala/xml/Node
  #211 = Utf8               transform
  #212 = Utf8               (Lscala/collection/Iterator;Lscala/xml/NodeBuffer;)Lscala/collection/Seq;
  #213 = Utf8               (Lscala/collection/Iterator<Lscala/xml/Node;>;Lscala/xml/NodeBuffer;)Lscala/collection/Seq<Lscala/xml/Node;>;
  #214 = Utf8               it
  #215 = Utf8               nb
  #216 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #217 = MethodType         #216          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #218 = Utf8               $anonfun$transform$1
  #219 = Utf8               (Lscala/xml/transform/BasicTransformer;Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
  #220 = NameAndType        #218:#219     // $anonfun$transform$1:(Lscala/xml/transform/BasicTransformer;Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
  #221 = Methodref          #2.#220       // scala/xml/transform/BasicTransformer.$anonfun$transform$1:(Lscala/xml/transform/BasicTransformer;Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
  #222 = MethodHandle       6:#221        // REF_invokeStatic scala/xml/transform/BasicTransformer.$anonfun$transform$1:(Lscala/xml/transform/BasicTransformer;Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
  #223 = Utf8               (Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
  #224 = MethodType         #223          //  (Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
  #225 = Integer            5
  #226 = Integer            1
  #227 = Utf8               java/lang/invoke/LambdaMetafactory
  #228 = Class              #227          // java/lang/invoke/LambdaMetafactory
  #229 = Utf8               altMetafactory
  #230 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #231 = NameAndType        #229:#230     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #232 = Methodref          #228.#231     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #233 = MethodHandle       6:#232        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #234 = Utf8               apply
  #235 = Utf8               (Lscala/xml/transform/BasicTransformer;)Lscala/Function2;
  #236 = NameAndType        #234:#235     // apply:(Lscala/xml/transform/BasicTransformer;)Lscala/Function2;
  #237 = InvokeDynamic      #0:#236       // #0:apply:(Lscala/xml/transform/BasicTransformer;)Lscala/Function2;
  #238 = Utf8               scala/collection/Iterator
  #239 = Class              #238          // scala/collection/Iterator
  #240 = Utf8               foldLeft
  #241 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #242 = NameAndType        #240:#241     // foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #243 = InterfaceMethodref #239.#242     // scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #244 = Utf8               scala/collection/IterableOnceOps
  #245 = Class              #244          // scala/collection/IterableOnceOps
  #246 = Utf8               toSeq
  #247 = Utf8               ()Lscala/collection/immutable/Seq;
  #248 = NameAndType        #246:#247     // toSeq:()Lscala/collection/immutable/Seq;
  #249 = InterfaceMethodref #245.#248     // scala/collection/IterableOnceOps.toSeq:()Lscala/collection/immutable/Seq;
  #250 = Utf8               Lscala/collection/Iterator;
  #251 = Utf8               Lscala/xml/NodeBuffer;
  #252 = Utf8               (Lscala/collection/Seq;)Lscala/collection/Seq;
  #253 = Utf8               (Lscala/collection/Seq<Lscala/xml/Node;>;)Lscala/collection/Seq<Lscala/xml/Node;>;
  #254 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #255 = MethodType         #254          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #256 = Utf8               $anonfun$transform$2
  #257 = Utf8               (Lscala/xml/transform/BasicTransformer;Lscala/xml/Node;)Lscala/collection/Seq;
  #258 = NameAndType        #256:#257     // $anonfun$transform$2:(Lscala/xml/transform/BasicTransformer;Lscala/xml/Node;)Lscala/collection/Seq;
  #259 = Methodref          #2.#258       // scala/xml/transform/BasicTransformer.$anonfun$transform$2:(Lscala/xml/transform/BasicTransformer;Lscala/xml/Node;)Lscala/collection/Seq;
  #260 = MethodHandle       6:#259        // REF_invokeStatic scala/xml/transform/BasicTransformer.$anonfun$transform$2:(Lscala/xml/transform/BasicTransformer;Lscala/xml/Node;)Lscala/collection/Seq;
  #261 = Utf8               (Lscala/xml/Node;)Lscala/collection/Seq;
  #262 = MethodType         #261          //  (Lscala/xml/Node;)Lscala/collection/Seq;
  #263 = Utf8               (Lscala/xml/transform/BasicTransformer;)Lscala/Function1;
  #264 = NameAndType        #234:#263     // apply:(Lscala/xml/transform/BasicTransformer;)Lscala/Function1;
  #265 = InvokeDynamic      #1:#264       // #1:apply:(Lscala/xml/transform/BasicTransformer;)Lscala/Function1;
  #266 = Utf8               flatMap
  #267 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #268 = NameAndType        #266:#267     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #269 = InterfaceMethodref #194.#268     // scala/collection/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #270 = Utf8               zip
  #271 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #272 = NameAndType        #270:#271     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #273 = InterfaceMethodref #194.#272     // scala/collection/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #274 = Utf8               $anonfun$transform$3$adapted
  #275 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #276 = NameAndType        #274:#275     // $anonfun$transform$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #277 = Methodref          #2.#276       // scala/xml/transform/BasicTransformer.$anonfun$transform$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #278 = MethodHandle       6:#277        // REF_invokeStatic scala/xml/transform/BasicTransformer.$anonfun$transform$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #279 = MethodType         #275          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #280 = Utf8               ()Lscala/Function1;
  #281 = NameAndType        #234:#280     // apply:()Lscala/Function1;
  #282 = InvokeDynamic      #2:#281       // #2:apply:()Lscala/Function1;
  #283 = Utf8               exists
  #284 = Utf8               (Lscala/Function1;)Z
  #285 = NameAndType        #283:#284     // exists:(Lscala/Function1;)Z
  #286 = InterfaceMethodref #245.#285     // scala/collection/IterableOnceOps.exists:(Lscala/Function1;)Z
  #287 = Utf8               changed
  #288 = Utf8               (Lscala/xml/Node;)Lscala/collection/Seq<Lscala/xml/Node;>;
  #289 = Utf8               doTransform
  #290 = Utf8               ()Z
  #291 = NameAndType        #289:#290     // doTransform:()Z
  #292 = Methodref          #210.#291     // scala/xml/Node.doTransform:()Z
  #293 = Utf8               scala/xml/Group
  #294 = Class              #293          // scala/xml/Group
  #295 = Utf8               nodes
  #296 = Utf8               ()Lscala/collection/Seq;
  #297 = NameAndType        #295:#296     // nodes:()Lscala/collection/Seq;
  #298 = Methodref          #294.#297     // scala/xml/Group.nodes:()Lscala/collection/Seq;
  #299 = NameAndType        #211:#252     // transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
  #300 = Methodref          #2.#299       // scala/xml/transform/BasicTransformer.transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
  #301 = Utf8               <init>
  #302 = Utf8               (Lscala/collection/Seq;)V
  #303 = NameAndType        #301:#302     // "<init>":(Lscala/collection/Seq;)V
  #304 = Methodref          #294.#303     // scala/xml/Group."<init>":(Lscala/collection/Seq;)V
  #305 = Utf8               child
  #306 = NameAndType        #305:#296     // child:()Lscala/collection/Seq;
  #307 = Methodref          #210.#306     // scala/xml/Node.child:()Lscala/collection/Seq;
  #308 = Utf8               scala/xml/Elem$
  #309 = Class              #308          // scala/xml/Elem$
  #310 = Utf8               MODULE$
  #311 = Utf8               Lscala/xml/Elem$;
  #312 = NameAndType        #310:#311     // MODULE$:Lscala/xml/Elem$;
  #313 = Fieldref           #309.#312     // scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
  #314 = Utf8               prefix
  #315 = NameAndType        #314:#183     // prefix:()Ljava/lang/String;
  #316 = Methodref          #210.#315     // scala/xml/Node.prefix:()Ljava/lang/String;
  #317 = Utf8               label
  #318 = NameAndType        #317:#183     // label:()Ljava/lang/String;
  #319 = Methodref          #210.#318     // scala/xml/Node.label:()Ljava/lang/String;
  #320 = Utf8               attributes
  #321 = Utf8               ()Lscala/xml/MetaData;
  #322 = NameAndType        #320:#321     // attributes:()Lscala/xml/MetaData;
  #323 = Methodref          #210.#322     // scala/xml/Node.attributes:()Lscala/xml/MetaData;
  #324 = Utf8               scope
  #325 = Utf8               ()Lscala/xml/NamespaceBinding;
  #326 = NameAndType        #324:#325     // scope:()Lscala/xml/NamespaceBinding;
  #327 = Methodref          #210.#326     // scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
  #328 = Utf8               isEmpty
  #329 = NameAndType        #328:#290     // isEmpty:()Z
  #330 = InterfaceMethodref #194.#329     // scala/collection/Seq.isEmpty:()Z
  #331 = Utf8               scala/xml/NodeSeq$
  #332 = Class              #331          // scala/xml/NodeSeq$
  #333 = Utf8               Lscala/xml/NodeSeq$;
  #334 = NameAndType        #310:#333     // MODULE$:Lscala/xml/NodeSeq$;
  #335 = Fieldref           #332.#334     // scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
  #336 = Utf8               seqToNodeSeq
  #337 = Utf8               (Lscala/collection/Seq;)Lscala/xml/NodeSeq;
  #338 = NameAndType        #336:#337     // seqToNodeSeq:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
  #339 = Methodref          #332.#338     // scala/xml/NodeSeq$.seqToNodeSeq:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
  #340 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;ZLscala/collection/immutable/Seq;)Lscala/xml/Elem;
  #341 = NameAndType        #234:#340     // apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;ZLscala/collection/immutable/Seq;)Lscala/xml/Elem;
  #342 = Methodref          #309.#341     // scala/xml/Elem$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;ZLscala/collection/immutable/Seq;)Lscala/xml/Elem;
  #343 = Utf8               xs
  #344 = Utf8               ch
  #345 = Utf8               nch
  #346 = Utf8               (Lscala/xml/Node;)Lscala/xml/Node;
  #347 = NameAndType        #211:#261     // transform:(Lscala/xml/Node;)Lscala/collection/Seq;
  #348 = Methodref          #2.#347       // scala/xml/transform/BasicTransformer.transform:(Lscala/xml/Node;)Lscala/collection/Seq;
  #349 = Utf8               java/lang/UnsupportedOperationException
  #350 = Class              #349          // java/lang/UnsupportedOperationException
  #351 = Utf8               transform must return single node for root
  #352 = String             #351          // transform must return single node for root
  #353 = Utf8               (Ljava/lang/String;)V
  #354 = NameAndType        #301:#353     // "<init>":(Ljava/lang/String;)V
  #355 = Methodref          #350.#354     // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
  #356 = Utf8               seq
  #357 = NameAndType        #234:#346     // apply:(Lscala/xml/Node;)Lscala/xml/Node;
  #358 = Methodref          #2.#357       // scala/xml/transform/BasicTransformer.apply:(Lscala/xml/Node;)Lscala/xml/Node;
  #359 = Utf8               Ljava/lang/Object;
  #360 = Utf8               $this
  #361 = Utf8               x$1
  #362 = Utf8               x$2
  #363 = Utf8               scala/xml/NodeBuffer
  #364 = Class              #363          // scala/xml/NodeBuffer
  #365 = Utf8               $plus$plus$eq
  #366 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #367 = NameAndType        #365:#366     // $plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #368 = Methodref          #364.#367     // scala/xml/NodeBuffer.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #369 = Utf8               $anonfun$transform$3
  #370 = Utf8               (Lscala/Tuple2;)Z
  #371 = Utf8               p
  #372 = Utf8               scala/Tuple2
  #373 = Class              #372          // scala/Tuple2
  #374 = Utf8               _1
  #375 = NameAndType        #374:#200     // _1:()Ljava/lang/Object;
  #376 = Methodref          #373.#375     // scala/Tuple2._1:()Ljava/lang/Object;
  #377 = Utf8               _2
  #378 = NameAndType        #377:#200     // _2:()Ljava/lang/Object;
  #379 = Methodref          #373.#378     // scala/Tuple2._2:()Ljava/lang/Object;
  #380 = Utf8               scala/runtime/BoxesRunTime
  #381 = Class              #380          // scala/runtime/BoxesRunTime
  #382 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #383 = NameAndType        #203:#382     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #384 = Methodref          #381.#383     // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #385 = Utf8               Lscala/Tuple2;
  #386 = Utf8               ()V
  #387 = NameAndType        #301:#386     // "<init>":()V
  #388 = Methodref          #5.#387       // java/lang/Object."<init>":()V
  #389 = Utf8               $init$
  #390 = Utf8               (Lscala/Function1;)V
  #391 = NameAndType        #389:#390     // $init$:(Lscala/Function1;)V
  #392 = InterfaceMethodref #7.#391       // scala/Function1.$init$:(Lscala/Function1;)V
  #393 = NameAndType        #369:#370     // $anonfun$transform$3:(Lscala/Tuple2;)Z
  #394 = Methodref          #2.#393       // scala/xml/transform/BasicTransformer.$anonfun$transform$3:(Lscala/Tuple2;)Z
  #395 = Utf8               boxToBoolean
  #396 = Utf8               (Z)Ljava/lang/Boolean;
  #397 = NameAndType        #395:#396     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #398 = Methodref          #381.#397     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #399 = Utf8               $deserializeLambda$
  #400 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #401 = Utf8               scala/runtime/LambdaDeserialize
  #402 = Class              #401          // scala/runtime/LambdaDeserialize
  #403 = Utf8               bootstrap
  #404 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #405 = NameAndType        #403:#404     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #406 = Methodref          #402.#405     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #407 = MethodHandle       6:#406        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #408 = Utf8               lambdaDeserialize
  #409 = NameAndType        #408:#400     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #410 = InvokeDynamic      #3:#409       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #411 = Utf8               Code
  #412 = Utf8               LineNumberTable
  #413 = Utf8               LocalVariableTable
  #414 = Utf8               MethodParameters
  #415 = Utf8               Signature
  #416 = Utf8               StackMapTable
  #417 = Utf8               InnerClasses
  #418 = Utf8               SourceFile
  #419 = Utf8               RuntimeVisibleAnnotations
  #420 = Utf8               BootstrapMethods
  #421 = Utf8               ScalaInlineInfo
  #422 = Utf8               ScalaSig
{
  public boolean apply$mcZD$sp(double);
    descriptor: (D)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #23                 // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDD$sp(double);
    descriptor: (D)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #32                 // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
         5: dreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFD$sp(double);
    descriptor: (D)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #38                 // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
         5: freturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcID$sp(double);
    descriptor: (D)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #44                 // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJD$sp(double);
    descriptor: (D)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #50                 // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
         5: lreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVD$sp(double);
    descriptor: (D)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #56                 // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
         5: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZF$sp(float);
    descriptor: (F)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #62                 // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDF$sp(float);
    descriptor: (F)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #69                 // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
         5: dreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFF$sp(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #75                 // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
         5: freturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIF$sp(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #81                 // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJF$sp(float);
    descriptor: (F)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #87                 // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
         5: lreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVF$sp(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #93                 // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
         5: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZI$sp(int);
    descriptor: (I)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #99                 // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDI$sp(int);
    descriptor: (I)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #106                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
         5: dreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFI$sp(int);
    descriptor: (I)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #112                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
         5: freturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcII$sp(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #118                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJI$sp(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #124                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
         5: lreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVI$sp(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #130                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
         5: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZJ$sp(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #136                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDJ$sp(long);
    descriptor: (J)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #143                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
         5: dreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFJ$sp(long);
    descriptor: (J)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #149                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
         5: freturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIJ$sp(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #155                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
         5: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJJ$sp(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #161                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
         5: lreturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVJ$sp(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #167                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
         5: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public <A$ extends java.lang.Object> scala.Function1<A$, scala.xml.Node> compose(scala.Function1<A$, scala.xml.Node>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #175                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1     g   Lscala/Function1;
    Signature: #170                         // <A$:Ljava/lang/Object;>(Lscala/Function1<TA$;Lscala/xml/Node;>;)Lscala/Function1<TA$;Lscala/xml/Node;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public <A$ extends java.lang.Object> scala.Function1<scala.xml.Node, A$> andThen(scala.Function1<scala.xml.Node, A$>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #181                // InterfaceMethod scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/transform/BasicTransformer;
            0       6     1     g   Lscala/Function1;
    Signature: #178                         // <A$:Ljava/lang/Object;>(Lscala/Function1<Lscala/xml/Node;TA$;>;)Lscala/Function1<Lscala/xml/Node;TA$;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #187                // InterfaceMethod scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/transform/BasicTransformer;

  public boolean unchanged(scala.xml.Node, scala.collection.Seq<scala.xml.Node>);
    descriptor: (Lscala/xml/Node;Lscala/collection/Seq;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: aload_2
         1: invokeinterface #198,  1          // InterfaceMethod scala/collection/Seq.length:()I
         6: iconst_1
         7: if_icmpne     41
        10: aload_2
        11: invokeinterface #202,  1          // InterfaceMethod scala/collection/Seq.head:()Ljava/lang/Object;
        16: aload_1
        17: astore_3
        18: dup
        19: ifnonnull     30
        22: pop
        23: aload_3
        24: ifnull        37
        27: goto          41
        30: aload_3
        31: invokevirtual #206                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        34: ifeq          41
        37: iconst_1
        38: goto          42
        41: iconst_0
        42: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class scala/xml/transform/BasicTransformer, class scala/xml/Node, class scala/collection/Seq, class scala/xml/Node ]
          stack = [ class java/lang/Object ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lscala/xml/transform/BasicTransformer;
            0      43     1     n   Lscala/xml/Node;
            0      43     2    ns   Lscala/collection/Seq;
    Signature: #190                         // (Lscala/xml/Node;Lscala/collection/Seq<Lscala/xml/Node;>;)Z
    MethodParameters:
      Name                           Flags
      n                              final
      ns                             final

  public scala.collection.Seq<scala.xml.Node> transform(scala.collection.Iterator<scala.xml.Node>, scala.xml.NodeBuffer);
    descriptor: (Lscala/collection/Iterator;Lscala/xml/NodeBuffer;)Lscala/collection/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_1
         1: aload_2
         2: aload_0
         3: invokedynamic #237,  0            // InvokeDynamic #0:apply:(Lscala/xml/transform/BasicTransformer;)Lscala/Function2;
         8: invokeinterface #243,  3          // InterfaceMethod scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        13: checkcast     #245                // class scala/collection/IterableOnceOps
        16: invokeinterface #249,  1          // InterfaceMethod scala/collection/IterableOnceOps.toSeq:()Lscala/collection/immutable/Seq;
        21: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/xml/transform/BasicTransformer;
            0      22     1    it   Lscala/collection/Iterator;
            0      22     2    nb   Lscala/xml/NodeBuffer;
    Signature: #213                         // (Lscala/collection/Iterator<Lscala/xml/Node;>;Lscala/xml/NodeBuffer;)Lscala/collection/Seq<Lscala/xml/Node;>;
    MethodParameters:
      Name                           Flags
      it                             final
      nb                             final

  public scala.collection.Seq<scala.xml.Node> transform(scala.collection.Seq<scala.xml.Node>);
    descriptor: (Lscala/collection/Seq;)Lscala/collection/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: invokedynamic #265,  0            // InvokeDynamic #1:apply:(Lscala/xml/transform/BasicTransformer;)Lscala/Function1;
         7: invokeinterface #269,  2          // InterfaceMethod scala/collection/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        12: checkcast     #194                // class scala/collection/Seq
        15: astore_2
        16: aload_2
        17: invokeinterface #198,  1          // InterfaceMethod scala/collection/Seq.length:()I
        22: aload_1
        23: invokeinterface #198,  1          // InterfaceMethod scala/collection/Seq.length:()I
        28: if_icmpne     54
        31: aload_2
        32: aload_1
        33: invokeinterface #273,  2          // InterfaceMethod scala/collection/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        38: checkcast     #245                // class scala/collection/IterableOnceOps
        41: invokedynamic #282,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        46: invokeinterface #286,  2          // InterfaceMethod scala/collection/IterableOnceOps.exists:(Lscala/Function1;)Z
        51: ifeq          58
        54: aload_2
        55: goto          59
        58: aload_1
        59: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 54
          locals = [ class scala/collection/Seq ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class scala/collection/Seq ]
      LineNumberTable:
        line 40: 0
        line 41: 16
        line 42: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      43     2 changed   Lscala/collection/Seq;
            0      60     0  this   Lscala/xml/transform/BasicTransformer;
            0      60     1    ns   Lscala/collection/Seq;
    Signature: #253                         // (Lscala/collection/Seq<Lscala/xml/Node;>;)Lscala/collection/Seq<Lscala/xml/Node;>;
    MethodParameters:
      Name                           Flags
      ns                             final

  public scala.collection.Seq<scala.xml.Node> transform(scala.xml.Node);
    descriptor: (Lscala/xml/Node;)Lscala/collection/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=8, args_size=2
         0: aload_1
         1: invokevirtual #292                // Method scala/xml/Node.doTransform:()Z
         4: ifeq          119
         7: aload_1
         8: astore_3
         9: aload_3
        10: instanceof    #294                // class scala/xml/Group
        13: ifeq          46
        16: aload_3
        17: checkcast     #294                // class scala/xml/Group
        20: astore        4
        22: aload         4
        24: invokevirtual #298                // Method scala/xml/Group.nodes:()Lscala/collection/Seq;
        27: astore        5
        29: new           #294                // class scala/xml/Group
        32: dup
        33: aload_0
        34: aload         5
        36: invokevirtual #300                // Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
        39: invokespecial #304                // Method scala/xml/Group."<init>":(Lscala/collection/Seq;)V
        42: astore_2
        43: goto          115
        46: goto          49
        49: aload_1
        50: invokevirtual #307                // Method scala/xml/Node.child:()Lscala/collection/Seq;
        53: astore        6
        55: aload_0
        56: aload         6
        58: invokevirtual #300                // Method transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
        61: astore        7
        63: aload         6
        65: aload         7
        67: if_acmpne     74
        70: aload_1
        71: goto          111
        74: getstatic     #313                // Field scala/xml/Elem$.MODULE$:Lscala/xml/Elem$;
        77: aload_1
        78: invokevirtual #316                // Method scala/xml/Node.prefix:()Ljava/lang/String;
        81: aload_1
        82: invokevirtual #319                // Method scala/xml/Node.label:()Ljava/lang/String;
        85: aload_1
        86: invokevirtual #323                // Method scala/xml/Node.attributes:()Lscala/xml/MetaData;
        89: aload_1
        90: invokevirtual #327                // Method scala/xml/Node.scope:()Lscala/xml/NamespaceBinding;
        93: aload         7
        95: invokeinterface #330,  1          // InterfaceMethod scala/collection/Seq.isEmpty:()Z
       100: getstatic     #335                // Field scala/xml/NodeSeq$.MODULE$:Lscala/xml/NodeSeq$;
       103: aload         7
       105: invokevirtual #339                // Method scala/xml/NodeSeq$.seqToNodeSeq:(Lscala/collection/Seq;)Lscala/xml/NodeSeq;
       108: invokevirtual #342                // Method scala/xml/Elem$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;ZLscala/collection/immutable/Seq;)Lscala/xml/Elem;
       111: astore_2
       112: goto          115
       115: aload_2
       116: goto          120
       119: aload_1
       120: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 46
          locals = [ top, class scala/xml/Node ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ class scala/xml/transform/BasicTransformer, class scala/xml/Node, top, class scala/xml/Node, top, top, class scala/collection/Seq, class scala/collection/Seq ]
          stack = []
        frame_type = 100 /* same_locals_1_stack_item */
          stack = [ class scala/xml/Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/xml/transform/BasicTransformer, class scala/xml/Node, class scala/xml/Node, class scala/xml/Node ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class scala/xml/Node ]
      LineNumberTable:
        line 46: 0
        line 47: 9
        line 49: 49
        line 50: 55
        line 52: 63
        line 53: 74
        line 46: 115
        line 55: 119
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      17     5    xs   Lscala/collection/Seq;
           55      56     6    ch   Lscala/collection/Seq;
           63      48     7   nch   Lscala/collection/Seq;
            0     121     0  this   Lscala/xml/transform/BasicTransformer;
            0     121     1     n   Lscala/xml/Node;
    Signature: #288                         // (Lscala/xml/Node;)Lscala/collection/Seq<Lscala/xml/Node;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.xml.Node apply(scala.xml.Node);
    descriptor: (Lscala/xml/Node;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #348                // Method transform:(Lscala/xml/Node;)Lscala/collection/Seq;
         5: astore_2
         6: aload_2
         7: invokeinterface #198,  1          // InterfaceMethod scala/collection/Seq.length:()I
        12: iconst_1
        13: if_icmple     27
        16: new           #350                // class java/lang/UnsupportedOperationException
        19: dup
        20: ldc_w         #352                // String transform must return single node for root
        23: invokespecial #355                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        26: athrow
        27: aload_2
        28: invokeinterface #202,  1          // InterfaceMethod scala/collection/Seq.head:()Ljava/lang/Object;
        33: checkcast     #210                // class scala/xml/Node
        36: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ class scala/collection/Seq ]
      LineNumberTable:
        line 59: 0
        line 60: 6
        line 61: 16
        line 62: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      30     2   seq   Lscala/collection/Seq;
            0      37     0  this   Lscala/xml/transform/BasicTransformer;
            0      37     1     n   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #210                // class scala/xml/Node
         5: invokevirtual #358                // Method apply:(Lscala/xml/Node;)Lscala/xml/Node;
         8: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/xml/transform/BasicTransformer;
            0       9     1    v1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final

  public static final scala.xml.NodeBuffer $anonfun$transform$1(scala.xml.transform.BasicTransformer, scala.xml.NodeBuffer, scala.xml.Node);
    descriptor: (Lscala/xml/transform/BasicTransformer;Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_1
         1: aload_0
         2: aload_2
         3: invokevirtual #348                // Method transform:(Lscala/xml/Node;)Lscala/collection/Seq;
         6: invokevirtual #368                // Method scala/xml/NodeBuffer.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
         9: checkcast     #364                // class scala/xml/NodeBuffer
        12: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lscala/xml/transform/BasicTransformer;
            0      13     1   x$1   Lscala/xml/NodeBuffer;
            0      13     2   x$2   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$1                            final
      x$2                            final

  public static final scala.collection.Seq $anonfun$transform$2(scala.xml.transform.BasicTransformer, scala.xml.Node);
    descriptor: (Lscala/xml/transform/BasicTransformer;Lscala/xml/Node;)Lscala/collection/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #348                // Method transform:(Lscala/xml/Node;)Lscala/collection/Seq;
         5: areturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/xml/transform/BasicTransformer;
            0       6     1     n   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      n                              final

  public static final boolean $anonfun$transform$3(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #376                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: aload_0
         5: invokevirtual #379                // Method scala/Tuple2._2:()Ljava/lang/Object;
         8: invokestatic  #384                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        11: ifne          18
        14: iconst_1
        15: goto          19
        18: iconst_0
        19: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.xml.transform.BasicTransformer();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #388                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #392                // InterfaceMethod scala/Function1.$init$:(Lscala/Function1;)V
         8: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/xml/transform/BasicTransformer;

  public static final java.lang.Object $anonfun$transform$3$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #394                // Method $anonfun$transform$3:(Lscala/Tuple2;)Z
         4: invokestatic  #398                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      p                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #410,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // Ljava/lang/Object;Lscala/Function1<Lscala/xml/Node;Lscala/xml/Node;>;
SourceFile: "BasicTransformer.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00113Qa\u0002\u0005\u0002\u0002=AQa\u0007\u0001\u0005\u0002qAQa\b\u0001\u0005\u0012\u0001BQ!\u0003\u0001\u0005\u00029BQ!\u0003\u0001\u0005\u0002uBQ!\u0003\u0001\u0005\u0002}BQ!\u0011\u0001\u0005\u0002\t\u0013\u0001CQ1tS\u000e$&/\u00198tM>\u0014X.\u001a:\u000b\u0005%Q\u0011!\u0003;sC:\u001chm\u001c:n\u0015\tYA\"A\u0002y[2T\u0011!D\u0001\u0006g\u000e\fG.Y\u0002\u0001\'\r\u0001\u0001\u0003\u0006\t\u0003#Ii\u0011\u0001D\u0005\u0003\'1\u0011a!\u00118z%\u00164\u0007\u0003B\t\u0016/]I!A\u0006\u0007\u0003\u0013\u0019+hn\u0019;j_:\f\u0004C\u0001\r\u001a\u001b\u0005Q\u0011B\u0001\u000e\u000b\u0005\u0011qu\u000eZ3\u0002\rqJg.\u001b;?)\u0005i\u0002C\u0001\u0010\u0001\u001b\u0005A\u0011!C;oG\"\fgnZ3e)\r\tCE\n\t\u0003#\tJ!a\t\u0007\u0003\u000f\t{w\u000e\\3b]\")QE\u0001a\u0001/\u0005\ta\u000eC\u0003(\u0005\u0001\u0007\u0001&\u0001\u0002ogB\u0019\u0011\u0006L\f\u000e\u0003)R!a\u000b\u0007\u0002\u0015\r|G\u000e\\3di&|g.\u0003\u0002.U\t\u00191+Z9\u0015\u0007!z\u0003\bC\u00031\u0007\u0001\u0007\u0011\'\u0001\u0002jiB\u0019!\'N\f\u000f\u0005E\u0019\u0014B\u0001\u001b\r\u0003\u001d\u0001\u0018mY6bO\u0016L!AN\u001c\u0003\u0011%#XM]1u_JT!\u0001\u000e\u0007\t\u000be\u001a\u0001\u0019\u0001\u001e\u0002\u00059\u0014\u0007C\u0001\r<\u0013\ta$B\u0001\u0006O_\u0012,\')\u001e4gKJ$\"\u0001\u000b \t\u000b\u001d\"\u0001\u0019\u0001\u0015\u0015\u0005!\u0002\u0005\"B\u0013\u0006\u0001\u00049\u0012!B1qa2LHCA\fD\u0011\u0015)c\u00011\u0001\u0018\u0001"
    )
BootstrapMethods:
  0: #233 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #217 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #222 REF_invokeStatic scala/xml/transform/BasicTransformer.$anonfun$transform$1:(Lscala/xml/transform/BasicTransformer;Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
      #224 (Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
      #225 5
      #226 1
      #224 (Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
  1: #233 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #255 (Ljava/lang/Object;)Ljava/lang/Object;
      #260 REF_invokeStatic scala/xml/transform/BasicTransformer.$anonfun$transform$2:(Lscala/xml/transform/BasicTransformer;Lscala/xml/Node;)Lscala/collection/Seq;
      #262 (Lscala/xml/Node;)Lscala/collection/Seq;
      #225 5
      #226 1
      #262 (Lscala/xml/Node;)Lscala/collection/Seq;
  2: #233 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #255 (Ljava/lang/Object;)Ljava/lang/Object;
      #278 REF_invokeStatic scala/xml/transform/BasicTransformer.$anonfun$transform$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #279 (Lscala/Tuple2;)Ljava/lang/Object;
      #225 5
      #226 1
      #279 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #407 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #222 REF_invokeStatic scala/xml/transform/BasicTransformer.$anonfun$transform$1:(Lscala/xml/transform/BasicTransformer;Lscala/xml/NodeBuffer;Lscala/xml/Node;)Lscala/xml/NodeBuffer;
      #260 REF_invokeStatic scala/xml/transform/BasicTransformer.$anonfun$transform$2:(Lscala/xml/transform/BasicTransformer;Lscala/xml/Node;)Lscala/collection/Seq;
      #278 REF_invokeStatic scala/xml/transform/BasicTransformer.$anonfun$transform$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xC2 (unknown attribute)
   01 00 00 26 00 DA 00 DB 01 01 00 01 01 01 01 71
   01 72 01 01 12 01 13 01 01 2D 01 82 00 00 B1 00
   A9 00 00 EA 00 FE 00 00 EA 01 5A 00 00 1B 00 1C
   00 00 40 00 41 00 00 65 00 66 00 00 8A 00 8B 00
   00 21 00 22 00 00 46 00 47 00 00 6B 00 6C 00 00
   90 00 91 00 00 27 00 28 00 00 4C 00 4D 00 00 71
   00 72 00 00 96 00 97 00 00 2D 00 2E 00 00 52 00
   53 00 00 77 00 78 00 00 9C 00 9D 00 00 33 00 34
   00 00 58 00 59 00 00 7D 00 7E 00 00 A2 00 A3 00
   00 11 00 12 00 00 39 00 3A 00 00 5E 00 5F 00 00
   83 00 84 00 00 A8 00 A9 00 00 B6 00 B7 00 00 D3
   00 D4 00 00 D3 00 FC 00 00 D3 01 05 00 00 BC 00
   BD 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
