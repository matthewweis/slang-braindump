Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/io/Codec$.class
  Last modified May 29, 2022; size 4266 bytes
  SHA-256 checksum 2ac48cf1b3bf33d6ba8b5062b5b3ff1f3819bd55114fd5acba460ccda81bc091
  Compiled from "Codec.scala"
public final class scala.io.Codec$ implements scala.io.LowPriorityCodecImplicits
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/io/Codec$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 5, methods: 19, attributes: 4
Constant pool:
    #1 = Utf8               scala/io/Codec$
    #2 = Class              #1            // scala/io/Codec$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/io/LowPriorityCodecImplicits
    #6 = Class              #5            // scala/io/LowPriorityCodecImplicits
    #7 = Utf8               Codec.scala
    #8 = Utf8               scala/io/Codec$$anon$1
    #9 = Class              #8            // scala/io/Codec$$anon$1
   #10 = Utf8               MODULE$
   #11 = Utf8               Lscala/io/Codec$;
   #12 = Utf8               ISO8859
   #13 = Utf8               Lscala/io/Codec;
   #14 = Utf8               UTF8
   #15 = Utf8               fallbackSystemCodec
   #16 = Utf8               bitmap$0
   #17 = Utf8               Z
   #18 = Utf8               <clinit>
   #19 = Utf8               ()V
   #20 = Utf8               <init>
   #21 = NameAndType        #20:#19       // "<init>":()V
   #22 = Methodref          #2.#21        // scala/io/Codec$."<init>":()V
   #23 = NameAndType        #10:#11       // MODULE$:Lscala/io/Codec$;
   #24 = Fieldref           #2.#23        // scala/io/Codec$.MODULE$:Lscala/io/Codec$;
   #25 = Utf8               scala/io/Codec
   #26 = Class              #25           // scala/io/Codec
   #27 = Utf8               ISO-8859-1
   #28 = String             #27           // ISO-8859-1
   #29 = Utf8               java/nio/charset/Charset
   #30 = Class              #29           // java/nio/charset/Charset
   #31 = Utf8               forName
   #32 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;
   #33 = NameAndType        #31:#32       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
   #34 = Methodref          #30.#33       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
   #35 = Utf8               (Ljava/nio/charset/Charset;)V
   #36 = NameAndType        #20:#35       // "<init>":(Ljava/nio/charset/Charset;)V
   #37 = Methodref          #26.#36       // scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
   #38 = NameAndType        #12:#13       // ISO8859:Lscala/io/Codec;
   #39 = Fieldref           #2.#38        // scala/io/Codec$.ISO8859:Lscala/io/Codec;
   #40 = Utf8               UTF-8
   #41 = String             #40           // UTF-8
   #42 = NameAndType        #14:#13       // UTF8:Lscala/io/Codec;
   #43 = Fieldref           #2.#42        // scala/io/Codec$.UTF8:Lscala/io/Codec;
   #44 = Utf8               fallbackSystemCodec$lzycompute
   #45 = Utf8               ()Lscala/io/Codec;
   #46 = NameAndType        #16:#17       // bitmap$0:Z
   #47 = Fieldref           #2.#46        // scala/io/Codec$.bitmap$0:Z
   #48 = Utf8               defaultCharsetCodec
   #49 = NameAndType        #48:#45       // defaultCharsetCodec:()Lscala/io/Codec;
   #50 = Methodref          #2.#49        // scala/io/Codec$.defaultCharsetCodec:()Lscala/io/Codec;
   #51 = NameAndType        #15:#13       // fallbackSystemCodec:Lscala/io/Codec;
   #52 = Fieldref           #2.#51        // scala/io/Codec$.fallbackSystemCodec:Lscala/io/Codec;
   #53 = Utf8               this
   #54 = Utf8               java/lang/Throwable
   #55 = Class              #54           // java/lang/Throwable
   #56 = NameAndType        #44:#45       // fallbackSystemCodec$lzycompute:()Lscala/io/Codec;
   #57 = Methodref          #2.#56        // scala/io/Codec$.fallbackSystemCodec$lzycompute:()Lscala/io/Codec;
   #58 = Utf8               defaultCharset
   #59 = Utf8               ()Ljava/nio/charset/Charset;
   #60 = NameAndType        #58:#59       // defaultCharset:()Ljava/nio/charset/Charset;
   #61 = Methodref          #30.#60       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
   #62 = Utf8               apply_charSet
   #63 = Utf8               Ljava/nio/charset/Charset;
   #64 = Utf8               fileEncodingCodec
   #65 = Utf8               scala/util/Properties$
   #66 = Class              #65           // scala/util/Properties$
   #67 = Utf8               Lscala/util/Properties$;
   #68 = NameAndType        #10:#67       // MODULE$:Lscala/util/Properties$;
   #69 = Fieldref           #66.#68       // scala/util/Properties$.MODULE$:Lscala/util/Properties$;
   #70 = Utf8               scala/util/PropertiesTrait
   #71 = Class              #70           // scala/util/PropertiesTrait
   #72 = Utf8               encodingString$
   #73 = Utf8               (Lscala/util/PropertiesTrait;)Ljava/lang/String;
   #74 = NameAndType        #72:#73       // encodingString$:(Lscala/util/PropertiesTrait;)Ljava/lang/String;
   #75 = InterfaceMethodref #71.#74       // scala/util/PropertiesTrait.encodingString$:(Lscala/util/PropertiesTrait;)Ljava/lang/String;
   #76 = Utf8               apply
   #77 = Utf8               (Ljava/lang/String;)Lscala/io/Codec;
   #78 = NameAndType        #76:#77       // apply:(Ljava/lang/String;)Lscala/io/Codec;
   #79 = Methodref          #2.#78        // scala/io/Codec$.apply:(Ljava/lang/String;)Lscala/io/Codec;
   #80 = Utf8               default
   #81 = Utf8               encoding
   #82 = Utf8               Ljava/lang/String;
   #83 = Utf8               (Ljava/nio/charset/Charset;)Lscala/io/Codec;
   #84 = Utf8               charSet
   #85 = Utf8               (Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
   #86 = Utf8               decoder
   #87 = Utf8               (Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
   #88 = NameAndType        #20:#87       // "<init>":(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
   #89 = Methodref          #9.#88        // scala/io/Codec$$anon$1."<init>":(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
   #90 = Utf8               Ljava/nio/charset/CharsetDecoder;
   #91 = Utf8               fromUTF8
   #92 = Utf8               ([B)[C
   #93 = Utf8               bytes
   #94 = Utf8               ([BII)[C
   #95 = NameAndType        #91:#94       // fromUTF8:([BII)[C
   #96 = Methodref          #2.#95        // scala/io/Codec$.fromUTF8:([BII)[C
   #97 = Utf8               [B
   #98 = Utf8               offset
   #99 = Utf8               len
  #100 = Utf8               java/nio/ByteBuffer
  #101 = Class              #100          // java/nio/ByteBuffer
  #102 = Utf8               wrap
  #103 = Utf8               ([BII)Ljava/nio/ByteBuffer;
  #104 = NameAndType        #102:#103     // wrap:([BII)Ljava/nio/ByteBuffer;
  #105 = Methodref          #101.#104     // java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
  #106 = NameAndType        #14:#45       // UTF8:()Lscala/io/Codec;
  #107 = Methodref          #2.#106       // scala/io/Codec$.UTF8:()Lscala/io/Codec;
  #108 = NameAndType        #84:#59       // charSet:()Ljava/nio/charset/Charset;
  #109 = Methodref          #26.#108      // scala/io/Codec.charSet:()Ljava/nio/charset/Charset;
  #110 = Utf8               decode
  #111 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
  #112 = NameAndType        #110:#111     // decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
  #113 = Methodref          #30.#112      // java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
  #114 = Utf8               java/nio/CharBuffer
  #115 = Class              #114          // java/nio/CharBuffer
  #116 = Utf8               remaining
  #117 = Utf8               ()I
  #118 = NameAndType        #116:#117     // remaining:()I
  #119 = Methodref          #115.#118     // java/nio/CharBuffer.remaining:()I
  #120 = Utf8               get
  #121 = Utf8               ([C)Ljava/nio/CharBuffer;
  #122 = NameAndType        #120:#121     // get:([C)Ljava/nio/CharBuffer;
  #123 = Methodref          #115.#122     // java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
  #124 = Utf8               bbuffer
  #125 = Utf8               Ljava/nio/ByteBuffer;
  #126 = Utf8               cbuffer
  #127 = Utf8               Ljava/nio/CharBuffer;
  #128 = Utf8               chars
  #129 = Utf8               [C
  #130 = Utf8               I
  #131 = Utf8               toUTF8
  #132 = Utf8               (Ljava/lang/CharSequence;)[B
  #133 = Utf8               cs
  #134 = Utf8               java/lang/CharSequence
  #135 = Class              #134          // java/lang/CharSequence
  #136 = Utf8               length
  #137 = NameAndType        #136:#117     // length:()I
  #138 = InterfaceMethodref #135.#137     // java/lang/CharSequence.length:()I
  #139 = Utf8               (Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
  #140 = NameAndType        #102:#139     // wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
  #141 = Methodref          #115.#140     // java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
  #142 = Utf8               encode
  #143 = Utf8               (Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
  #144 = NameAndType        #142:#143     // encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
  #145 = Methodref          #30.#144      // java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
  #146 = Methodref          #101.#118     // java/nio/ByteBuffer.remaining:()I
  #147 = Utf8               ([B)Ljava/nio/ByteBuffer;
  #148 = NameAndType        #120:#147     // get:([B)Ljava/nio/ByteBuffer;
  #149 = Methodref          #101.#148     // java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
  #150 = Utf8               Ljava/lang/CharSequence;
  #151 = Utf8               ([CII)[B
  #152 = Utf8               ([CII)Ljava/nio/CharBuffer;
  #153 = NameAndType        #102:#152     // wrap:([CII)Ljava/nio/CharBuffer;
  #154 = Methodref          #115.#153     // java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
  #155 = Utf8               string2codec
  #156 = Utf8               s
  #157 = Utf8               charset2codec
  #158 = Utf8               c
  #159 = Utf8               decoder2codec
  #160 = Utf8               cd
  #161 = NameAndType        #76:#85       // apply:(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
  #162 = Methodref          #2.#161       // scala/io/Codec$.apply:(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
  #163 = Methodref          #4.#21        // java/lang/Object."<init>":()V
  #164 = Utf8               Code
  #165 = Utf8               LineNumberTable
  #166 = Utf8               StackMapTable
  #167 = Utf8               LocalVariableTable
  #168 = Utf8               MethodParameters
  #169 = Utf8               InnerClasses
  #170 = Utf8               SourceFile
  #171 = Utf8               ScalaInlineInfo
  #172 = Utf8               Scala
{
  public static final scala.io.Codec$ MODULE$;
    descriptor: Lscala/io/Codec$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.io.Codec ISO8859;
    descriptor: Lscala/io/Codec;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final scala.io.Codec UTF8;
    descriptor: Lscala/io/Codec;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static scala.io.Codec fallbackSystemCodec;
    descriptor: Lscala/io/Codec;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #2                  // class scala/io/Codec$
         3: dup
         4: invokespecial #22                 // Method "<init>":()V
         7: putstatic     #24                 // Field MODULE$:Lscala/io/Codec$;
        10: getstatic     #24                 // Field MODULE$:Lscala/io/Codec$;
        13: pop
        14: new           #26                 // class scala/io/Codec
        17: dup
        18: ldc           #28                 // String ISO-8859-1
        20: invokestatic  #34                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
        23: invokespecial #37                 // Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
        26: putstatic     #39                 // Field ISO8859:Lscala/io/Codec;
        29: new           #26                 // class scala/io/Codec
        32: dup
        33: ldc           #41                 // String UTF-8
        35: invokestatic  #34                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
        38: invokespecial #37                 // Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
        41: putstatic     #43                 // Field UTF8:Lscala/io/Codec;
        44: return
      LineNumberTable:
        line 83: 0
        line 84: 14
        line 85: 29
        line 83: 44

  private scala.io.Codec fallbackSystemCodec$lzycompute();
    descriptor: ()Lscala/io/Codec;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: monitorenter
         2: getstatic     #47                 // Field bitmap$0:Z
         5: ifne          19
         8: aload_0
         9: invokevirtual #50                 // Method defaultCharsetCodec:()Lscala/io/Codec;
        12: putstatic     #52                 // Field fallbackSystemCodec:Lscala/io/Codec;
        15: iconst_1
        16: putstatic     #47                 // Field bitmap$0:Z
        19: aload_0
        20: monitorexit
        21: goto          27
        24: aload_0
        25: monitorexit
        26: athrow
        27: getstatic     #52                 // Field fallbackSystemCodec:Lscala/io/Codec;
        30: areturn
      Exception table:
         from    to  target type
             2    19    24   any
      StackMapTable: number_of_entries = 3
        frame_type = 19 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 83: 0
        line 80: 8
        line 83: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/io/Codec$;

  public scala.io.Codec fallbackSystemCodec();
    descriptor: ()Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #47                 // Field bitmap$0:Z
         3: ifne          11
         6: aload_0
         7: invokespecial #57                 // Method fallbackSystemCodec$lzycompute:()Lscala/io/Codec;
        10: areturn
        11: getstatic     #52                 // Field fallbackSystemCodec:Lscala/io/Codec;
        14: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/io/Codec$;

  public final scala.io.Codec ISO8859();
    descriptor: ()Lscala/io/Codec;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #39                 // Field ISO8859:Lscala/io/Codec;
         3: areturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/io/Codec$;

  public final scala.io.Codec UTF8();
    descriptor: ()Lscala/io/Codec;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #43                 // Field UTF8:Lscala/io/Codec;
         3: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/io/Codec$;

  public scala.io.Codec defaultCharsetCodec();
    descriptor: ()Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: invokestatic  #61                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
         3: astore_1
         4: new           #26                 // class scala/io/Codec
         7: dup
         8: aload_1
         9: invokespecial #37                 // Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
        12: areturn
      LineNumberTable:
        line 92: 0
        line 97: 4
        line 92: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/io/Codec$;
            4       8     1 apply_charSet   Ljava/nio/charset/Charset;

  public scala.io.Codec fileEncodingCodec();
    descriptor: ()Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #69                 // Field scala/util/Properties$.MODULE$:Lscala/util/Properties$;
         4: invokestatic  #75                 // InterfaceMethod scala/util/PropertiesTrait.encodingString$:(Lscala/util/PropertiesTrait;)Ljava/lang/String;
         7: invokevirtual #79                 // Method apply:(Ljava/lang/String;)Lscala/io/Codec;
        10: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/io/Codec$;

  public scala.io.Codec default();
    descriptor: ()Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #50                 // Method defaultCharsetCodec:()Lscala/io/Codec;
         4: areturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/io/Codec$;

  public scala.io.Codec apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #26                 // class scala/io/Codec
         3: dup
         4: aload_1
         5: invokestatic  #34                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
         8: invokespecial #37                 // Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
        11: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/io/Codec$;
            0      12     1 encoding   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      encoding                       final

  public scala.io.Codec apply(java.nio.charset.Charset);
    descriptor: (Ljava/nio/charset/Charset;)Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #26                 // class scala/io/Codec
         3: dup
         4: aload_1
         5: invokespecial #37                 // Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
         8: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/io/Codec$;
            0       9     1 charSet   Ljava/nio/charset/Charset;
    MethodParameters:
      Name                           Flags
      charSet                        final

  public scala.io.Codec apply(java.nio.charset.CharsetDecoder);
    descriptor: (Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #9                  // class scala/io/Codec$$anon$1
         3: dup
         4: aload_1
         5: aload_1
         6: invokespecial #89                 // Method scala/io/Codec$$anon$1."<init>":(Ljava/nio/charset/CharsetDecoder;Ljava/nio/charset/CharsetDecoder;)V
         9: areturn
      LineNumberTable:
        line 100: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/io/Codec$;
            0      10     1 decoder   Ljava/nio/charset/CharsetDecoder;
    MethodParameters:
      Name                           Flags
      decoder                        final

  public char[] fromUTF8(byte[]);
    descriptor: ([B)[C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: aload_1
         4: arraylength
         5: invokevirtual #96                 // Method fromUTF8:([BII)[C
         8: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/io/Codec$;
            0       9     1 bytes   [B
    MethodParameters:
      Name                           Flags
      bytes                          final

  public char[] fromUTF8(byte[], int, int);
    descriptor: ([BII)[C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=4
         0: aload_1
         1: iload_2
         2: iload_3
         3: invokestatic  #105                // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
         6: astore        4
         8: aload_0
         9: invokevirtual #107                // Method UTF8:()Lscala/io/Codec;
        12: invokevirtual #109                // Method scala/io/Codec.charSet:()Ljava/nio/charset/Charset;
        15: aload         4
        17: invokevirtual #113                // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
        20: astore        5
        22: aload         5
        24: invokevirtual #119                // Method java/nio/CharBuffer.remaining:()I
        27: newarray       char
        29: astore        6
        31: aload         5
        33: aload         6
        35: invokevirtual #123                // Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
        38: pop
        39: aload         6
        41: areturn
      LineNumberTable:
        line 106: 0
        line 107: 8
        line 108: 22
        line 109: 31
        line 111: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      33     4 bbuffer   Ljava/nio/ByteBuffer;
           22      19     5 cbuffer   Ljava/nio/CharBuffer;
           31      10     6 chars   [C
            0      42     0  this   Lscala/io/Codec$;
            0      42     1 bytes   [B
            0      42     2 offset   I
            0      42     3   len   I
    MethodParameters:
      Name                           Flags
      bytes                          final
      offset                         final
      len                            final

  public byte[] toUTF8(java.lang.CharSequence);
    descriptor: (Ljava/lang/CharSequence;)[B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: iconst_0
         2: aload_1
         3: invokeinterface #138,  1          // InterfaceMethod java/lang/CharSequence.length:()I
         8: invokestatic  #141                // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
        11: astore_2
        12: aload_0
        13: invokevirtual #107                // Method UTF8:()Lscala/io/Codec;
        16: invokevirtual #109                // Method scala/io/Codec.charSet:()Ljava/nio/charset/Charset;
        19: aload_2
        20: invokevirtual #145                // Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
        23: astore_3
        24: aload_3
        25: invokevirtual #146                // Method java/nio/ByteBuffer.remaining:()I
        28: newarray       byte
        30: astore        4
        32: aload_3
        33: aload         4
        35: invokevirtual #149                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
        38: pop
        39: aload         4
        41: areturn
      LineNumberTable:
        line 116: 0
        line 117: 12
        line 118: 24
        line 119: 32
        line 121: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      29     2 cbuffer   Ljava/nio/CharBuffer;
           24      17     3 bbuffer   Ljava/nio/ByteBuffer;
           32       9     4 bytes   [B
            0      42     0  this   Lscala/io/Codec$;
            0      42     1    cs   Ljava/lang/CharSequence;
    MethodParameters:
      Name                           Flags
      cs                             final

  public byte[] toUTF8(char[], int, int);
    descriptor: ([CII)[B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=4
         0: aload_1
         1: iload_2
         2: iload_3
         3: invokestatic  #154                // Method java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
         6: astore        4
         8: aload_0
         9: invokevirtual #107                // Method UTF8:()Lscala/io/Codec;
        12: invokevirtual #109                // Method scala/io/Codec.charSet:()Ljava/nio/charset/Charset;
        15: aload         4
        17: invokevirtual #145                // Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
        20: astore        5
        22: aload         5
        24: invokevirtual #146                // Method java/nio/ByteBuffer.remaining:()I
        27: newarray       byte
        29: astore        6
        31: aload         5
        33: aload         6
        35: invokevirtual #149                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
        38: pop
        39: aload         6
        41: areturn
      LineNumberTable:
        line 124: 0
        line 125: 8
        line 126: 22
        line 127: 31
        line 129: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      33     4 cbuffer   Ljava/nio/CharBuffer;
           22      19     5 bbuffer   Ljava/nio/ByteBuffer;
           31      10     6 bytes   [B
            0      42     0  this   Lscala/io/Codec$;
            0      42     1 chars   [C
            0      42     2 offset   I
            0      42     3   len   I
    MethodParameters:
      Name                           Flags
      chars                          final
      offset                         final
      len                            final

  public scala.io.Codec string2codec(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #79                 // Method apply:(Ljava/lang/String;)Lscala/io/Codec;
         5: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/io/Codec$;
            0       6     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.io.Codec charset2codec(java.nio.charset.Charset);
    descriptor: (Ljava/nio/charset/Charset;)Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #26                 // class scala/io/Codec
         3: dup
         4: aload_1
         5: invokespecial #37                 // Method scala/io/Codec."<init>":(Ljava/nio/charset/Charset;)V
         8: areturn
      LineNumberTable:
        line 97: 0
        line 133: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/io/Codec$;
            0       9     1     c   Ljava/nio/charset/Charset;
    MethodParameters:
      Name                           Flags
      c                              final

  public scala.io.Codec decoder2codec(java.nio.charset.CharsetDecoder);
    descriptor: (Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #162                // Method apply:(Ljava/nio/charset/CharsetDecoder;)Lscala/io/Codec;
         5: areturn
      LineNumberTable:
        line 134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/io/Codec$;
            0       6     1    cd   Ljava/nio/charset/CharsetDecoder;
    MethodParameters:
      Name                           Flags
      cd                             final

  private scala.io.Codec$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #163                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/io/Codec$;
}
InnerClasses:
  public final #9;                        // class scala/io/Codec$$anon$1
SourceFile: "Codec.scala"
  ScalaInlineInfo: length = 0x5E (unknown attribute)
   01 01 00 12 00 14 00 13 01 00 0C 00 2D 01 00 0E
   00 2D 01 00 4C 00 4D 01 00 4C 00 53 01 00 4C 00
   55 01 00 9D 00 53 01 00 9F 00 55 01 00 50 00 2D
   01 00 30 00 2D 01 00 0F 00 2D 01 00 2C 00 2D 01
   00 40 00 2D 01 00 5B 00 5C 01 00 5B 00 5E 01 00
   9B 00 4D 01 00 83 00 84 01 00 83 00 97 01
  Scala: length = 0x0 (unknown attribute)

