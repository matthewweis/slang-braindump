Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/compat/java8/OptionConverters$.class
  Last modified May 29, 2022; size 5075 bytes
  SHA-256 checksum 83d47f18a38cb707498f05e22f622c8bd593223e3c69b80b74472112225653d1
  Compiled from "OptionConverters.scala"
public final class scala.compat.java8.OptionConverters$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/compat/java8/OptionConverters$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 4, methods: 15, attributes: 4
Constant pool:
    #1 = Utf8               scala/compat/java8/OptionConverters$
    #2 = Class              #1            // scala/compat/java8/OptionConverters$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               OptionConverters.scala
    #6 = Utf8               scala/compat/java8/OptionConverters$$anon$1
    #7 = Class              #6            // scala/compat/java8/OptionConverters$$anon$1
    #8 = Utf8               scala/compat/java8/OptionConverters$$anon$2
    #9 = Class              #8            // scala/compat/java8/OptionConverters$$anon$2
   #10 = Utf8               scala/compat/java8/OptionConverters$$anon$3
   #11 = Class              #10           // scala/compat/java8/OptionConverters$$anon$3
   #12 = Utf8               scala/compat/java8/OptionConverters$SpecializerOfOptions
   #13 = Class              #12           // scala/compat/java8/OptionConverters$SpecializerOfOptions
   #14 = Utf8               scala/compat/java8/OptionConverters
   #15 = Class              #14           // scala/compat/java8/OptionConverters
   #16 = Utf8               SpecializerOfOptions
   #17 = Utf8               MODULE$
   #18 = Utf8               Lscala/compat/java8/OptionConverters$;
   #19 = Utf8               specializer_OptionalDouble
   #20 = Utf8               Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
   #21 = Utf8               Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalDouble;>;
   #22 = Utf8               specializer_OptionalInt
   #23 = Utf8               Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalInt;>;
   #24 = Utf8               specializer_OptionalLong
   #25 = Utf8               Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalLong;>;
   #26 = Utf8               <clinit>
   #27 = Utf8               ()V
   #28 = Utf8               <init>
   #29 = NameAndType        #28:#27       // "<init>":()V
   #30 = Methodref          #2.#29        // scala/compat/java8/OptionConverters$."<init>":()V
   #31 = NameAndType        #17:#18       // MODULE$:Lscala/compat/java8/OptionConverters$;
   #32 = Fieldref           #2.#31        // scala/compat/java8/OptionConverters$.MODULE$:Lscala/compat/java8/OptionConverters$;
   #33 = Methodref          #7.#29        // scala/compat/java8/OptionConverters$$anon$1."<init>":()V
   #34 = NameAndType        #19:#20       // specializer_OptionalDouble:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
   #35 = Fieldref           #2.#34        // scala/compat/java8/OptionConverters$.specializer_OptionalDouble:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
   #36 = Methodref          #9.#29        // scala/compat/java8/OptionConverters$$anon$2."<init>":()V
   #37 = NameAndType        #22:#20       // specializer_OptionalInt:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
   #38 = Fieldref           #2.#37        // scala/compat/java8/OptionConverters$.specializer_OptionalInt:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
   #39 = Methodref          #11.#29       // scala/compat/java8/OptionConverters$$anon$3."<init>":()V
   #40 = NameAndType        #24:#20       // specializer_OptionalLong:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
   #41 = Fieldref           #2.#40        // scala/compat/java8/OptionConverters$.specializer_OptionalLong:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
   #42 = Utf8               ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
   #43 = Utf8               ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalDouble;>;
   #44 = Utf8               this
   #45 = Utf8               ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalInt;>;
   #46 = Utf8               ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalLong;>;
   #47 = Utf8               RichOptionalGeneric
   #48 = Utf8               (Ljava/util/Optional;)Ljava/util/Optional;
   #49 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)Ljava/util/Optional<TA;>;
   #50 = Utf8               underlying
   #51 = Utf8               Ljava/util/Optional;
   #52 = Utf8               RichOptionForJava8
   #53 = Utf8               (Lscala/Option;)Lscala/Option;
   #54 = Utf8               <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)Lscala/Option<TA;>;
   #55 = Utf8               Lscala/Option;
   #56 = Utf8               RichOptionalDouble
   #57 = Utf8               (Ljava/util/OptionalDouble;)Ljava/util/OptionalDouble;
   #58 = Utf8               Ljava/util/OptionalDouble;
   #59 = Utf8               RichOptionalInt
   #60 = Utf8               (Ljava/util/OptionalInt;)Ljava/util/OptionalInt;
   #61 = Utf8               Ljava/util/OptionalInt;
   #62 = Utf8               RichOptionalLong
   #63 = Utf8               (Ljava/util/OptionalLong;)Ljava/util/OptionalLong;
   #64 = Utf8               Ljava/util/OptionalLong;
   #65 = Utf8               toJava
   #66 = Utf8               (Lscala/Option;)Ljava/util/Optional;
   #67 = Utf8               <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)Ljava/util/Optional<TA;>;
   #68 = Utf8               o
   #69 = Utf8               scala/Some
   #70 = Class              #69           // scala/Some
   #71 = Utf8               value
   #72 = Utf8               ()Ljava/lang/Object;
   #73 = NameAndType        #71:#72       // value:()Ljava/lang/Object;
   #74 = Methodref          #70.#73       // scala/Some.value:()Ljava/lang/Object;
   #75 = Utf8               java/util/Optional
   #76 = Class              #75           // java/util/Optional
   #77 = Utf8               ofNullable
   #78 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;
   #79 = NameAndType        #77:#78       // ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
   #80 = Methodref          #76.#79       // java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
   #81 = Utf8               empty
   #82 = Utf8               ()Ljava/util/Optional;
   #83 = NameAndType        #81:#82       // empty:()Ljava/util/Optional;
   #84 = Methodref          #76.#83       // java/util/Optional.empty:()Ljava/util/Optional;
   #85 = Utf8               a
   #86 = Utf8               Ljava/lang/Object;
   #87 = Utf8               scala/Option
   #88 = Class              #87           // scala/Option
   #89 = Utf8               toScala
   #90 = Utf8               (Ljava/util/Optional;)Lscala/Option;
   #91 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)Lscala/Option<TA;>;
   #92 = Utf8               isPresent
   #93 = Utf8               ()Z
   #94 = NameAndType        #92:#93       // isPresent:()Z
   #95 = Methodref          #76.#94       // java/util/Optional.isPresent:()Z
   #96 = Utf8               get
   #97 = NameAndType        #96:#72       // get:()Ljava/lang/Object;
   #98 = Methodref          #76.#97       // java/util/Optional.get:()Ljava/lang/Object;
   #99 = Utf8               (Ljava/lang/Object;)V
  #100 = NameAndType        #28:#99       // "<init>":(Ljava/lang/Object;)V
  #101 = Methodref          #70.#100      // scala/Some."<init>":(Ljava/lang/Object;)V
  #102 = Utf8               scala/None$
  #103 = Class              #102          // scala/None$
  #104 = Utf8               Lscala/None$;
  #105 = NameAndType        #17:#104      // MODULE$:Lscala/None$;
  #106 = Fieldref           #103.#105     // scala/None$.MODULE$:Lscala/None$;
  #107 = Utf8               (Ljava/util/OptionalDouble;)Lscala/Option;
  #108 = Utf8               (Ljava/util/OptionalDouble;)Lscala/Option<Ljava/lang/Object;>;
  #109 = Utf8               java/util/OptionalDouble
  #110 = Class              #109          // java/util/OptionalDouble
  #111 = Methodref          #110.#94      // java/util/OptionalDouble.isPresent:()Z
  #112 = Utf8               getAsDouble
  #113 = Utf8               ()D
  #114 = NameAndType        #112:#113     // getAsDouble:()D
  #115 = Methodref          #110.#114     // java/util/OptionalDouble.getAsDouble:()D
  #116 = Utf8               scala/runtime/BoxesRunTime
  #117 = Class              #116          // scala/runtime/BoxesRunTime
  #118 = Utf8               boxToDouble
  #119 = Utf8               (D)Ljava/lang/Double;
  #120 = NameAndType        #118:#119     // boxToDouble:(D)Ljava/lang/Double;
  #121 = Methodref          #117.#120     // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
  #122 = Utf8               (Ljava/util/OptionalInt;)Lscala/Option;
  #123 = Utf8               (Ljava/util/OptionalInt;)Lscala/Option<Ljava/lang/Object;>;
  #124 = Utf8               java/util/OptionalInt
  #125 = Class              #124          // java/util/OptionalInt
  #126 = Methodref          #125.#94      // java/util/OptionalInt.isPresent:()Z
  #127 = Utf8               getAsInt
  #128 = Utf8               ()I
  #129 = NameAndType        #127:#128     // getAsInt:()I
  #130 = Methodref          #125.#129     // java/util/OptionalInt.getAsInt:()I
  #131 = Utf8               boxToInteger
  #132 = Utf8               (I)Ljava/lang/Integer;
  #133 = NameAndType        #131:#132     // boxToInteger:(I)Ljava/lang/Integer;
  #134 = Methodref          #117.#133     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #135 = Utf8               (Ljava/util/OptionalLong;)Lscala/Option;
  #136 = Utf8               (Ljava/util/OptionalLong;)Lscala/Option<Ljava/lang/Object;>;
  #137 = Utf8               java/util/OptionalLong
  #138 = Class              #137          // java/util/OptionalLong
  #139 = Methodref          #138.#94      // java/util/OptionalLong.isPresent:()Z
  #140 = Utf8               getAsLong
  #141 = Utf8               ()J
  #142 = NameAndType        #140:#141     // getAsLong:()J
  #143 = Methodref          #138.#142     // java/util/OptionalLong.getAsLong:()J
  #144 = Utf8               boxToLong
  #145 = Utf8               (J)Ljava/lang/Long;
  #146 = NameAndType        #144:#145     // boxToLong:(J)Ljava/lang/Long;
  #147 = Methodref          #117.#146     // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #148 = Methodref          #4.#29        // java/lang/Object."<init>":()V
  #149 = Utf8               Signature
  #150 = Utf8               Code
  #151 = Utf8               LineNumberTable
  #152 = Utf8               LocalVariableTable
  #153 = Utf8               MethodParameters
  #154 = Utf8               StackMapTable
  #155 = Utf8               InnerClasses
  #156 = Utf8               SourceFile
  #157 = Utf8               ScalaInlineInfo
  #158 = Utf8               Scala
{
  public static final scala.compat.java8.OptionConverters$ MODULE$;
    descriptor: Lscala/compat/java8/OptionConverters$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.compat.java8.OptionConverters$SpecializerOfOptions<java.lang.Object, java.util.OptionalDouble> specializer_OptionalDouble;
    descriptor: Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #21                          // Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalDouble;>;

  private static final scala.compat.java8.OptionConverters$SpecializerOfOptions<java.lang.Object, java.util.OptionalInt> specializer_OptionalInt;
    descriptor: Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #23                          // Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalInt;>;

  private static final scala.compat.java8.OptionConverters$SpecializerOfOptions<java.lang.Object, java.util.OptionalLong> specializer_OptionalLong;
    descriptor: Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #25                          // Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalLong;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/compat/java8/OptionConverters$
         3: dup
         4: invokespecial #30                 // Method "<init>":()V
         7: putstatic     #32                 // Field MODULE$:Lscala/compat/java8/OptionConverters$;
        10: new           #7                  // class scala/compat/java8/OptionConverters$$anon$1
        13: dup
        14: invokespecial #33                 // Method scala/compat/java8/OptionConverters$$anon$1."<init>":()V
        17: putstatic     #35                 // Field specializer_OptionalDouble:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
        20: new           #9                  // class scala/compat/java8/OptionConverters$$anon$2
        23: dup
        24: invokespecial #36                 // Method scala/compat/java8/OptionConverters$$anon$2."<init>":()V
        27: putstatic     #38                 // Field specializer_OptionalInt:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
        30: new           #11                 // class scala/compat/java8/OptionConverters$$anon$3
        33: dup
        34: invokespecial #39                 // Method scala/compat/java8/OptionConverters$$anon$3."<init>":()V
        37: putstatic     #41                 // Field specializer_OptionalLong:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
        40: return
      LineNumberTable:
        line 53: 0
        line 64: 10
        line 63: 17
        line 73: 20
        line 72: 27
        line 82: 30
        line 81: 37
        line 53: 40

  public scala.compat.java8.OptionConverters$SpecializerOfOptions<java.lang.Object, java.util.OptionalDouble> specializer_OptionalDouble();
    descriptor: ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #35                 // Field specializer_OptionalDouble:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
         3: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/compat/java8/OptionConverters$;
    Signature: #43                          // ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalDouble;>;

  public scala.compat.java8.OptionConverters$SpecializerOfOptions<java.lang.Object, java.util.OptionalInt> specializer_OptionalInt();
    descriptor: ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #38                 // Field specializer_OptionalInt:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
         3: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/compat/java8/OptionConverters$;
    Signature: #45                          // ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalInt;>;

  public scala.compat.java8.OptionConverters$SpecializerOfOptions<java.lang.Object, java.util.OptionalLong> specializer_OptionalLong();
    descriptor: ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #41                 // Field specializer_OptionalLong:Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
         3: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/compat/java8/OptionConverters$;
    Signature: #46                          // ()Lscala/compat/java8/OptionConverters$SpecializerOfOptions<Ljava/lang/Object;Ljava/util/OptionalLong;>;

  public <A extends java.lang.Object> java.util.Optional<A> RichOptionalGeneric(java.util.Optional<A>);
    descriptor: (Ljava/util/Optional;)Ljava/util/Optional;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/compat/java8/OptionConverters$;
            0       2     1 underlying   Ljava/util/Optional;
    Signature: #49                          // <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)Ljava/util/Optional<TA;>;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public <A extends java.lang.Object> scala.Option<A> RichOptionForJava8(scala.Option<A>);
    descriptor: (Lscala/Option;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/compat/java8/OptionConverters$;
            0       2     1 underlying   Lscala/Option;
    Signature: #54                          // <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public java.util.OptionalDouble RichOptionalDouble(java.util.OptionalDouble);
    descriptor: (Ljava/util/OptionalDouble;)Ljava/util/OptionalDouble;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/compat/java8/OptionConverters$;
            0       2     1 underlying   Ljava/util/OptionalDouble;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public java.util.OptionalInt RichOptionalInt(java.util.OptionalInt);
    descriptor: (Ljava/util/OptionalInt;)Ljava/util/OptionalInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/compat/java8/OptionConverters$;
            0       2     1 underlying   Ljava/util/OptionalInt;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public java.util.OptionalLong RichOptionalLong(java.util.OptionalLong);
    descriptor: (Ljava/util/OptionalLong;)Ljava/util/OptionalLong;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 122: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/compat/java8/OptionConverters$;
            0       2     1 underlying   Ljava/util/OptionalLong;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public final <A extends java.lang.Object> java.util.Optional<A> toJava(scala.Option<A>);
    descriptor: (Lscala/Option;)Ljava/util/Optional;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #70                 // class scala/Some
         6: ifeq          31
         9: aload_3
        10: checkcast     #70                 // class scala/Some
        13: astore        4
        15: aload         4
        17: invokevirtual #74                 // Method scala/Some.value:()Ljava/lang/Object;
        20: astore        5
        22: aload         5
        24: invokestatic  #80                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
        27: astore_2
        28: goto          41
        31: goto          34
        34: invokestatic  #84                 // Method java/util/Optional.empty:()Ljava/util/Optional;
        37: astore_2
        38: goto          41
        41: aload_2
        42: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/compat/java8/OptionConverters$, class scala/Option, class java/util/Optional, class scala/Option ]
          stack = []
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22       9     5     a   Ljava/lang/Object;
            0      43     0  this   Lscala/compat/java8/OptionConverters$;
            0      43     1     o   Lscala/Option;
    Signature: #67                          // <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)Ljava/util/Optional<TA;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public final <A extends java.lang.Object> scala.Option<A> toScala(java.util.Optional<A>);
    descriptor: (Ljava/util/Optional;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #95                 // Method java/util/Optional.isPresent:()Z
         4: ifeq          21
         7: new           #70                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #98                 // Method java/util/Optional.get:()Ljava/lang/Object;
        15: invokespecial #101                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        18: goto          24
        21: getstatic     #106                // Field scala/None$.MODULE$:Lscala/None$;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/compat/java8/OptionConverters$;
            0      25     1     o   Ljava/util/Optional;
    Signature: #91                          // <A:Ljava/lang/Object;>(Ljava/util/Optional<TA;>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public final scala.Option<java.lang.Object> toScala(java.util.OptionalDouble);
    descriptor: (Ljava/util/OptionalDouble;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #111                // Method java/util/OptionalDouble.isPresent:()Z
         4: ifeq          24
         7: new           #70                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #115                // Method java/util/OptionalDouble.getAsDouble:()D
        15: invokestatic  #121                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
        18: invokespecial #101                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: goto          27
        24: getstatic     #106                // Field scala/None$.MODULE$:Lscala/None$;
        27: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 24 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 136: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/compat/java8/OptionConverters$;
            0      28     1     o   Ljava/util/OptionalDouble;
    Signature: #108                         // (Ljava/util/OptionalDouble;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public final scala.Option<java.lang.Object> toScala(java.util.OptionalInt);
    descriptor: (Ljava/util/OptionalInt;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #126                // Method java/util/OptionalInt.isPresent:()Z
         4: ifeq          24
         7: new           #70                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #130                // Method java/util/OptionalInt.getAsInt:()I
        15: invokestatic  #134                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        18: invokespecial #101                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: goto          27
        24: getstatic     #106                // Field scala/None$.MODULE$:Lscala/None$;
        27: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 24 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/compat/java8/OptionConverters$;
            0      28     1     o   Ljava/util/OptionalInt;
    Signature: #123                         // (Ljava/util/OptionalInt;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public final scala.Option<java.lang.Object> toScala(java.util.OptionalLong);
    descriptor: (Ljava/util/OptionalLong;)Lscala/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #139                // Method java/util/OptionalLong.isPresent:()Z
         4: ifeq          24
         7: new           #70                 // class scala/Some
        10: dup
        11: aload_1
        12: invokevirtual #143                // Method java/util/OptionalLong.getAsLong:()J
        15: invokestatic  #147                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        18: invokespecial #101                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: goto          27
        24: getstatic     #106                // Field scala/None$.MODULE$:Lscala/None$;
        27: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 24 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/compat/java8/OptionConverters$;
            0      28     1     o   Ljava/util/OptionalLong;
    Signature: #136                         // (Ljava/util/OptionalLong;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      o                              final

  private scala.compat.java8.OptionConverters$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #148                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 143: 0
        line 53: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/OptionConverters$;
}
InnerClasses:
  public final #7;                        // class scala/compat/java8/OptionConverters$$anon$1
  public final #9;                        // class scala/compat/java8/OptionConverters$$anon$2
  public final #11;                       // class scala/compat/java8/OptionConverters$$anon$3
  public static abstract #16= #13 of #15; // SpecializerOfOptions=class scala/compat/java8/OptionConverters$SpecializerOfOptions of class scala/compat/java8/OptionConverters
SourceFile: "OptionConverters.scala"
  ScalaInlineInfo: length = 0x4A (unknown attribute)
   01 01 00 0E 00 1C 00 1B 01 00 34 00 35 01 00 38
   00 39 01 00 2F 00 30 01 00 3B 00 3C 01 00 3E 00
   3F 01 00 13 00 2A 01 00 16 00 2A 01 00 18 00 2A
   01 00 41 00 42 01 00 59 00 5A 01 00 59 00 6B 01
   00 59 00 7A 01 00 59 00 87 01
  Scala: length = 0x0 (unknown attribute)

