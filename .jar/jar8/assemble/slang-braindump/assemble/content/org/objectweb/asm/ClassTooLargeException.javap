Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/objectweb/asm/ClassTooLargeException.class
  Last modified May 29, 2022; size 952 bytes
  SHA-256 checksum 92e749b102da16173f524dacf15f0028981a218228689b6593774ad9e9291a17
  Compiled from "ClassTooLargeException.java"
public final class org.objectweb.asm.ClassTooLargeException extends java.lang.IndexOutOfBoundsException
  minor version: 0
  major version: 49
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/objectweb/asm/ClassTooLargeException
  super_class: #4                         // java/lang/IndexOutOfBoundsException
  interfaces: 0, fields: 3, methods: 3, attributes: 1
Constant pool:
   #1 = Utf8               org/objectweb/asm/ClassTooLargeException
   #2 = Class              #1             // org/objectweb/asm/ClassTooLargeException
   #3 = Utf8               java/lang/IndexOutOfBoundsException
   #4 = Class              #3             // java/lang/IndexOutOfBoundsException
   #5 = Utf8               ClassTooLargeException.java
   #6 = Utf8               serialVersionUID
   #7 = Utf8               J
   #8 = Long               160715609518896765l
  #10 = Utf8               className
  #11 = Utf8               Ljava/lang/String;
  #12 = Utf8               constantPoolCount
  #13 = Utf8               I
  #14 = Utf8               <init>
  #15 = Utf8               (Ljava/lang/String;I)V
  #16 = Utf8               java/lang/StringBuilder
  #17 = Class              #16            // java/lang/StringBuilder
  #18 = Utf8               ()V
  #19 = NameAndType        #14:#18        // "<init>":()V
  #20 = Methodref          #17.#19        // java/lang/StringBuilder."<init>":()V
  #21 = Utf8               Class too large:
  #22 = String             #21            // Class too large:
  #23 = Utf8               append
  #24 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #25 = NameAndType        #23:#24        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #26 = Methodref          #17.#25        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #27 = Utf8               toString
  #28 = Utf8               ()Ljava/lang/String;
  #29 = NameAndType        #27:#28        // toString:()Ljava/lang/String;
  #30 = Methodref          #17.#29        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #31 = Utf8               (Ljava/lang/String;)V
  #32 = NameAndType        #14:#31        // "<init>":(Ljava/lang/String;)V
  #33 = Methodref          #4.#32         // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #34 = NameAndType        #10:#11        // className:Ljava/lang/String;
  #35 = Fieldref           #2.#34         // org/objectweb/asm/ClassTooLargeException.className:Ljava/lang/String;
  #36 = NameAndType        #12:#13        // constantPoolCount:I
  #37 = Fieldref           #2.#36         // org/objectweb/asm/ClassTooLargeException.constantPoolCount:I
  #38 = Utf8               this
  #39 = Utf8               Lorg/objectweb/asm/ClassTooLargeException;
  #40 = Utf8               getClassName
  #41 = Utf8               getConstantPoolCount
  #42 = Utf8               ()I
  #43 = Utf8               ConstantValue
  #44 = Utf8               Code
  #45 = Utf8               LineNumberTable
  #46 = Utf8               LocalVariableTable
  #47 = Utf8               SourceFile
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 160715609518896765l

  private final java.lang.String className;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int constantPoolCount;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.objectweb.asm.ClassTooLargeException(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: new           #17                 // class java/lang/StringBuilder
         4: dup
         5: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
         8: ldc           #22                 // String Class too large:
        10: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        13: aload_1
        14: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        20: invokespecial #33                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        23: aload_0
        24: aload_1
        25: putfield      #35                 // Field className:Ljava/lang/String;
        28: aload_0
        29: iload_2
        30: putfield      #37                 // Field constantPoolCount:I
        33: return
      LineNumberTable:
        line 49: 0
        line 50: 23
        line 51: 28
        line 52: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/objectweb/asm/ClassTooLargeException;
            0      34     1 className   Ljava/lang/String;
            0      34     2 constantPoolCount   I

  public java.lang.String getClassName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #35                 // Field className:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/objectweb/asm/ClassTooLargeException;

  public int getConstantPoolCount();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field constantPoolCount:I
         4: ireturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/objectweb/asm/ClassTooLargeException;
}
SourceFile: "ClassTooLargeException.java"
