Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/sun/jna/VarArgsChecker.class
  Last modified May 29, 2022; size 1402 bytes
  SHA-256 checksum 669133cd72d22678fa882e14f80be0837213176c117eef25d9b7c8733f5b6c6d
  Compiled from "VarArgsChecker.java"
abstract class com.sun.jna.VarArgsChecker
  minor version: 0
  major version: 50
  flags: (0x0420) ACC_SUPER, ACC_ABSTRACT
  this_class: #13                         // com/sun/jna/VarArgsChecker
  super_class: #14                        // java/lang/Object
  interfaces: 0, fields: 0, methods: 5, attributes: 2
Constant pool:
   #1 = Methodref          #13.#46        // com/sun/jna/VarArgsChecker."<init>":()V
   #2 = Methodref          #14.#46        // java/lang/Object."<init>":()V
   #3 = Class              #47            // java/lang/reflect/Method
   #4 = String             #37            // isVarArgs
   #5 = Class              #48            // java/lang/Class
   #6 = Methodref          #5.#49         // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   #7 = Class              #50            // com/sun/jna/VarArgsChecker$RealVarArgsChecker
   #8 = Methodref          #7.#51         // com/sun/jna/VarArgsChecker$RealVarArgsChecker."<init>":(Lcom/sun/jna/VarArgsChecker$1;)V
   #9 = Class              #52            // com/sun/jna/VarArgsChecker$NoVarArgsChecker
  #10 = Methodref          #9.#51         // com/sun/jna/VarArgsChecker$NoVarArgsChecker."<init>":(Lcom/sun/jna/VarArgsChecker$1;)V
  #11 = Class              #53            // java/lang/NoSuchMethodException
  #12 = Class              #54            // java/lang/SecurityException
  #13 = Class              #55            // com/sun/jna/VarArgsChecker
  #14 = Class              #56            // java/lang/Object
  #15 = Class              #57            // com/sun/jna/VarArgsChecker$1
  #16 = Utf8               InnerClasses
  #17 = Utf8               NoVarArgsChecker
  #18 = Utf8               RealVarArgsChecker
  #19 = Utf8               <init>
  #20 = Utf8               ()V
  #21 = Utf8               Code
  #22 = Utf8               LineNumberTable
  #23 = Utf8               LocalVariableTable
  #24 = Utf8               this
  #25 = Utf8               Lcom/sun/jna/VarArgsChecker;
  #26 = Utf8               create
  #27 = Utf8               ()Lcom/sun/jna/VarArgsChecker;
  #28 = Utf8               isVarArgsMethod
  #29 = Utf8               Ljava/lang/reflect/Method;
  #30 = Utf8               e
  #31 = Utf8               Ljava/lang/NoSuchMethodException;
  #32 = Utf8               Ljava/lang/SecurityException;
  #33 = Utf8               StackMapTable
  #34 = Class              #47            // java/lang/reflect/Method
  #35 = Class              #53            // java/lang/NoSuchMethodException
  #36 = Class              #54            // java/lang/SecurityException
  #37 = Utf8               isVarArgs
  #38 = Utf8               (Ljava/lang/reflect/Method;)Z
  #39 = Utf8               fixedArgs
  #40 = Utf8               (Ljava/lang/reflect/Method;)I
  #41 = Utf8               (Lcom/sun/jna/VarArgsChecker$1;)V
  #42 = Utf8               x0
  #43 = Utf8               Lcom/sun/jna/VarArgsChecker$1;
  #44 = Utf8               SourceFile
  #45 = Utf8               VarArgsChecker.java
  #46 = NameAndType        #19:#20        // "<init>":()V
  #47 = Utf8               java/lang/reflect/Method
  #48 = Utf8               java/lang/Class
  #49 = NameAndType        #58:#59        // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
  #50 = Utf8               com/sun/jna/VarArgsChecker$RealVarArgsChecker
  #51 = NameAndType        #19:#41        // "<init>":(Lcom/sun/jna/VarArgsChecker$1;)V
  #52 = Utf8               com/sun/jna/VarArgsChecker$NoVarArgsChecker
  #53 = Utf8               java/lang/NoSuchMethodException
  #54 = Utf8               java/lang/SecurityException
  #55 = Utf8               com/sun/jna/VarArgsChecker
  #56 = Utf8               java/lang/Object
  #57 = Utf8               com/sun/jna/VarArgsChecker$1
  #58 = Utf8               getMethod
  #59 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
{
  private com.sun.jna.VarArgsChecker();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 38: 0
        line 39: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/sun/jna/VarArgsChecker;

  static com.sun.jna.VarArgsChecker create();
    descriptor: ()Lcom/sun/jna/VarArgsChecker;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=1, args_size=0
         0: ldc           #3                  // class java/lang/reflect/Method
         2: ldc           #4                  // String isVarArgs
         4: iconst_0
         5: anewarray     #5                  // class java/lang/Class
         8: invokevirtual #6                  // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
        11: astore_0
        12: aload_0
        13: ifnull        25
        16: new           #7                  // class com/sun/jna/VarArgsChecker$RealVarArgsChecker
        19: dup
        20: aconst_null
        21: invokespecial #8                  // Method com/sun/jna/VarArgsChecker$RealVarArgsChecker."<init>":(Lcom/sun/jna/VarArgsChecker$1;)V
        24: areturn
        25: new           #9                  // class com/sun/jna/VarArgsChecker$NoVarArgsChecker
        28: dup
        29: aconst_null
        30: invokespecial #10                 // Method com/sun/jna/VarArgsChecker$NoVarArgsChecker."<init>":(Lcom/sun/jna/VarArgsChecker$1;)V
        33: areturn
        34: astore_0
        35: new           #9                  // class com/sun/jna/VarArgsChecker$NoVarArgsChecker
        38: dup
        39: aconst_null
        40: invokespecial #10                 // Method com/sun/jna/VarArgsChecker$NoVarArgsChecker."<init>":(Lcom/sun/jna/VarArgsChecker$1;)V
        43: areturn
        44: astore_0
        45: new           #9                  // class com/sun/jna/VarArgsChecker$NoVarArgsChecker
        48: dup
        49: aconst_null
        50: invokespecial #10                 // Method com/sun/jna/VarArgsChecker$NoVarArgsChecker."<init>":(Lcom/sun/jna/VarArgsChecker$1;)V
        53: areturn
      Exception table:
         from    to  target type
             0    24    34   Class java/lang/NoSuchMethodException
            25    33    34   Class java/lang/NoSuchMethodException
             0    24    44   Class java/lang/SecurityException
            25    33    44   Class java/lang/SecurityException
      LineNumberTable:
        line 79: 0
        line 80: 12
        line 82: 16
        line 84: 25
        line 86: 34
        line 87: 35
        line 88: 44
        line 89: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      22     0 isVarArgsMethod   Ljava/lang/reflect/Method;
           35       9     0     e   Ljava/lang/NoSuchMethodException;
           45       9     0     e   Ljava/lang/SecurityException;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ class java/lang/reflect/Method ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = []
          stack = [ class java/lang/NoSuchMethodException ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/SecurityException ]

  abstract boolean isVarArgs(java.lang.reflect.Method);
    descriptor: (Ljava/lang/reflect/Method;)Z
    flags: (0x0400) ACC_ABSTRACT

  abstract int fixedArgs(java.lang.reflect.Method);
    descriptor: (Ljava/lang/reflect/Method;)I
    flags: (0x0400) ACC_ABSTRACT

  com.sun.jna.VarArgsChecker(com.sun.jna.VarArgsChecker$1);
    descriptor: (Lcom/sun/jna/VarArgsChecker$1;)V
    flags: (0x1000) ACC_SYNTHETIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method "<init>":()V
         4: return
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/sun/jna/VarArgsChecker;
            0       5     1    x0   Lcom/sun/jna/VarArgsChecker$1;
}
SourceFile: "VarArgsChecker.java"
InnerClasses:
  static #15;                             // class com/sun/jna/VarArgsChecker$1
  private static final #17= #9 of #13;    // NoVarArgsChecker=class com/sun/jna/VarArgsChecker$NoVarArgsChecker of class com/sun/jna/VarArgsChecker
  private static final #18= #7 of #13;    // RealVarArgsChecker=class com/sun/jna/VarArgsChecker$RealVarArgsChecker of class com/sun/jna/VarArgsChecker
