Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/sun/jna/win32/W32APITypeMapper.class
  Last modified May 29, 2022; size 1287 bytes
  SHA-256 checksum 11754844a930bf98be971e3012309e80e10a928d4c7d1545d9efcc22fee686ba
  Compiled from "W32APITypeMapper.java"
public class com.sun.jna.win32.W32APITypeMapper extends com.sun.jna.DefaultTypeMapper
  minor version: 0
  major version: 50
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #11                         // com/sun/jna/win32/W32APITypeMapper
  super_class: #18                        // com/sun/jna/DefaultTypeMapper
  interfaces: 0, fields: 3, methods: 2, attributes: 2
Constant pool:
   #1 = Methodref          #18.#43        // com/sun/jna/DefaultTypeMapper."<init>":()V
   #2 = Class              #44            // com/sun/jna/win32/W32APITypeMapper$1
   #3 = Methodref          #2.#45         // com/sun/jna/win32/W32APITypeMapper$1."<init>":(Lcom/sun/jna/win32/W32APITypeMapper;)V
   #4 = Class              #46            // java/lang/String
   #5 = Methodref          #11.#47        // com/sun/jna/win32/W32APITypeMapper.addTypeConverter:(Ljava/lang/Class;Lcom/sun/jna/TypeConverter;)V
   #6 = Class              #48            // "[Ljava/lang/String;"
   #7 = Methodref          #11.#49        // com/sun/jna/win32/W32APITypeMapper.addToNativeConverter:(Ljava/lang/Class;Lcom/sun/jna/ToNativeConverter;)V
   #8 = Class              #50            // com/sun/jna/win32/W32APITypeMapper$2
   #9 = Methodref          #8.#45         // com/sun/jna/win32/W32APITypeMapper$2."<init>":(Lcom/sun/jna/win32/W32APITypeMapper;)V
  #10 = Class              #51            // java/lang/Boolean
  #11 = Class              #52            // com/sun/jna/win32/W32APITypeMapper
  #12 = Methodref          #11.#53        // com/sun/jna/win32/W32APITypeMapper."<init>":(Z)V
  #13 = Fieldref           #11.#54        // com/sun/jna/win32/W32APITypeMapper.UNICODE:Lcom/sun/jna/TypeMapper;
  #14 = Fieldref           #11.#55        // com/sun/jna/win32/W32APITypeMapper.ASCII:Lcom/sun/jna/TypeMapper;
  #15 = String             #56            // w32.ascii
  #16 = Methodref          #10.#57        // java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
  #17 = Fieldref           #11.#58        // com/sun/jna/win32/W32APITypeMapper.DEFAULT:Lcom/sun/jna/TypeMapper;
  #18 = Class              #59            // com/sun/jna/DefaultTypeMapper
  #19 = Utf8               InnerClasses
  #20 = Utf8               UNICODE
  #21 = Utf8               Lcom/sun/jna/TypeMapper;
  #22 = Utf8               ASCII
  #23 = Utf8               DEFAULT
  #24 = Utf8               <init>
  #25 = Utf8               (Z)V
  #26 = Utf8               Code
  #27 = Utf8               LineNumberTable
  #28 = Utf8               LocalVariableTable
  #29 = Utf8               stringConverter
  #30 = Utf8               Lcom/sun/jna/TypeConverter;
  #31 = Utf8               this
  #32 = Utf8               Lcom/sun/jna/win32/W32APITypeMapper;
  #33 = Utf8               unicode
  #34 = Utf8               Z
  #35 = Utf8               booleanConverter
  #36 = Utf8               StackMapTable
  #37 = Class              #52            // com/sun/jna/win32/W32APITypeMapper
  #38 = Utf8               <clinit>
  #39 = Utf8               ()V
  #40 = Class              #60            // com/sun/jna/TypeMapper
  #41 = Utf8               SourceFile
  #42 = Utf8               W32APITypeMapper.java
  #43 = NameAndType        #24:#39        // "<init>":()V
  #44 = Utf8               com/sun/jna/win32/W32APITypeMapper$1
  #45 = NameAndType        #24:#61        // "<init>":(Lcom/sun/jna/win32/W32APITypeMapper;)V
  #46 = Utf8               java/lang/String
  #47 = NameAndType        #62:#63        // addTypeConverter:(Ljava/lang/Class;Lcom/sun/jna/TypeConverter;)V
  #48 = Utf8               [Ljava/lang/String;
  #49 = NameAndType        #64:#65        // addToNativeConverter:(Ljava/lang/Class;Lcom/sun/jna/ToNativeConverter;)V
  #50 = Utf8               com/sun/jna/win32/W32APITypeMapper$2
  #51 = Utf8               java/lang/Boolean
  #52 = Utf8               com/sun/jna/win32/W32APITypeMapper
  #53 = NameAndType        #24:#25        // "<init>":(Z)V
  #54 = NameAndType        #20:#21        // UNICODE:Lcom/sun/jna/TypeMapper;
  #55 = NameAndType        #22:#21        // ASCII:Lcom/sun/jna/TypeMapper;
  #56 = Utf8               w32.ascii
  #57 = NameAndType        #66:#67        // getBoolean:(Ljava/lang/String;)Z
  #58 = NameAndType        #23:#21        // DEFAULT:Lcom/sun/jna/TypeMapper;
  #59 = Utf8               com/sun/jna/DefaultTypeMapper
  #60 = Utf8               com/sun/jna/TypeMapper
  #61 = Utf8               (Lcom/sun/jna/win32/W32APITypeMapper;)V
  #62 = Utf8               addTypeConverter
  #63 = Utf8               (Ljava/lang/Class;Lcom/sun/jna/TypeConverter;)V
  #64 = Utf8               addToNativeConverter
  #65 = Utf8               (Ljava/lang/Class;Lcom/sun/jna/ToNativeConverter;)V
  #66 = Utf8               getBoolean
  #67 = Utf8               (Ljava/lang/String;)Z
{
  public static final com.sun.jna.TypeMapper UNICODE;
    descriptor: Lcom/sun/jna/TypeMapper;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final com.sun.jna.TypeMapper ASCII;
    descriptor: Lcom/sun/jna/TypeMapper;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final com.sun.jna.TypeMapper DEFAULT;
    descriptor: Lcom/sun/jna/TypeMapper;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  protected com.sun.jna.win32.W32APITypeMapper(boolean);
    descriptor: (Z)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method com/sun/jna/DefaultTypeMapper."<init>":()V
         4: iload_1
         5: ifeq          31
         8: new           #2                  // class com/sun/jna/win32/W32APITypeMapper$1
        11: dup
        12: aload_0
        13: invokespecial #3                  // Method com/sun/jna/win32/W32APITypeMapper$1."<init>":(Lcom/sun/jna/win32/W32APITypeMapper;)V
        16: astore_2
        17: aload_0
        18: ldc           #4                  // class java/lang/String
        20: aload_2
        21: invokevirtual #5                  // Method addTypeConverter:(Ljava/lang/Class;Lcom/sun/jna/TypeConverter;)V
        24: aload_0
        25: ldc           #6                  // class "[Ljava/lang/String;"
        27: aload_2
        28: invokevirtual #7                  // Method addToNativeConverter:(Ljava/lang/Class;Lcom/sun/jna/ToNativeConverter;)V
        31: new           #8                  // class com/sun/jna/win32/W32APITypeMapper$2
        34: dup
        35: aload_0
        36: invokespecial #9                  // Method com/sun/jna/win32/W32APITypeMapper$2."<init>":(Lcom/sun/jna/win32/W32APITypeMapper;)V
        39: astore_2
        40: aload_0
        41: ldc           #10                 // class java/lang/Boolean
        43: aload_2
        44: invokevirtual #5                  // Method addTypeConverter:(Ljava/lang/Class;Lcom/sun/jna/TypeConverter;)V
        47: return
      LineNumberTable:
        line 50: 0
        line 51: 4
        line 52: 8
        line 73: 17
        line 74: 24
        line 76: 31
        line 91: 40
        line 92: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      14     2 stringConverter   Lcom/sun/jna/TypeConverter;
            0      48     0  this   Lcom/sun/jna/win32/W32APITypeMapper;
            0      48     1 unicode   Z
           40       8     2 booleanConverter   Lcom/sun/jna/TypeConverter;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class com/sun/jna/win32/W32APITypeMapper, int ]
          stack = []

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #11                 // class com/sun/jna/win32/W32APITypeMapper
         3: dup
         4: iconst_1
         5: invokespecial #12                 // Method "<init>":(Z)V
         8: putstatic     #13                 // Field UNICODE:Lcom/sun/jna/TypeMapper;
        11: new           #11                 // class com/sun/jna/win32/W32APITypeMapper
        14: dup
        15: iconst_0
        16: invokespecial #12                 // Method "<init>":(Z)V
        19: putstatic     #14                 // Field ASCII:Lcom/sun/jna/TypeMapper;
        22: ldc           #15                 // String w32.ascii
        24: invokestatic  #16                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
        27: ifeq          36
        30: getstatic     #14                 // Field ASCII:Lcom/sun/jna/TypeMapper;
        33: goto          39
        36: getstatic     #13                 // Field UNICODE:Lcom/sun/jna/TypeMapper;
        39: putstatic     #17                 // Field DEFAULT:Lcom/sun/jna/TypeMapper;
        42: return
      LineNumberTable:
        line 44: 0
        line 46: 11
        line 48: 22
      StackMapTable: number_of_entries = 2
        frame_type = 36 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class com/sun/jna/TypeMapper ]
}
SourceFile: "W32APITypeMapper.java"
InnerClasses:
  #8;                                     // class com/sun/jna/win32/W32APITypeMapper$2
  #2;                                     // class com/sun/jna/win32/W32APITypeMapper$1
