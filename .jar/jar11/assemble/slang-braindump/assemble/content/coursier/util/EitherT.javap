Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/util/EitherT.class
  Last modified May 29, 2022; size 11959 bytes
  SHA-256 checksum 54cabf41023871c15465706f9be40d0dabbaf9f987343bf95e51dfa6f9b2b10b
  Compiled from "EitherT.scala"
public final class coursier.util.EitherT<F extends java.lang.Object, L extends java.lang.Object, R extends java.lang.Object> extends java.lang.Object implements scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/util/EitherT
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 1, methods: 29, attributes: 7
Constant pool:
    #1 = Utf8               coursier/util/EitherT
    #2 = Class              #1            // coursier/util/EitherT
    #3 = Utf8               <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Product
    #7 = Class              #6            // scala/Product
    #8 = Utf8               java/io/Serializable
    #9 = Class              #8            // java/io/Serializable
   #10 = Utf8               EitherT.scala
   #11 = Utf8               Lscala/reflect/ScalaSignature;
   #12 = Utf8               bytes
   #13 = Utf8               \u0006\u0005\t\u0015e\u0001B\u0010!\u0005\u0016B\u0001\u0002\u0010\u0001\u0003\u0016\u0004%\t!\u0010\u0005\t+\u0002\u0011\t\u0012)A\u0005}!)a\u000b\u0001C\u0001/\")A\f\u0001C\u0001;\")a\u000e\u0001C\u0001_\")\u0001\u0010\u0001C\u0001s\"9\u0011q\u0001\u0001\u0005\u0002\u0005%\u0001bBA\u000e\u0001\u0011\u0005\u0011Q\u0004\u0005\n\u0003[\u0001\u0011\u0011!C\u0001\u0003_A\u0011\"a\u0013\u0001#\u0003%\t!!\u0014\t\u0013\u0005=\u0004!!A\u0005B\u0005E\u0004\"CAB\u0001\u0005\u0005I\u0011AAC\u0011%\ti\tAA\u0001\n\u0003\ty\tC\u0005\u0002\u0016\u0002\t\t\u0011\"\u0011\u0002\u0018\"I\u0011Q\u0015\u0001\u0002\u0002\u0013\u0005\u0011q\u0015\u0005\n\u0003c\u0003\u0011\u0011!C!\u0003gC\u0011\"a.\u0001\u0003\u0003%\t%!/\t\u0013\u0005m\u0006!!A\u0005B\u0005u\u0006\"CA`\u0001\u0005\u0005I\u0011IAa\u000f\u001d\t)\r\tE\u0001\u0003\u000f4aa\b\u0011\t\u0002\u0005%\u0007B\u0002,\u0016\t\u0003\t)\u000eC\u0004\u0002XV!\t!!7\t\u000f\u0005eX\u0003\"\u0001\u0002|\u001a1!1A\u000b\u0003\u0005\u000bAaAV\r\u0005\u0002\t%\u0001b\u0002B\u000b3\u0011\u0005!q\u0003\u0005\n\u0005+)\u0012\u0011!CA\u0005sA\u0011B!\u0016\u0016\u0003\u0003%\tIa\u0016\t\u0013\tmT#!A\u0005\n\tu$aB#ji\",\'\u000f\u0016\u0006\u0003C\t\nA!\u001e;jY*\t1%\u0001\u0005d_V\u00148/[3s\u0007\u0001)BA\n!Q\'N!\u0001aJ\u00171!\tA3&D\u0001*\u0015\u0005Q\u0013!B:dC2\f\u0017B\u0001\u0017*\u0005\u0019\te.\u001f*fMB\u0011\u0001FL\u0005\u0003_%\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u00022s9\u0011!g\u000e\b\u0003gYj\u0011\u0001\u000e\u0006\u0003k\u0011\na\u0001\u0010:p_Rt\u0014\"\u0001\u0016\n\u0005aJ\u0013a\u00029bG.\fw-Z\u0005\u0003um\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001O\u0015\u0002\u0007I,h.F\u0001?!\ry\u0004\t\u0014\u0007\u0001\t\u0015\t\u0005A1\u0001C\u0005\u00051UCA\"K#\t!u\t\u0005\u0002)\u000b&\u0011a)\u000b\u0002\b\u001d>$\b.\u001b8h!\tA\u0003*\u0003\u0002JS\t\u0019\u0011I\\=\u0005\u000b-\u0003%\u0019A\"\u0003\u0003}\u0003B!M\'P%&\u0011aj\u000f\u0002\u0007\u000b&$\b.\u001a:\u0011\u0005}\u0002F!B)\u0001\u0005\u0004\u0019%!\u0001\'\u0011\u0005}\u001aF!\u0002+\u0001\u0005\u0004\u0019%!\u0001*\u0002\tI,h\u000eI\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0005a[\u0006#B-\u00015>\u0013V\"\u0001\u0011\u0011\u0005}\u0002\u0005\"\u0002\u001f\u0004\u0001\u0004q\u0014aA7baV\u0011aL\u0019\u000b\u0003?&$\"\u0001\u00193\u0011\u000be\u0003!lT1\u0011\u0005}\u0012G!B2\u0005\u0005\u0004\u0019%!A*\t\u000b\u0015$\u00019\u00014\u0002\u00035\u00032!W4[\u0013\tA\u0007EA\u0003N_:\fG\rC\u0003k\t\u0001\u00071.A\u0001g!\u0011ACNU1\n\u00055L#!\u0003$v]\u000e$\u0018n\u001c82\u0003\u001d1G.\u0019;NCB,\"\u0001\u001d;\u0015\u0005E4HC\u0001:v!\u0015I\u0006AW(t!\tyD\u000fB\u0003d\u000b\t\u00071\tC\u0003f\u000b\u0001\u000fa\rC\u0003k\u000b\u0001\u0007q\u000f\u0005\u0003)YJ\u0013\u0018a\u00027fMRl\u0015\r]\u000b\u0003uz$2a_A\u0002)\ra\u0018\u0011\u0001\t\u00063\u0002QVP\u0015\t\u0003\u007fy$Qa \u0004C\u0002\r\u0013\u0011!\u0014\u0005\u0006K\u001a\u0001\u001dA\u001a\u0005\u0007U\u001a\u0001\r!!\u0002\u0011\t!bw*`\u0001\fY\u00164GO\u00127bi6\u000b\u0007/\u0006\u0003\u0002\f\u0005MA\u0003BA\u0007\u0003/!B!a\u0004\u0002\u0016A1\u0011\f\u0001.\u0002\u0012I\u00032aPA\n\t\u0015\u0019wA1\u0001D\u0011\u0015)w\u0001q\u0001g\u0011\u0019Qw\u00011\u0001\u0002\u001aA)\u0001\u0006\\(\u0002\u0010\u00051qN]#mg\u0016$B!a\b\u0002$Q\u0019\u0001,!\t\t\u000b\u0015D\u00019\u00014\t\u0011\u0005\u0015\u0002\u0002\"a\u0001\u0003O\tQa\u001c;iKJ\u0004B\u0001KA\u00151&\u0019\u00111F\u0015\u0003\u0011q\u0012\u0017P\\1nKz\nAaY8qsVA\u0011\u0011GA\u001c\u0003\u007f\t\u0019\u0005\u0006\u0003\u00024\u0005\u0015\u0003\u0003C-\u0001\u0003k\ti$!\u0011\u0011\u0007}\n9\u0004\u0002\u0004B\u0013\t\u0007\u0011\u0011H\u000b\u0004\u0007\u0006mBAB&\u00028\t\u00071\tE\u0002@\u0003\u007f!Q!U\u0005C\u0002\r\u00032aPA\"\t\u0015!\u0016B1\u0001D\u0011!a\u0014\u0002%AA\u0002\u0005\u001d\u0003#B \u00028\u0005%\u0003CB\u0019N\u0003{\t\t%\u0001\bd_BLH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0011\u0005=\u0013QMA6\u0003[*\"!!\u0015+\u0007y\n\u0019f\u000b\u0002\u0002VA!\u0011qKA1\u001b\t\tIF\u0003\u0003\u0002\\\u0005u\u0013!C;oG\",7m[3e\u0015\r\ty&K\u0001\u000bC:tw\u000e^1uS>t\u0017\u0002BA2\u00033\u0012\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\t\u0019\t%B1\u0001\u0002hU\u00191)!\u001b\u0005\r-\u000b)G1\u0001D\t\u0015\t&B1\u0001D\t\u0015!&B1\u0001D\u00035\u0001(o\u001c3vGR\u0004&/\u001a4jqV\u0011\u00111\u000f\t\u0005\u0003k\ny(\u0004\u0002\u0002x)!\u0011\u0011PA>\u0003\u0011a\u0017M\\4\u000b\u0005\u0005u\u0014\u0001\u00026bm\u0006LA!!!\u0002x\t11\u000b\u001e:j]\u001e\fA\u0002\u001d:pIV\u001cG/\u0011:jif,\"!a\"\u0011\u0007!\nI)C\u0002\u0002\f&\u00121!\u00138u\u00039\u0001(o\u001c3vGR,E.Z7f]R$2aRAI\u0011%\t\u0019*DA\u0001\u0002\u0004\t9)A\u0002yIE\nq\u0002\u001d:pIV\u001cG/\u0013;fe\u0006$xN]\u000b\u0003\u00033\u0003R!a\'\u0002\"\u001ek!!!(\u000b\u0007\u0005}\u0015&\u0001\u0006d_2dWm\u0019;j_:LA!a)\u0002\u001e\nA\u0011\n^3sCR|\'/\u0001\u0005dC:,\u0015/^1m)\u0011\tI+a,\u0011\u0007!\nY+C\u0002\u0002.&\u0012qAQ8pY\u0016\fg\u000e\u0003\u0005\u0002\u0014>\t\t\u00111\u0001H\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\t\u0005M\u0014Q\u0017\u0005\n\u0003\'\u0003\u0012\u0011!a\u0001\u0003\u000f\u000b\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u0003\u0003\u000f\u000b\u0001\u0002^8TiJLgn\u001a\u000b\u0003\u0003g\na!Z9vC2\u001cH\u0003BAU\u0003\u0007D\u0001\"a%\u0014\u0003\u0003\u0005\raR\u0001\b\u000b&$\b.\u001a:U!\tIVc\u0005\u0003\u0016O\u0005-\u0007\u0003BAg\u0003\'l!!a4\u000b\t\u0005E\u00171P\u0001\u0003S>L1AOAh)\t\t9-A\u0003q_&tG/\u0006\u0005\u0002\\\u0006\r\u00181^Ax)\u0011\ti.!>\u0015\t\u0005}\u0017\u0011\u001f\t\t3\u0002\t\t/!;\u0002nB\u0019q(a9\u0005\r\u0005;\"\u0019AAs+\r\u0019\u0015q\u001d\u0003\u0007\u0017\u0006\r(\u0019A\"\u0011\u0007}\nY\u000fB\u0003R/\t\u00071\tE\u0002@\u0003_$Q\u0001V\fC\u0002\rCa!Z\fA\u0004\u0005M\b\u0003B-h\u0003CDq!a>\u0018\u0001\u0004\ti/A\u0001s\u0003)1\'o\\7FSRDWM]\u000b\u0005\u0003{\u0014\u0019$\u0006\u0002\u0002\u0000B)!\u0011A\r\u000325\tQC\u0001\u0006Ge>lW)\u001b;iKJ,BAa\u0002\u0003\u0010M\u0011\u0011d\n\u000b\u0003\u0005\u0017\u0001RA!\u0001\u001a\u0005\u001b\u00012a\u0010B\b\t\u0019\t\u0015D1\u0001\u0003\u0012U\u00191Ia\u0005\u0005\r-\u0013yA1\u0001D\u0003\u0015\t\u0007\u000f\u001d7z+\u0019\u0011IB!\t\u0003&Q!!1\u0004B\u0016)\u0011\u0011iBa\n\u0011\u0011e\u0003!Q\u0002B\u0010\u0005G\u00012a\u0010B\u0011\t\u0015\t6D1\u0001D!\ry$Q\u0005\u0003\u0006)n\u0011\ra\u0011\u0005\u0007Kn\u0001\u001dA!\u000b\u0011\te;\'Q\u0002\u0005\b\u0005[Y\u0002\u0019\u0001B\u0018\u0003\u0019)\u0017\u000e\u001e5feB1\u0011\'\u0014B\u0010\u0005G\u00012a\u0010B\u001a\t\u0019\t\u0005D1\u0001\u00036U\u00191Ia\u000e\u0005\r-\u0013\u0019D1\u0001D+!\u0011YD!\u0011\u0003J\t5C\u0003\u0002B\u001f\u0005\u001f\u0002\u0002\"\u0017\u0001\u0003@\t\u001d#1\n\t\u0004\u007f\t\u0005CAB!\u001d\u0005\u0004\u0011\u0019%F\u0002D\u0005\u000b\"aa\u0013B!\u0005\u0004\u0019\u0005cA \u0003J\u0011)\u0011\u000b\bb\u0001\u0007B\u0019qH!\u0014\u0005\u000bQc\"\u0019A\"\t\rqb\u0002\u0019\u0001B)!\u0015y$\u0011\tB*!\u0019\tTJa\u0012\u0003L\u00059QO\\1qa2LX\u0003\u0003B-\u0005G\u0012iG!\u001d\u0015\t\tm#1\u000f\t\u0006Q\tu#\u0011M\u0005\u0004\u0005?J#AB(qi&|g\u000eE\u0003@\u0005G\u0012I\u0007\u0002\u0004B;\t\u0007!QM\u000b\u0004\u0007\n\u001dDAB&\u0003d\t\u00071\t\u0005\u00042\u001b\n-$q\u000e\t\u0004\u007f\t5D!B)\u001e\u0005\u0004\u0019\u0005cA \u0003r\u0011)A+\bb\u0001\u0007\"I!QO\u000f\u0002\u0002\u0003\u0007!qO\u0001\u0004q\u0012\u0002\u0004\u0003C-\u0001\u0005s\u0012YGa\u001c\u0011\u0007}\u0012\u0019\'\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0003\u0000A!\u0011Q\u000fBA\u0013\u0011\u0011\u0019)a\u001e\u0003\r=\u0013\'.Z2u\u0001
   #14 = Utf8               coursier/util/EitherT$FromEither
   #15 = Class              #14           // coursier/util/EitherT$FromEither
   #16 = Utf8               FromEither
   #17 = Utf8               coursier/util/Monad$AllOps
   #18 = Class              #17           // coursier/util/Monad$AllOps
   #19 = Utf8               coursier/util/Monad
   #20 = Class              #19           // coursier/util/Monad
   #21 = Utf8               AllOps
   #22 = Utf8               coursier/util/Monad$ops$
   #23 = Class              #22           // coursier/util/Monad$ops$
   #24 = Utf8
   #25 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #26 = Class              #25           // java/lang/invoke/MethodHandles$Lookup
   #27 = Utf8               java/lang/invoke/MethodHandles
   #28 = Class              #27           // java/lang/invoke/MethodHandles
   #29 = Utf8               Lookup
   #30 = Utf8               scala/util/Either$LeftProjection
   #31 = Class              #30           // scala/util/Either$LeftProjection
   #32 = Utf8               scala/util/Either
   #33 = Class              #32           // scala/util/Either
   #34 = Utf8               LeftProjection
   #35 = Utf8               run
   #36 = Utf8               Ljava/lang/Object;
   #37 = Utf8               TF;
   #38 = Utf8               unapply
   #39 = Utf8               (Lcoursier/util/EitherT;)Lscala/Option;
   #40 = Utf8               <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>(Lcoursier/util/EitherT<TF;TL;TR;>;)Lscala/Option<TF;>;
   #41 = Utf8               x$0
   #42 = Utf8               coursier/util/EitherT$
   #43 = Class              #42           // coursier/util/EitherT$
   #44 = Utf8               MODULE$
   #45 = Utf8               Lcoursier/util/EitherT$;
   #46 = NameAndType        #44:#45       // MODULE$:Lcoursier/util/EitherT$;
   #47 = Fieldref           #43.#46       // coursier/util/EitherT$.MODULE$:Lcoursier/util/EitherT$;
   #48 = NameAndType        #38:#39       // unapply:(Lcoursier/util/EitherT;)Lscala/Option;
   #49 = Methodref          #43.#48       // coursier/util/EitherT$.unapply:(Lcoursier/util/EitherT;)Lscala/Option;
   #50 = Utf8               apply
   #51 = Utf8               (Ljava/lang/Object;)Lcoursier/util/EitherT;
   #52 = Utf8               <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>(TF;)Lcoursier/util/EitherT<TF;TL;TR;>;
   #53 = NameAndType        #50:#51       // apply:(Ljava/lang/Object;)Lcoursier/util/EitherT;
   #54 = Methodref          #43.#53       // coursier/util/EitherT$.apply:(Ljava/lang/Object;)Lcoursier/util/EitherT;
   #55 = Utf8               fromEither
   #56 = Utf8               ()Lcoursier/util/EitherT$FromEither;
   #57 = Utf8               <F:Ljava/lang/Object;>()Lcoursier/util/EitherT$FromEither<TF;>;
   #58 = NameAndType        #55:#56       // fromEither:()Lcoursier/util/EitherT$FromEither;
   #59 = Methodref          #43.#58       // coursier/util/EitherT$.fromEither:()Lcoursier/util/EitherT$FromEither;
   #60 = Utf8               point
   #61 = Utf8               (Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #62 = Utf8               <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>(TR;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TL;TR;>;
   #63 = Utf8               r
   #64 = Utf8               M
   #65 = NameAndType        #60:#61       // point:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #66 = Methodref          #43.#65       // coursier/util/EitherT$.point:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #67 = Utf8               productElementNames
   #68 = Utf8               ()Lscala/collection/Iterator;
   #69 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #70 = Utf8               productElementNames$
   #71 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #72 = NameAndType        #70:#71       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #73 = InterfaceMethodref #7.#72        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #74 = Utf8               this
   #75 = Utf8               Lcoursier/util/EitherT;
   #76 = Utf8               ()Ljava/lang/Object;
   #77 = Utf8               ()TF;
   #78 = NameAndType        #35:#36       // run:Ljava/lang/Object;
   #79 = Fieldref           #2.#78        // coursier/util/EitherT.run:Ljava/lang/Object;
   #80 = Utf8               map
   #81 = Utf8               (Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #82 = Utf8               <S:Ljava/lang/Object;>(Lscala/Function1<TR;TS;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TL;TS;>;
   #83 = Utf8               f
   #84 = Utf8               Lcoursier/util/Monad$ops$;
   #85 = NameAndType        #44:#84       // MODULE$:Lcoursier/util/Monad$ops$;
   #86 = Fieldref           #23.#85       // coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
   #87 = NameAndType        #35:#76       // run:()Ljava/lang/Object;
   #88 = Methodref          #2.#87        // coursier/util/EitherT.run:()Ljava/lang/Object;
   #89 = Utf8               toAllMonadOps
   #90 = Utf8               (Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
   #91 = NameAndType        #89:#90       // toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
   #92 = Methodref          #23.#91       // coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
   #93 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #94 = MethodType         #93           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #95 = Utf8               $anonfun$map$1
   #96 = Utf8               (Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
   #97 = NameAndType        #95:#96       // $anonfun$map$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
   #98 = Methodref          #2.#97        // coursier/util/EitherT.$anonfun$map$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
   #99 = MethodHandle       6:#98         // REF_invokeStatic coursier/util/EitherT.$anonfun$map$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
  #100 = Utf8               (Lscala/util/Either;)Lscala/util/Either;
  #101 = MethodType         #100          //  (Lscala/util/Either;)Lscala/util/Either;
  #102 = Integer            5
  #103 = Integer            1
  #104 = Utf8               java/lang/invoke/LambdaMetafactory
  #105 = Class              #104          // java/lang/invoke/LambdaMetafactory
  #106 = Utf8               altMetafactory
  #107 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #108 = NameAndType        #106:#107     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #109 = Methodref          #105.#108     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #110 = MethodHandle       6:#109        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #111 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #112 = NameAndType        #50:#111      // apply:(Lscala/Function1;)Lscala/Function1;
  #113 = InvokeDynamic      #0:#112       // #0:apply:(Lscala/Function1;)Lscala/Function1;
  #114 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #115 = NameAndType        #80:#114      // map:(Lscala/Function1;)Ljava/lang/Object;
  #116 = InterfaceMethodref #18.#115      // coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #117 = Utf8               <init>
  #118 = Utf8               (Ljava/lang/Object;)V
  #119 = NameAndType        #117:#118     // "<init>":(Ljava/lang/Object;)V
  #120 = Methodref          #2.#119       // coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
  #121 = Utf8               Lscala/Function1;
  #122 = Utf8               Lcoursier/util/Monad;
  #123 = Utf8               flatMap
  #124 = Utf8               <S:Ljava/lang/Object;>(Lscala/Function1<TR;Lcoursier/util/EitherT<TF;TL;TS;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TL;TS;>;
  #125 = Utf8               $anonfun$flatMap$1
  #126 = Utf8               (Lcoursier/util/Monad;Lscala/Function1;Lscala/util/Either;)Ljava/lang/Object;
  #127 = NameAndType        #125:#126     // $anonfun$flatMap$1:(Lcoursier/util/Monad;Lscala/Function1;Lscala/util/Either;)Ljava/lang/Object;
  #128 = Methodref          #2.#127       // coursier/util/EitherT.$anonfun$flatMap$1:(Lcoursier/util/Monad;Lscala/Function1;Lscala/util/Either;)Ljava/lang/Object;
  #129 = MethodHandle       6:#128        // REF_invokeStatic coursier/util/EitherT.$anonfun$flatMap$1:(Lcoursier/util/Monad;Lscala/Function1;Lscala/util/Either;)Ljava/lang/Object;
  #130 = Utf8               (Lscala/util/Either;)Ljava/lang/Object;
  #131 = MethodType         #130          //  (Lscala/util/Either;)Ljava/lang/Object;
  #132 = Utf8               (Lcoursier/util/Monad;Lscala/Function1;)Lscala/Function1;
  #133 = NameAndType        #50:#132      // apply:(Lcoursier/util/Monad;Lscala/Function1;)Lscala/Function1;
  #134 = InvokeDynamic      #1:#133       // #1:apply:(Lcoursier/util/Monad;Lscala/Function1;)Lscala/Function1;
  #135 = NameAndType        #123:#114     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #136 = InterfaceMethodref #18.#135      // coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #137 = Utf8               leftMap
  #138 = Utf8               <M:Ljava/lang/Object;>(Lscala/Function1<TL;TM;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TM;TR;>;
  #139 = Utf8               $anonfun$leftMap$1
  #140 = NameAndType        #139:#96      // $anonfun$leftMap$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
  #141 = Methodref          #2.#140       // coursier/util/EitherT.$anonfun$leftMap$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
  #142 = MethodHandle       6:#141        // REF_invokeStatic coursier/util/EitherT.$anonfun$leftMap$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
  #143 = InvokeDynamic      #2:#112       // #2:apply:(Lscala/Function1;)Lscala/Function1;
  #144 = Utf8               leftFlatMap
  #145 = Utf8               <S:Ljava/lang/Object;>(Lscala/Function1<TL;Lcoursier/util/EitherT<TF;TS;TR;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TS;TR;>;
  #146 = Utf8               $anonfun$leftFlatMap$1
  #147 = Utf8               (Lscala/Function1;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
  #148 = NameAndType        #146:#147     // $anonfun$leftFlatMap$1:(Lscala/Function1;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
  #149 = Methodref          #2.#148       // coursier/util/EitherT.$anonfun$leftFlatMap$1:(Lscala/Function1;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
  #150 = MethodHandle       6:#149        // REF_invokeStatic coursier/util/EitherT.$anonfun$leftFlatMap$1:(Lscala/Function1;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
  #151 = Utf8               (Lscala/Function1;Lcoursier/util/Monad;)Lscala/Function1;
  #152 = NameAndType        #50:#151      // apply:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Function1;
  #153 = InvokeDynamic      #3:#152       // #3:apply:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Function1;
  #154 = Utf8               orElse
  #155 = Utf8               (Lscala/Function0;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #156 = Utf8               (Lscala/Function0<Lcoursier/util/EitherT<TF;TL;TR;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TL;TR;>;
  #157 = Utf8               other
  #158 = Utf8               $anonfun$orElse$1
  #159 = Utf8               (Lscala/Function0;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
  #160 = NameAndType        #158:#159     // $anonfun$orElse$1:(Lscala/Function0;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
  #161 = Methodref          #2.#160       // coursier/util/EitherT.$anonfun$orElse$1:(Lscala/Function0;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
  #162 = MethodHandle       6:#161        // REF_invokeStatic coursier/util/EitherT.$anonfun$orElse$1:(Lscala/Function0;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
  #163 = Utf8               (Lscala/Function0;Lcoursier/util/Monad;)Lscala/Function1;
  #164 = NameAndType        #50:#163      // apply:(Lscala/Function0;Lcoursier/util/Monad;)Lscala/Function1;
  #165 = InvokeDynamic      #4:#164       // #4:apply:(Lscala/Function0;Lcoursier/util/Monad;)Lscala/Function1;
  #166 = Utf8               Lscala/Function0;
  #167 = Utf8               copy
  #168 = Utf8               copy$default$1
  #169 = Utf8               <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>()TF;
  #170 = Utf8               productPrefix
  #171 = Utf8               ()Ljava/lang/String;
  #172 = Utf8               EitherT
  #173 = String             #172          // EitherT
  #174 = Utf8               productArity
  #175 = Utf8               ()I
  #176 = Utf8               productElement
  #177 = Utf8               (I)Ljava/lang/Object;
  #178 = Utf8               x$1
  #179 = Utf8               scala/runtime/Statics
  #180 = Class              #179          // scala/runtime/Statics
  #181 = Utf8               ioobe
  #182 = NameAndType        #181:#177     // ioobe:(I)Ljava/lang/Object;
  #183 = Methodref          #180.#182     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #184 = Utf8               I
  #185 = Utf8               productIterator
  #186 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #187 = Utf8               scala/runtime/ScalaRunTime$
  #188 = Class              #187          // scala/runtime/ScalaRunTime$
  #189 = Utf8               Lscala/runtime/ScalaRunTime$;
  #190 = NameAndType        #44:#189      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #191 = Fieldref           #188.#190     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #192 = Utf8               typedProductIterator
  #193 = NameAndType        #192:#71      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #194 = Methodref          #188.#193     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #195 = Utf8               canEqual
  #196 = Utf8               (Ljava/lang/Object;)Z
  #197 = Utf8               productElementName
  #198 = Utf8               (I)Ljava/lang/String;
  #199 = String             #35           // run
  #200 = Utf8               java/lang/String
  #201 = Class              #200          // java/lang/String
  #202 = Utf8               hashCode
  #203 = Utf8               _hashCode
  #204 = Utf8               (Lscala/Product;)I
  #205 = NameAndType        #203:#204     // _hashCode:(Lscala/Product;)I
  #206 = Methodref          #188.#205     // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
  #207 = Utf8               toString
  #208 = Utf8               _toString
  #209 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #210 = NameAndType        #208:#209     // _toString:(Lscala/Product;)Ljava/lang/String;
  #211 = Methodref          #188.#210     // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #212 = Utf8               equals
  #213 = Utf8               scala/runtime/BoxesRunTime
  #214 = Class              #213          // scala/runtime/BoxesRunTime
  #215 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #216 = NameAndType        #212:#215     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #217 = Methodref          #214.#216     // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #218 = Utf8               f$1
  #219 = Utf8               (Lscala/Function1;)Lscala/util/Either;
  #220 = NameAndType        #80:#219      // map:(Lscala/Function1;)Lscala/util/Either;
  #221 = Methodref          #33.#220      // scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
  #222 = Utf8               Lscala/util/Either;
  #223 = Utf8               M$1
  #224 = Utf8               f$2
  #225 = Utf8               x0$1
  #226 = Utf8               scala/util/Left
  #227 = Class              #226          // scala/util/Left
  #228 = Utf8               value
  #229 = NameAndType        #228:#76      // value:()Ljava/lang/Object;
  #230 = Methodref          #227.#229     // scala/util/Left.value:()Ljava/lang/Object;
  #231 = Utf8               scala/package$
  #232 = Class              #231          // scala/package$
  #233 = Utf8               Lscala/package$;
  #234 = NameAndType        #44:#233      // MODULE$:Lscala/package$;
  #235 = Fieldref           #232.#234     // scala/package$.MODULE$:Lscala/package$;
  #236 = Utf8               Left
  #237 = Utf8               ()Lscala/util/Left$;
  #238 = NameAndType        #236:#237     // Left:()Lscala/util/Left$;
  #239 = Methodref          #232.#238     // scala/package$.Left:()Lscala/util/Left$;
  #240 = Utf8               scala/util/Left$
  #241 = Class              #240          // scala/util/Left$
  #242 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #243 = NameAndType        #50:#242      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #244 = Methodref          #241.#243     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #245 = NameAndType        #60:#93       // point:(Ljava/lang/Object;)Ljava/lang/Object;
  #246 = InterfaceMethodref #20.#245      // coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
  #247 = Utf8               scala/util/Right
  #248 = Class              #247          // scala/util/Right
  #249 = Methodref          #248.#229     // scala/util/Right.value:()Ljava/lang/Object;
  #250 = Utf8               scala/Function1
  #251 = Class              #250          // scala/Function1
  #252 = NameAndType        #50:#93       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #253 = InterfaceMethodref #251.#252     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #254 = Utf8               scala/MatchError
  #255 = Class              #254          // scala/MatchError
  #256 = Methodref          #255.#119     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #257 = Utf8               l
  #258 = Utf8               f$3
  #259 = Utf8               x$2
  #260 = Utf8               left
  #261 = Utf8               ()Lscala/util/Either$LeftProjection;
  #262 = NameAndType        #260:#261     // left:()Lscala/util/Either$LeftProjection;
  #263 = Methodref          #33.#262      // scala/util/Either.left:()Lscala/util/Either$LeftProjection;
  #264 = Methodref          #31.#220      // scala/util/Either$LeftProjection.map:(Lscala/Function1;)Lscala/util/Either;
  #265 = Utf8               f$4
  #266 = Utf8               M$2
  #267 = Utf8               Right
  #268 = Utf8               ()Lscala/util/Right$;
  #269 = NameAndType        #267:#268     // Right:()Lscala/util/Right$;
  #270 = Methodref          #232.#269     // scala/package$.Right:()Lscala/util/Right$;
  #271 = Utf8               scala/util/Right$
  #272 = Class              #271          // scala/util/Right$
  #273 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #274 = NameAndType        #50:#273      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #275 = Methodref          #272.#274     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #276 = Utf8               other$1
  #277 = Utf8               M$3
  #278 = Utf8               scala/Function0
  #279 = Class              #278          // scala/Function0
  #280 = NameAndType        #50:#76       // apply:()Ljava/lang/Object;
  #281 = InterfaceMethodref #279.#280     // scala/Function0.apply:()Ljava/lang/Object;
  #282 = Utf8               (TF;)V
  #283 = Utf8               ()V
  #284 = NameAndType        #117:#283     // "<init>":()V
  #285 = Methodref          #5.#284       // java/lang/Object."<init>":()V
  #286 = Utf8               $init$
  #287 = Utf8               (Lscala/Product;)V
  #288 = NameAndType        #286:#287     // $init$:(Lscala/Product;)V
  #289 = InterfaceMethodref #7.#288       // scala/Product.$init$:(Lscala/Product;)V
  #290 = Utf8               $deserializeLambda$
  #291 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #292 = Utf8               scala/runtime/LambdaDeserialize
  #293 = Class              #292          // scala/runtime/LambdaDeserialize
  #294 = Utf8               bootstrap
  #295 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #296 = NameAndType        #294:#295     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #297 = Methodref          #293.#296     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #298 = MethodHandle       6:#297        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #299 = Utf8               lambdaDeserialize
  #300 = NameAndType        #299:#291     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #301 = InvokeDynamic      #5:#300       // #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #302 = Utf8               Signature
  #303 = Utf8               Code
  #304 = Utf8               MethodParameters
  #305 = Utf8               LineNumberTable
  #306 = Utf8               LocalVariableTable
  #307 = Utf8               StackMapTable
  #308 = Utf8               InnerClasses
  #309 = Utf8               SourceFile
  #310 = Utf8               RuntimeVisibleAnnotations
  #311 = Utf8               BootstrapMethods
  #312 = Utf8               ScalaInlineInfo
  #313 = Utf8               ScalaSig
{
  private final F run;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #37                          // TF;

  public static <F extends java.lang.Object, L extends java.lang.Object, R extends java.lang.Object> scala.Option<F> unapply(coursier.util.EitherT<F, L, R>);
    descriptor: (Lcoursier/util/EitherT;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #47                 // Field coursier/util/EitherT$.MODULE$:Lcoursier/util/EitherT$;
         3: aload_0
         4: invokevirtual #49                 // Method coursier/util/EitherT$.unapply:(Lcoursier/util/EitherT;)Lscala/Option;
         7: areturn
    Signature: #40                          // <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>(Lcoursier/util/EitherT<TF;TL;TR;>;)Lscala/Option<TF;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static <F extends java.lang.Object, L extends java.lang.Object, R extends java.lang.Object> coursier.util.EitherT<F, L, R> apply(F);
    descriptor: (Ljava/lang/Object;)Lcoursier/util/EitherT;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #47                 // Field coursier/util/EitherT$.MODULE$:Lcoursier/util/EitherT$;
         3: aload_0
         4: invokevirtual #54                 // Method coursier/util/EitherT$.apply:(Ljava/lang/Object;)Lcoursier/util/EitherT;
         7: areturn
    Signature: #52                          // <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>(TF;)Lcoursier/util/EitherT<TF;TL;TR;>;
    MethodParameters:
      Name                           Flags
      run                            final

  public static <F extends java.lang.Object> coursier.util.EitherT$FromEither<F> fromEither();
    descriptor: ()Lcoursier/util/EitherT$FromEither;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #47                 // Field coursier/util/EitherT$.MODULE$:Lcoursier/util/EitherT$;
         3: invokevirtual #59                 // Method coursier/util/EitherT$.fromEither:()Lcoursier/util/EitherT$FromEither;
         6: areturn
    Signature: #57                          // <F:Ljava/lang/Object;>()Lcoursier/util/EitherT$FromEither<TF;>;

  public static <F extends java.lang.Object, L extends java.lang.Object, R extends java.lang.Object> coursier.util.EitherT<F, L, R> point(R, coursier.util.Monad<F>);
    descriptor: (Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #47                 // Field coursier/util/EitherT$.MODULE$:Lcoursier/util/EitherT$;
         3: aload_0
         4: aload_1
         5: invokevirtual #66                 // Method coursier/util/EitherT$.point:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
         8: areturn
    Signature: #62                          // <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>(TR;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TL;TR;>;
    MethodParameters:
      Name                           Flags
      r                              final
      M                              final

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #73                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/EitherT;
    Signature: #69                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public F run();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #79                 // Field run:Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/EitherT;
    Signature: #77                          // ()TF;

  public <S extends java.lang.Object> coursier.util.EitherT<F, L, S> map(scala.Function1<R, S>, coursier.util.Monad<F>);
    descriptor: (Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #2                  // class coursier/util/EitherT
         3: dup
         4: getstatic     #86                 // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         7: aload_0
         8: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        11: aload_2
        12: invokevirtual #92                 // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        15: aload_1
        16: invokedynamic #113,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
        21: invokeinterface #116,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        26: invokespecial #120                // Method "<init>":(Ljava/lang/Object;)V
        29: areturn
      LineNumberTable:
        line 8: 0
        line 9: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lcoursier/util/EitherT;
            0      30     1     f   Lscala/Function1;
            0      30     2     M   Lcoursier/util/Monad;
    Signature: #82                          // <S:Ljava/lang/Object;>(Lscala/Function1<TR;TS;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TL;TS;>;
    MethodParameters:
      Name                           Flags
      f                              final
      M                              final

  public <S extends java.lang.Object> coursier.util.EitherT<F, L, S> flatMap(scala.Function1<R, coursier.util.EitherT<F, L, S>>, coursier.util.Monad<F>);
    descriptor: (Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #2                  // class coursier/util/EitherT
         3: dup
         4: getstatic     #86                 // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         7: aload_0
         8: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        11: aload_2
        12: invokevirtual #92                 // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        15: aload_2
        16: aload_1
        17: invokedynamic #134,  0            // InvokeDynamic #1:apply:(Lcoursier/util/Monad;Lscala/Function1;)Lscala/Function1;
        22: invokeinterface #136,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        27: invokespecial #120                // Method "<init>":(Ljava/lang/Object;)V
        30: areturn
      LineNumberTable:
        line 13: 0
        line 14: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lcoursier/util/EitherT;
            0      31     1     f   Lscala/Function1;
            0      31     2     M   Lcoursier/util/Monad;
    Signature: #124                         // <S:Ljava/lang/Object;>(Lscala/Function1<TR;Lcoursier/util/EitherT<TF;TL;TS;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TL;TS;>;
    MethodParameters:
      Name                           Flags
      f                              final
      M                              final

  public <M extends java.lang.Object> coursier.util.EitherT<F, M, R> leftMap(scala.Function1<L, M>, coursier.util.Monad<F>);
    descriptor: (Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #2                  // class coursier/util/EitherT
         3: dup
         4: getstatic     #86                 // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         7: aload_0
         8: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        11: aload_2
        12: invokevirtual #92                 // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        15: aload_1
        16: invokedynamic #143,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
        21: invokeinterface #116,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        26: invokespecial #120                // Method "<init>":(Ljava/lang/Object;)V
        29: areturn
      LineNumberTable:
        line 23: 0
        line 24: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lcoursier/util/EitherT;
            0      30     1     f   Lscala/Function1;
            0      30     2     M   Lcoursier/util/Monad;
    Signature: #138                         // <M:Ljava/lang/Object;>(Lscala/Function1<TL;TM;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TM;TR;>;
    MethodParameters:
      Name                           Flags
      f                              final
      M                              final

  public <S extends java.lang.Object> coursier.util.EitherT<F, S, R> leftFlatMap(scala.Function1<L, coursier.util.EitherT<F, S, R>>, coursier.util.Monad<F>);
    descriptor: (Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #2                  // class coursier/util/EitherT
         3: dup
         4: getstatic     #86                 // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         7: aload_0
         8: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        11: aload_2
        12: invokevirtual #92                 // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        15: aload_1
        16: aload_2
        17: invokedynamic #153,  0            // InvokeDynamic #3:apply:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Function1;
        22: invokeinterface #136,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        27: invokespecial #120                // Method "<init>":(Ljava/lang/Object;)V
        30: areturn
      LineNumberTable:
        line 28: 0
        line 29: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lcoursier/util/EitherT;
            0      31     1     f   Lscala/Function1;
            0      31     2     M   Lcoursier/util/Monad;
    Signature: #145                         // <S:Ljava/lang/Object;>(Lscala/Function1<TL;Lcoursier/util/EitherT<TF;TS;TR;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TS;TR;>;
    MethodParameters:
      Name                           Flags
      f                              final
      M                              final

  public coursier.util.EitherT<F, L, R> orElse(scala.Function0<coursier.util.EitherT<F, L, R>>, coursier.util.Monad<F>);
    descriptor: (Lscala/Function0;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #2                  // class coursier/util/EitherT
         3: dup
         4: getstatic     #86                 // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         7: aload_0
         8: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        11: aload_2
        12: invokevirtual #92                 // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        15: aload_1
        16: aload_2
        17: invokedynamic #165,  0            // InvokeDynamic #4:apply:(Lscala/Function0;Lcoursier/util/Monad;)Lscala/Function1;
        22: invokeinterface #136,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        27: invokespecial #120                // Method "<init>":(Ljava/lang/Object;)V
        30: areturn
      LineNumberTable:
        line 38: 0
        line 39: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lcoursier/util/EitherT;
            0      31     1 other   Lscala/Function0;
            0      31     2     M   Lcoursier/util/Monad;
    Signature: #156                         // (Lscala/Function0<Lcoursier/util/EitherT<TF;TL;TR;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;TL;TR;>;
    MethodParameters:
      Name                           Flags
      other                          final
      M                              final

  public <F extends java.lang.Object, L extends java.lang.Object, R extends java.lang.Object> coursier.util.EitherT<F, L, R> copy(F);
    descriptor: (Ljava/lang/Object;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class coursier/util/EitherT
         3: dup
         4: aload_1
         5: invokespecial #120                // Method "<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/util/EitherT;
            0       9     1   run   Ljava/lang/Object;
    Signature: #52                          // <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>(TF;)Lcoursier/util/EitherT<TF;TL;TR;>;
    MethodParameters:
      Name                           Flags
      run                            final

  public <F extends java.lang.Object, L extends java.lang.Object, R extends java.lang.Object> F copy$default$1();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #88                 // Method run:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/EitherT;
    Signature: #169                         // <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>()TF;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #173                // String EitherT
         2: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/util/EitherT;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/util/EitherT;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        24: goto          34
        27: iload_1
        28: invokestatic  #183                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        31: goto          34
        34: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lcoursier/util/EitherT;
            0      35     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #191                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #194                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/util/EitherT;
    Signature: #186                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class coursier/util/EitherT
         4: ireturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/EitherT;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 25
            }
        20: ldc           #199                // String run
        22: goto          35
        25: iload_1
        26: invokestatic  #183                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        29: checkcast     #201                // class java/lang/String
        32: goto          35
        35: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lcoursier/util/EitherT;
            0      36     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #191                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #206                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/util/EitherT;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #191                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #211                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/util/EitherT;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     60
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class coursier/util/EitherT
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          64
        31: aload_1
        32: checkcast     #2                  // class coursier/util/EitherT
        35: astore        4
        37: aload_0
        38: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        41: aload         4
        43: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        46: invokestatic  #217                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        49: ifeq          56
        52: iconst_1
        53: goto          57
        56: iconst_0
        57: ifeq          64
        60: iconst_1
        61: goto          65
        64: iconst_0
        65: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/util/EitherT, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ class coursier/util/EitherT ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/util/EitherT, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lcoursier/util/EitherT;
            0      66     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.util.Either $anonfun$map$1(scala.Function1, scala.util.Either);
    descriptor: (Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #221                // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
         5: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   f$1   Lscala/Function1;
            0       6     1   x$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      f$1                            final
      x$1                            final

  public static final java.lang.Object $anonfun$flatMap$1(coursier.util.Monad, scala.Function1, scala.util.Either);
    descriptor: (Lcoursier/util/Monad;Lscala/Function1;Lscala/util/Either;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=9, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #227                // class scala/util/Left
         8: ifeq          46
        11: aload         4
        13: checkcast     #227                // class scala/util/Left
        16: astore        5
        18: aload         5
        20: invokevirtual #230                // Method scala/util/Left.value:()Ljava/lang/Object;
        23: astore        6
        25: aload_0
        26: getstatic     #235                // Field scala/package$.MODULE$:Lscala/package$;
        29: invokevirtual #239                // Method scala/package$.Left:()Lscala/util/Left$;
        32: aload         6
        34: invokevirtual #244                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        37: invokeinterface #246,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        42: astore_3
        43: goto          102
        46: goto          49
        49: aload         4
        51: instanceof    #248                // class scala/util/Right
        54: ifeq          89
        57: aload         4
        59: checkcast     #248                // class scala/util/Right
        62: astore        7
        64: aload         7
        66: invokevirtual #249                // Method scala/util/Right.value:()Ljava/lang/Object;
        69: astore        8
        71: aload_1
        72: aload         8
        74: invokeinterface #253,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        79: checkcast     #2                  // class coursier/util/EitherT
        82: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        85: astore_3
        86: goto          102
        89: goto          92
        92: new           #255                // class scala/MatchError
        95: dup
        96: aload         4
        98: invokespecial #256                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       101: athrow
       102: aload_3
       103: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 46
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 39 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/util/Monad, class scala/Function1, class scala/util/Either, class java/lang/Object, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 14: 0
        line 15: 3
        line 16: 25
        line 15: 46
        line 17: 49
        line 18: 71
        line 17: 89
        line 14: 92
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      21     6     l   Ljava/lang/Object;
           71      18     8     r   Ljava/lang/Object;
            0     104     0   M$1   Lcoursier/util/Monad;
            0     104     1   f$2   Lscala/Function1;
            0     104     2  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      M$1                            final
      f$2                            final
      x0$1                           final

  public static final scala.util.Either $anonfun$leftMap$1(scala.Function1, scala.util.Either);
    descriptor: (Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #263                // Method scala/util/Either.left:()Lscala/util/Either$LeftProjection;
         4: aload_0
         5: invokevirtual #264                // Method scala/util/Either$LeftProjection.map:(Lscala/Function1;)Lscala/util/Either;
         8: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   f$3   Lscala/Function1;
            0       9     1   x$2   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      f$3                            final
      x$2                            final

  public static final java.lang.Object $anonfun$leftFlatMap$1(scala.Function1, coursier.util.Monad, scala.util.Either);
    descriptor: (Lscala/Function1;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=9, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #227                // class scala/util/Left
         8: ifeq          43
        11: aload         4
        13: checkcast     #227                // class scala/util/Left
        16: astore        5
        18: aload         5
        20: invokevirtual #230                // Method scala/util/Left.value:()Ljava/lang/Object;
        23: astore        6
        25: aload_0
        26: aload         6
        28: invokeinterface #253,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        33: checkcast     #2                  // class coursier/util/EitherT
        36: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        39: astore_3
        40: goto          102
        43: goto          46
        46: aload         4
        48: instanceof    #248                // class scala/util/Right
        51: ifeq          89
        54: aload         4
        56: checkcast     #248                // class scala/util/Right
        59: astore        7
        61: aload         7
        63: invokevirtual #249                // Method scala/util/Right.value:()Ljava/lang/Object;
        66: astore        8
        68: aload_1
        69: getstatic     #235                // Field scala/package$.MODULE$:Lscala/package$;
        72: invokevirtual #270                // Method scala/package$.Right:()Lscala/util/Right$;
        75: aload         8
        77: invokevirtual #275                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        80: invokeinterface #246,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        85: astore_3
        86: goto          102
        89: goto          92
        92: new           #255                // class scala/MatchError
        95: dup
        96: aload         4
        98: invokespecial #256                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       101: athrow
       102: aload_3
       103: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 43
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 42 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/Function1, class coursier/util/Monad, class scala/util/Either, class java/lang/Object, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 29: 0
        line 30: 3
        line 31: 25
        line 30: 43
        line 32: 46
        line 33: 68
        line 32: 89
        line 29: 92
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      18     6     l   Ljava/lang/Object;
           68      21     8     r   Ljava/lang/Object;
            0     104     0   f$4   Lscala/Function1;
            0     104     1   M$2   Lcoursier/util/Monad;
            0     104     2  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      f$4                            final
      M$2                            final
      x0$1                           final

  public static final java.lang.Object $anonfun$orElse$1(scala.Function0, coursier.util.Monad, scala.util.Either);
    descriptor: (Lscala/Function0;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #227                // class scala/util/Left
         8: ifeq          27
        11: aload_0
        12: invokeinterface #281,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        17: checkcast     #2                  // class coursier/util/EitherT
        20: invokevirtual #88                 // Method run:()Ljava/lang/Object;
        23: astore_3
        24: goto          86
        27: goto          30
        30: aload         4
        32: instanceof    #248                // class scala/util/Right
        35: ifeq          73
        38: aload         4
        40: checkcast     #248                // class scala/util/Right
        43: astore        5
        45: aload         5
        47: invokevirtual #249                // Method scala/util/Right.value:()Ljava/lang/Object;
        50: astore        6
        52: aload_1
        53: getstatic     #235                // Field scala/package$.MODULE$:Lscala/package$;
        56: invokevirtual #270                // Method scala/package$.Right:()Lscala/util/Right$;
        59: aload         6
        61: invokevirtual #275                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        64: invokeinterface #246,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        69: astore_3
        70: goto          86
        73: goto          76
        76: new           #255                // class scala/MatchError
        79: dup
        80: aload         4
        82: invokespecial #256                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        85: athrow
        86: aload_3
        87: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 42 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/Function0, class coursier/util/Monad, class scala/util/Either, class java/lang/Object, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 39: 0
        line 40: 3
        line 41: 11
        line 40: 27
        line 42: 30
        line 43: 52
        line 42: 73
        line 39: 76
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           52      21     6     r   Ljava/lang/Object;
            0      88     0 other$1   Lscala/Function0;
            0      88     1   M$3   Lcoursier/util/Monad;
            0      88     2  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      other$1                        final
      M$3                            final
      x0$1                           final

  public coursier.util.EitherT(F);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #79                 // Field run:Ljava/lang/Object;
         5: aload_0
         6: invokespecial #285                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #289                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: return
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/util/EitherT;
            0      14     1   run   Ljava/lang/Object;
    Signature: #282                         // (TF;)V
    MethodParameters:
      Name                           Flags
      run                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #301,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #15 of #2;     // FromEither=class coursier/util/EitherT$FromEither of class coursier/util/EitherT
  public static #21= #18 of #20;          // AllOps=class coursier/util/Monad$AllOps of class coursier/util/Monad
  public static #24= #23 of #20;          // =class coursier/util/Monad$ops$ of class coursier/util/Monad
  public static final #29= #26 of #28;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #34= #31 of #33;    // LeftProjection=class scala/util/Either$LeftProjection of class scala/util/Either
Signature: #3                           // <F:Ljava/lang/Object;L:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
SourceFile: "EitherT.scala"
RuntimeVisibleAnnotations:
  0: #11(#12=s#13)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t\u0015e\u0001B\u0010!\u0005\u0016B\u0001\u0002\u0010\u0001\u0003\u0016\u0004%\t!\u0010\u0005\t+\u0002\u0011\t\u0012)A\u0005}!)a\u000b\u0001C\u0001/\")A\f\u0001C\u0001;\")a\u000e\u0001C\u0001_\")\u0001\u0010\u0001C\u0001s\"9\u0011q\u0001\u0001\u0005\u0002\u0005%\u0001bBA\u000e\u0001\u0011\u0005\u0011Q\u0004\u0005\n\u0003[\u0001\u0011\u0011!C\u0001\u0003_A\u0011\"a\u0013\u0001#\u0003%\t!!\u0014\t\u0013\u0005=\u0004!!A\u0005B\u0005E\u0004\"CAB\u0001\u0005\u0005I\u0011AAC\u0011%\ti\tAA\u0001\n\u0003\ty\tC\u0005\u0002\u0016\u0002\t\t\u0011\"\u0011\u0002\u0018\"I\u0011Q\u0015\u0001\u0002\u0002\u0013\u0005\u0011q\u0015\u0005\n\u0003c\u0003\u0011\u0011!C!\u0003gC\u0011\"a.\u0001\u0003\u0003%\t%!/\t\u0013\u0005m\u0006!!A\u0005B\u0005u\u0006\"CA`\u0001\u0005\u0005I\u0011IAa\u000f\u001d\t)\r\tE\u0001\u0003\u000f4aa\b\u0011\t\u0002\u0005%\u0007B\u0002,\u0016\t\u0003\t)\u000eC\u0004\u0002XV!\t!!7\t\u000f\u0005eX\u0003\"\u0001\u0002|\u001a1!1A\u000b\u0003\u0005\u000bAaAV\r\u0005\u0002\t%\u0001b\u0002B\u000b3\u0011\u0005!q\u0003\u0005\n\u0005+)\u0012\u0011!CA\u0005sA\u0011B!\u0016\u0016\u0003\u0003%\tIa\u0016\t\u0013\tmT#!A\u0005\n\tu$aB#ji\",\'\u000f\u0016\u0006\u0003C\t\nA!\u001e;jY*\t1%\u0001\u0005d_V\u00148/[3s\u0007\u0001)BA\n!Q\'N!\u0001aJ\u00171!\tA3&D\u0001*\u0015\u0005Q\u0013!B:dC2\f\u0017B\u0001\u0017*\u0005\u0019\te.\u001f*fMB\u0011\u0001FL\u0005\u0003_%\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u00022s9\u0011!g\u000e\b\u0003gYj\u0011\u0001\u000e\u0006\u0003k\u0011\na\u0001\u0010:p_Rt\u0014\"\u0001\u0016\n\u0005aJ\u0013a\u00029bG.\fw-Z\u0005\u0003um\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001O\u0015\u0002\u0007I,h.F\u0001?!\ry\u0004\t\u0014\u0007\u0001\t\u0015\t\u0005A1\u0001C\u0005\u00051UCA\"K#\t!u\t\u0005\u0002)\u000b&\u0011a)\u000b\u0002\b\u001d>$\b.\u001b8h!\tA\u0003*\u0003\u0002JS\t\u0019\u0011I\\=\u0005\u000b-\u0003%\u0019A\"\u0003\u0003}\u0003B!M\'P%&\u0011aj\u000f\u0002\u0007\u000b&$\b.\u001a:\u0011\u0005}\u0002F!B)\u0001\u0005\u0004\u0019%!\u0001\'\u0011\u0005}\u001aF!\u0002+\u0001\u0005\u0004\u0019%!\u0001*\u0002\tI,h\u000eI\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0005a[\u0006#B-\u00015>\u0013V\"\u0001\u0011\u0011\u0005}\u0002\u0005\"\u0002\u001f\u0004\u0001\u0004q\u0014aA7baV\u0011aL\u0019\u000b\u0003?&$\"\u0001\u00193\u0011\u000be\u0003!lT1\u0011\u0005}\u0012G!B2\u0005\u0005\u0004\u0019%!A*\t\u000b\u0015$\u00019\u00014\u0002\u00035\u00032!W4[\u0013\tA\u0007EA\u0003N_:\fG\rC\u0003k\t\u0001\u00071.A\u0001g!\u0011ACNU1\n\u00055L#!\u0003$v]\u000e$\u0018n\u001c82\u0003\u001d1G.\u0019;NCB,\"\u0001\u001d;\u0015\u0005E4HC\u0001:v!\u0015I\u0006AW(t!\tyD\u000fB\u0003d\u000b\t\u00071\tC\u0003f\u000b\u0001\u000fa\rC\u0003k\u000b\u0001\u0007q\u000f\u0005\u0003)YJ\u0013\u0018a\u00027fMRl\u0015\r]\u000b\u0003uz$2a_A\u0002)\ra\u0018\u0011\u0001\t\u00063\u0002QVP\u0015\t\u0003\u007fy$Qa \u0004C\u0002\r\u0013\u0011!\u0014\u0005\u0006K\u001a\u0001\u001dA\u001a\u0005\u0007U\u001a\u0001\r!!\u0002\u0011\t!bw*`\u0001\fY\u00164GO\u00127bi6\u000b\u0007/\u0006\u0003\u0002\f\u0005MA\u0003BA\u0007\u0003/!B!a\u0004\u0002\u0016A1\u0011\f\u0001.\u0002\u0012I\u00032aPA\n\t\u0015\u0019wA1\u0001D\u0011\u0015)w\u0001q\u0001g\u0011\u0019Qw\u00011\u0001\u0002\u001aA)\u0001\u0006\\(\u0002\u0010\u00051qN]#mg\u0016$B!a\b\u0002$Q\u0019\u0001,!\t\t\u000b\u0015D\u00019\u00014\t\u0011\u0005\u0015\u0002\u0002\"a\u0001\u0003O\tQa\u001c;iKJ\u0004B\u0001KA\u00151&\u0019\u00111F\u0015\u0003\u0011q\u0012\u0017P\\1nKz\nAaY8qsVA\u0011\u0011GA\u001c\u0003\u007f\t\u0019\u0005\u0006\u0003\u00024\u0005\u0015\u0003\u0003C-\u0001\u0003k\ti$!\u0011\u0011\u0007}\n9\u0004\u0002\u0004B\u0013\t\u0007\u0011\u0011H\u000b\u0004\u0007\u0006mBAB&\u00028\t\u00071\tE\u0002@\u0003\u007f!Q!U\u0005C\u0002\r\u00032aPA\"\t\u0015!\u0016B1\u0001D\u0011!a\u0014\u0002%AA\u0002\u0005\u001d\u0003#B \u00028\u0005%\u0003CB\u0019N\u0003{\t\t%\u0001\bd_BLH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0011\u0005=\u0013QMA6\u0003[*\"!!\u0015+\u0007y\n\u0019f\u000b\u0002\u0002VA!\u0011qKA1\u001b\t\tIF\u0003\u0003\u0002\\\u0005u\u0013!C;oG\",7m[3e\u0015\r\ty&K\u0001\u000bC:tw\u000e^1uS>t\u0017\u0002BA2\u00033\u0012\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\t\u0019\t%B1\u0001\u0002hU\u00191)!\u001b\u0005\r-\u000b)G1\u0001D\t\u0015\t&B1\u0001D\t\u0015!&B1\u0001D\u00035\u0001(o\u001c3vGR\u0004&/\u001a4jqV\u0011\u00111\u000f\t\u0005\u0003k\ny(\u0004\u0002\u0002x)!\u0011\u0011PA>\u0003\u0011a\u0017M\\4\u000b\u0005\u0005u\u0014\u0001\u00026bm\u0006LA!!!\u0002x\t11\u000b\u001e:j]\u001e\fA\u0002\u001d:pIV\u001cG/\u0011:jif,\"!a\"\u0011\u0007!\nI)C\u0002\u0002\f&\u00121!\u00138u\u00039\u0001(o\u001c3vGR,E.Z7f]R$2aRAI\u0011%\t\u0019*DA\u0001\u0002\u0004\t9)A\u0002yIE\nq\u0002\u001d:pIV\u001cG/\u0013;fe\u0006$xN]\u000b\u0003\u00033\u0003R!a\'\u0002\"\u001ek!!!(\u000b\u0007\u0005}\u0015&\u0001\u0006d_2dWm\u0019;j_:LA!a)\u0002\u001e\nA\u0011\n^3sCR|\'/\u0001\u0005dC:,\u0015/^1m)\u0011\tI+a,\u0011\u0007!\nY+C\u0002\u0002.&\u0012qAQ8pY\u0016\fg\u000e\u0003\u0005\u0002\u0014>\t\t\u00111\u0001H\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\t\u0005M\u0014Q\u0017\u0005\n\u0003\'\u0003\u0012\u0011!a\u0001\u0003\u000f\u000b\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u0003\u0003\u000f\u000b\u0001\u0002^8TiJLgn\u001a\u000b\u0003\u0003g\na!Z9vC2\u001cH\u0003BAU\u0003\u0007D\u0001\"a%\u0014\u0003\u0003\u0005\raR\u0001\b\u000b&$\b.\u001a:U!\tIVc\u0005\u0003\u0016O\u0005-\u0007\u0003BAg\u0003\'l!!a4\u000b\t\u0005E\u00171P\u0001\u0003S>L1AOAh)\t\t9-A\u0003q_&tG/\u0006\u0005\u0002\\\u0006\r\u00181^Ax)\u0011\ti.!>\u0015\t\u0005}\u0017\u0011\u001f\t\t3\u0002\t\t/!;\u0002nB\u0019q(a9\u0005\r\u0005;\"\u0019AAs+\r\u0019\u0015q\u001d\u0003\u0007\u0017\u0006\r(\u0019A\"\u0011\u0007}\nY\u000fB\u0003R/\t\u00071\tE\u0002@\u0003_$Q\u0001V\fC\u0002\rCa!Z\fA\u0004\u0005M\b\u0003B-h\u0003CDq!a>\u0018\u0001\u0004\ti/A\u0001s\u0003)1\'o\\7FSRDWM]\u000b\u0005\u0003{\u0014\u0019$\u0006\u0002\u0002\u0000B)!\u0011A\r\u000325\tQC\u0001\u0006Ge>lW)\u001b;iKJ,BAa\u0002\u0003\u0010M\u0011\u0011d\n\u000b\u0003\u0005\u0017\u0001RA!\u0001\u001a\u0005\u001b\u00012a\u0010B\b\t\u0019\t\u0015D1\u0001\u0003\u0012U\u00191Ia\u0005\u0005\r-\u0013yA1\u0001D\u0003\u0015\t\u0007\u000f\u001d7z+\u0019\u0011IB!\t\u0003&Q!!1\u0004B\u0016)\u0011\u0011iBa\n\u0011\u0011e\u0003!Q\u0002B\u0010\u0005G\u00012a\u0010B\u0011\t\u0015\t6D1\u0001D!\ry$Q\u0005\u0003\u0006)n\u0011\ra\u0011\u0005\u0007Kn\u0001\u001dA!\u000b\u0011\te;\'Q\u0002\u0005\b\u0005[Y\u0002\u0019\u0001B\u0018\u0003\u0019)\u0017\u000e\u001e5feB1\u0011\'\u0014B\u0010\u0005G\u00012a\u0010B\u001a\t\u0019\t\u0005D1\u0001\u00036U\u00191Ia\u000e\u0005\r-\u0013\u0019D1\u0001D+!\u0011YD!\u0011\u0003J\t5C\u0003\u0002B\u001f\u0005\u001f\u0002\u0002\"\u0017\u0001\u0003@\t\u001d#1\n\t\u0004\u007f\t\u0005CAB!\u001d\u0005\u0004\u0011\u0019%F\u0002D\u0005\u000b\"aa\u0013B!\u0005\u0004\u0019\u0005cA \u0003J\u0011)\u0011\u000b\bb\u0001\u0007B\u0019qH!\u0014\u0005\u000bQc\"\u0019A\"\t\rqb\u0002\u0019\u0001B)!\u0015y$\u0011\tB*!\u0019\tTJa\u0012\u0003L\u00059QO\\1qa2LX\u0003\u0003B-\u0005G\u0012iG!\u001d\u0015\t\tm#1\u000f\t\u0006Q\tu#\u0011M\u0005\u0004\u0005?J#AB(qi&|g\u000eE\u0003@\u0005G\u0012I\u0007\u0002\u0004B;\t\u0007!QM\u000b\u0004\u0007\n\u001dDAB&\u0003d\t\u00071\t\u0005\u00042\u001b\n-$q\u000e\t\u0004\u007f\t5D!B)\u001e\u0005\u0004\u0019\u0005cA \u0003r\u0011)A+\bb\u0001\u0007\"I!QO\u000f\u0002\u0002\u0003\u0007!qO\u0001\u0004q\u0012\u0002\u0004\u0003C-\u0001\u0005s\u0012YGa\u001c\u0011\u0007}\u0012\u0019\'\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0003\u0000A!\u0011Q\u000fBA\u0013\u0011\u0011\u0019)a\u001e\u0003\r=\u0013\'.Z2u\u0001"
    )
BootstrapMethods:
  0: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #99 REF_invokeStatic coursier/util/EitherT.$anonfun$map$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
      #101 (Lscala/util/Either;)Lscala/util/Either;
      #102 5
      #103 1
      #101 (Lscala/util/Either;)Lscala/util/Either;
  1: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #129 REF_invokeStatic coursier/util/EitherT.$anonfun$flatMap$1:(Lcoursier/util/Monad;Lscala/Function1;Lscala/util/Either;)Ljava/lang/Object;
      #131 (Lscala/util/Either;)Ljava/lang/Object;
      #102 5
      #103 1
      #131 (Lscala/util/Either;)Ljava/lang/Object;
  2: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #142 REF_invokeStatic coursier/util/EitherT.$anonfun$leftMap$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
      #101 (Lscala/util/Either;)Lscala/util/Either;
      #102 5
      #103 1
      #101 (Lscala/util/Either;)Lscala/util/Either;
  3: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #150 REF_invokeStatic coursier/util/EitherT.$anonfun$leftFlatMap$1:(Lscala/Function1;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
      #131 (Lscala/util/Either;)Ljava/lang/Object;
      #102 5
      #103 1
      #131 (Lscala/util/Either;)Ljava/lang/Object;
  4: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #162 REF_invokeStatic coursier/util/EitherT.$anonfun$orElse$1:(Lscala/Function0;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
      #131 (Lscala/util/Either;)Ljava/lang/Object;
      #102 5
      #103 1
      #131 (Lscala/util/Either;)Ljava/lang/Object;
  5: #298 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #129 REF_invokeStatic coursier/util/EitherT.$anonfun$flatMap$1:(Lcoursier/util/Monad;Lscala/Function1;Lscala/util/Either;)Ljava/lang/Object;
      #150 REF_invokeStatic coursier/util/EitherT.$anonfun$leftFlatMap$1:(Lscala/Function1;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
      #142 REF_invokeStatic coursier/util/EitherT.$anonfun$leftMap$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
      #99 REF_invokeStatic coursier/util/EitherT.$anonfun$map$1:(Lscala/Function1;Lscala/util/Either;)Lscala/util/Either;
      #162 REF_invokeStatic coursier/util/EitherT.$anonfun$orElse$1:(Lscala/Function0;Lcoursier/util/Monad;Lscala/util/Either;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x7C (unknown attribute)
   01 01 00 18 00 7D 00 7E 01 00 92 00 93 01 00 8B
   00 60 01 00 5F 00 60 01 00 9E 00 9F 01 00 75 00
   76 01 00 C3 00 C4 01 00 A7 00 33 01 00 A8 00 4C
   01 00 D4 00 C4 01 00 7B 00 51 01 00 CA 00 AF 01
   00 90 00 51 01 00 89 00 51 01 00 50 00 51 01 00
   9A 00 9B 01 00 AE 00 AF 01 00 B0 00 B1 01 00 C5
   00 C6 01 00 43 00 44 01 00 B9 00 44 01 00 AA 00
   AB 01 00 23 00 4C 01 00 CF 00 AB 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
