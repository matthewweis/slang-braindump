Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions.class
  Last modified May 29, 2022; size 2926 bytes
  SHA-256 checksum b0a5308a171976d5df114192bfde335c42aaaa6e008b0f2db556baf21d3c9adb
  Compiled from "DontBumpRootDependencies.scala"
public final class coursier.params.rule.DontBumpRootDependencies$CantForceRootDependencyVersions extends coursier.error.ResolutionError$UnsatisfiableRule
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions
  super_class: #4                         // coursier/error/ResolutionError$UnsatisfiableRule
  interfaces: 0, fields: 0, methods: 3, attributes: 4
Constant pool:
    #1 = Utf8               coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions
    #2 = Class              #1            // coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions
    #3 = Utf8               coursier/error/ResolutionError$UnsatisfiableRule
    #4 = Class              #3            // coursier/error/ResolutionError$UnsatisfiableRule
    #5 = Utf8               DontBumpRootDependencies.scala
    #6 = Utf8               coursier/error/ResolutionError
    #7 = Class              #6            // coursier/error/ResolutionError
    #8 = Utf8               UnsatisfiableRule
    #9 = Utf8               coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies
   #10 = Class              #9            // coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies
   #11 = Utf8               coursier/params/rule/DontBumpRootDependencies
   #12 = Class              #11           // coursier/params/rule/DontBumpRootDependencies
   #13 = Utf8               BumpedRootDependencies
   #14 = Utf8               CantForceRootDependencyVersions
   #15 = Utf8               coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions$$anonfun$$lessinit$greater$2
   #16 = Class              #15           // coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions$$anonfun$$lessinit$greater$2
   #17 = Utf8               scala/math/Ordering$String$
   #18 = Class              #17           // scala/math/Ordering$String$
   #19 = Utf8               scala/math/Ordering
   #20 = Class              #19           // scala/math/Ordering
   #21 = Utf8
   #22 = Utf8               rule
   #23 = Utf8               ()Lcoursier/params/rule/DontBumpRootDependencies;
   #24 = Utf8               ()Lcoursier/params/rule/Rule;
   #25 = NameAndType        #22:#24       // rule:()Lcoursier/params/rule/Rule;
   #26 = Methodref          #4.#25        // coursier/error/ResolutionError$UnsatisfiableRule.rule:()Lcoursier/params/rule/Rule;
   #27 = Utf8               this
   #28 = Utf8               Lcoursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions;
   #29 = NameAndType        #22:#23       // rule:()Lcoursier/params/rule/DontBumpRootDependencies;
   #30 = Methodref          #2.#29        // coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions.rule:()Lcoursier/params/rule/DontBumpRootDependencies;
   #31 = Utf8               <init>
   #32 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Map;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;Lcoursier/params/rule/DontBumpRootDependencies;)V
   #33 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Map<Lcoursier/core/Module;Ljava/lang/String;>;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;Lcoursier/params/rule/DontBumpRootDependencies;)V
   #34 = Utf8               resolution
   #35 = Utf8               cantBump
   #36 = Utf8               conflict
   #37 = Utf8               java/lang/StringBuilder
   #38 = Class              #37           // java/lang/StringBuilder
   #39 = Integer            31
   #40 = Utf8               (I)V
   #41 = NameAndType        #31:#40       // "<init>":(I)V
   #42 = Methodref          #38.#41       // java/lang/StringBuilder."<init>":(I)V
   #43 = Utf8               Can\'t force version of modules
   #44 = String             #43           // Can\'t force version of modules
   #45 = Utf8               append
   #46 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #47 = NameAndType        #45:#46       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #48 = Methodref          #38.#47       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #49 = Utf8               scala/collection/immutable/Map
   #50 = Class              #49           // scala/collection/immutable/Map
   #51 = Utf8               toVector
   #52 = Utf8               ()Lscala/collection/immutable/Vector;
   #53 = NameAndType        #51:#52       // toVector:()Lscala/collection/immutable/Vector;
   #54 = InterfaceMethodref #50.#53       // scala/collection/immutable/Map.toVector:()Lscala/collection/immutable/Vector;
   #55 = Utf8               ()V
   #56 = NameAndType        #31:#55       // "<init>":()V
   #57 = Methodref          #16.#56       // coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions$$anonfun$$lessinit$greater$2."<init>":()V
   #58 = Utf8               scala/collection/immutable/Vector
   #59 = Class              #58           // scala/collection/immutable/Vector
   #60 = Utf8               map
   #61 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #62 = NameAndType        #60:#61       // map:(Lscala/Function1;)Ljava/lang/Object;
   #63 = Methodref          #59.#62       // scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
   #64 = Utf8               scala/collection/immutable/StrictOptimizedSeqOps
   #65 = Class              #64           // scala/collection/immutable/StrictOptimizedSeqOps
   #66 = Utf8               MODULE$
   #67 = Utf8               Lscala/math/Ordering$String$;
   #68 = NameAndType        #66:#67       // MODULE$:Lscala/math/Ordering$String$;
   #69 = Fieldref           #18.#68       // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
   #70 = Utf8               sorted
   #71 = Utf8               (Lscala/math/Ordering;)Ljava/lang/Object;
   #72 = NameAndType        #70:#71       // sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
   #73 = InterfaceMethodref #65.#72       // scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
   #74 = Utf8               scala/collection/IterableOnceOps
   #75 = Class              #74           // scala/collection/IterableOnceOps
   #76 = Utf8               ,
   #77 = String             #76           // ,
   #78 = Utf8               mkString
   #79 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #80 = NameAndType        #78:#79       // mkString:(Ljava/lang/String;)Ljava/lang/String;
   #81 = InterfaceMethodref #75.#80       // scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
   #82 = Utf8               toString
   #83 = Utf8               ()Ljava/lang/String;
   #84 = NameAndType        #82:#83       // toString:()Ljava/lang/String;
   #85 = Methodref          #38.#84       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #86 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/Rule;Lcoursier/error/conflict/UnsatisfiedRule;Ljava/lang/String;)V
   #87 = NameAndType        #31:#86       // "<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/Rule;Lcoursier/error/conflict/UnsatisfiedRule;Ljava/lang/String;)V
   #88 = Methodref          #4.#87        // coursier/error/ResolutionError$UnsatisfiableRule."<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/Rule;Lcoursier/error/conflict/UnsatisfiedRule;Ljava/lang/String;)V
   #89 = Utf8               scala/Predef$
   #90 = Class              #89           // scala/Predef$
   #91 = Utf8               Lscala/Predef$;
   #92 = NameAndType        #66:#91       // MODULE$:Lscala/Predef$;
   #93 = Fieldref           #90.#92       // scala/Predef$.MODULE$:Lscala/Predef$;
   #94 = Utf8               nonEmpty
   #95 = Utf8               ()Z
   #96 = NameAndType        #94:#95       // nonEmpty:()Z
   #97 = InterfaceMethodref #50.#96       // scala/collection/immutable/Map.nonEmpty:()Z
   #98 = Utf8               assert
   #99 = Utf8               (Z)V
  #100 = NameAndType        #98:#99       // assert:(Z)V
  #101 = Methodref          #90.#100      // scala/Predef$.assert:(Z)V
  #102 = Utf8               Lcoursier/core/Resolution;
  #103 = Utf8               Lscala/collection/immutable/Map;
  #104 = Utf8               Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;
  #105 = Utf8               Lcoursier/params/rule/DontBumpRootDependencies;
  #106 = Utf8               Code
  #107 = Utf8               LineNumberTable
  #108 = Utf8               LocalVariableTable
  #109 = Utf8               Signature
  #110 = Utf8               MethodParameters
  #111 = Utf8               InnerClasses
  #112 = Utf8               SourceFile
  #113 = Utf8               ScalaInlineInfo
  #114 = Utf8               Scala
{
  public coursier.params.rule.DontBumpRootDependencies rule();
    descriptor: ()Lcoursier/params/rule/DontBumpRootDependencies;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #26                 // Method coursier/error/ResolutionError$UnsatisfiableRule.rule:()Lcoursier/params/rule/Rule;
         4: checkcast     #12                 // class coursier/params/rule/DontBumpRootDependencies
         7: areturn
      LineNumberTable:
        line 89: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions;

  public coursier.params.rule.Rule rule();
    descriptor: ()Lcoursier/params/rule/Rule;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #30                 // Method rule:()Lcoursier/params/rule/DontBumpRootDependencies;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions;

  public coursier.params.rule.DontBumpRootDependencies$CantForceRootDependencyVersions(coursier.core.Resolution, scala.collection.immutable.Map<coursier.core.Module, java.lang.String>, coursier.params.rule.DontBumpRootDependencies$BumpedRootDependencies, coursier.params.rule.DontBumpRootDependencies);
    descriptor: (Lcoursier/core/Resolution;Lscala/collection/immutable/Map;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;Lcoursier/params/rule/DontBumpRootDependencies;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload         4
         4: aload_3
         5: new           #38                 // class java/lang/StringBuilder
         8: dup
         9: ldc           #39                 // int 31
        11: invokespecial #42                 // Method java/lang/StringBuilder."<init>":(I)V
        14: ldc           #44                 // String Can\'t force version of modules
        16: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: aload_2
        20: invokeinterface #54,  1           // InterfaceMethod scala/collection/immutable/Map.toVector:()Lscala/collection/immutable/Vector;
        25: new           #16                 // class coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions$$anonfun$$lessinit$greater$2
        28: dup
        29: invokespecial #57                 // Method coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions$$anonfun$$lessinit$greater$2."<init>":()V
        32: invokevirtual #63                 // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        35: checkcast     #65                 // class scala/collection/immutable/StrictOptimizedSeqOps
        38: getstatic     #69                 // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        41: invokeinterface #73,  2           // InterfaceMethod scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
        46: checkcast     #75                 // class scala/collection/IterableOnceOps
        49: ldc           #77                 // String ,
        51: invokeinterface #81,  2           // InterfaceMethod scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
        56: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        59: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        62: invokespecial #88                 // Method coursier/error/ResolutionError$UnsatisfiableRule."<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/Rule;Lcoursier/error/conflict/UnsatisfiedRule;Ljava/lang/String;)V
        65: getstatic     #93                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        68: aload_2
        69: invokeinterface #97,  1           // InterfaceMethod scala/collection/immutable/Map.nonEmpty:()Z
        74: invokevirtual #101                // Method scala/Predef$.assert:(Z)V
        77: return
      LineNumberTable:
        line 90: 0
        line 91: 1
        line 92: 2
        line 93: 4
        line 95: 5
        line 97: 65
        line 85: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      78     0  this   Lcoursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions;
            0      78     1 resolution   Lcoursier/core/Resolution;
            0      78     2 cantBump   Lscala/collection/immutable/Map;
            0      78     3 conflict   Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;
            0      78     4  rule   Lcoursier/params/rule/DontBumpRootDependencies;
    Signature: #33                          // (Lcoursier/core/Resolution;Lscala/collection/immutable/Map<Lcoursier/core/Module;Ljava/lang/String;>;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;Lcoursier/params/rule/DontBumpRootDependencies;)V
    MethodParameters:
      Name                           Flags
      resolution                     final
      cantBump                       final
      conflict                       final
      rule                           final
}
InnerClasses:
  public static abstract #8= #4 of #7;    // UnsatisfiableRule=class coursier/error/ResolutionError$UnsatisfiableRule of class coursier/error/ResolutionError
  public static final #13= #10 of #12;    // BumpedRootDependencies=class coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies of class coursier/params/rule/DontBumpRootDependencies
  public static final #14= #2 of #12;     // CantForceRootDependencyVersions=class coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions of class coursier/params/rule/DontBumpRootDependencies
  public final #16;                       // class coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions$$anonfun$$lessinit$greater$2
  public static #21= #18 of #20;          // =class scala/math/Ordering$String$ of class scala/math/Ordering
SourceFile: "DontBumpRootDependencies.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 1F 00 20 01 00 16 00 17 01 00 16
   00 18 01
  Scala: length = 0x0 (unknown attribute)

