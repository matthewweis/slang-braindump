Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/graph/DependencyTree$Node.class
  Last modified May 29, 2022; size 9768 bytes
  SHA-256 checksum 80f25472d5bb673dc401559e2b625457c6481948fc6c635235aeed657dceee2c
  Compiled from "DependencyTree.scala"
public class coursier.graph.DependencyTree$Node extends coursier.graph.DependencyTree implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // coursier/graph/DependencyTree$Node
  super_class: #4                         // coursier/graph/DependencyTree
  interfaces: 2, fields: 4, methods: 31, attributes: 5
Constant pool:
    #1 = Utf8               coursier/graph/DependencyTree$Node
    #2 = Class              #1            // coursier/graph/DependencyTree$Node
    #3 = Utf8               coursier/graph/DependencyTree
    #4 = Class              #3            // coursier/graph/DependencyTree
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               DependencyTree.scala
   #10 = Utf8               Node
   #11 = Utf8               coursier/graph/DependencyTree$Node$$anonfun$excluded$1$1
   #12 = Class              #11           // coursier/graph/DependencyTree$Node$$anonfun$excluded$1$1
   #13 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #14 = Class              #13           // java/lang/invoke/MethodHandles$Lookup
   #15 = Utf8               java/lang/invoke/MethodHandles
   #16 = Class              #15           // java/lang/invoke/MethodHandles
   #17 = Utf8               Lookup
   #18 = Utf8               scala/math/Ordering$String$
   #19 = Class              #18           // scala/math/Ordering$String$
   #20 = Utf8               scala/math/Ordering
   #21 = Class              #20           // scala/math/Ordering
   #22 = Utf8
   #23 = Utf8               dependency
   #24 = Utf8               Lcoursier/core/Dependency;
   #25 = Utf8               excluded
   #26 = Utf8               Z
   #27 = Utf8               resolution
   #28 = Utf8               Lcoursier/core/Resolution;
   #29 = Utf8               withExclusions
   #30 = Utf8               productElementNames
   #31 = Utf8               ()Lscala/collection/Iterator;
   #32 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #33 = Utf8               productElementNames$
   #34 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #35 = NameAndType        #33:#34       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #36 = InterfaceMethodref #6.#35        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #37 = Utf8               this
   #38 = Utf8               Lcoursier/graph/DependencyTree$Node;
   #39 = Utf8               ()Lcoursier/core/Dependency;
   #40 = NameAndType        #23:#24       // dependency:Lcoursier/core/Dependency;
   #41 = Fieldref           #2.#40        // coursier/graph/DependencyTree$Node.dependency:Lcoursier/core/Dependency;
   #42 = Utf8               ()Z
   #43 = NameAndType        #25:#26       // excluded:Z
   #44 = Fieldref           #2.#43        // coursier/graph/DependencyTree$Node.excluded:Z
   #45 = Utf8               ()Lcoursier/core/Resolution;
   #46 = NameAndType        #27:#28       // resolution:Lcoursier/core/Resolution;
   #47 = Fieldref           #2.#46        // coursier/graph/DependencyTree$Node.resolution:Lcoursier/core/Resolution;
   #48 = NameAndType        #29:#26       // withExclusions:Z
   #49 = Fieldref           #2.#48        // coursier/graph/DependencyTree$Node.withExclusions:Z
   #50 = Utf8               reconciledVersion
   #51 = Utf8               ()Ljava/lang/String;
   #52 = NameAndType        #27:#45       // resolution:()Lcoursier/core/Resolution;
   #53 = Methodref          #2.#52        // coursier/graph/DependencyTree$Node.resolution:()Lcoursier/core/Resolution;
   #54 = Utf8               coursier/core/Resolution
   #55 = Class              #54           // coursier/core/Resolution
   #56 = Utf8               reconciledVersions
   #57 = Utf8               ()Lscala/collection/immutable/Map;
   #58 = NameAndType        #56:#57       // reconciledVersions:()Lscala/collection/immutable/Map;
   #59 = Methodref          #55.#58       // coursier/core/Resolution.reconciledVersions:()Lscala/collection/immutable/Map;
   #60 = NameAndType        #23:#39       // dependency:()Lcoursier/core/Dependency;
   #61 = Methodref          #2.#60        // coursier/graph/DependencyTree$Node.dependency:()Lcoursier/core/Dependency;
   #62 = Utf8               coursier/core/Dependency
   #63 = Class              #62           // coursier/core/Dependency
   #64 = Utf8               module
   #65 = Utf8               ()Lcoursier/core/Module;
   #66 = NameAndType        #64:#65       // module:()Lcoursier/core/Module;
   #67 = Methodref          #63.#66       // coursier/core/Dependency.module:()Lcoursier/core/Module;
   #68 = Utf8               ()Ljava/lang/Object;
   #69 = MethodType         #68           //  ()Ljava/lang/Object;
   #70 = Utf8               $anonfun$reconciledVersion$1
   #71 = Utf8               (Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
   #72 = NameAndType        #70:#71       // $anonfun$reconciledVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
   #73 = Methodref          #2.#72        // coursier/graph/DependencyTree$Node.$anonfun$reconciledVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
   #74 = MethodHandle       6:#73         // REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$reconciledVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
   #75 = MethodType         #51           //  ()Ljava/lang/String;
   #76 = Integer            5
   #77 = Integer            1
   #78 = Utf8               java/lang/invoke/LambdaMetafactory
   #79 = Class              #78           // java/lang/invoke/LambdaMetafactory
   #80 = Utf8               altMetafactory
   #81 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #82 = NameAndType        #80:#81       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #83 = Methodref          #79.#82       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #84 = MethodHandle       6:#83         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #85 = Utf8               apply
   #86 = Utf8               (Lcoursier/graph/DependencyTree$Node;)Lscala/Function0;
   #87 = NameAndType        #85:#86       // apply:(Lcoursier/graph/DependencyTree$Node;)Lscala/Function0;
   #88 = InvokeDynamic      #0:#87        // #0:apply:(Lcoursier/graph/DependencyTree$Node;)Lscala/Function0;
   #89 = Utf8               scala/collection/immutable/Map
   #90 = Class              #89           // scala/collection/immutable/Map
   #91 = Utf8               getOrElse
   #92 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
   #93 = NameAndType        #91:#92       // getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
   #94 = InterfaceMethodref #90.#93       // scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
   #95 = Utf8               java/lang/String
   #96 = Class              #95           // java/lang/String
   #97 = Utf8               retainedVersion
   #98 = Utf8               retainedVersions
   #99 = NameAndType        #98:#57       // retainedVersions:()Lscala/collection/immutable/Map;
  #100 = Methodref          #55.#99       // coursier/core/Resolution.retainedVersions:()Lscala/collection/immutable/Map;
  #101 = Utf8               $anonfun$retainedVersion$1
  #102 = NameAndType        #101:#71      // $anonfun$retainedVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
  #103 = Methodref          #2.#102       // coursier/graph/DependencyTree$Node.$anonfun$retainedVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
  #104 = MethodHandle       6:#103        // REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$retainedVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
  #105 = InvokeDynamic      #1:#87        // #1:apply:(Lcoursier/graph/DependencyTree$Node;)Lscala/Function0;
  #106 = Utf8               children
  #107 = Utf8               ()Lscala/collection/immutable/Seq;
  #108 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/graph/DependencyTree;>;
  #109 = NameAndType        #25:#42       // excluded:()Z
  #110 = Methodref          #2.#109       // coursier/graph/DependencyTree$Node.excluded:()Z
  #111 = Utf8               scala/collection/immutable/Nil$
  #112 = Class              #111          // scala/collection/immutable/Nil$
  #113 = Utf8               MODULE$
  #114 = Utf8               Lscala/collection/immutable/Nil$;
  #115 = NameAndType        #113:#114     // MODULE$:Lscala/collection/immutable/Nil$;
  #116 = Fieldref           #112.#115     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #117 = NameAndType        #97:#51       // retainedVersion:()Ljava/lang/String;
  #118 = Methodref          #2.#117       // coursier/graph/DependencyTree$Node.retainedVersion:()Ljava/lang/String;
  #119 = Utf8               withVersion
  #120 = Utf8               (Ljava/lang/String;)Lcoursier/core/Dependency;
  #121 = NameAndType        #119:#120     // withVersion:(Ljava/lang/String;)Lcoursier/core/Dependency;
  #122 = Methodref          #63.#121      // coursier/core/Dependency.withVersion:(Ljava/lang/String;)Lcoursier/core/Dependency;
  #123 = Utf8               dependenciesOf
  #124 = Utf8               (Lcoursier/core/Dependency;Z)Lscala/collection/immutable/Seq;
  #125 = NameAndType        #123:#124     // dependenciesOf:(Lcoursier/core/Dependency;Z)Lscala/collection/immutable/Seq;
  #126 = Methodref          #55.#125      // coursier/core/Resolution.dependenciesOf:(Lcoursier/core/Dependency;Z)Lscala/collection/immutable/Seq;
  #127 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #128 = MethodType         #127          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #129 = Utf8               $anonfun$children$1
  #130 = Utf8               (Lcoursier/core/Dependency;)Lscala/Tuple3;
  #131 = NameAndType        #129:#130     // $anonfun$children$1:(Lcoursier/core/Dependency;)Lscala/Tuple3;
  #132 = Methodref          #2.#131       // coursier/graph/DependencyTree$Node.$anonfun$children$1:(Lcoursier/core/Dependency;)Lscala/Tuple3;
  #133 = MethodHandle       6:#132        // REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$1:(Lcoursier/core/Dependency;)Lscala/Tuple3;
  #134 = MethodType         #130          //  (Lcoursier/core/Dependency;)Lscala/Tuple3;
  #135 = Utf8               ()Lscala/Function1;
  #136 = NameAndType        #85:#135      // apply:()Lscala/Function1;
  #137 = InvokeDynamic      #2:#136       // #2:apply:()Lscala/Function1;
  #138 = Utf8               scala/math/Ordering$
  #139 = Class              #138          // scala/math/Ordering$
  #140 = Utf8               Lscala/math/Ordering$;
  #141 = NameAndType        #113:#140     // MODULE$:Lscala/math/Ordering$;
  #142 = Fieldref           #139.#141     // scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
  #143 = Utf8               coursier/core/Organization$
  #144 = Class              #143          // coursier/core/Organization$
  #145 = Utf8               Lcoursier/core/Organization$;
  #146 = NameAndType        #113:#145     // MODULE$:Lcoursier/core/Organization$;
  #147 = Fieldref           #144.#146     // coursier/core/Organization$.MODULE$:Lcoursier/core/Organization$;
  #148 = Utf8               ordering
  #149 = Utf8               ()Lscala/math/Ordering;
  #150 = NameAndType        #148:#149     // ordering:()Lscala/math/Ordering;
  #151 = Methodref          #144.#150     // coursier/core/Organization$.ordering:()Lscala/math/Ordering;
  #152 = Utf8               coursier/core/ModuleName$
  #153 = Class              #152          // coursier/core/ModuleName$
  #154 = Utf8               Lcoursier/core/ModuleName$;
  #155 = NameAndType        #113:#154     // MODULE$:Lcoursier/core/ModuleName$;
  #156 = Fieldref           #153.#155     // coursier/core/ModuleName$.MODULE$:Lcoursier/core/ModuleName$;
  #157 = Methodref          #153.#150     // coursier/core/ModuleName$.ordering:()Lscala/math/Ordering;
  #158 = Utf8               Lscala/math/Ordering$String$;
  #159 = NameAndType        #113:#158     // MODULE$:Lscala/math/Ordering$String$;
  #160 = Fieldref           #19.#159      // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
  #161 = Utf8               Tuple3
  #162 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #163 = NameAndType        #161:#162     // Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #164 = Methodref          #139.#163     // scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #165 = Utf8               scala/collection/immutable/Seq
  #166 = Class              #165          // scala/collection/immutable/Seq
  #167 = Utf8               sortBy
  #168 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #169 = NameAndType        #167:#168     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #170 = InterfaceMethodref #166.#169     // scala/collection/immutable/Seq.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #171 = Utf8               $anonfun$children$2
  #172 = Utf8               (Lcoursier/core/Dependency;)Lscala/Tuple2;
  #173 = NameAndType        #171:#172     // $anonfun$children$2:(Lcoursier/core/Dependency;)Lscala/Tuple2;
  #174 = Methodref          #2.#173       // coursier/graph/DependencyTree$Node.$anonfun$children$2:(Lcoursier/core/Dependency;)Lscala/Tuple2;
  #175 = MethodHandle       6:#174        // REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$2:(Lcoursier/core/Dependency;)Lscala/Tuple2;
  #176 = MethodType         #172          //  (Lcoursier/core/Dependency;)Lscala/Tuple2;
  #177 = InvokeDynamic      #3:#136       // #3:apply:()Lscala/Function1;
  #178 = Utf8               map
  #179 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #180 = NameAndType        #178:#179     // map:(Lscala/Function1;)Ljava/lang/Object;
  #181 = InterfaceMethodref #166.#180     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #182 = Utf8               scala/collection/IterableOnceOps
  #183 = Class              #182          // scala/collection/IterableOnceOps
  #184 = Utf8               toSet
  #185 = Utf8               ()Lscala/collection/immutable/Set;
  #186 = NameAndType        #184:#185     // toSet:()Lscala/collection/immutable/Set;
  #187 = InterfaceMethodref #183.#186     // scala/collection/IterableOnceOps.toSet:()Lscala/collection/immutable/Set;
  #188 = Utf8               $anonfun$children$4
  #189 = Utf8               (Lcoursier/graph/DependencyTree$Node;Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
  #190 = NameAndType        #188:#189     // $anonfun$children$4:(Lcoursier/graph/DependencyTree$Node;Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
  #191 = Methodref          #2.#190       // coursier/graph/DependencyTree$Node.$anonfun$children$4:(Lcoursier/graph/DependencyTree$Node;Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
  #192 = MethodHandle       6:#191        // REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$4:(Lcoursier/graph/DependencyTree$Node;Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
  #193 = Utf8               (Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
  #194 = MethodType         #193          //  (Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
  #195 = Utf8               (Lcoursier/graph/DependencyTree$Node;)Lscala/Function1;
  #196 = NameAndType        #85:#195      // apply:(Lcoursier/graph/DependencyTree$Node;)Lscala/Function1;
  #197 = InvokeDynamic      #4:#196       // #4:apply:(Lcoursier/graph/DependencyTree$Node;)Lscala/Function1;
  #198 = Utf8               scala/collection/IterableOps
  #199 = Class              #198          // scala/collection/IterableOps
  #200 = NameAndType        #29:#42       // withExclusions:()Z
  #201 = Methodref          #2.#200       // coursier/graph/DependencyTree$Node.withExclusions:()Z
  #202 = Utf8               excluded$1
  #203 = Utf8               (Lcoursier/core/Dependency;Lscala/collection/immutable/Set;)Lscala/collection/immutable/Seq;
  #204 = NameAndType        #202:#203     // excluded$1:(Lcoursier/core/Dependency;Lscala/collection/immutable/Set;)Lscala/collection/immutable/Seq;
  #205 = Methodref          #2.#204       // coursier/graph/DependencyTree$Node.excluded$1:(Lcoursier/core/Dependency;Lscala/collection/immutable/Set;)Lscala/collection/immutable/Seq;
  #206 = Utf8               scala/collection/immutable/Set
  #207 = Class              #206          // scala/collection/immutable/Set
  #208 = Utf8               $plus$plus
  #209 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #210 = NameAndType        #208:#209     // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #211 = InterfaceMethodref #199.#210     // scala/collection/IterableOps.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #212 = Utf8               dep0
  #213 = Utf8               dependencies
  #214 = Utf8               Lscala/collection/immutable/Seq;
  #215 = Utf8               dependencies0
  #216 = Utf8               Lscala/collection/immutable/Set;
  #217 = Utf8               copy
  #218 = Utf8               (Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)Lcoursier/graph/DependencyTree$Node;
  #219 = Utf8               <init>
  #220 = Utf8               (Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
  #221 = NameAndType        #219:#220     // "<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
  #222 = Methodref          #2.#221       // coursier/graph/DependencyTree$Node."<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
  #223 = Utf8               copy$default$1
  #224 = Utf8               copy$default$2
  #225 = Utf8               copy$default$3
  #226 = Utf8               copy$default$4
  #227 = Utf8               productPrefix
  #228 = String             #10           // Node
  #229 = Utf8               productArity
  #230 = Utf8               ()I
  #231 = Utf8               productElement
  #232 = Utf8               (I)Ljava/lang/Object;
  #233 = Utf8               x$1
  #234 = Utf8               scala/runtime/BoxesRunTime
  #235 = Class              #234          // scala/runtime/BoxesRunTime
  #236 = Utf8               boxToBoolean
  #237 = Utf8               (Z)Ljava/lang/Boolean;
  #238 = NameAndType        #236:#237     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #239 = Methodref          #235.#238     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #240 = Utf8               scala/runtime/Statics
  #241 = Class              #240          // scala/runtime/Statics
  #242 = Utf8               ioobe
  #243 = NameAndType        #242:#232     // ioobe:(I)Ljava/lang/Object;
  #244 = Methodref          #241.#243     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #245 = Utf8               java/lang/Object
  #246 = Class              #245          // java/lang/Object
  #247 = Utf8               I
  #248 = Utf8               productIterator
  #249 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #250 = Utf8               scala/runtime/ScalaRunTime$
  #251 = Class              #250          // scala/runtime/ScalaRunTime$
  #252 = Utf8               Lscala/runtime/ScalaRunTime$;
  #253 = NameAndType        #113:#252     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #254 = Fieldref           #251.#253     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #255 = Utf8               typedProductIterator
  #256 = NameAndType        #255:#34      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #257 = Methodref          #251.#256     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #258 = Utf8               canEqual
  #259 = Utf8               (Ljava/lang/Object;)Z
  #260 = Utf8               Ljava/lang/Object;
  #261 = Utf8               productElementName
  #262 = Utf8               (I)Ljava/lang/String;
  #263 = String             #23           // dependency
  #264 = String             #25           // excluded
  #265 = String             #27           // resolution
  #266 = String             #29           // withExclusions
  #267 = Utf8               hashCode
  #268 = Integer            -889275714
  #269 = NameAndType        #227:#51      // productPrefix:()Ljava/lang/String;
  #270 = Methodref          #2.#269       // coursier/graph/DependencyTree$Node.productPrefix:()Ljava/lang/String;
  #271 = NameAndType        #267:#230     // hashCode:()I
  #272 = Methodref          #96.#271      // java/lang/String.hashCode:()I
  #273 = Utf8               mix
  #274 = Utf8               (II)I
  #275 = NameAndType        #273:#274     // mix:(II)I
  #276 = Methodref          #241.#275     // scala/runtime/Statics.mix:(II)I
  #277 = Utf8               anyHash
  #278 = Utf8               (Ljava/lang/Object;)I
  #279 = NameAndType        #277:#278     // anyHash:(Ljava/lang/Object;)I
  #280 = Methodref          #241.#279     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #281 = Utf8               finalizeHash
  #282 = NameAndType        #281:#274     // finalizeHash:(II)I
  #283 = Methodref          #241.#282     // scala/runtime/Statics.finalizeHash:(II)I
  #284 = Utf8               toString
  #285 = Utf8               _toString
  #286 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #287 = NameAndType        #285:#286     // _toString:(Lscala/Product;)Ljava/lang/String;
  #288 = Methodref          #251.#287     // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #289 = Utf8               equals
  #290 = NameAndType        #289:#259     // equals:(Ljava/lang/Object;)Z
  #291 = Methodref          #246.#290     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #292 = NameAndType        #258:#259     // canEqual:(Ljava/lang/Object;)Z
  #293 = Methodref          #2.#292       // coursier/graph/DependencyTree$Node.canEqual:(Ljava/lang/Object;)Z
  #294 = Utf8               $this
  #295 = Utf8               version
  #296 = NameAndType        #295:#51      // version:()Ljava/lang/String;
  #297 = Methodref          #63.#296      // coursier/core/Dependency.version:()Ljava/lang/String;
  #298 = Utf8               trDep
  #299 = Utf8               scala/Tuple3
  #300 = Class              #299          // scala/Tuple3
  #301 = Utf8               coursier/core/Organization
  #302 = Class              #301          // coursier/core/Organization
  #303 = Utf8               coursier/core/Module
  #304 = Class              #303          // coursier/core/Module
  #305 = Utf8               organization
  #306 = NameAndType        #305:#51      // organization:()Ljava/lang/String;
  #307 = Methodref          #304.#306     // coursier/core/Module.organization:()Ljava/lang/String;
  #308 = Utf8               (Ljava/lang/String;)V
  #309 = NameAndType        #219:#308     // "<init>":(Ljava/lang/String;)V
  #310 = Methodref          #302.#309     // coursier/core/Organization."<init>":(Ljava/lang/String;)V
  #311 = Utf8               coursier/core/ModuleName
  #312 = Class              #311          // coursier/core/ModuleName
  #313 = Utf8               name
  #314 = NameAndType        #313:#51      // name:()Ljava/lang/String;
  #315 = Methodref          #304.#314     // coursier/core/Module.name:()Ljava/lang/String;
  #316 = Methodref          #312.#309     // coursier/core/ModuleName."<init>":(Ljava/lang/String;)V
  #317 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #318 = NameAndType        #219:#317     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #319 = Methodref          #300.#318     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #320 = Utf8               moduleVersion
  #321 = Utf8               ()Lscala/Tuple2;
  #322 = NameAndType        #320:#321     // moduleVersion:()Lscala/Tuple2;
  #323 = Methodref          #63.#322      // coursier/core/Dependency.moduleVersion:()Lscala/Tuple2;
  #324 = Utf8               $anonfun$children$3
  #325 = Utf8               dep0$1
  #326 = Utf8               dependencies0$1
  #327 = Utf8               scala/Predef$
  #328 = Class              #327          // scala/Predef$
  #329 = Utf8               Lscala/Predef$;
  #330 = NameAndType        #113:#329     // MODULE$:Lscala/Predef$;
  #331 = Fieldref           #328.#330     // scala/Predef$.MODULE$:Lscala/Predef$;
  #332 = Utf8               Set
  #333 = Utf8               ()Lscala/collection/immutable/Set$;
  #334 = NameAndType        #332:#333     // Set:()Lscala/collection/immutable/Set$;
  #335 = Methodref          #328.#334     // scala/Predef$.Set:()Lscala/collection/immutable/Set$;
  #336 = Utf8               scala/collection/immutable/Set$
  #337 = Class              #336          // scala/collection/immutable/Set$
  #338 = Utf8               empty
  #339 = NameAndType        #338:#185     // empty:()Lscala/collection/immutable/Set;
  #340 = Methodref          #337.#339     // scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
  #341 = Utf8               (Lscala/collection/immutable/Set;)Lcoursier/core/Dependency;
  #342 = NameAndType        #29:#341      // withExclusions:(Lscala/collection/immutable/Set;)Lcoursier/core/Dependency;
  #343 = Methodref          #63.#342      // coursier/core/Dependency.withExclusions:(Lscala/collection/immutable/Set;)Lcoursier/core/Dependency;
  #344 = NameAndType        #324:#130     // $anonfun$children$3:(Lcoursier/core/Dependency;)Lscala/Tuple3;
  #345 = Methodref          #2.#344       // coursier/graph/DependencyTree$Node.$anonfun$children$3:(Lcoursier/core/Dependency;)Lscala/Tuple3;
  #346 = MethodHandle       6:#345        // REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$3:(Lcoursier/core/Dependency;)Lscala/Tuple3;
  #347 = InvokeDynamic      #5:#136       // #5:apply:()Lscala/Function1;
  #348 = Utf8               (Lcoursier/graph/DependencyTree$Node;Lscala/collection/immutable/Set;)V
  #349 = NameAndType        #219:#348     // "<init>":(Lcoursier/graph/DependencyTree$Node;Lscala/collection/immutable/Set;)V
  #350 = Methodref          #12.#349      // coursier/graph/DependencyTree$Node$$anonfun$excluded$1$1."<init>":(Lcoursier/graph/DependencyTree$Node;Lscala/collection/immutable/Set;)V
  #351 = Utf8               collect
  #352 = Utf8               (Lscala/PartialFunction;)Ljava/lang/Object;
  #353 = NameAndType        #351:#352     // collect:(Lscala/PartialFunction;)Ljava/lang/Object;
  #354 = InterfaceMethodref #199.#353     // scala/collection/IterableOps.collect:(Lscala/PartialFunction;)Ljava/lang/Object;
  #355 = Utf8               x$2
  #356 = Utf8               ()V
  #357 = NameAndType        #219:#356     // "<init>":()V
  #358 = Methodref          #4.#357       // coursier/graph/DependencyTree."<init>":()V
  #359 = Utf8               $init$
  #360 = Utf8               (Lscala/Product;)V
  #361 = NameAndType        #359:#360     // $init$:(Lscala/Product;)V
  #362 = InterfaceMethodref #6.#361       // scala/Product.$init$:(Lscala/Product;)V
  #363 = Utf8               $deserializeLambda$
  #364 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #365 = Utf8               scala/runtime/LambdaDeserialize
  #366 = Class              #365          // scala/runtime/LambdaDeserialize
  #367 = Utf8               bootstrap
  #368 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #369 = NameAndType        #367:#368     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #370 = Methodref          #366.#369     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #371 = MethodHandle       6:#370        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #372 = Utf8               lambdaDeserialize
  #373 = NameAndType        #372:#364     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #374 = InvokeDynamic      #6:#373       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #375 = Utf8               Code
  #376 = Utf8               LineNumberTable
  #377 = Utf8               LocalVariableTable
  #378 = Utf8               Signature
  #379 = Utf8               StackMapTable
  #380 = Utf8               MethodParameters
  #381 = Utf8               InnerClasses
  #382 = Utf8               SourceFile
  #383 = Utf8               BootstrapMethods
  #384 = Utf8               ScalaInlineInfo
  #385 = Utf8               Scala
{
  private final coursier.core.Dependency dependency;
    descriptor: Lcoursier/core/Dependency;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean excluded;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final coursier.core.Resolution resolution;
    descriptor: Lcoursier/core/Resolution;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean withExclusions;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #36                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;
    Signature: #32                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public coursier.core.Dependency dependency();
    descriptor: ()Lcoursier/core/Dependency;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #41                 // Field dependency:Lcoursier/core/Dependency;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;

  public boolean excluded();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #44                 // Field excluded:Z
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;

  public coursier.core.Resolution resolution();
    descriptor: ()Lcoursier/core/Resolution;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #47                 // Field resolution:Lcoursier/core/Resolution;
         4: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;

  public boolean withExclusions();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #49                 // Field withExclusions:Z
         4: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;

  public java.lang.String reconciledVersion();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
         4: invokevirtual #59                 // Method coursier/core/Resolution.reconciledVersions:()Lscala/collection/immutable/Map;
         7: aload_0
         8: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
        11: invokevirtual #67                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        14: aload_0
        15: invokedynamic #88,  0             // InvokeDynamic #0:apply:(Lcoursier/graph/DependencyTree$Node;)Lscala/Function0;
        20: invokeinterface #94,  3           // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
        25: checkcast     #96                 // class java/lang/String
        28: areturn
      LineNumberTable:
        line 53: 0
        line 55: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/graph/DependencyTree$Node;

  public java.lang.String retainedVersion();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
         4: invokevirtual #100                // Method coursier/core/Resolution.retainedVersions:()Lscala/collection/immutable/Map;
         7: aload_0
         8: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
        11: invokevirtual #67                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        14: aload_0
        15: invokedynamic #105,  0            // InvokeDynamic #1:apply:(Lcoursier/graph/DependencyTree$Node;)Lscala/Function0;
        20: invokeinterface #94,  3           // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
        25: checkcast     #96                 // class java/lang/String
        28: areturn
      LineNumberTable:
        line 58: 0
        line 60: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lcoursier/graph/DependencyTree$Node;

  public scala.collection.immutable.Seq<coursier.graph.DependencyTree> children();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=1
         0: aload_0
         1: invokevirtual #110                // Method excluded:()Z
         4: ifeq          13
         7: getstatic     #116                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        10: goto          131
        13: aload_0
        14: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
        17: aload_0
        18: invokevirtual #118                // Method retainedVersion:()Ljava/lang/String;
        21: invokevirtual #122                // Method coursier/core/Dependency.withVersion:(Ljava/lang/String;)Lcoursier/core/Dependency;
        24: astore_1
        25: aload_0
        26: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
        29: aload_1
        30: iconst_0
        31: invokevirtual #126                // Method coursier/core/Resolution.dependenciesOf:(Lcoursier/core/Dependency;Z)Lscala/collection/immutable/Seq;
        34: invokedynamic #137,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        39: getstatic     #142                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        42: getstatic     #147                // Field coursier/core/Organization$.MODULE$:Lcoursier/core/Organization$;
        45: invokevirtual #151                // Method coursier/core/Organization$.ordering:()Lscala/math/Ordering;
        48: getstatic     #156                // Field coursier/core/ModuleName$.MODULE$:Lcoursier/core/ModuleName$;
        51: invokevirtual #157                // Method coursier/core/ModuleName$.ordering:()Lscala/math/Ordering;
        54: getstatic     #160                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        57: invokevirtual #164                // Method scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
        60: invokeinterface #170,  3          // InterfaceMethod scala/collection/immutable/Seq.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        65: checkcast     #166                // class scala/collection/immutable/Seq
        68: astore_2
        69: aload_2
        70: invokedynamic #177,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        75: invokeinterface #181,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        80: checkcast     #183                // class scala/collection/IterableOnceOps
        83: invokeinterface #187,  1          // InterfaceMethod scala/collection/IterableOnceOps.toSet:()Lscala/collection/immutable/Set;
        88: astore_3
        89: aload_2
        90: aload_0
        91: invokedynamic #197,  0            // InvokeDynamic #4:apply:(Lcoursier/graph/DependencyTree$Node;)Lscala/Function1;
        96: invokeinterface #181,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       101: checkcast     #199                // class scala/collection/IterableOps
       104: aload_0
       105: invokevirtual #201                // Method withExclusions:()Z
       108: ifeq          120
       111: aload_0
       112: aload_1
       113: aload_3
       114: invokespecial #205                // Method excluded$1:(Lcoursier/core/Dependency;Lscala/collection/immutable/Set;)Lscala/collection/immutable/Seq;
       117: goto          123
       120: getstatic     #116                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       123: invokeinterface #211,  2          // InterfaceMethod scala/collection/IterableOps.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
       128: checkcast     #166                // class scala/collection/immutable/Seq
       131: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 13 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 106
          locals = [ class coursier/graph/DependencyTree$Node, class coursier/core/Dependency, class scala/collection/immutable/Seq, class scala/collection/immutable/Set ]
          stack = [ class scala/collection/IterableOps ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/graph/DependencyTree$Node, class coursier/core/Dependency, class scala/collection/immutable/Seq, class scala/collection/immutable/Set ]
          stack = [ class scala/collection/IterableOps, class scala/collection/immutable/Seq ]
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class coursier/graph/DependencyTree$Node ]
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 65: 0
        line 66: 7
        line 68: 13
        line 70: 25
        line 72: 29
        line 73: 30
        line 75: 34
        line 79: 69
        line 99: 89
        line 100: 104
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25     106     1  dep0   Lcoursier/core/Dependency;
           69      62     2 dependencies   Lscala/collection/immutable/Seq;
           89      42     3 dependencies0   Lscala/collection/immutable/Set;
            0     132     0  this   Lcoursier/graph/DependencyTree$Node;
    Signature: #108                         // ()Lscala/collection/immutable/Seq<Lcoursier/graph/DependencyTree;>;

  public coursier.graph.DependencyTree$Node copy(coursier.core.Dependency, boolean, coursier.core.Resolution, boolean);
    descriptor: (Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)Lcoursier/graph/DependencyTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #2                  // class coursier/graph/DependencyTree$Node
         3: dup
         4: aload_1
         5: iload_2
         6: aload_3
         7: iload         4
         9: invokespecial #222                // Method "<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
        12: areturn
      LineNumberTable:
        line 45: 0
        line 46: 4
        line 47: 5
        line 48: 6
        line 49: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/graph/DependencyTree$Node;
            0      13     1 dependency   Lcoursier/core/Dependency;
            0      13     2 excluded   Z
            0      13     3 resolution   Lcoursier/core/Resolution;
            0      13     4 withExclusions   Z
    MethodParameters:
      Name                           Flags
      dependency                     final
      excluded                       final
      resolution                     final
      withExclusions                 final

  public coursier.core.Dependency copy$default$1();
    descriptor: ()Lcoursier/core/Dependency;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;

  public boolean copy$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #110                // Method excluded:()Z
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;

  public coursier.core.Resolution copy$default$3();
    descriptor: ()Lcoursier/core/Resolution;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
         4: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;

  public boolean copy$default$4();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #201                // Method withExclusions:()Z
         4: ireturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #228                // String Node
         2: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/graph/DependencyTree$Node;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_4
         1: ireturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/DependencyTree$Node;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 3
                       0: 32
                       1: 39
                       2: 49
                       3: 56
                 default: 66
            }
        32: aload_0
        33: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
        36: goto          73
        39: aload_0
        40: invokevirtual #110                // Method excluded:()Z
        43: invokestatic  #239                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        46: goto          73
        49: aload_0
        50: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
        53: goto          73
        56: aload_0
        57: invokevirtual #201                // Method withExclusions:()Z
        60: invokestatic  #239                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        63: goto          73
        66: iload_1
        67: invokestatic  #244                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        70: goto          73
        73: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      74     0  this   Lcoursier/graph/DependencyTree$Node;
            0      74     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #254                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #257                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/graph/DependencyTree$Node;
    Signature: #249                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class coursier/graph/DependencyTree$Node
         4: ireturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/DependencyTree$Node;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 3
                       0: 32
                       1: 38
                       2: 44
                       3: 50
                 default: 56
            }
        32: ldc_w         #263                // String dependency
        35: goto          66
        38: ldc_w         #264                // String excluded
        41: goto          66
        44: ldc_w         #265                // String resolution
        47: goto          66
        50: ldc_w         #266                // String withExclusions
        53: goto          66
        56: iload_1
        57: invokestatic  #244                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        60: checkcast     #96                 // class java/lang/String
        63: goto          66
        66: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      67     0  this   Lcoursier/graph/DependencyTree$Node;
            0      67     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: ldc_w         #268                // int -889275714
         3: istore_1
         4: iload_1
         5: aload_0
         6: invokevirtual #270                // Method productPrefix:()Ljava/lang/String;
         9: invokevirtual #272                // Method java/lang/String.hashCode:()I
        12: invokestatic  #276                // Method scala/runtime/Statics.mix:(II)I
        15: istore_1
        16: iload_1
        17: aload_0
        18: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
        21: invokestatic  #280                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        24: invokestatic  #276                // Method scala/runtime/Statics.mix:(II)I
        27: istore_1
        28: iload_1
        29: aload_0
        30: invokevirtual #110                // Method excluded:()Z
        33: ifeq          42
        36: sipush        1231
        39: goto          45
        42: sipush        1237
        45: invokestatic  #276                // Method scala/runtime/Statics.mix:(II)I
        48: istore_1
        49: iload_1
        50: aload_0
        51: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
        54: invokestatic  #280                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        57: invokestatic  #276                // Method scala/runtime/Statics.mix:(II)I
        60: istore_1
        61: iload_1
        62: aload_0
        63: invokevirtual #201                // Method withExclusions:()Z
        66: ifeq          75
        69: sipush        1231
        72: goto          78
        75: sipush        1237
        78: invokestatic  #276                // Method scala/runtime/Statics.mix:(II)I
        81: istore_1
        82: iload_1
        83: iconst_4
        84: invokestatic  #283                // Method scala/runtime/Statics.finalizeHash:(II)I
        87: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class coursier/graph/DependencyTree$Node, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/graph/DependencyTree$Node, int ]
          stack = [ int, int ]
        frame_type = 93 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/graph/DependencyTree$Node, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      88     0  this   Lcoursier/graph/DependencyTree$Node;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #254                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #288                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/graph/DependencyTree$Node;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     142
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class coursier/graph/DependencyTree$Node
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          146
        31: aload_1
        32: checkcast     #2                  // class coursier/graph/DependencyTree$Node
        35: astore        4
        37: aload_0
        38: invokevirtual #110                // Method excluded:()Z
        41: aload         4
        43: invokevirtual #110                // Method excluded:()Z
        46: if_icmpne     138
        49: aload_0
        50: invokevirtual #201                // Method withExclusions:()Z
        53: aload         4
        55: invokevirtual #201                // Method withExclusions:()Z
        58: if_icmpne     138
        61: aload_0
        62: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
        65: aload         4
        67: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
        70: astore        5
        72: dup
        73: ifnonnull     85
        76: pop
        77: aload         5
        79: ifnull        93
        82: goto          138
        85: aload         5
        87: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        90: ifeq          138
        93: aload_0
        94: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
        97: aload         4
        99: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
       102: astore        6
       104: dup
       105: ifnonnull     117
       108: pop
       109: aload         6
       111: ifnull        125
       114: goto          138
       117: aload         6
       119: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       122: ifeq          138
       125: aload         4
       127: aload_0
       128: invokevirtual #293                // Method canEqual:(Ljava/lang/Object;)Z
       131: ifeq          138
       134: iconst_1
       135: goto          139
       138: iconst_0
       139: ifeq          146
       142: iconst_1
       143: goto          147
       146: iconst_0
       147: ireturn
      StackMapTable: number_of_entries = 12
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/graph/DependencyTree$Node, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class coursier/graph/DependencyTree$Node, class java/lang/Object, int, class java/lang/Object, class coursier/graph/DependencyTree$Node, class coursier/core/Dependency ]
          stack = [ class coursier/core/Dependency ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class coursier/graph/DependencyTree$Node, class java/lang/Object, int, class java/lang/Object, class coursier/graph/DependencyTree$Node, class coursier/core/Dependency, class coursier/core/Resolution ]
          stack = [ class coursier/core/Resolution ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 12
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/graph/DependencyTree$Node, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     148     0  this   Lcoursier/graph/DependencyTree$Node;
            0     148     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.String $anonfun$reconciledVersion$1(coursier.graph.DependencyTree$Node);
    descriptor: (Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
         4: invokevirtual #297                // Method coursier/core/Dependency.version:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lcoursier/graph/DependencyTree$Node;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$retainedVersion$1(coursier.graph.DependencyTree$Node);
    descriptor: (Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #61                 // Method dependency:()Lcoursier/core/Dependency;
         4: invokevirtual #297                // Method coursier/core/Dependency.version:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lcoursier/graph/DependencyTree$Node;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final scala.Tuple3 $anonfun$children$1(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Lscala/Tuple3;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=1, args_size=1
         0: new           #300                // class scala/Tuple3
         3: dup
         4: new           #302                // class coursier/core/Organization
         7: dup
         8: aload_0
         9: invokevirtual #67                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        12: invokevirtual #307                // Method coursier/core/Module.organization:()Ljava/lang/String;
        15: invokespecial #310                // Method coursier/core/Organization."<init>":(Ljava/lang/String;)V
        18: new           #312                // class coursier/core/ModuleName
        21: dup
        22: aload_0
        23: invokevirtual #67                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        26: invokevirtual #315                // Method coursier/core/Module.name:()Ljava/lang/String;
        29: invokespecial #316                // Method coursier/core/ModuleName."<init>":(Ljava/lang/String;)V
        32: aload_0
        33: invokevirtual #297                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        36: invokespecial #319                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        39: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0 trDep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      trDep                          final

  public static final scala.Tuple2 $anonfun$children$2(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #323                // Method coursier/core/Dependency.moduleVersion:()Lscala/Tuple2;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.Tuple3 $anonfun$children$3(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Lscala/Tuple3;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=1, args_size=1
         0: new           #300                // class scala/Tuple3
         3: dup
         4: new           #302                // class coursier/core/Organization
         7: dup
         8: aload_0
         9: invokevirtual #67                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        12: invokevirtual #307                // Method coursier/core/Module.organization:()Ljava/lang/String;
        15: invokespecial #310                // Method coursier/core/Organization."<init>":(Ljava/lang/String;)V
        18: new           #312                // class coursier/core/ModuleName
        21: dup
        22: aload_0
        23: invokevirtual #67                 // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        26: invokevirtual #315                // Method coursier/core/Module.name:()Ljava/lang/String;
        29: invokespecial #316                // Method coursier/core/ModuleName."<init>":(Ljava/lang/String;)V
        32: aload_0
        33: invokevirtual #297                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        36: invokespecial #319                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        39: areturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0 trDep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      trDep                          final

  private final scala.collection.immutable.Seq excluded$1(coursier.core.Dependency, scala.collection.immutable.Set);
    descriptor: (Lcoursier/core/Dependency;Lscala/collection/immutable/Set;)Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
         4: aload_1
         5: getstatic     #331                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         8: invokevirtual #335                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
        11: invokevirtual #340                // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
        14: invokevirtual #343                // Method coursier/core/Dependency.withExclusions:(Lscala/collection/immutable/Set;)Lcoursier/core/Dependency;
        17: iconst_0
        18: invokevirtual #126                // Method coursier/core/Resolution.dependenciesOf:(Lcoursier/core/Dependency;Z)Lscala/collection/immutable/Seq;
        21: invokedynamic #347,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        26: getstatic     #142                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        29: getstatic     #147                // Field coursier/core/Organization$.MODULE$:Lcoursier/core/Organization$;
        32: invokevirtual #151                // Method coursier/core/Organization$.ordering:()Lscala/math/Ordering;
        35: getstatic     #156                // Field coursier/core/ModuleName$.MODULE$:Lcoursier/core/ModuleName$;
        38: invokevirtual #157                // Method coursier/core/ModuleName$.ordering:()Lscala/math/Ordering;
        41: getstatic     #160                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        44: invokevirtual #164                // Method scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
        47: invokeinterface #170,  3          // InterfaceMethod scala/collection/immutable/Seq.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        52: checkcast     #199                // class scala/collection/IterableOps
        55: new           #12                 // class coursier/graph/DependencyTree$Node$$anonfun$excluded$1$1
        58: dup
        59: aload_0
        60: aload_2
        61: invokespecial #350                // Method coursier/graph/DependencyTree$Node$$anonfun$excluded$1$1."<init>":(Lcoursier/graph/DependencyTree$Node;Lscala/collection/immutable/Set;)V
        64: invokeinterface #354,  2          // InterfaceMethod scala/collection/IterableOps.collect:(Lscala/PartialFunction;)Ljava/lang/Object;
        69: checkcast     #166                // class scala/collection/immutable/Seq
        72: areturn
      LineNumberTable:
        line 81: 0
        line 83: 4
        line 84: 17
        line 86: 21
        line 89: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      73     0  this   Lcoursier/graph/DependencyTree$Node;
            0      73     1 dep0$1   Lcoursier/core/Dependency;
            0      73     2 dependencies0$1   Lscala/collection/immutable/Set;
    MethodParameters:
      Name                           Flags
      dep0$1                         final
      dependencies0$1                final

  public static final coursier.graph.DependencyTree$Node $anonfun$children$4(coursier.graph.DependencyTree$Node, coursier.core.Dependency);
    descriptor: (Lcoursier/graph/DependencyTree$Node;Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #2                  // class coursier/graph/DependencyTree$Node
         3: dup
         4: aload_1
         5: iconst_0
         6: aload_0
         7: invokevirtual #53                 // Method resolution:()Lcoursier/core/Resolution;
        10: aload_0
        11: invokevirtual #201                // Method withExclusions:()Z
        14: invokespecial #222                // Method "<init>":(Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
        17: areturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 $this   Lcoursier/graph/DependencyTree$Node;
            0      18     1   x$2   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$2                            final

  public coursier.graph.DependencyTree$Node(coursier.core.Dependency, boolean, coursier.core.Resolution, boolean);
    descriptor: (Lcoursier/core/Dependency;ZLcoursier/core/Resolution;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: putfield      #41                 // Field dependency:Lcoursier/core/Dependency;
         5: aload_0
         6: iload_2
         7: putfield      #44                 // Field excluded:Z
        10: aload_0
        11: aload_3
        12: putfield      #47                 // Field resolution:Lcoursier/core/Resolution;
        15: aload_0
        16: iload         4
        18: putfield      #49                 // Field withExclusions:Z
        21: aload_0
        22: invokespecial #358                // Method coursier/graph/DependencyTree."<init>":()V
        25: aload_0
        26: invokestatic  #362                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        29: return
      LineNumberTable:
        line 46: 0
        line 47: 5
        line 48: 10
        line 49: 15
        line 50: 21
        line 45: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lcoursier/graph/DependencyTree$Node;
            0      30     1 dependency   Lcoursier/core/Dependency;
            0      30     2 excluded   Z
            0      30     3 resolution   Lcoursier/core/Resolution;
            0      30     4 withExclusions   Z
    MethodParameters:
      Name                           Flags
      dependency                     final
      excluded                       final
      resolution                     final
      withExclusions                 final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #374,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #10= #2 of #4;            // Node=class coursier/graph/DependencyTree$Node of class coursier/graph/DependencyTree
  public final #12;                       // class coursier/graph/DependencyTree$Node$$anonfun$excluded$1$1
  public static final #17= #14 of #16;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #22= #19 of #21;          // =class scala/math/Ordering$String$ of class scala/math/Ordering
SourceFile: "DependencyTree.scala"
BootstrapMethods:
  0: #84 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 ()Ljava/lang/Object;
      #74 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$reconciledVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
      #75 ()Ljava/lang/String;
      #76 5
      #77 1
      #75 ()Ljava/lang/String;
  1: #84 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 ()Ljava/lang/Object;
      #104 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$retainedVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
      #75 ()Ljava/lang/String;
      #76 5
      #77 1
      #75 ()Ljava/lang/String;
  2: #84 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #128 (Ljava/lang/Object;)Ljava/lang/Object;
      #133 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$1:(Lcoursier/core/Dependency;)Lscala/Tuple3;
      #134 (Lcoursier/core/Dependency;)Lscala/Tuple3;
      #76 5
      #77 1
      #134 (Lcoursier/core/Dependency;)Lscala/Tuple3;
  3: #84 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #128 (Ljava/lang/Object;)Ljava/lang/Object;
      #175 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$2:(Lcoursier/core/Dependency;)Lscala/Tuple2;
      #176 (Lcoursier/core/Dependency;)Lscala/Tuple2;
      #76 5
      #77 1
      #176 (Lcoursier/core/Dependency;)Lscala/Tuple2;
  4: #84 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #128 (Ljava/lang/Object;)Ljava/lang/Object;
      #192 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$4:(Lcoursier/graph/DependencyTree$Node;Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
      #194 (Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
      #76 5
      #77 1
      #194 (Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
  5: #84 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #128 (Ljava/lang/Object;)Ljava/lang/Object;
      #346 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$3:(Lcoursier/core/Dependency;)Lscala/Tuple3;
      #134 (Lcoursier/core/Dependency;)Lscala/Tuple3;
      #76 5
      #77 1
      #134 (Lcoursier/core/Dependency;)Lscala/Tuple3;
  6: #371 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #133 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$1:(Lcoursier/core/Dependency;)Lscala/Tuple3;
      #175 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$2:(Lcoursier/core/Dependency;)Lscala/Tuple2;
      #346 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$3:(Lcoursier/core/Dependency;)Lscala/Tuple3;
      #192 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$children$4:(Lcoursier/graph/DependencyTree$Node;Lcoursier/core/Dependency;)Lcoursier/graph/DependencyTree$Node;
      #74 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$reconciledVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
      #104 REF_invokeStatic coursier/graph/DependencyTree$Node.$anonfun$retainedVersion$1:(Lcoursier/graph/DependencyTree$Node;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x9A (unknown attribute)
   01 00 00 1E 00 81 00 82 01 00 AB 00 AC 01 01 44
   00 82 01 00 BC 00 BD 01 00 46 00 47 01 00 65 00
   47 01 00 DB 00 DC 00 01 02 01 03 00 00 6A 00 6B
   00 00 D9 00 DA 00 00 DF 00 27 00 00 E0 00 2A 00
   00 E1 00 2D 00 00 E2 00 2A 00 00 17 00 27 00 01
   21 01 03 00 00 19 00 2A 00 00 CA 00 CB 01 01 0B
   00 E6 00 00 E5 00 E6 00 00 E7 00 E8 00 01 05 01
   06 00 00 1E 00 1F 00 00 F8 00 1F 00 00 E3 00 33
   00 00 32 00 33 00 00 1B 00 2D 00 00 61 00 33 00
   01 1C 00 33 00 00 1D 00 2A 00
  Scala: length = 0x0 (unknown attribute)

