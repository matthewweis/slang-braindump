Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/xml/parsing/ConsoleErrorHandler.class
  Last modified May 29, 2022; size 4283 bytes
  SHA-256 checksum 10555a9e057aec2f341243556e422b9e90baebf78f00791e74fcbbce2ad5b721
  Compiled from "FactoryAdapter.scala"
public interface scala.xml.parsing.ConsoleErrorHandler
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/xml/parsing/ConsoleErrorHandler
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 11, attributes: 6
Constant pool:
    #1 = Utf8               scala/xml/parsing/ConsoleErrorHandler
    #2 = Class              #1            // scala/xml/parsing/ConsoleErrorHandler
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               FactoryAdapter.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\t3qAB\u0004\u0011\u0002\u0007\u0005a\u0002C\u0003\u001b\u0001\u0011\u00051\u0004C\u0003!\u0001\u0011\u0005\u0013\u0005C\u0003-\u0001\u0011\u0005S\u0006C\u00030\u0001\u0011\u0005\u0003\u0007C\u00033\u0001\u0011E1GA\nD_:\u001cx\u000e\\3FeJ|\'\u000fS1oI2,\'O\u0003\u0002\t\u0013\u00059\u0001/\u0019:tS:<\'B\u0001\u0006\f\u0003\rAX\u000e\u001c\u0006\u0002\u0019\u0005)1oY1mC\u000e\u00011C\u0001\u0001\u0010!\t\u0001\u0002$D\u0001\u0012\u0015\t\u00112#A\u0004iK2\u0004XM]:\u000b\u0005Q)\u0012aA:bq*\u0011!B\u0006\u0006\u0002/\u0005\u0019qN]4\n\u0005e\t\"A\u0004#fM\u0006,H\u000e\u001e%b]\u0012dWM]\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0003q\u0001\"!\b\u0010\u000e\u0003-I!aH\u0006\u0003\tUs\u0017\u000e^\u0001\bo\u0006\u0014h.\u001b8h)\ta\"\u0005C\u0003$\u0005\u0001\u0007A%\u0001\u0002fqB\u0011Q%\u000b\b\u0003M\u001dj\u0011!C\u0005\u0003Q%\tq\u0001]1dW\u0006<W-\u0003\u0002+W\t\t2+\u0011-QCJ\u001cX-\u0012=dKB$\u0018n\u001c8\u000b\u0005!J\u0011!B3se>\u0014HC\u0001\u000f/\u0011\u0015\u00193\u00011\u0001%\u0003)1\u0017\r^1m\u000bJ\u0014xN\u001d\u000b\u00039EBQa\t\u0003A\u0002\u0011\n!\u0002\u001d:j]R,%O]8s)\raB\'\u0011\u0005\u0006k\u0015\u0001\rAN\u0001\bKJ\u0014H/\u001f9f!\t9dH\u0004\u00029yA\u0011\u0011hC\u0007\u0002u)\u00111(D\u0001\u0007yI|w\u000e\u001e \n\u0005uZ\u0011A\u0002)sK\u0012,g-\u0003\u0002@\u0001\n11\u000b\u001e:j]\u001eT!!P\u0006\t\u000b\r*\u0001\u0019\u0001\u0013
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               warning$
   #15 = Utf8               (Lscala/xml/parsing/ConsoleErrorHandler;Lorg/xml/sax/SAXParseException;)V
   #16 = Utf8               $this
   #17 = Utf8               ex
   #18 = Utf8               warning
   #19 = Utf8               (Lorg/xml/sax/SAXParseException;)V
   #20 = NameAndType        #18:#19       // warning:(Lorg/xml/sax/SAXParseException;)V
   #21 = InterfaceMethodref #2.#20        // scala/xml/parsing/ConsoleErrorHandler.warning:(Lorg/xml/sax/SAXParseException;)V
   #22 = Utf8               Lscala/xml/parsing/ConsoleErrorHandler;
   #23 = Utf8               Lorg/xml/sax/SAXParseException;
   #24 = Utf8               this
   #25 = Utf8               error$
   #26 = Utf8               error
   #27 = NameAndType        #26:#19       // error:(Lorg/xml/sax/SAXParseException;)V
   #28 = InterfaceMethodref #2.#27        // scala/xml/parsing/ConsoleErrorHandler.error:(Lorg/xml/sax/SAXParseException;)V
   #29 = Utf8               Error
   #30 = String             #29           // Error
   #31 = Utf8               printError
   #32 = Utf8               (Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
   #33 = NameAndType        #31:#32       // printError:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
   #34 = InterfaceMethodref #2.#33        // scala/xml/parsing/ConsoleErrorHandler.printError:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
   #35 = Utf8               fatalError$
   #36 = Utf8               fatalError
   #37 = NameAndType        #36:#19       // fatalError:(Lorg/xml/sax/SAXParseException;)V
   #38 = InterfaceMethodref #2.#37        // scala/xml/parsing/ConsoleErrorHandler.fatalError:(Lorg/xml/sax/SAXParseException;)V
   #39 = Utf8               Fatal Error
   #40 = String             #39           // Fatal Error
   #41 = Utf8               printError$
   #42 = Utf8               (Lscala/xml/parsing/ConsoleErrorHandler;Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
   #43 = Utf8               errtype
   #44 = Utf8               Ljava/lang/String;
   #45 = Utf8               scala/Console$
   #46 = Class              #45           // scala/Console$
   #47 = Utf8               MODULE$
   #48 = Utf8               Lscala/Console$;
   #49 = NameAndType        #47:#48       // MODULE$:Lscala/Console$;
   #50 = Fieldref           #46.#49       // scala/Console$.MODULE$:Lscala/Console$;
   #51 = Utf8               err
   #52 = Utf8               ()Ljava/io/PrintStream;
   #53 = NameAndType        #51:#52       // err:()Ljava/io/PrintStream;
   #54 = Methodref          #46.#53       // scala/Console$.err:()Ljava/io/PrintStream;
   #55 = Utf8               ()V
   #56 = MethodType         #55           //  ()V
   #57 = Utf8               $anonfun$printError$1
   #58 = NameAndType        #57:#32       // $anonfun$printError$1:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
   #59 = InterfaceMethodref #2.#58        // scala/xml/parsing/ConsoleErrorHandler.$anonfun$printError$1:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
   #60 = MethodHandle       6:#59         // REF_invokeStatic scala/xml/parsing/ConsoleErrorHandler.$anonfun$printError$1:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
   #61 = Integer            1
   #62 = Utf8               java/lang/invoke/LambdaMetafactory
   #63 = Class              #62           // java/lang/invoke/LambdaMetafactory
   #64 = Utf8               altMetafactory
   #65 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #66 = NameAndType        #64:#65       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #67 = Methodref          #63.#66       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #68 = MethodHandle       6:#67         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #69 = Utf8               apply$mcV$sp
   #70 = Utf8               (Ljava/lang/String;Lorg/xml/sax/SAXParseException;)Lscala/runtime/java8/JFunction0$mcV$sp;
   #71 = NameAndType        #69:#70       // apply$mcV$sp:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)Lscala/runtime/java8/JFunction0$mcV$sp;
   #72 = InvokeDynamic      #0:#71        // #0:apply$mcV$sp:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)Lscala/runtime/java8/JFunction0$mcV$sp;
   #73 = Utf8               withOut
   #74 = Utf8               (Ljava/io/PrintStream;Lscala/Function0;)Ljava/lang/Object;
   #75 = NameAndType        #73:#74       // withOut:(Ljava/io/PrintStream;Lscala/Function0;)Ljava/lang/Object;
   #76 = Methodref          #46.#75       // scala/Console$.withOut:(Ljava/io/PrintStream;Lscala/Function0;)Ljava/lang/Object;
   #77 = Utf8               errtype$1
   #78 = Utf8               ex$1
   #79 = Utf8               scala/collection/StringOps$
   #80 = Class              #79           // scala/collection/StringOps$
   #81 = Utf8               Lscala/collection/StringOps$;
   #82 = NameAndType        #47:#81       // MODULE$:Lscala/collection/StringOps$;
   #83 = Fieldref           #80.#82       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #84 = Utf8               scala/Predef$
   #85 = Class              #84           // scala/Predef$
   #86 = Utf8               Lscala/Predef$;
   #87 = NameAndType        #47:#86       // MODULE$:Lscala/Predef$;
   #88 = Fieldref           #85.#87       // scala/Predef$.MODULE$:Lscala/Predef$;
   #89 = Utf8               [%s]:%d:%d: %s
   #90 = String             #89           // [%s]:%d:%d: %s
   #91 = Utf8               augmentString
   #92 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #93 = NameAndType        #91:#92       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #94 = Methodref          #85.#93       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #95 = Utf8               scala/runtime/ScalaRunTime$
   #96 = Class              #95           // scala/runtime/ScalaRunTime$
   #97 = Utf8               Lscala/runtime/ScalaRunTime$;
   #98 = NameAndType        #47:#97       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #99 = Fieldref           #96.#98       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #100 = Utf8               org/xml/sax/SAXParseException
  #101 = Class              #100          // org/xml/sax/SAXParseException
  #102 = Utf8               getLineNumber
  #103 = Utf8               ()I
  #104 = NameAndType        #102:#103     // getLineNumber:()I
  #105 = Methodref          #101.#104     // org/xml/sax/SAXParseException.getLineNumber:()I
  #106 = Utf8               scala/runtime/BoxesRunTime
  #107 = Class              #106          // scala/runtime/BoxesRunTime
  #108 = Utf8               boxToInteger
  #109 = Utf8               (I)Ljava/lang/Integer;
  #110 = NameAndType        #108:#109     // boxToInteger:(I)Ljava/lang/Integer;
  #111 = Methodref          #107.#110     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #112 = Utf8               getColumnNumber
  #113 = NameAndType        #112:#103     // getColumnNumber:()I
  #114 = Methodref          #101.#113     // org/xml/sax/SAXParseException.getColumnNumber:()I
  #115 = Utf8               getMessage
  #116 = Utf8               ()Ljava/lang/String;
  #117 = NameAndType        #115:#116     // getMessage:()Ljava/lang/String;
  #118 = Methodref          #101.#117     // org/xml/sax/SAXParseException.getMessage:()Ljava/lang/String;
  #119 = Utf8               genericWrapArray
  #120 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #121 = NameAndType        #119:#120     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #122 = Methodref          #96.#121      // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #123 = Utf8               format$extension
  #124 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #125 = NameAndType        #123:#124     // format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #126 = Methodref          #80.#125      // scala/collection/StringOps$.format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #127 = Utf8               println
  #128 = Utf8               (Ljava/lang/Object;)V
  #129 = NameAndType        #127:#128     // println:(Ljava/lang/Object;)V
  #130 = Methodref          #46.#129      // scala/Console$.println:(Ljava/lang/Object;)V
  #131 = Utf8               flush
  #132 = NameAndType        #131:#55      // flush:()V
  #133 = Methodref          #46.#132      // scala/Console$.flush:()V
  #134 = Utf8               s
  #135 = Utf8               $init$
  #136 = Utf8               (Lscala/xml/parsing/ConsoleErrorHandler;)V
  #137 = Utf8               $deserializeLambda$
  #138 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #139 = Utf8               scala/runtime/LambdaDeserialize
  #140 = Class              #139          // scala/runtime/LambdaDeserialize
  #141 = Utf8               bootstrap
  #142 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #143 = NameAndType        #141:#142     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #144 = Methodref          #140.#143     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #145 = MethodHandle       6:#144        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #146 = Utf8               lambdaDeserialize
  #147 = NameAndType        #146:#138     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #148 = InvokeDynamic      #1:#147       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #149 = Utf8               Code
  #150 = Utf8               LineNumberTable
  #151 = Utf8               LocalVariableTable
  #152 = Utf8               MethodParameters
  #153 = Utf8               InnerClasses
  #154 = Utf8               SourceFile
  #155 = Utf8               RuntimeVisibleAnnotations
  #156 = Utf8               BootstrapMethods
  #157 = Utf8               ScalaInlineInfo
  #158 = Utf8               ScalaSig
{
  public static void warning$(scala.xml.parsing.ConsoleErrorHandler, org.xml.sax.SAXParseException);
    descriptor: (Lscala/xml/parsing/ConsoleErrorHandler;Lorg/xml/sax/SAXParseException;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #21                 // InterfaceMethod warning:(Lorg/xml/sax/SAXParseException;)V
         5: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/xml/parsing/ConsoleErrorHandler;
            0       6     1    ex   Lorg/xml/sax/SAXParseException;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      ex                             final

  public default void warning(org.xml.sax.SAXParseException);
    descriptor: (Lorg/xml/sax/SAXParseException;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lscala/xml/parsing/ConsoleErrorHandler;
            0       1     1    ex   Lorg/xml/sax/SAXParseException;
    MethodParameters:
      Name                           Flags
      ex                             final

  public static void error$(scala.xml.parsing.ConsoleErrorHandler, org.xml.sax.SAXParseException);
    descriptor: (Lscala/xml/parsing/ConsoleErrorHandler;Lorg/xml/sax/SAXParseException;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #28                 // InterfaceMethod error:(Lorg/xml/sax/SAXParseException;)V
         5: return
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/xml/parsing/ConsoleErrorHandler;
            0       6     1    ex   Lorg/xml/sax/SAXParseException;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      ex                             final

  public default void error(org.xml.sax.SAXParseException);
    descriptor: (Lorg/xml/sax/SAXParseException;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc           #30                 // String Error
         3: aload_1
         4: invokeinterface #34,  3           // InterfaceMethod printError:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
         9: return
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/xml/parsing/ConsoleErrorHandler;
            0      10     1    ex   Lorg/xml/sax/SAXParseException;
    MethodParameters:
      Name                           Flags
      ex                             final

  public static void fatalError$(scala.xml.parsing.ConsoleErrorHandler, org.xml.sax.SAXParseException);
    descriptor: (Lscala/xml/parsing/ConsoleErrorHandler;Lorg/xml/sax/SAXParseException;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #38                 // InterfaceMethod fatalError:(Lorg/xml/sax/SAXParseException;)V
         5: return
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/xml/parsing/ConsoleErrorHandler;
            0       6     1    ex   Lorg/xml/sax/SAXParseException;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      ex                             final

  public default void fatalError(org.xml.sax.SAXParseException);
    descriptor: (Lorg/xml/sax/SAXParseException;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc           #40                 // String Fatal Error
         3: aload_1
         4: invokeinterface #34,  3           // InterfaceMethod printError:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
         9: return
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/xml/parsing/ConsoleErrorHandler;
            0      10     1    ex   Lorg/xml/sax/SAXParseException;
    MethodParameters:
      Name                           Flags
      ex                             final

  public static void printError$(scala.xml.parsing.ConsoleErrorHandler, java.lang.String, org.xml.sax.SAXParseException);
    descriptor: (Lscala/xml/parsing/ConsoleErrorHandler;Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #34                 // InterfaceMethod printError:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
         6: return
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/xml/parsing/ConsoleErrorHandler;
            0       7     1 errtype   Ljava/lang/String;
            0       7     2    ex   Lorg/xml/sax/SAXParseException;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      errtype                        final
      ex                             final

  public default void printError(java.lang.String, org.xml.sax.SAXParseException);
    descriptor: (Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #50                 // Field scala/Console$.MODULE$:Lscala/Console$;
         3: getstatic     #50                 // Field scala/Console$.MODULE$:Lscala/Console$;
         6: invokevirtual #54                 // Method scala/Console$.err:()Ljava/io/PrintStream;
         9: aload_1
        10: aload_2
        11: invokedynamic #72,  0             // InvokeDynamic #0:apply$mcV$sp:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)Lscala/runtime/java8/JFunction0$mcV$sp;
        16: invokevirtual #76                 // Method scala/Console$.withOut:(Ljava/io/PrintStream;Lscala/Function0;)Ljava/lang/Object;
        19: pop
        20: return
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/xml/parsing/ConsoleErrorHandler;
            0      21     1 errtype   Ljava/lang/String;
            0      21     2    ex   Lorg/xml/sax/SAXParseException;
    MethodParameters:
      Name                           Flags
      errtype                        final
      ex                             final

  public static void $anonfun$printError$1(java.lang.String, org.xml.sax.SAXParseException);
    descriptor: (Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=7, locals=3, args_size=2
         0: getstatic     #83                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #88                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: ldc           #90                 // String [%s]:%d:%d: %s
         8: invokevirtual #94                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        11: getstatic     #99                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        14: iconst_4
        15: anewarray     #4                  // class java/lang/Object
        18: dup
        19: iconst_0
        20: aload_0
        21: aastore
        22: dup
        23: iconst_1
        24: aload_1
        25: invokevirtual #105                // Method org/xml/sax/SAXParseException.getLineNumber:()I
        28: invokestatic  #111                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        31: aastore
        32: dup
        33: iconst_2
        34: aload_1
        35: invokevirtual #114                // Method org/xml/sax/SAXParseException.getColumnNumber:()I
        38: invokestatic  #111                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        41: aastore
        42: dup
        43: iconst_3
        44: aload_1
        45: invokevirtual #118                // Method org/xml/sax/SAXParseException.getMessage:()Ljava/lang/String;
        48: aastore
        49: invokevirtual #122                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        52: invokevirtual #126                // Method scala/collection/StringOps$.format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
        55: astore_2
        56: getstatic     #50                 // Field scala/Console$.MODULE$:Lscala/Console$;
        59: aload_2
        60: invokevirtual #130                // Method scala/Console$.println:(Ljava/lang/Object;)V
        63: getstatic     #50                 // Field scala/Console$.MODULE$:Lscala/Console$;
        66: invokevirtual #133                // Method scala/Console$.flush:()V
        69: return
      LineNumberTable:
        line 30: 0
        line 31: 20
        line 32: 56
        line 33: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           56      13     2     s   Ljava/lang/String;
            0      70     0 errtype$1   Ljava/lang/String;
            0      70     1  ex$1   Lorg/xml/sax/SAXParseException;
    MethodParameters:
      Name                           Flags
      errtype$1                      final
      ex$1                           final

  public static void $init$(scala.xml.parsing.ConsoleErrorHandler);
    descriptor: (Lscala/xml/parsing/ConsoleErrorHandler;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/xml/parsing/ConsoleErrorHandler;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #148,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "FactoryAdapter.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t3qAB\u0004\u0011\u0002\u0007\u0005a\u0002C\u0003\u001b\u0001\u0011\u00051\u0004C\u0003!\u0001\u0011\u0005\u0013\u0005C\u0003-\u0001\u0011\u0005S\u0006C\u00030\u0001\u0011\u0005\u0003\u0007C\u00033\u0001\u0011E1GA\nD_:\u001cx\u000e\\3FeJ|\'\u000fS1oI2,\'O\u0003\u0002\t\u0013\u00059\u0001/\u0019:tS:<\'B\u0001\u0006\f\u0003\rAX\u000e\u001c\u0006\u0002\u0019\u0005)1oY1mC\u000e\u00011C\u0001\u0001\u0010!\t\u0001\u0002$D\u0001\u0012\u0015\t\u00112#A\u0004iK2\u0004XM]:\u000b\u0005Q)\u0012aA:bq*\u0011!B\u0006\u0006\u0002/\u0005\u0019qN]4\n\u0005e\t\"A\u0004#fM\u0006,H\u000e\u001e%b]\u0012dWM]\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0003q\u0001\"!\b\u0010\u000e\u0003-I!aH\u0006\u0003\tUs\u0017\u000e^\u0001\bo\u0006\u0014h.\u001b8h)\ta\"\u0005C\u0003$\u0005\u0001\u0007A%\u0001\u0002fqB\u0011Q%\u000b\b\u0003M\u001dj\u0011!C\u0005\u0003Q%\tq\u0001]1dW\u0006<W-\u0003\u0002+W\t\t2+\u0011-QCJ\u001cX-\u0012=dKB$\u0018n\u001c8\u000b\u0005!J\u0011!B3se>\u0014HC\u0001\u000f/\u0011\u0015\u00193\u00011\u0001%\u0003)1\u0017\r^1m\u000bJ\u0014xN\u001d\u000b\u00039EBQa\t\u0003A\u0002\u0011\n!\u0002\u001d:j]R,%O]8s)\raB\'\u0011\u0005\u0006k\u0015\u0001\rAN\u0001\bKJ\u0014H/\u001f9f!\t9dH\u0004\u00029yA\u0011\u0011hC\u0007\u0002u)\u00111(D\u0001\u0007yI|w\u000e\u001e \n\u0005uZ\u0011A\u0002)sK\u0012,g-\u0003\u0002@\u0001\n11\u000b\u001e:j]\u001eT!!P\u0006\t\u000b\r*\u0001\u0019\u0001\u0013"
    )
BootstrapMethods:
  0: #68 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #56 ()V
      #60 REF_invokeStatic scala/xml/parsing/ConsoleErrorHandler.$anonfun$printError$1:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
      #56 ()V
      #61 1
  1: #145 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #60 REF_invokeStatic scala/xml/parsing/ConsoleErrorHandler.$anonfun$printError$1:(Ljava/lang/String;Lorg/xml/sax/SAXParseException;)V
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 00 00 0A 00 39 00 20 01 00 87 00 88 01 00 1A
   00 13 00 00 19 00 0F 01 00 24 00 13 00 00 23 00
   0F 01 00 1F 00 20 00 00 29 00 2A 01 00 12 00 13
   00 00 0E 00 0F 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
