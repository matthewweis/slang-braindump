Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper.class
  Last modified May 29, 2022; size 4439 bytes
  SHA-256 checksum a132505e11817ba60e0a9f05c8cac843c118add53c56a4cfdc5ef7b1241ee3f3
  Compiled from "JavaCollectionWrappers.scala"
public class scala.collection.convert.JavaCollectionWrappers$ConcurrentMapWrapper<K extends java.lang.Object, V extends java.lang.Object> extends scala.collection.convert.JavaCollectionWrappers$MutableMapWrapper<K, V> implements java.util.concurrent.ConcurrentMap<K, V>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper
  super_class: #5                         // scala/collection/convert/JavaCollectionWrappers$MutableMapWrapper
  interfaces: 1, fields: 1, methods: 14, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper
    #2 = Class              #1            // scala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/convert/JavaCollectionWrappers$MutableMapWrapper<TK;TV;>;Ljava/util/concurrent/ConcurrentMap<TK;TV;>;
    #4 = Utf8               scala/collection/convert/JavaCollectionWrappers$MutableMapWrapper
    #5 = Class              #4            // scala/collection/convert/JavaCollectionWrappers$MutableMapWrapper
    #6 = Utf8               java/util/concurrent/ConcurrentMap
    #7 = Class              #6            // java/util/concurrent/ConcurrentMap
    #8 = Utf8               JavaCollectionWrappers.scala
    #9 = Utf8               scala/collection/convert/JavaCollectionWrappers
   #10 = Class              #9            // scala/collection/convert/JavaCollectionWrappers
   #11 = Utf8               ConcurrentMapWrapper
   #12 = Utf8               MutableMapWrapper
   #13 = Utf8               serialVersionUID
   #14 = Utf8               J
   #15 = Long               3l
   #17 = Utf8               getOrDefault
   #18 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #19 = Utf8               (Ljava/lang/Object;TV;)TV;
   #20 = Utf8               x$1
   #21 = Utf8               x$2
   #22 = NameAndType        #17:#18       // getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #23 = InterfaceMethodref #7.#22        // java/util/concurrent/ConcurrentMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #24 = Utf8               this
   #25 = Utf8               Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
   #26 = Utf8               Ljava/lang/Object;
   #27 = Utf8               forEach
   #28 = Utf8               (Ljava/util/function/BiConsumer;)V
   #29 = Utf8               (Ljava/util/function/BiConsumer<-TK;-TV;>;)V
   #30 = NameAndType        #27:#28       // forEach:(Ljava/util/function/BiConsumer;)V
   #31 = InterfaceMethodref #7.#30        // java/util/concurrent/ConcurrentMap.forEach:(Ljava/util/function/BiConsumer;)V
   #32 = Utf8               Ljava/util/function/BiConsumer;
   #33 = Utf8               replaceAll
   #34 = Utf8               (Ljava/util/function/BiFunction;)V
   #35 = Utf8               (Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)V
   #36 = NameAndType        #33:#34       // replaceAll:(Ljava/util/function/BiFunction;)V
   #37 = InterfaceMethodref #7.#36        // java/util/concurrent/ConcurrentMap.replaceAll:(Ljava/util/function/BiFunction;)V
   #38 = Utf8               Ljava/util/function/BiFunction;
   #39 = Utf8               computeIfAbsent
   #40 = Utf8               (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
   #41 = Utf8               (TK;Ljava/util/function/Function<-TK;+TV;>;)TV;
   #42 = NameAndType        #39:#40       // computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
   #43 = InterfaceMethodref #7.#42        // java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
   #44 = Utf8               Ljava/util/function/Function;
   #45 = Utf8               computeIfPresent
   #46 = Utf8               (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
   #47 = Utf8               (TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;
   #48 = NameAndType        #45:#46       // computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
   #49 = InterfaceMethodref #7.#48        // java/util/concurrent/ConcurrentMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
   #50 = Utf8               compute
   #51 = NameAndType        #50:#46       // compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
   #52 = InterfaceMethodref #7.#51        // java/util/concurrent/ConcurrentMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
   #53 = Utf8               merge
   #54 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
   #55 = Utf8               (TK;TV;Ljava/util/function/BiFunction<-TV;-TV;+TV;>;)TV;
   #56 = Utf8               x$3
   #57 = NameAndType        #53:#54       // merge:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
   #58 = InterfaceMethodref #7.#57        // java/util/concurrent/ConcurrentMap.merge:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
   #59 = Utf8               underlying
   #60 = Utf8               ()Lscala/collection/concurrent/Map;
   #61 = Utf8               ()Lscala/collection/concurrent/Map<TK;TV;>;
   #62 = Utf8               ()Lscala/collection/mutable/Map;
   #63 = NameAndType        #59:#62       // underlying:()Lscala/collection/mutable/Map;
   #64 = Methodref          #5.#63        // scala/collection/convert/JavaCollectionWrappers$MutableMapWrapper.underlying:()Lscala/collection/mutable/Map;
   #65 = Utf8               scala/collection/concurrent/Map
   #66 = Class              #65           // scala/collection/concurrent/Map
   #67 = Utf8               putIfAbsent
   #68 = Utf8               (TK;TV;)TV;
   #69 = Utf8               k
   #70 = Utf8               v
   #71 = NameAndType        #59:#60       // underlying:()Lscala/collection/concurrent/Map;
   #72 = Methodref          #2.#71        // scala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper.underlying:()Lscala/collection/concurrent/Map;
   #73 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
   #74 = NameAndType        #67:#73       // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
   #75 = InterfaceMethodref #66.#74       // scala/collection/concurrent/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
   #76 = Utf8               scala/Some
   #77 = Class              #76           // scala/Some
   #78 = Utf8               value
   #79 = Utf8               ()Ljava/lang/Object;
   #80 = NameAndType        #78:#79       // value:()Ljava/lang/Object;
   #81 = Methodref          #77.#80       // scala/Some.value:()Ljava/lang/Object;
   #82 = Utf8               scala/None$
   #83 = Class              #82           // scala/None$
   #84 = Utf8               MODULE$
   #85 = Utf8               Lscala/None$;
   #86 = NameAndType        #84:#85       // MODULE$:Lscala/None$;
   #87 = Fieldref           #83.#86       // scala/None$.MODULE$:Lscala/None$;
   #88 = Utf8               java/lang/Object
   #89 = Class              #88           // java/lang/Object
   #90 = Utf8               equals
   #91 = Utf8               (Ljava/lang/Object;)Z
   #92 = NameAndType        #90:#91       // equals:(Ljava/lang/Object;)Z
   #93 = Methodref          #89.#92       // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #94 = Utf8               scala/MatchError
   #95 = Class              #94           // scala/MatchError
   #96 = Utf8               <init>
   #97 = Utf8               (Ljava/lang/Object;)V
   #98 = NameAndType        #96:#97       // "<init>":(Ljava/lang/Object;)V
   #99 = Methodref          #95.#98       // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #100 = Utf8               scala/Option
  #101 = Class              #100          // scala/Option
  #102 = Utf8               remove
  #103 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #104 = Utf8               java/lang/ClassCastException
  #105 = Class              #104          // java/lang/ClassCastException
  #106 = NameAndType        #102:#103     // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #107 = InterfaceMethodref #66.#106      // scala/collection/concurrent/Map.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #108 = Utf8               replace
  #109 = NameAndType        #108:#73      // replace:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  #110 = InterfaceMethodref #66.#109      // scala/collection/concurrent/Map.replace:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  #111 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
  #112 = Utf8               (TK;TV;TV;)Z
  #113 = Utf8               oldval
  #114 = Utf8               newval
  #115 = NameAndType        #108:#111     // replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
  #116 = InterfaceMethodref #66.#115      // scala/collection/concurrent/Map.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
  #117 = Utf8               (Lscala/collection/concurrent/Map;)V
  #118 = Utf8               (Lscala/collection/concurrent/Map<TK;TV;>;)V
  #119 = Utf8               (Lscala/collection/mutable/Map;)V
  #120 = NameAndType        #96:#119      // "<init>":(Lscala/collection/mutable/Map;)V
  #121 = Methodref          #5.#120       // scala/collection/convert/JavaCollectionWrappers$MutableMapWrapper."<init>":(Lscala/collection/mutable/Map;)V
  #122 = Utf8               Lscala/collection/concurrent/Map;
  #123 = Utf8               ConstantValue
  #124 = Utf8               Code
  #125 = Utf8               LineNumberTable
  #126 = Utf8               LocalVariableTable
  #127 = Utf8               Signature
  #128 = Utf8               MethodParameters
  #129 = Utf8               StackMapTable
  #130 = Utf8               InnerClasses
  #131 = Utf8               SourceFile
  #132 = Utf8               ScalaInlineInfo
  #133 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 3l

  public V getOrDefault(java.lang.Object, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #23                 // InterfaceMethod java/util/concurrent/ConcurrentMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0       7     1   x$1   Ljava/lang/Object;
            0       7     2   x$2   Ljava/lang/Object;
    Signature: #19                          // (Ljava/lang/Object;TV;)TV;
    MethodParameters:
      Name                           Flags
      x$1                            final
      x$2                            final

  public void forEach(java.util.function.BiConsumer<? super K, ? super V>);
    descriptor: (Ljava/util/function/BiConsumer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #31                 // InterfaceMethod java/util/concurrent/ConcurrentMap.forEach:(Ljava/util/function/BiConsumer;)V
         5: return
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0       6     1   x$1   Ljava/util/function/BiConsumer;
    Signature: #29                          // (Ljava/util/function/BiConsumer<-TK;-TV;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void replaceAll(java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    descriptor: (Ljava/util/function/BiFunction;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #37                 // InterfaceMethod java/util/concurrent/ConcurrentMap.replaceAll:(Ljava/util/function/BiFunction;)V
         5: return
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0       6     1   x$1   Ljava/util/function/BiFunction;
    Signature: #35                          // (Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public V computeIfAbsent(K, java.util.function.Function<? super K, ? extends V>);
    descriptor: (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #43                 // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0       7     1   x$1   Ljava/lang/Object;
            0       7     2   x$2   Ljava/util/function/Function;
    Signature: #41                          // (TK;Ljava/util/function/Function<-TK;+TV;>;)TV;
    MethodParameters:
      Name                           Flags
      x$1                            final
      x$2                            final

  public V computeIfPresent(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    descriptor: (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #49                 // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0       7     1   x$1   Ljava/lang/Object;
            0       7     2   x$2   Ljava/util/function/BiFunction;
    Signature: #47                          // (TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;
    MethodParameters:
      Name                           Flags
      x$1                            final
      x$2                            final

  public V compute(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    descriptor: (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #52                 // InterfaceMethod java/util/concurrent/ConcurrentMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0       7     1   x$1   Ljava/lang/Object;
            0       7     2   x$2   Ljava/util/function/BiFunction;
    Signature: #47                          // (TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;
    MethodParameters:
      Name                           Flags
      x$1                            final
      x$2                            final

  public V merge(K, V, java.util.function.BiFunction<? super V, ? super V, ? extends V>);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokespecial #58                 // InterfaceMethod java/util/concurrent/ConcurrentMap.merge:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0       8     1   x$1   Ljava/lang/Object;
            0       8     2   x$2   Ljava/lang/Object;
            0       8     3   x$3   Ljava/util/function/BiFunction;
    Signature: #55                          // (TK;TV;Ljava/util/function/BiFunction<-TV;-TV;+TV;>;)TV;
    MethodParameters:
      Name                           Flags
      x$1                            final
      x$2                            final
      x$3                            final

  public scala.collection.concurrent.Map<K, V> underlying();
    descriptor: ()Lscala/collection/concurrent/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #64                 // Method scala/collection/convert/JavaCollectionWrappers$MutableMapWrapper.underlying:()Lscala/collection/mutable/Map;
         4: checkcast     #66                 // class scala/collection/concurrent/Map
         7: areturn
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
    Signature: #61                          // ()Lscala/collection/concurrent/Map<TK;TV;>;

  public V putIfAbsent(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_0
         1: invokevirtual #72                 // Method underlying:()Lscala/collection/concurrent/Map;
         4: aload_1
         5: aload_2
         6: invokeinterface #75,  3           // InterfaceMethod scala/collection/concurrent/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
        11: astore        4
        13: aload         4
        15: instanceof    #77                 // class scala/Some
        18: ifeq          33
        21: aload         4
        23: checkcast     #77                 // class scala/Some
        26: invokevirtual #81                 // Method scala/Some.value:()Ljava/lang/Object;
        29: astore_3
        30: goto          59
        33: getstatic     #87                 // Field scala/None$.MODULE$:Lscala/None$;
        36: aload         4
        38: invokevirtual #93                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        41: ifeq          49
        44: aconst_null
        45: astore_3
        46: goto          59
        49: new           #95                 // class scala/MatchError
        52: dup
        53: aload         4
        55: invokespecial #99                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        58: athrow
        59: aload_3
        60: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ top, class scala/Option ]
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper, class java/lang/Object, class java/lang/Object, class java/lang/Object, class scala/Option ]
          stack = []
      LineNumberTable:
        line 386: 0
        line 387: 13
        line 388: 33
        line 386: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0      61     1     k   Ljava/lang/Object;
            0      61     2     v   Ljava/lang/Object;
    Signature: #68                          // (TK;TV;)TV;
    MethodParameters:
      Name                           Flags
      k                              final
      v                              final

  public boolean remove(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #72                 // Method underlying:()Lscala/collection/concurrent/Map;
         4: aload_1
         5: aload_2
         6: invokeinterface #107,  3          // InterfaceMethod scala/collection/concurrent/Map.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
        11: ireturn
        12: pop
        13: iconst_0
        14: ireturn
      Exception table:
         from    to  target type
             0    11    12   Class java/lang/ClassCastException
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/lang/ClassCastException ]
      LineNumberTable:
        line 392: 0
        line 395: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0      15     1     k   Ljava/lang/Object;
            0      15     2     v   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      k                              final
      v                              final

  public V replace(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_0
         1: invokevirtual #72                 // Method underlying:()Lscala/collection/concurrent/Map;
         4: aload_1
         5: aload_2
         6: invokeinterface #110,  3          // InterfaceMethod scala/collection/concurrent/Map.replace:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
        11: astore        4
        13: aload         4
        15: instanceof    #77                 // class scala/Some
        18: ifeq          33
        21: aload         4
        23: checkcast     #77                 // class scala/Some
        26: invokevirtual #81                 // Method scala/Some.value:()Ljava/lang/Object;
        29: astore_3
        30: goto          59
        33: getstatic     #87                 // Field scala/None$.MODULE$:Lscala/None$;
        36: aload         4
        38: invokevirtual #93                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        41: ifeq          49
        44: aconst_null
        45: astore_3
        46: goto          59
        49: new           #95                 // class scala/MatchError
        52: dup
        53: aload         4
        55: invokespecial #99                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        58: athrow
        59: aload_3
        60: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ top, class scala/Option ]
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper, class java/lang/Object, class java/lang/Object, class java/lang/Object, class scala/Option ]
          stack = []
      LineNumberTable:
        line 398: 0
        line 399: 13
        line 400: 33
        line 398: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0      61     1     k   Ljava/lang/Object;
            0      61     2     v   Ljava/lang/Object;
    Signature: #68                          // (TK;TV;)TV;
    MethodParameters:
      Name                           Flags
      k                              final
      v                              final

  public boolean replace(K, V, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokevirtual #72                 // Method underlying:()Lscala/collection/concurrent/Map;
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokeinterface #116,  4          // InterfaceMethod scala/collection/concurrent/Map.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
        12: ireturn
      LineNumberTable:
        line 403: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0      13     1     k   Ljava/lang/Object;
            0      13     2 oldval   Ljava/lang/Object;
            0      13     3 newval   Ljava/lang/Object;
    Signature: #112                         // (TK;TV;TV;)Z
    MethodParameters:
      Name                           Flags
      k                              final
      oldval                         final
      newval                         final

  public scala.collection.mutable.Map underlying();
    descriptor: ()Lscala/collection/mutable/Map;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #72                 // Method underlying:()Lscala/collection/concurrent/Map;
         4: areturn
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;

  public scala.collection.convert.JavaCollectionWrappers$ConcurrentMapWrapper(scala.collection.concurrent.Map<K, V>);
    descriptor: (Lscala/collection/concurrent/Map;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #121                // Method scala/collection/convert/JavaCollectionWrappers$MutableMapWrapper."<init>":(Lscala/collection/mutable/Map;)V
         5: return
      LineNumberTable:
        line 384: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper;
            0       6     1 underlying   Lscala/collection/concurrent/Map;
    Signature: #118                         // (Lscala/collection/concurrent/Map<TK;TV;>;)V
    MethodParameters:
      Name                           Flags
      underlying                     final
}
InnerClasses:
  public static #11= #2 of #10;           // ConcurrentMapWrapper=class scala/collection/convert/JavaCollectionWrappers$ConcurrentMapWrapper of class scala/collection/convert/JavaCollectionWrappers
  public static #12= #5 of #10;           // MutableMapWrapper=class scala/collection/convert/JavaCollectionWrappers$MutableMapWrapper of class scala/collection/convert/JavaCollectionWrappers
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/convert/JavaCollectionWrappers$MutableMapWrapper<TK;TV;>;Ljava/util/concurrent/ConcurrentMap<TK;TV;>;
SourceFile: "JavaCollectionWrappers.scala"
  ScalaInlineInfo: length = 0x4A (unknown attribute)
   01 00 00 0E 00 60 00 75 00 00 32 00 2E 00 00 27
   00 28 00 00 2D 00 2E 00 00 1B 00 1C 00 00 11 00
   12 00 00 35 00 36 00 00 43 00 12 00 00 66 00 67
   00 00 6C 00 12 00 00 6C 00 6F 00 00 21 00 22 00
   00 3B 00 3C 00 00 3B 00 3E 00
  Scala: length = 0x0 (unknown attribute)

