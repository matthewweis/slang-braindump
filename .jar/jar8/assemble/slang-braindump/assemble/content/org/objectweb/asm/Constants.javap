Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/objectweb/asm/Constants.class
  Last modified May 29, 2022; size 6624 bytes
  SHA-256 checksum 51b3b25491349822981c3bad51c7928e079d8217ab8c9028e50d4a9f1bdae337
  Compiled from "Constants.java"
final class org.objectweb.asm.Constants
  minor version: 0
  major version: 49
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/objectweb/asm/Constants
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 99, methods: 4, attributes: 1
Constant pool:
    #1 = Utf8               org/objectweb/asm/Constants
    #2 = Class              #1            // org/objectweb/asm/Constants
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Constants.java
    #6 = Utf8               CONSTANT_VALUE
    #7 = Utf8               Ljava/lang/String;
    #8 = Utf8               ConstantValue
    #9 = String             #8            // ConstantValue
   #10 = Utf8               CODE
   #11 = Utf8               Code
   #12 = String             #11           // Code
   #13 = Utf8               STACK_MAP_TABLE
   #14 = Utf8               StackMapTable
   #15 = String             #14           // StackMapTable
   #16 = Utf8               EXCEPTIONS
   #17 = Utf8               Exceptions
   #18 = String             #17           // Exceptions
   #19 = Utf8               INNER_CLASSES
   #20 = Utf8               InnerClasses
   #21 = String             #20           // InnerClasses
   #22 = Utf8               ENCLOSING_METHOD
   #23 = Utf8               EnclosingMethod
   #24 = String             #23           // EnclosingMethod
   #25 = Utf8               SYNTHETIC
   #26 = Utf8               Synthetic
   #27 = String             #26           // Synthetic
   #28 = Utf8               SIGNATURE
   #29 = Utf8               Signature
   #30 = String             #29           // Signature
   #31 = Utf8               SOURCE_FILE
   #32 = Utf8               SourceFile
   #33 = String             #32           // SourceFile
   #34 = Utf8               SOURCE_DEBUG_EXTENSION
   #35 = Utf8               SourceDebugExtension
   #36 = String             #35           // SourceDebugExtension
   #37 = Utf8               LINE_NUMBER_TABLE
   #38 = Utf8               LineNumberTable
   #39 = String             #38           // LineNumberTable
   #40 = Utf8               LOCAL_VARIABLE_TABLE
   #41 = Utf8               LocalVariableTable
   #42 = String             #41           // LocalVariableTable
   #43 = Utf8               LOCAL_VARIABLE_TYPE_TABLE
   #44 = Utf8               LocalVariableTypeTable
   #45 = String             #44           // LocalVariableTypeTable
   #46 = Utf8               DEPRECATED
   #47 = Utf8               Deprecated
   #48 = String             #47           // Deprecated
   #49 = Utf8               RUNTIME_VISIBLE_ANNOTATIONS
   #50 = Utf8               RuntimeVisibleAnnotations
   #51 = String             #50           // RuntimeVisibleAnnotations
   #52 = Utf8               RUNTIME_INVISIBLE_ANNOTATIONS
   #53 = Utf8               RuntimeInvisibleAnnotations
   #54 = String             #53           // RuntimeInvisibleAnnotations
   #55 = Utf8               RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS
   #56 = Utf8               RuntimeVisibleParameterAnnotations
   #57 = String             #56           // RuntimeVisibleParameterAnnotations
   #58 = Utf8               RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS
   #59 = Utf8               RuntimeInvisibleParameterAnnotations
   #60 = String             #59           // RuntimeInvisibleParameterAnnotations
   #61 = Utf8               RUNTIME_VISIBLE_TYPE_ANNOTATIONS
   #62 = Utf8               RuntimeVisibleTypeAnnotations
   #63 = String             #62           // RuntimeVisibleTypeAnnotations
   #64 = Utf8               RUNTIME_INVISIBLE_TYPE_ANNOTATIONS
   #65 = Utf8               RuntimeInvisibleTypeAnnotations
   #66 = String             #65           // RuntimeInvisibleTypeAnnotations
   #67 = Utf8               ANNOTATION_DEFAULT
   #68 = Utf8               AnnotationDefault
   #69 = String             #68           // AnnotationDefault
   #70 = Utf8               BOOTSTRAP_METHODS
   #71 = Utf8               BootstrapMethods
   #72 = String             #71           // BootstrapMethods
   #73 = Utf8               METHOD_PARAMETERS
   #74 = Utf8               MethodParameters
   #75 = String             #74           // MethodParameters
   #76 = Utf8               MODULE
   #77 = Utf8               Module
   #78 = String             #77           // Module
   #79 = Utf8               MODULE_PACKAGES
   #80 = Utf8               ModulePackages
   #81 = String             #80           // ModulePackages
   #82 = Utf8               MODULE_MAIN_CLASS
   #83 = Utf8               ModuleMainClass
   #84 = String             #83           // ModuleMainClass
   #85 = Utf8               NEST_HOST
   #86 = Utf8               NestHost
   #87 = String             #86           // NestHost
   #88 = Utf8               NEST_MEMBERS
   #89 = Utf8               NestMembers
   #90 = String             #89           // NestMembers
   #91 = Utf8               PERMITTED_SUBCLASSES
   #92 = Utf8               PermittedSubclasses
   #93 = String             #92           // PermittedSubclasses
   #94 = Utf8               RECORD
   #95 = Utf8               Record
   #96 = String             #95           // Record
   #97 = Utf8               ACC_CONSTRUCTOR
   #98 = Utf8               I
   #99 = Integer            262144
  #100 = Utf8               F_INSERT
  #101 = Integer            256
  #102 = Utf8               LDC_W
  #103 = Integer            19
  #104 = Utf8               LDC2_W
  #105 = Integer            20
  #106 = Utf8               ILOAD_0
  #107 = Integer            26
  #108 = Utf8               ILOAD_1
  #109 = Integer            27
  #110 = Utf8               ILOAD_2
  #111 = Integer            28
  #112 = Utf8               ILOAD_3
  #113 = Integer            29
  #114 = Utf8               LLOAD_0
  #115 = Integer            30
  #116 = Utf8               LLOAD_1
  #117 = Integer            31
  #118 = Utf8               LLOAD_2
  #119 = Integer            32
  #120 = Utf8               LLOAD_3
  #121 = Integer            33
  #122 = Utf8               FLOAD_0
  #123 = Integer            34
  #124 = Utf8               FLOAD_1
  #125 = Integer            35
  #126 = Utf8               FLOAD_2
  #127 = Integer            36
  #128 = Utf8               FLOAD_3
  #129 = Integer            37
  #130 = Utf8               DLOAD_0
  #131 = Integer            38
  #132 = Utf8               DLOAD_1
  #133 = Integer            39
  #134 = Utf8               DLOAD_2
  #135 = Integer            40
  #136 = Utf8               DLOAD_3
  #137 = Integer            41
  #138 = Utf8               ALOAD_0
  #139 = Integer            42
  #140 = Utf8               ALOAD_1
  #141 = Integer            43
  #142 = Utf8               ALOAD_2
  #143 = Integer            44
  #144 = Utf8               ALOAD_3
  #145 = Integer            45
  #146 = Utf8               ISTORE_0
  #147 = Integer            59
  #148 = Utf8               ISTORE_1
  #149 = Integer            60
  #150 = Utf8               ISTORE_2
  #151 = Integer            61
  #152 = Utf8               ISTORE_3
  #153 = Integer            62
  #154 = Utf8               LSTORE_0
  #155 = Integer            63
  #156 = Utf8               LSTORE_1
  #157 = Integer            64
  #158 = Utf8               LSTORE_2
  #159 = Integer            65
  #160 = Utf8               LSTORE_3
  #161 = Integer            66
  #162 = Utf8               FSTORE_0
  #163 = Integer            67
  #164 = Utf8               FSTORE_1
  #165 = Integer            68
  #166 = Utf8               FSTORE_2
  #167 = Integer            69
  #168 = Utf8               FSTORE_3
  #169 = Integer            70
  #170 = Utf8               DSTORE_0
  #171 = Integer            71
  #172 = Utf8               DSTORE_1
  #173 = Integer            72
  #174 = Utf8               DSTORE_2
  #175 = Integer            73
  #176 = Utf8               DSTORE_3
  #177 = Integer            74
  #178 = Utf8               ASTORE_0
  #179 = Integer            75
  #180 = Utf8               ASTORE_1
  #181 = Integer            76
  #182 = Utf8               ASTORE_2
  #183 = Integer            77
  #184 = Utf8               ASTORE_3
  #185 = Integer            78
  #186 = Utf8               WIDE
  #187 = Integer            196
  #188 = Utf8               GOTO_W
  #189 = Integer            200
  #190 = Utf8               JSR_W
  #191 = Integer            201
  #192 = Utf8               WIDE_JUMP_OPCODE_DELTA
  #193 = Utf8               ASM_OPCODE_DELTA
  #194 = Integer            49
  #195 = Utf8               ASM_IFNULL_OPCODE_DELTA
  #196 = Utf8               ASM_IFEQ
  #197 = Integer            202
  #198 = Utf8               ASM_IFNE
  #199 = Integer            203
  #200 = Utf8               ASM_IFLT
  #201 = Integer            204
  #202 = Utf8               ASM_IFGE
  #203 = Integer            205
  #204 = Utf8               ASM_IFGT
  #205 = Integer            206
  #206 = Utf8               ASM_IFLE
  #207 = Integer            207
  #208 = Utf8               ASM_IF_ICMPEQ
  #209 = Integer            208
  #210 = Utf8               ASM_IF_ICMPNE
  #211 = Integer            209
  #212 = Utf8               ASM_IF_ICMPLT
  #213 = Integer            210
  #214 = Utf8               ASM_IF_ICMPGE
  #215 = Integer            211
  #216 = Utf8               ASM_IF_ICMPGT
  #217 = Integer            212
  #218 = Utf8               ASM_IF_ICMPLE
  #219 = Integer            213
  #220 = Utf8               ASM_IF_ACMPEQ
  #221 = Integer            214
  #222 = Utf8               ASM_IF_ACMPNE
  #223 = Integer            215
  #224 = Utf8               ASM_GOTO
  #225 = Integer            216
  #226 = Utf8               ASM_JSR
  #227 = Integer            217
  #228 = Utf8               ASM_IFNULL
  #229 = Integer            218
  #230 = Utf8               ASM_IFNONNULL
  #231 = Integer            219
  #232 = Utf8               ASM_GOTO_W
  #233 = Integer            220
  #234 = Utf8               <init>
  #235 = Utf8               ()V
  #236 = NameAndType        #234:#235     // "<init>":()V
  #237 = Methodref          #4.#236       // java/lang/Object."<init>":()V
  #238 = Utf8               this
  #239 = Utf8               Lorg/objectweb/asm/Constants;
  #240 = Utf8               checkAsmExperimental
  #241 = Utf8               (Ljava/lang/Object;)V
  #242 = Utf8               getClass
  #243 = Utf8               ()Ljava/lang/Class;
  #244 = NameAndType        #242:#243     // getClass:()Ljava/lang/Class;
  #245 = Methodref          #4.#244       // java/lang/Object.getClass:()Ljava/lang/Class;
  #246 = Utf8               java/lang/Class
  #247 = Class              #246          // java/lang/Class
  #248 = Utf8               getName
  #249 = Utf8               ()Ljava/lang/String;
  #250 = NameAndType        #248:#249     // getName:()Ljava/lang/String;
  #251 = Methodref          #247.#250     // java/lang/Class.getName:()Ljava/lang/String;
  #252 = Utf8               java/lang/String
  #253 = Class              #252          // java/lang/String
  #254 = Utf8               replace
  #255 = Utf8               (CC)Ljava/lang/String;
  #256 = NameAndType        #254:#255     // replace:(CC)Ljava/lang/String;
  #257 = Methodref          #253.#256     // java/lang/String.replace:(CC)Ljava/lang/String;
  #258 = Utf8               isWhitelisted
  #259 = Utf8               (Ljava/lang/String;)Z
  #260 = NameAndType        #258:#259     // isWhitelisted:(Ljava/lang/String;)Z
  #261 = Methodref          #2.#260       // org/objectweb/asm/Constants.isWhitelisted:(Ljava/lang/String;)Z
  #262 = Utf8               getClassLoader
  #263 = Utf8               ()Ljava/lang/ClassLoader;
  #264 = NameAndType        #262:#263     // getClassLoader:()Ljava/lang/ClassLoader;
  #265 = Methodref          #247.#264     // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
  #266 = Utf8               java/lang/StringBuilder
  #267 = Class              #266          // java/lang/StringBuilder
  #268 = Methodref          #267.#236     // java/lang/StringBuilder."<init>":()V
  #269 = Utf8               append
  #270 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #271 = NameAndType        #269:#270     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #272 = Methodref          #267.#271     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #273 = Utf8               .class
  #274 = String             #273          // .class
  #275 = Utf8               toString
  #276 = NameAndType        #275:#249     // toString:()Ljava/lang/String;
  #277 = Methodref          #267.#276     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #278 = Utf8               java/lang/ClassLoader
  #279 = Class              #278          // java/lang/ClassLoader
  #280 = Utf8               getResourceAsStream
  #281 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;
  #282 = NameAndType        #280:#281     // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
  #283 = Methodref          #279.#282     // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
  #284 = Utf8               checkIsPreview
  #285 = Utf8               (Ljava/io/InputStream;)V
  #286 = NameAndType        #284:#285     // checkIsPreview:(Ljava/io/InputStream;)V
  #287 = Methodref          #2.#286       // org/objectweb/asm/Constants.checkIsPreview:(Ljava/io/InputStream;)V
  #288 = Utf8               caller
  #289 = Utf8               Ljava/lang/Object;
  #290 = Utf8               callerClass
  #291 = Utf8               Ljava/lang/Class<*>;
  #292 = Utf8               Ljava/lang/Class;
  #293 = Utf8               internalName
  #294 = Utf8               org/objectweb/asm/
  #295 = String             #294          // org/objectweb/asm/
  #296 = Utf8               startsWith
  #297 = NameAndType        #296:#259     // startsWith:(Ljava/lang/String;)Z
  #298 = Methodref          #253.#297     // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #299 = Utf8               (Annotation|Class|Field|Method|Module|RecordComponent|Signature)
  #300 = String             #299          // (Annotation|Class|Field|Method|Module|RecordComponent|Signature)
  #301 = Utf8               Test$
  #302 = String             #301          // Test$
  #303 = Utf8               contains
  #304 = Utf8               (Ljava/lang/CharSequence;)Z
  #305 = NameAndType        #303:#304     // contains:(Ljava/lang/CharSequence;)Z
  #306 = Methodref          #253.#305     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z
  #307 = Utf8               org/objectweb/asm/util/Trace
  #308 = String             #307          // org/objectweb/asm/util/Trace
  #309 = Utf8               Visitor(\\$.*)?
  #310 = String             #309          // Visitor(\\$.*)?
  #311 = Utf8               java/util/regex/Pattern
  #312 = Class              #311          // java/util/regex/Pattern
  #313 = Utf8               matches
  #314 = Utf8               (Ljava/lang/String;Ljava/lang/CharSequence;)Z
  #315 = NameAndType        #313:#314     // matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
  #316 = Methodref          #312.#315     // java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
  #317 = Utf8               org/objectweb/asm/util/Check
  #318 = String             #317          // org/objectweb/asm/util/Check
  #319 = Utf8               Adapter(\\$.*)?
  #320 = String             #319          // Adapter(\\$.*)?
  #321 = Utf8               member
  #322 = Utf8               java/lang/Throwable
  #323 = Class              #322          // java/lang/Throwable
  #324 = Utf8               java/io/IOException
  #325 = Class              #324          // java/io/IOException
  #326 = Utf8               java/lang/IllegalStateException
  #327 = Class              #326          // java/lang/IllegalStateException
  #328 = Utf8               Bytecode not available, can\'t check class version
  #329 = String             #328          // Bytecode not available, can\'t check class version
  #330 = Utf8               (Ljava/lang/String;)V
  #331 = NameAndType        #234:#330     // "<init>":(Ljava/lang/String;)V
  #332 = Methodref          #327.#331     // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
  #333 = Utf8               java/io/DataInputStream
  #334 = Class              #333          // java/io/DataInputStream
  #335 = NameAndType        #234:#285     // "<init>":(Ljava/io/InputStream;)V
  #336 = Methodref          #334.#335     // java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
  #337 = Utf8               readInt
  #338 = Utf8               ()I
  #339 = NameAndType        #337:#338     // readInt:()I
  #340 = Methodref          #334.#339     // java/io/DataInputStream.readInt:()I
  #341 = Utf8               readUnsignedShort
  #342 = NameAndType        #341:#338     // readUnsignedShort:()I
  #343 = Methodref          #334.#342     // java/io/DataInputStream.readUnsignedShort:()I
  #344 = Utf8               close
  #345 = NameAndType        #344:#235     // close:()V
  #346 = Methodref          #334.#345     // java/io/DataInputStream.close:()V
  #347 = Utf8               I/O error, can\'t check class version
  #348 = String             #347          // I/O error, can\'t check class version
  #349 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V
  #350 = NameAndType        #234:#349     // "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #351 = Methodref          #327.#350     // java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #352 = Integer            65535
  #353 = Utf8               ASM9_EXPERIMENTAL can only be used by classes compiled with --enable-preview
  #354 = String             #353          // ASM9_EXPERIMENTAL can only be used by classes compiled with --enable-preview
  #355 = Utf8               minorVersion
  #356 = Utf8               callerClassStream
  #357 = Utf8               Ljava/io/DataInputStream;
  #358 = Utf8               ioe
  #359 = Utf8               Ljava/io/IOException;
  #360 = Utf8               classInputStream
  #361 = Utf8               Ljava/io/InputStream;
{
  static final java.lang.String CONSTANT_VALUE;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String ConstantValue

  static final java.lang.String CODE;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String Code

  static final java.lang.String STACK_MAP_TABLE;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String StackMapTable

  static final java.lang.String EXCEPTIONS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String Exceptions

  static final java.lang.String INNER_CLASSES;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String InnerClasses

  static final java.lang.String ENCLOSING_METHOD;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String EnclosingMethod

  static final java.lang.String SYNTHETIC;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String Synthetic

  static final java.lang.String SIGNATURE;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String Signature

  static final java.lang.String SOURCE_FILE;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String SourceFile

  static final java.lang.String SOURCE_DEBUG_EXTENSION;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String SourceDebugExtension

  static final java.lang.String LINE_NUMBER_TABLE;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String LineNumberTable

  static final java.lang.String LOCAL_VARIABLE_TABLE;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String LocalVariableTable

  static final java.lang.String LOCAL_VARIABLE_TYPE_TABLE;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String LocalVariableTypeTable

  static final java.lang.String DEPRECATED;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String Deprecated

  static final java.lang.String RUNTIME_VISIBLE_ANNOTATIONS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String RuntimeVisibleAnnotations

  static final java.lang.String RUNTIME_INVISIBLE_ANNOTATIONS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String RuntimeInvisibleAnnotations

  static final java.lang.String RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String RuntimeVisibleParameterAnnotations

  static final java.lang.String RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String RuntimeInvisibleParameterAnnotations

  static final java.lang.String RUNTIME_VISIBLE_TYPE_ANNOTATIONS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String RuntimeVisibleTypeAnnotations

  static final java.lang.String RUNTIME_INVISIBLE_TYPE_ANNOTATIONS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String RuntimeInvisibleTypeAnnotations

  static final java.lang.String ANNOTATION_DEFAULT;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String AnnotationDefault

  static final java.lang.String BOOTSTRAP_METHODS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String BootstrapMethods

  static final java.lang.String METHOD_PARAMETERS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String MethodParameters

  static final java.lang.String MODULE;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String Module

  static final java.lang.String MODULE_PACKAGES;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String ModulePackages

  static final java.lang.String MODULE_MAIN_CLASS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String ModuleMainClass

  static final java.lang.String NEST_HOST;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String NestHost

  static final java.lang.String NEST_MEMBERS;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String NestMembers

  static final java.lang.String PERMITTED_SUBCLASSES;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String PermittedSubclasses

  static final java.lang.String RECORD;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String Record

  static final int ACC_CONSTRUCTOR;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 262144

  static final int F_INSERT;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 256

  static final int LDC_W;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 19

  static final int LDC2_W;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 20

  static final int ILOAD_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 26

  static final int ILOAD_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 27

  static final int ILOAD_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 28

  static final int ILOAD_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 29

  static final int LLOAD_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 30

  static final int LLOAD_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 31

  static final int LLOAD_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 32

  static final int LLOAD_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 33

  static final int FLOAD_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 34

  static final int FLOAD_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 35

  static final int FLOAD_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 36

  static final int FLOAD_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 37

  static final int DLOAD_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 38

  static final int DLOAD_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 39

  static final int DLOAD_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 40

  static final int DLOAD_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 41

  static final int ALOAD_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 42

  static final int ALOAD_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 43

  static final int ALOAD_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 44

  static final int ALOAD_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 45

  static final int ISTORE_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 59

  static final int ISTORE_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 60

  static final int ISTORE_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 61

  static final int ISTORE_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 62

  static final int LSTORE_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 63

  static final int LSTORE_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 64

  static final int LSTORE_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 65

  static final int LSTORE_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 66

  static final int FSTORE_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 67

  static final int FSTORE_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 68

  static final int FSTORE_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 69

  static final int FSTORE_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 70

  static final int DSTORE_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 71

  static final int DSTORE_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 72

  static final int DSTORE_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 73

  static final int DSTORE_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 74

  static final int ASTORE_0;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 75

  static final int ASTORE_1;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 76

  static final int ASTORE_2;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 77

  static final int ASTORE_3;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 78

  static final int WIDE;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 196

  static final int GOTO_W;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 200

  static final int JSR_W;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 201

  static final int WIDE_JUMP_OPCODE_DELTA;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 33

  static final int ASM_OPCODE_DELTA;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 49

  static final int ASM_IFNULL_OPCODE_DELTA;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 20

  static final int ASM_IFEQ;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 202

  static final int ASM_IFNE;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 203

  static final int ASM_IFLT;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 204

  static final int ASM_IFGE;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 205

  static final int ASM_IFGT;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 206

  static final int ASM_IFLE;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 207

  static final int ASM_IF_ICMPEQ;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 208

  static final int ASM_IF_ICMPNE;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 209

  static final int ASM_IF_ICMPLT;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 210

  static final int ASM_IF_ICMPGE;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 211

  static final int ASM_IF_ICMPGT;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 212

  static final int ASM_IF_ICMPLE;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 213

  static final int ASM_IF_ACMPEQ;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 214

  static final int ASM_IF_ACMPNE;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 215

  static final int ASM_GOTO;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 216

  static final int ASM_JSR;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 217

  static final int ASM_IFNULL;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 218

  static final int ASM_IFNONNULL;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 219

  static final int ASM_GOTO_W;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 220

  private org.objectweb.asm.Constants();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #237                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/objectweb/asm/Constants;

  static void checkAsmExperimental(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #245                // Method java/lang/Object.getClass:()Ljava/lang/Class;
         4: astore_1
         5: aload_1
         6: invokevirtual #251                // Method java/lang/Class.getName:()Ljava/lang/String;
         9: bipush        46
        11: bipush        47
        13: invokevirtual #257                // Method java/lang/String.replace:(CC)Ljava/lang/String;
        16: astore_2
        17: aload_2
        18: invokestatic  #261                // Method isWhitelisted:(Ljava/lang/String;)Z
        21: ifne          54
        24: aload_1
        25: invokevirtual #265                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
        28: new           #267                // class java/lang/StringBuilder
        31: dup
        32: invokespecial #268                // Method java/lang/StringBuilder."<init>":()V
        35: aload_2
        36: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        39: ldc_w         #274                // String .class
        42: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: invokevirtual #277                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        48: invokevirtual #283                // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
        51: invokestatic  #287                // Method checkIsPreview:(Ljava/io/InputStream;)V
        54: return
      LineNumberTable:
        line 186: 0
        line 187: 5
        line 188: 17
        line 189: 24
        line 191: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0 caller   Ljava/lang/Object;
            5      50     1 callerClass   Ljava/lang/Class;
           17      38     2 internalName   Ljava/lang/String;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            5      50     1 callerClass   Ljava/lang/Class<*>;

  static boolean isWhitelisted(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc_w         #295                // String org/objectweb/asm/
         4: invokevirtual #298                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         7: ifne          12
        10: iconst_0
        11: ireturn
        12: ldc_w         #300                // String (Annotation|Class|Field|Method|Module|RecordComponent|Signature)
        15: astore_1
        16: aload_0
        17: ldc_w         #302                // String Test$
        20: invokevirtual #306                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        23: ifne          92
        26: new           #267                // class java/lang/StringBuilder
        29: dup
        30: invokespecial #268                // Method java/lang/StringBuilder."<init>":()V
        33: ldc_w         #308                // String org/objectweb/asm/util/Trace
        36: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        39: aload_1
        40: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: ldc_w         #310                // String Visitor(\\$.*)?
        46: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        49: invokevirtual #277                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        52: aload_0
        53: invokestatic  #316                // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
        56: ifne          92
        59: new           #267                // class java/lang/StringBuilder
        62: dup
        63: invokespecial #268                // Method java/lang/StringBuilder."<init>":()V
        66: ldc_w         #318                // String org/objectweb/asm/util/Check
        69: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        72: aload_1
        73: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        76: ldc_w         #320                // String Adapter(\\$.*)?
        79: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        82: invokevirtual #277                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        85: aload_0
        86: invokestatic  #316                // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
        89: ifeq          96
        92: iconst_1
        93: goto          97
        96: iconst_0
        97: ireturn
      LineNumberTable:
        line 194: 0
        line 195: 10
        line 197: 12
        line 198: 16
        line 199: 53
        line 201: 86
        line 198: 97
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      98     0 internalName   Ljava/lang/String;
           16      82     1 member   Ljava/lang/String;

  static void checkIsPreview(java.io.InputStream);
    descriptor: (Ljava/io/InputStream;)V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=5, args_size=1
         0: aload_0
         1: ifnonnull     15
         4: new           #327                // class java/lang/IllegalStateException
         7: dup
         8: ldc_w         #329                // String Bytecode not available, can\'t check class version
        11: invokespecial #332                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        14: athrow
        15: new           #334                // class java/io/DataInputStream
        18: dup
        19: aload_0
        20: invokespecial #336                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
        23: astore_2
        24: aload_2
        25: invokevirtual #340                // Method java/io/DataInputStream.readInt:()I
        28: pop
        29: aload_2
        30: invokevirtual #343                // Method java/io/DataInputStream.readUnsignedShort:()I
        33: istore_1
        34: aload_2
        35: invokevirtual #346                // Method java/io/DataInputStream.close:()V
        38: goto          57
        41: astore_3
        42: aload_2
        43: invokevirtual #346                // Method java/io/DataInputStream.close:()V
        46: goto          55
        49: astore        4
        51: aload_3
        52: aload         4
        54: pop2
        55: aload_3
        56: athrow
        57: goto          73
        60: astore_2
        61: new           #327                // class java/lang/IllegalStateException
        64: dup
        65: ldc_w         #348                // String I/O error, can\'t check class version
        68: aload_2
        69: invokespecial #351                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
        72: athrow
        73: iload_1
        74: ldc_w         #352                // int 65535
        77: if_icmpeq     91
        80: new           #327                // class java/lang/IllegalStateException
        83: dup
        84: ldc_w         #354                // String ASM9_EXPERIMENTAL can only be used by classes compiled with --enable-preview
        87: invokespecial #332                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        90: athrow
        91: return
      Exception table:
         from    to  target type
            24    34    41   Class java/lang/Throwable
            42    46    49   Class java/lang/Throwable
            15    57    60   Class java/io/IOException
      LineNumberTable:
        line 206: 0
        line 207: 4
        line 210: 15
        line 211: 24
        line 212: 29
        line 213: 34
        line 210: 41
        line 215: 57
        line 213: 60
        line 214: 61
        line 216: 73
        line 217: 80
        line 220: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           34       7     1 minorVersion   I
           24      33     2 callerClassStream   Ljava/io/DataInputStream;
           57       3     1 minorVersion   I
           61      12     2   ioe   Ljava/io/IOException;
            0      92     0 classInputStream   Ljava/io/InputStream;
           73      19     1 minorVersion   I
}
SourceFile: "Constants.java"
