Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy.class
  Last modified May 29, 2022; size 1810 bytes
  SHA-256 checksum 41657fb3db7ac424e95ec975063edb6c24a3801b40b528d7b508cec9a51a9377
  Compiled from "EventCountCircuitBreaker.java"
abstract class org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy
  minor version: 0
  major version: 52
  flags: (0x0420) ACC_SUPER, ACC_ABSTRACT
  this_class: #5                          // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy
  super_class: #6                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 5, attributes: 2
Constant pool:
   #1 = Methodref          #5.#37         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy."<init>":()V
   #2 = Methodref          #6.#37         // java/lang/Object."<init>":()V
   #3 = Methodref          #17.#38        // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J
   #4 = Methodref          #5.#39         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy.fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J
   #5 = Class              #41            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy
   #6 = Class              #42            // java/lang/Object
   #7 = Utf8               <init>
   #8 = Utf8               ()V
   #9 = Utf8               Code
  #10 = Utf8               LineNumberTable
  #11 = Utf8               LocalVariableTable
  #12 = Utf8               this
  #13 = Utf8               StateStrategy
  #14 = Utf8               InnerClasses
  #15 = Utf8               Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy;
  #16 = Utf8               isCheckIntervalFinished
  #17 = Class              #43            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData
  #18 = Utf8               CheckIntervalData
  #19 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;J)Z
  #20 = Utf8               breaker
  #21 = Utf8               Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;
  #22 = Utf8               currentData
  #23 = Utf8               Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;
  #24 = Utf8               now
  #25 = Utf8               J
  #26 = Utf8               StackMapTable
  #27 = Utf8               isStateTransition
  #28 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;)Z
  #29 = Utf8               fetchCheckInterval
  #30 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J
  #31 = Class              #44            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1
  #32 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1;)V
  #33 = Utf8               x0
  #34 = Utf8               Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1;
  #35 = Utf8               SourceFile
  #36 = Utf8               EventCountCircuitBreaker.java
  #37 = NameAndType        #7:#8          // "<init>":()V
  #38 = NameAndType        #45:#46        // getCheckIntervalStart:()J
  #39 = NameAndType        #29:#30        // fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J
  #40 = Class              #47            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker
  #41 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy
  #42 = Utf8               java/lang/Object
  #43 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData
  #44 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1
  #45 = Utf8               getCheckIntervalStart
  #46 = Utf8               ()J
  #47 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker
{
  private org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 482: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy;

  public boolean isCheckIntervalFinished(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker, org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData, long);
    descriptor: (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=4
         0: lload_3
         1: aload_2
         2: invokevirtual #3                  // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J
         5: lsub
         6: aload_0
         7: aload_1
         8: invokevirtual #4                  // Method fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J
        11: lcmp
        12: ifle          19
        15: iconst_1
        16: goto          20
        19: iconst_0
        20: ireturn
      LineNumberTable:
        line 493: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy;
            0      21     1 breaker   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;
            0      21     2 currentData   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;
            0      21     3   now   J
      StackMapTable: number_of_entries = 2
        frame_type = 19 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public abstract boolean isStateTransition(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker, org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData, org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData);
    descriptor: (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  protected abstract long fetchCheckInterval(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker);
    descriptor: (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J
    flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT

  org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$1);
    descriptor: (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1;)V
    flags: (0x1000) ACC_SYNTHETIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method "<init>":()V
         4: return
      LineNumberTable:
        line 482: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy;
            0       5     1    x0   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1;
}
SourceFile: "EventCountCircuitBreaker.java"
InnerClasses:
  private static abstract #13= #5 of #40; // StateStrategy=class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy of class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker
  private static #18= #17 of #40;         // CheckIntervalData=class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData of class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker
  static #31;                             // class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1
