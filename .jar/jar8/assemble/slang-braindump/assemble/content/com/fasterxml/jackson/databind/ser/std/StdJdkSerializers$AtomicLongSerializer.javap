Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer.class
  Last modified May 29, 2022; size 2714 bytes
  SHA-256 checksum 8e68d37546647b7dcf3228da78f70bd1b99e370444c8c36f18bf6358705218ed
  Compiled from "StdJdkSerializers.java"
public class com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<java.util.concurrent.atomic.AtomicLong>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #10                         // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer
  super_class: #11                        // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  interfaces: 0, fields: 0, methods: 5, attributes: 3
Constant pool:
   #1 = Class              #46            // java/util/concurrent/atomic/AtomicLong
   #2 = Methodref          #11.#47        // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;Z)V
   #3 = Methodref          #1.#48         // java/util/concurrent/atomic/AtomicLong.get:()J
   #4 = Methodref          #49.#50        // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V
   #5 = String             #51            // integer
   #6 = Methodref          #10.#52        // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer.createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
   #7 = Fieldref           #53.#54        // com/fasterxml/jackson/core/JsonParser$NumberType.LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
   #8 = Methodref          #10.#55        // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer.visitIntFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/core/JsonParser$NumberType;)V
   #9 = Methodref          #10.#56        // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer.serialize:(Ljava/util/concurrent/atomic/AtomicLong;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #10 = Class              #58            // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer
  #11 = Class              #59            // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  #12 = Utf8               <init>
  #13 = Utf8               ()V
  #14 = Utf8               Code
  #15 = Utf8               LineNumberTable
  #16 = Utf8               LocalVariableTable
  #17 = Utf8               this
  #18 = Utf8               AtomicLongSerializer
  #19 = Utf8               InnerClasses
  #20 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer;
  #21 = Utf8               serialize
  #22 = Utf8               (Ljava/util/concurrent/atomic/AtomicLong;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #23 = Utf8               value
  #24 = Utf8               Ljava/util/concurrent/atomic/AtomicLong;
  #25 = Utf8               gen
  #26 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;
  #27 = Utf8               provider
  #28 = Utf8               Lcom/fasterxml/jackson/databind/SerializerProvider;
  #29 = Utf8               Exceptions
  #30 = Class              #60            // java/io/IOException
  #31 = Utf8               getSchema
  #32 = Utf8               (Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;
  #33 = Utf8               typeHint
  #34 = Utf8               Ljava/lang/reflect/Type;
  #35 = Utf8               acceptJsonFormatVisitor
  #36 = Utf8               (Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
  #37 = Utf8               visitor
  #38 = Utf8               Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;
  #39 = Utf8               Lcom/fasterxml/jackson/databind/JavaType;
  #40 = Class              #61            // com/fasterxml/jackson/databind/JsonMappingException
  #41 = Utf8               (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #42 = Utf8               Signature
  #43 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/util/concurrent/atomic/AtomicLong;>;
  #44 = Utf8               SourceFile
  #45 = Utf8               StdJdkSerializers.java
  #46 = Utf8               java/util/concurrent/atomic/AtomicLong
  #47 = NameAndType        #12:#62        // "<init>":(Ljava/lang/Class;Z)V
  #48 = NameAndType        #63:#64        // get:()J
  #49 = Class              #65            // com/fasterxml/jackson/core/JsonGenerator
  #50 = NameAndType        #66:#67        // writeNumber:(J)V
  #51 = Utf8               integer
  #52 = NameAndType        #68:#69        // createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
  #53 = Class              #71            // com/fasterxml/jackson/core/JsonParser$NumberType
  #54 = NameAndType        #73:#74        // LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
  #55 = NameAndType        #75:#76        // visitIntFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/core/JsonParser$NumberType;)V
  #56 = NameAndType        #21:#22        // serialize:(Ljava/util/concurrent/atomic/AtomicLong;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #57 = Class              #77            // com/fasterxml/jackson/databind/ser/std/StdJdkSerializers
  #58 = Utf8               com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer
  #59 = Utf8               com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  #60 = Utf8               java/io/IOException
  #61 = Utf8               com/fasterxml/jackson/databind/JsonMappingException
  #62 = Utf8               (Ljava/lang/Class;Z)V
  #63 = Utf8               get
  #64 = Utf8               ()J
  #65 = Utf8               com/fasterxml/jackson/core/JsonGenerator
  #66 = Utf8               writeNumber
  #67 = Utf8               (J)V
  #68 = Utf8               createSchemaNode
  #69 = Utf8               (Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
  #70 = Class              #78            // com/fasterxml/jackson/core/JsonParser
  #71 = Utf8               com/fasterxml/jackson/core/JsonParser$NumberType
  #72 = Utf8               NumberType
  #73 = Utf8               LONG
  #74 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$NumberType;
  #75 = Utf8               visitIntFormat
  #76 = Utf8               (Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/core/JsonParser$NumberType;)V
  #77 = Utf8               com/fasterxml/jackson/databind/ser/std/StdJdkSerializers
  #78 = Utf8               com/fasterxml/jackson/core/JsonParser
{
  public com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #1                  // class java/util/concurrent/atomic/AtomicLong
         3: iconst_0
         4: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;Z)V
         7: return
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer;

  public void serialize(java.util.concurrent.atomic.AtomicLong, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/util/concurrent/atomic/AtomicLong;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_2
         1: aload_1
         2: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
         5: invokevirtual #4                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V
         8: return
      LineNumberTable:
        line 110: 0
        line 111: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer;
            0       9     1 value   Ljava/util/concurrent/atomic/AtomicLong;
            0       9     2   gen   Lcom/fasterxml/jackson/core/JsonGenerator;
            0       9     3 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
    Exceptions:
      throws java.io.IOException

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type);
    descriptor: (Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: ldc           #5                  // String integer
         3: iconst_1
         4: invokevirtual #6                  // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
         7: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer;
            0       8     1 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
            0       8     2 typeHint   Ljava/lang/reflect/Type;

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    descriptor: (Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: getstatic     #7                  // Field com/fasterxml/jackson/core/JsonParser$NumberType.LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
         6: invokevirtual #8                  // Method visitIntFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/core/JsonParser$NumberType;)V
         9: return
      LineNumberTable:
        line 122: 0
        line 123: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer;
            0      10     1 visitor   Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;
            0      10     2 typeHint   Lcom/fasterxml/jackson/databind/JavaType;
    Exceptions:
      throws com.fasterxml.jackson.databind.JsonMappingException

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: checkcast     #1                  // class java/util/concurrent/atomic/AtomicLong
         5: aload_2
         6: aload_3
         7: invokevirtual #9                  // Method serialize:(Ljava/util/concurrent/atomic/AtomicLong;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
        10: return
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcom/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer;
    Exceptions:
      throws java.io.IOException
}
Signature: #43                          // Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/util/concurrent/atomic/AtomicLong;>;
SourceFile: "StdJdkSerializers.java"
InnerClasses:
  public static #18= #10 of #57;          // AtomicLongSerializer=class com/fasterxml/jackson/databind/ser/std/StdJdkSerializers$AtomicLongSerializer of class com/fasterxml/jackson/databind/ser/std/StdJdkSerializers
  public static final #72= #53 of #70;    // NumberType=class com/fasterxml/jackson/core/JsonParser$NumberType of class com/fasterxml/jackson/core/JsonParser
