Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/Version$.class
  Last modified May 29, 2022; size 10172 bytes
  SHA-256 checksum 1f99de713b518554cbba602023aeaded7ceef2ecb0fb58978c5cadf50671b16b
  Compiled from "Version.scala"
public final class coursier.core.Version$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/core/Version$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 34, attributes: 5
Constant pool:
    #1 = Utf8               coursier/core/Version$
    #2 = Class              #1            // coursier/core/Version$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               Version.scala
    #8 = Utf8               coursier/core/Version$BuildMetadata
    #9 = Class              #8            // coursier/core/Version$BuildMetadata
   #10 = Utf8               coursier/core/Version
   #11 = Class              #10           // coursier/core/Version
   #12 = Utf8               BuildMetadata
   #13 = Utf8               coursier/core/Version$Item
   #14 = Class              #13           // coursier/core/Version$Item
   #15 = Utf8               Item
   #16 = Utf8               coursier/core/Version$Max$
   #17 = Class              #16           // coursier/core/Version$Max$
   #18 = Utf8
   #19 = Utf8               coursier/core/Version$Min$
   #20 = Class              #19           // coursier/core/Version$Min$
   #21 = Utf8               coursier/core/Version$Number
   #22 = Class              #21           // coursier/core/Version$Number
   #23 = Utf8               Number
   #24 = Utf8               coursier/core/Version$Number$
   #25 = Class              #24           // coursier/core/Version$Number$
   #26 = Utf8               coursier/core/Version$Numeric
   #27 = Class              #26           // coursier/core/Version$Numeric
   #28 = Utf8               Numeric
   #29 = Utf8               coursier/core/Version$Tokenizer$
   #30 = Class              #29           // coursier/core/Version$Tokenizer$
   #31 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #32 = Class              #31           // java/lang/invoke/MethodHandles$Lookup
   #33 = Utf8               java/lang/invoke/MethodHandles
   #34 = Class              #33           // java/lang/invoke/MethodHandles
   #35 = Utf8               Lookup
   #36 = Utf8               MODULE$
   #37 = Utf8               Lcoursier/core/Version$;
   #38 = Utf8               zero
   #39 = Utf8               Lcoursier/core/Version;
   #40 = Utf8               empty
   #41 = Utf8               Lcoursier/core/Version$Number;
   #42 = Utf8               <clinit>
   #43 = Utf8               ()V
   #44 = Utf8               <init>
   #45 = NameAndType        #44:#43       // "<init>":()V
   #46 = Methodref          #2.#45        // coursier/core/Version$."<init>":()V
   #47 = NameAndType        #36:#37       // MODULE$:Lcoursier/core/Version$;
   #48 = Fieldref           #2.#47        // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
   #49 = Utf8               0
   #50 = String             #49           // 0
   #51 = Utf8               apply
   #52 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version;
   #53 = NameAndType        #51:#52       // apply:(Ljava/lang/String;)Lcoursier/core/Version;
   #54 = Methodref          #2.#53        // coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
   #55 = NameAndType        #38:#39       // zero:Lcoursier/core/Version;
   #56 = Fieldref           #2.#55        // coursier/core/Version$.zero:Lcoursier/core/Version;
   #57 = Utf8               Lcoursier/core/Version$Number$;
   #58 = NameAndType        #36:#57       // MODULE$:Lcoursier/core/Version$Number$;
   #59 = Fieldref           #25.#58       // coursier/core/Version$Number$.MODULE$:Lcoursier/core/Version$Number$;
   #60 = Utf8               (I)Lcoursier/core/Version$Number;
   #61 = NameAndType        #51:#60       // apply:(I)Lcoursier/core/Version$Number;
   #62 = Methodref          #25.#61       // coursier/core/Version$Number$.apply:(I)Lcoursier/core/Version$Number;
   #63 = NameAndType        #40:#41       // empty:Lcoursier/core/Version$Number;
   #64 = Fieldref           #2.#63        // coursier/core/Version$.empty:Lcoursier/core/Version$Number;
   #65 = Utf8               ()Lcoursier/core/Version;
   #66 = Utf8               this
   #67 = Utf8               ()Lcoursier/core/Version$Number;
   #68 = Utf8               isNumeric
   #69 = Utf8               (Lcoursier/core/Version$Item;)Z
   #70 = Utf8               item
   #71 = Utf8               Lcoursier/core/Version$Item;
   #72 = Utf8               isNumericOrMinMax
   #73 = Utf8               Lcoursier/core/Version$Min$;
   #74 = NameAndType        #36:#73       // MODULE$:Lcoursier/core/Version$Min$;
   #75 = Fieldref           #20.#74       // coursier/core/Version$Min$.MODULE$:Lcoursier/core/Version$Min$;
   #76 = Utf8               equals
   #77 = Utf8               (Ljava/lang/Object;)Z
   #78 = NameAndType        #76:#77       // equals:(Ljava/lang/Object;)Z
   #79 = Methodref          #4.#78        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #80 = Utf8               Lcoursier/core/Version$Max$;
   #81 = NameAndType        #36:#80       // MODULE$:Lcoursier/core/Version$Max$;
   #82 = Fieldref           #17.#81       // coursier/core/Version$Max$.MODULE$:Lcoursier/core/Version$Max$;
   #83 = Utf8               isBuildMetadata
   #84 = Utf8               items
   #85 = Utf8               (Ljava/lang/String;)Lscala/collection/immutable/Vector;
   #86 = Utf8               (Ljava/lang/String;)Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;
   #87 = Utf8               repr
   #88 = Utf8               Lcoursier/core/Version$Tokenizer$;
   #89 = NameAndType        #36:#88       // MODULE$:Lcoursier/core/Version$Tokenizer$;
   #90 = Fieldref           #30.#89       // coursier/core/Version$Tokenizer$.MODULE$:Lcoursier/core/Version$Tokenizer$;
   #91 = Utf8               (Ljava/lang/String;)Lscala/Tuple2;
   #92 = NameAndType        #51:#91       // apply:(Ljava/lang/String;)Lscala/Tuple2;
   #93 = Methodref          #30.#92       // coursier/core/Version$Tokenizer$.apply:(Ljava/lang/String;)Lscala/Tuple2;
   #94 = Utf8               scala/Tuple2
   #95 = Class              #94           // scala/Tuple2
   #96 = Utf8               _1
   #97 = Utf8               ()Ljava/lang/Object;
   #98 = NameAndType        #96:#97       // _1:()Ljava/lang/Object;
   #99 = Methodref          #95.#98       // scala/Tuple2._1:()Ljava/lang/Object;
  #100 = Utf8               _2
  #101 = NameAndType        #100:#97      // _2:()Ljava/lang/Object;
  #102 = Methodref          #95.#101      // scala/Tuple2._2:()Ljava/lang/Object;
  #103 = Utf8               scala/collection/immutable/LazyList
  #104 = Class              #103          // scala/collection/immutable/LazyList
  #105 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #106 = NameAndType        #44:#105      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #107 = Methodref          #95.#106      // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #108 = Utf8               scala/MatchError
  #109 = Class              #108          // scala/MatchError
  #110 = Utf8               (Ljava/lang/Object;)V
  #111 = NameAndType        #44:#110      // "<init>":(Ljava/lang/Object;)V
  #112 = Methodref          #109.#111     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #113 = Utf8               java/lang/String
  #114 = Class              #113          // java/lang/String
  #115 = Utf8               toVector
  #116 = Utf8               ()Lscala/collection/immutable/Vector;
  #117 = NameAndType        #115:#116     // toVector:()Lscala/collection/immutable/Vector;
  #118 = Methodref          #104.#117     // scala/collection/immutable/LazyList.toVector:()Lscala/collection/immutable/Vector;
  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #120 = MethodType         #119          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #121 = Utf8               $anonfun$items$1
  #122 = Utf8               (Lscala/Tuple2;)Lcoursier/core/Version$Item;
  #123 = NameAndType        #121:#122     // $anonfun$items$1:(Lscala/Tuple2;)Lcoursier/core/Version$Item;
  #124 = Methodref          #2.#123       // coursier/core/Version$.$anonfun$items$1:(Lscala/Tuple2;)Lcoursier/core/Version$Item;
  #125 = MethodHandle       6:#124        // REF_invokeStatic coursier/core/Version$.$anonfun$items$1:(Lscala/Tuple2;)Lcoursier/core/Version$Item;
  #126 = MethodType         #122          //  (Lscala/Tuple2;)Lcoursier/core/Version$Item;
  #127 = Integer            5
  #128 = Integer            1
  #129 = Utf8               java/lang/invoke/LambdaMetafactory
  #130 = Class              #129          // java/lang/invoke/LambdaMetafactory
  #131 = Utf8               altMetafactory
  #132 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #133 = NameAndType        #131:#132     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #134 = Methodref          #130.#133     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #135 = MethodHandle       6:#134        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #136 = Utf8               ()Lscala/Function1;
  #137 = NameAndType        #51:#136      // apply:()Lscala/Function1;
  #138 = InvokeDynamic      #0:#137       // #0:apply:()Lscala/Function1;
  #139 = Utf8               scala/collection/immutable/Vector
  #140 = Class              #139          // scala/collection/immutable/Vector
  #141 = Utf8               map
  #142 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #143 = NameAndType        #141:#142     // map:(Lscala/Function1;)Ljava/lang/Object;
  #144 = Methodref          #140.#143     // scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
  #145 = Utf8               scala/collection/SeqOps
  #146 = Class              #145          // scala/collection/SeqOps
  #147 = Utf8               $plus$colon
  #148 = NameAndType        #147:#119     // $plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
  #149 = InterfaceMethodref #146.#148     // scala/collection/SeqOps.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
  #150 = Utf8               first
  #151 = Utf8               tokens
  #152 = Utf8               Lscala/collection/immutable/LazyList;
  #153 = Utf8               Ljava/lang/String;
  #154 = Utf8               listCompare
  #155 = Utf8               (Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
  #156 = Utf8               (Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;)I
  #157 = Utf8               first0
  #158 = Utf8               second0
  #159 = Utf8               $anonfun$listCompare$1$adapted
  #160 = Utf8               (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #161 = NameAndType        #159:#160     // $anonfun$listCompare$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #162 = Methodref          #2.#161       // coursier/core/Version$.$anonfun$listCompare$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #163 = MethodHandle       6:#162        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #164 = MethodType         #160          //  (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #165 = InvokeDynamic      #1:#137       // #1:apply:()Lscala/Function1;
  #166 = Utf8               filterNot
  #167 = NameAndType        #166:#142     // filterNot:(Lscala/Function1;)Ljava/lang/Object;
  #168 = Methodref          #140.#167     // scala/collection/immutable/Vector.filterNot:(Lscala/Function1;)Ljava/lang/Object;
  #169 = Utf8               $anonfun$listCompare$2$adapted
  #170 = NameAndType        #169:#160     // $anonfun$listCompare$2$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #171 = Methodref          #2.#170       // coursier/core/Version$.$anonfun$listCompare$2$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #172 = MethodHandle       6:#171        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$2$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #173 = InvokeDynamic      #2:#137       // #2:apply:()Lscala/Function1;
  #174 = Utf8               $anonfun$listCompare$4$adapted
  #175 = NameAndType        #174:#160     // $anonfun$listCompare$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #176 = Methodref          #2.#175       // coursier/core/Version$.$anonfun$listCompare$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #177 = MethodHandle       6:#176        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #178 = InvokeDynamic      #3:#137       // #3:apply:()Lscala/Function1;
  #179 = Utf8               takeWhile
  #180 = NameAndType        #179:#142     // takeWhile:(Lscala/Function1;)Ljava/lang/Object;
  #181 = Methodref          #140.#180     // scala/collection/immutable/Vector.takeWhile:(Lscala/Function1;)Ljava/lang/Object;
  #182 = Utf8               $anonfun$listCompare$5$adapted
  #183 = NameAndType        #182:#160     // $anonfun$listCompare$5$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #184 = Methodref          #2.#183       // coursier/core/Version$.$anonfun$listCompare$5$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #185 = MethodHandle       6:#184        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$5$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #186 = InvokeDynamic      #4:#137       // #4:apply:()Lscala/Function1;
  #187 = Utf8               scala/Tuple2$mcII$sp
  #188 = Class              #187          // scala/Tuple2$mcII$sp
  #189 = Utf8               size
  #190 = Utf8               ()I
  #191 = NameAndType        #189:#190     // size:()I
  #192 = Methodref          #140.#191     // scala/collection/immutable/Vector.size:()I
  #193 = Utf8               (II)V
  #194 = NameAndType        #44:#193      // "<init>":(II)V
  #195 = Methodref          #188.#194     // scala/Tuple2$mcII$sp."<init>":(II)V
  #196 = Utf8               _1$mcI$sp
  #197 = NameAndType        #196:#190     // _1$mcI$sp:()I
  #198 = Methodref          #95.#197      // scala/Tuple2._1$mcI$sp:()I
  #199 = Utf8               _2$mcI$sp
  #200 = NameAndType        #199:#190     // _2$mcI$sp:()I
  #201 = Methodref          #95.#200      // scala/Tuple2._2$mcI$sp:()I
  #202 = Utf8               listCompare0
  #203 = NameAndType        #202:#155     // listCompare0:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
  #204 = Methodref          #2.#203       // coursier/core/Version$.listCompare0:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
  #205 = Utf8               padNum$1
  #206 = Utf8               (Lscala/collection/immutable/Vector;II)Lscala/collection/immutable/Vector;
  #207 = NameAndType        #205:#206     // padNum$1:(Lscala/collection/immutable/Vector;II)Lscala/collection/immutable/Vector;
  #208 = Methodref          #2.#207       // coursier/core/Version$.padNum$1:(Lscala/collection/immutable/Vector;II)Lscala/collection/immutable/Vector;
  #209 = Utf8               x
  #210 = Utf8               I
  #211 = Utf8               y
  #212 = Utf8               Lscala/collection/immutable/Vector;
  #213 = Utf8               second
  #214 = Utf8               num1
  #215 = Utf8               num2
  #216 = Utf8               isEmpty
  #217 = Utf8               ()Z
  #218 = NameAndType        #216:#217     // isEmpty:()Z
  #219 = Methodref          #140.#218     // scala/collection/immutable/Vector.isEmpty:()Z
  #220 = Utf8               scala/Predef$
  #221 = Class              #220          // scala/Predef$
  #222 = Utf8               Lscala/Predef$;
  #223 = NameAndType        #36:#222      // MODULE$:Lscala/Predef$;
  #224 = Fieldref           #221.#223     // scala/Predef$.MODULE$:Lscala/Predef$;
  #225 = Utf8               nonEmpty
  #226 = NameAndType        #225:#217     // nonEmpty:()Z
  #227 = Methodref          #140.#226     // scala/collection/immutable/Vector.nonEmpty:()Z
  #228 = Utf8               assert
  #229 = Utf8               (Z)V
  #230 = NameAndType        #228:#229     // assert:(Z)V
  #231 = Methodref          #221.#230     // scala/Predef$.assert:(Z)V
  #232 = Utf8               $anonfun$listCompare0$1$adapted
  #233 = NameAndType        #232:#160     // $anonfun$listCompare0$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #234 = Methodref          #2.#233       // coursier/core/Version$.$anonfun$listCompare0$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #235 = MethodHandle       6:#234        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #236 = InvokeDynamic      #5:#137       // #5:apply:()Lscala/Function1;
  #237 = Utf8               dropWhile
  #238 = NameAndType        #237:#142     // dropWhile:(Lscala/Function1;)Ljava/lang/Object;
  #239 = Methodref          #140.#238     // scala/collection/immutable/Vector.dropWhile:(Lscala/Function1;)Ljava/lang/Object;
  #240 = Utf8               scala/collection/IndexedSeqOps
  #241 = Class              #240          // scala/collection/IndexedSeqOps
  #242 = Utf8               headOption
  #243 = Utf8               ()Lscala/Option;
  #244 = NameAndType        #242:#243     // headOption:()Lscala/Option;
  #245 = InterfaceMethodref #241.#244     // scala/collection/IndexedSeqOps.headOption:()Lscala/Option;
  #246 = MethodType         #190          //  ()I
  #247 = Utf8               $anonfun$listCompare0$2
  #248 = NameAndType        #247:#190     // $anonfun$listCompare0$2:()I
  #249 = Methodref          #2.#248       // coursier/core/Version$.$anonfun$listCompare0$2:()I
  #250 = MethodHandle       6:#249        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$2:()I
  #251 = Utf8               apply$mcI$sp
  #252 = Utf8               ()Lscala/runtime/java8/JFunction0$mcI$sp;
  #253 = NameAndType        #251:#252     // apply$mcI$sp:()Lscala/runtime/java8/JFunction0$mcI$sp;
  #254 = InvokeDynamic      #6:#253       // #6:apply$mcI$sp:()Lscala/runtime/java8/JFunction0$mcI$sp;
  #255 = Utf8               $anonfun$listCompare0$3$adapted
  #256 = NameAndType        #255:#160     // $anonfun$listCompare0$3$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #257 = Methodref          #2.#256       // coursier/core/Version$.$anonfun$listCompare0$3$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #258 = MethodHandle       6:#257        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$3$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #259 = InvokeDynamic      #7:#137       // #7:apply:()Lscala/Function1;
  #260 = Utf8               scala/Option
  #261 = Class              #260          // scala/Option
  #262 = Utf8               fold
  #263 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #264 = NameAndType        #262:#263     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #265 = Methodref          #261.#264     // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #266 = Utf8               scala/runtime/BoxesRunTime
  #267 = Class              #266          // scala/runtime/BoxesRunTime
  #268 = Utf8               unboxToInt
  #269 = Utf8               (Ljava/lang/Object;)I
  #270 = NameAndType        #268:#269     // unboxToInt:(Ljava/lang/Object;)I
  #271 = Methodref          #267.#270     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #272 = Utf8               $anonfun$listCompare0$4$adapted
  #273 = NameAndType        #272:#160     // $anonfun$listCompare0$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #274 = Methodref          #2.#273       // coursier/core/Version$.$anonfun$listCompare0$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #275 = MethodHandle       6:#274        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #276 = InvokeDynamic      #8:#137       // #8:apply:()Lscala/Function1;
  #277 = Utf8               $anonfun$listCompare0$5
  #278 = NameAndType        #277:#190     // $anonfun$listCompare0$5:()I
  #279 = Methodref          #2.#278       // coursier/core/Version$.$anonfun$listCompare0$5:()I
  #280 = MethodHandle       6:#279        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$5:()I
  #281 = InvokeDynamic      #9:#253       // #9:apply$mcI$sp:()Lscala/runtime/java8/JFunction0$mcI$sp;
  #282 = Utf8               $anonfun$listCompare0$6$adapted
  #283 = NameAndType        #282:#160     // $anonfun$listCompare0$6$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #284 = Methodref          #2.#283       // coursier/core/Version$.$anonfun$listCompare0$6$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #285 = MethodHandle       6:#284        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$6$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #286 = InvokeDynamic      #10:#137      // #10:apply:()Lscala/Function1;
  #287 = Utf8               head
  #288 = NameAndType        #287:#97      // head:()Ljava/lang/Object;
  #289 = Methodref          #140.#288     // scala/collection/immutable/Vector.head:()Ljava/lang/Object;
  #290 = Utf8               compare
  #291 = Utf8               (Lcoursier/core/Version$Item;)I
  #292 = NameAndType        #290:#291     // compare:(Lcoursier/core/Version$Item;)I
  #293 = Methodref          #14.#292      // coursier/core/Version$Item.compare:(Lcoursier/core/Version$Item;)I
  #294 = Utf8               tail
  #295 = NameAndType        #294:#116     // tail:()Lscala/collection/immutable/Vector;
  #296 = Methodref          #140.#295     // scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
  #297 = Utf8               rel
  #298 = Utf8               (Ljava/lang/String;)V
  #299 = NameAndType        #44:#298      // "<init>":(Ljava/lang/String;)V
  #300 = Methodref          #11.#299      // coursier/core/Version."<init>":(Ljava/lang/String;)V
  #301 = Utf8               writeReplace
  #302 = Utf8               scala/runtime/ModuleSerializationProxy
  #303 = Class              #302          // scala/runtime/ModuleSerializationProxy
  #304 = Utf8               (Ljava/lang/Class;)V
  #305 = NameAndType        #44:#304      // "<init>":(Ljava/lang/Class;)V
  #306 = Methodref          #303.#305     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #307 = Utf8               x$9
  #308 = Utf8               Lscala/Tuple2;
  #309 = Utf8               $anonfun$listCompare$1
  #310 = NameAndType        #83:#69       // isBuildMetadata:(Lcoursier/core/Version$Item;)Z
  #311 = Methodref          #2.#310       // coursier/core/Version$.isBuildMetadata:(Lcoursier/core/Version$Item;)Z
  #312 = Utf8               $anonfun$listCompare$2
  #313 = Utf8               $anonfun$listCompare$3
  #314 = NameAndType        #40:#67       // empty:()Lcoursier/core/Version$Number;
  #315 = Methodref          #2.#314       // coursier/core/Version$.empty:()Lcoursier/core/Version$Number;
  #316 = Utf8               xs
  #317 = Utf8               original
  #318 = Utf8               next
  #319 = Utf8               splitAt
  #320 = Utf8               (I)Lscala/Tuple2;
  #321 = NameAndType        #319:#320     // splitAt:(I)Lscala/Tuple2;
  #322 = Methodref          #140.#321     // scala/collection/immutable/Vector.splitAt:(I)Lscala/Tuple2;
  #323 = Utf8               scala/package$
  #324 = Class              #323          // scala/package$
  #325 = Utf8               Lscala/package$;
  #326 = NameAndType        #36:#325      // MODULE$:Lscala/package$;
  #327 = Fieldref           #324.#326     // scala/package$.MODULE$:Lscala/package$;
  #328 = Utf8               Vector
  #329 = Utf8               ()Lscala/collection/immutable/Vector$;
  #330 = NameAndType        #328:#329     // Vector:()Lscala/collection/immutable/Vector$;
  #331 = Methodref          #324.#330     // scala/package$.Vector:()Lscala/collection/immutable/Vector$;
  #332 = MethodType         #97           //  ()Ljava/lang/Object;
  #333 = NameAndType        #313:#67      // $anonfun$listCompare$3:()Lcoursier/core/Version$Number;
  #334 = Methodref          #2.#333       // coursier/core/Version$.$anonfun$listCompare$3:()Lcoursier/core/Version$Number;
  #335 = MethodHandle       6:#334        // REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$3:()Lcoursier/core/Version$Number;
  #336 = MethodType         #67           //  ()Lcoursier/core/Version$Number;
  #337 = Utf8               ()Lscala/Function0;
  #338 = NameAndType        #51:#337      // apply:()Lscala/Function0;
  #339 = InvokeDynamic      #11:#338      // #11:apply:()Lscala/Function0;
  #340 = Utf8               scala/collection/immutable/Vector$
  #341 = Class              #340          // scala/collection/immutable/Vector$
  #342 = Utf8               fill
  #343 = Utf8               (ILscala/Function0;)Lscala/collection/SeqOps;
  #344 = NameAndType        #342:#343     // fill:(ILscala/Function0;)Lscala/collection/SeqOps;
  #345 = Methodref          #341.#344     // scala/collection/immutable/Vector$.fill:(ILscala/Function0;)Lscala/collection/SeqOps;
  #346 = Utf8               $plus$plus
  #347 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #348 = NameAndType        #346:#347     // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #349 = Methodref          #140.#348     // scala/collection/immutable/Vector.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #350 = Utf8               scala/collection/IterableOps
  #351 = Class              #350          // scala/collection/IterableOps
  #352 = InterfaceMethodref #351.#348     // scala/collection/IterableOps.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #353 = Utf8               before
  #354 = Utf8               after
  #355 = Utf8               $anonfun$listCompare$4
  #356 = NameAndType        #72:#69       // isNumericOrMinMax:(Lcoursier/core/Version$Item;)Z
  #357 = Methodref          #2.#356       // coursier/core/Version$.isNumericOrMinMax:(Lcoursier/core/Version$Item;)Z
  #358 = Utf8               $anonfun$listCompare$5
  #359 = Utf8               $anonfun$listCompare0$1
  #360 = Utf8               x$11
  #361 = Methodref          #14.#218      // coursier/core/Version$Item.isEmpty:()Z
  #362 = Utf8               $anonfun$listCompare0$3
  #363 = Utf8               x$12
  #364 = Utf8               compareToEmpty
  #365 = NameAndType        #364:#190     // compareToEmpty:()I
  #366 = Methodref          #14.#365      // coursier/core/Version$Item.compareToEmpty:()I
  #367 = Utf8               $anonfun$listCompare0$4
  #368 = Utf8               x$13
  #369 = Utf8               $anonfun$listCompare0$6
  #370 = Utf8               x$14
  #371 = Methodref          #4.#45        // java/lang/Object."<init>":()V
  #372 = NameAndType        #309:#69      // $anonfun$listCompare$1:(Lcoursier/core/Version$Item;)Z
  #373 = Methodref          #2.#372       // coursier/core/Version$.$anonfun$listCompare$1:(Lcoursier/core/Version$Item;)Z
  #374 = Utf8               boxToBoolean
  #375 = Utf8               (Z)Ljava/lang/Boolean;
  #376 = NameAndType        #374:#375     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #377 = Methodref          #267.#376     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #378 = NameAndType        #312:#69      // $anonfun$listCompare$2:(Lcoursier/core/Version$Item;)Z
  #379 = Methodref          #2.#378       // coursier/core/Version$.$anonfun$listCompare$2:(Lcoursier/core/Version$Item;)Z
  #380 = NameAndType        #355:#69      // $anonfun$listCompare$4:(Lcoursier/core/Version$Item;)Z
  #381 = Methodref          #2.#380       // coursier/core/Version$.$anonfun$listCompare$4:(Lcoursier/core/Version$Item;)Z
  #382 = NameAndType        #358:#69      // $anonfun$listCompare$5:(Lcoursier/core/Version$Item;)Z
  #383 = Methodref          #2.#382       // coursier/core/Version$.$anonfun$listCompare$5:(Lcoursier/core/Version$Item;)Z
  #384 = NameAndType        #359:#69      // $anonfun$listCompare0$1:(Lcoursier/core/Version$Item;)Z
  #385 = Methodref          #2.#384       // coursier/core/Version$.$anonfun$listCompare0$1:(Lcoursier/core/Version$Item;)Z
  #386 = NameAndType        #362:#291     // $anonfun$listCompare0$3:(Lcoursier/core/Version$Item;)I
  #387 = Methodref          #2.#386       // coursier/core/Version$.$anonfun$listCompare0$3:(Lcoursier/core/Version$Item;)I
  #388 = Utf8               boxToInteger
  #389 = Utf8               (I)Ljava/lang/Integer;
  #390 = NameAndType        #388:#389     // boxToInteger:(I)Ljava/lang/Integer;
  #391 = Methodref          #267.#390     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #392 = NameAndType        #367:#69      // $anonfun$listCompare0$4:(Lcoursier/core/Version$Item;)Z
  #393 = Methodref          #2.#392       // coursier/core/Version$.$anonfun$listCompare0$4:(Lcoursier/core/Version$Item;)Z
  #394 = NameAndType        #369:#291     // $anonfun$listCompare0$6:(Lcoursier/core/Version$Item;)I
  #395 = Methodref          #2.#394       // coursier/core/Version$.$anonfun$listCompare0$6:(Lcoursier/core/Version$Item;)I
  #396 = Utf8               $deserializeLambda$
  #397 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #398 = Utf8               scala/runtime/LambdaDeserialize
  #399 = Class              #398          // scala/runtime/LambdaDeserialize
  #400 = Utf8               bootstrap
  #401 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #402 = NameAndType        #400:#401     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #403 = Methodref          #399.#402     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #404 = MethodHandle       6:#403        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #405 = Utf8               lambdaDeserialize
  #406 = NameAndType        #405:#397     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #407 = InvokeDynamic      #12:#406      // #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #408 = Utf8               Code
  #409 = Utf8               LineNumberTable
  #410 = Utf8               LocalVariableTable
  #411 = Utf8               StackMapTable
  #412 = Utf8               MethodParameters
  #413 = Utf8               Signature
  #414 = Utf8               InnerClasses
  #415 = Utf8               SourceFile
  #416 = Utf8               BootstrapMethods
  #417 = Utf8               ScalaInlineInfo
  #418 = Utf8               Scala
{
  public static final coursier.core.Version$ MODULE$;
    descriptor: Lcoursier/core/Version$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final coursier.core.Version zero;
    descriptor: Lcoursier/core/Version;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final coursier.core.Version$Number empty;
    descriptor: Lcoursier/core/Version$Number;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/core/Version$
         3: dup
         4: invokespecial #46                 // Method "<init>":()V
         7: putstatic     #48                 // Field MODULE$:Lcoursier/core/Version$;
        10: getstatic     #48                 // Field MODULE$:Lcoursier/core/Version$;
        13: ldc           #50                 // String 0
        15: invokevirtual #54                 // Method apply:(Ljava/lang/String;)Lcoursier/core/Version;
        18: putstatic     #56                 // Field zero:Lcoursier/core/Version;
        21: getstatic     #59                 // Field coursier/core/Version$Number$.MODULE$:Lcoursier/core/Version$Number$;
        24: iconst_0
        25: invokevirtual #62                 // Method coursier/core/Version$Number$.apply:(I)Lcoursier/core/Version$Number;
        28: putstatic     #64                 // Field empty:Lcoursier/core/Version$Number;
        31: return
      LineNumberTable:
        line 14: 0
        line 22: 10
        line 101: 21
        line 14: 31

  public coursier.core.Version zero();
    descriptor: ()Lcoursier/core/Version;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #56                 // Field zero:Lcoursier/core/Version;
         3: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/core/Version$;

  public coursier.core.Version$Number empty();
    descriptor: ()Lcoursier/core/Version$Number;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #64                 // Field empty:Lcoursier/core/Version$Number;
         3: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/core/Version$;

  public boolean isNumeric(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=4, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #27                 // class coursier/core/Version$Numeric
         6: ifeq          14
         9: iconst_1
        10: istore_2
        11: goto          22
        14: goto          17
        17: iconst_0
        18: istore_2
        19: goto          22
        22: iload_2
        23: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 14
          locals = [ top, class coursier/core/Version$Item ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/core/Version$, class coursier/core/Version$Item, int, class coursier/core/Version$Item ]
          stack = []
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lcoursier/core/Version$;
            0      24     1  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  private boolean isNumericOrMinMax(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #27                 // class coursier/core/Version$Numeric
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          62
        16: goto          19
        19: getstatic     #75                 // Field coursier/core/Version$Min$.MODULE$:Lcoursier/core/Version$Min$;
        22: aload         4
        24: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        27: ifeq          35
        30: iconst_1
        31: istore_3
        32: goto          62
        35: goto          38
        38: getstatic     #82                 // Field coursier/core/Version$Max$.MODULE$:Lcoursier/core/Version$Max$;
        41: aload         4
        43: invokevirtual #79                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        46: ifeq          54
        49: iconst_1
        50: istore_3
        51: goto          62
        54: goto          57
        57: iconst_0
        58: istore_3
        59: goto          62
        62: iload_3
        63: ifeq          71
        66: iconst_1
        67: istore_2
        68: goto          79
        71: goto          74
        74: iconst_0
        75: istore_2
        76: goto          79
        79: iload_2
        80: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 254 /* append */
          offset_delta = 16
          locals = [ top, top, class coursier/core/Version$Item ]
        frame_type = 2 /* same */
        frame_type = 15 /* same */
        frame_type = 2 /* same */
        frame_type = 15 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/core/Version$, class coursier/core/Version$Item, top, int, class coursier/core/Version$Item ]
          stack = []
        frame_type = 8 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/core/Version$, class coursier/core/Version$Item, int, int, class coursier/core/Version$Item ]
          stack = []
      LineNumberTable:
        line 194: 0
        line 195: 3
        line 196: 74
        line 194: 79
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      81     0  this   Lcoursier/core/Version$;
            0      81     1  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public boolean isBuildMetadata(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=4, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #9                  // class coursier/core/Version$BuildMetadata
         6: ifeq          14
         9: iconst_1
        10: istore_2
        11: goto          22
        14: goto          17
        17: iconst_0
        18: istore_2
        19: goto          22
        22: iload_2
        23: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 14
          locals = [ top, class coursier/core/Version$Item ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/core/Version$, class coursier/core/Version$Item, int, class coursier/core/Version$Item ]
          stack = []
      LineNumberTable:
        line 198: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lcoursier/core/Version$;
            0      24     1  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public scala.collection.immutable.Vector<coursier.core.Version$Item> items(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/collection/immutable/Vector;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=10, args_size=2
         0: getstatic     #90                 // Field coursier/core/Version$Tokenizer$.MODULE$:Lcoursier/core/Version$Tokenizer$;
         3: aload_1
         4: invokevirtual #93                 // Method coursier/core/Version$Tokenizer$.apply:(Ljava/lang/String;)Lscala/Tuple2;
         7: astore        4
         9: aload         4
        11: ifnull        49
        14: aload         4
        16: invokevirtual #99                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        19: checkcast     #14                 // class coursier/core/Version$Item
        22: astore        5
        24: aload         4
        26: invokevirtual #102                // Method scala/Tuple2._2:()Ljava/lang/Object;
        29: checkcast     #104                // class scala/collection/immutable/LazyList
        32: astore        6
        34: new           #95                 // class scala/Tuple2
        37: dup
        38: aload         5
        40: aload         6
        42: invokespecial #107                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        45: astore_2
        46: goto          62
        49: goto          52
        52: new           #109                // class scala/MatchError
        55: dup
        56: aload         4
        58: invokespecial #112                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        61: athrow
        62: aload_2
        63: astore_3
        64: aload_3
        65: invokevirtual #99                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        68: checkcast     #14                 // class coursier/core/Version$Item
        71: astore        7
        73: aload_3
        74: invokevirtual #102                // Method scala/Tuple2._2:()Ljava/lang/Object;
        77: checkcast     #104                // class scala/collection/immutable/LazyList
        80: astore        8
        82: aload         7
        84: astore        9
        86: aload         8
        88: invokevirtual #118                // Method scala/collection/immutable/LazyList.toVector:()Lscala/collection/immutable/Vector;
        91: invokedynamic #138,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        96: invokevirtual #144                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        99: checkcast     #146                // class scala/collection/SeqOps
       102: aload         9
       104: invokeinterface #149,  2          // InterfaceMethod scala/collection/SeqOps.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
       109: checkcast     #140                // class scala/collection/immutable/Vector
       112: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 49
          locals = [ top, top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Version$, class java/lang/String, class scala/Tuple2, top, class scala/Tuple2, class coursier/core/Version$Item, class scala/collection/immutable/LazyList ]
          stack = []
      LineNumberTable:
        line 201: 0
        line 202: 82
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           24      25     5 first   Lcoursier/core/Version$Item;
           34      15     6 tokens   Lscala/collection/immutable/LazyList;
           73      39     7 first   Lcoursier/core/Version$Item;
           82      30     8 tokens   Lscala/collection/immutable/LazyList;
            0     113     0  this   Lcoursier/core/Version$;
            0     113     1  repr   Ljava/lang/String;
    Signature: #86                          // (Ljava/lang/String;)Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;
    MethodParameters:
      Name                           Flags
      repr                           final

  public int listCompare(scala.collection.immutable.Vector<coursier.core.Version$Item>, scala.collection.immutable.Vector<coursier.core.Version$Item>);
    descriptor: (Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=15, args_size=3
         0: aload_1
         1: invokedynamic #165,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
         6: invokevirtual #168                // Method scala/collection/immutable/Vector.filterNot:(Lscala/Function1;)Ljava/lang/Object;
         9: checkcast     #140                // class scala/collection/immutable/Vector
        12: astore        4
        14: aload_2
        15: invokedynamic #173,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        20: invokevirtual #168                // Method scala/collection/immutable/Vector.filterNot:(Lscala/Function1;)Ljava/lang/Object;
        23: checkcast     #140                // class scala/collection/immutable/Vector
        26: astore        5
        28: aload         4
        30: invokedynamic #178,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        35: invokevirtual #181                // Method scala/collection/immutable/Vector.takeWhile:(Lscala/Function1;)Ljava/lang/Object;
        38: checkcast     #140                // class scala/collection/immutable/Vector
        41: astore        6
        43: aload         5
        45: invokedynamic #186,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        50: invokevirtual #181                // Method scala/collection/immutable/Vector.takeWhile:(Lscala/Function1;)Ljava/lang/Object;
        53: checkcast     #140                // class scala/collection/immutable/Vector
        56: astore        7
        58: new           #188                // class scala/Tuple2$mcII$sp
        61: dup
        62: aload         6
        64: invokevirtual #192                // Method scala/collection/immutable/Vector.size:()I
        67: aload         7
        69: invokevirtual #192                // Method scala/collection/immutable/Vector.size:()I
        72: invokespecial #195                // Method scala/Tuple2$mcII$sp."<init>":(II)V
        75: astore        8
        77: aload         8
        79: ifnull        118
        82: aload         8
        84: invokevirtual #198                // Method scala/Tuple2._1$mcI$sp:()I
        87: istore        9
        89: aload         8
        91: invokevirtual #201                // Method scala/Tuple2._2$mcI$sp:()I
        94: istore        10
        96: iload         9
        98: iload         10
       100: if_icmpne     115
       103: aload_0
       104: aload         4
       106: aload         5
       108: invokespecial #204                // Method listCompare0:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
       111: istore_3
       112: goto          233
       115: goto          121
       118: goto          121
       121: aload         8
       123: ifnull        169
       126: aload         8
       128: invokevirtual #198                // Method scala/Tuple2._1$mcI$sp:()I
       131: istore        11
       133: aload         8
       135: invokevirtual #201                // Method scala/Tuple2._2$mcI$sp:()I
       138: istore        12
       140: iload         11
       142: iload         12
       144: if_icmple     166
       147: aload_0
       148: aload         4
       150: aload         5
       152: iload         12
       154: iload         11
       156: invokestatic  #208                // Method padNum$1:(Lscala/collection/immutable/Vector;II)Lscala/collection/immutable/Vector;
       159: invokespecial #204                // Method listCompare0:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
       162: istore_3
       163: goto          233
       166: goto          172
       169: goto          172
       172: aload         8
       174: ifnull        220
       177: aload         8
       179: invokevirtual #198                // Method scala/Tuple2._1$mcI$sp:()I
       182: istore        13
       184: aload         8
       186: invokevirtual #201                // Method scala/Tuple2._2$mcI$sp:()I
       189: istore        14
       191: iload         13
       193: iload         14
       195: if_icmpge     217
       198: aload_0
       199: aload         4
       201: iload         13
       203: iload         14
       205: invokestatic  #208                // Method padNum$1:(Lscala/collection/immutable/Vector;II)Lscala/collection/immutable/Vector;
       208: aload         5
       210: invokespecial #204                // Method listCompare0:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
       213: istore_3
       214: goto          233
       217: goto          223
       220: goto          223
       223: new           #109                // class scala/MatchError
       226: dup
       227: aload         8
       229: invokespecial #112                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       232: athrow
       233: iload_3
       234: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 115
          locals = [ class coursier/core/Version$, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, top, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/Tuple2$mcII$sp, int, int ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class coursier/core/Version$, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, top, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/Tuple2$mcII$sp, top, top, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/Version$, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, top, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/Tuple2$mcII$sp ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class coursier/core/Version$, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, top, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/Tuple2$mcII$sp, top, top, top, top, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/Version$, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, top, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/Tuple2$mcII$sp ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Version$, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, int, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector, class scala/Tuple2$mcII$sp ]
          stack = []
      LineNumberTable:
        line 209: 0
        line 210: 14
        line 216: 28
        line 217: 43
        line 218: 58
        line 219: 77
        line 220: 103
        line 219: 115
        line 221: 121
        line 222: 147
        line 221: 166
        line 223: 172
        line 224: 198
        line 223: 217
        line 218: 223
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           89      29     9     x   I
           96      22    10     y   I
          133      36    11     x   I
          140      29    12     y   I
          184      36    13     x   I
          191      29    14     y   I
           14     220     4 first   Lscala/collection/immutable/Vector;
           28     206     5 second   Lscala/collection/immutable/Vector;
           43     191     6  num1   Lscala/collection/immutable/Vector;
           58     176     7  num2   Lscala/collection/immutable/Vector;
            0     235     0  this   Lcoursier/core/Version$;
            0     235     1 first0   Lscala/collection/immutable/Vector;
            0     235     2 second0   Lscala/collection/immutable/Vector;
    Signature: #156                         // (Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;)I
    MethodParameters:
      Name                           Flags
      first0                         final
      second0                        final

  private int listCompare0(scala.collection.immutable.Vector<coursier.core.Version$Item>, scala.collection.immutable.Vector<coursier.core.Version$Item>);
    descriptor: (Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: invokevirtual #219                // Method scala/collection/immutable/Vector.isEmpty:()Z
         4: ifeq          18
         7: aload_2
         8: invokevirtual #219                // Method scala/collection/immutable/Vector.isEmpty:()Z
        11: ifeq          18
        14: iconst_0
        15: goto          165
        18: aload_1
        19: invokevirtual #219                // Method scala/collection/immutable/Vector.isEmpty:()Z
        22: ifeq          72
        25: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        28: aload_2
        29: invokevirtual #227                // Method scala/collection/immutable/Vector.nonEmpty:()Z
        32: invokevirtual #231                // Method scala/Predef$.assert:(Z)V
        35: aload_2
        36: invokedynamic #236,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        41: invokevirtual #239                // Method scala/collection/immutable/Vector.dropWhile:(Lscala/Function1;)Ljava/lang/Object;
        44: checkcast     #241                // class scala/collection/IndexedSeqOps
        47: invokeinterface #245,  1          // InterfaceMethod scala/collection/IndexedSeqOps.headOption:()Lscala/Option;
        52: invokedynamic #254,  0            // InvokeDynamic #6:apply$mcI$sp:()Lscala/runtime/java8/JFunction0$mcI$sp;
        57: invokedynamic #259,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        62: invokevirtual #265                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        65: invokestatic  #271                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        68: ineg
        69: goto          165
        72: aload_2
        73: invokevirtual #219                // Method scala/collection/immutable/Vector.isEmpty:()Z
        76: ifeq          125
        79: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        82: aload_1
        83: invokevirtual #227                // Method scala/collection/immutable/Vector.nonEmpty:()Z
        86: invokevirtual #231                // Method scala/Predef$.assert:(Z)V
        89: aload_1
        90: invokedynamic #276,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
        95: invokevirtual #239                // Method scala/collection/immutable/Vector.dropWhile:(Lscala/Function1;)Ljava/lang/Object;
        98: checkcast     #241                // class scala/collection/IndexedSeqOps
       101: invokeinterface #245,  1          // InterfaceMethod scala/collection/IndexedSeqOps.headOption:()Lscala/Option;
       106: invokedynamic #281,  0            // InvokeDynamic #9:apply$mcI$sp:()Lscala/runtime/java8/JFunction0$mcI$sp;
       111: invokedynamic #286,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
       116: invokevirtual #265                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       119: invokestatic  #271                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       122: goto          165
       125: aload_1
       126: invokevirtual #289                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
       129: checkcast     #14                 // class coursier/core/Version$Item
       132: aload_2
       133: invokevirtual #289                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
       136: checkcast     #14                 // class coursier/core/Version$Item
       139: invokevirtual #293                // Method coursier/core/Version$Item.compare:(Lcoursier/core/Version$Item;)I
       142: istore        4
       144: iload         4
       146: iconst_0
       147: if_icmpne     163
       150: aload_1
       151: invokevirtual #296                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
       154: aload_2
       155: invokevirtual #296                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
       158: astore_2
       159: astore_1
       160: goto          0
       163: iload         4
       165: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 0 /* same */
        frame_type = 17 /* same */
        frame_type = 53 /* same */
        frame_type = 52 /* same */
        frame_type = 253 /* append */
          offset_delta = 37
          locals = [ top, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class coursier/core/Version$, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector ]
          stack = [ int ]
      LineNumberTable:
        line 230: 0
        line 231: 18
        line 232: 25
        line 233: 35
        line 234: 72
        line 235: 79
        line 236: 89
        line 238: 125
        line 239: 144
        line 240: 163
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          144      21     4   rel   I
            0     166     0  this   Lcoursier/core/Version$;
            0     166     1 first   Lscala/collection/immutable/Vector;
            0     166     2 second   Lscala/collection/immutable/Vector;
    Signature: #156                         // (Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;)I
    MethodParameters:
      Name                           Flags
      first                          final
      second                         final

  public coursier.core.Version apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/core/Version;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #11                 // class coursier/core/Version
         3: dup
         4: aload_1
         5: invokespecial #300                // Method coursier/core/Version."<init>":(Ljava/lang/String;)V
         8: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/core/Version$;
            0       9     1  repr   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      repr                           final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #303                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/core/Version$
         6: invokespecial #306                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/core/Version$;

  public static final coursier.core.Version$Item $anonfun$items$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lcoursier/core/Version$Item;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #102                // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: checkcast     #14                 // class coursier/core/Version$Item
         7: areturn
      LineNumberTable:
        line 202: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$9   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$9                            final

  public static final boolean $anonfun$listCompare$1(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #48                 // Field MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #311                // Method isBuildMetadata:(Lcoursier/core/Version$Item;)Z
         7: ireturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public static final boolean $anonfun$listCompare$2(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #48                 // Field MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #311                // Method isBuildMetadata:(Lcoursier/core/Version$Item;)Z
         7: ireturn
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public static final coursier.core.Version$Number $anonfun$listCompare$3();
    descriptor: ()Lcoursier/core/Version$Number;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #48                 // Field MODULE$:Lcoursier/core/Version$;
         3: invokevirtual #315                // Method empty:()Lcoursier/core/Version$Number;
         6: areturn
      LineNumberTable:
        line 214: 0

  private static final scala.collection.immutable.Vector padNum$1(scala.collection.immutable.Vector, int, int);
    descriptor: (Lscala/collection/immutable/Vector;II)Lscala/collection/immutable/Vector;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=10, args_size=3
         0: aload_0
         1: iload_1
         2: invokevirtual #322                // Method scala/collection/immutable/Vector.splitAt:(I)Lscala/Tuple2;
         5: astore        5
         7: aload         5
         9: ifnull        47
        12: aload         5
        14: invokevirtual #99                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        17: checkcast     #140                // class scala/collection/immutable/Vector
        20: astore        6
        22: aload         5
        24: invokevirtual #102                // Method scala/Tuple2._2:()Ljava/lang/Object;
        27: checkcast     #140                // class scala/collection/immutable/Vector
        30: astore        7
        32: new           #95                 // class scala/Tuple2
        35: dup
        36: aload         6
        38: aload         7
        40: invokespecial #107                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        43: astore_3
        44: goto          60
        47: goto          50
        50: new           #109                // class scala/MatchError
        53: dup
        54: aload         5
        56: invokespecial #112                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        59: athrow
        60: aload_3
        61: astore        4
        63: aload         4
        65: invokevirtual #99                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        68: checkcast     #140                // class scala/collection/immutable/Vector
        71: astore        8
        73: aload         4
        75: invokevirtual #102                // Method scala/Tuple2._2:()Ljava/lang/Object;
        78: checkcast     #140                // class scala/collection/immutable/Vector
        81: astore        9
        83: aload         8
        85: getstatic     #327                // Field scala/package$.MODULE$:Lscala/package$;
        88: invokevirtual #331                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
        91: iload_2
        92: iload_1
        93: isub
        94: invokedynamic #339,  0            // InvokeDynamic #11:apply:()Lscala/Function0;
        99: invokevirtual #345                // Method scala/collection/immutable/Vector$.fill:(ILscala/Function0;)Lscala/collection/SeqOps;
       102: invokevirtual #349                // Method scala/collection/immutable/Vector.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
       105: checkcast     #351                // class scala/collection/IterableOps
       108: aload         9
       110: invokeinterface #352,  2          // InterfaceMethod scala/collection/IterableOps.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
       115: checkcast     #140                // class scala/collection/immutable/Vector
       118: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 47
          locals = [ top, top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/immutable/Vector, int, int, class scala/Tuple2, top, class scala/Tuple2, class scala/collection/immutable/Vector, class scala/collection/immutable/Vector ]
          stack = []
      LineNumberTable:
        line 213: 0
        line 214: 83
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      25     6 before   Lscala/collection/immutable/Vector;
           32      15     7 after   Lscala/collection/immutable/Vector;
           73      45     8 before   Lscala/collection/immutable/Vector;
           83      35     9 after   Lscala/collection/immutable/Vector;
            0     119     0    xs   Lscala/collection/immutable/Vector;
            0     119     1 original   I
            0     119     2  next   I
    MethodParameters:
      Name                           Flags
      xs                             final
      original                       final
      next                           final

  public static final boolean $anonfun$listCompare$4(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #48                 // Field MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokespecial #357                // Method isNumericOrMinMax:(Lcoursier/core/Version$Item;)Z
         7: ireturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public static final boolean $anonfun$listCompare$5(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #48                 // Field MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokespecial #357                // Method isNumericOrMinMax:(Lcoursier/core/Version$Item;)Z
         7: ireturn
      LineNumberTable:
        line 217: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public static final boolean $anonfun$listCompare0$1(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #361                // Method coursier/core/Version$Item.isEmpty:()Z
         4: ireturn
      LineNumberTable:
        line 233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$11   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static final int $anonfun$listCompare0$2();
    descriptor: ()I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 233: 0

  public static final int $anonfun$listCompare0$3(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #366                // Method coursier/core/Version$Item.compareToEmpty:()I
         4: ireturn
      LineNumberTable:
        line 233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$12   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$12                           final

  public static final boolean $anonfun$listCompare0$4(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #361                // Method coursier/core/Version$Item.isEmpty:()Z
         4: ireturn
      LineNumberTable:
        line 236: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$13   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$13                           final

  public static final int $anonfun$listCompare0$5();
    descriptor: ()I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 236: 0

  public static final int $anonfun$listCompare0$6(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #366                // Method coursier/core/Version$Item.compareToEmpty:()I
         4: ireturn
      LineNumberTable:
        line 236: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$14   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$14                           final

  private coursier.core.Version$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #371                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 244: 0
        line 14: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version$;

  public static final java.lang.Object $anonfun$listCompare$1$adapted(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #373                // Method $anonfun$listCompare$1:(Lcoursier/core/Version$Item;)Z
         4: invokestatic  #377                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public static final java.lang.Object $anonfun$listCompare$2$adapted(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #379                // Method $anonfun$listCompare$2:(Lcoursier/core/Version$Item;)Z
         4: invokestatic  #377                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public static final java.lang.Object $anonfun$listCompare$4$adapted(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #381                // Method $anonfun$listCompare$4:(Lcoursier/core/Version$Item;)Z
         4: invokestatic  #377                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public static final java.lang.Object $anonfun$listCompare$5$adapted(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #383                // Method $anonfun$listCompare$5:(Lcoursier/core/Version$Item;)Z
         4: invokestatic  #377                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 217: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  item   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      item                           final

  public static final java.lang.Object $anonfun$listCompare0$1$adapted(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #385                // Method $anonfun$listCompare0$1:(Lcoursier/core/Version$Item;)Z
         4: invokestatic  #377                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$11   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static final java.lang.Object $anonfun$listCompare0$3$adapted(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #387                // Method $anonfun$listCompare0$3:(Lcoursier/core/Version$Item;)I
         4: invokestatic  #391                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$12   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$12                           final

  public static final java.lang.Object $anonfun$listCompare0$4$adapted(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #393                // Method $anonfun$listCompare0$4:(Lcoursier/core/Version$Item;)Z
         4: invokestatic  #377                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 236: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$13   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$13                           final

  public static final java.lang.Object $anonfun$listCompare0$6$adapted(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #395                // Method $anonfun$listCompare0$6:(Lcoursier/core/Version$Item;)I
         4: invokestatic  #391                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 236: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$14   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$14                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #407,  0            // InvokeDynamic #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // BuildMetadata=class coursier/core/Version$BuildMetadata of class coursier/core/Version
  public static abstract #15= #14 of #11; // Item=class coursier/core/Version$Item of class coursier/core/Version
  public static #18= #17 of #11;          // =class coursier/core/Version$Max$ of class coursier/core/Version
  public static #18= #20 of #11;          // =class coursier/core/Version$Min$ of class coursier/core/Version
  public static final #23= #22 of #11;    // Number=class coursier/core/Version$Number of class coursier/core/Version
  public static #18= #25 of #11;          // =class coursier/core/Version$Number$ of class coursier/core/Version
  public static abstract #28= #27 of #11; // Numeric=class coursier/core/Version$Numeric of class coursier/core/Version
  public static #18= #30 of #11;          // =class coursier/core/Version$Tokenizer$ of class coursier/core/Version
  public static final #35= #32 of #34;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "Version.scala"
BootstrapMethods:
  0: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #125 REF_invokeStatic coursier/core/Version$.$anonfun$items$1:(Lscala/Tuple2;)Lcoursier/core/Version$Item;
      #126 (Lscala/Tuple2;)Lcoursier/core/Version$Item;
      #127 5
      #128 1
      #126 (Lscala/Tuple2;)Lcoursier/core/Version$Item;
  1: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #163 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #127 5
      #128 1
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  2: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #172 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$2$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #127 5
      #128 1
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  3: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #177 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #127 5
      #128 1
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  4: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #185 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$5$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #127 5
      #128 1
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  5: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #235 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #127 5
      #128 1
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  6: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #246 ()I
      #250 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$2:()I
      #246 ()I
      #128 1
  7: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #258 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$3$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #127 5
      #128 1
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  8: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #275 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #127 5
      #128 1
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  9: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #246 ()I
      #280 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$5:()I
      #246 ()I
      #128 1
  10: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #285 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$6$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #127 5
      #128 1
      #164 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  11: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #332 ()Ljava/lang/Object;
      #335 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$3:()Lcoursier/core/Version$Number;
      #336 ()Lcoursier/core/Version$Number;
      #127 5
      #128 1
      #336 ()Lcoursier/core/Version$Number;
  12: #404 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #125 REF_invokeStatic coursier/core/Version$.$anonfun$items$1:(Lscala/Tuple2;)Lcoursier/core/Version$Item;
      #163 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #172 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$2$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #335 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$3:()Lcoursier/core/Version$Number;
      #177 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #185 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare$5$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #235 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #250 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$2:()I
      #258 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$3$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #275 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$4$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #280 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$5:()I
      #285 REF_invokeStatic coursier/core/Version$.$anonfun$listCompare0$6$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xA4 (unknown attribute)
   01 01 00 20 00 7A 00 7B 01 01 38 00 48 01 00 A2
   00 A3 01 01 3B 00 48 01 00 AC 00 A3 01 01 3C 00
   46 01 01 66 00 48 01 00 B1 00 A3 01 01 69 00 48
   01 00 B9 00 A3 01 01 6A 00 48 01 00 EB 00 A3 01
   00 FA 00 C1 01 01 6D 01 26 01 01 02 00 A3 01 01
   72 00 48 01 01 13 00 A3 01 01 18 00 C1 01 01 74
   01 26 01 01 1D 00 A3 01 00 2F 00 2E 01 00 36 00
   37 01 00 2B 00 46 01 00 56 00 48 01 00 47 00 48
   01 00 4B 00 48 01 00 57 00 58 01 00 9D 00 9E 01
   00 CD 00 9E 01 00 D0 00 D1 01 01 30 00 64 01 00
   29 00 44 01
  Scala: length = 0x0 (unknown attribute)

