Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/MessagePack$Code$.class
  Last modified May 29, 2022; size 14398 bytes
  SHA-256 checksum ba2dbdfb90e452b400d4e6a2a61d884bf49c1ef3a8c209deb9e3677734062648
  Compiled from "MessagePack.scala"
public class org.sireum.MessagePack$Code$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/MessagePack$Code$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 38, methods: 54, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/MessagePack$Code$
    #2 = Class              #1            // org/sireum/MessagePack$Code$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               MessagePack.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/MessagePack
   #12 = Class              #11           // org/sireum/MessagePack
   #13 = Utf8               Code$
   #14 = Utf8               org/sireum/MessagePack$Kind$
   #15 = Class              #14           // org/sireum/MessagePack$Kind$
   #16 = Utf8               Kind$
   #17 = Utf8               org/sireum/MessagePack$Kind$ARRAY$
   #18 = Class              #17           // org/sireum/MessagePack$Kind$ARRAY$
   #19 = Utf8               ARRAY$
   #20 = Utf8               org/sireum/MessagePack$Kind$BINARY$
   #21 = Class              #20           // org/sireum/MessagePack$Kind$BINARY$
   #22 = Utf8               BINARY$
   #23 = Utf8               org/sireum/MessagePack$Kind$BOOLEAN$
   #24 = Class              #23           // org/sireum/MessagePack$Kind$BOOLEAN$
   #25 = Utf8               BOOLEAN$
   #26 = Utf8               org/sireum/MessagePack$Kind$EXTENSION$
   #27 = Class              #26           // org/sireum/MessagePack$Kind$EXTENSION$
   #28 = Utf8               EXTENSION$
   #29 = Utf8               org/sireum/MessagePack$Kind$FLOAT$
   #30 = Class              #29           // org/sireum/MessagePack$Kind$FLOAT$
   #31 = Utf8               FLOAT$
   #32 = Utf8               org/sireum/MessagePack$Kind$INTEGER$
   #33 = Class              #32           // org/sireum/MessagePack$Kind$INTEGER$
   #34 = Utf8               INTEGER$
   #35 = Utf8               org/sireum/MessagePack$Kind$MAP$
   #36 = Class              #35           // org/sireum/MessagePack$Kind$MAP$
   #37 = Utf8               MAP$
   #38 = Utf8               org/sireum/MessagePack$Kind$NIL$
   #39 = Class              #38           // org/sireum/MessagePack$Kind$NIL$
   #40 = Utf8               NIL$
   #41 = Utf8               org/sireum/MessagePack$Kind$NONE$
   #42 = Class              #41           // org/sireum/MessagePack$Kind$NONE$
   #43 = Utf8               NONE$
   #44 = Utf8               org/sireum/MessagePack$Kind$STRING$
   #45 = Class              #44           // org/sireum/MessagePack$Kind$STRING$
   #46 = Utf8               STRING$
   #47 = Utf8               org/sireum/MessagePack$Kind$Type
   #48 = Class              #47           // org/sireum/MessagePack$Kind$Type
   #49 = Utf8               Type
   #50 = Utf8               org/sireum/U8$U8$Slang
   #51 = Class              #50           // org/sireum/U8$U8$Slang
   #52 = Utf8               org/sireum/U8
   #53 = Class              #52           // org/sireum/U8
   #54 = Utf8               U8$Slang
   #55 = Utf8               org/sireum/U8$U8$Slang$u8$
   #56 = Class              #55           // org/sireum/U8$U8$Slang$u8$
   #57 = Utf8               u8$
   #58 = Utf8               org/sireum/Z$BV$
   #59 = Class              #58           // org/sireum/Z$BV$
   #60 = Utf8               org/sireum/Z
   #61 = Class              #60           // org/sireum/Z
   #62 = Utf8               BV$
   #63 = Utf8               org/sireum/Z$BV$Byte
   #64 = Class              #63           // org/sireum/Z$BV$Byte
   #65 = Utf8               Byte
   #66 = Utf8               MODULE$
   #67 = Utf8               Lorg/sireum/MessagePack$Code$;
   #68 = Utf8               POSFIXINT_MASK
   #69 = Utf8               B
   #70 = Utf8               FIXMAP_PREFIX
   #71 = Utf8               FIXARRAY_PREFIX
   #72 = Utf8               FIXSTR_PREFIX
   #73 = Utf8               NIL
   #74 = Utf8               FALSE
   #75 = Utf8               TRUE
   #76 = Utf8               BIN8
   #77 = Utf8               BIN16
   #78 = Utf8               BIN32
   #79 = Utf8               EXT8
   #80 = Utf8               EXT16
   #81 = Utf8               EXT32
   #82 = Utf8               FLOAT32
   #83 = Utf8               FLOAT64
   #84 = Utf8               UINT8
   #85 = Utf8               UINT16
   #86 = Utf8               UINT32
   #87 = Utf8               UINT64
   #88 = Utf8               INT8
   #89 = Utf8               INT16
   #90 = Utf8               INT32
   #91 = Utf8               INT64
   #92 = Utf8               FIXEXT1
   #93 = Utf8               FIXEXT2
   #94 = Utf8               FIXEXT4
   #95 = Utf8               FIXEXT8
   #96 = Utf8               FIXEXT16
   #97 = Utf8               STR8
   #98 = Utf8               STR16
   #99 = Utf8               STR32
  #100 = Utf8               ARRAY16
  #101 = Utf8               ARRAY32
  #102 = Utf8               MAP16
  #103 = Utf8               MAP32
  #104 = Utf8               NEGFIXINT_PREFIX
  #105 = Utf8               formatTable
  #106 = Utf8               Lorg/sireum/IS;
  #107 = Utf8               Lorg/sireum/IS<Lorg/sireum/U8;Lorg/sireum/MessagePack$Kind$Type;>;
  #108 = Utf8               <clinit>
  #109 = Utf8               ()V
  #110 = Utf8               <init>
  #111 = NameAndType        #110:#109     // "<init>":()V
  #112 = Methodref          #2.#111       // org/sireum/MessagePack$Code$."<init>":()V
  #113 = NameAndType        #66:#67       // MODULE$:Lorg/sireum/MessagePack$Code$;
  #114 = Fieldref           #2.#113       // org/sireum/MessagePack$Code$.MODULE$:Lorg/sireum/MessagePack$Code$;
  #115 = Utf8               org/sireum/U8$
  #116 = Class              #115          // org/sireum/U8$
  #117 = Utf8               Lorg/sireum/U8$;
  #118 = NameAndType        #66:#117      // MODULE$:Lorg/sireum/U8$;
  #119 = Fieldref           #116.#118     // org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
  #120 = Utf8               scala/StringContext
  #121 = Class              #120          // scala/StringContext
  #122 = Utf8               scala/runtime/ScalaRunTime$
  #123 = Class              #122          // scala/runtime/ScalaRunTime$
  #124 = Utf8               Lscala/runtime/ScalaRunTime$;
  #125 = NameAndType        #66:#124      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #126 = Fieldref           #123.#125     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #127 = Utf8               java/lang/String
  #128 = Class              #127          // java/lang/String
  #129 = Utf8               0x80
  #130 = String             #129          // 0x80
  #131 = Utf8               [Ljava/lang/Object;
  #132 = Class              #131          // "[Ljava/lang/Object;"
  #133 = Utf8               wrapRefArray
  #134 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #135 = NameAndType        #133:#134     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #136 = Methodref          #123.#135     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #137 = Utf8               (Lscala/collection/immutable/Seq;)V
  #138 = NameAndType        #110:#137     // "<init>":(Lscala/collection/immutable/Seq;)V
  #139 = Methodref          #121.#138     // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
  #140 = Utf8               (Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
  #141 = NameAndType        #54:#140      // U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
  #142 = Methodref          #116.#141     // org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
  #143 = Utf8               u8
  #144 = Utf8               ()Lorg/sireum/U8$U8$Slang$u8$;
  #145 = NameAndType        #143:#144     // u8:()Lorg/sireum/U8$U8$Slang$u8$;
  #146 = Methodref          #51.#145      // org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
  #147 = Utf8               scala/collection/immutable/Nil$
  #148 = Class              #147          // scala/collection/immutable/Nil$
  #149 = Utf8               Lscala/collection/immutable/Nil$;
  #150 = NameAndType        #66:#149      // MODULE$:Lscala/collection/immutable/Nil$;
  #151 = Fieldref           #148.#150     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #152 = Utf8               apply
  #153 = Utf8               (Lscala/collection/immutable/Seq;)B
  #154 = NameAndType        #152:#153     // apply:(Lscala/collection/immutable/Seq;)B
  #155 = Methodref          #56.#154      // org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
  #156 = NameAndType        #68:#69       // POSFIXINT_MASK:B
  #157 = Fieldref           #2.#156       // org/sireum/MessagePack$Code$.POSFIXINT_MASK:B
  #158 = NameAndType        #70:#69       // FIXMAP_PREFIX:B
  #159 = Fieldref           #2.#158       // org/sireum/MessagePack$Code$.FIXMAP_PREFIX:B
  #160 = Utf8               0x90
  #161 = String             #160          // 0x90
  #162 = NameAndType        #71:#69       // FIXARRAY_PREFIX:B
  #163 = Fieldref           #2.#162       // org/sireum/MessagePack$Code$.FIXARRAY_PREFIX:B
  #164 = Utf8               0xA0
  #165 = String             #164          // 0xA0
  #166 = NameAndType        #72:#69       // FIXSTR_PREFIX:B
  #167 = Fieldref           #2.#166       // org/sireum/MessagePack$Code$.FIXSTR_PREFIX:B
  #168 = Utf8               0xC0
  #169 = String             #168          // 0xC0
  #170 = NameAndType        #73:#69       // NIL:B
  #171 = Fieldref           #2.#170       // org/sireum/MessagePack$Code$.NIL:B
  #172 = Utf8               0xC2
  #173 = String             #172          // 0xC2
  #174 = NameAndType        #74:#69       // FALSE:B
  #175 = Fieldref           #2.#174       // org/sireum/MessagePack$Code$.FALSE:B
  #176 = Utf8               0xC3
  #177 = String             #176          // 0xC3
  #178 = NameAndType        #75:#69       // TRUE:B
  #179 = Fieldref           #2.#178       // org/sireum/MessagePack$Code$.TRUE:B
  #180 = Utf8               0xC4
  #181 = String             #180          // 0xC4
  #182 = NameAndType        #76:#69       // BIN8:B
  #183 = Fieldref           #2.#182       // org/sireum/MessagePack$Code$.BIN8:B
  #184 = Utf8               0xC5
  #185 = String             #184          // 0xC5
  #186 = NameAndType        #77:#69       // BIN16:B
  #187 = Fieldref           #2.#186       // org/sireum/MessagePack$Code$.BIN16:B
  #188 = Utf8               0xC6
  #189 = String             #188          // 0xC6
  #190 = NameAndType        #78:#69       // BIN32:B
  #191 = Fieldref           #2.#190       // org/sireum/MessagePack$Code$.BIN32:B
  #192 = Utf8               0xC7
  #193 = String             #192          // 0xC7
  #194 = NameAndType        #79:#69       // EXT8:B
  #195 = Fieldref           #2.#194       // org/sireum/MessagePack$Code$.EXT8:B
  #196 = Utf8               0xC8
  #197 = String             #196          // 0xC8
  #198 = NameAndType        #80:#69       // EXT16:B
  #199 = Fieldref           #2.#198       // org/sireum/MessagePack$Code$.EXT16:B
  #200 = Utf8               0xC9
  #201 = String             #200          // 0xC9
  #202 = NameAndType        #81:#69       // EXT32:B
  #203 = Fieldref           #2.#202       // org/sireum/MessagePack$Code$.EXT32:B
  #204 = Utf8               0xCA
  #205 = String             #204          // 0xCA
  #206 = NameAndType        #82:#69       // FLOAT32:B
  #207 = Fieldref           #2.#206       // org/sireum/MessagePack$Code$.FLOAT32:B
  #208 = Utf8               0xCB
  #209 = String             #208          // 0xCB
  #210 = NameAndType        #83:#69       // FLOAT64:B
  #211 = Fieldref           #2.#210       // org/sireum/MessagePack$Code$.FLOAT64:B
  #212 = Utf8               0xCC
  #213 = String             #212          // 0xCC
  #214 = NameAndType        #84:#69       // UINT8:B
  #215 = Fieldref           #2.#214       // org/sireum/MessagePack$Code$.UINT8:B
  #216 = Utf8               0xCD
  #217 = String             #216          // 0xCD
  #218 = NameAndType        #85:#69       // UINT16:B
  #219 = Fieldref           #2.#218       // org/sireum/MessagePack$Code$.UINT16:B
  #220 = Utf8               0xCE
  #221 = String             #220          // 0xCE
  #222 = NameAndType        #86:#69       // UINT32:B
  #223 = Fieldref           #2.#222       // org/sireum/MessagePack$Code$.UINT32:B
  #224 = Utf8               0xCF
  #225 = String             #224          // 0xCF
  #226 = NameAndType        #87:#69       // UINT64:B
  #227 = Fieldref           #2.#226       // org/sireum/MessagePack$Code$.UINT64:B
  #228 = Utf8               0xD0
  #229 = String             #228          // 0xD0
  #230 = NameAndType        #88:#69       // INT8:B
  #231 = Fieldref           #2.#230       // org/sireum/MessagePack$Code$.INT8:B
  #232 = Utf8               0xD1
  #233 = String             #232          // 0xD1
  #234 = NameAndType        #89:#69       // INT16:B
  #235 = Fieldref           #2.#234       // org/sireum/MessagePack$Code$.INT16:B
  #236 = Utf8               0xD2
  #237 = String             #236          // 0xD2
  #238 = NameAndType        #90:#69       // INT32:B
  #239 = Fieldref           #2.#238       // org/sireum/MessagePack$Code$.INT32:B
  #240 = Utf8               0xD3
  #241 = String             #240          // 0xD3
  #242 = NameAndType        #91:#69       // INT64:B
  #243 = Fieldref           #2.#242       // org/sireum/MessagePack$Code$.INT64:B
  #244 = Utf8               0xD4
  #245 = String             #244          // 0xD4
  #246 = NameAndType        #92:#69       // FIXEXT1:B
  #247 = Fieldref           #2.#246       // org/sireum/MessagePack$Code$.FIXEXT1:B
  #248 = Utf8               0xD5
  #249 = String             #248          // 0xD5
  #250 = NameAndType        #93:#69       // FIXEXT2:B
  #251 = Fieldref           #2.#250       // org/sireum/MessagePack$Code$.FIXEXT2:B
  #252 = Utf8               0xD6
  #253 = String             #252          // 0xD6
  #254 = NameAndType        #94:#69       // FIXEXT4:B
  #255 = Fieldref           #2.#254       // org/sireum/MessagePack$Code$.FIXEXT4:B
  #256 = Utf8               0xD7
  #257 = String             #256          // 0xD7
  #258 = NameAndType        #95:#69       // FIXEXT8:B
  #259 = Fieldref           #2.#258       // org/sireum/MessagePack$Code$.FIXEXT8:B
  #260 = Utf8               0xD8
  #261 = String             #260          // 0xD8
  #262 = NameAndType        #96:#69       // FIXEXT16:B
  #263 = Fieldref           #2.#262       // org/sireum/MessagePack$Code$.FIXEXT16:B
  #264 = Utf8               0xD9
  #265 = String             #264          // 0xD9
  #266 = NameAndType        #97:#69       // STR8:B
  #267 = Fieldref           #2.#266       // org/sireum/MessagePack$Code$.STR8:B
  #268 = Utf8               0xDA
  #269 = String             #268          // 0xDA
  #270 = NameAndType        #98:#69       // STR16:B
  #271 = Fieldref           #2.#270       // org/sireum/MessagePack$Code$.STR16:B
  #272 = Utf8               0xDB
  #273 = String             #272          // 0xDB
  #274 = NameAndType        #99:#69       // STR32:B
  #275 = Fieldref           #2.#274       // org/sireum/MessagePack$Code$.STR32:B
  #276 = Utf8               0xDC
  #277 = String             #276          // 0xDC
  #278 = NameAndType        #100:#69      // ARRAY16:B
  #279 = Fieldref           #2.#278       // org/sireum/MessagePack$Code$.ARRAY16:B
  #280 = Utf8               0xDD
  #281 = String             #280          // 0xDD
  #282 = NameAndType        #101:#69      // ARRAY32:B
  #283 = Fieldref           #2.#282       // org/sireum/MessagePack$Code$.ARRAY32:B
  #284 = Utf8               0xDE
  #285 = String             #284          // 0xDE
  #286 = NameAndType        #102:#69      // MAP16:B
  #287 = Fieldref           #2.#286       // org/sireum/MessagePack$Code$.MAP16:B
  #288 = Utf8               0xDF
  #289 = String             #288          // 0xDF
  #290 = NameAndType        #103:#69      // MAP32:B
  #291 = Fieldref           #2.#290       // org/sireum/MessagePack$Code$.MAP32:B
  #292 = Utf8               0xE0
  #293 = String             #292          // 0xE0
  #294 = NameAndType        #104:#69      // NEGFIXINT_PREFIX:B
  #295 = Fieldref           #2.#294       // org/sireum/MessagePack$Code$.NEGFIXINT_PREFIX:B
  #296 = Utf8               org/sireum/IS$
  #297 = Class              #296          // org/sireum/IS$
  #298 = Utf8               Lorg/sireum/IS$;
  #299 = NameAndType        #66:#298      // MODULE$:Lorg/sireum/IS$;
  #300 = Fieldref           #297.#299     // org/sireum/IS$.MODULE$:Lorg/sireum/IS$;
  #301 = Utf8               $U8Companion
  #302 = Utf8               ()Lorg/sireum/$ZCompanion;
  #303 = NameAndType        #301:#302     // $U8Companion:()Lorg/sireum/$ZCompanion;
  #304 = Methodref          #116.#303     // org/sireum/U8$.$U8Companion:()Lorg/sireum/$ZCompanion;
  #305 = Utf8               (Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #306 = NameAndType        #152:#305     // apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #307 = Methodref          #297.#306     // org/sireum/IS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #308 = Utf8               org/sireum/Z$
  #309 = Class              #308          // org/sireum/Z$
  #310 = Utf8               Lorg/sireum/Z$;
  #311 = NameAndType        #66:#310      // MODULE$:Lorg/sireum/Z$;
  #312 = Fieldref           #309.#311     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #313 = Utf8               (I)Lorg/sireum/Z;
  #314 = NameAndType        #152:#313     // apply:(I)Lorg/sireum/Z;
  #315 = Methodref          #309.#314     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #316 = Utf8               0
  #317 = String             #316          // 0
  #318 = Utf8               org/sireum/B$
  #319 = Class              #318          // org/sireum/B$
  #320 = Utf8               Lorg/sireum/B$;
  #321 = NameAndType        #66:#320      // MODULE$:Lorg/sireum/B$;
  #322 = Fieldref           #319.#321     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #323 = Utf8               $less$eq
  #324 = Utf8               (Lorg/sireum/Z;)Z
  #325 = NameAndType        #323:#324     // $less$eq:(Lorg/sireum/Z;)Z
  #326 = InterfaceMethodref #61.#325      // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #327 = Utf8               $4B
  #328 = Utf8               (Z)Z
  #329 = NameAndType        #327:#328     // $4B:(Z)Z
  #330 = Methodref          #319.#329     // org/sireum/B$.$4B:(Z)Z
  #331 = Utf8               getType0$1
  #332 = Utf8               (B)Lorg/sireum/MessagePack$Kind$Type;
  #333 = NameAndType        #331:#332     // getType0$1:(B)Lorg/sireum/MessagePack$Kind$Type;
  #334 = Methodref          #2.#333       // org/sireum/MessagePack$Code$.getType0$1:(B)Lorg/sireum/MessagePack$Kind$Type;
  #335 = Utf8               org/sireum/IS
  #336 = Class              #335          // org/sireum/IS
  #337 = Utf8               $colon$plus
  #338 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #339 = NameAndType        #337:#338     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #340 = Methodref          #336.#339     // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #341 = Utf8               $plus
  #342 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #343 = NameAndType        #341:#342     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #344 = InterfaceMethodref #61.#343      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #345 = Utf8               (B)V
  #346 = NameAndType        #110:#345     // "<init>":(B)V
  #347 = Methodref          #53.#346      // org/sireum/U8."<init>":(B)V
  #348 = Utf8               1
  #349 = String             #348          // 1
  #350 = Utf8               (Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #351 = NameAndType        #341:#350     // $plus:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #352 = Methodref          #53.#351      // org/sireum/U8.$plus:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #353 = Utf8               value
  #354 = Utf8               ()B
  #355 = NameAndType        #353:#354     // value:()B
  #356 = Methodref          #53.#355      // org/sireum/U8.value:()B
  #357 = NameAndType        #105:#106     // formatTable:Lorg/sireum/IS;
  #358 = Fieldref           #2.#357       // org/sireum/MessagePack$Code$.formatTable:Lorg/sireum/IS;
  #359 = Utf8               a
  #360 = Utf8               n
  #361 = Utf8               Lorg/sireum/Z;
  #362 = Utf8               i
  #363 = Utf8               this
  #364 = Utf8               ()Lorg/sireum/IS;
  #365 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/U8;Lorg/sireum/MessagePack$Kind$Type;>;
  #366 = Utf8               getType
  #367 = NameAndType        #105:#364     // formatTable:()Lorg/sireum/IS;
  #368 = Methodref          #2.#367       // org/sireum/MessagePack$Code$.formatTable:()Lorg/sireum/IS;
  #369 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #370 = NameAndType        #152:#369     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #371 = Methodref          #336.#370     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #372 = Utf8               isFixInt
  #373 = Utf8               (B)Z
  #374 = Utf8               0xFF
  #375 = String             #374          // 0xFF
  #376 = Utf8               $amp
  #377 = NameAndType        #376:#350     // $amp:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #378 = Methodref          #53.#377      // org/sireum/U8.$amp:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #379 = Utf8               0x7F
  #380 = String             #379          // 0x7F
  #381 = Utf8               (Lorg/sireum/Z$BV$Byte;)Z
  #382 = NameAndType        #323:#381     // $less$eq:(Lorg/sireum/Z$BV$Byte;)Z
  #383 = Methodref          #53.#382      // org/sireum/U8.$less$eq:(Lorg/sireum/Z$BV$Byte;)Z
  #384 = Utf8               ()Ljava/lang/Object;
  #385 = MethodType         #384          //  ()Ljava/lang/Object;
  #386 = Utf8               $anonfun$isFixInt$1$adapted
  #387 = Utf8               (B)Ljava/lang/Object;
  #388 = NameAndType        #386:#387     // $anonfun$isFixInt$1$adapted:(B)Ljava/lang/Object;
  #389 = Methodref          #2.#388       // org/sireum/MessagePack$Code$.$anonfun$isFixInt$1$adapted:(B)Ljava/lang/Object;
  #390 = MethodHandle       6:#389        // REF_invokeStatic org/sireum/MessagePack$Code$.$anonfun$isFixInt$1$adapted:(B)Ljava/lang/Object;
  #391 = Integer            1
  #392 = Utf8               java/lang/invoke/LambdaMetafactory
  #393 = Class              #392          // java/lang/invoke/LambdaMetafactory
  #394 = Utf8               altMetafactory
  #395 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #396 = NameAndType        #394:#395     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #397 = Methodref          #393.#396     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #398 = MethodHandle       6:#397        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #399 = Utf8               (B)Lscala/Function0;
  #400 = NameAndType        #152:#399     // apply:(B)Lscala/Function0;
  #401 = InvokeDynamic      #0:#400       // #0:apply:(B)Lscala/Function0;
  #402 = Utf8               $bar$bar$extension
  #403 = Utf8               (ZLscala/Function0;)Z
  #404 = NameAndType        #402:#403     // $bar$bar$extension:(ZLscala/Function0;)Z
  #405 = Methodref          #319.#404     // org/sireum/B$.$bar$bar$extension:(ZLscala/Function0;)Z
  #406 = Utf8               v
  #407 = Utf8               isPosFixInt
  #408 = NameAndType        #68:#354      // POSFIXINT_MASK:()B
  #409 = Methodref          #2.#408       // org/sireum/MessagePack$Code$.POSFIXINT_MASK:()B
  #410 = Utf8               equals
  #411 = Utf8               (Ljava/lang/Object;)Z
  #412 = NameAndType        #410:#411     // equals:(Ljava/lang/Object;)Z
  #413 = Methodref          #4.#412       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #414 = NameAndType        #152:#328     // apply:(Z)Z
  #415 = Methodref          #319.#414     // org/sireum/B$.apply:(Z)Z
  #416 = Utf8               isNegFixInt
  #417 = NameAndType        #104:#354     // NEGFIXINT_PREFIX:()B
  #418 = Methodref          #2.#417       // org/sireum/MessagePack$Code$.NEGFIXINT_PREFIX:()B
  #419 = Utf8               isFixStr
  #420 = NameAndType        #72:#354      // FIXSTR_PREFIX:()B
  #421 = Methodref          #2.#420       // org/sireum/MessagePack$Code$.FIXSTR_PREFIX:()B
  #422 = Utf8               isFixedArray
  #423 = Utf8               0xF0
  #424 = String             #423          // 0xF0
  #425 = NameAndType        #71:#354      // FIXARRAY_PREFIX:()B
  #426 = Methodref          #2.#425       // org/sireum/MessagePack$Code$.FIXARRAY_PREFIX:()B
  #427 = Utf8               isFixedMap
  #428 = NameAndType        #70:#354      // FIXMAP_PREFIX:()B
  #429 = Methodref          #2.#428       // org/sireum/MessagePack$Code$.FIXMAP_PREFIX:()B
  #430 = Utf8               isFixedRaw
  #431 = Utf8               isExt
  #432 = NameAndType        #79:#354      // EXT8:()B
  #433 = Methodref          #2.#432       // org/sireum/MessagePack$Code$.EXT8:()B
  #434 = Utf8               org/sireum/package$
  #435 = Class              #434          // org/sireum/package$
  #436 = Utf8               Lorg/sireum/package$;
  #437 = NameAndType        #66:#436      // MODULE$:Lorg/sireum/package$;
  #438 = Fieldref           #435.#437     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #439 = Utf8               T
  #440 = Utf8               ()Z
  #441 = NameAndType        #439:#440     // T:()Z
  #442 = Methodref          #435.#441     // org/sireum/package$.T:()Z
  #443 = NameAndType        #80:#354      // EXT16:()B
  #444 = Methodref          #2.#443       // org/sireum/MessagePack$Code$.EXT16:()B
  #445 = NameAndType        #81:#354      // EXT32:()B
  #446 = Methodref          #2.#445       // org/sireum/MessagePack$Code$.EXT32:()B
  #447 = NameAndType        #92:#354      // FIXEXT1:()B
  #448 = Methodref          #2.#447       // org/sireum/MessagePack$Code$.FIXEXT1:()B
  #449 = NameAndType        #93:#354      // FIXEXT2:()B
  #450 = Methodref          #2.#449       // org/sireum/MessagePack$Code$.FIXEXT2:()B
  #451 = NameAndType        #94:#354      // FIXEXT4:()B
  #452 = Methodref          #2.#451       // org/sireum/MessagePack$Code$.FIXEXT4:()B
  #453 = NameAndType        #95:#354      // FIXEXT8:()B
  #454 = Methodref          #2.#453       // org/sireum/MessagePack$Code$.FIXEXT8:()B
  #455 = NameAndType        #96:#354      // FIXEXT16:()B
  #456 = Methodref          #2.#455       // org/sireum/MessagePack$Code$.FIXEXT16:()B
  #457 = Utf8               F
  #458 = NameAndType        #457:#440     // F:()Z
  #459 = Methodref          #435.#458     // org/sireum/package$.F:()Z
  #460 = Utf8               $anonfun$formatTable$1
  #461 = Utf8               n$2
  #462 = NameAndType        #416:#373     // isNegFixInt:(B)Z
  #463 = Methodref          #2.#462       // org/sireum/MessagePack$Code$.isNegFixInt:(B)Z
  #464 = NameAndType        #407:#373     // isPosFixInt:(B)Z
  #465 = Methodref          #2.#464       // org/sireum/MessagePack$Code$.isPosFixInt:(B)Z
  #466 = Utf8               $anonfun$formatTable$1$adapted
  #467 = NameAndType        #466:#387     // $anonfun$formatTable$1$adapted:(B)Ljava/lang/Object;
  #468 = Methodref          #2.#467       // org/sireum/MessagePack$Code$.$anonfun$formatTable$1$adapted:(B)Ljava/lang/Object;
  #469 = MethodHandle       6:#468        // REF_invokeStatic org/sireum/MessagePack$Code$.$anonfun$formatTable$1$adapted:(B)Ljava/lang/Object;
  #470 = InvokeDynamic      #1:#400       // #1:apply:(B)Lscala/Function0;
  #471 = Utf8               Lorg/sireum/MessagePack$Kind$INTEGER$;
  #472 = NameAndType        #66:#471      // MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
  #473 = Fieldref           #33.#472      // org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
  #474 = NameAndType        #419:#373     // isFixStr:(B)Z
  #475 = Methodref          #2.#474       // org/sireum/MessagePack$Code$.isFixStr:(B)Z
  #476 = Utf8               Lorg/sireum/MessagePack$Kind$STRING$;
  #477 = NameAndType        #66:#476      // MODULE$:Lorg/sireum/MessagePack$Kind$STRING$;
  #478 = Fieldref           #45.#477      // org/sireum/MessagePack$Kind$STRING$.MODULE$:Lorg/sireum/MessagePack$Kind$STRING$;
  #479 = NameAndType        #422:#373     // isFixedArray:(B)Z
  #480 = Methodref          #2.#479       // org/sireum/MessagePack$Code$.isFixedArray:(B)Z
  #481 = Utf8               Lorg/sireum/MessagePack$Kind$ARRAY$;
  #482 = NameAndType        #66:#481      // MODULE$:Lorg/sireum/MessagePack$Kind$ARRAY$;
  #483 = Fieldref           #18.#482      // org/sireum/MessagePack$Kind$ARRAY$.MODULE$:Lorg/sireum/MessagePack$Kind$ARRAY$;
  #484 = NameAndType        #427:#373     // isFixedMap:(B)Z
  #485 = Methodref          #2.#484       // org/sireum/MessagePack$Code$.isFixedMap:(B)Z
  #486 = Utf8               Lorg/sireum/MessagePack$Kind$MAP$;
  #487 = NameAndType        #66:#486      // MODULE$:Lorg/sireum/MessagePack$Kind$MAP$;
  #488 = Fieldref           #36.#487      // org/sireum/MessagePack$Kind$MAP$.MODULE$:Lorg/sireum/MessagePack$Kind$MAP$;
  #489 = NameAndType        #73:#354      // NIL:()B
  #490 = Methodref          #2.#489       // org/sireum/MessagePack$Code$.NIL:()B
  #491 = Utf8               Lorg/sireum/MessagePack$Kind$NIL$;
  #492 = NameAndType        #66:#491      // MODULE$:Lorg/sireum/MessagePack$Kind$NIL$;
  #493 = Fieldref           #39.#492      // org/sireum/MessagePack$Kind$NIL$.MODULE$:Lorg/sireum/MessagePack$Kind$NIL$;
  #494 = NameAndType        #74:#354      // FALSE:()B
  #495 = Methodref          #2.#494       // org/sireum/MessagePack$Code$.FALSE:()B
  #496 = Utf8               Lorg/sireum/MessagePack$Kind$BOOLEAN$;
  #497 = NameAndType        #66:#496      // MODULE$:Lorg/sireum/MessagePack$Kind$BOOLEAN$;
  #498 = Fieldref           #24.#497      // org/sireum/MessagePack$Kind$BOOLEAN$.MODULE$:Lorg/sireum/MessagePack$Kind$BOOLEAN$;
  #499 = NameAndType        #75:#354      // TRUE:()B
  #500 = Methodref          #2.#499       // org/sireum/MessagePack$Code$.TRUE:()B
  #501 = NameAndType        #76:#354      // BIN8:()B
  #502 = Methodref          #2.#501       // org/sireum/MessagePack$Code$.BIN8:()B
  #503 = Utf8               Lorg/sireum/MessagePack$Kind$BINARY$;
  #504 = NameAndType        #66:#503      // MODULE$:Lorg/sireum/MessagePack$Kind$BINARY$;
  #505 = Fieldref           #21.#504      // org/sireum/MessagePack$Kind$BINARY$.MODULE$:Lorg/sireum/MessagePack$Kind$BINARY$;
  #506 = NameAndType        #77:#354      // BIN16:()B
  #507 = Methodref          #2.#506       // org/sireum/MessagePack$Code$.BIN16:()B
  #508 = NameAndType        #78:#354      // BIN32:()B
  #509 = Methodref          #2.#508       // org/sireum/MessagePack$Code$.BIN32:()B
  #510 = NameAndType        #82:#354      // FLOAT32:()B
  #511 = Methodref          #2.#510       // org/sireum/MessagePack$Code$.FLOAT32:()B
  #512 = Utf8               Lorg/sireum/MessagePack$Kind$FLOAT$;
  #513 = NameAndType        #66:#512      // MODULE$:Lorg/sireum/MessagePack$Kind$FLOAT$;
  #514 = Fieldref           #30.#513      // org/sireum/MessagePack$Kind$FLOAT$.MODULE$:Lorg/sireum/MessagePack$Kind$FLOAT$;
  #515 = NameAndType        #83:#354      // FLOAT64:()B
  #516 = Methodref          #2.#515       // org/sireum/MessagePack$Code$.FLOAT64:()B
  #517 = NameAndType        #84:#354      // UINT8:()B
  #518 = Methodref          #2.#517       // org/sireum/MessagePack$Code$.UINT8:()B
  #519 = NameAndType        #85:#354      // UINT16:()B
  #520 = Methodref          #2.#519       // org/sireum/MessagePack$Code$.UINT16:()B
  #521 = NameAndType        #86:#354      // UINT32:()B
  #522 = Methodref          #2.#521       // org/sireum/MessagePack$Code$.UINT32:()B
  #523 = NameAndType        #87:#354      // UINT64:()B
  #524 = Methodref          #2.#523       // org/sireum/MessagePack$Code$.UINT64:()B
  #525 = NameAndType        #88:#354      // INT8:()B
  #526 = Methodref          #2.#525       // org/sireum/MessagePack$Code$.INT8:()B
  #527 = NameAndType        #89:#354      // INT16:()B
  #528 = Methodref          #2.#527       // org/sireum/MessagePack$Code$.INT16:()B
  #529 = NameAndType        #90:#354      // INT32:()B
  #530 = Methodref          #2.#529       // org/sireum/MessagePack$Code$.INT32:()B
  #531 = NameAndType        #91:#354      // INT64:()B
  #532 = Methodref          #2.#531       // org/sireum/MessagePack$Code$.INT64:()B
  #533 = NameAndType        #97:#354      // STR8:()B
  #534 = Methodref          #2.#533       // org/sireum/MessagePack$Code$.STR8:()B
  #535 = NameAndType        #98:#354      // STR16:()B
  #536 = Methodref          #2.#535       // org/sireum/MessagePack$Code$.STR16:()B
  #537 = NameAndType        #99:#354      // STR32:()B
  #538 = Methodref          #2.#537       // org/sireum/MessagePack$Code$.STR32:()B
  #539 = NameAndType        #100:#354     // ARRAY16:()B
  #540 = Methodref          #2.#539       // org/sireum/MessagePack$Code$.ARRAY16:()B
  #541 = NameAndType        #101:#354     // ARRAY32:()B
  #542 = Methodref          #2.#541       // org/sireum/MessagePack$Code$.ARRAY32:()B
  #543 = NameAndType        #102:#354     // MAP16:()B
  #544 = Methodref          #2.#543       // org/sireum/MessagePack$Code$.MAP16:()B
  #545 = NameAndType        #103:#354     // MAP32:()B
  #546 = Methodref          #2.#545       // org/sireum/MessagePack$Code$.MAP32:()B
  #547 = Utf8               Lorg/sireum/MessagePack$Kind$EXTENSION$;
  #548 = NameAndType        #66:#547      // MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
  #549 = Fieldref           #27.#548      // org/sireum/MessagePack$Kind$EXTENSION$.MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
  #550 = Utf8               Lorg/sireum/MessagePack$Kind$NONE$;
  #551 = NameAndType        #66:#550      // MODULE$:Lorg/sireum/MessagePack$Kind$NONE$;
  #552 = Fieldref           #42.#551      // org/sireum/MessagePack$Kind$NONE$.MODULE$:Lorg/sireum/MessagePack$Kind$NONE$;
  #553 = Utf8               $anonfun$isFixInt$1
  #554 = Utf8               v$1
  #555 = Utf8               $greater$eq
  #556 = NameAndType        #555:#381     // $greater$eq:(Lorg/sireum/Z$BV$Byte;)Z
  #557 = Methodref          #53.#556      // org/sireum/U8.$greater$eq:(Lorg/sireum/Z$BV$Byte;)Z
  #558 = Methodref          #4.#111       // java/lang/Object."<init>":()V
  #559 = Utf8               org/sireum/B
  #560 = Class              #559          // org/sireum/B
  #561 = NameAndType        #553:#373     // $anonfun$isFixInt$1:(B)Z
  #562 = Methodref          #2.#561       // org/sireum/MessagePack$Code$.$anonfun$isFixInt$1:(B)Z
  #563 = Utf8               (Z)V
  #564 = NameAndType        #110:#563     // "<init>":(Z)V
  #565 = Methodref          #560.#564     // org/sireum/B."<init>":(Z)V
  #566 = NameAndType        #460:#373     // $anonfun$formatTable$1:(B)Z
  #567 = Methodref          #2.#566       // org/sireum/MessagePack$Code$.$anonfun$formatTable$1:(B)Z
  #568 = Utf8               $deserializeLambda$
  #569 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #570 = Utf8               scala/runtime/LambdaDeserialize
  #571 = Class              #570          // scala/runtime/LambdaDeserialize
  #572 = Utf8               bootstrap
  #573 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #574 = NameAndType        #572:#573     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #575 = Methodref          #571.#574     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #576 = MethodHandle       6:#575        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #577 = Utf8               lambdaDeserialize
  #578 = NameAndType        #577:#569     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #579 = InvokeDynamic      #2:#578       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #580 = Utf8               Signature
  #581 = Utf8               Code
  #582 = Utf8               StackMapTable
  #583 = Utf8               LineNumberTable
  #584 = Utf8               LocalVariableTable
  #585 = Utf8               MethodParameters
  #586 = Utf8               InnerClasses
  #587 = Utf8               SourceFile
  #588 = Utf8               BootstrapMethods
  #589 = Utf8               ScalaInlineInfo
  #590 = Utf8               Scala
{
  public static final org.sireum.MessagePack$Code$ MODULE$;
    descriptor: Lorg/sireum/MessagePack$Code$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final byte POSFIXINT_MASK;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FIXMAP_PREFIX;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FIXARRAY_PREFIX;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FIXSTR_PREFIX;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte NIL;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FALSE;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte TRUE;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte BIN8;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte BIN16;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte BIN32;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte EXT8;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte EXT16;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte EXT32;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FLOAT32;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FLOAT64;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte UINT8;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte UINT16;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte UINT32;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte UINT64;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte INT8;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte INT16;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte INT32;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte INT64;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FIXEXT1;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FIXEXT2;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FIXEXT4;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FIXEXT8;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte FIXEXT16;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte STR8;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte STR16;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte STR32;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte ARRAY16;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte ARRAY32;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte MAP16;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte MAP32;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final byte NEGFIXINT_PREFIX;
    descriptor: B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final org.sireum.IS<org.sireum.U8, org.sireum.MessagePack$Kind$Type> formatTable;
    descriptor: Lorg/sireum/IS;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #107                         // Lorg/sireum/IS<Lorg/sireum/U8;Lorg/sireum/MessagePack$Kind$Type;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=11, locals=3, args_size=0
         0: new           #2                  // class org/sireum/MessagePack$Code$
         3: dup
         4: invokespecial #112                // Method "<init>":()V
         7: putstatic     #114                // Field MODULE$:Lorg/sireum/MessagePack$Code$;
        10: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        13: new           #121                // class scala/StringContext
        16: dup
        17: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #128                // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #130                // String 0x80
        28: aastore
        29: checkcast     #132                // class "[Ljava/lang/Object;"
        32: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        41: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        44: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        50: putstatic     #157                // Field POSFIXINT_MASK:B
        53: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        56: new           #121                // class scala/StringContext
        59: dup
        60: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        63: iconst_1
        64: anewarray     #128                // class java/lang/String
        67: dup
        68: iconst_0
        69: ldc           #130                // String 0x80
        71: aastore
        72: checkcast     #132                // class "[Ljava/lang/Object;"
        75: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        78: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        81: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        84: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        87: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        90: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        93: putstatic     #159                // Field FIXMAP_PREFIX:B
        96: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        99: new           #121                // class scala/StringContext
       102: dup
       103: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       106: iconst_1
       107: anewarray     #128                // class java/lang/String
       110: dup
       111: iconst_0
       112: ldc           #161                // String 0x90
       114: aastore
       115: checkcast     #132                // class "[Ljava/lang/Object;"
       118: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       121: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       124: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       127: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       130: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       133: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       136: putstatic     #163                // Field FIXARRAY_PREFIX:B
       139: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       142: new           #121                // class scala/StringContext
       145: dup
       146: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       149: iconst_1
       150: anewarray     #128                // class java/lang/String
       153: dup
       154: iconst_0
       155: ldc           #165                // String 0xA0
       157: aastore
       158: checkcast     #132                // class "[Ljava/lang/Object;"
       161: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       164: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       167: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       170: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       173: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       176: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       179: putstatic     #167                // Field FIXSTR_PREFIX:B
       182: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       185: new           #121                // class scala/StringContext
       188: dup
       189: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       192: iconst_1
       193: anewarray     #128                // class java/lang/String
       196: dup
       197: iconst_0
       198: ldc           #169                // String 0xC0
       200: aastore
       201: checkcast     #132                // class "[Ljava/lang/Object;"
       204: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       207: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       210: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       213: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       216: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       219: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       222: putstatic     #171                // Field NIL:B
       225: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       228: new           #121                // class scala/StringContext
       231: dup
       232: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       235: iconst_1
       236: anewarray     #128                // class java/lang/String
       239: dup
       240: iconst_0
       241: ldc           #173                // String 0xC2
       243: aastore
       244: checkcast     #132                // class "[Ljava/lang/Object;"
       247: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       250: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       253: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       256: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       259: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       262: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       265: putstatic     #175                // Field FALSE:B
       268: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       271: new           #121                // class scala/StringContext
       274: dup
       275: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       278: iconst_1
       279: anewarray     #128                // class java/lang/String
       282: dup
       283: iconst_0
       284: ldc           #177                // String 0xC3
       286: aastore
       287: checkcast     #132                // class "[Ljava/lang/Object;"
       290: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       293: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       296: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       299: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       302: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       305: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       308: putstatic     #179                // Field TRUE:B
       311: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       314: new           #121                // class scala/StringContext
       317: dup
       318: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       321: iconst_1
       322: anewarray     #128                // class java/lang/String
       325: dup
       326: iconst_0
       327: ldc           #181                // String 0xC4
       329: aastore
       330: checkcast     #132                // class "[Ljava/lang/Object;"
       333: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       336: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       339: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       342: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       345: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       348: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       351: putstatic     #183                // Field BIN8:B
       354: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       357: new           #121                // class scala/StringContext
       360: dup
       361: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       364: iconst_1
       365: anewarray     #128                // class java/lang/String
       368: dup
       369: iconst_0
       370: ldc           #185                // String 0xC5
       372: aastore
       373: checkcast     #132                // class "[Ljava/lang/Object;"
       376: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       379: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       382: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       385: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       388: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       391: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       394: putstatic     #187                // Field BIN16:B
       397: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       400: new           #121                // class scala/StringContext
       403: dup
       404: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       407: iconst_1
       408: anewarray     #128                // class java/lang/String
       411: dup
       412: iconst_0
       413: ldc           #189                // String 0xC6
       415: aastore
       416: checkcast     #132                // class "[Ljava/lang/Object;"
       419: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       422: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       425: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       428: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       431: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       434: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       437: putstatic     #191                // Field BIN32:B
       440: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       443: new           #121                // class scala/StringContext
       446: dup
       447: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       450: iconst_1
       451: anewarray     #128                // class java/lang/String
       454: dup
       455: iconst_0
       456: ldc           #193                // String 0xC7
       458: aastore
       459: checkcast     #132                // class "[Ljava/lang/Object;"
       462: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       465: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       468: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       471: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       474: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       477: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       480: putstatic     #195                // Field EXT8:B
       483: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       486: new           #121                // class scala/StringContext
       489: dup
       490: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       493: iconst_1
       494: anewarray     #128                // class java/lang/String
       497: dup
       498: iconst_0
       499: ldc           #197                // String 0xC8
       501: aastore
       502: checkcast     #132                // class "[Ljava/lang/Object;"
       505: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       508: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       511: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       514: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       517: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       520: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       523: putstatic     #199                // Field EXT16:B
       526: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       529: new           #121                // class scala/StringContext
       532: dup
       533: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       536: iconst_1
       537: anewarray     #128                // class java/lang/String
       540: dup
       541: iconst_0
       542: ldc           #201                // String 0xC9
       544: aastore
       545: checkcast     #132                // class "[Ljava/lang/Object;"
       548: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       551: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       554: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       557: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       560: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       563: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       566: putstatic     #203                // Field EXT32:B
       569: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       572: new           #121                // class scala/StringContext
       575: dup
       576: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       579: iconst_1
       580: anewarray     #128                // class java/lang/String
       583: dup
       584: iconst_0
       585: ldc           #205                // String 0xCA
       587: aastore
       588: checkcast     #132                // class "[Ljava/lang/Object;"
       591: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       594: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       597: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       600: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       603: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       606: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       609: putstatic     #207                // Field FLOAT32:B
       612: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       615: new           #121                // class scala/StringContext
       618: dup
       619: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       622: iconst_1
       623: anewarray     #128                // class java/lang/String
       626: dup
       627: iconst_0
       628: ldc           #209                // String 0xCB
       630: aastore
       631: checkcast     #132                // class "[Ljava/lang/Object;"
       634: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       637: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       640: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       643: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       646: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       649: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       652: putstatic     #211                // Field FLOAT64:B
       655: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       658: new           #121                // class scala/StringContext
       661: dup
       662: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       665: iconst_1
       666: anewarray     #128                // class java/lang/String
       669: dup
       670: iconst_0
       671: ldc           #213                // String 0xCC
       673: aastore
       674: checkcast     #132                // class "[Ljava/lang/Object;"
       677: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       680: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       683: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       686: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       689: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       692: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       695: putstatic     #215                // Field UINT8:B
       698: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       701: new           #121                // class scala/StringContext
       704: dup
       705: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       708: iconst_1
       709: anewarray     #128                // class java/lang/String
       712: dup
       713: iconst_0
       714: ldc           #217                // String 0xCD
       716: aastore
       717: checkcast     #132                // class "[Ljava/lang/Object;"
       720: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       723: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       726: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       729: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       732: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       735: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       738: putstatic     #219                // Field UINT16:B
       741: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       744: new           #121                // class scala/StringContext
       747: dup
       748: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       751: iconst_1
       752: anewarray     #128                // class java/lang/String
       755: dup
       756: iconst_0
       757: ldc           #221                // String 0xCE
       759: aastore
       760: checkcast     #132                // class "[Ljava/lang/Object;"
       763: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       766: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       769: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       772: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       775: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       778: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       781: putstatic     #223                // Field UINT32:B
       784: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       787: new           #121                // class scala/StringContext
       790: dup
       791: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       794: iconst_1
       795: anewarray     #128                // class java/lang/String
       798: dup
       799: iconst_0
       800: ldc           #225                // String 0xCF
       802: aastore
       803: checkcast     #132                // class "[Ljava/lang/Object;"
       806: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       809: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       812: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       815: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       818: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       821: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       824: putstatic     #227                // Field UINT64:B
       827: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       830: new           #121                // class scala/StringContext
       833: dup
       834: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       837: iconst_1
       838: anewarray     #128                // class java/lang/String
       841: dup
       842: iconst_0
       843: ldc           #229                // String 0xD0
       845: aastore
       846: checkcast     #132                // class "[Ljava/lang/Object;"
       849: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       852: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       855: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       858: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       861: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       864: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       867: putstatic     #231                // Field INT8:B
       870: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       873: new           #121                // class scala/StringContext
       876: dup
       877: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       880: iconst_1
       881: anewarray     #128                // class java/lang/String
       884: dup
       885: iconst_0
       886: ldc           #233                // String 0xD1
       888: aastore
       889: checkcast     #132                // class "[Ljava/lang/Object;"
       892: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       895: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       898: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       901: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       904: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       907: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       910: putstatic     #235                // Field INT16:B
       913: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       916: new           #121                // class scala/StringContext
       919: dup
       920: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       923: iconst_1
       924: anewarray     #128                // class java/lang/String
       927: dup
       928: iconst_0
       929: ldc           #237                // String 0xD2
       931: aastore
       932: checkcast     #132                // class "[Ljava/lang/Object;"
       935: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       938: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       941: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       944: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       947: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       950: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       953: putstatic     #239                // Field INT32:B
       956: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       959: new           #121                // class scala/StringContext
       962: dup
       963: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       966: iconst_1
       967: anewarray     #128                // class java/lang/String
       970: dup
       971: iconst_0
       972: ldc           #241                // String 0xD3
       974: aastore
       975: checkcast     #132                // class "[Ljava/lang/Object;"
       978: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       981: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       984: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       987: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       990: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       993: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       996: putstatic     #243                // Field INT64:B
       999: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1002: new           #121                // class scala/StringContext
      1005: dup
      1006: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1009: iconst_1
      1010: anewarray     #128                // class java/lang/String
      1013: dup
      1014: iconst_0
      1015: ldc           #245                // String 0xD4
      1017: aastore
      1018: checkcast     #132                // class "[Ljava/lang/Object;"
      1021: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1024: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1027: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1030: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1033: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1036: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1039: putstatic     #247                // Field FIXEXT1:B
      1042: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1045: new           #121                // class scala/StringContext
      1048: dup
      1049: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1052: iconst_1
      1053: anewarray     #128                // class java/lang/String
      1056: dup
      1057: iconst_0
      1058: ldc           #249                // String 0xD5
      1060: aastore
      1061: checkcast     #132                // class "[Ljava/lang/Object;"
      1064: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1067: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1070: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1073: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1076: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1079: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1082: putstatic     #251                // Field FIXEXT2:B
      1085: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1088: new           #121                // class scala/StringContext
      1091: dup
      1092: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1095: iconst_1
      1096: anewarray     #128                // class java/lang/String
      1099: dup
      1100: iconst_0
      1101: ldc           #253                // String 0xD6
      1103: aastore
      1104: checkcast     #132                // class "[Ljava/lang/Object;"
      1107: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1110: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1113: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1116: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1119: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1122: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1125: putstatic     #255                // Field FIXEXT4:B
      1128: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1131: new           #121                // class scala/StringContext
      1134: dup
      1135: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1138: iconst_1
      1139: anewarray     #128                // class java/lang/String
      1142: dup
      1143: iconst_0
      1144: ldc_w         #257                // String 0xD7
      1147: aastore
      1148: checkcast     #132                // class "[Ljava/lang/Object;"
      1151: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1154: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1157: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1160: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1163: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1166: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1169: putstatic     #259                // Field FIXEXT8:B
      1172: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1175: new           #121                // class scala/StringContext
      1178: dup
      1179: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1182: iconst_1
      1183: anewarray     #128                // class java/lang/String
      1186: dup
      1187: iconst_0
      1188: ldc_w         #261                // String 0xD8
      1191: aastore
      1192: checkcast     #132                // class "[Ljava/lang/Object;"
      1195: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1198: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1201: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1204: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1207: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1210: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1213: putstatic     #263                // Field FIXEXT16:B
      1216: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1219: new           #121                // class scala/StringContext
      1222: dup
      1223: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1226: iconst_1
      1227: anewarray     #128                // class java/lang/String
      1230: dup
      1231: iconst_0
      1232: ldc_w         #265                // String 0xD9
      1235: aastore
      1236: checkcast     #132                // class "[Ljava/lang/Object;"
      1239: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1242: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1245: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1248: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1251: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1254: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1257: putstatic     #267                // Field STR8:B
      1260: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1263: new           #121                // class scala/StringContext
      1266: dup
      1267: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1270: iconst_1
      1271: anewarray     #128                // class java/lang/String
      1274: dup
      1275: iconst_0
      1276: ldc_w         #269                // String 0xDA
      1279: aastore
      1280: checkcast     #132                // class "[Ljava/lang/Object;"
      1283: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1286: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1289: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1292: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1295: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1298: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1301: putstatic     #271                // Field STR16:B
      1304: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1307: new           #121                // class scala/StringContext
      1310: dup
      1311: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1314: iconst_1
      1315: anewarray     #128                // class java/lang/String
      1318: dup
      1319: iconst_0
      1320: ldc_w         #273                // String 0xDB
      1323: aastore
      1324: checkcast     #132                // class "[Ljava/lang/Object;"
      1327: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1330: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1333: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1336: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1339: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1342: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1345: putstatic     #275                // Field STR32:B
      1348: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1351: new           #121                // class scala/StringContext
      1354: dup
      1355: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1358: iconst_1
      1359: anewarray     #128                // class java/lang/String
      1362: dup
      1363: iconst_0
      1364: ldc_w         #277                // String 0xDC
      1367: aastore
      1368: checkcast     #132                // class "[Ljava/lang/Object;"
      1371: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1374: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1377: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1380: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1383: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1386: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1389: putstatic     #279                // Field ARRAY16:B
      1392: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1395: new           #121                // class scala/StringContext
      1398: dup
      1399: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1402: iconst_1
      1403: anewarray     #128                // class java/lang/String
      1406: dup
      1407: iconst_0
      1408: ldc_w         #281                // String 0xDD
      1411: aastore
      1412: checkcast     #132                // class "[Ljava/lang/Object;"
      1415: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1418: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1421: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1424: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1427: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1430: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1433: putstatic     #283                // Field ARRAY32:B
      1436: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1439: new           #121                // class scala/StringContext
      1442: dup
      1443: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1446: iconst_1
      1447: anewarray     #128                // class java/lang/String
      1450: dup
      1451: iconst_0
      1452: ldc_w         #285                // String 0xDE
      1455: aastore
      1456: checkcast     #132                // class "[Ljava/lang/Object;"
      1459: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1462: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1465: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1468: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1471: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1474: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1477: putstatic     #287                // Field MAP16:B
      1480: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1483: new           #121                // class scala/StringContext
      1486: dup
      1487: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1490: iconst_1
      1491: anewarray     #128                // class java/lang/String
      1494: dup
      1495: iconst_0
      1496: ldc_w         #289                // String 0xDF
      1499: aastore
      1500: checkcast     #132                // class "[Ljava/lang/Object;"
      1503: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1506: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1509: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1512: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1515: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1518: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1521: putstatic     #291                // Field MAP32:B
      1524: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1527: new           #121                // class scala/StringContext
      1530: dup
      1531: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1534: iconst_1
      1535: anewarray     #128                // class java/lang/String
      1538: dup
      1539: iconst_0
      1540: ldc_w         #293                // String 0xE0
      1543: aastore
      1544: checkcast     #132                // class "[Ljava/lang/Object;"
      1547: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1550: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1553: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1556: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1559: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1562: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1565: putstatic     #295                // Field NEGFIXINT_PREFIX:B
      1568: getstatic     #300                // Field org/sireum/IS$.MODULE$:Lorg/sireum/IS$;
      1571: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1574: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1577: invokevirtual #304                // Method org/sireum/U8$.$U8Companion:()Lorg/sireum/$ZCompanion;
      1580: invokevirtual #307                // Method org/sireum/IS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
      1583: astore_0
      1584: getstatic     #312                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
      1587: iconst_0
      1588: invokevirtual #315                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
      1591: astore_1
      1592: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1595: new           #121                // class scala/StringContext
      1598: dup
      1599: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1602: iconst_1
      1603: anewarray     #128                // class java/lang/String
      1606: dup
      1607: iconst_0
      1608: ldc_w         #317                // String 0
      1611: aastore
      1612: checkcast     #132                // class "[Ljava/lang/Object;"
      1615: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1618: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1621: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1624: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1627: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1630: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1633: istore_2
      1634: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
      1637: aload_1
      1638: getstatic     #312                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
      1641: sipush        256
      1644: invokevirtual #315                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
      1647: invokeinterface #326,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
      1652: invokevirtual #330                // Method org/sireum/B$.$4B:(Z)Z
      1655: ifeq          1753
      1658: aload_0
      1659: getstatic     #114                // Field MODULE$:Lorg/sireum/MessagePack$Code$;
      1662: iload_2
      1663: invokespecial #334                // Method getType0$1:(B)Lorg/sireum/MessagePack$Kind$Type;
      1666: invokevirtual #340                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
      1669: astore_0
      1670: aload_1
      1671: getstatic     #312                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
      1674: iconst_1
      1675: invokevirtual #315                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
      1678: invokeinterface #344,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
      1683: astore_1
      1684: new           #53                 // class org/sireum/U8
      1687: dup
      1688: iload_2
      1689: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
      1692: new           #53                 // class org/sireum/U8
      1695: dup
      1696: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
      1699: new           #121                // class scala/StringContext
      1702: dup
      1703: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      1706: iconst_1
      1707: anewarray     #128                // class java/lang/String
      1710: dup
      1711: iconst_0
      1712: ldc_w         #349                // String 1
      1715: aastore
      1716: checkcast     #132                // class "[Ljava/lang/Object;"
      1719: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      1722: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
      1725: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
      1728: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
      1731: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      1734: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
      1737: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
      1740: invokevirtual #352                // Method org/sireum/U8.$plus:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
      1743: checkcast     #53                 // class org/sireum/U8
      1746: invokevirtual #356                // Method org/sireum/U8.value:()B
      1749: istore_2
      1750: goto          1634
      1753: aload_0
      1754: putstatic     #358                // Field formatTable:Lorg/sireum/IS;
      1757: return
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 1634
          locals = [ class org/sireum/IS, class org/sireum/Z, int ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 118
      LineNumberTable:
        line 57: 0
        line 58: 10
        line 59: 53
        line 60: 96
        line 61: 139
        line 62: 182
        line 63: 225
        line 64: 268
        line 65: 311
        line 66: 354
        line 67: 397
        line 68: 440
        line 69: 483
        line 70: 526
        line 71: 569
        line 72: 612
        line 73: 655
        line 74: 698
        line 75: 741
        line 76: 784
        line 77: 827
        line 78: 870
        line 79: 913
        line 80: 956
        line 81: 999
        line 82: 1042
        line 83: 1085
        line 84: 1128
        line 85: 1172
        line 86: 1216
        line 87: 1260
        line 88: 1304
        line 89: 1348
        line 90: 1392
        line 91: 1436
        line 92: 1480
        line 93: 1524
        line 143: 1568
        line 144: 1584
        line 145: 1592
        line 146: 1634
        line 147: 1658
        line 148: 1670
        line 149: 1684
        line 146: 1750
        line 151: 1753
        line 95: 1754
        line 57: 1757
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
         1584     170     0     a   Lorg/sireum/IS;
         1592     162     1     n   Lorg/sireum/Z;
         1634     120     2     i   B

  public byte POSFIXINT_MASK();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #157                // Field POSFIXINT_MASK:B
         3: ireturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FIXMAP_PREFIX();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #159                // Field FIXMAP_PREFIX:B
         3: ireturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FIXARRAY_PREFIX();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #163                // Field FIXARRAY_PREFIX:B
         3: ireturn
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FIXSTR_PREFIX();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #167                // Field FIXSTR_PREFIX:B
         3: ireturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte NIL();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #171                // Field NIL:B
         3: ireturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FALSE();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #175                // Field FALSE:B
         3: ireturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte TRUE();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #179                // Field TRUE:B
         3: ireturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte BIN8();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #183                // Field BIN8:B
         3: ireturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte BIN16();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #187                // Field BIN16:B
         3: ireturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte BIN32();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #191                // Field BIN32:B
         3: ireturn
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte EXT8();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #195                // Field EXT8:B
         3: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte EXT16();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #199                // Field EXT16:B
         3: ireturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte EXT32();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #203                // Field EXT32:B
         3: ireturn
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FLOAT32();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #207                // Field FLOAT32:B
         3: ireturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FLOAT64();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #211                // Field FLOAT64:B
         3: ireturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte UINT8();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #215                // Field UINT8:B
         3: ireturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte UINT16();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #219                // Field UINT16:B
         3: ireturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte UINT32();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #223                // Field UINT32:B
         3: ireturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte UINT64();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #227                // Field UINT64:B
         3: ireturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte INT8();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #231                // Field INT8:B
         3: ireturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte INT16();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #235                // Field INT16:B
         3: ireturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte INT32();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #239                // Field INT32:B
         3: ireturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte INT64();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #243                // Field INT64:B
         3: ireturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FIXEXT1();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #247                // Field FIXEXT1:B
         3: ireturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FIXEXT2();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #251                // Field FIXEXT2:B
         3: ireturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FIXEXT4();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #255                // Field FIXEXT4:B
         3: ireturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FIXEXT8();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #259                // Field FIXEXT8:B
         3: ireturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte FIXEXT16();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #263                // Field FIXEXT16:B
         3: ireturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte STR8();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #267                // Field STR8:B
         3: ireturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte STR16();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #271                // Field STR16:B
         3: ireturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte STR32();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #275                // Field STR32:B
         3: ireturn
      LineNumberTable:
        line 88: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte ARRAY16();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #279                // Field ARRAY16:B
         3: ireturn
      LineNumberTable:
        line 89: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte ARRAY32();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #283                // Field ARRAY32:B
         3: ireturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte MAP16();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #287                // Field MAP16:B
         3: ireturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte MAP32();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #291                // Field MAP32:B
         3: ireturn
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public byte NEGFIXINT_PREFIX();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #295                // Field NEGFIXINT_PREFIX:B
         3: ireturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;

  public org.sireum.IS<org.sireum.U8, org.sireum.MessagePack$Kind$Type> formatTable();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #358                // Field formatTable:Lorg/sireum/IS;
         3: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/MessagePack$Code$;
    Signature: #365                         // ()Lorg/sireum/IS<Lorg/sireum/U8;Lorg/sireum/MessagePack$Kind$Type;>;

  public org.sireum.MessagePack$Kind$Type getType(byte);
    descriptor: (B)Lorg/sireum/MessagePack$Kind$Type;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #368                // Method formatTable:()Lorg/sireum/IS;
         4: new           #53                 // class org/sireum/U8
         7: dup
         8: iload_1
         9: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        12: invokevirtual #371                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        15: checkcast     #48                 // class org/sireum/MessagePack$Kind$Type
        18: areturn
      LineNumberTable:
        line 155: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/sireum/MessagePack$Code$;
            0      19     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public boolean isFixInt(byte);
    descriptor: (B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=3, args_size=2
         0: new           #53                 // class org/sireum/U8
         3: dup
         4: iload_1
         5: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
         8: new           #53                 // class org/sireum/U8
        11: dup
        12: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        15: new           #121                // class scala/StringContext
        18: dup
        19: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        22: iconst_1
        23: anewarray     #128                // class java/lang/String
        26: dup
        27: iconst_0
        28: ldc_w         #375                // String 0xFF
        31: aastore
        32: checkcast     #132                // class "[Ljava/lang/Object;"
        35: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        38: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        41: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        44: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        47: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        50: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        53: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        56: invokevirtual #378                // Method org/sireum/U8.$amp:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
        59: checkcast     #53                 // class org/sireum/U8
        62: invokevirtual #356                // Method org/sireum/U8.value:()B
        65: istore_2
        66: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        69: new           #53                 // class org/sireum/U8
        72: dup
        73: iload_2
        74: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        77: new           #53                 // class org/sireum/U8
        80: dup
        81: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        84: new           #121                // class scala/StringContext
        87: dup
        88: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        91: iconst_1
        92: anewarray     #128                // class java/lang/String
        95: dup
        96: iconst_0
        97: ldc_w         #380                // String 0x7F
       100: aastore
       101: checkcast     #132                // class "[Ljava/lang/Object;"
       104: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       107: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       110: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       113: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       116: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       119: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       122: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
       125: invokevirtual #383                // Method org/sireum/U8.$less$eq:(Lorg/sireum/Z$BV$Byte;)Z
       128: iload_2
       129: invokedynamic #401,  0            // InvokeDynamic #0:apply:(B)Lscala/Function0;
       134: invokevirtual #405                // Method org/sireum/B$.$bar$bar$extension:(ZLscala/Function0;)Z
       137: ireturn
      LineNumberTable:
        line 159: 0
        line 160: 66
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           66      72     2     v   B
            0     138     0  this   Lorg/sireum/MessagePack$Code$;
            0     138     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public boolean isPosFixInt(byte);
    descriptor: (B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=3, args_size=2
         0: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: new           #53                 // class org/sireum/U8
         6: dup
         7: iload_1
         8: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        11: new           #53                 // class org/sireum/U8
        14: dup
        15: aload_0
        16: invokevirtual #409                // Method POSFIXINT_MASK:()B
        19: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        22: invokevirtual #378                // Method org/sireum/U8.$amp:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
        25: new           #53                 // class org/sireum/U8
        28: dup
        29: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        32: new           #121                // class scala/StringContext
        35: dup
        36: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_1
        40: anewarray     #128                // class java/lang/String
        43: dup
        44: iconst_0
        45: ldc_w         #317                // String 0
        48: aastore
        49: checkcast     #132                // class "[Ljava/lang/Object;"
        52: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        55: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        58: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        61: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        64: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        67: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        70: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        73: astore_2
        74: dup
        75: ifnonnull     86
        78: pop
        79: aload_2
        80: ifnull        93
        83: goto          97
        86: aload_2
        87: invokevirtual #413                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        90: ifeq          97
        93: iconst_1
        94: goto          98
        97: iconst_0
        98: invokevirtual #415                // Method org/sireum/B$.apply:(Z)Z
       101: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 86
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, class org/sireum/Z$BV$Byte ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     102     0  this   Lorg/sireum/MessagePack$Code$;
            0     102     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public boolean isNegFixInt(byte);
    descriptor: (B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: new           #53                 // class org/sireum/U8
         6: dup
         7: iload_1
         8: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        11: new           #53                 // class org/sireum/U8
        14: dup
        15: aload_0
        16: invokevirtual #418                // Method NEGFIXINT_PREFIX:()B
        19: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        22: invokevirtual #378                // Method org/sireum/U8.$amp:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
        25: new           #53                 // class org/sireum/U8
        28: dup
        29: aload_0
        30: invokevirtual #418                // Method NEGFIXINT_PREFIX:()B
        33: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        36: astore_2
        37: dup
        38: ifnonnull     49
        41: pop
        42: aload_2
        43: ifnull        56
        46: goto          60
        49: aload_2
        50: invokevirtual #413                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        53: ifeq          60
        56: iconst_1
        57: goto          61
        60: iconst_0
        61: invokevirtual #415                // Method org/sireum/B$.apply:(Z)Z
        64: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, class org/sireum/Z$BV$Byte ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0  this   Lorg/sireum/MessagePack$Code$;
            0      65     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public boolean isFixStr(byte);
    descriptor: (B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=3, args_size=2
         0: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: new           #53                 // class org/sireum/U8
         6: dup
         7: iload_1
         8: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        11: new           #53                 // class org/sireum/U8
        14: dup
        15: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        18: new           #121                // class scala/StringContext
        21: dup
        22: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_1
        26: anewarray     #128                // class java/lang/String
        29: dup
        30: iconst_0
        31: ldc_w         #293                // String 0xE0
        34: aastore
        35: checkcast     #132                // class "[Ljava/lang/Object;"
        38: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        41: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        44: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        47: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        50: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        53: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        56: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        59: invokevirtual #378                // Method org/sireum/U8.$amp:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
        62: new           #53                 // class org/sireum/U8
        65: dup
        66: aload_0
        67: invokevirtual #421                // Method FIXSTR_PREFIX:()B
        70: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        73: astore_2
        74: dup
        75: ifnonnull     86
        78: pop
        79: aload_2
        80: ifnull        93
        83: goto          97
        86: aload_2
        87: invokevirtual #413                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        90: ifeq          97
        93: iconst_1
        94: goto          98
        97: iconst_0
        98: invokevirtual #415                // Method org/sireum/B$.apply:(Z)Z
       101: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 86
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, class org/sireum/Z$BV$Byte ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     102     0  this   Lorg/sireum/MessagePack$Code$;
            0     102     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public boolean isFixedArray(byte);
    descriptor: (B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=3, args_size=2
         0: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: new           #53                 // class org/sireum/U8
         6: dup
         7: iload_1
         8: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        11: new           #53                 // class org/sireum/U8
        14: dup
        15: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        18: new           #121                // class scala/StringContext
        21: dup
        22: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_1
        26: anewarray     #128                // class java/lang/String
        29: dup
        30: iconst_0
        31: ldc_w         #424                // String 0xF0
        34: aastore
        35: checkcast     #132                // class "[Ljava/lang/Object;"
        38: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        41: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        44: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        47: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        50: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        53: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        56: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        59: invokevirtual #378                // Method org/sireum/U8.$amp:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
        62: new           #53                 // class org/sireum/U8
        65: dup
        66: aload_0
        67: invokevirtual #426                // Method FIXARRAY_PREFIX:()B
        70: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        73: astore_2
        74: dup
        75: ifnonnull     86
        78: pop
        79: aload_2
        80: ifnull        93
        83: goto          97
        86: aload_2
        87: invokevirtual #413                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        90: ifeq          97
        93: iconst_1
        94: goto          98
        97: iconst_0
        98: invokevirtual #415                // Method org/sireum/B$.apply:(Z)Z
       101: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 86
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, class org/sireum/Z$BV$Byte ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     102     0  this   Lorg/sireum/MessagePack$Code$;
            0     102     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public boolean isFixedMap(byte);
    descriptor: (B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=3, args_size=2
         0: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: new           #53                 // class org/sireum/U8
         6: dup
         7: iload_1
         8: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        11: new           #53                 // class org/sireum/U8
        14: dup
        15: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        18: new           #121                // class scala/StringContext
        21: dup
        22: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_1
        26: anewarray     #128                // class java/lang/String
        29: dup
        30: iconst_0
        31: ldc_w         #424                // String 0xF0
        34: aastore
        35: checkcast     #132                // class "[Ljava/lang/Object;"
        38: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        41: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        44: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        47: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        50: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        53: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        56: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        59: invokevirtual #378                // Method org/sireum/U8.$amp:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
        62: new           #53                 // class org/sireum/U8
        65: dup
        66: aload_0
        67: invokevirtual #429                // Method FIXMAP_PREFIX:()B
        70: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        73: astore_2
        74: dup
        75: ifnonnull     86
        78: pop
        79: aload_2
        80: ifnull        93
        83: goto          97
        86: aload_2
        87: invokevirtual #413                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        90: ifeq          97
        93: iconst_1
        94: goto          98
        97: iconst_0
        98: invokevirtual #415                // Method org/sireum/B$.apply:(Z)Z
       101: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 86
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, class org/sireum/Z$BV$Byte ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     102     0  this   Lorg/sireum/MessagePack$Code$;
            0     102     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public boolean isFixedRaw(byte);
    descriptor: (B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=3, args_size=2
         0: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: new           #53                 // class org/sireum/U8
         6: dup
         7: iload_1
         8: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        11: new           #53                 // class org/sireum/U8
        14: dup
        15: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        18: new           #121                // class scala/StringContext
        21: dup
        22: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_1
        26: anewarray     #128                // class java/lang/String
        29: dup
        30: iconst_0
        31: ldc_w         #293                // String 0xE0
        34: aastore
        35: checkcast     #132                // class "[Ljava/lang/Object;"
        38: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        41: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        44: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        47: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        50: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        53: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        56: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        59: invokevirtual #378                // Method org/sireum/U8.$amp:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
        62: new           #53                 // class org/sireum/U8
        65: dup
        66: aload_0
        67: invokevirtual #421                // Method FIXSTR_PREFIX:()B
        70: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        73: astore_2
        74: dup
        75: ifnonnull     86
        78: pop
        79: aload_2
        80: ifnull        93
        83: goto          97
        86: aload_2
        87: invokevirtual #413                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        90: ifeq          97
        93: iconst_1
        94: goto          98
        97: iconst_0
        98: invokevirtual #415                // Method org/sireum/B$.apply:(Z)Z
       101: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 86
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, class org/sireum/Z$BV$Byte ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/MessagePack$Code$, int, class org/sireum/U8 ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 184: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     102     0  this   Lorg/sireum/MessagePack$Code$;
            0     102     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public boolean isExt(byte);
    descriptor: (B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: iload_1
         1: istore_3
         2: aload_0
         3: invokevirtual #433                // Method EXT8:()B
         6: iload_3
         7: if_icmpne     17
        10: getstatic     #438                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        13: invokevirtual #442                // Method org/sireum/package$.T:()Z
        16: ireturn
        17: goto          20
        20: aload_0
        21: invokevirtual #444                // Method EXT16:()B
        24: iload_3
        25: if_icmpne     35
        28: getstatic     #438                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        31: invokevirtual #442                // Method org/sireum/package$.T:()Z
        34: ireturn
        35: goto          38
        38: aload_0
        39: invokevirtual #446                // Method EXT32:()B
        42: iload_3
        43: if_icmpne     53
        46: getstatic     #438                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        49: invokevirtual #442                // Method org/sireum/package$.T:()Z
        52: ireturn
        53: goto          56
        56: aload_0
        57: invokevirtual #448                // Method FIXEXT1:()B
        60: iload_3
        61: if_icmpne     71
        64: getstatic     #438                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        67: invokevirtual #442                // Method org/sireum/package$.T:()Z
        70: ireturn
        71: goto          74
        74: aload_0
        75: invokevirtual #450                // Method FIXEXT2:()B
        78: iload_3
        79: if_icmpne     89
        82: getstatic     #438                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        85: invokevirtual #442                // Method org/sireum/package$.T:()Z
        88: ireturn
        89: goto          92
        92: aload_0
        93: invokevirtual #452                // Method FIXEXT4:()B
        96: iload_3
        97: if_icmpne     107
       100: getstatic     #438                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       103: invokevirtual #442                // Method org/sireum/package$.T:()Z
       106: ireturn
       107: goto          110
       110: aload_0
       111: invokevirtual #454                // Method FIXEXT8:()B
       114: iload_3
       115: if_icmpne     125
       118: getstatic     #438                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       121: invokevirtual #442                // Method org/sireum/package$.T:()Z
       124: ireturn
       125: goto          128
       128: aload_0
       129: invokevirtual #456                // Method FIXEXT16:()B
       132: iload_3
       133: if_icmpne     143
       136: getstatic     #438                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       139: invokevirtual #442                // Method org/sireum/package$.T:()Z
       142: ireturn
       143: goto          146
       146: getstatic     #438                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       149: invokevirtual #459                // Method org/sireum/package$.F:()Z
       152: ireturn
      StackMapTable: number_of_entries = 16
        frame_type = 253 /* append */
          offset_delta = 17
          locals = [ top, int ]
        frame_type = 2 /* same */
        frame_type = 14 /* same */
        frame_type = 2 /* same */
        frame_type = 14 /* same */
        frame_type = 2 /* same */
        frame_type = 14 /* same */
        frame_type = 2 /* same */
        frame_type = 14 /* same */
        frame_type = 2 /* same */
        frame_type = 14 /* same */
        frame_type = 2 /* same */
        frame_type = 14 /* same */
        frame_type = 2 /* same */
        frame_type = 14 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 188: 0
        line 189: 2
        line 190: 20
        line 191: 38
        line 192: 56
        line 193: 74
        line 194: 92
        line 195: 110
        line 196: 128
        line 197: 146
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     153     0  this   Lorg/sireum/MessagePack$Code$;
            0     153     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public static final boolean $anonfun$formatTable$1(byte);
    descriptor: (B)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #114                // Field MODULE$:Lorg/sireum/MessagePack$Code$;
         3: iload_0
         4: invokevirtual #463                // Method isNegFixInt:(B)Z
         7: ireturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   n$2   B
    MethodParameters:
      Name                           Flags
      n$2                            final

  private final org.sireum.MessagePack$Kind$Type getType0$1(byte);
    descriptor: (B)Lorg/sireum/MessagePack$Kind$Type;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=4, args_size=2
         0: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: aload_0
         7: iload_1
         8: invokevirtual #465                // Method isPosFixInt:(B)Z
        11: iload_1
        12: invokedynamic #470,  0            // InvokeDynamic #1:apply:(B)Lscala/Function0;
        17: invokevirtual #405                // Method org/sireum/B$.$bar$bar$extension:(ZLscala/Function0;)Z
        20: invokevirtual #330                // Method org/sireum/B$.$4B:(Z)Z
        23: ifeq          30
        26: getstatic     #473                // Field org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
        29: areturn
        30: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        33: aload_0
        34: iload_1
        35: invokevirtual #475                // Method isFixStr:(B)Z
        38: invokevirtual #330                // Method org/sireum/B$.$4B:(Z)Z
        41: ifeq          48
        44: getstatic     #478                // Field org/sireum/MessagePack$Kind$STRING$.MODULE$:Lorg/sireum/MessagePack$Kind$STRING$;
        47: areturn
        48: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        51: aload_0
        52: iload_1
        53: invokevirtual #480                // Method isFixedArray:(B)Z
        56: invokevirtual #330                // Method org/sireum/B$.$4B:(Z)Z
        59: ifeq          66
        62: getstatic     #483                // Field org/sireum/MessagePack$Kind$ARRAY$.MODULE$:Lorg/sireum/MessagePack$Kind$ARRAY$;
        65: areturn
        66: getstatic     #322                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        69: aload_0
        70: iload_1
        71: invokevirtual #485                // Method isFixedMap:(B)Z
        74: invokevirtual #330                // Method org/sireum/B$.$4B:(Z)Z
        77: ifeq          84
        80: getstatic     #488                // Field org/sireum/MessagePack$Kind$MAP$.MODULE$:Lorg/sireum/MessagePack$Kind$MAP$;
        83: areturn
        84: iload_1
        85: istore_3
        86: aload_0
        87: invokevirtual #490                // Method NIL:()B
        90: iload_3
        91: if_icmpne     98
        94: getstatic     #493                // Field org/sireum/MessagePack$Kind$NIL$.MODULE$:Lorg/sireum/MessagePack$Kind$NIL$;
        97: areturn
        98: goto          101
       101: aload_0
       102: invokevirtual #495                // Method FALSE:()B
       105: iload_3
       106: if_icmpne     113
       109: getstatic     #498                // Field org/sireum/MessagePack$Kind$BOOLEAN$.MODULE$:Lorg/sireum/MessagePack$Kind$BOOLEAN$;
       112: areturn
       113: goto          116
       116: aload_0
       117: invokevirtual #500                // Method TRUE:()B
       120: iload_3
       121: if_icmpne     128
       124: getstatic     #498                // Field org/sireum/MessagePack$Kind$BOOLEAN$.MODULE$:Lorg/sireum/MessagePack$Kind$BOOLEAN$;
       127: areturn
       128: goto          131
       131: aload_0
       132: invokevirtual #502                // Method BIN8:()B
       135: iload_3
       136: if_icmpne     143
       139: getstatic     #505                // Field org/sireum/MessagePack$Kind$BINARY$.MODULE$:Lorg/sireum/MessagePack$Kind$BINARY$;
       142: areturn
       143: goto          146
       146: aload_0
       147: invokevirtual #507                // Method BIN16:()B
       150: iload_3
       151: if_icmpne     158
       154: getstatic     #505                // Field org/sireum/MessagePack$Kind$BINARY$.MODULE$:Lorg/sireum/MessagePack$Kind$BINARY$;
       157: areturn
       158: goto          161
       161: aload_0
       162: invokevirtual #509                // Method BIN32:()B
       165: iload_3
       166: if_icmpne     173
       169: getstatic     #505                // Field org/sireum/MessagePack$Kind$BINARY$.MODULE$:Lorg/sireum/MessagePack$Kind$BINARY$;
       172: areturn
       173: goto          176
       176: aload_0
       177: invokevirtual #511                // Method FLOAT32:()B
       180: iload_3
       181: if_icmpne     188
       184: getstatic     #514                // Field org/sireum/MessagePack$Kind$FLOAT$.MODULE$:Lorg/sireum/MessagePack$Kind$FLOAT$;
       187: areturn
       188: goto          191
       191: aload_0
       192: invokevirtual #516                // Method FLOAT64:()B
       195: iload_3
       196: if_icmpne     203
       199: getstatic     #514                // Field org/sireum/MessagePack$Kind$FLOAT$.MODULE$:Lorg/sireum/MessagePack$Kind$FLOAT$;
       202: areturn
       203: goto          206
       206: aload_0
       207: invokevirtual #518                // Method UINT8:()B
       210: iload_3
       211: if_icmpne     218
       214: getstatic     #473                // Field org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
       217: areturn
       218: goto          221
       221: aload_0
       222: invokevirtual #520                // Method UINT16:()B
       225: iload_3
       226: if_icmpne     233
       229: getstatic     #473                // Field org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
       232: areturn
       233: goto          236
       236: aload_0
       237: invokevirtual #522                // Method UINT32:()B
       240: iload_3
       241: if_icmpne     248
       244: getstatic     #473                // Field org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
       247: areturn
       248: goto          251
       251: aload_0
       252: invokevirtual #524                // Method UINT64:()B
       255: iload_3
       256: if_icmpne     263
       259: getstatic     #473                // Field org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
       262: areturn
       263: goto          266
       266: aload_0
       267: invokevirtual #526                // Method INT8:()B
       270: iload_3
       271: if_icmpne     278
       274: getstatic     #473                // Field org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
       277: areturn
       278: goto          281
       281: aload_0
       282: invokevirtual #528                // Method INT16:()B
       285: iload_3
       286: if_icmpne     293
       289: getstatic     #473                // Field org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
       292: areturn
       293: goto          296
       296: aload_0
       297: invokevirtual #530                // Method INT32:()B
       300: iload_3
       301: if_icmpne     308
       304: getstatic     #473                // Field org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
       307: areturn
       308: goto          311
       311: aload_0
       312: invokevirtual #532                // Method INT64:()B
       315: iload_3
       316: if_icmpne     323
       319: getstatic     #473                // Field org/sireum/MessagePack$Kind$INTEGER$.MODULE$:Lorg/sireum/MessagePack$Kind$INTEGER$;
       322: areturn
       323: goto          326
       326: aload_0
       327: invokevirtual #534                // Method STR8:()B
       330: iload_3
       331: if_icmpne     338
       334: getstatic     #478                // Field org/sireum/MessagePack$Kind$STRING$.MODULE$:Lorg/sireum/MessagePack$Kind$STRING$;
       337: areturn
       338: goto          341
       341: aload_0
       342: invokevirtual #536                // Method STR16:()B
       345: iload_3
       346: if_icmpne     353
       349: getstatic     #478                // Field org/sireum/MessagePack$Kind$STRING$.MODULE$:Lorg/sireum/MessagePack$Kind$STRING$;
       352: areturn
       353: goto          356
       356: aload_0
       357: invokevirtual #538                // Method STR32:()B
       360: iload_3
       361: if_icmpne     368
       364: getstatic     #478                // Field org/sireum/MessagePack$Kind$STRING$.MODULE$:Lorg/sireum/MessagePack$Kind$STRING$;
       367: areturn
       368: goto          371
       371: aload_0
       372: invokevirtual #540                // Method ARRAY16:()B
       375: iload_3
       376: if_icmpne     383
       379: getstatic     #483                // Field org/sireum/MessagePack$Kind$ARRAY$.MODULE$:Lorg/sireum/MessagePack$Kind$ARRAY$;
       382: areturn
       383: goto          386
       386: aload_0
       387: invokevirtual #542                // Method ARRAY32:()B
       390: iload_3
       391: if_icmpne     398
       394: getstatic     #483                // Field org/sireum/MessagePack$Kind$ARRAY$.MODULE$:Lorg/sireum/MessagePack$Kind$ARRAY$;
       397: areturn
       398: goto          401
       401: aload_0
       402: invokevirtual #544                // Method MAP16:()B
       405: iload_3
       406: if_icmpne     413
       409: getstatic     #488                // Field org/sireum/MessagePack$Kind$MAP$.MODULE$:Lorg/sireum/MessagePack$Kind$MAP$;
       412: areturn
       413: goto          416
       416: aload_0
       417: invokevirtual #546                // Method MAP32:()B
       420: iload_3
       421: if_icmpne     428
       424: getstatic     #488                // Field org/sireum/MessagePack$Kind$MAP$.MODULE$:Lorg/sireum/MessagePack$Kind$MAP$;
       427: areturn
       428: goto          431
       431: aload_0
       432: invokevirtual #448                // Method FIXEXT1:()B
       435: iload_3
       436: if_icmpne     443
       439: getstatic     #549                // Field org/sireum/MessagePack$Kind$EXTENSION$.MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
       442: areturn
       443: goto          446
       446: aload_0
       447: invokevirtual #450                // Method FIXEXT2:()B
       450: iload_3
       451: if_icmpne     458
       454: getstatic     #549                // Field org/sireum/MessagePack$Kind$EXTENSION$.MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
       457: areturn
       458: goto          461
       461: aload_0
       462: invokevirtual #452                // Method FIXEXT4:()B
       465: iload_3
       466: if_icmpne     473
       469: getstatic     #549                // Field org/sireum/MessagePack$Kind$EXTENSION$.MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
       472: areturn
       473: goto          476
       476: aload_0
       477: invokevirtual #454                // Method FIXEXT8:()B
       480: iload_3
       481: if_icmpne     488
       484: getstatic     #549                // Field org/sireum/MessagePack$Kind$EXTENSION$.MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
       487: areturn
       488: goto          491
       491: aload_0
       492: invokevirtual #456                // Method FIXEXT16:()B
       495: iload_3
       496: if_icmpne     503
       499: getstatic     #549                // Field org/sireum/MessagePack$Kind$EXTENSION$.MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
       502: areturn
       503: goto          506
       506: aload_0
       507: invokevirtual #433                // Method EXT8:()B
       510: iload_3
       511: if_icmpne     518
       514: getstatic     #549                // Field org/sireum/MessagePack$Kind$EXTENSION$.MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
       517: areturn
       518: goto          521
       521: aload_0
       522: invokevirtual #444                // Method EXT16:()B
       525: iload_3
       526: if_icmpne     533
       529: getstatic     #549                // Field org/sireum/MessagePack$Kind$EXTENSION$.MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
       532: areturn
       533: goto          536
       536: aload_0
       537: invokevirtual #446                // Method EXT32:()B
       540: iload_3
       541: if_icmpne     548
       544: getstatic     #549                // Field org/sireum/MessagePack$Kind$EXTENSION$.MODULE$:Lorg/sireum/MessagePack$Kind$EXTENSION$;
       547: areturn
       548: goto          551
       551: getstatic     #552                // Field org/sireum/MessagePack$Kind$NONE$.MODULE$:Lorg/sireum/MessagePack$Kind$NONE$;
       554: areturn
      StackMapTable: number_of_entries = 66
        frame_type = 30 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 253 /* append */
          offset_delta = 13
          locals = [ top, int ]
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 97: 0
        line 98: 26
        line 99: 30
        line 100: 44
        line 101: 48
        line 102: 62
        line 103: 66
        line 104: 80
        line 106: 84
        line 107: 86
        line 108: 101
        line 109: 116
        line 110: 131
        line 111: 146
        line 112: 161
        line 113: 176
        line 114: 191
        line 115: 206
        line 116: 221
        line 117: 236
        line 118: 251
        line 119: 266
        line 120: 281
        line 121: 296
        line 122: 311
        line 123: 326
        line 124: 341
        line 125: 356
        line 126: 371
        line 127: 386
        line 128: 401
        line 129: 416
        line 130: 431
        line 131: 446
        line 132: 461
        line 133: 476
        line 134: 491
        line 135: 506
        line 136: 521
        line 137: 536
        line 138: 551
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     555     0  this   Lorg/sireum/MessagePack$Code$;
            0     555     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public static final boolean $anonfun$isFixInt$1(byte);
    descriptor: (B)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=11, locals=1, args_size=1
         0: new           #53                 // class org/sireum/U8
         3: dup
         4: iload_0
         5: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
         8: new           #53                 // class org/sireum/U8
        11: dup
        12: getstatic     #119                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        15: new           #121                // class scala/StringContext
        18: dup
        19: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        22: iconst_1
        23: anewarray     #128                // class java/lang/String
        26: dup
        27: iconst_0
        28: ldc_w         #293                // String 0xE0
        31: aastore
        32: checkcast     #132                // class "[Ljava/lang/Object;"
        35: invokevirtual #136                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        38: invokespecial #139                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        41: invokevirtual #142                // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        44: invokevirtual #146                // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        47: getstatic     #151                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        50: invokevirtual #155                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        53: invokespecial #347                // Method org/sireum/U8."<init>":(B)V
        56: invokevirtual #557                // Method org/sireum/U8.$greater$eq:(Lorg/sireum/Z$BV$Byte;)Z
        59: ireturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0   v$1   B
    MethodParameters:
      Name                           Flags
      v$1                            final

  public org.sireum.MessagePack$Code$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #558                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MessagePack$Code$;

  public static final java.lang.Object $anonfun$isFixInt$1$adapted(byte);
    descriptor: (B)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #560                // class org/sireum/B
         3: dup
         4: iload_0
         5: invokestatic  #562                // Method $anonfun$isFixInt$1:(B)Z
         8: invokespecial #565                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   v$1   B
    MethodParameters:
      Name                           Flags
      v$1                            final

  public static final java.lang.Object $anonfun$formatTable$1$adapted(byte);
    descriptor: (B)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #560                // class org/sireum/B
         3: dup
         4: iload_0
         5: invokestatic  #567                // Method $anonfun$formatTable$1:(B)Z
         8: invokespecial #565                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   n$2   B
    MethodParameters:
      Name                           Flags
      n$2                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #579,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #13= #2 of #12;           // Code$=class org/sireum/MessagePack$Code$ of class org/sireum/MessagePack
  public static #16= #15 of #12;          // Kind$=class org/sireum/MessagePack$Kind$ of class org/sireum/MessagePack
  public static final #19= #18 of #15;    // ARRAY$=class org/sireum/MessagePack$Kind$ARRAY$ of class org/sireum/MessagePack$Kind$
  public static final #22= #21 of #15;    // BINARY$=class org/sireum/MessagePack$Kind$BINARY$ of class org/sireum/MessagePack$Kind$
  public static final #25= #24 of #15;    // BOOLEAN$=class org/sireum/MessagePack$Kind$BOOLEAN$ of class org/sireum/MessagePack$Kind$
  public static final #28= #27 of #15;    // EXTENSION$=class org/sireum/MessagePack$Kind$EXTENSION$ of class org/sireum/MessagePack$Kind$
  public static final #31= #30 of #15;    // FLOAT$=class org/sireum/MessagePack$Kind$FLOAT$ of class org/sireum/MessagePack$Kind$
  public static final #34= #33 of #15;    // INTEGER$=class org/sireum/MessagePack$Kind$INTEGER$ of class org/sireum/MessagePack$Kind$
  public static final #37= #36 of #15;    // MAP$=class org/sireum/MessagePack$Kind$MAP$ of class org/sireum/MessagePack$Kind$
  public static final #40= #39 of #15;    // NIL$=class org/sireum/MessagePack$Kind$NIL$ of class org/sireum/MessagePack$Kind$
  public static final #43= #42 of #15;    // NONE$=class org/sireum/MessagePack$Kind$NONE$ of class org/sireum/MessagePack$Kind$
  public static final #46= #45 of #15;    // STRING$=class org/sireum/MessagePack$Kind$STRING$ of class org/sireum/MessagePack$Kind$
  public static #49= #48 of #15;          // Type=class org/sireum/MessagePack$Kind$Type of class org/sireum/MessagePack$Kind$
  public static #54= #51 of #53;          // U8$Slang=class org/sireum/U8$U8$Slang of class org/sireum/U8
  public #57= #56 of #51;                 // u8$=class org/sireum/U8$U8$Slang$u8$ of class org/sireum/U8$U8$Slang
  public static #62= #59 of #61;          // BV$=class org/sireum/Z$BV$ of class org/sireum/Z
  public static #65= #64 of #59;          // Byte=class org/sireum/Z$BV$Byte of class org/sireum/Z$BV$
SourceFile: "MessagePack.scala"
BootstrapMethods:
  0: #398 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #385 ()Ljava/lang/Object;
      #390 REF_invokeStatic org/sireum/MessagePack$Code$.$anonfun$isFixInt$1$adapted:(B)Ljava/lang/Object;
      #385 ()Ljava/lang/Object;
      #391 1
  1: #398 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #385 ()Ljava/lang/Object;
      #469 REF_invokeStatic org/sireum/MessagePack$Code$.$anonfun$formatTable$1$adapted:(B)Ljava/lang/Object;
      #385 ()Ljava/lang/Object;
      #391 1
  2: #576 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #469 REF_invokeStatic org/sireum/MessagePack$Code$.$anonfun$formatTable$1$adapted:(B)Ljava/lang/Object;
      #390 REF_invokeStatic org/sireum/MessagePack$Code$.$anonfun$isFixInt$1$adapted:(B)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x108 (unknown attribute)
   01 01 00 34 01 CC 01 75 01 01 D2 01 83 01 02 29
   01 75 01 01 82 01 83 01 00 6E 00 6D 01 00 64 01
   62 01 00 65 01 62 01 00 4D 01 62 01 00 4E 01 62
   01 00 4C 01 62 01 00 50 01 62 01 00 51 01 62 01
   00 4F 01 62 01 00 4A 01 62 01 00 47 01 62 01 00
   5C 01 62 01 00 60 01 62 01 00 5D 01 62 01 00 5E
   01 62 01 00 5F 01 62 01 00 46 01 62 01 00 48 01
   62 01 00 52 01 62 01 00 53 01 62 01 00 59 01 62
   01 00 5A 01 62 01 00 5B 01 62 01 00 58 01 62 01
   00 66 01 62 01 00 67 01 62 01 00 68 01 62 01 00
   49 01 62 01 00 44 01 62 01 00 62 01 62 01 00 63
   01 62 01 00 61 01 62 01 00 4B 01 62 01 00 55 01
   62 01 00 56 01 62 01 00 57 01 62 01 00 54 01 62
   01 00 69 01 6C 01 01 6E 01 4C 01 01 4B 01 4C 01
   01 AF 01 75 01 01 74 01 75 01 01 A3 01 75 01 01
   A6 01 75 01 01 AB 01 75 01 01 AE 01 75 01 01 A0
   01 75 01 01 97 01 75 01
  Scala: length = 0x0 (unknown attribute)

