Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/mutable/TreeSet$TreeSetProjection.class
  Last modified May 29, 2022; size 6623 bytes
  SHA-256 checksum 1751da28e3368ecc81085335a72dad57457135c0874c672e9410243b21e31f43
  Compiled from "TreeSet.scala"
public final class scala.collection.mutable.TreeSet$TreeSetProjection extends scala.collection.mutable.TreeSet<A>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/mutable/TreeSet$TreeSetProjection
  super_class: #5                         // scala/collection/mutable/TreeSet
  interfaces: 0, fields: 3, methods: 20, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/mutable/TreeSet$TreeSetProjection
    #2 = Class              #1            // scala/collection/mutable/TreeSet$TreeSetProjection
    #3 = Utf8               Lscala/collection/mutable/TreeSet<TA;>;
    #4 = Utf8               scala/collection/mutable/TreeSet
    #5 = Class              #4            // scala/collection/mutable/TreeSet
    #6 = Utf8               TreeSet.scala
    #7 = Utf8               scala/collection/mutable/RedBlackTree$KeysIterator
    #8 = Class              #7            // scala/collection/mutable/RedBlackTree$KeysIterator
    #9 = Utf8               scala/collection/mutable/RedBlackTree
   #10 = Class              #9            // scala/collection/mutable/RedBlackTree
   #11 = Utf8               KeysIterator
   #12 = Utf8               scala/collection/mutable/RedBlackTree$Tree
   #13 = Class              #12           // scala/collection/mutable/RedBlackTree$Tree
   #14 = Utf8               Tree
   #15 = Utf8               TreeSetProjection
   #16 = Utf8               from
   #17 = Utf8               Lscala/Option;
   #18 = Utf8               Lscala/Option<TA;>;
   #19 = Utf8               until
   #20 = Utf8               $outer
   #21 = Utf8               Lscala/collection/mutable/TreeSet;
   #22 = Utf8               pickLowerBound
   #23 = Utf8               (Lscala/Option;)Lscala/Option;
   #24 = Utf8               (Lscala/Option<TA;>;)Lscala/Option<TA;>;
   #25 = Utf8               newFrom
   #26 = NameAndType        #16:#17       // from:Lscala/Option;
   #27 = Fieldref           #2.#26        // scala/collection/mutable/TreeSet$TreeSetProjection.from:Lscala/Option;
   #28 = Utf8               scala/Some
   #29 = Class              #28           // scala/Some
   #30 = Utf8               value
   #31 = Utf8               ()Ljava/lang/Object;
   #32 = NameAndType        #30:#31       // value:()Ljava/lang/Object;
   #33 = Methodref          #29.#32       // scala/Some.value:()Ljava/lang/Object;
   #34 = Utf8               ordering
   #35 = Utf8               ()Lscala/math/Ordering;
   #36 = NameAndType        #34:#35       // ordering:()Lscala/math/Ordering;
   #37 = Methodref          #2.#36        // scala/collection/mutable/TreeSet$TreeSetProjection.ordering:()Lscala/math/Ordering;
   #38 = Utf8               scala/math/Ordering
   #39 = Class              #38           // scala/math/Ordering
   #40 = Utf8               max
   #41 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #42 = NameAndType        #40:#41       // max:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #43 = InterfaceMethodref #39.#42       // scala/math/Ordering.max:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #44 = Utf8               <init>
   #45 = Utf8               (Ljava/lang/Object;)V
   #46 = NameAndType        #44:#45       // "<init>":(Ljava/lang/Object;)V
   #47 = Methodref          #29.#46       // scala/Some."<init>":(Ljava/lang/Object;)V
   #48 = Utf8               scala/None$
   #49 = Class              #48           // scala/None$
   #50 = Utf8               MODULE$
   #51 = Utf8               Lscala/None$;
   #52 = NameAndType        #50:#51       // MODULE$:Lscala/None$;
   #53 = Fieldref           #49.#52       // scala/None$.MODULE$:Lscala/None$;
   #54 = Utf8               java/lang/Object
   #55 = Class              #54           // java/lang/Object
   #56 = Utf8               equals
   #57 = Utf8               (Ljava/lang/Object;)Z
   #58 = NameAndType        #56:#57       // equals:(Ljava/lang/Object;)Z
   #59 = Methodref          #55.#58       // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #60 = Utf8               newFr
   #61 = Utf8               Ljava/lang/Object;
   #62 = Utf8               fr
   #63 = Utf8               this
   #64 = Utf8               Lscala/collection/mutable/TreeSet$TreeSetProjection;
   #65 = Utf8               scala/Option
   #66 = Class              #65           // scala/Option
   #67 = Utf8               pickUpperBound
   #68 = Utf8               newUntil
   #69 = NameAndType        #19:#17       // until:Lscala/Option;
   #70 = Fieldref           #2.#69        // scala/collection/mutable/TreeSet$TreeSetProjection.until:Lscala/Option;
   #71 = Utf8               min
   #72 = NameAndType        #71:#41       // min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #73 = InterfaceMethodref #39.#72       // scala/math/Ordering.min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #74 = Utf8               newUnt
   #75 = Utf8               unt
   #76 = Utf8               isInsideViewBounds
   #77 = Utf8               (TA;)Z
   #78 = Utf8               key
   #79 = Utf8               isEmpty
   #80 = Utf8               ()Z
   #81 = NameAndType        #79:#80       // isEmpty:()Z
   #82 = Methodref          #66.#81       // scala/Option.isEmpty:()Z
   #83 = Utf8               get
   #84 = NameAndType        #83:#31       // get:()Ljava/lang/Object;
   #85 = Methodref          #66.#84       // scala/Option.get:()Ljava/lang/Object;
   #86 = Utf8               compare
   #87 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I
   #88 = NameAndType        #86:#87       // compare:(Ljava/lang/Object;Ljava/lang/Object;)I
   #89 = InterfaceMethodref #39.#88       // scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
   #90 = Utf8               afterFrom
   #91 = Utf8               Z
   #92 = Utf8               beforeUntil
   #93 = Utf8               rangeImpl
   #94 = Utf8               (Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeSet;
   #95 = Utf8               (Lscala/Option<TA;>;Lscala/Option<TA;>;)Lscala/collection/mutable/TreeSet<TA;>;
   #96 = NameAndType        #20:#21       // $outer:Lscala/collection/mutable/TreeSet;
   #97 = Fieldref           #2.#96        // scala/collection/mutable/TreeSet$TreeSetProjection.$outer:Lscala/collection/mutable/TreeSet;
   #98 = NameAndType        #22:#23       // pickLowerBound:(Lscala/Option;)Lscala/Option;
   #99 = Methodref          #2.#98        // scala/collection/mutable/TreeSet$TreeSetProjection.pickLowerBound:(Lscala/Option;)Lscala/Option;
  #100 = NameAndType        #67:#23       // pickUpperBound:(Lscala/Option;)Lscala/Option;
  #101 = Methodref          #2.#100       // scala/collection/mutable/TreeSet$TreeSetProjection.pickUpperBound:(Lscala/Option;)Lscala/Option;
  #102 = Utf8               (Lscala/collection/mutable/TreeSet;Lscala/Option;Lscala/Option;)V
  #103 = NameAndType        #44:#102      // "<init>":(Lscala/collection/mutable/TreeSet;Lscala/Option;Lscala/Option;)V
  #104 = Methodref          #2.#103       // scala/collection/mutable/TreeSet$TreeSetProjection."<init>":(Lscala/collection/mutable/TreeSet;Lscala/Option;Lscala/Option;)V
  #105 = Utf8               contains
  #106 = NameAndType        #76:#57       // isInsideViewBounds:(Ljava/lang/Object;)Z
  #107 = Methodref          #2.#106       // scala/collection/mutable/TreeSet$TreeSetProjection.isInsideViewBounds:(Ljava/lang/Object;)Z
  #108 = Utf8               scala/collection/mutable/RedBlackTree$
  #109 = Class              #108          // scala/collection/mutable/RedBlackTree$
  #110 = Utf8               Lscala/collection/mutable/RedBlackTree$;
  #111 = NameAndType        #50:#110      // MODULE$:Lscala/collection/mutable/RedBlackTree$;
  #112 = Fieldref           #109.#111     // scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
  #113 = Utf8               scala$collection$mutable$TreeSet$$tree
  #114 = Utf8               ()Lscala/collection/mutable/RedBlackTree$Tree;
  #115 = NameAndType        #113:#114     // scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
  #116 = Methodref          #5.#115       // scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
  #117 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
  #118 = NameAndType        #105:#117     // contains:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
  #119 = Methodref          #109.#118     // scala/collection/mutable/RedBlackTree$.contains:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
  #120 = Utf8               iterator
  #121 = Utf8               ()Lscala/collection/Iterator;
  #122 = Utf8               ()Lscala/collection/Iterator<TA;>;
  #123 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #124 = NameAndType        #44:#123      // "<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #125 = Methodref          #8.#124       // scala/collection/mutable/RedBlackTree$KeysIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
  #126 = Utf8               keysIterator_tree
  #127 = Utf8               Lscala/collection/mutable/RedBlackTree$Tree;
  #128 = Utf8               keysIterator_start
  #129 = Utf8               keysIterator_end
  #130 = Utf8               keysIterator_evidence$4
  #131 = Utf8               Lscala/math/Ordering;
  #132 = Utf8               iteratorFrom
  #133 = Utf8               (Ljava/lang/Object;)Lscala/collection/Iterator;
  #134 = Utf8               (TA;)Lscala/collection/Iterator<TA;>;
  #135 = Utf8               start
  #136 = Utf8               size
  #137 = Utf8               ()I
  #138 = NameAndType        #136:#137     // size:()I
  #139 = Methodref          #13.#138      // scala/collection/mutable/RedBlackTree$Tree.size:()I
  #140 = NameAndType        #120:#121     // iterator:()Lscala/collection/Iterator;
  #141 = Methodref          #2.#140       // scala/collection/mutable/TreeSet$TreeSetProjection.iterator:()Lscala/collection/Iterator;
  #142 = Utf8               scala/collection/Iterator
  #143 = Class              #142          // scala/collection/Iterator
  #144 = InterfaceMethodref #143.#138     // scala/collection/Iterator.size:()I
  #145 = Utf8               knownSize
  #146 = Utf8               hasNext
  #147 = NameAndType        #146:#80      // hasNext:()Z
  #148 = InterfaceMethodref #143.#147     // scala/collection/Iterator.hasNext:()Z
  #149 = Utf8               head
  #150 = Utf8               ()TA;
  #151 = Utf8               headOption
  #152 = Utf8               ()Lscala/Option;
  #153 = NameAndType        #151:#152     // headOption:()Lscala/Option;
  #154 = Methodref          #2.#153       // scala/collection/mutable/TreeSet$TreeSetProjection.headOption:()Lscala/Option;
  #155 = Utf8               ()Lscala/Option<TA;>;
  #156 = Utf8               isDefined
  #157 = NameAndType        #156:#80      // isDefined:()Z
  #158 = Methodref          #66.#157      // scala/Option.isDefined:()Z
  #159 = Utf8               minKeyAfter
  #160 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #161 = NameAndType        #159:#160     // minKeyAfter:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #162 = Methodref          #109.#161     // scala/collection/mutable/RedBlackTree$.minKeyAfter:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #163 = Utf8               minKey
  #164 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #165 = NameAndType        #163:#164     // minKey:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #166 = Methodref          #109.#165     // scala/collection/mutable/RedBlackTree$.minKey:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #167 = Utf8               e
  #168 = Utf8               elem
  #169 = Utf8               last
  #170 = Utf8               lastOption
  #171 = NameAndType        #170:#152     // lastOption:()Lscala/Option;
  #172 = Methodref          #2.#171       // scala/collection/mutable/TreeSet$TreeSetProjection.lastOption:()Lscala/Option;
  #173 = Utf8               maxKeyBefore
  #174 = NameAndType        #173:#160     // maxKeyBefore:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #175 = Methodref          #109.#174     // scala/collection/mutable/RedBlackTree$.maxKeyBefore:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
  #176 = Utf8               maxKey
  #177 = NameAndType        #176:#164     // maxKey:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #178 = Methodref          #109.#177     // scala/collection/mutable/RedBlackTree$.maxKey:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
  #179 = Utf8               foreach
  #180 = Utf8               (Lscala/Function1;)V
  #181 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TA;TU;>;)V
  #182 = Utf8               f
  #183 = NameAndType        #179:#180     // foreach:(Lscala/Function1;)V
  #184 = InterfaceMethodref #143.#183     // scala/collection/Iterator.foreach:(Lscala/Function1;)V
  #185 = Utf8               Lscala/Function1;
  #186 = Utf8               clone
  #187 = Utf8               ()Lscala/collection/mutable/TreeSet;
  #188 = Utf8               ()Lscala/collection/mutable/TreeSet<TA;>;
  #189 = Utf8               scala/collection/mutable/SetOps
  #190 = Class              #189          // scala/collection/mutable/SetOps
  #191 = Utf8               clone$
  #192 = Utf8               (Lscala/collection/mutable/SetOps;)Lscala/collection/mutable/SetOps;
  #193 = NameAndType        #191:#192     // clone$:(Lscala/collection/mutable/SetOps;)Lscala/collection/mutable/SetOps;
  #194 = InterfaceMethodref #190.#193     // scala/collection/mutable/SetOps.clone$:(Lscala/collection/mutable/SetOps;)Lscala/collection/mutable/SetOps;
  #195 = NameAndType        #93:#94       // rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeSet;
  #196 = Methodref          #5.#195       // scala/collection/mutable/TreeSet.rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeSet;
  #197 = NameAndType        #186:#187     // clone:()Lscala/collection/mutable/TreeSet;
  #198 = Methodref          #2.#197       // scala/collection/mutable/TreeSet$TreeSetProjection.clone:()Lscala/collection/mutable/TreeSet;
  #199 = Utf8               ()Lscala/collection/mutable/SetOps;
  #200 = Utf8               (Lscala/Option;Lscala/Option;)Ljava/lang/Object;
  #201 = Methodref          #2.#195       // scala/collection/mutable/TreeSet$TreeSetProjection.rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeSet;
  #202 = Utf8               (Lscala/Option<TA;>;Lscala/Option<TA;>;)V
  #203 = Methodref          #5.#36        // scala/collection/mutable/TreeSet.ordering:()Lscala/math/Ordering;
  #204 = Utf8               (Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
  #205 = NameAndType        #44:#204      // "<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
  #206 = Methodref          #5.#205       // scala/collection/mutable/TreeSet."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
  #207 = Utf8               Signature
  #208 = Utf8               Code
  #209 = Utf8               StackMapTable
  #210 = Utf8               LineNumberTable
  #211 = Utf8               LocalVariableTable
  #212 = Utf8               MethodParameters
  #213 = Utf8               InnerClasses
  #214 = Utf8               SourceFile
  #215 = Utf8               ScalaInlineInfo
  #216 = Utf8               Scala
{
  private final scala.Option<A> from;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #18                          // Lscala/Option<TA;>;

  private final scala.Option<A> until;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #18                          // Lscala/Option<TA;>;

  private final scala.collection.mutable.TreeSet $outer;
    descriptor: Lscala/collection/mutable/TreeSet;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private scala.Option<A> pickLowerBound(scala.Option<A>);
    descriptor: (Lscala/Option;)Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=6, args_size=2
         0: aload_0
         1: getfield      #27                 // Field from:Lscala/Option;
         4: astore        5
         6: aload         5
         8: instanceof    #29                 // class scala/Some
        11: ifeq          62
        14: aload         5
        16: checkcast     #29                 // class scala/Some
        19: invokevirtual #33                 // Method scala/Some.value:()Ljava/lang/Object;
        22: astore_3
        23: aload_1
        24: instanceof    #29                 // class scala/Some
        27: ifeq          62
        30: aload_1
        31: checkcast     #29                 // class scala/Some
        34: invokevirtual #33                 // Method scala/Some.value:()Ljava/lang/Object;
        37: astore        4
        39: new           #29                 // class scala/Some
        42: dup
        43: aload_0
        44: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        47: aload_3
        48: aload         4
        50: invokeinterface #43,  3           // InterfaceMethod scala/math/Ordering.max:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        55: invokespecial #47                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        58: astore_2
        59: goto          83
        62: getstatic     #53                 // Field scala/None$.MODULE$:Lscala/None$;
        65: aload         5
        67: invokevirtual #59                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        70: ifeq          78
        73: aload_1
        74: astore_2
        75: goto          83
        78: aload_0
        79: getfield      #27                 // Field from:Lscala/Option;
        82: astore_2
        83: aload_2
        84: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class scala/collection/mutable/TreeSet$TreeSetProjection, class scala/Option, top, top, top, class scala/Option ]
          stack = []
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/mutable/TreeSet$TreeSetProjection, class scala/Option, class scala/Option, top, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 121: 0
        line 122: 6
        line 123: 62
        line 124: 78
        line 121: 83
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      23     4 newFr   Ljava/lang/Object;
           23      39     3    fr   Ljava/lang/Object;
            0      85     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
            0      85     1 newFrom   Lscala/Option;
    Signature: #24                          // (Lscala/Option<TA;>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      newFrom                        final

  private scala.Option<A> pickUpperBound(scala.Option<A>);
    descriptor: (Lscala/Option;)Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=6, args_size=2
         0: aload_0
         1: getfield      #70                 // Field until:Lscala/Option;
         4: astore        5
         6: aload         5
         8: instanceof    #29                 // class scala/Some
        11: ifeq          62
        14: aload         5
        16: checkcast     #29                 // class scala/Some
        19: invokevirtual #33                 // Method scala/Some.value:()Ljava/lang/Object;
        22: astore_3
        23: aload_1
        24: instanceof    #29                 // class scala/Some
        27: ifeq          62
        30: aload_1
        31: checkcast     #29                 // class scala/Some
        34: invokevirtual #33                 // Method scala/Some.value:()Ljava/lang/Object;
        37: astore        4
        39: new           #29                 // class scala/Some
        42: dup
        43: aload_0
        44: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        47: aload_3
        48: aload         4
        50: invokeinterface #73,  3           // InterfaceMethod scala/math/Ordering.min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        55: invokespecial #47                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        58: astore_2
        59: goto          83
        62: getstatic     #53                 // Field scala/None$.MODULE$:Lscala/None$;
        65: aload         5
        67: invokevirtual #59                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        70: ifeq          78
        73: aload_1
        74: astore_2
        75: goto          83
        78: aload_0
        79: getfield      #70                 // Field until:Lscala/Option;
        82: astore_2
        83: aload_2
        84: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class scala/collection/mutable/TreeSet$TreeSetProjection, class scala/Option, top, top, top, class scala/Option ]
          stack = []
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/mutable/TreeSet$TreeSetProjection, class scala/Option, class scala/Option, top, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 130: 0
        line 131: 6
        line 132: 62
        line 133: 78
        line 130: 83
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      23     4 newUnt   Ljava/lang/Object;
           23      39     3   unt   Ljava/lang/Object;
            0      85     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
            0      85     1 newUntil   Lscala/Option;
    Signature: #24                          // (Lscala/Option<TA;>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      newUntil                       final

  private boolean isInsideViewBounds(A);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: getfield      #27                 // Field from:Lscala/Option;
         4: invokevirtual #82                 // Method scala/Option.isEmpty:()Z
         7: ifne          31
        10: aload_0
        11: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        14: aload_0
        15: getfield      #27                 // Field from:Lscala/Option;
        18: invokevirtual #85                 // Method scala/Option.get:()Ljava/lang/Object;
        21: aload_1
        22: invokeinterface #89,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        27: iconst_0
        28: if_icmpgt     35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: istore_2
        37: aload_0
        38: getfield      #70                 // Field until:Lscala/Option;
        41: invokevirtual #82                 // Method scala/Option.isEmpty:()Z
        44: ifne          68
        47: aload_0
        48: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        51: aload_1
        52: aload_0
        53: getfield      #70                 // Field until:Lscala/Option;
        56: invokevirtual #85                 // Method scala/Option.get:()Ljava/lang/Object;
        59: invokeinterface #89,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
        64: iconst_0
        65: if_icmpge     72
        68: iconst_1
        69: goto          73
        72: iconst_0
        73: istore_3
        74: iload_2
        75: ifeq          84
        78: iload_3
        79: ifeq          84
        82: iconst_1
        83: ireturn
        84: iconst_0
        85: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 31 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ int ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 10
          locals = [ int ]
      LineNumberTable:
        line 140: 0
        line 141: 37
        line 142: 74
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37      48     2 afterFrom   Z
           74      11     3 beforeUntil   Z
            0      86     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
            0      86     1   key   Ljava/lang/Object;
    Signature: #77                          // (TA;)Z
    MethodParameters:
      Name                           Flags
      key                            final

  public scala.collection.mutable.TreeSet<A> rangeImpl(scala.Option<A>, scala.Option<A>);
    descriptor: (Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: new           #2                  // class scala/collection/mutable/TreeSet$TreeSetProjection
         3: dup
         4: aload_0
         5: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
         8: aload_0
         9: aload_1
        10: invokespecial #99                 // Method pickLowerBound:(Lscala/Option;)Lscala/Option;
        13: aload_0
        14: aload_2
        15: invokespecial #101                // Method pickUpperBound:(Lscala/Option;)Lscala/Option;
        18: invokespecial #104                // Method "<init>":(Lscala/collection/mutable/TreeSet;Lscala/Option;Lscala/Option;)V
        21: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
            0      22     1  from   Lscala/Option;
            0      22     2 until   Lscala/Option;
    Signature: #95                          // (Lscala/Option<TA;>;Lscala/Option<TA;>;)Lscala/collection/mutable/TreeSet<TA;>;
    MethodParameters:
      Name                           Flags
      from                           final
      until                          final

  public boolean contains(A);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #107                // Method isInsideViewBounds:(Ljava/lang/Object;)Z
         5: ifeq          31
         8: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        11: aload_0
        12: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
        15: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        18: aload_1
        19: aload_0
        20: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        23: invokevirtual #119                // Method scala/collection/mutable/RedBlackTree$.contains:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Z
        26: ifeq          31
        29: iconst_1
        30: ireturn
        31: iconst_0
        32: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 31 /* same */
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
            0      33     1   key   Ljava/lang/Object;
    Signature: #77                          // (TA;)Z
    MethodParameters:
      Name                           Flags
      key                            final

  public scala.collection.Iterator<A> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=1
         0: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
         8: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        11: aload_0
        12: getfield      #27                 // Field from:Lscala/Option;
        15: aload_0
        16: getfield      #70                 // Field until:Lscala/Option;
        19: aload_0
        20: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        23: astore        4
        25: astore_3
        26: astore_2
        27: astore_1
        28: new           #8                  // class scala/collection/mutable/RedBlackTree$KeysIterator
        31: dup
        32: aload_1
        33: aload_2
        34: aload_3
        35: aload         4
        37: invokespecial #125                // Method scala/collection/mutable/RedBlackTree$KeysIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        40: areturn
      LineNumberTable:
        line 150: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
           28      12     1 keysIterator_tree   Lscala/collection/mutable/RedBlackTree$Tree;
           28      12     2 keysIterator_start   Lscala/Option;
           28      12     3 keysIterator_end   Lscala/Option;
           28      12     4 keysIterator_evidence$4   Lscala/math/Ordering;
    Signature: #122                         // ()Lscala/collection/Iterator<TA;>;

  public scala.collection.Iterator<A> iteratorFrom(A);
    descriptor: (Ljava/lang/Object;)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=2
         0: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
         8: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        11: aload_0
        12: new           #29                 // class scala/Some
        15: dup
        16: aload_1
        17: invokespecial #47                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        20: invokespecial #99                 // Method pickLowerBound:(Lscala/Option;)Lscala/Option;
        23: aload_0
        24: getfield      #70                 // Field until:Lscala/Option;
        27: aload_0
        28: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        31: astore        5
        33: astore        4
        35: astore_3
        36: astore_2
        37: new           #8                  // class scala/collection/mutable/RedBlackTree$KeysIterator
        40: dup
        41: aload_2
        42: aload_3
        43: aload         4
        45: aload         5
        47: invokespecial #125                // Method scala/collection/mutable/RedBlackTree$KeysIterator."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/Option;Lscala/Option;Lscala/math/Ordering;)V
        50: areturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
            0      51     1 start   Ljava/lang/Object;
           37      13     2 keysIterator_tree   Lscala/collection/mutable/RedBlackTree$Tree;
           37      13     3 keysIterator_start   Lscala/Option;
           37      13     4 keysIterator_end   Lscala/Option;
           37      13     5 keysIterator_evidence$4   Lscala/math/Ordering;
    Signature: #134                         // (TA;)Lscala/collection/Iterator<TA;>;
    MethodParameters:
      Name                           Flags
      start                          final

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
         8: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #139                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     20
        18: iconst_0
        19: ireturn
        20: aload_0
        21: invokevirtual #141                // Method iterator:()Lscala/collection/Iterator;
        24: dup
        25: ifnonnull     30
        28: aconst_null
        29: athrow
        30: invokeinterface #144,  1          // InterfaceMethod scala/collection/Iterator.size:()I
        35: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class scala/collection/Iterator ]
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;

  public int knownSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
         8: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #139                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpne     20
        18: iconst_0
        19: ireturn
        20: iconst_m1
        21: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */
      LineNumberTable:
        line 154: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
         3: pop
         4: aload_0
         5: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
         8: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        11: invokevirtual #139                // Method scala/collection/mutable/RedBlackTree$Tree.size:()I
        14: iconst_0
        15: if_icmpeq     30
        18: aload_0
        19: invokevirtual #141                // Method iterator:()Lscala/collection/Iterator;
        22: invokeinterface #148,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        27: ifne          32
        30: iconst_1
        31: ireturn
        32: iconst_0
        33: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 30 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 155: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;

  public A head();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #154                // Method headOption:()Lscala/Option;
         4: invokevirtual #85                 // Method scala/Option.get:()Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 157: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
    Signature: #150                         // ()TA;

  public scala.Option<A> headOption();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=1
         0: aload_0
         1: getfield      #27                 // Field from:Lscala/Option;
         4: invokevirtual #158                // Method scala/Option.isDefined:()Z
         7: ifeq          37
        10: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        13: aload_0
        14: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
        17: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        20: aload_0
        21: getfield      #27                 // Field from:Lscala/Option;
        24: invokevirtual #85                 // Method scala/Option.get:()Ljava/lang/Object;
        27: aload_0
        28: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        31: invokevirtual #162                // Method scala/collection/mutable/RedBlackTree$.minKeyAfter:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
        34: goto          50
        37: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        40: aload_0
        41: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
        44: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        47: invokevirtual #166                // Method scala/collection/mutable/RedBlackTree$.minKey:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
        50: astore_2
        51: aload_0
        52: getfield      #70                 // Field until:Lscala/Option;
        55: astore        5
        57: aload_2
        58: instanceof    #29                 // class scala/Some
        61: ifeq          113
        64: aload_2
        65: checkcast     #29                 // class scala/Some
        68: invokevirtual #33                 // Method scala/Some.value:()Ljava/lang/Object;
        71: astore_3
        72: aload         5
        74: instanceof    #29                 // class scala/Some
        77: ifeq          113
        80: aload         5
        82: checkcast     #29                 // class scala/Some
        85: invokevirtual #33                 // Method scala/Some.value:()Ljava/lang/Object;
        88: astore        4
        90: aload_0
        91: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        94: aload_3
        95: aload         4
        97: invokeinterface #89,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
       102: iconst_0
       103: if_icmplt     113
       106: getstatic     #53                 // Field scala/None$.MODULE$:Lscala/None$;
       109: astore_1
       110: goto          115
       113: aload_2
       114: astore_1
       115: aload_1
       116: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 37 /* same */
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class scala/collection/mutable/TreeSet$TreeSetProjection, top, class scala/Option, top, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/mutable/TreeSet$TreeSetProjection, class scala/Option, class scala/Option, top, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 159: 0
        line 160: 51
        line 161: 57
        line 162: 113
        line 160: 115
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           90      23     4   unt   Ljava/lang/Object;
           72      41     3     e   Ljava/lang/Object;
           51      65     2  elem   Lscala/Option;
            0     117     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
    Signature: #155                         // ()Lscala/Option<TA;>;

  public A last();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #172                // Method lastOption:()Lscala/Option;
         4: invokevirtual #85                 // Method scala/Option.get:()Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 166: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
    Signature: #150                         // ()TA;

  public scala.Option<A> lastOption();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=1
         0: aload_0
         1: getfield      #70                 // Field until:Lscala/Option;
         4: invokevirtual #158                // Method scala/Option.isDefined:()Z
         7: ifeq          37
        10: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        13: aload_0
        14: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
        17: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        20: aload_0
        21: getfield      #70                 // Field until:Lscala/Option;
        24: invokevirtual #85                 // Method scala/Option.get:()Ljava/lang/Object;
        27: aload_0
        28: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        31: invokevirtual #175                // Method scala/collection/mutable/RedBlackTree$.maxKeyBefore:(Lscala/collection/mutable/RedBlackTree$Tree;Ljava/lang/Object;Lscala/math/Ordering;)Lscala/Option;
        34: goto          50
        37: getstatic     #112                // Field scala/collection/mutable/RedBlackTree$.MODULE$:Lscala/collection/mutable/RedBlackTree$;
        40: aload_0
        41: getfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
        44: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        47: invokevirtual #178                // Method scala/collection/mutable/RedBlackTree$.maxKey:(Lscala/collection/mutable/RedBlackTree$Tree;)Lscala/Option;
        50: astore_2
        51: aload_0
        52: getfield      #27                 // Field from:Lscala/Option;
        55: astore        5
        57: aload_2
        58: instanceof    #29                 // class scala/Some
        61: ifeq          113
        64: aload_2
        65: checkcast     #29                 // class scala/Some
        68: invokevirtual #33                 // Method scala/Some.value:()Ljava/lang/Object;
        71: astore_3
        72: aload         5
        74: instanceof    #29                 // class scala/Some
        77: ifeq          113
        80: aload         5
        82: checkcast     #29                 // class scala/Some
        85: invokevirtual #33                 // Method scala/Some.value:()Ljava/lang/Object;
        88: astore        4
        90: aload_0
        91: invokevirtual #37                 // Method ordering:()Lscala/math/Ordering;
        94: aload_3
        95: aload         4
        97: invokeinterface #89,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
       102: iconst_0
       103: if_icmpge     113
       106: getstatic     #53                 // Field scala/None$.MODULE$:Lscala/None$;
       109: astore_1
       110: goto          115
       113: aload_2
       114: astore_1
       115: aload_1
       116: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 37 /* same */
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class scala/collection/mutable/TreeSet$TreeSetProjection, top, class scala/Option, top, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/mutable/TreeSet$TreeSetProjection, class scala/Option, class scala/Option, top, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 168: 0
        line 169: 51
        line 170: 57
        line 171: 113
        line 169: 115
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           90      23     4    fr   Ljava/lang/Object;
           72      41     3     e   Ljava/lang/Object;
           51      65     2  elem   Lscala/Option;
            0     117     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
    Signature: #155                         // ()Lscala/Option<TA;>;

  public <U extends java.lang.Object> void foreach(scala.Function1<A, U>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #141                // Method iterator:()Lscala/collection/Iterator;
         4: aload_1
         5: invokeinterface #184,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
        10: return
      LineNumberTable:
        line 178: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
            0      11     1     f   Lscala/Function1;
    Signature: #181                         // <U:Ljava/lang/Object;>(Lscala/Function1<TA;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.collection.mutable.TreeSet<A> clone();
    descriptor: ()Lscala/collection/mutable/TreeSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #194                // InterfaceMethod scala/collection/mutable/SetOps.clone$:(Lscala/collection/mutable/SetOps;)Lscala/collection/mutable/SetOps;
         4: checkcast     #5                  // class scala/collection/mutable/TreeSet
         7: aload_0
         8: getfield      #27                 // Field from:Lscala/Option;
        11: aload_0
        12: getfield      #70                 // Field until:Lscala/Option;
        15: invokevirtual #196                // Method scala/collection/mutable/TreeSet.rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeSet;
        18: areturn
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
    Signature: #188                         // ()Lscala/collection/mutable/TreeSet<TA;>;

  public java.lang.Object clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #198                // Method clone:()Lscala/collection/mutable/TreeSet;
         4: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;

  public scala.collection.mutable.SetOps clone();
    descriptor: ()Lscala/collection/mutable/SetOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #198                // Method clone:()Lscala/collection/mutable/TreeSet;
         4: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;

  public java.lang.Object rangeImpl(scala.Option, scala.Option);
    descriptor: (Lscala/Option;Lscala/Option;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #201                // Method rangeImpl:(Lscala/Option;Lscala/Option;)Lscala/collection/mutable/TreeSet;
         6: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
            0       7     1  from   Lscala/Option;
            0       7     2 until   Lscala/Option;
    MethodParameters:
      Name                           Flags
      from                           final
      until                          final

  public scala.collection.mutable.TreeSet$TreeSetProjection(scala.Option<A>, scala.Option<A>);
    descriptor: (Lscala/collection/mutable/TreeSet;Lscala/Option;Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: aload_2
         2: putfield      #27                 // Field from:Lscala/Option;
         5: aload_0
         6: aload_3
         7: putfield      #70                 // Field until:Lscala/Option;
        10: aload_1
        11: ifnonnull     16
        14: aconst_null
        15: athrow
        16: aload_0
        17: aload_1
        18: putfield      #97                 // Field $outer:Lscala/collection/mutable/TreeSet;
        21: aload_0
        22: aload_1
        23: invokevirtual #116                // Method scala/collection/mutable/TreeSet.scala$collection$mutable$TreeSet$$tree:()Lscala/collection/mutable/RedBlackTree$Tree;
        26: aload_1
        27: invokevirtual #203                // Method scala/collection/mutable/TreeSet.ordering:()Lscala/math/Ordering;
        30: invokespecial #206                // Method scala/collection/mutable/TreeSet."<init>":(Lscala/collection/mutable/RedBlackTree$Tree;Lscala/math/Ordering;)V
        33: return
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lscala/collection/mutable/TreeSet$TreeSetProjection;
            0      34     1 $outer   Lscala/collection/mutable/TreeSet;
            0      34     2  from   Lscala/Option;
            0      34     3 until   Lscala/Option;
    Signature: #202                         // (Lscala/Option<TA;>;Lscala/Option<TA;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      from                           final
      until                          final
}
InnerClasses:
  private static final #11= #8 of #10;    // KeysIterator=class scala/collection/mutable/RedBlackTree$KeysIterator of class scala/collection/mutable/RedBlackTree
  public static final #14= #13 of #10;    // Tree=class scala/collection/mutable/RedBlackTree$Tree of class scala/collection/mutable/RedBlackTree
  private final #15= #2 of #5;            // TreeSetProjection=class scala/collection/mutable/TreeSet$TreeSetProjection of class scala/collection/mutable/TreeSet
Signature: #3                           // Lscala/collection/mutable/TreeSet<TA;>;
SourceFile: "TreeSet.scala"
  ScalaInlineInfo: length = 0x68 (unknown attribute)
   01 01 00 14 00 2C 00 66 01 00 BA 00 1F 01 00 BA
   00 C7 01 00 BA 00 BB 01 00 69 00 39 01 00 B3 00
   B4 01 00 95 00 1F 01 00 97 00 98 01 00 4F 00 50
   01 00 4C 00 39 01 00 78 00 79 01 00 84 00 85 01
   00 91 00 89 01 00 A9 00 1F 01 00 AA 00 98 01 00
   16 00 17 01 00 43 00 17 01 00 5D 00 C8 01 00 5D
   00 5E 01 00 88 00 89 01
  Scala: length = 0x0 (unknown attribute)

