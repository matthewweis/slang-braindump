Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/cache/MockCache$$anonfun$1.class
  Last modified May 29, 2022; size 2965 bytes
  SHA-256 checksum 6302e2021b09a2bdbbd7d87b664e05b39366fefc63650410ae0fed3cf46ffa69
  Compiled from "MockCache.scala"
public final class coursier.cache.MockCache$$anonfun$1 extends scala.runtime.AbstractPartialFunction<java.lang.Throwable, scala.util.Either<coursier.cache.ArtifactError, java.nio.file.Path>> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/MockCache$$anonfun$1
  super_class: #5                         // scala/runtime/AbstractPartialFunction
  interfaces: 1, fields: 2, methods: 5, attributes: 6
Constant pool:
    #1 = Utf8               coursier/cache/MockCache$$anonfun$1
    #2 = Class              #1            // coursier/cache/MockCache$$anonfun$1
    #3 = Utf8               Lscala/runtime/AbstractPartialFunction<Ljava/lang/Throwable;Lscala/util/Either<Lcoursier/cache/ArtifactError;Ljava/nio/file/Path;>;>;Ljava/io/Serializable;
    #4 = Utf8               scala/runtime/AbstractPartialFunction
    #5 = Class              #4            // scala/runtime/AbstractPartialFunction
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               MockCache.scala
    #9 = Utf8               coursier/cache/MockCache
   #10 = Class              #9            // coursier/cache/MockCache
   #11 = Utf8               file
   #12 = Utf8               (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #13 = NameAndType        #11:#12       // file:(Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #14 = Utf8               coursier/cache/ArtifactError$DownloadError
   #15 = Class              #14           // coursier/cache/ArtifactError$DownloadError
   #16 = Utf8               coursier/cache/ArtifactError
   #17 = Class              #16           // coursier/cache/ArtifactError
   #18 = Utf8               DownloadError
   #19 = Utf8               coursier/cache/ArtifactError$NotFound
   #20 = Class              #19           // coursier/cache/ArtifactError$NotFound
   #21 = Utf8               NotFound
   #22 = Utf8               coursier/cache/ArtifactError$NotFound$
   #23 = Class              #22           // coursier/cache/ArtifactError$NotFound$
   #24 = Utf8
   #25 = Utf8               serialVersionUID
   #26 = Utf8               J
   #27 = Long               0l
   #29 = Utf8               artifact$1
   #30 = Utf8               Lcoursier/util/Artifact;
   #31 = Utf8               applyOrElse
   #32 = Utf8               (Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
   #33 = Utf8               <A1:Ljava/lang/Throwable;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
   #34 = Utf8               x1
   #35 = Utf8               default
   #36 = Utf8               java/io/FileNotFoundException
   #37 = Class              #36           // java/io/FileNotFoundException
   #38 = Utf8               scala/package$
   #39 = Class              #38           // scala/package$
   #40 = Utf8               MODULE$
   #41 = Utf8               Lscala/package$;
   #42 = NameAndType        #40:#41       // MODULE$:Lscala/package$;
   #43 = Fieldref           #39.#42       // scala/package$.MODULE$:Lscala/package$;
   #44 = Utf8               Left
   #45 = Utf8               ()Lscala/util/Left$;
   #46 = NameAndType        #44:#45       // Left:()Lscala/util/Left$;
   #47 = Methodref          #39.#46       // scala/package$.Left:()Lscala/util/Left$;
   #48 = NameAndType        #29:#30       // artifact$1:Lcoursier/util/Artifact;
   #49 = Fieldref           #2.#48        // coursier/cache/MockCache$$anonfun$1.artifact$1:Lcoursier/util/Artifact;
   #50 = Utf8               coursier/util/Artifact
   #51 = Class              #50           // coursier/util/Artifact
   #52 = Utf8               url
   #53 = Utf8               ()Ljava/lang/String;
   #54 = NameAndType        #52:#53       // url:()Ljava/lang/String;
   #55 = Methodref          #51.#54       // coursier/util/Artifact.url:()Ljava/lang/String;
   #56 = Utf8               Lcoursier/cache/ArtifactError$NotFound$;
   #57 = NameAndType        #40:#56       // MODULE$:Lcoursier/cache/ArtifactError$NotFound$;
   #58 = Fieldref           #23.#57       // coursier/cache/ArtifactError$NotFound$.MODULE$:Lcoursier/cache/ArtifactError$NotFound$;
   #59 = Utf8               $lessinit$greater$default$2
   #60 = Utf8               ()Lscala/Option;
   #61 = NameAndType        #59:#60       // $lessinit$greater$default$2:()Lscala/Option;
   #62 = Methodref          #23.#61       // coursier/cache/ArtifactError$NotFound$.$lessinit$greater$default$2:()Lscala/Option;
   #63 = Utf8               <init>
   #64 = Utf8               (Ljava/lang/String;Lscala/Option;)V
   #65 = NameAndType        #63:#64       // "<init>":(Ljava/lang/String;Lscala/Option;)V
   #66 = Methodref          #20.#65       // coursier/cache/ArtifactError$NotFound."<init>":(Ljava/lang/String;Lscala/Option;)V
   #67 = Utf8               scala/util/Left$
   #68 = Class              #67           // scala/util/Left$
   #69 = Utf8               apply
   #70 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
   #71 = NameAndType        #69:#70       // apply:(Ljava/lang/Object;)Lscala/util/Left;
   #72 = Methodref          #68.#71       // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
   #73 = Utf8               java/lang/Throwable
   #74 = Class              #73           // java/lang/Throwable
   #75 = Utf8               java/lang/Exception
   #76 = Class              #75           // java/lang/Exception
   #77 = Utf8               toString
   #78 = NameAndType        #77:#53       // toString:()Ljava/lang/String;
   #79 = Methodref          #76.#78       // java/lang/Exception.toString:()Ljava/lang/String;
   #80 = Utf8               scala/Some
   #81 = Class              #80           // scala/Some
   #82 = Utf8               (Ljava/lang/Object;)V
   #83 = NameAndType        #63:#82       // "<init>":(Ljava/lang/Object;)V
   #84 = Methodref          #81.#83       // scala/Some."<init>":(Ljava/lang/Object;)V
   #85 = Methodref          #15.#65       // coursier/cache/ArtifactError$DownloadError."<init>":(Ljava/lang/String;Lscala/Option;)V
   #86 = Utf8               scala/Function1
   #87 = Class              #86           // scala/Function1
   #88 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #89 = NameAndType        #69:#88       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #90 = InterfaceMethodref #87.#89       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #91 = Utf8               java/lang/Object
   #92 = Class              #91           // java/lang/Object
   #93 = Utf8               this
   #94 = Utf8               Lcoursier/cache/MockCache$$anonfun$1;
   #95 = Utf8               Ljava/lang/Throwable;
   #96 = Utf8               Lscala/Function1;
   #97 = Utf8               isDefinedAt
   #98 = Utf8               (Ljava/lang/Throwable;)Z
   #99 = Utf8               (Ljava/lang/Object;)Z
  #100 = Utf8               x
  #101 = NameAndType        #97:#98       // isDefinedAt:(Ljava/lang/Throwable;)Z
  #102 = Methodref          #2.#101       // coursier/cache/MockCache$$anonfun$1.isDefinedAt:(Ljava/lang/Throwable;)Z
  #103 = Utf8               Ljava/lang/Object;
  #104 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #105 = NameAndType        #31:#32       // applyOrElse:(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
  #106 = Methodref          #2.#105       // coursier/cache/MockCache$$anonfun$1.applyOrElse:(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
  #107 = Utf8               (Lcoursier/cache/MockCache;Lcoursier/util/Artifact;)V
  #108 = Utf8               $outer
  #109 = Utf8               ()V
  #110 = NameAndType        #63:#109      // "<init>":()V
  #111 = Methodref          #5.#110       // scala/runtime/AbstractPartialFunction."<init>":()V
  #112 = Utf8               Lcoursier/cache/MockCache;
  #113 = Utf8               ConstantValue
  #114 = Utf8               Code
  #115 = Utf8               StackMapTable
  #116 = Utf8               LineNumberTable
  #117 = Utf8               LocalVariableTable
  #118 = Utf8               Signature
  #119 = Utf8               MethodParameters
  #120 = Utf8               InnerClasses
  #121 = Utf8               EnclosingMethod
  #122 = Utf8               SourceFile
  #123 = Utf8               ScalaInlineInfo
  #124 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 0l

  private final coursier.util.Artifact artifact$1;
    descriptor: Lcoursier/util/Artifact;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final <A1 extends java.lang.Throwable, B1 extends java.lang.Object> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    descriptor: (Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=7, locals=6, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #37                 // class java/io/FileNotFoundException
         8: ifeq          44
        11: getstatic     #43                 // Field scala/package$.MODULE$:Lscala/package$;
        14: invokevirtual #47                 // Method scala/package$.Left:()Lscala/util/Left$;
        17: new           #20                 // class coursier/cache/ArtifactError$NotFound
        20: dup
        21: aload_0
        22: getfield      #49                 // Field artifact$1:Lcoursier/util/Artifact;
        25: invokevirtual #55                 // Method coursier/util/Artifact.url:()Ljava/lang/String;
        28: getstatic     #58                 // Field coursier/cache/ArtifactError$NotFound$.MODULE$:Lcoursier/cache/ArtifactError$NotFound$;
        31: invokevirtual #62                 // Method coursier/cache/ArtifactError$NotFound$.$lessinit$greater$default$2:()Lscala/Option;
        34: invokespecial #66                 // Method coursier/cache/ArtifactError$NotFound."<init>":(Ljava/lang/String;Lscala/Option;)V
        37: invokevirtual #72                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        40: astore_3
        41: goto          110
        44: goto          47
        47: aload         4
        49: instanceof    #76                 // class java/lang/Exception
        52: ifeq          96
        55: aload         4
        57: checkcast     #76                 // class java/lang/Exception
        60: astore        5
        62: getstatic     #43                 // Field scala/package$.MODULE$:Lscala/package$;
        65: invokevirtual #47                 // Method scala/package$.Left:()Lscala/util/Left$;
        68: new           #15                 // class coursier/cache/ArtifactError$DownloadError
        71: dup
        72: aload         5
        74: invokevirtual #79                 // Method java/lang/Exception.toString:()Ljava/lang/String;
        77: new           #81                 // class scala/Some
        80: dup
        81: aload         5
        83: invokespecial #84                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        86: invokespecial #85                 // Method coursier/cache/ArtifactError$DownloadError."<init>":(Ljava/lang/String;Lscala/Option;)V
        89: invokevirtual #72                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        92: astore_3
        93: goto          110
        96: goto          99
        99: aload_2
       100: aload_1
       101: invokeinterface #90,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       106: astore_3
       107: goto          110
       110: aload_3
       111: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class java/lang/Throwable ]
        frame_type = 2 /* same */
        frame_type = 48 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class coursier/cache/MockCache$$anonfun$1, class java/lang/Throwable, class scala/Function1, class java/lang/Object, class java/lang/Throwable ]
          stack = []
      LineNumberTable:
        line 102: 0
        line 103: 3
        line 104: 11
        line 103: 44
        line 105: 47
        line 106: 62
        line 105: 96
        line 102: 99
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     112     0  this   Lcoursier/cache/MockCache$$anonfun$1;
            0     112     1    x1   Ljava/lang/Throwable;
            0     112     2 default   Lscala/Function1;
    Signature: #33                          // <A1:Ljava/lang/Throwable;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      x1                             final
      default                        final

  public final boolean isDefinedAt(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=4, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #37                 // class java/io/FileNotFoundException
         6: ifeq          14
         9: iconst_1
        10: istore_2
        11: goto          37
        14: goto          17
        17: aload_3
        18: instanceof    #76                 // class java/lang/Exception
        21: ifeq          29
        24: iconst_1
        25: istore_2
        26: goto          37
        29: goto          32
        32: iconst_0
        33: istore_2
        34: goto          37
        37: iload_2
        38: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 14
          locals = [ top, class java/lang/Throwable ]
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/cache/MockCache$$anonfun$1, class java/lang/Throwable, int, class java/lang/Throwable ]
          stack = []
      LineNumberTable:
        line 102: 0
        line 103: 2
        line 104: 9
        line 103: 14
        line 105: 17
        line 106: 24
        line 105: 29
        line 102: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lcoursier/cache/MockCache$$anonfun$1;
            0      39     1    x1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x1                             final

  public final boolean isDefinedAt(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #74                 // class java/lang/Throwable
         5: invokevirtual #102                // Method isDefinedAt:(Ljava/lang/Throwable;)Z
         8: ireturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/cache/MockCache$$anonfun$1;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #74                 // class java/lang/Throwable
         5: aload_2
         6: invokevirtual #106                // Method applyOrElse:(Ljava/lang/Throwable;Lscala/Function1;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/cache/MockCache$$anonfun$1;
            0      10     1     x   Ljava/lang/Object;
            0      10     2 default   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public coursier.cache.MockCache$$anonfun$1(coursier.cache.MockCache, coursier.util.Artifact);
    descriptor: (Lcoursier/cache/MockCache;Lcoursier/util/Artifact;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #49                 // Field artifact$1:Lcoursier/util/Artifact;
         5: aload_0
         6: invokespecial #111                // Method scala/runtime/AbstractPartialFunction."<init>":()V
         9: return
      LineNumberTable:
        line 54: 0
        line 102: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/cache/MockCache$$anonfun$1;
            0      10     1 $outer   Lcoursier/cache/MockCache;
            0      10     2 artifact$1   Lcoursier/util/Artifact;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      artifact$1                     final
}
InnerClasses:
  public static final #18= #15 of #17;    // DownloadError=class coursier/cache/ArtifactError$DownloadError of class coursier/cache/ArtifactError
  public static final #21= #20 of #17;    // NotFound=class coursier/cache/ArtifactError$NotFound of class coursier/cache/ArtifactError
  public static #24= #23 of #17;          // =class coursier/cache/ArtifactError$NotFound$ of class coursier/cache/ArtifactError
  public final #2;                        // class coursier/cache/MockCache$$anonfun$1
EnclosingMethod: #10.#13                // coursier.cache.MockCache.file
Signature: #3                           // Lscala/runtime/AbstractPartialFunction<Ljava/lang/Throwable;Lscala/util/Either<Lcoursier/cache/ArtifactError;Ljava/nio/file/Path;>;>;Ljava/io/Serializable;
SourceFile: "MockCache.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 3F 00 6B 01 00 1F 00 68 01 00 1F
   00 20 01 00 61 00 63 01 00 61 00 62 01
  Scala: length = 0x0 (unknown attribute)

