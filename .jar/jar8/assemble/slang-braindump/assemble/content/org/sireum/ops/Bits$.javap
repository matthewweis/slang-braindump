Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/ops/Bits$.class
  Last modified May 29, 2022; size 8442 bytes
  SHA-256 checksum 698d73adb462f3a7131b5b03b039bdcadc281d70945de59cca8cdd00ccb3023f
  Compiled from "Bits.scala"
public final class org.sireum.ops.Bits$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/ops/Bits$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 11, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/ops/Bits$
    #2 = Class              #1            // org/sireum/ops/Bits$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Bits.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/$internal/PackageTrait$MSZ$
   #12 = Class              #11           // org/sireum/$internal/PackageTrait$MSZ$
   #13 = Utf8               org/sireum/$internal/PackageTrait
   #14 = Class              #13           // org/sireum/$internal/PackageTrait
   #15 = Utf8               MSZ$
   #16 = Utf8               org/sireum/U8$U8$Slang
   #17 = Class              #16           // org/sireum/U8$U8$Slang
   #18 = Utf8               org/sireum/U8
   #19 = Class              #18           // org/sireum/U8
   #20 = Utf8               U8$Slang
   #21 = Utf8               org/sireum/U8$U8$Slang$u8$
   #22 = Class              #21           // org/sireum/U8$U8$Slang$u8$
   #23 = Utf8               u8$
   #24 = Utf8               org/sireum/Z$BV$
   #25 = Class              #24           // org/sireum/Z$BV$
   #26 = Utf8               org/sireum/Z
   #27 = Class              #26           // org/sireum/Z
   #28 = Utf8               BV$
   #29 = Utf8               org/sireum/Z$BV$Byte
   #30 = Class              #29           // org/sireum/Z$BV$Byte
   #31 = Utf8               Byte
   #32 = Utf8               org/sireum/ops/Bits$Context
   #33 = Class              #32           // org/sireum/ops/Bits$Context
   #34 = Utf8               org/sireum/ops/Bits
   #35 = Class              #34           // org/sireum/ops/Bits
   #36 = Utf8               Context
   #37 = Utf8               org/sireum/ops/Bits$Context$
   #38 = Class              #37           // org/sireum/ops/Bits$Context$
   #39 = Utf8               Context$
   #40 = Utf8               org/sireum/ops/Bits$Writer$
   #41 = Class              #40           // org/sireum/ops/Bits$Writer$
   #42 = Utf8               Writer$
   #43 = Utf8               MODULE$
   #44 = Utf8               Lorg/sireum/ops/Bits$;
   #45 = Utf8               <clinit>
   #46 = Utf8               ()V
   #47 = Utf8               <init>
   #48 = NameAndType        #47:#46       // "<init>":()V
   #49 = Methodref          #2.#48        // org/sireum/ops/Bits$."<init>":()V
   #50 = NameAndType        #43:#44       // MODULE$:Lorg/sireum/ops/Bits$;
   #51 = Fieldref           #2.#50        // org/sireum/ops/Bits$.MODULE$:Lorg/sireum/ops/Bits$;
   #52 = Utf8               hex2u8
   #53 = Utf8               (B)Lorg/sireum/Option;
   #54 = Utf8               (B)Lorg/sireum/Option<Lorg/sireum/U8;>;
   #55 = Utf8               n
   #56 = Utf8               org/sireum/B$
   #57 = Class              #56           // org/sireum/B$
   #58 = Utf8               Lorg/sireum/B$;
   #59 = NameAndType        #43:#58       // MODULE$:Lorg/sireum/B$;
   #60 = Fieldref           #57.#59       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #61 = Utf8               org/sireum/U8$
   #62 = Class              #61           // org/sireum/U8$
   #63 = Utf8               Lorg/sireum/U8$;
   #64 = NameAndType        #43:#63       // MODULE$:Lorg/sireum/U8$;
   #65 = Fieldref           #62.#64       // org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
   #66 = Utf8               scala/StringContext
   #67 = Class              #66           // scala/StringContext
   #68 = Utf8               scala/runtime/ScalaRunTime$
   #69 = Class              #68           // scala/runtime/ScalaRunTime$
   #70 = Utf8               Lscala/runtime/ScalaRunTime$;
   #71 = NameAndType        #43:#70       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #72 = Fieldref           #69.#71       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #73 = Utf8               java/lang/String
   #74 = Class              #73           // java/lang/String
   #75 = Utf8               48
   #76 = String             #75           // 48
   #77 = Utf8               [Ljava/lang/Object;
   #78 = Class              #77           // "[Ljava/lang/Object;"
   #79 = Utf8               wrapRefArray
   #80 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #81 = NameAndType        #79:#80       // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #82 = Methodref          #69.#81       // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #83 = Utf8               (Lscala/collection/immutable/Seq;)V
   #84 = NameAndType        #47:#83       // "<init>":(Lscala/collection/immutable/Seq;)V
   #85 = Methodref          #67.#84       // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
   #86 = Utf8               (Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
   #87 = NameAndType        #20:#86       // U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
   #88 = Methodref          #62.#87       // org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
   #89 = Utf8               u8
   #90 = Utf8               ()Lorg/sireum/U8$U8$Slang$u8$;
   #91 = NameAndType        #89:#90       // u8:()Lorg/sireum/U8$U8$Slang$u8$;
   #92 = Methodref          #17.#91       // org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
   #93 = Utf8               scala/collection/immutable/Nil$
   #94 = Class              #93           // scala/collection/immutable/Nil$
   #95 = Utf8               Lscala/collection/immutable/Nil$;
   #96 = NameAndType        #43:#95       // MODULE$:Lscala/collection/immutable/Nil$;
   #97 = Fieldref           #94.#96       // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #98 = Utf8               apply
   #99 = Utf8               (Lscala/collection/immutable/Seq;)B
  #100 = NameAndType        #98:#99       // apply:(Lscala/collection/immutable/Seq;)B
  #101 = Methodref          #22.#100      // org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
  #102 = Utf8               (B)V
  #103 = NameAndType        #47:#102      // "<init>":(B)V
  #104 = Methodref          #19.#103      // org/sireum/U8."<init>":(B)V
  #105 = Utf8               $less$eq
  #106 = Utf8               (Lorg/sireum/Z$BV$Byte;)Z
  #107 = NameAndType        #105:#106     // $less$eq:(Lorg/sireum/Z$BV$Byte;)Z
  #108 = Methodref          #19.#107      // org/sireum/U8.$less$eq:(Lorg/sireum/Z$BV$Byte;)Z
  #109 = Utf8               ()Ljava/lang/Object;
  #110 = MethodType         #109          //  ()Ljava/lang/Object;
  #111 = Utf8               $anonfun$hex2u8$1$adapted
  #112 = Utf8               (B)Ljava/lang/Object;
  #113 = NameAndType        #111:#112     // $anonfun$hex2u8$1$adapted:(B)Ljava/lang/Object;
  #114 = Methodref          #2.#113       // org/sireum/ops/Bits$.$anonfun$hex2u8$1$adapted:(B)Ljava/lang/Object;
  #115 = MethodHandle       6:#114        // REF_invokeStatic org/sireum/ops/Bits$.$anonfun$hex2u8$1$adapted:(B)Ljava/lang/Object;
  #116 = Integer            1
  #117 = Utf8               java/lang/invoke/LambdaMetafactory
  #118 = Class              #117          // java/lang/invoke/LambdaMetafactory
  #119 = Utf8               altMetafactory
  #120 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #121 = NameAndType        #119:#120     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #122 = Methodref          #118.#121     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #123 = MethodHandle       6:#122        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #124 = Utf8               (B)Lscala/Function0;
  #125 = NameAndType        #98:#124      // apply:(B)Lscala/Function0;
  #126 = InvokeDynamic      #0:#125       // #0:apply:(B)Lscala/Function0;
  #127 = Utf8               $amp$amp$extension
  #128 = Utf8               (ZLscala/Function0;)Z
  #129 = NameAndType        #127:#128     // $amp$amp$extension:(ZLscala/Function0;)Z
  #130 = Methodref          #57.#129      // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
  #131 = Utf8               $4B
  #132 = Utf8               (Z)Z
  #133 = NameAndType        #131:#132     // $4B:(Z)Z
  #134 = Methodref          #57.#133      // org/sireum/B$.$4B:(Z)Z
  #135 = Utf8               org/sireum/Some$
  #136 = Class              #135          // org/sireum/Some$
  #137 = Utf8               Lorg/sireum/Some$;
  #138 = NameAndType        #43:#137      // MODULE$:Lorg/sireum/Some$;
  #139 = Fieldref           #136.#138     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #140 = Utf8               $minus
  #141 = Utf8               (Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #142 = NameAndType        #140:#141     // $minus:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #143 = Methodref          #19.#142      // org/sireum/U8.$minus:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #144 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #145 = NameAndType        #98:#144      // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #146 = Methodref          #136.#145     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #147 = Utf8               65
  #148 = String             #147          // 65
  #149 = Utf8               $anonfun$hex2u8$2$adapted
  #150 = NameAndType        #149:#112     // $anonfun$hex2u8$2$adapted:(B)Ljava/lang/Object;
  #151 = Methodref          #2.#150       // org/sireum/ops/Bits$.$anonfun$hex2u8$2$adapted:(B)Ljava/lang/Object;
  #152 = MethodHandle       6:#151        // REF_invokeStatic org/sireum/ops/Bits$.$anonfun$hex2u8$2$adapted:(B)Ljava/lang/Object;
  #153 = InvokeDynamic      #1:#125       // #1:apply:(B)Lscala/Function0;
  #154 = Utf8               55
  #155 = String             #154          // 55
  #156 = Utf8               97
  #157 = String             #156          // 97
  #158 = Utf8               $anonfun$hex2u8$3$adapted
  #159 = NameAndType        #158:#112     // $anonfun$hex2u8$3$adapted:(B)Ljava/lang/Object;
  #160 = Methodref          #2.#159       // org/sireum/ops/Bits$.$anonfun$hex2u8$3$adapted:(B)Ljava/lang/Object;
  #161 = MethodHandle       6:#160        // REF_invokeStatic org/sireum/ops/Bits$.$anonfun$hex2u8$3$adapted:(B)Ljava/lang/Object;
  #162 = InvokeDynamic      #2:#125       // #2:apply:(B)Lscala/Function0;
  #163 = Utf8               87
  #164 = String             #163          // 87
  #165 = Utf8               org/sireum/None$
  #166 = Class              #165          // org/sireum/None$
  #167 = Utf8               Lorg/sireum/None$;
  #168 = NameAndType        #43:#167      // MODULE$:Lorg/sireum/None$;
  #169 = Fieldref           #166.#168     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #170 = Utf8               ()Lorg/sireum/None;
  #171 = NameAndType        #98:#170      // apply:()Lorg/sireum/None;
  #172 = Methodref          #166.#171     // org/sireum/None$.apply:()Lorg/sireum/None;
  #173 = Utf8               this
  #174 = Utf8               B
  #175 = Utf8               fromHexString
  #176 = Utf8               (Ljava/lang/String;)Lorg/sireum/IS;
  #177 = Utf8               (Ljava/lang/String;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/B;>;
  #178 = Utf8               s
  #179 = Utf8               scala/Predef$
  #180 = Class              #179          // scala/Predef$
  #181 = Utf8               Lscala/Predef$;
  #182 = NameAndType        #43:#181      // MODULE$:Lscala/Predef$;
  #183 = Fieldref           #180.#182     // scala/Predef$.MODULE$:Lscala/Predef$;
  #184 = Utf8               org/sireum/String$
  #185 = Class              #184          // org/sireum/String$
  #186 = Utf8               Lorg/sireum/String$;
  #187 = NameAndType        #43:#186      // MODULE$:Lorg/sireum/String$;
  #188 = Fieldref           #185.#187     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #189 = Utf8               size$extension
  #190 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #191 = NameAndType        #189:#190     // size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
  #192 = Methodref          #185.#191     // org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
  #193 = Utf8               org/sireum/Z$
  #194 = Class              #193          // org/sireum/Z$
  #195 = Utf8               Lorg/sireum/Z$;
  #196 = NameAndType        #43:#195      // MODULE$:Lorg/sireum/Z$;
  #197 = Fieldref           #194.#196     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #198 = Utf8               (I)Lorg/sireum/Z;
  #199 = NameAndType        #98:#198      // apply:(I)Lorg/sireum/Z;
  #200 = Methodref          #194.#199     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #201 = Utf8               $percent
  #202 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #203 = NameAndType        #201:#202     // $percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #204 = InterfaceMethodref #27.#203      // org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #205 = Utf8               equals
  #206 = Utf8               (Ljava/lang/Object;)Z
  #207 = NameAndType        #205:#206     // equals:(Ljava/lang/Object;)Z
  #208 = Methodref          #4.#207       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #209 = Utf8               assert
  #210 = Utf8               (Z)V
  #211 = NameAndType        #209:#210     // assert:(Z)V
  #212 = Methodref          #180.#211     // scala/Predef$.assert:(Z)V
  #213 = Utf8               org/sireum/helper$
  #214 = Class              #213          // org/sireum/helper$
  #215 = Utf8               Lorg/sireum/helper$;
  #216 = NameAndType        #43:#215      // MODULE$:Lorg/sireum/helper$;
  #217 = Fieldref           #214.#216     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #218 = Utf8               org/sireum/package$
  #219 = Class              #218          // org/sireum/package$
  #220 = Utf8               Lorg/sireum/package$;
  #221 = NameAndType        #43:#220      // MODULE$:Lorg/sireum/package$;
  #222 = Fieldref           #219.#221     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #223 = Utf8               MSZ
  #224 = Utf8               ()Lorg/sireum/$internal/PackageTrait$MSZ$;
  #225 = NameAndType        #223:#224     // MSZ:()Lorg/sireum/$internal/PackageTrait$MSZ$;
  #226 = Methodref          #219.#225     // org/sireum/package$.MSZ:()Lorg/sireum/$internal/PackageTrait$MSZ$;
  #227 = Utf8               $times
  #228 = NameAndType        #227:#202     // $times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #229 = InterfaceMethodref #27.#228      // org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #230 = Utf8               org/sireum/B
  #231 = Class              #230          // org/sireum/B
  #232 = Utf8               F
  #233 = Utf8               ()Z
  #234 = NameAndType        #232:#233     // F:()Z
  #235 = Methodref          #219.#234     // org/sireum/package$.F:()Z
  #236 = NameAndType        #47:#210      // "<init>":(Z)V
  #237 = Methodref          #231.#236     // org/sireum/B."<init>":(Z)V
  #238 = Utf8               create
  #239 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/MS;
  #240 = NameAndType        #238:#239     // create:(Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/MS;
  #241 = Methodref          #12.#240      // org/sireum/$internal/PackageTrait$MSZ$.create:(Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/MS;
  #242 = Utf8               assignMut
  #243 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #244 = NameAndType        #242:#243     // assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #245 = Methodref          #214.#244     // org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #246 = Utf8               org/sireum/MS
  #247 = Class              #246          // org/sireum/MS
  #248 = Utf8               org/sireum/conversions/String$
  #249 = Class              #248          // org/sireum/conversions/String$
  #250 = Utf8               Lorg/sireum/conversions/String$;
  #251 = NameAndType        #43:#250      // MODULE$:Lorg/sireum/conversions/String$;
  #252 = Fieldref           #249.#251     // org/sireum/conversions/String$.MODULE$:Lorg/sireum/conversions/String$;
  #253 = Utf8               toU8is
  #254 = NameAndType        #253:#176     // toU8is:(Ljava/lang/String;)Lorg/sireum/IS;
  #255 = Methodref          #249.#254     // org/sireum/conversions/String$.toU8is:(Ljava/lang/String;)Lorg/sireum/IS;
  #256 = Utf8               Lorg/sireum/ops/Bits$Context$;
  #257 = NameAndType        #43:#256      // MODULE$:Lorg/sireum/ops/Bits$Context$;
  #258 = Fieldref           #38.#257      // org/sireum/ops/Bits$Context$.MODULE$:Lorg/sireum/ops/Bits$Context$;
  #259 = Utf8               ()Lorg/sireum/ops/Bits$Context;
  #260 = NameAndType        #238:#259     // create:()Lorg/sireum/ops/Bits$Context;
  #261 = Methodref          #38.#260      // org/sireum/ops/Bits$Context$.create:()Lorg/sireum/ops/Bits$Context;
  #262 = Utf8               $less
  #263 = Utf8               (Lorg/sireum/Z;)Z
  #264 = NameAndType        #262:#263     // $less:(Lorg/sireum/Z;)Z
  #265 = InterfaceMethodref #27.#264      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #266 = Utf8               org/sireum/IS
  #267 = Class              #266          // org/sireum/IS
  #268 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #269 = NameAndType        #98:#268      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #270 = Methodref          #267.#269     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #271 = Utf8               value
  #272 = Utf8               ()B
  #273 = NameAndType        #271:#272     // value:()B
  #274 = Methodref          #19.#273      // org/sireum/U8.value:()B
  #275 = NameAndType        #52:#53       // hex2u8:(B)Lorg/sireum/Option;
  #276 = Methodref          #2.#275       // org/sireum/ops/Bits$.hex2u8:(B)Lorg/sireum/Option;
  #277 = Utf8               $plus
  #278 = NameAndType        #277:#202     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #279 = InterfaceMethodref #27.#278      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #280 = Utf8               scala/Tuple2
  #281 = Class              #280          // scala/Tuple2
  #282 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #283 = NameAndType        #47:#282      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #284 = Methodref          #281.#283     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #285 = Utf8               _1
  #286 = NameAndType        #285:#109     // _1:()Ljava/lang/Object;
  #287 = Methodref          #281.#286     // scala/Tuple2._1:()Ljava/lang/Object;
  #288 = Utf8               org/sireum/Option
  #289 = Class              #288          // org/sireum/Option
  #290 = Utf8               _2
  #291 = NameAndType        #290:#109     // _2:()Ljava/lang/Object;
  #292 = Methodref          #281.#291     // scala/Tuple2._2:()Ljava/lang/Object;
  #293 = Utf8               org/sireum/Some
  #294 = Class              #293          // org/sireum/Some
  #295 = Utf8               unapply
  #296 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #297 = NameAndType        #295:#296     // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #298 = Methodref          #136.#297     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #299 = Utf8               scala/Some
  #300 = Class              #299          // scala/Some
  #301 = Utf8               isEmpty
  #302 = NameAndType        #301:#233     // isEmpty:()Z
  #303 = Methodref          #300.#302     // scala/Some.isEmpty:()Z
  #304 = Utf8               get
  #305 = NameAndType        #304:#109     // get:()Ljava/lang/Object;
  #306 = Methodref          #300.#305     // scala/Some.get:()Ljava/lang/Object;
  #307 = Utf8               4
  #308 = String             #307          // 4
  #309 = Utf8               $less$less
  #310 = NameAndType        #309:#141     // $less$less:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #311 = Methodref          #19.#310      // org/sireum/U8.$less$less:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #312 = Utf8               $bar
  #313 = NameAndType        #312:#141     // $bar:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #314 = InterfaceMethodref #30.#313      // org/sireum/Z$BV$Byte.$bar:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
  #315 = Utf8               Lorg/sireum/ops/Bits$Writer$;
  #316 = NameAndType        #43:#315      // MODULE$:Lorg/sireum/ops/Bits$Writer$;
  #317 = Fieldref           #41.#316      // org/sireum/ops/Bits$Writer$.MODULE$:Lorg/sireum/ops/Bits$Writer$;
  #318 = Utf8               bleU8
  #319 = Utf8               (Lorg/sireum/MS;Lorg/sireum/ops/Bits$Context;B)V
  #320 = NameAndType        #318:#319     // bleU8:(Lorg/sireum/MS;Lorg/sireum/ops/Bits$Context;B)V
  #321 = Methodref          #41.#320      // org/sireum/ops/Bits$Writer$.bleU8:(Lorg/sireum/MS;Lorg/sireum/ops/Bits$Context;B)V
  #322 = Utf8               scala/runtime/BoxedUnit
  #323 = Class              #322          // scala/runtime/BoxedUnit
  #324 = Utf8               UNIT
  #325 = Utf8               Lscala/runtime/BoxedUnit;
  #326 = NameAndType        #324:#325     // UNIT:Lscala/runtime/BoxedUnit;
  #327 = Fieldref           #323.#326     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #328 = Utf8               org/sireum/String
  #329 = Class              #328          // org/sireum/String
  #330 = Utf8               java/lang/StringBuilder
  #331 = Class              #330          // java/lang/StringBuilder
  #332 = Integer            36
  #333 = Utf8               (I)V
  #334 = NameAndType        #47:#333      // "<init>":(I)V
  #335 = Methodref          #331.#334     // java/lang/StringBuilder."<init>":(I)V
  #336 = Utf8               Invalid hex input string at offset:
  #337 = String             #336          // Invalid hex input string at offset:
  #338 = Utf8               append
  #339 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #340 = NameAndType        #338:#339     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #341 = Methodref          #331.#340     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #342 = InterfaceMethodref #289.#302     // org/sireum/Option.isEmpty:()Z
  #343 = NameAndType        #140:#202     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #344 = InterfaceMethodref #27.#343      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #345 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #346 = NameAndType        #338:#345     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #347 = Methodref          #331.#346     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #348 = Utf8               toString
  #349 = Utf8               ()Ljava/lang/String;
  #350 = NameAndType        #348:#349     // toString:()Ljava/lang/String;
  #351 = Methodref          #331.#350     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #352 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #353 = NameAndType        #98:#352      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #354 = Methodref          #185.#353     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #355 = Utf8               (Ljava/lang/String;)V
  #356 = NameAndType        #47:#355      // "<init>":(Ljava/lang/String;)V
  #357 = Methodref          #329.#356     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #358 = Utf8               halt
  #359 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #360 = NameAndType        #358:#359     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #361 = Methodref          #219.#360     // org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #362 = Utf8               scala/MatchError
  #363 = Class              #362          // scala/MatchError
  #364 = Utf8               (Ljava/lang/Object;)V
  #365 = NameAndType        #47:#364      // "<init>":(Ljava/lang/Object;)V
  #366 = Methodref          #363.#365     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #367 = Utf8               errorCode
  #368 = Utf8               ()Lorg/sireum/Z;
  #369 = NameAndType        #367:#368     // errorCode:()Lorg/sireum/Z;
  #370 = Methodref          #33.#369      // org/sireum/ops/Bits$Context.errorCode:()Lorg/sireum/Z;
  #371 = Utf8               resultMS
  #372 = Utf8               (Lorg/sireum/MS;Lorg/sireum/ops/Bits$Context;)Lorg/sireum/MS;
  #373 = NameAndType        #371:#372     // resultMS:(Lorg/sireum/MS;Lorg/sireum/ops/Bits$Context;)Lorg/sireum/MS;
  #374 = Methodref          #41.#373      // org/sireum/ops/Bits$Writer$.resultMS:(Lorg/sireum/MS;Lorg/sireum/ops/Bits$Context;)Lorg/sireum/MS;
  #375 = Utf8               toIS
  #376 = Utf8               ()Lorg/sireum/IS;
  #377 = NameAndType        #375:#376     // toIS:()Lorg/sireum/IS;
  #378 = Methodref          #247.#377     // org/sireum/MS.toIS:()Lorg/sireum/IS;
  #379 = Utf8               b
  #380 = Utf8               b2
  #381 = Utf8               b1
  #382 = Utf8               b1Opt
  #383 = Utf8               Lorg/sireum/Option;
  #384 = Utf8               b2Opt
  #385 = Utf8               ms
  #386 = Utf8               Lorg/sireum/MS;
  #387 = Utf8               i
  #388 = Utf8               Lorg/sireum/Z;
  #389 = Utf8               sz
  #390 = Utf8               u8s
  #391 = Utf8               Lorg/sireum/IS;
  #392 = Utf8               ctx
  #393 = Utf8               Lorg/sireum/ops/Bits$Context;
  #394 = Utf8               Ljava/lang/String;
  #395 = Utf8               $anonfun$hex2u8$1
  #396 = Utf8               (B)Z
  #397 = Utf8               n$1
  #398 = Utf8               57
  #399 = String             #398          // 57
  #400 = Utf8               $anonfun$hex2u8$2
  #401 = Utf8               70
  #402 = String             #401          // 70
  #403 = Utf8               $anonfun$hex2u8$3
  #404 = Utf8               102
  #405 = String             #404          // 102
  #406 = Methodref          #4.#48        // java/lang/Object."<init>":()V
  #407 = NameAndType        #395:#396     // $anonfun$hex2u8$1:(B)Z
  #408 = Methodref          #2.#407       // org/sireum/ops/Bits$.$anonfun$hex2u8$1:(B)Z
  #409 = NameAndType        #400:#396     // $anonfun$hex2u8$2:(B)Z
  #410 = Methodref          #2.#409       // org/sireum/ops/Bits$.$anonfun$hex2u8$2:(B)Z
  #411 = NameAndType        #403:#396     // $anonfun$hex2u8$3:(B)Z
  #412 = Methodref          #2.#411       // org/sireum/ops/Bits$.$anonfun$hex2u8$3:(B)Z
  #413 = Utf8               $deserializeLambda$
  #414 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #415 = Utf8               scala/runtime/LambdaDeserialize
  #416 = Class              #415          // scala/runtime/LambdaDeserialize
  #417 = Utf8               bootstrap
  #418 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #419 = NameAndType        #417:#418     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #420 = Methodref          #416.#419     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #421 = MethodHandle       6:#420        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #422 = Utf8               lambdaDeserialize
  #423 = NameAndType        #422:#414     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #424 = InvokeDynamic      #3:#423       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #425 = Utf8               Code
  #426 = Utf8               LineNumberTable
  #427 = Utf8               StackMapTable
  #428 = Utf8               LocalVariableTable
  #429 = Utf8               Signature
  #430 = Utf8               MethodParameters
  #431 = Utf8               InnerClasses
  #432 = Utf8               SourceFile
  #433 = Utf8               BootstrapMethods
  #434 = Utf8               ScalaInlineInfo
  #435 = Utf8               Scala
{
  public static final org.sireum.ops.Bits$ MODULE$;
    descriptor: Lorg/sireum/ops/Bits$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/ops/Bits$
         3: dup
         4: invokespecial #49                 // Method "<init>":()V
         7: putstatic     #51                 // Field MODULE$:Lorg/sireum/ops/Bits$;
        10: return
      LineNumberTable:
        line 96: 0

  public org.sireum.Option<org.sireum.U8> hex2u8(byte);
    descriptor: (B)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: getstatic     #60                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #60                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: new           #19                 // class org/sireum/U8
         9: dup
        10: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        13: new           #67                 // class scala/StringContext
        16: dup
        17: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        20: iconst_1
        21: anewarray     #74                 // class java/lang/String
        24: dup
        25: iconst_0
        26: ldc           #76                 // String 48
        28: aastore
        29: checkcast     #78                 // class "[Ljava/lang/Object;"
        32: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        35: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        38: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        41: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        44: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        47: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        50: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
        53: new           #19                 // class org/sireum/U8
        56: dup
        57: iload_1
        58: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
        61: invokevirtual #108                // Method org/sireum/U8.$less$eq:(Lorg/sireum/Z$BV$Byte;)Z
        64: iload_1
        65: invokedynamic #126,  0            // InvokeDynamic #0:apply:(B)Lscala/Function0;
        70: invokevirtual #130                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
        73: invokevirtual #134                // Method org/sireum/B$.$4B:(Z)Z
        76: ifeq          144
        79: getstatic     #139                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        82: new           #19                 // class org/sireum/U8
        85: dup
        86: iload_1
        87: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
        90: new           #19                 // class org/sireum/U8
        93: dup
        94: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        97: new           #67                 // class scala/StringContext
       100: dup
       101: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       104: iconst_1
       105: anewarray     #74                 // class java/lang/String
       108: dup
       109: iconst_0
       110: ldc           #76                 // String 48
       112: aastore
       113: checkcast     #78                 // class "[Ljava/lang/Object;"
       116: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       119: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       122: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       125: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       128: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       131: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       134: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       137: invokevirtual #143                // Method org/sireum/U8.$minus:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
       140: invokevirtual #146                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
       143: areturn
       144: getstatic     #60                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       147: getstatic     #60                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       150: new           #19                 // class org/sireum/U8
       153: dup
       154: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       157: new           #67                 // class scala/StringContext
       160: dup
       161: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       164: iconst_1
       165: anewarray     #74                 // class java/lang/String
       168: dup
       169: iconst_0
       170: ldc           #148                // String 65
       172: aastore
       173: checkcast     #78                 // class "[Ljava/lang/Object;"
       176: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       179: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       182: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       185: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       188: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       191: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       194: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       197: new           #19                 // class org/sireum/U8
       200: dup
       201: iload_1
       202: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       205: invokevirtual #108                // Method org/sireum/U8.$less$eq:(Lorg/sireum/Z$BV$Byte;)Z
       208: iload_1
       209: invokedynamic #153,  0            // InvokeDynamic #1:apply:(B)Lscala/Function0;
       214: invokevirtual #130                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       217: invokevirtual #134                // Method org/sireum/B$.$4B:(Z)Z
       220: ifeq          288
       223: getstatic     #139                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       226: new           #19                 // class org/sireum/U8
       229: dup
       230: iload_1
       231: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       234: new           #19                 // class org/sireum/U8
       237: dup
       238: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       241: new           #67                 // class scala/StringContext
       244: dup
       245: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       248: iconst_1
       249: anewarray     #74                 // class java/lang/String
       252: dup
       253: iconst_0
       254: ldc           #155                // String 55
       256: aastore
       257: checkcast     #78                 // class "[Ljava/lang/Object;"
       260: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       263: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       266: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       269: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       272: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       275: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       278: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       281: invokevirtual #143                // Method org/sireum/U8.$minus:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
       284: invokevirtual #146                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
       287: areturn
       288: getstatic     #60                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       291: getstatic     #60                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       294: new           #19                 // class org/sireum/U8
       297: dup
       298: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       301: new           #67                 // class scala/StringContext
       304: dup
       305: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       308: iconst_1
       309: anewarray     #74                 // class java/lang/String
       312: dup
       313: iconst_0
       314: ldc           #157                // String 97
       316: aastore
       317: checkcast     #78                 // class "[Ljava/lang/Object;"
       320: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       323: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       326: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       329: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       332: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       335: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       338: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       341: new           #19                 // class org/sireum/U8
       344: dup
       345: iload_1
       346: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       349: invokevirtual #108                // Method org/sireum/U8.$less$eq:(Lorg/sireum/Z$BV$Byte;)Z
       352: iload_1
       353: invokedynamic #162,  0            // InvokeDynamic #2:apply:(B)Lscala/Function0;
       358: invokevirtual #130                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       361: invokevirtual #134                // Method org/sireum/B$.$4B:(Z)Z
       364: ifeq          432
       367: getstatic     #139                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       370: new           #19                 // class org/sireum/U8
       373: dup
       374: iload_1
       375: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       378: new           #19                 // class org/sireum/U8
       381: dup
       382: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       385: new           #67                 // class scala/StringContext
       388: dup
       389: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       392: iconst_1
       393: anewarray     #74                 // class java/lang/String
       396: dup
       397: iconst_0
       398: ldc           #164                // String 87
       400: aastore
       401: checkcast     #78                 // class "[Ljava/lang/Object;"
       404: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       407: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       410: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       413: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       416: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       419: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       422: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       425: invokevirtual #143                // Method org/sireum/U8.$minus:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
       428: invokevirtual #146                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
       431: areturn
       432: getstatic     #169                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
       435: invokevirtual #172                // Method org/sireum/None$.apply:()Lorg/sireum/None;
       438: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 251 /* same_frame_extended */
          offset_delta = 144
        frame_type = 251 /* same_frame_extended */
          offset_delta = 143
        frame_type = 251 /* same_frame_extended */
          offset_delta = 143
      LineNumberTable:
        line 6149: 0
        line 6150: 79
        line 6152: 144
        line 6153: 223
        line 6155: 288
        line 6156: 367
        line 6158: 432
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     439     0  this   Lorg/sireum/ops/Bits$;
            0     439     1     n   B
    Signature: #54                          // (B)Lorg/sireum/Option<Lorg/sireum/U8;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.IS<org.sireum.Z, org.sireum.B> fromHexString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=22, args_size=2
         0: getstatic     #183                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: getstatic     #188                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         6: aload_1
         7: invokevirtual #192                // Method org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
        10: getstatic     #197                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        13: iconst_2
        14: invokevirtual #200                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        17: invokeinterface #204,  2          // InterfaceMethod org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
        22: getstatic     #197                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        25: iconst_0
        26: invokevirtual #200                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        29: astore_3
        30: dup
        31: ifnonnull     42
        34: pop
        35: aload_3
        36: ifnull        49
        39: goto          53
        42: aload_3
        43: invokevirtual #208                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        46: ifeq          53
        49: iconst_1
        50: goto          54
        53: iconst_0
        54: invokevirtual #212                // Method scala/Predef$.assert:(Z)V
        57: getstatic     #217                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        60: getstatic     #222                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        63: invokevirtual #226                // Method org/sireum/package$.MSZ:()Lorg/sireum/$internal/PackageTrait$MSZ$;
        66: getstatic     #188                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        69: aload_1
        70: invokevirtual #192                // Method org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
        73: getstatic     #197                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        76: iconst_4
        77: invokevirtual #200                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        80: invokeinterface #229,  2          // InterfaceMethod org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
        85: new           #231                // class org/sireum/B
        88: dup
        89: getstatic     #222                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        92: invokevirtual #235                // Method org/sireum/package$.F:()Z
        95: invokespecial #237                // Method org/sireum/B."<init>":(Z)V
        98: invokevirtual #241                // Method org/sireum/$internal/PackageTrait$MSZ$.create:(Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/MS;
       101: invokevirtual #245                // Method org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
       104: checkcast     #247                // class org/sireum/MS
       107: astore        4
       109: getstatic     #197                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       112: iconst_0
       113: invokevirtual #200                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       116: astore        5
       118: getstatic     #188                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       121: aload_1
       122: invokevirtual #192                // Method org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
       125: astore        6
       127: getstatic     #252                // Field org/sireum/conversions/String$.MODULE$:Lorg/sireum/conversions/String$;
       130: aload_1
       131: invokevirtual #255                // Method org/sireum/conversions/String$.toU8is:(Ljava/lang/String;)Lorg/sireum/IS;
       134: astore        7
       136: getstatic     #217                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       139: getstatic     #258                // Field org/sireum/ops/Bits$Context$.MODULE$:Lorg/sireum/ops/Bits$Context$;
       142: invokevirtual #261                // Method org/sireum/ops/Bits$Context$.create:()Lorg/sireum/ops/Bits$Context;
       145: invokevirtual #245                // Method org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
       148: checkcast     #33                 // class org/sireum/ops/Bits$Context
       151: astore        8
       153: getstatic     #60                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       156: aload         5
       158: aload         6
       160: invokeinterface #265,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       165: invokevirtual #134                // Method org/sireum/B$.$4B:(Z)Z
       168: ifeq          590
       171: aload_0
       172: aload         7
       174: aload         5
       176: invokevirtual #270                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       179: checkcast     #19                 // class org/sireum/U8
       182: invokevirtual #274                // Method org/sireum/U8.value:()B
       185: invokevirtual #276                // Method hex2u8:(B)Lorg/sireum/Option;
       188: astore        9
       190: aload         5
       192: getstatic     #197                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       195: iconst_1
       196: invokevirtual #200                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       199: invokeinterface #279,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       204: astore        5
       206: aload_0
       207: aload         7
       209: aload         5
       211: invokevirtual #270                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       214: checkcast     #19                 // class org/sireum/U8
       217: invokevirtual #274                // Method org/sireum/U8.value:()B
       220: invokevirtual #276                // Method hex2u8:(B)Lorg/sireum/Option;
       223: astore        10
       225: aload         5
       227: getstatic     #197                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       230: iconst_1
       231: invokevirtual #200                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       234: invokeinterface #279,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       239: astore        5
       241: new           #281                // class scala/Tuple2
       244: dup
       245: aload         9
       247: aload         10
       249: invokespecial #284                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       252: astore        11
       254: aload         11
       256: ifnull        484
       259: aload         11
       261: invokevirtual #287                // Method scala/Tuple2._1:()Ljava/lang/Object;
       264: checkcast     #289                // class org/sireum/Option
       267: astore        12
       269: aload         11
       271: invokevirtual #292                // Method scala/Tuple2._2:()Ljava/lang/Object;
       274: checkcast     #289                // class org/sireum/Option
       277: astore        13
       279: aload         12
       281: instanceof    #294                // class org/sireum/Some
       284: ifeq          481
       287: aload         12
       289: checkcast     #294                // class org/sireum/Some
       292: astore        14
       294: getstatic     #139                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       297: aload         14
       299: invokevirtual #298                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       302: astore        15
       304: aload         15
       306: invokevirtual #303                // Method scala/Some.isEmpty:()Z
       309: ifne          478
       312: aload         15
       314: invokevirtual #306                // Method scala/Some.get:()Ljava/lang/Object;
       317: checkcast     #19                 // class org/sireum/U8
       320: invokevirtual #274                // Method org/sireum/U8.value:()B
       323: istore        16
       325: aload         13
       327: instanceof    #294                // class org/sireum/Some
       330: ifeq          475
       333: aload         13
       335: checkcast     #294                // class org/sireum/Some
       338: astore        17
       340: getstatic     #139                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       343: aload         17
       345: invokevirtual #298                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       348: astore        18
       350: aload         18
       352: invokevirtual #303                // Method scala/Some.isEmpty:()Z
       355: ifne          472
       358: aload         18
       360: invokevirtual #306                // Method scala/Some.get:()Ljava/lang/Object;
       363: checkcast     #19                 // class org/sireum/U8
       366: invokevirtual #274                // Method org/sireum/U8.value:()B
       369: istore        19
       371: new           #19                 // class org/sireum/U8
       374: dup
       375: iload         16
       377: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       380: new           #19                 // class org/sireum/U8
       383: dup
       384: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
       387: new           #67                 // class scala/StringContext
       390: dup
       391: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       394: iconst_1
       395: anewarray     #74                 // class java/lang/String
       398: dup
       399: iconst_0
       400: ldc_w         #308                // String 4
       403: aastore
       404: checkcast     #78                 // class "[Ljava/lang/Object;"
       407: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       410: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
       413: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
       416: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
       419: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       422: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
       425: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       428: invokevirtual #311                // Method org/sireum/U8.$less$less:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
       431: new           #19                 // class org/sireum/U8
       434: dup
       435: iload         19
       437: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
       440: invokeinterface #314,  2          // InterfaceMethod org/sireum/Z$BV$Byte.$bar:(Lorg/sireum/Z$BV$Byte;)Lorg/sireum/Z$BV$Byte;
       445: checkcast     #19                 // class org/sireum/U8
       448: invokevirtual #274                // Method org/sireum/U8.value:()B
       451: istore        20
       453: getstatic     #317                // Field org/sireum/ops/Bits$Writer$.MODULE$:Lorg/sireum/ops/Bits$Writer$;
       456: aload         4
       458: aload         8
       460: iload         20
       462: invokevirtual #321                // Method org/sireum/ops/Bits$Writer$.bleU8:(Lorg/sireum/MS;Lorg/sireum/ops/Bits$Context;B)V
       465: getstatic     #327                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       468: astore_2
       469: goto          587
       472: goto          487
       475: goto          487
       478: goto          487
       481: goto          487
       484: goto          487
       487: aload         11
       489: ifnull        574
       492: getstatic     #222                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       495: new           #329                // class org/sireum/String
       498: dup
       499: getstatic     #188                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       502: new           #331                // class java/lang/StringBuilder
       505: dup
       506: ldc_w         #332                // int 36
       509: invokespecial #335                // Method java/lang/StringBuilder."<init>":(I)V
       512: ldc_w         #337                // String Invalid hex input string at offset:
       515: invokevirtual #341                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       518: aload         5
       520: getstatic     #60                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       523: aload         9
       525: invokeinterface #342,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
       530: invokevirtual #134                // Method org/sireum/B$.$4B:(Z)Z
       533: ifeq          546
       536: getstatic     #197                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       539: iconst_2
       540: invokevirtual #200                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       543: goto          553
       546: getstatic     #197                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       549: iconst_1
       550: invokevirtual #200                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       553: invokeinterface #344,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       558: invokevirtual #347                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       561: invokevirtual #351                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       564: invokevirtual #354                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       567: invokespecial #357                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       570: invokevirtual #361                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
       573: athrow
       574: goto          577
       577: new           #363                // class scala/MatchError
       580: dup
       581: aload         11
       583: invokespecial #366                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       586: athrow
       587: goto          153
       590: getstatic     #183                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       593: aload         8
       595: invokevirtual #370                // Method org/sireum/ops/Bits$Context.errorCode:()Lorg/sireum/Z;
       598: getstatic     #197                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       601: iconst_0
       602: invokevirtual #200                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       605: astore        21
       607: dup
       608: ifnonnull     620
       611: pop
       612: aload         21
       614: ifnull        628
       617: goto          632
       620: aload         21
       622: invokevirtual #208                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       625: ifeq          632
       628: iconst_1
       629: goto          633
       632: iconst_0
       633: invokevirtual #212                // Method scala/Predef$.assert:(Z)V
       636: getstatic     #317                // Field org/sireum/ops/Bits$Writer$.MODULE$:Lorg/sireum/ops/Bits$Writer$;
       639: aload         4
       641: aload         8
       643: invokevirtual #374                // Method org/sireum/ops/Bits$Writer$.resultMS:(Lorg/sireum/MS;Lorg/sireum/ops/Bits$Context;)Lorg/sireum/MS;
       646: invokevirtual #378                // Method org/sireum/MS.toIS:()Lorg/sireum/IS;
       649: areturn
      StackMapTable: number_of_entries = 21
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, top, class org/sireum/Z ]
          stack = [ class scala/Predef$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, top, class org/sireum/Z ]
          stack = [ class scala/Predef$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 98
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, top, class org/sireum/Z, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS, class org/sireum/ops/Bits$Context ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 318
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, top, class org/sireum/Z, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS, class org/sireum/ops/Bits$Context, class org/sireum/Option, class org/sireum/Option, class scala/Tuple2, class org/sireum/Option, class org/sireum/Option, class org/sireum/Some, class scala/Some, int, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 58
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, top, class org/sireum/Z, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS, class org/sireum/ops/Bits$Context, class org/sireum/Option, class org/sireum/Option, class scala/Tuple2 ]
          stack = [ class org/sireum/package$, uninitialized 495, uninitialized 495, class org/sireum/String$, class java/lang/StringBuilder, class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, top, class org/sireum/Z, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS, class org/sireum/ops/Bits$Context, class org/sireum/Option, class org/sireum/Option, class scala/Tuple2 ]
          stack = [ class org/sireum/package$, uninitialized 495, uninitialized 495, class org/sireum/String$, class java/lang/StringBuilder, class org/sireum/Z, class org/sireum/Z ]
        frame_type = 20 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, class scala/runtime/BoxedUnit, class org/sireum/Z, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS, class org/sireum/ops/Bits$Context, class org/sireum/Option, class org/sireum/Option, class scala/Tuple2, class org/sireum/Option, class org/sireum/Option, class org/sireum/Some, class scala/Some, int, class org/sireum/Some, class scala/Some, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, top, class org/sireum/Z, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS, class org/sireum/ops/Bits$Context ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, top, class org/sireum/Z, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS, class org/sireum/ops/Bits$Context, top, top, top, top, top, top, top, top, top, top, top, top, class org/sireum/Z ]
          stack = [ class scala/Predef$, class org/sireum/Z ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ops/Bits$, class java/lang/String, top, class org/sireum/Z, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS, class org/sireum/ops/Bits$Context, top, top, top, top, top, top, top, top, top, top, top, top, class org/sireum/Z ]
          stack = [ class scala/Predef$, int ]
      LineNumberTable:
        line 6162: 0
        line 6163: 57
        line 6164: 109
        line 6165: 118
        line 6166: 127
        line 6167: 136
        line 6168: 153
        line 6169: 171
        line 6170: 190
        line 6171: 206
        line 6172: 225
        line 6173: 241
        line 6174: 254
        line 6173: 312
        line 6174: 325
        line 6173: 358
        line 6175: 371
        line 6176: 453
        line 6174: 472
        line 6177: 487
        line 6178: 492
        line 6177: 574
        line 6173: 577
        line 6168: 587
        line 6181: 590
        line 6182: 636
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          453      15    20     b   B
          371     101    19    b2   B
          325     153    16    b1   B
          190     397     9 b1Opt   Lorg/sireum/Option;
          225     362    10 b2Opt   Lorg/sireum/Option;
          109     541     4    ms   Lorg/sireum/MS;
          118     532     5     i   Lorg/sireum/Z;
          127     523     6    sz   Lorg/sireum/Z;
          136     514     7   u8s   Lorg/sireum/IS;
          153     497     8   ctx   Lorg/sireum/ops/Bits$Context;
            0     650     0  this   Lorg/sireum/ops/Bits$;
            0     650     1     s   Ljava/lang/String;
    Signature: #177                         // (Ljava/lang/String;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/B;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public static final boolean $anonfun$hex2u8$1(byte);
    descriptor: (B)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=11, locals=1, args_size=1
         0: new           #19                 // class org/sireum/U8
         3: dup
         4: iload_0
         5: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
         8: new           #19                 // class org/sireum/U8
        11: dup
        12: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        15: new           #67                 // class scala/StringContext
        18: dup
        19: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        22: iconst_1
        23: anewarray     #74                 // class java/lang/String
        26: dup
        27: iconst_0
        28: ldc_w         #399                // String 57
        31: aastore
        32: checkcast     #78                 // class "[Ljava/lang/Object;"
        35: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        38: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        41: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        44: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        47: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        50: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        53: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
        56: invokevirtual #108                // Method org/sireum/U8.$less$eq:(Lorg/sireum/Z$BV$Byte;)Z
        59: ireturn
      LineNumberTable:
        line 6149: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0   n$1   B
    MethodParameters:
      Name                           Flags
      n$1                            final

  public static final boolean $anonfun$hex2u8$2(byte);
    descriptor: (B)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=11, locals=1, args_size=1
         0: new           #19                 // class org/sireum/U8
         3: dup
         4: iload_0
         5: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
         8: new           #19                 // class org/sireum/U8
        11: dup
        12: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        15: new           #67                 // class scala/StringContext
        18: dup
        19: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        22: iconst_1
        23: anewarray     #74                 // class java/lang/String
        26: dup
        27: iconst_0
        28: ldc_w         #402                // String 70
        31: aastore
        32: checkcast     #78                 // class "[Ljava/lang/Object;"
        35: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        38: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        41: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        44: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        47: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        50: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        53: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
        56: invokevirtual #108                // Method org/sireum/U8.$less$eq:(Lorg/sireum/Z$BV$Byte;)Z
        59: ireturn
      LineNumberTable:
        line 6152: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0   n$1   B
    MethodParameters:
      Name                           Flags
      n$1                            final

  public static final boolean $anonfun$hex2u8$3(byte);
    descriptor: (B)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=11, locals=1, args_size=1
         0: new           #19                 // class org/sireum/U8
         3: dup
         4: iload_0
         5: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
         8: new           #19                 // class org/sireum/U8
        11: dup
        12: getstatic     #65                 // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        15: new           #67                 // class scala/StringContext
        18: dup
        19: getstatic     #72                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        22: iconst_1
        23: anewarray     #74                 // class java/lang/String
        26: dup
        27: iconst_0
        28: ldc_w         #405                // String 102
        31: aastore
        32: checkcast     #78                 // class "[Ljava/lang/Object;"
        35: invokevirtual #82                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        38: invokespecial #85                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        41: invokevirtual #88                 // Method org/sireum/U8$.U8$Slang:(Lscala/StringContext;)Lorg/sireum/U8$U8$Slang;
        44: invokevirtual #92                 // Method org/sireum/U8$U8$Slang.u8:()Lorg/sireum/U8$U8$Slang$u8$;
        47: getstatic     #97                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        50: invokevirtual #101                // Method org/sireum/U8$U8$Slang$u8$.apply:(Lscala/collection/immutable/Seq;)B
        53: invokespecial #104                // Method org/sireum/U8."<init>":(B)V
        56: invokevirtual #108                // Method org/sireum/U8.$less$eq:(Lorg/sireum/Z$BV$Byte;)Z
        59: ireturn
      LineNumberTable:
        line 6155: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0   n$1   B
    MethodParameters:
      Name                           Flags
      n$1                            final

  private org.sireum.ops.Bits$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #406                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/Bits$;

  public static final java.lang.Object $anonfun$hex2u8$1$adapted(byte);
    descriptor: (B)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #231                // class org/sireum/B
         3: dup
         4: iload_0
         5: invokestatic  #408                // Method $anonfun$hex2u8$1:(B)Z
         8: invokespecial #237                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 6149: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   n$1   B
    MethodParameters:
      Name                           Flags
      n$1                            final

  public static final java.lang.Object $anonfun$hex2u8$2$adapted(byte);
    descriptor: (B)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #231                // class org/sireum/B
         3: dup
         4: iload_0
         5: invokestatic  #410                // Method $anonfun$hex2u8$2:(B)Z
         8: invokespecial #237                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 6152: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   n$1   B
    MethodParameters:
      Name                           Flags
      n$1                            final

  public static final java.lang.Object $anonfun$hex2u8$3$adapted(byte);
    descriptor: (B)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #231                // class org/sireum/B
         3: dup
         4: iload_0
         5: invokestatic  #412                // Method $anonfun$hex2u8$3:(B)Z
         8: invokespecial #237                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 6155: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   n$1   B
    MethodParameters:
      Name                           Flags
      n$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #424,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // MSZ$=class org/sireum/$internal/PackageTrait$MSZ$ of class org/sireum/$internal/PackageTrait
  public static #20= #17 of #19;          // U8$Slang=class org/sireum/U8$U8$Slang of class org/sireum/U8
  public #23= #22 of #17;                 // u8$=class org/sireum/U8$U8$Slang$u8$ of class org/sireum/U8$U8$Slang
  public static #28= #25 of #27;          // BV$=class org/sireum/Z$BV$ of class org/sireum/Z
  public static #31= #30 of #25;          // Byte=class org/sireum/Z$BV$Byte of class org/sireum/Z$BV$
  public static final #36= #33 of #35;    // Context=class org/sireum/ops/Bits$Context of class org/sireum/ops/Bits
  public static #39= #38 of #35;          // Context$=class org/sireum/ops/Bits$Context$ of class org/sireum/ops/Bits
  public static #42= #41 of #35;          // Writer$=class org/sireum/ops/Bits$Writer$ of class org/sireum/ops/Bits
SourceFile: "Bits.scala"
BootstrapMethods:
  0: #123 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #110 ()Ljava/lang/Object;
      #115 REF_invokeStatic org/sireum/ops/Bits$.$anonfun$hex2u8$1$adapted:(B)Ljava/lang/Object;
      #110 ()Ljava/lang/Object;
      #116 1
  1: #123 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #110 ()Ljava/lang/Object;
      #152 REF_invokeStatic org/sireum/ops/Bits$.$anonfun$hex2u8$2$adapted:(B)Ljava/lang/Object;
      #110 ()Ljava/lang/Object;
      #116 1
  2: #123 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #110 ()Ljava/lang/Object;
      #161 REF_invokeStatic org/sireum/ops/Bits$.$anonfun$hex2u8$3$adapted:(B)Ljava/lang/Object;
      #110 ()Ljava/lang/Object;
      #116 1
  3: #421 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #115 REF_invokeStatic org/sireum/ops/Bits$.$anonfun$hex2u8$1$adapted:(B)Ljava/lang/Object;
      #152 REF_invokeStatic org/sireum/ops/Bits$.$anonfun$hex2u8$2$adapted:(B)Ljava/lang/Object;
      #161 REF_invokeStatic org/sireum/ops/Bits$.$anonfun$hex2u8$3$adapted:(B)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 01 8B 01 8C 01 00 6F 00 70 01 01 90
   01 8C 01 00 95 00 70 01 01 93 01 8C 01 00 9E 00
   70 01 00 2F 00 2E 01 00 AF 00 B0 01 00 34 00 35
   01
  Scala: length = 0x0 (unknown attribute)

