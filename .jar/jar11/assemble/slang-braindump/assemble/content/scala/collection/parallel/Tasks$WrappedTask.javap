Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/parallel/Tasks$WrappedTask.class
  Last modified May 29, 2022; size 1245 bytes
  SHA-256 checksum 725115990780d9aae5c44776ee9f433f6dfcc94e1d5b202f62b1693c28ee0caa
  Compiled from "Tasks.scala"
public interface scala.collection.parallel.Tasks$WrappedTask<R extends java.lang.Object, Tp extends java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/collection/parallel/Tasks$WrappedTask
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 10, attributes: 5
Constant pool:
   #1 = Utf8               scala/collection/parallel/Tasks$WrappedTask
   #2 = Class              #1             // scala/collection/parallel/Tasks$WrappedTask
   #3 = Utf8               <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               Tasks.scala
   #7 = Utf8               scala/collection/parallel/Tasks
   #8 = Class              #7             // scala/collection/parallel/Tasks
   #9 = Utf8               WrappedTask
  #10 = Utf8               body
  #11 = Utf8               ()Lscala/collection/parallel/Task;
  #12 = Utf8               ()Lscala/collection/parallel/Task<TR;TTp;>;
  #13 = Utf8               split
  #14 = Utf8               ()Lscala/collection/immutable/Seq;
  #15 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/Tasks$WrappedTask<TR;TTp;>;>;
  #16 = Utf8               compute
  #17 = Utf8               ()V
  #18 = Utf8               start
  #19 = Utf8               sync
  #20 = Utf8               tryCancel
  #21 = Utf8               ()Z
  #22 = Utf8               release$
  #23 = Utf8               (Lscala/collection/parallel/Tasks$WrappedTask;)V
  #24 = Utf8               $this
  #25 = Utf8               release
  #26 = NameAndType        #25:#17        // release:()V
  #27 = InterfaceMethodref #2.#26         // scala/collection/parallel/Tasks$WrappedTask.release:()V
  #28 = Utf8               Lscala/collection/parallel/Tasks$WrappedTask;
  #29 = Utf8               this
  #30 = Utf8               scala$collection$parallel$Tasks$WrappedTask$$$outer
  #31 = Utf8               ()Lscala/collection/parallel/Tasks;
  #32 = Utf8               $init$
  #33 = Utf8               Signature
  #34 = Utf8               Code
  #35 = Utf8               LineNumberTable
  #36 = Utf8               LocalVariableTable
  #37 = Utf8               MethodParameters
  #38 = Utf8               InnerClasses
  #39 = Utf8               SourceFile
  #40 = Utf8               ScalaInlineInfo
  #41 = Utf8               Scala
{
  public abstract scala.collection.parallel.Task<R, Tp> body();
    descriptor: ()Lscala/collection/parallel/Task;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #12                          // ()Lscala/collection/parallel/Task<TR;TTp;>;

  public abstract scala.collection.immutable.Seq<scala.collection.parallel.Tasks$WrappedTask<R, Tp>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #15                          // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/Tasks$WrappedTask<TR;TTp;>;>;

  public abstract void compute();
    descriptor: ()V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void start();
    descriptor: ()V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void sync();
    descriptor: ()V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean tryCancel();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public static void release$(scala.collection.parallel.Tasks$WrappedTask);
    descriptor: (Lscala/collection/parallel/Tasks$WrappedTask;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #27                 // InterfaceMethod release:()V
         4: return
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/Tasks$WrappedTask;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void release();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lscala/collection/parallel/Tasks$WrappedTask;

  public abstract scala.collection.parallel.Tasks scala$collection$parallel$Tasks$WrappedTask$$$outer();
    descriptor: ()Lscala/collection/parallel/Tasks;
    flags: (0x1401) ACC_PUBLIC, ACC_ABSTRACT, ACC_SYNTHETIC

  public static void $init$(scala.collection.parallel.Tasks$WrappedTask);
    descriptor: (Lscala/collection/parallel/Tasks$WrappedTask;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/collection/parallel/Tasks$WrappedTask;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public #9= #2 of #8;                    // WrappedTask=class scala/collection/parallel/Tasks$WrappedTask of class scala/collection/parallel/Tasks
Signature: #3                           // <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "Tasks.scala"
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 00 00 0A 00 20 00 17 01 00 0A 00 0B 00 00 10
   00 11 00 00 19 00 11 00 00 16 00 17 01 00 1E 00
   1F 00 00 0D 00 0E 00 00 12 00 11 00 00 13 00 11
   00 00 14 00 15 00
  Scala: length = 0x0 (unknown attribute)

