Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer.class
  Last modified May 29, 2022; size 1717 bytes
  SHA-256 checksum bdead3b8d3e904d989232cf1cb081925cd48110e035611f1f0bdc84a122abbaa
  Compiled from "NumberSerializers.java"
public class com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base<java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #7                          // com/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer
  super_class: #10                        // com/fasterxml/jackson/databind/ser/std/NumberSerializers$Base
  interfaces: 0, fields: 1, methods: 3, attributes: 4
Constant pool:
   #1 = Class              #39            // java/lang/Float
   #2 = Fieldref           #40.#41        // com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
   #3 = String             #42            // number
   #4 = Methodref          #10.#43        // com/fasterxml/jackson/databind/ser/std/NumberSerializers$Base."<init>":(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser$NumberType;Ljava/lang/String;)V
   #5 = Methodref          #1.#44         // java/lang/Float.floatValue:()F
   #6 = Methodref          #45.#46        // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V
   #7 = Class              #48            // com/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer
   #8 = Methodref          #7.#49         // com/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer."<init>":()V
   #9 = Fieldref           #7.#50         // com/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer.instance:Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer;
  #10 = Class              #51            // com/fasterxml/jackson/databind/ser/std/NumberSerializers$Base
  #11 = Utf8               instance
  #12 = Utf8               FloatSerializer
  #13 = Utf8               InnerClasses
  #14 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer;
  #15 = Utf8               <init>
  #16 = Utf8               ()V
  #17 = Utf8               Code
  #18 = Utf8               LineNumberTable
  #19 = Utf8               LocalVariableTable
  #20 = Utf8               this
  #21 = Utf8               serialize
  #22 = Utf8               (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #23 = Utf8               value
  #24 = Utf8               Ljava/lang/Object;
  #25 = Utf8               gen
  #26 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;
  #27 = Utf8               provider
  #28 = Utf8               Lcom/fasterxml/jackson/databind/SerializerProvider;
  #29 = Utf8               Exceptions
  #30 = Class              #52            // java/io/IOException
  #31 = Utf8               <clinit>
  #32 = Utf8               Signature
  #33 = Utf8               Base
  #34 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$Base<Ljava/lang/Object;>;
  #35 = Utf8               SourceFile
  #36 = Utf8               NumberSerializers.java
  #37 = Utf8               RuntimeVisibleAnnotations
  #38 = Utf8               Lcom/fasterxml/jackson/databind/annotation/JacksonStdImpl;
  #39 = Utf8               java/lang/Float
  #40 = Class              #54            // com/fasterxml/jackson/core/JsonParser$NumberType
  #41 = NameAndType        #56:#57        // FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
  #42 = Utf8               number
  #43 = NameAndType        #15:#58        // "<init>":(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser$NumberType;Ljava/lang/String;)V
  #44 = NameAndType        #59:#60        // floatValue:()F
  #45 = Class              #61            // com/fasterxml/jackson/core/JsonGenerator
  #46 = NameAndType        #62:#63        // writeNumber:(F)V
  #47 = Class              #64            // com/fasterxml/jackson/databind/ser/std/NumberSerializers
  #48 = Utf8               com/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer
  #49 = NameAndType        #15:#16        // "<init>":()V
  #50 = NameAndType        #11:#14        // instance:Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer;
  #51 = Utf8               com/fasterxml/jackson/databind/ser/std/NumberSerializers$Base
  #52 = Utf8               java/io/IOException
  #53 = Class              #65            // com/fasterxml/jackson/core/JsonParser
  #54 = Utf8               com/fasterxml/jackson/core/JsonParser$NumberType
  #55 = Utf8               NumberType
  #56 = Utf8               FLOAT
  #57 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$NumberType;
  #58 = Utf8               (Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser$NumberType;Ljava/lang/String;)V
  #59 = Utf8               floatValue
  #60 = Utf8               ()F
  #61 = Utf8               com/fasterxml/jackson/core/JsonGenerator
  #62 = Utf8               writeNumber
  #63 = Utf8               (F)V
  #64 = Utf8               com/fasterxml/jackson/databind/ser/std/NumberSerializers
  #65 = Utf8               com/fasterxml/jackson/core/JsonParser
{
  static final com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance;
    descriptor: Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  public com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: ldc           #1                  // class java/lang/Float
         3: getstatic     #2                  // Field com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
         6: ldc           #3                  // String number
         8: invokespecial #4                  // Method com/fasterxml/jackson/databind/ser/std/NumberSerializers$Base."<init>":(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser$NumberType;Ljava/lang/String;)V
        11: return
      LineNumberTable:
        line 204: 0
        line 205: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer;

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_2
         1: aload_1
         2: checkcast     #1                  // class java/lang/Float
         5: invokevirtual #5                  // Method java/lang/Float.floatValue:()F
         8: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V
        11: return
      LineNumberTable:
        line 210: 0
        line 211: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer;
            0      12     1 value   Ljava/lang/Object;
            0      12     2   gen   Lcom/fasterxml/jackson/core/JsonGenerator;
            0      12     3 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
    Exceptions:
      throws java.io.IOException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #7                  // class com/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer
         3: dup
         4: invokespecial #8                  // Method "<init>":()V
         7: putstatic     #9                  // Field instance:Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer;
        10: return
      LineNumberTable:
        line 201: 0
}
Signature: #34                          // Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$Base<Ljava/lang/Object;>;
SourceFile: "NumberSerializers.java"
RuntimeVisibleAnnotations:
  0: #38()
    com.fasterxml.jackson.databind.annotation.JacksonStdImpl
InnerClasses:
  public static #12= #7 of #47;           // FloatSerializer=class com/fasterxml/jackson/databind/ser/std/NumberSerializers$FloatSerializer of class com/fasterxml/jackson/databind/ser/std/NumberSerializers
  public static abstract #33= #10 of #47; // Base=class com/fasterxml/jackson/databind/ser/std/NumberSerializers$Base of class com/fasterxml/jackson/databind/ser/std/NumberSerializers
  public static final #55= #40 of #53;    // NumberType=class com/fasterxml/jackson/core/JsonParser$NumberType of class com/fasterxml/jackson/core/JsonParser
