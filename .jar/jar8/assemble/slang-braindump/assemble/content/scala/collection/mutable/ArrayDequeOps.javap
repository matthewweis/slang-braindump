Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/mutable/ArrayDequeOps.class
  Last modified May 29, 2022; size 8730 bytes
  SHA-256 checksum 4311c54794796d2f1e6979fe1d3209e6c79fcf4951ed250cdd85318bd0b786a6
  Compiled from "ArrayDeque.scala"
public interface scala.collection.mutable.ArrayDequeOps<A extends java.lang.Object, CC extends java.lang.Object, C extends java.lang.Object> extends scala.collection.StrictOptimizedSeqOps<A, CC, C>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/collection/mutable/ArrayDequeOps
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 25, attributes: 7
Constant pool:
    #1 = Utf8               scala/collection/mutable/ArrayDequeOps
    #2 = Class              #1            // scala/collection/mutable/ArrayDequeOps
    #3 = Utf8               <A:Ljava/lang/Object;CC:Ljava/lang/Object;C:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/StrictOptimizedSeqOps<TA;TCC;TC;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/StrictOptimizedSeqOps
    #7 = Class              #6            // scala/collection/StrictOptimizedSeqOps
    #8 = Utf8               ArrayDeque.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u0005=aa\u0002\b\u0010!\u0003\r\tA\u0006\u0005\u0006k\u0001!\tA\u000e\u0005\u0006u\u00011\tb\u000f\u0005\u0006\u007f\u0001!)\u0005\u0011\u0005\u0006\u0003\u00021\t\u0002\u0011\u0005\u0006\u0005\u00021\tb\u0011\u0005\u0006\u0015\u00021\tb\u0013\u0005\u0006\u001d\u0002!)b\u0014\u0005\b/\u0002\t\n\u0011\"\u0006Y\u0011\u0015\u0019\u0007\u0001\"\u0001e\u0011\u0015\u0019\b\u0001\"\u0011u\u0011\u0015)\b\u0001\"\u0011w\u0011\u0015Q\b\u0001\"\u0011|\u0011\u001d\t9\u0001\u0001C!\u0003\u0013\u0011Q\"\u0011:sCf$U-];f\u001fB\u001c(B\u0001\t\u0012\u0003\u001diW\u000f^1cY\u0016T!AE\n\u0002\u0015\r|G\u000e\\3di&|gNC\u0001\u0015\u0003\u0015\u00198-\u00197b\u0007\u0001)Ba\u0006\u0012-eM\u0019\u0001\u0001\u0007\u000f\u0011\u0005eQR\"A\n\n\u0005m\u0019\"AB!osJ+g\rE\u0003\u001e=\u0001Z\u0013\'D\u0001\u0012\u0013\ty\u0012CA\u000bTiJL7\r^(qi&l\u0017N_3e\'\u0016\fx\n]:\u0011\u0005\u0005\u0012C\u0002\u0001\u0003\u0006G\u0001\u0011\r\u0001\n\u0002\u0002\u0003F\u0011Q\u0005\u000b\t\u00033\u0019J!aJ\n\u0003\u000f9{G\u000f[5oOB\u0011\u0011$K\u0005\u0003UM\u00111!\u00118z!\t\tC\u0006\u0002\u0004.\u0001\u0011\u0015\rA\f\u0002\u0003\u0007\u000e+\"\u0001J\u0018\u0005\u000bAb#\u0019\u0001\u0013\u0003\t}#C%\r\t\u0003CI\"aa\r\u0001\u0005\u0006\u0004!$!A\"\u0012\u0005\u0015B\u0012A\u0002\u0013j]&$H\u0005F\u00018!\tI\u0002(\u0003\u0002:\'\t!QK\\5u\u0003\u0015\t\'O]1z+\u0005a\u0004cA\r>1%\u0011ah\u0005\u0002\u0006\u0003J\u0014\u0018-_\u0001\u0006G2|g.\u001a\u000b\u0002c\u0005)1\u000e\\8oK\u00069qNZ!se\u0006LHcA\u0019E\u000b\")!(\u0002a\u0001y!)a)\u0002a\u0001\u000f\u0006\u0019QM\u001c3\u0011\u0005eA\u0015BA%\u0014\u0005\rIe\u000e^\u0001\fgR\f\'\u000f^0%a2,8\u000f\u0006\u0002H\u0019\")QJ\u0002a\u0001\u000f\u0006\u0019\u0011\u000e\u001a=\u0002\u001bI,\u0017/^5sK\n{WO\u001c3t)\r9\u0004+\u0015\u0005\u0006\u001b\u001e\u0001\ra\u0012\u0005\b%\u001e\u0001\n\u00111\u0001H\u0003\u0015)h\u000e^5mQ\t9A\u000b\u0005\u0002\u001a+&\u0011ak\u0005\u0002\u0007S:d\u0017N\\3\u0002/I,\u0017/^5sK\n{WO\u001c3tI\u0011,g-Y;mi\u0012\u0012T#A-+\u0005\u001dS6&A.\u0011\u0005q\u000bW\"A/\u000b\u0005y{\u0016!C;oG\",7m[3e\u0015\t\u00017#\u0001\u0006b]:|G/\u0019;j_:L!AY/\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-\u0001\td_BL8\u000b\\5dKR{\u0017I\u001d:bsR)Q-\u001c4pc:\u0011\u0011E\u001a\u0005\u0006O&\u0001\r\u0001[\u0001\u0005I\u0016\u001cH\u000f\r\u0002jWB\u0019\u0011$\u00106\u0011\u0005\u0005ZG!\u00037g\u0003\u0003\u0005\tQ!\u0001%\u0005\ryFE\r\u0005\u0006]&\u0001\raR\u0001\tgJ\u001c7\u000b^1si\")\u0001/\u0003a\u0001\u000f\u0006IA-Z:u\'R\f\'\u000f\u001e\u0005\u0006e&\u0001\raR\u0001\t[\u0006D\u0018\n^3ng\u00069!/\u001a<feN,W#A\u0019\u0002\u000bMd\u0017nY3\u0015\u0007E:\u0018\u0010C\u0003y\u0017\u0001\u0007q)\u0001\u0003ge>l\u0007\"\u0002*\f\u0001\u00049\u0015aB:mS\u0012Lgn\u001a\u000b\u0005y~\f\u0019\u0001E\u0002\u001e{FJ!A`\t\u0003\u0011%#XM]1u_JDa!!\u0001\r\u0001\u00049\u0015AB<j]\u0012|w\u000f\u0003\u0004\u0002\u00061\u0001\raR\u0001\u0005gR,\u0007/A\u0004he>,\b/\u001a3\u0015\u0007q\fY\u0001\u0003\u0004\u0002\u000e5\u0001\raR\u0001\u0002]\u0002
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               scala/collection/Iterator$$anon$20
   #18 = Class              #17           // scala/collection/Iterator$$anon$20
   #19 = Utf8               scala/collection/Iterator$$anon$25
   #20 = Class              #19           // scala/collection/Iterator$$anon$25
   #21 = Utf8               array
   #22 = Utf8               ()[Ljava/lang/Object;
   #23 = Utf8               clone$
   #24 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;)Ljava/lang/Object;
   #25 = Utf8               $this
   #26 = Utf8               clone
   #27 = Utf8               ()Ljava/lang/Object;
   #28 = NameAndType        #26:#27       // clone:()Ljava/lang/Object;
   #29 = InterfaceMethodref #2.#28        // scala/collection/mutable/ArrayDequeOps.clone:()Ljava/lang/Object;
   #30 = Utf8               Lscala/collection/mutable/ArrayDequeOps;
   #31 = Utf8               ()TC;
   #32 = Utf8               klone
   #33 = NameAndType        #32:#27       // klone:()Ljava/lang/Object;
   #34 = InterfaceMethodref #2.#33        // scala/collection/mutable/ArrayDequeOps.klone:()Ljava/lang/Object;
   #35 = Utf8               this
   #36 = Utf8               ofArray
   #37 = Utf8               ([Ljava/lang/Object;I)Ljava/lang/Object;
   #38 = Utf8               ([Ljava/lang/Object;I)TC;
   #39 = Utf8               end
   #40 = Utf8               start_$plus
   #41 = Utf8               (I)I
   #42 = Utf8               idx
   #43 = Utf8               requireBounds$
   #44 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;II)V
   #45 = Utf8               until
   #46 = Utf8               requireBounds
   #47 = Utf8               (II)V
   #48 = NameAndType        #46:#47       // requireBounds:(II)V
   #49 = InterfaceMethodref #2.#48        // scala/collection/mutable/ArrayDequeOps.requireBounds:(II)V
   #50 = Utf8               I
   #51 = Utf8               java/lang/IndexOutOfBoundsException
   #52 = Class              #51           // java/lang/IndexOutOfBoundsException
   #53 = Utf8               java/lang/StringBuilder
   #54 = Class              #53           // java/lang/StringBuilder
   #55 = Integer            31
   #56 = Utf8               <init>
   #57 = Utf8               (I)V
   #58 = NameAndType        #56:#57       // "<init>":(I)V
   #59 = Methodref          #54.#58       // java/lang/StringBuilder."<init>":(I)V
   #60 = Utf8               append
   #61 = Utf8               (I)Ljava/lang/StringBuilder;
   #62 = NameAndType        #60:#61       // append:(I)Ljava/lang/StringBuilder;
   #63 = Methodref          #54.#62       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #64 = Utf8                is out of bounds (min 0, max
   #65 = String             #64           //  is out of bounds (min 0, max
   #66 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #67 = NameAndType        #60:#66       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #68 = Methodref          #54.#67       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #69 = Utf8               )
   #70 = String             #69           // )
   #71 = Utf8               toString
   #72 = Utf8               ()Ljava/lang/String;
   #73 = NameAndType        #71:#72       // toString:()Ljava/lang/String;
   #74 = Methodref          #54.#73       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #75 = Utf8               (Ljava/lang/String;)V
   #76 = NameAndType        #56:#75       // "<init>":(Ljava/lang/String;)V
   #77 = Methodref          #52.#76       // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   #78 = Utf8               requireBounds$default$2$
   #79 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;)I
   #80 = Utf8               requireBounds$default$2
   #81 = Utf8               ()I
   #82 = NameAndType        #80:#81       // requireBounds$default$2:()I
   #83 = InterfaceMethodref #2.#82        // scala/collection/mutable/ArrayDequeOps.requireBounds$default$2:()I
   #84 = Utf8               length
   #85 = NameAndType        #84:#81       // length:()I
   #86 = InterfaceMethodref #2.#85        // scala/collection/mutable/ArrayDequeOps.length:()I
   #87 = Utf8               copySliceToArray$
   #88 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;ILjava/lang/Object;II)Ljava/lang/Object;
   #89 = Utf8               srcStart
   #90 = Utf8               dest
   #91 = Utf8               destStart
   #92 = Utf8               maxItems
   #93 = Utf8               copySliceToArray
   #94 = Utf8               (ILjava/lang/Object;II)Ljava/lang/Object;
   #95 = NameAndType        #93:#94       // copySliceToArray:(ILjava/lang/Object;II)Ljava/lang/Object;
   #96 = InterfaceMethodref #2.#95        // scala/collection/mutable/ArrayDequeOps.copySliceToArray:(ILjava/lang/Object;II)Ljava/lang/Object;
   #97 = Utf8               Ljava/lang/Object;
   #98 = Utf8               java/lang/reflect/Array
   #99 = Class              #98           // java/lang/reflect/Array
  #100 = Utf8               getLength
  #101 = Utf8               (Ljava/lang/Object;)I
  #102 = NameAndType        #100:#101     // getLength:(Ljava/lang/Object;)I
  #103 = Methodref          #99.#102      // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
  #104 = Utf8               java/lang/Math
  #105 = Class              #104          // java/lang/Math
  #106 = Utf8               min
  #107 = Utf8               (II)I
  #108 = NameAndType        #106:#107     // min:(II)I
  #109 = Methodref          #105.#108     // java/lang/Math.min:(II)I
  #110 = NameAndType        #40:#41       // start_$plus:(I)I
  #111 = InterfaceMethodref #2.#110       // scala/collection/mutable/ArrayDequeOps.start_$plus:(I)I
  #112 = NameAndType        #21:#22       // array:()[Ljava/lang/Object;
  #113 = InterfaceMethodref #2.#112       // scala/collection/mutable/ArrayDequeOps.array:()[Ljava/lang/Object;
  #114 = Utf8               scala/Array$
  #115 = Class              #114          // scala/Array$
  #116 = Utf8               MODULE$
  #117 = Utf8               Lscala/Array$;
  #118 = NameAndType        #116:#117     // MODULE$:Lscala/Array$;
  #119 = Fieldref           #115.#118     // scala/Array$.MODULE$:Lscala/Array$;
  #120 = Utf8               copy
  #121 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
  #122 = NameAndType        #120:#121     // copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #123 = Methodref          #115.#122     // scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #124 = Utf8               startIdx
  #125 = Utf8               block1
  #126 = Utf8               block2
  #127 = Utf8               toCopy
  #128 = Utf8               requireBounds_until
  #129 = Utf8               reverse$
  #130 = Utf8               reverse
  #131 = NameAndType        #130:#27      // reverse:()Ljava/lang/Object;
  #132 = InterfaceMethodref #2.#131       // scala/collection/mutable/ArrayDequeOps.reverse:()Ljava/lang/Object;
  #133 = Utf8               scala/collection/mutable/ArrayDeque$
  #134 = Class              #133          // scala/collection/mutable/ArrayDeque$
  #135 = Utf8               Lscala/collection/mutable/ArrayDeque$;
  #136 = NameAndType        #116:#135     // MODULE$:Lscala/collection/mutable/ArrayDeque$;
  #137 = Fieldref           #134.#136     // scala/collection/mutable/ArrayDeque$.MODULE$:Lscala/collection/mutable/ArrayDeque$;
  #138 = Utf8               alloc
  #139 = Utf8               (I)[Ljava/lang/Object;
  #140 = NameAndType        #138:#139     // alloc:(I)[Ljava/lang/Object;
  #141 = Methodref          #134.#140     // scala/collection/mutable/ArrayDeque$.alloc:(I)[Ljava/lang/Object;
  #142 = Utf8               apply
  #143 = Utf8               (I)Ljava/lang/Object;
  #144 = NameAndType        #142:#143     // apply:(I)Ljava/lang/Object;
  #145 = InterfaceMethodref #2.#144       // scala/collection/mutable/ArrayDequeOps.apply:(I)Ljava/lang/Object;
  #146 = NameAndType        #36:#37       // ofArray:([Ljava/lang/Object;I)Ljava/lang/Object;
  #147 = InterfaceMethodref #2.#146       // scala/collection/mutable/ArrayDequeOps.ofArray:([Ljava/lang/Object;I)Ljava/lang/Object;
  #148 = Utf8               n
  #149 = Utf8               arr
  #150 = Utf8               [Ljava/lang/Object;
  #151 = Utf8               i
  #152 = Class              #150          // "[Ljava/lang/Object;"
  #153 = Utf8               slice$
  #154 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;II)Ljava/lang/Object;
  #155 = Utf8               from
  #156 = Utf8               slice
  #157 = Utf8               (II)Ljava/lang/Object;
  #158 = NameAndType        #156:#157     // slice:(II)Ljava/lang/Object;
  #159 = InterfaceMethodref #2.#158       // scala/collection/mutable/ArrayDequeOps.slice:(II)Ljava/lang/Object;
  #160 = Utf8               (II)TC;
  #161 = Utf8               max
  #162 = NameAndType        #161:#107     // max:(II)I
  #163 = Methodref          #105.#162     // java/lang/Math.max:(II)I
  #164 = Utf8               empty
  #165 = NameAndType        #164:#27      // empty:()Ljava/lang/Object;
  #166 = InterfaceMethodref #2.#165       // scala/collection/mutable/ArrayDequeOps.empty:()Ljava/lang/Object;
  #167 = Utf8               array2
  #168 = Utf8               left
  #169 = Utf8               len
  #170 = Utf8               sliding$
  #171 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;II)Lscala/collection/Iterator;
  #172 = Utf8               window
  #173 = Utf8               step
  #174 = Utf8               sliding
  #175 = Utf8               (II)Lscala/collection/Iterator;
  #176 = NameAndType        #174:#175     // sliding:(II)Lscala/collection/Iterator;
  #177 = InterfaceMethodref #2.#176       // scala/collection/mutable/ArrayDequeOps.sliding:(II)Lscala/collection/Iterator;
  #178 = Utf8               (II)Lscala/collection/Iterator<TC;>;
  #179 = Utf8               java/lang/IllegalArgumentException
  #180 = Class              #179          // java/lang/IllegalArgumentException
  #181 = Integer            20
  #182 = Utf8               requirement failed:
  #183 = String             #182          // requirement failed:
  #184 = Utf8               $anonfun$sliding$1
  #185 = Utf8               (II)Ljava/lang/String;
  #186 = NameAndType        #184:#185     // $anonfun$sliding$1:(II)Ljava/lang/String;
  #187 = InterfaceMethodref #2.#186       // scala/collection/mutable/ArrayDequeOps.$anonfun$sliding$1:(II)Ljava/lang/String;
  #188 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #189 = NameAndType        #60:#188      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #190 = Methodref          #54.#189      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #191 = Methodref          #180.#76      // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #192 = Utf8               scala/collection/Iterator$
  #193 = Class              #192          // scala/collection/Iterator$
  #194 = Utf8               Lscala/collection/Iterator$;
  #195 = NameAndType        #116:#194     // MODULE$:Lscala/collection/Iterator$;
  #196 = Fieldref           #193.#195     // scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
  #197 = Utf8               scala$collection$Iterator$$_empty
  #198 = Utf8               Lscala/collection/Iterator;
  #199 = NameAndType        #197:#198     // scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
  #200 = Fieldref           #193.#199     // scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
  #201 = Utf8               (Ljava/lang/Object;)V
  #202 = NameAndType        #56:#201      // "<init>":(Ljava/lang/Object;)V
  #203 = Methodref          #18.#202      // scala/collection/Iterator$$anon$20."<init>":(Ljava/lang/Object;)V
  #204 = Utf8               (III)V
  #205 = NameAndType        #56:#204      // "<init>":(III)V
  #206 = Methodref          #20.#205      // scala/collection/Iterator$$anon$25."<init>":(III)V
  #207 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #208 = MethodType         #207          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #209 = Utf8               $anonfun$sliding$2$adapted
  #210 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;ILjava/lang/Object;)Ljava/lang/Object;
  #211 = NameAndType        #209:#210     // $anonfun$sliding$2$adapted:(Lscala/collection/mutable/ArrayDequeOps;ILjava/lang/Object;)Ljava/lang/Object;
  #212 = InterfaceMethodref #2.#211       // scala/collection/mutable/ArrayDequeOps.$anonfun$sliding$2$adapted:(Lscala/collection/mutable/ArrayDequeOps;ILjava/lang/Object;)Ljava/lang/Object;
  #213 = MethodHandle       6:#212        // REF_invokeStatic scala/collection/mutable/ArrayDequeOps.$anonfun$sliding$2$adapted:(Lscala/collection/mutable/ArrayDequeOps;ILjava/lang/Object;)Ljava/lang/Object;
  #214 = Integer            1
  #215 = Utf8               java/lang/invoke/LambdaMetafactory
  #216 = Class              #215          // java/lang/invoke/LambdaMetafactory
  #217 = Utf8               altMetafactory
  #218 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #219 = NameAndType        #217:#218     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #220 = Methodref          #216.#219     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #221 = MethodHandle       6:#220        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #222 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;I)Lscala/Function1;
  #223 = NameAndType        #142:#222     // apply:(Lscala/collection/mutable/ArrayDequeOps;I)Lscala/Function1;
  #224 = InvokeDynamic      #0:#223       // #0:apply:(Lscala/collection/mutable/ArrayDequeOps;I)Lscala/Function1;
  #225 = Utf8               scala/collection/Iterator
  #226 = Class              #225          // scala/collection/Iterator
  #227 = Utf8               map
  #228 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #229 = NameAndType        #227:#228     // map:(Lscala/Function1;)Lscala/collection/Iterator;
  #230 = InterfaceMethodref #226.#229     // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
  #231 = Utf8               lag
  #232 = Utf8               single_a
  #233 = Utf8               range_start
  #234 = Utf8               range_end
  #235 = Utf8               grouped$
  #236 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;I)Lscala/collection/Iterator;
  #237 = Utf8               grouped
  #238 = Utf8               (I)Lscala/collection/Iterator;
  #239 = NameAndType        #237:#238     // grouped:(I)Lscala/collection/Iterator;
  #240 = InterfaceMethodref #2.#239       // scala/collection/mutable/ArrayDequeOps.grouped:(I)Lscala/collection/Iterator;
  #241 = Utf8               (I)Lscala/collection/Iterator<TC;>;
  #242 = Utf8               window$1
  #243 = Utf8               step$1
  #244 = Integer            44
  #245 = Utf8               window=
  #246 = String             #245          // window=
  #247 = Utf8                and step=
  #248 = String             #247          //  and step=
  #249 = Utf8               , but both must be positive
  #250 = String             #249          // , but both must be positive
  #251 = Utf8               $anonfun$sliding$2
  #252 = Utf8               $init$
  #253 = Utf8               (Lscala/collection/mutable/ArrayDequeOps;)V
  #254 = Utf8               scala/runtime/BoxesRunTime
  #255 = Class              #254          // scala/runtime/BoxesRunTime
  #256 = Utf8               unboxToInt
  #257 = NameAndType        #256:#101     // unboxToInt:(Ljava/lang/Object;)I
  #258 = Methodref          #255.#257     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #259 = NameAndType        #251:#154     // $anonfun$sliding$2:(Lscala/collection/mutable/ArrayDequeOps;II)Ljava/lang/Object;
  #260 = InterfaceMethodref #2.#259       // scala/collection/mutable/ArrayDequeOps.$anonfun$sliding$2:(Lscala/collection/mutable/ArrayDequeOps;II)Ljava/lang/Object;
  #261 = Utf8               $deserializeLambda$
  #262 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #263 = Utf8               scala/runtime/LambdaDeserialize
  #264 = Class              #263          // scala/runtime/LambdaDeserialize
  #265 = Utf8               bootstrap
  #266 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #267 = NameAndType        #265:#266     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #268 = Methodref          #264.#267     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #269 = MethodHandle       6:#268        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #270 = Utf8               lambdaDeserialize
  #271 = NameAndType        #270:#262     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #272 = InvokeDynamic      #1:#271       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #273 = Utf8               Code
  #274 = Utf8               LineNumberTable
  #275 = Utf8               LocalVariableTable
  #276 = Utf8               MethodParameters
  #277 = Utf8               Signature
  #278 = Utf8               StackMapTable
  #279 = Utf8               InnerClasses
  #280 = Utf8               SourceFile
  #281 = Utf8               RuntimeVisibleAnnotations
  #282 = Utf8               BootstrapMethods
  #283 = Utf8               ScalaInlineInfo
  #284 = Utf8               ScalaSig
{
  public abstract java.lang.Object[] array();
    descriptor: ()[Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public static java.lang.Object clone$(scala.collection.mutable.ArrayDequeOps);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #29                 // InterfaceMethod clone:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/ArrayDequeOps;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default C clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #34,  1           // InterfaceMethod klone:()Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 571: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/mutable/ArrayDequeOps;
    Signature: #31                          // ()TC;

  public abstract C klone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #31                          // ()TC;

  public abstract C ofArray(java.lang.Object[], int);
    descriptor: ([Ljava/lang/Object;I)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #38                          // ([Ljava/lang/Object;I)TC;
    MethodParameters:
      Name                           Flags
      array                          final
      end                            final

  public abstract int start_$plus(int);
    descriptor: (I)I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      idx                            final

  public static void requireBounds$(scala.collection.mutable.ArrayDequeOps, int, int);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;II)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokespecial #49                 // InterfaceMethod requireBounds:(II)V
         6: return
      LineNumberTable:
        line 579: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/collection/mutable/ArrayDequeOps;
            0       7     1   idx   I
            0       7     2 until   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      idx                            final
      until                          final

  public default void requireBounds(int, int);
    descriptor: (II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: iload_1
         1: iconst_0
         2: if_icmplt     10
         5: iload_1
         6: iload_2
         7: if_icmplt     50
        10: new           #52                 // class java/lang/IndexOutOfBoundsException
        13: dup
        14: new           #54                 // class java/lang/StringBuilder
        17: dup
        18: ldc           #55                 // int 31
        20: invokespecial #59                 // Method java/lang/StringBuilder."<init>":(I)V
        23: iload_1
        24: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        27: ldc           #65                 // String  is out of bounds (min 0, max
        29: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: iload_2
        33: iconst_1
        34: isub
        35: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        38: ldc           #70                 // String )
        40: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        46: invokespecial #77                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        49: athrow
        50: return
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 39 /* same */
      LineNumberTable:
        line 580: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lscala/collection/mutable/ArrayDequeOps;
            0      51     1   idx   I
            0      51     2 until   I
    MethodParameters:
      Name                           Flags
      idx                            final
      until                          final

  public static int requireBounds$default$2$(scala.collection.mutable.ArrayDequeOps);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #83                 // InterfaceMethod requireBounds$default$2:()I
         4: ireturn
      LineNumberTable:
        line 579: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/ArrayDequeOps;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default int requireBounds$default$2();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #86,  1           // InterfaceMethod length:()I
         6: ireturn
      LineNumberTable:
        line 579: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/mutable/ArrayDequeOps;

  public static java.lang.Object copySliceToArray$(scala.collection.mutable.ArrayDequeOps, int, java.lang.Object, int, int);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;ILjava/lang/Object;II)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: iload_1
         2: aload_2
         3: iload_3
         4: iload         4
         6: invokespecial #96                 // InterfaceMethod copySliceToArray:(ILjava/lang/Object;II)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 592: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lscala/collection/mutable/ArrayDequeOps;
            0      10     1 srcStart   I
            0      10     2  dest   Ljava/lang/Object;
            0      10     3 destStart   I
            0      10     4 maxItems   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      srcStart                       final
      dest                           final
      destStart                      final
      maxItems                       final

  public default java.lang.Object copySliceToArray(int, java.lang.Object, int, int);
    descriptor: (ILjava/lang/Object;II)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=11, args_size=5
         0: aload_2
         1: invokestatic  #103                // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
         4: iconst_1
         5: iadd
         6: istore        9
         8: iload_3
         9: iconst_0
        10: if_icmplt     19
        13: iload_3
        14: iload         9
        16: if_icmplt     60
        19: new           #52                 // class java/lang/IndexOutOfBoundsException
        22: dup
        23: new           #54                 // class java/lang/StringBuilder
        26: dup
        27: ldc           #55                 // int 31
        29: invokespecial #59                 // Method java/lang/StringBuilder."<init>":(I)V
        32: iload_3
        33: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        36: ldc           #65                 // String  is out of bounds (min 0, max
        38: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: iload         9
        43: iconst_1
        44: isub
        45: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        48: ldc           #70                 // String )
        50: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        53: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        56: invokespecial #77                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        59: athrow
        60: iload         4
        62: aload_0
        63: invokeinterface #86,  1           // InterfaceMethod length:()I
        68: iload_1
        69: isub
        70: aload_2
        71: invokestatic  #103                // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
        74: iload_3
        75: isub
        76: invokestatic  #109                // Method java/lang/Math.min:(II)I
        79: invokestatic  #109                // Method java/lang/Math.min:(II)I
        82: istore        5
        84: iload         5
        86: iconst_0
        87: if_icmple     227
        90: aload_0
        91: invokeinterface #86,  1           // InterfaceMethod length:()I
        96: istore        10
        98: iload_1
        99: iconst_0
       100: if_icmplt     109
       103: iload_1
       104: iload         10
       106: if_icmplt     150
       109: new           #52                 // class java/lang/IndexOutOfBoundsException
       112: dup
       113: new           #54                 // class java/lang/StringBuilder
       116: dup
       117: ldc           #55                 // int 31
       119: invokespecial #59                 // Method java/lang/StringBuilder."<init>":(I)V
       122: iload_1
       123: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       126: ldc           #65                 // String  is out of bounds (min 0, max
       128: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       131: iload         10
       133: iconst_1
       134: isub
       135: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       138: ldc           #70                 // String )
       140: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       143: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       146: invokespecial #77                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
       149: athrow
       150: aload_0
       151: iload_1
       152: invokeinterface #111,  2          // InterfaceMethod start_$plus:(I)I
       157: istore        6
       159: iload         5
       161: aload_0
       162: invokeinterface #113,  1          // InterfaceMethod array:()[Ljava/lang/Object;
       167: arraylength
       168: iload         6
       170: isub
       171: invokestatic  #109                // Method java/lang/Math.min:(II)I
       174: istore        7
       176: getstatic     #119                // Field scala/Array$.MODULE$:Lscala/Array$;
       179: aload_0
       180: invokeinterface #113,  1          // InterfaceMethod array:()[Ljava/lang/Object;
       185: iload         6
       187: aload_2
       188: iload_3
       189: iload         7
       191: invokevirtual #123                // Method scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
       194: iload         5
       196: iload         7
       198: isub
       199: istore        8
       201: iload         8
       203: iconst_0
       204: if_icmple     227
       207: getstatic     #119                // Field scala/Array$.MODULE$:Lscala/Array$;
       210: aload_0
       211: invokeinterface #113,  1          // InterfaceMethod array:()[Ljava/lang/Object;
       216: iconst_0
       217: aload_2
       218: iload_3
       219: iload         7
       221: iadd
       222: iload         8
       224: invokevirtual #123                // Method scala/Array$.copy:(Ljava/lang/Object;ILjava/lang/Object;II)V
       227: aload_2
       228: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/mutable/ArrayDequeOps, int, class java/lang/Object, int, int, top, top, top, top, int ]
          stack = []
        frame_type = 40 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class scala/collection/mutable/ArrayDequeOps, int, class java/lang/Object, int, int, int, top, top, top, int, int ]
          stack = []
        frame_type = 40 /* same */
        frame_type = 250 /* chop */
          offset_delta = 76
      LineNumberTable:
        line 593: 0
        line 580: 8
        line 594: 60
        line 595: 84
        line 579: 90
        line 580: 98
        line 597: 150
        line 598: 159
        line 599: 176
        line 600: 194
        line 601: 201
        line 603: 227
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          159      68     6 startIdx   I
          176      51     7 block1   I
          201      26     8 block2   I
           84     144     5 toCopy   I
            0     229     0  this   Lscala/collection/mutable/ArrayDequeOps;
            0     229     1 srcStart   I
            0     229     2  dest   Ljava/lang/Object;
            0     229     3 destStart   I
            0     229     4 maxItems   I
            8      52     9 requireBounds_until   I
    Signature: #94                          // (ILjava/lang/Object;II)Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      srcStart                       final
      dest                           final
      destStart                      final
      maxItems                       final

  public static java.lang.Object reverse$(scala.collection.mutable.ArrayDequeOps);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #132                // InterfaceMethod reverse:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 606: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/ArrayDequeOps;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default C reverse();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=1
         0: aload_0
         1: invokeinterface #86,  1           // InterfaceMethod length:()I
         6: istore_1
         7: getstatic     #137                // Field scala/collection/mutable/ArrayDeque$.MODULE$:Lscala/collection/mutable/ArrayDeque$;
        10: iload_1
        11: invokevirtual #141                // Method scala/collection/mutable/ArrayDeque$.alloc:(I)[Ljava/lang/Object;
        14: astore_2
        15: iconst_0
        16: istore_3
        17: iload_3
        18: iload_1
        19: if_icmpge     42
        22: aload_2
        23: iload_3
        24: aload_0
        25: iload_1
        26: iload_3
        27: isub
        28: iconst_1
        29: isub
        30: invokeinterface #145,  2          // InterfaceMethod apply:(I)Ljava/lang/Object;
        35: aastore
        36: iinc          3, 1
        39: goto          17
        42: aload_0
        43: aload_2
        44: iload_1
        45: invokeinterface #147,  3          // InterfaceMethod ofArray:([Ljava/lang/Object;I)Ljava/lang/Object;
        50: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 17
          locals = [ int, class "[Ljava/lang/Object;", int ]
        frame_type = 24 /* same */
      LineNumberTable:
        line 607: 0
        line 608: 7
        line 609: 15
        line 610: 17
        line 611: 22
        line 612: 36
        line 610: 39
        line 614: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      43     1     n   I
           15      35     2   arr   [Ljava/lang/Object;
           17      33     3     i   I
            0      51     0  this   Lscala/collection/mutable/ArrayDequeOps;
    Signature: #31                          // ()TC;

  public static java.lang.Object slice$(scala.collection.mutable.ArrayDequeOps, int, int);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;II)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokespecial #159                // InterfaceMethod slice:(II)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 617: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/collection/mutable/ArrayDequeOps;
            0       7     1  from   I
            0       7     2 until   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      from                           final
      until                          final

  public default C slice(int, int);
    descriptor: (II)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=3
         0: aload_0
         1: invokeinterface #86,  1           // InterfaceMethod length:()I
         6: istore_3
         7: iconst_0
         8: iload_3
         9: iload_1
        10: invokestatic  #109                // Method java/lang/Math.min:(II)I
        13: invokestatic  #163                // Method java/lang/Math.max:(II)I
        16: istore        4
        18: iconst_0
        19: iload_3
        20: iload_2
        21: invokestatic  #109                // Method java/lang/Math.min:(II)I
        24: invokestatic  #163                // Method java/lang/Math.max:(II)I
        27: iload         4
        29: isub
        30: istore        5
        32: iload         5
        34: iconst_0
        35: if_icmpgt     45
        38: aload_0
        39: invokeinterface #166,  1          // InterfaceMethod empty:()Ljava/lang/Object;
        44: areturn
        45: iload         5
        47: iload_3
        48: if_icmplt     58
        51: aload_0
        52: invokeinterface #34,  1           // InterfaceMethod klone:()Ljava/lang/Object;
        57: areturn
        58: aload_0
        59: iload         4
        61: getstatic     #137                // Field scala/collection/mutable/ArrayDeque$.MODULE$:Lscala/collection/mutable/ArrayDeque$;
        64: iload         5
        66: invokevirtual #141                // Method scala/collection/mutable/ArrayDeque$.alloc:(I)[Ljava/lang/Object;
        69: iconst_0
        70: iload         5
        72: invokeinterface #96,  5           // InterfaceMethod copySliceToArray:(ILjava/lang/Object;II)Ljava/lang/Object;
        77: checkcast     #152                // class "[Ljava/lang/Object;"
        80: astore        6
        82: aload_0
        83: aload         6
        85: iload         5
        87: invokeinterface #147,  3          // InterfaceMethod ofArray:([Ljava/lang/Object;I)Ljava/lang/Object;
        92: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 45
          locals = [ int, int, int ]
        frame_type = 12 /* same */
      LineNumberTable:
        line 618: 0
        line 619: 7
        line 620: 18
        line 621: 27
        line 622: 32
        line 623: 38
        line 624: 45
        line 625: 51
        line 627: 58
        line 628: 82
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           82      10     6 array2   [Ljava/lang/Object;
            7      85     3     n   I
           18      74     4  left   I
           32      60     5   len   I
            0      93     0  this   Lscala/collection/mutable/ArrayDequeOps;
            0      93     1  from   I
            0      93     2 until   I
    Signature: #160                         // (II)TC;
    MethodParameters:
      Name                           Flags
      from                           final
      until                          final

  public static scala.collection.Iterator sliding$(scala.collection.mutable.ArrayDequeOps, int, int);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;II)Lscala/collection/Iterator;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokespecial #177                // InterfaceMethod sliding:(II)Lscala/collection/Iterator;
         6: areturn
      LineNumberTable:
        line 632: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/collection/mutable/ArrayDequeOps;
            0       7     1 window   I
            0       7     2  step   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      window                         final
      step                           final

  public default scala.collection.Iterator<C> sliding(int, int);
    descriptor: (II)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=8, args_size=3
         0: iload_1
         1: iconst_0
         2: if_icmple     14
         5: iload_2
         6: iconst_0
         7: if_icmple     14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: ifne          51
        18: new           #180                // class java/lang/IllegalArgumentException
        21: dup
        22: new           #54                 // class java/lang/StringBuilder
        25: dup
        26: ldc           #181                // int 20
        28: invokespecial #59                 // Method java/lang/StringBuilder."<init>":(I)V
        31: ldc           #183                // String requirement failed:
        33: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: iload_1
        37: iload_2
        38: invokestatic  #187                // InterfaceMethod $anonfun$sliding$1:(II)Ljava/lang/String;
        41: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        44: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        47: invokespecial #191                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        50: athrow
        51: aload_0
        52: invokeinterface #86,  1           // InterfaceMethod length:()I
        57: istore_3
        58: iload_3
        59: tableswitch   { // 0 to 0
                       0: 76
                 default: 84
            }
        76: getstatic     #196                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        79: pop
        80: getstatic     #200                // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        83: areturn
        84: iload_3
        85: iload_1
        86: if_icmpgt     118
        89: getstatic     #196                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        92: pop
        93: aload_0
        94: iconst_0
        95: aload_0
        96: invokeinterface #86,  1           // InterfaceMethod length:()I
       101: invokeinterface #159,  3          // InterfaceMethod slice:(II)Ljava/lang/Object;
       106: astore        5
       108: new           #18                 // class scala/collection/Iterator$$anon$20
       111: dup
       112: aload         5
       114: invokespecial #203                // Method scala/collection/Iterator$$anon$20."<init>":(Ljava/lang/Object;)V
       117: areturn
       118: iload_1
       119: iload_2
       120: if_icmple     129
       123: iload_1
       124: iload_2
       125: isub
       126: goto          130
       129: iconst_0
       130: istore        4
       132: getstatic     #196                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
       135: pop
       136: iconst_0
       137: iload_3
       138: iload         4
       140: isub
       141: istore        7
       143: istore        6
       145: new           #20                 // class scala/collection/Iterator$$anon$25
       148: dup
       149: iload_2
       150: iload         6
       152: iload         7
       154: invokespecial #206                // Method scala/collection/Iterator$$anon$25."<init>":(III)V
       157: aload_0
       158: iload_1
       159: invokedynamic #224,  0            // InvokeDynamic #0:apply:(Lscala/collection/mutable/ArrayDequeOps;I)Lscala/Function1;
       164: invokeinterface #230,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
       169: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 35 /* same */
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 7 /* same */
        frame_type = 33 /* same */
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 633: 0
        line 634: 51
        line 635: 76
        line 636: 84
        line 638: 118
        line 639: 132
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          132      37     4   lag   I
            0     170     0  this   Lscala/collection/mutable/ArrayDequeOps;
            0     170     1 window   I
            0     170     2  step   I
          108       9     5 single_a   Ljava/lang/Object;
          145      12     6 range_start   I
          145      12     7 range_end   I
    Signature: #178                         // (II)Lscala/collection/Iterator<TC;>;
    MethodParameters:
      Name                           Flags
      window                         final
      step                           final

  public static scala.collection.Iterator grouped$(scala.collection.mutable.ArrayDequeOps, int);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;I)Lscala/collection/Iterator;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #240                // InterfaceMethod grouped:(I)Lscala/collection/Iterator;
         5: areturn
      LineNumberTable:
        line 643: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/ArrayDequeOps;
            0       6     1     n   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      n                              final

  public default scala.collection.Iterator<C> grouped(int);
    descriptor: (I)Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: iload_1
         3: invokeinterface #177,  3          // InterfaceMethod sliding:(II)Lscala/collection/Iterator;
         8: areturn
      LineNumberTable:
        line 643: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/mutable/ArrayDequeOps;
            0       9     1     n   I
    Signature: #241                         // (I)Lscala/collection/Iterator<TC;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public static java.lang.String $anonfun$sliding$1(int, int);
    descriptor: (II)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #54                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #244                // int 44
         6: invokespecial #59                 // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #246                // String window=
        11: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: iload_0
        15: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        18: ldc           #248                // String  and step=
        20: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: iload_1
        24: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        27: ldc           #250                // String , but both must be positive
        29: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        35: areturn
      LineNumberTable:
        line 633: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0 window$1   I
            0      36     1 step$1   I
    MethodParameters:
      Name                           Flags
      window$1                       final
      step$1                         final

  public static java.lang.Object $anonfun$sliding$2(scala.collection.mutable.ArrayDequeOps, int, int);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;II)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: iload_2
         2: iload_2
         3: iload_1
         4: iadd
         5: invokeinterface #159,  3          // InterfaceMethod slice:(II)Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 639: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 $this   Lscala/collection/mutable/ArrayDequeOps;
            0      11     1 window$1   I
            0      11     2     i   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      window$1                       final
      i                              final

  public static void $init$(scala.collection.mutable.ArrayDequeOps);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 568: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/collection/mutable/ArrayDequeOps;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static java.lang.Object $anonfun$sliding$2$adapted(scala.collection.mutable.ArrayDequeOps, int, java.lang.Object);
    descriptor: (Lscala/collection/mutable/ArrayDequeOps;ILjava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: aload_2
         3: invokestatic  #258                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         6: invokestatic  #260                // InterfaceMethod $anonfun$sliding$2:(Lscala/collection/mutable/ArrayDequeOps;II)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 639: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lscala/collection/mutable/ArrayDequeOps;
            0      10     1 window$1   I
            0      10     2     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      window$1                       final
      i                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #272,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #18;                       // class scala/collection/Iterator$$anon$20
  public final #20;                       // class scala/collection/Iterator$$anon$25
Signature: #3                           // <A:Ljava/lang/Object;CC:Ljava/lang/Object;C:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/StrictOptimizedSeqOps<TA;TCC;TC;>;
SourceFile: "ArrayDeque.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005=aa\u0002\b\u0010!\u0003\r\tA\u0006\u0005\u0006k\u0001!\tA\u000e\u0005\u0006u\u00011\tb\u000f\u0005\u0006\u007f\u0001!)\u0005\u0011\u0005\u0006\u0003\u00021\t\u0002\u0011\u0005\u0006\u0005\u00021\tb\u0011\u0005\u0006\u0015\u00021\tb\u0013\u0005\u0006\u001d\u0002!)b\u0014\u0005\b/\u0002\t\n\u0011\"\u0006Y\u0011\u0015\u0019\u0007\u0001\"\u0001e\u0011\u0015\u0019\b\u0001\"\u0011u\u0011\u0015)\b\u0001\"\u0011w\u0011\u0015Q\b\u0001\"\u0011|\u0011\u001d\t9\u0001\u0001C!\u0003\u0013\u0011Q\"\u0011:sCf$U-];f\u001fB\u001c(B\u0001\t\u0012\u0003\u001diW\u000f^1cY\u0016T!AE\n\u0002\u0015\r|G\u000e\\3di&|gNC\u0001\u0015\u0003\u0015\u00198-\u00197b\u0007\u0001)Ba\u0006\u0012-eM\u0019\u0001\u0001\u0007\u000f\u0011\u0005eQR\"A\n\n\u0005m\u0019\"AB!osJ+g\rE\u0003\u001e=\u0001Z\u0013\'D\u0001\u0012\u0013\ty\u0012CA\u000bTiJL7\r^(qi&l\u0017N_3e\'\u0016\fx\n]:\u0011\u0005\u0005\u0012C\u0002\u0001\u0003\u0006G\u0001\u0011\r\u0001\n\u0002\u0002\u0003F\u0011Q\u0005\u000b\t\u00033\u0019J!aJ\n\u0003\u000f9{G\u000f[5oOB\u0011\u0011$K\u0005\u0003UM\u00111!\u00118z!\t\tC\u0006\u0002\u0004.\u0001\u0011\u0015\rA\f\u0002\u0003\u0007\u000e+\"\u0001J\u0018\u0005\u000bAb#\u0019\u0001\u0013\u0003\t}#C%\r\t\u0003CI\"aa\r\u0001\u0005\u0006\u0004!$!A\"\u0012\u0005\u0015B\u0012A\u0002\u0013j]&$H\u0005F\u00018!\tI\u0002(\u0003\u0002:\'\t!QK\\5u\u0003\u0015\t\'O]1z+\u0005a\u0004cA\r>1%\u0011ah\u0005\u0002\u0006\u0003J\u0014\u0018-_\u0001\u0006G2|g.\u001a\u000b\u0002c\u0005)1\u000e\\8oK\u00069qNZ!se\u0006LHcA\u0019E\u000b\")!(\u0002a\u0001y!)a)\u0002a\u0001\u000f\u0006\u0019QM\u001c3\u0011\u0005eA\u0015BA%\u0014\u0005\rIe\u000e^\u0001\fgR\f\'\u000f^0%a2,8\u000f\u0006\u0002H\u0019\")QJ\u0002a\u0001\u000f\u0006\u0019\u0011\u000e\u001a=\u0002\u001bI,\u0017/^5sK\n{WO\u001c3t)\r9\u0004+\u0015\u0005\u0006\u001b\u001e\u0001\ra\u0012\u0005\b%\u001e\u0001\n\u00111\u0001H\u0003\u0015)h\u000e^5mQ\t9A\u000b\u0005\u0002\u001a+&\u0011ak\u0005\u0002\u0007S:d\u0017N\\3\u0002/I,\u0017/^5sK\n{WO\u001c3tI\u0011,g-Y;mi\u0012\u0012T#A-+\u0005\u001dS6&A.\u0011\u0005q\u000bW\"A/\u000b\u0005y{\u0016!C;oG\",7m[3e\u0015\t\u00017#\u0001\u0006b]:|G/\u0019;j_:L!AY/\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-\u0001\td_BL8\u000b\\5dKR{\u0017I\u001d:bsR)Q-\u001c4pc:\u0011\u0011E\u001a\u0005\u0006O&\u0001\r\u0001[\u0001\u0005I\u0016\u001cH\u000f\r\u0002jWB\u0019\u0011$\u00106\u0011\u0005\u0005ZG!\u00037g\u0003\u0003\u0005\tQ!\u0001%\u0005\ryFE\r\u0005\u0006]&\u0001\raR\u0001\tgJ\u001c7\u000b^1si\")\u0001/\u0003a\u0001\u000f\u0006IA-Z:u\'R\f\'\u000f\u001e\u0005\u0006e&\u0001\raR\u0001\t[\u0006D\u0018\n^3ng\u00069!/\u001a<feN,W#A\u0019\u0002\u000bMd\u0017nY3\u0015\u0007E:\u0018\u0010C\u0003y\u0017\u0001\u0007q)\u0001\u0003ge>l\u0007\"\u0002*\f\u0001\u00049\u0015aB:mS\u0012Lgn\u001a\u000b\u0005y~\f\u0019\u0001E\u0002\u001e{FJ!A`\t\u0003\u0011%#XM]1u_JDa!!\u0001\r\u0001\u00049\u0015AB<j]\u0012|w\u000f\u0003\u0004\u0002\u00061\u0001\raR\u0001\u0005gR,\u0007/A\u0004he>,\b/\u001a3\u0015\u0007q\fY\u0001\u0003\u0004\u0002\u000e5\u0001\raR\u0001\u0002]\u0002"
    )
BootstrapMethods:
  0: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #208 (Ljava/lang/Object;)Ljava/lang/Object;
      #213 REF_invokeStatic scala/collection/mutable/ArrayDequeOps.$anonfun$sliding$2$adapted:(Lscala/collection/mutable/ArrayDequeOps;ILjava/lang/Object;)Ljava/lang/Object;
      #208 (Ljava/lang/Object;)Ljava/lang/Object;
      #214 1
  1: #269 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #213 REF_invokeStatic scala/collection/mutable/ArrayDequeOps.$anonfun$sliding$2$adapted:(Lscala/collection/mutable/ArrayDequeOps;ILjava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x7C (unknown attribute)
   01 00 00 18 00 B8 00 B9 01 00 FB 00 9A 01 00 D1
   00 D2 01 00 FC 00 FD 01 00 15 00 16 00 00 1A 00
   1B 01 00 17 00 18 01 00 5D 00 5E 00 00 57 00 58
   01 00 ED 00 EE 00 00 EB 00 EC 01 00 20 00 1B 00
   00 24 00 25 00 00 2E 00 2F 05 00 2B 00 2C 05 00
   50 00 51 01 00 4E 00 4F 01 00 82 00 1B 00 00 81
   00 18 01 00 9C 00 9D 00 00 99 00 9A 01 00 AE 00
   AF 00 00 AA 00 AB 01 00 28 00 29 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
