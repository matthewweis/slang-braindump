Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/DoubleChampStepper.class
  Last modified May 29, 2022; size 7335 bytes
  SHA-256 checksum bf385344438aea1d48ce99205e52ed5e3c37ff84f58cc2b0c423497cc5e35398
  Compiled from "ChampStepper.scala"
public final class scala.collection.convert.impl.DoubleChampStepper<T extends scala.collection.immutable.Node<T>> extends scala.collection.convert.impl.ChampStepperBase<java.lang.Object, T, scala.collection.DoubleStepper, scala.collection.convert.impl.DoubleChampStepper<T>> implements scala.collection.DoubleStepper
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/DoubleChampStepper
  super_class: #5                         // scala/collection/convert/impl/ChampStepperBase
  interfaces: 1, fields: 1, methods: 26, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/DoubleChampStepper
    #2 = Class              #1            // scala/collection/convert/impl/DoubleChampStepper
    #3 = Utf8               <T:Lscala/collection/immutable/Node<TT;>;>Lscala/collection/convert/impl/ChampStepperBase<Ljava/lang/Object;TT;Lscala/collection/DoubleStepper;Lscala/collection/convert/impl/DoubleChampStepper<TT;>;>;Lscala/collection/DoubleStepper;
    #4 = Utf8               scala/collection/convert/impl/ChampStepperBase
    #5 = Class              #4            // scala/collection/convert/impl/ChampStepperBase
    #6 = Utf8               scala/collection/DoubleStepper
    #7 = Class              #6            // scala/collection/DoubleStepper
    #8 = Utf8               ChampStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005e3Qa\u0003\u0007\u0003!QA\u0001B\r\u0001\u0003\u0002\u0003\u0006Ia\r\u0005\tm\u0001\u0011)\u0019!C\to!A1\b\u0001B\u0001B\u0003%\u0001\bC\u0003=\u0001\u0011\u0005Q\bC\u0003A\u0001\u0011\u0005\u0011\tC\u0003C\u0001\u0011\u00051i\u0002\u0004E\u0019!\u0005\u0001#\u0012\u0004\u0007\u00171A\t\u0001\u0005$\t\u000bqBA\u0011\u0001&\t\u000b-CA\u0011\u0001\'\u0003%\u0011{WO\u00197f\u0007\"\fW\u000e]*uKB\u0004XM\u001d\u0006\u0003\u001b9\tA![7qY*\u0011q\u0002E\u0001\bG>tg/\u001a:u\u0015\t\t\"#\u0001\u0006d_2dWm\u0019;j_:T\u0011aE\u0001\u0006g\u000e\fG.Y\u000b\u0003+\u0001\u001a2\u0001\u0001\f.!\u00199\u0002D\u0007\u0010.c5\tA\"\u0003\u0002\u001a\u0019\t\u00012\t[1naN#X\r\u001d9fe\n\u000b7/\u001a\t\u00037qi\u0011AE\u0005\u0003;I\u0011a\u0001R8vE2,\u0007CA\u0010!\u0019\u0001!Q!\t\u0001C\u0002\r\u0012\u0011\u0001V\u0002\u0001#\t!s\u0005\u0005\u0002\u001cK%\u0011aE\u0005\u0002\u0005\u001dVdG\u000eE\u0002)Wyi\u0011!\u000b\u0006\u0003UA\t\u0011\"[7nkR\f\'\r\\3\n\u00051J#\u0001\u0002(pI\u0016\u0004\"AL\u0018\u000e\u0003AI!\u0001\r\t\u0003\u001b\u0011{WO\u00197f\'R,\u0007\u000f]3s!\r9\u0002AH\u0001\t?6\f\u0007pU5{KB\u00111\u0004N\u0005\u0003kI\u00111!\u00138u\u0003\u001d)\u0007\u0010\u001e:bGR,\u0012\u0001\u000f\t\u00067er2GG\u0005\u0003uI\u0011\u0011BR;oGRLwN\u001c\u001a\u0002\u0011\u0015DHO]1di\u0002\na\u0001P5oSRtDcA\u0019?\u007f!)!\u0007\u0002a\u0001g!)a\u0007\u0002a\u0001q\u0005Aa.\u001a=u\'R,\u0007\u000fF\u0001\u001b\u0003%\u0019X-\\5dY>tW\rF\u00012\u0003I!u.\u001e2mK\u000eC\u0017-\u001c9Ti\u0016\u0004\b/\u001a:\u0011\u0005]A1C\u0001\u0005H!\tY\u0002*\u0003\u0002J%\t1\u0011I\\=SK\u001a$\u0012!R\u0001\u0005MJ|W.\u0006\u0002N!R!ajU+X!\r9\u0002a\u0014\t\u0003?A#Q!\t\u0006C\u0002E\u000b\"\u0001\n*\u0011\u0007!Zs\nC\u0003U\u0015\u0001\u00071\'A\u0004nCb\u001c\u0016N_3\t\u000bYS\u0001\u0019A(\u0002\tI|w\u000e\u001e\u0005\u0006m)\u0001\r\u0001\u0017\t\u00067ez5G\u0007
   #12 = Utf8               java/util/PrimitiveIterator$OfDouble
   #13 = Class              #12           // java/util/PrimitiveIterator$OfDouble
   #14 = Utf8               java/util/PrimitiveIterator
   #15 = Class              #14           // java/util/PrimitiveIterator
   #16 = Utf8               OfDouble
   #17 = Utf8               java/util/Spliterator$OfDouble
   #18 = Class              #17           // java/util/Spliterator$OfDouble
   #19 = Utf8               java/util/Spliterator
   #20 = Class              #19           // java/util/Spliterator
   #21 = Utf8               extract
   #22 = Utf8               Lscala/Function2;
   #23 = Utf8               Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;
   #24 = Utf8               from
   #25 = Utf8               (ILscala/collection/immutable/Node;Lscala/Function2;)Lscala/collection/convert/impl/DoubleChampStepper;
   #26 = Utf8               <T:Lscala/collection/immutable/Node<TT;>;>(ITT;Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/collection/convert/impl/DoubleChampStepper<TT;>;
   #27 = Utf8               maxSize
   #28 = Utf8               root
   #29 = Utf8               scala/collection/convert/impl/DoubleChampStepper$
   #30 = Class              #29           // scala/collection/convert/impl/DoubleChampStepper$
   #31 = Utf8               MODULE$
   #32 = Utf8               Lscala/collection/convert/impl/DoubleChampStepper$;
   #33 = NameAndType        #31:#32       // MODULE$:Lscala/collection/convert/impl/DoubleChampStepper$;
   #34 = Fieldref           #30.#33       // scala/collection/convert/impl/DoubleChampStepper$.MODULE$:Lscala/collection/convert/impl/DoubleChampStepper$;
   #35 = Utf8               <init>
   #36 = Utf8               (ILscala/Function2;)V
   #37 = NameAndType        #35:#36       // "<init>":(ILscala/Function2;)V
   #38 = Methodref          #2.#37        // scala/collection/convert/impl/DoubleChampStepper."<init>":(ILscala/Function2;)V
   #39 = Utf8               initRoot
   #40 = Utf8               (Lscala/collection/immutable/Node;)V
   #41 = NameAndType        #39:#40       // initRoot:(Lscala/collection/immutable/Node;)V
   #42 = Methodref          #2.#41        // scala/collection/convert/impl/DoubleChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
   #43 = Utf8               I
   #44 = Utf8               Lscala/collection/immutable/Node;
   #45 = Utf8               from_ans
   #46 = Utf8               Lscala/collection/convert/impl/DoubleChampStepper;
   #47 = Utf8               spliterator
   #48 = Utf8               ()Ljava/util/Spliterator$OfDouble;
   #49 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfDouble;
   #50 = Utf8               spliterator$
   #51 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/Spliterator$OfDouble;
   #52 = NameAndType        #50:#51       // spliterator$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator$OfDouble;
   #53 = InterfaceMethodref #7.#52        // scala/collection/DoubleStepper.spliterator$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator$OfDouble;
   #54 = Utf8               this
   #55 = Utf8               javaIterator
   #56 = Utf8               ()Ljava/util/PrimitiveIterator$OfDouble;
   #57 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfDouble;
   #58 = Utf8               javaIterator$
   #59 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
   #60 = NameAndType        #58:#59       // javaIterator$:(Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
   #61 = InterfaceMethodref #7.#60        // scala/collection/DoubleStepper.javaIterator$:(Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
   #62 = Utf8               spliterator$mcD$sp
   #63 = Utf8               ()Ljava/util/Spliterator;
   #64 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #65 = Utf8               spliterator$mcD$sp$
   #66 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/Spliterator;
   #67 = NameAndType        #65:#66       // spliterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator;
   #68 = InterfaceMethodref #7.#67        // scala/collection/DoubleStepper.spliterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator;
   #69 = Utf8               javaIterator$mcD$sp
   #70 = Utf8               ()Ljava/util/Iterator;
   #71 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
   #72 = Utf8               javaIterator$mcD$sp$
   #73 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
   #74 = NameAndType        #72:#73       // javaIterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
   #75 = InterfaceMethodref #7.#74        // scala/collection/DoubleStepper.javaIterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
   #76 = Utf8               nextStep$mcI$sp
   #77 = Utf8               ()I
   #78 = Utf8               scala/collection/Stepper
   #79 = Class              #78           // scala/collection/Stepper
   #80 = Utf8               nextStep$mcI$sp$
   #81 = Utf8               (Lscala/collection/Stepper;)I
   #82 = NameAndType        #80:#81       // nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #83 = InterfaceMethodref #79.#82       // scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #84 = Utf8               nextStep$mcJ$sp
   #85 = Utf8               ()J
   #86 = Utf8               nextStep$mcJ$sp$
   #87 = Utf8               (Lscala/collection/Stepper;)J
   #88 = NameAndType        #86:#87       // nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #89 = InterfaceMethodref #79.#88       // scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #90 = Utf8               trySplit$mcD$sp
   #91 = Utf8               ()Lscala/collection/Stepper;
   #92 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
   #93 = Utf8               trySplit$mcD$sp$
   #94 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #95 = NameAndType        #93:#94       // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #96 = InterfaceMethodref #79.#95       // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #97 = Utf8               trySplit$mcI$sp
   #98 = Utf8               trySplit$mcI$sp$
   #99 = NameAndType        #98:#94       // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #100 = InterfaceMethodref #79.#99       // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #101 = Utf8               trySplit$mcJ$sp
  #102 = Utf8               trySplit$mcJ$sp$
  #103 = NameAndType        #102:#94      // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #104 = InterfaceMethodref #79.#103      // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
  #105 = Utf8               spliterator$mcI$sp
  #106 = Utf8               spliterator$mcI$sp$
  #107 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #108 = NameAndType        #106:#107     // spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #109 = InterfaceMethodref #79.#108      // scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #110 = Utf8               spliterator$mcJ$sp
  #111 = Utf8               spliterator$mcJ$sp$
  #112 = NameAndType        #111:#107     // spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #113 = InterfaceMethodref #79.#112      // scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #114 = Utf8               javaIterator$mcI$sp
  #115 = Utf8               javaIterator$mcI$sp$
  #116 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
  #117 = NameAndType        #115:#116     // javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #118 = InterfaceMethodref #79.#117      // scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #119 = Utf8               javaIterator$mcJ$sp
  #120 = Utf8               javaIterator$mcJ$sp$
  #121 = NameAndType        #120:#116     // javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #122 = InterfaceMethodref #79.#121      // scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #123 = Utf8               iterator
  #124 = Utf8               ()Lscala/collection/Iterator;
  #125 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #126 = Utf8               iterator$
  #127 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #128 = NameAndType        #126:#127     // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #129 = InterfaceMethodref #79.#128      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #130 = Utf8               ()Lscala/Function2;
  #131 = Utf8               ()Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;
  #132 = NameAndType        #21:#22       // extract:Lscala/Function2;
  #133 = Fieldref           #2.#132       // scala/collection/convert/impl/DoubleChampStepper.extract:Lscala/Function2;
  #134 = Utf8               nextStep
  #135 = Utf8               ()D
  #136 = Utf8               nextStep$mcD$sp
  #137 = NameAndType        #136:#135     // nextStep$mcD$sp:()D
  #138 = Methodref          #2.#137       // scala/collection/convert/impl/DoubleChampStepper.nextStep$mcD$sp:()D
  #139 = Utf8               semiclone
  #140 = Utf8               ()Lscala/collection/convert/impl/DoubleChampStepper;
  #141 = Utf8               ()Lscala/collection/convert/impl/DoubleChampStepper<TT;>;
  #142 = NameAndType        #21:#130      // extract:()Lscala/Function2;
  #143 = Methodref          #2.#142       // scala/collection/convert/impl/DoubleChampStepper.extract:()Lscala/Function2;
  #144 = Utf8               hasStep
  #145 = Utf8               ()Z
  #146 = NameAndType        #144:#145     // hasStep:()Z
  #147 = Methodref          #2.#146       // scala/collection/convert/impl/DoubleChampStepper.hasStep:()Z
  #148 = Utf8               currentValueNode
  #149 = Utf8               ()Lscala/collection/immutable/Node;
  #150 = NameAndType        #148:#149     // currentValueNode:()Lscala/collection/immutable/Node;
  #151 = Methodref          #2.#150       // scala/collection/convert/impl/DoubleChampStepper.currentValueNode:()Lscala/collection/immutable/Node;
  #152 = Utf8               currentValueCursor
  #153 = NameAndType        #152:#77      // currentValueCursor:()I
  #154 = Methodref          #2.#153       // scala/collection/convert/impl/DoubleChampStepper.currentValueCursor:()I
  #155 = Utf8               java/lang/Integer
  #156 = Class              #155          // java/lang/Integer
  #157 = Utf8               valueOf
  #158 = Utf8               (I)Ljava/lang/Integer;
  #159 = NameAndType        #157:#158     // valueOf:(I)Ljava/lang/Integer;
  #160 = Methodref          #156.#159     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #161 = Utf8               scala/Function2
  #162 = Class              #161          // scala/Function2
  #163 = Utf8               apply
  #164 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #165 = NameAndType        #163:#164     // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #166 = InterfaceMethodref #162.#165     // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #167 = Utf8               scala/runtime/BoxesRunTime
  #168 = Class              #167          // scala/runtime/BoxesRunTime
  #169 = Utf8               unboxToDouble
  #170 = Utf8               (Ljava/lang/Object;)D
  #171 = NameAndType        #169:#170     // unboxToDouble:(Ljava/lang/Object;)D
  #172 = Methodref          #168.#171     // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #173 = Utf8               currentValueCursor_$eq
  #174 = Utf8               (I)V
  #175 = NameAndType        #173:#174     // currentValueCursor_$eq:(I)V
  #176 = Methodref          #2.#175       // scala/collection/convert/impl/DoubleChampStepper.currentValueCursor_$eq:(I)V
  #177 = NameAndType        #27:#77       // maxSize:()I
  #178 = Methodref          #2.#177       // scala/collection/convert/impl/DoubleChampStepper.maxSize:()I
  #179 = Utf8               maxSize_$eq
  #180 = NameAndType        #179:#174     // maxSize_$eq:(I)V
  #181 = Methodref          #2.#180       // scala/collection/convert/impl/DoubleChampStepper.maxSize_$eq:(I)V
  #182 = Utf8               scala/collection/Stepper$
  #183 = Class              #182          // scala/collection/Stepper$
  #184 = Utf8               Lscala/collection/Stepper$;
  #185 = NameAndType        #31:#184      // MODULE$:Lscala/collection/Stepper$;
  #186 = Fieldref           #183.#185     // scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
  #187 = Utf8               java/util/NoSuchElementException
  #188 = Class              #187          // java/util/NoSuchElementException
  #189 = Utf8               Empty Stepper
  #190 = String             #189          // Empty Stepper
  #191 = Utf8               (Ljava/lang/String;)V
  #192 = NameAndType        #35:#191      // "<init>":(Ljava/lang/String;)V
  #193 = Methodref          #188.#192     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #194 = Utf8               ans
  #195 = Utf8               D
  #196 = Utf8               trySplit
  #197 = Utf8               ()Ljava/lang/Object;
  #198 = NameAndType        #196:#197     // trySplit:()Ljava/lang/Object;
  #199 = Methodref          #2.#198       // scala/collection/convert/impl/DoubleChampStepper.trySplit:()Ljava/lang/Object;
  #200 = Utf8               ()Lscala/collection/DoubleStepper;
  #201 = NameAndType        #55:#56       // javaIterator:()Ljava/util/PrimitiveIterator$OfDouble;
  #202 = Methodref          #2.#201       // scala/collection/convert/impl/DoubleChampStepper.javaIterator:()Ljava/util/PrimitiveIterator$OfDouble;
  #203 = NameAndType        #47:#48       // spliterator:()Ljava/util/Spliterator$OfDouble;
  #204 = Methodref          #2.#203       // scala/collection/convert/impl/DoubleChampStepper.spliterator:()Ljava/util/Spliterator$OfDouble;
  #205 = Utf8               ()Lscala/collection/convert/impl/ChampStepperBase;
  #206 = NameAndType        #139:#140     // semiclone:()Lscala/collection/convert/impl/DoubleChampStepper;
  #207 = Methodref          #2.#206       // scala/collection/convert/impl/DoubleChampStepper.semiclone:()Lscala/collection/convert/impl/DoubleChampStepper;
  #208 = NameAndType        #134:#135     // nextStep:()D
  #209 = Methodref          #2.#208       // scala/collection/convert/impl/DoubleChampStepper.nextStep:()D
  #210 = Utf8               boxToDouble
  #211 = Utf8               (D)Ljava/lang/Double;
  #212 = NameAndType        #210:#211     // boxToDouble:(D)Ljava/lang/Double;
  #213 = Methodref          #168.#212     // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
  #214 = Utf8               (ILscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;)V
  #215 = Utf8               _maxSize
  #216 = NameAndType        #35:#174      // "<init>":(I)V
  #217 = Methodref          #5.#216       // scala/collection/convert/impl/ChampStepperBase."<init>":(I)V
  #218 = Utf8               Signature
  #219 = Utf8               Code
  #220 = Utf8               LineNumberTable
  #221 = Utf8               LocalVariableTable
  #222 = Utf8               MethodParameters
  #223 = Utf8               StackMapTable
  #224 = Utf8               InnerClasses
  #225 = Utf8               SourceFile
  #226 = Utf8               RuntimeVisibleAnnotations
  #227 = Utf8               ScalaInlineInfo
  #228 = Utf8               ScalaSig
{
  private final scala.Function2<T, java.lang.Object, java.lang.Object> extract;
    descriptor: Lscala/Function2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #23                          // Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;

  public static <T extends scala.collection.immutable.Node<T>> scala.collection.convert.impl.DoubleChampStepper<T> from(int, T, scala.Function2<T, java.lang.Object, java.lang.Object>);
    descriptor: (ILscala/collection/immutable/Node;Lscala/Function2;)Lscala/collection/convert/impl/DoubleChampStepper;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #34                 // Field scala/collection/convert/impl/DoubleChampStepper$.MODULE$:Lscala/collection/convert/impl/DoubleChampStepper$;
         3: pop
         4: new           #2                  // class scala/collection/convert/impl/DoubleChampStepper
         7: dup
         8: iload_0
         9: aload_2
        10: invokespecial #38                 // Method "<init>":(ILscala/Function2;)V
        13: astore_3
        14: aload_3
        15: aload_1
        16: invokevirtual #42                 // Method initRoot:(Lscala/collection/immutable/Node;)V
        19: aload_3
        20: areturn
      LineNumberTable:
        line 197: 4
        line 198: 14
        line 199: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 maxSize   I
            0      21     1  root   Lscala/collection/immutable/Node;
            0      21     2 extract   Lscala/Function2;
           14       5     3 from_ans   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #26                          // <T:Lscala/collection/immutable/Node<TT;>;>(ITT;Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;)Lscala/collection/convert/impl/DoubleChampStepper<TT;>;
    MethodParameters:
      Name                           Flags
      maxSize                        final
      root                           final
      extract                        final

  public <B extends java.lang.Object> java.util.Spliterator$OfDouble spliterator();
    descriptor: ()Ljava/util/Spliterator$OfDouble;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod scala/collection/DoubleStepper.spliterator$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #49                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfDouble;

  public <B extends java.lang.Object> java.util.PrimitiveIterator$OfDouble javaIterator();
    descriptor: ()Ljava/util/PrimitiveIterator$OfDouble;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod scala/collection/DoubleStepper.javaIterator$:(Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #57                          // <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfDouble;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod scala/collection/DoubleStepper.spliterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #64                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/collection/DoubleStepper.javaIterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #71                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #83                 // InterfaceMethod scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
         4: ireturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #89                 // InterfaceMethod scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
         4: lreturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #96                 // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #92                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #100                // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #92                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #104                // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #92                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #109                // InterfaceMethod scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #64                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #113                // InterfaceMethod scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #64                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #118                // InterfaceMethod scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #71                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #122                // InterfaceMethod scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #71                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #129                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #125                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.Function2<T, java.lang.Object, java.lang.Object> extract();
    descriptor: ()Lscala/Function2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #133                // Field extract:Lscala/Function2;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #131                         // ()Lscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;

  public double nextStep();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #138                // Method nextStep$mcD$sp:()D
         4: dreturn
      LineNumberTable:
        line 184: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public scala.collection.convert.impl.DoubleChampStepper<T> semiclone();
    descriptor: ()Lscala/collection/convert/impl/DoubleChampStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #2                  // class scala/collection/convert/impl/DoubleChampStepper
         3: dup
         4: iconst_0
         5: aload_0
         6: invokevirtual #143                // Method extract:()Lscala/Function2;
         9: invokespecial #38                 // Method "<init>":(ILscala/Function2;)V
        12: areturn
      LineNumberTable:
        line 193: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
    Signature: #141                         // ()Lscala/collection/convert/impl/DoubleChampStepper<TT;>;

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #147                // Method hasStep:()Z
         4: ifeq          53
         7: aload_0
         8: invokevirtual #143                // Method extract:()Lscala/Function2;
        11: aload_0
        12: invokevirtual #151                // Method currentValueNode:()Lscala/collection/immutable/Node;
        15: aload_0
        16: invokevirtual #154                // Method currentValueCursor:()I
        19: invokestatic  #160                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        22: invokeinterface #166,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        27: invokestatic  #172                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
        30: dstore_1
        31: aload_0
        32: aload_0
        33: invokevirtual #154                // Method currentValueCursor:()I
        36: iconst_1
        37: iadd
        38: invokevirtual #176                // Method currentValueCursor_$eq:(I)V
        41: aload_0
        42: aload_0
        43: invokevirtual #178                // Method maxSize:()I
        46: iconst_1
        47: isub
        48: invokevirtual #181                // Method maxSize_$eq:(I)V
        51: dload_1
        52: dreturn
        53: getstatic     #186                // Field scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
        56: pop
        57: new           #188                // class java/util/NoSuchElementException
        60: dup
        61: ldc           #190                // String Empty Stepper
        63: invokespecial #193                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        66: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 53 /* same */
      LineNumberTable:
        line 185: 0
        line 186: 7
        line 187: 31
        line 188: 41
        line 189: 51
        line 191: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31      21     1   ans   D
            0      67     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public final scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #199                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #79                 // class scala/collection/Stepper
         7: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public final scala.collection.DoubleStepper trySplit();
    descriptor: ()Lscala/collection/DoubleStepper;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #199                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #7                  // class scala/collection/DoubleStepper
         7: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public java.util.Iterator javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #202                // Method javaIterator:()Ljava/util/PrimitiveIterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public java.util.Spliterator spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #204                // Method spliterator:()Ljava/util/Spliterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public scala.collection.convert.impl.ChampStepperBase semiclone();
    descriptor: ()Lscala/collection/convert/impl/ChampStepperBase;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #207                // Method semiclone:()Lscala/collection/convert/impl/DoubleChampStepper;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public java.lang.Object nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #209                // Method nextStep:()D
         4: invokestatic  #213                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
         7: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/DoubleChampStepper;

  public scala.collection.convert.impl.DoubleChampStepper(int, scala.Function2<T, java.lang.Object, java.lang.Object>);
    descriptor: (ILscala/Function2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #133                // Field extract:Lscala/Function2;
         5: aload_0
         6: iload_1
         7: invokespecial #217                // Method scala/collection/convert/impl/ChampStepperBase."<init>":(I)V
        10: return
      LineNumberTable:
        line 181: 0
        line 182: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/convert/impl/DoubleChampStepper;
            0      11     1 _maxSize   I
            0      11     2 extract   Lscala/Function2;
    Signature: #214                         // (ILscala/Function2<TT;Ljava/lang/Object;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      _maxSize                       final
      extract                        final
}
InnerClasses:
  public static #16= #13 of #15;          // OfDouble=class java/util/PrimitiveIterator$OfDouble of class java/util/PrimitiveIterator
  public static #16= #18 of #20;          // OfDouble=class java/util/Spliterator$OfDouble of class java/util/Spliterator
Signature: #3                           // <T:Lscala/collection/immutable/Node<TT;>;>Lscala/collection/convert/impl/ChampStepperBase<Ljava/lang/Object;TT;Lscala/collection/DoubleStepper;Lscala/collection/convert/impl/DoubleChampStepper<TT;>;>;Lscala/collection/DoubleStepper;
SourceFile: "ChampStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005e3Qa\u0003\u0007\u0003!QA\u0001B\r\u0001\u0003\u0002\u0003\u0006Ia\r\u0005\tm\u0001\u0011)\u0019!C\to!A1\b\u0001B\u0001B\u0003%\u0001\bC\u0003=\u0001\u0011\u0005Q\bC\u0003A\u0001\u0011\u0005\u0011\tC\u0003C\u0001\u0011\u00051i\u0002\u0004E\u0019!\u0005\u0001#\u0012\u0004\u0007\u00171A\t\u0001\u0005$\t\u000bqBA\u0011\u0001&\t\u000b-CA\u0011\u0001\'\u0003%\u0011{WO\u00197f\u0007\"\fW\u000e]*uKB\u0004XM\u001d\u0006\u0003\u001b9\tA![7qY*\u0011q\u0002E\u0001\bG>tg/\u001a:u\u0015\t\t\"#\u0001\u0006d_2dWm\u0019;j_:T\u0011aE\u0001\u0006g\u000e\fG.Y\u000b\u0003+\u0001\u001a2\u0001\u0001\f.!\u00199\u0002D\u0007\u0010.c5\tA\"\u0003\u0002\u001a\u0019\t\u00012\t[1naN#X\r\u001d9fe\n\u000b7/\u001a\t\u00037qi\u0011AE\u0005\u0003;I\u0011a\u0001R8vE2,\u0007CA\u0010!\u0019\u0001!Q!\t\u0001C\u0002\r\u0012\u0011\u0001V\u0002\u0001#\t!s\u0005\u0005\u0002\u001cK%\u0011aE\u0005\u0002\u0005\u001dVdG\u000eE\u0002)Wyi\u0011!\u000b\u0006\u0003UA\t\u0011\"[7nkR\f\'\r\\3\n\u00051J#\u0001\u0002(pI\u0016\u0004\"AL\u0018\u000e\u0003AI!\u0001\r\t\u0003\u001b\u0011{WO\u00197f\'R,\u0007\u000f]3s!\r9\u0002AH\u0001\t?6\f\u0007pU5{KB\u00111\u0004N\u0005\u0003kI\u00111!\u00138u\u0003\u001d)\u0007\u0010\u001e:bGR,\u0012\u0001\u000f\t\u00067er2GG\u0005\u0003uI\u0011\u0011BR;oGRLwN\u001c\u001a\u0002\u0011\u0015DHO]1di\u0002\na\u0001P5oSRtDcA\u0019?\u007f!)!\u0007\u0002a\u0001g!)a\u0007\u0002a\u0001q\u0005Aa.\u001a=u\'R,\u0007\u000fF\u0001\u001b\u0003%\u0019X-\\5dY>tW\rF\u00012\u0003I!u.\u001e2mK\u000eC\u0017-\u001c9Ti\u0016\u0004\b/\u001a:\u0011\u0005]A1C\u0001\u0005H!\tY\u0002*\u0003\u0002J%\t1\u0011I\\=SK\u001a$\u0012!R\u0001\u0005MJ|W.\u0006\u0002N!R!ajU+X!\r9\u0002a\u0014\t\u0003?A#Q!\t\u0006C\u0002E\u000b\"\u0001\n*\u0011\u0007!Zs\nC\u0003U\u0015\u0001\u00071\'A\u0004nCb\u001c\u0016N_3\t\u000bYS\u0001\u0019A(\u0002\tI|w\u000e\u001e\u0005\u0006m)\u0001\r\u0001\u0017\t\u00067ez5G\u0007"
    )
  ScalaInlineInfo: length = 0x81 (unknown attribute)
   01 01 00 19 00 23 00 24 01 00 15 00 82 01 00 7B
   00 7C 01 00 37 00 46 01 00 37 00 38 01 00 45 00
   46 01 00 72 00 46 01 00 77 00 46 01 00 86 00 87
   01 00 86 00 C5 01 00 88 00 87 01 00 4C 00 4D 01
   00 54 00 55 01 00 8B 00 CD 01 00 8B 00 8C 01 00
   2F 00 30 01 00 2F 00 3F 01 00 3E 00 3F 01 00 69
   00 3F 01 00 6E 00 3F 01 00 C4 00 C8 01 00 C4 00
   5B 01 00 5A 00 5B 01 00 61 00 5B 01 00 65 00 5B
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
