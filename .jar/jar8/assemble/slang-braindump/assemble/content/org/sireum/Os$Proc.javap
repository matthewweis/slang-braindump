Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/Os$Proc.class
  Last modified May 29, 2022; size 26098 bytes
  SHA-256 checksum 50e3090ba4dc1cafdf2455c2d4144135d07114f84f2a96c74b5f0c64baf2fd85
  Compiled from "Os.scala"
public final class org.sireum.Os$Proc implements org.sireum.OsProto$Proc,org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Os$Proc
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 21, methods: 100, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/Os$Proc
    #2 = Class              #1            // org/sireum/Os$Proc
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/OsProto$Proc
    #6 = Class              #5            // org/sireum/OsProto$Proc
    #7 = Utf8               org/sireum/DatatypeSig
    #8 = Class              #7            // org/sireum/DatatypeSig
    #9 = Utf8               Os.scala
   #10 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #11 = Class              #10           // java/lang/invoke/MethodHandles$Lookup
   #12 = Utf8               java/lang/invoke/MethodHandles
   #13 = Class              #12           // java/lang/invoke/MethodHandles
   #14 = Utf8               Lookup
   #15 = Utf8               org/sireum/Os$Ext$
   #16 = Class              #15           // org/sireum/Os$Ext$
   #17 = Utf8               org/sireum/Os
   #18 = Class              #17           // org/sireum/Os
   #19 = Utf8               Ext$
   #20 = Utf8               org/sireum/Os$Path
   #21 = Class              #20           // org/sireum/Os$Path
   #22 = Utf8               Path
   #23 = Utf8               org/sireum/Os$Path$
   #24 = Class              #23           // org/sireum/Os$Path$
   #25 = Utf8               Path$
   #26 = Utf8               org/sireum/Os$Path$Impl
   #27 = Class              #26           // org/sireum/Os$Path$Impl
   #28 = Utf8               Impl
   #29 = Utf8               org/sireum/Os$Path$Impl$
   #30 = Class              #29           // org/sireum/Os$Path$Impl$
   #31 = Utf8               Impl$
   #32 = Utf8               Proc
   #33 = Utf8               org/sireum/Os$Proc$
   #34 = Class              #33           // org/sireum/Os$Proc$
   #35 = Utf8               Proc$
   #36 = Utf8               org/sireum/Os$Proc$Result
   #37 = Class              #36           // org/sireum/Os$Proc$Result
   #38 = Utf8               Result
   #39 = Utf8               org/sireum/OsProto$Path
   #40 = Class              #39           // org/sireum/OsProto$Path
   #41 = Utf8               org/sireum/OsProto
   #42 = Class              #41           // org/sireum/OsProto
   #43 = Utf8               org/sireum/OsProto$Proc$
   #44 = Class              #43           // org/sireum/OsProto$Proc$
   #45 = Utf8               org/sireum/OsProto$Proc$Result
   #46 = Class              #45           // org/sireum/OsProto$Proc$Result
   #47 = Utf8               org/sireum/ST$Any
   #48 = Class              #47           // org/sireum/ST$Any
   #49 = Utf8               org/sireum/ST
   #50 = Class              #49           // org/sireum/ST
   #51 = Utf8               Any
   #52 = Utf8               org/sireum/ST$Any$
   #53 = Class              #52           // org/sireum/ST$Any$
   #54 = Utf8               Any$
   #55 = Utf8               org/sireum/ST$Arg
   #56 = Class              #55           // org/sireum/ST$Arg
   #57 = Utf8               Arg
   #58 = Utf8               hashCode
   #59 = Utf8               I
   #60 = Utf8               $content
   #61 = Utf8               Lscala/collection/immutable/Seq;
   #62 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #63 = Utf8               _cmds
   #64 = Utf8               Lorg/sireum/IS;
   #65 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
   #66 = Utf8               _wd
   #67 = Utf8               Lorg/sireum/Os$Path;
   #68 = Utf8               _envMap
   #69 = Utf8               Lorg/sireum/Map;
   #70 = Utf8               Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;
   #71 = Utf8               _shouldAddEnv
   #72 = Utf8               Z
   #73 = Utf8               _bin
   #74 = Utf8               _in
   #75 = Utf8               Ljava/lang/String;
   #76 = Utf8               _isErrAsOut
   #77 = Utf8               _shouldOutputConsole
   #78 = Utf8               _isErrBuffered
   #79 = Utf8               _shouldPrintEnv
   #80 = Utf8               _shouldPrintCommands
   #81 = Utf8               _timeoutInMillis
   #82 = Utf8               Lorg/sireum/Z;
   #83 = Utf8               _shouldUseStandardLib
   #84 = Utf8               _isScript
   #85 = Utf8               _boutLineActionOpt
   #86 = Utf8               _outLineActionOpt
   #87 = Utf8               Lscala/Function1;
   #88 = Utf8               Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;
   #89 = Utf8               _berrLineActionOpt
   #90 = Utf8               _errLineActionOpt
   #91 = Utf8               bitmap$0
   #92 = Utf8               B
   #93 = Utf8               hash
   #94 = Utf8               ()Lorg/sireum/Z;
   #95 = Utf8               hash$
   #96 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #97 = NameAndType        #95:#96       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #98 = InterfaceMethodref #8.#97        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #99 = Utf8               this
  #100 = Utf8               Lorg/sireum/Os$Proc;
  #101 = Utf8               $cannotMixImmutableAndMutable
  #102 = Utf8               ()Lscala/runtime/Nothing$;
  #103 = Utf8               org/sireum/Immutable
  #104 = Class              #103          // org/sireum/Immutable
  #105 = Utf8               $cannotMixImmutableAndMutable$
  #106 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #107 = NameAndType        #105:#106     // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #108 = InterfaceMethodref #104.#107     // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #109 = Utf8               $hasEquals
  #110 = Utf8               ()Z
  #111 = Utf8               $hasEquals$
  #112 = Utf8               (Lorg/sireum/Immutable;)Z
  #113 = NameAndType        #111:#112     // $hasEquals$:(Lorg/sireum/Immutable;)Z
  #114 = InterfaceMethodref #104.#113     // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
  #115 = Utf8               $hasString
  #116 = Utf8               $hasString$
  #117 = NameAndType        #116:#112     // $hasString$:(Lorg/sireum/Immutable;)Z
  #118 = InterfaceMethodref #104.#117     // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
  #119 = Utf8               $clone
  #120 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
  #121 = Utf8               org/sireum/$internal/ImmutableMarker
  #122 = Class              #121          // org/sireum/$internal/ImmutableMarker
  #123 = Utf8               $clone$
  #124 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #125 = NameAndType        #123:#124     // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #126 = InterfaceMethodref #122.#125     // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #127 = Utf8               cmds
  #128 = Utf8               ()Lorg/sireum/IS;
  #129 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
  #130 = NameAndType        #63:#64       // _cmds:Lorg/sireum/IS;
  #131 = Fieldref           #2.#130       // org/sireum/Os$Proc._cmds:Lorg/sireum/IS;
  #132 = Utf8               getCmds
  #133 = Utf8               wd
  #134 = Utf8               ()Lorg/sireum/Os$Path;
  #135 = NameAndType        #66:#67       // _wd:Lorg/sireum/Os$Path;
  #136 = Fieldref           #2.#135       // org/sireum/Os$Proc._wd:Lorg/sireum/Os$Path;
  #137 = Utf8               getWd
  #138 = Utf8               envMap
  #139 = Utf8               ()Lorg/sireum/Map;
  #140 = Utf8               ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;
  #141 = NameAndType        #68:#69       // _envMap:Lorg/sireum/Map;
  #142 = Fieldref           #2.#141       // org/sireum/Os$Proc._envMap:Lorg/sireum/Map;
  #143 = Utf8               getEnvMap
  #144 = Utf8               shouldAddEnv
  #145 = NameAndType        #71:#72       // _shouldAddEnv:Z
  #146 = Fieldref           #2.#145       // org/sireum/Os$Proc._shouldAddEnv:Z
  #147 = Utf8               getShouldAddEnv
  #148 = Utf8               in
  #149 = Utf8               ()Lorg/sireum/Option;
  #150 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/String;>;
  #151 = NameAndType        #73:#72       // _bin:Z
  #152 = Fieldref           #2.#151       // org/sireum/Os$Proc._bin:Z
  #153 = Utf8               org/sireum/None$
  #154 = Class              #153          // org/sireum/None$
  #155 = Utf8               MODULE$
  #156 = Utf8               Lorg/sireum/None$;
  #157 = NameAndType        #155:#156     // MODULE$:Lorg/sireum/None$;
  #158 = Fieldref           #154.#157     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #159 = Utf8               apply
  #160 = Utf8               ()Lorg/sireum/None;
  #161 = NameAndType        #159:#160     // apply:()Lorg/sireum/None;
  #162 = Methodref          #154.#161     // org/sireum/None$.apply:()Lorg/sireum/None;
  #163 = Utf8               org/sireum/Some$
  #164 = Class              #163          // org/sireum/Some$
  #165 = Utf8               Lorg/sireum/Some$;
  #166 = NameAndType        #155:#165     // MODULE$:Lorg/sireum/Some$;
  #167 = Fieldref           #164.#166     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #168 = Utf8               org/sireum/String
  #169 = Class              #168          // org/sireum/String
  #170 = NameAndType        #74:#75       // _in:Ljava/lang/String;
  #171 = Fieldref           #2.#170       // org/sireum/Os$Proc._in:Ljava/lang/String;
  #172 = Utf8               <init>
  #173 = Utf8               (Ljava/lang/String;)V
  #174 = NameAndType        #172:#173     // "<init>":(Ljava/lang/String;)V
  #175 = Methodref          #169.#174     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #176 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #177 = NameAndType        #159:#176     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #178 = Methodref          #164.#177     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #179 = Utf8               getIn
  #180 = NameAndType        #148:#149     // in:()Lorg/sireum/Option;
  #181 = Methodref          #2.#180       // org/sireum/Os$Proc.in:()Lorg/sireum/Option;
  #182 = Utf8               isErrAsOut
  #183 = NameAndType        #76:#72       // _isErrAsOut:Z
  #184 = Fieldref           #2.#183       // org/sireum/Os$Proc._isErrAsOut:Z
  #185 = Utf8               getIsErrAsOut
  #186 = Utf8               shouldOutputConsole
  #187 = NameAndType        #77:#72       // _shouldOutputConsole:Z
  #188 = Fieldref           #2.#187       // org/sireum/Os$Proc._shouldOutputConsole:Z
  #189 = Utf8               getShouldOutputConsole
  #190 = Utf8               isErrBuffered
  #191 = NameAndType        #78:#72       // _isErrBuffered:Z
  #192 = Fieldref           #2.#191       // org/sireum/Os$Proc._isErrBuffered:Z
  #193 = Utf8               getIsErrBuffered
  #194 = Utf8               shouldPrintEnv
  #195 = NameAndType        #79:#72       // _shouldPrintEnv:Z
  #196 = Fieldref           #2.#195       // org/sireum/Os$Proc._shouldPrintEnv:Z
  #197 = Utf8               getShouldPrintEnv
  #198 = Utf8               shouldPrintCommands
  #199 = NameAndType        #80:#72       // _shouldPrintCommands:Z
  #200 = Fieldref           #2.#199       // org/sireum/Os$Proc._shouldPrintCommands:Z
  #201 = Utf8               getShouldPrintCommands
  #202 = Utf8               timeoutInMillis
  #203 = NameAndType        #81:#82       // _timeoutInMillis:Lorg/sireum/Z;
  #204 = Fieldref           #2.#203       // org/sireum/Os$Proc._timeoutInMillis:Lorg/sireum/Z;
  #205 = Utf8               getTimeoutInMillis
  #206 = Utf8               shouldUseStandardLib
  #207 = NameAndType        #83:#72       // _shouldUseStandardLib:Z
  #208 = Fieldref           #2.#207       // org/sireum/Os$Proc._shouldUseStandardLib:Z
  #209 = Utf8               getShouldUseStandardLib
  #210 = Utf8               isScript
  #211 = NameAndType        #84:#72       // _isScript:Z
  #212 = Fieldref           #2.#211       // org/sireum/Os$Proc._isScript:Z
  #213 = Utf8               getIsScript
  #214 = Utf8               outLineActionOpt
  #215 = Utf8               ()Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;
  #216 = NameAndType        #85:#72       // _boutLineActionOpt:Z
  #217 = Fieldref           #2.#216       // org/sireum/Os$Proc._boutLineActionOpt:Z
  #218 = NameAndType        #86:#87       // _outLineActionOpt:Lscala/Function1;
  #219 = Fieldref           #2.#218       // org/sireum/Os$Proc._outLineActionOpt:Lscala/Function1;
  #220 = Utf8               getOutLineActionOpt
  #221 = NameAndType        #214:#149     // outLineActionOpt:()Lorg/sireum/Option;
  #222 = Methodref          #2.#221       // org/sireum/Os$Proc.outLineActionOpt:()Lorg/sireum/Option;
  #223 = Utf8               errLineActionOpt
  #224 = NameAndType        #89:#72       // _berrLineActionOpt:Z
  #225 = Fieldref           #2.#224       // org/sireum/Os$Proc._berrLineActionOpt:Z
  #226 = NameAndType        #90:#87       // _errLineActionOpt:Lscala/Function1;
  #227 = Fieldref           #2.#226       // org/sireum/Os$Proc._errLineActionOpt:Lscala/Function1;
  #228 = Utf8               getErrLineActionOpt
  #229 = NameAndType        #223:#149     // errLineActionOpt:()Lorg/sireum/Option;
  #230 = Methodref          #2.#229       // org/sireum/Os$Proc.errLineActionOpt:()Lorg/sireum/Option;
  #231 = Utf8               toString
  #232 = Utf8               ()Ljava/lang/String;
  #233 = NameAndType        #115:#110     // $hasString:()Z
  #234 = Methodref          #2.#233       // org/sireum/Os$Proc.$hasString:()Z
  #235 = Utf8               string$
  #236 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #237 = NameAndType        #235:#236     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #238 = InterfaceMethodref #8.#237       // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #239 = Utf8               java/lang/StringBuilder
  #240 = Class              #239          // java/lang/StringBuilder
  #241 = Utf8               ()V
  #242 = NameAndType        #172:#241     // "<init>":()V
  #243 = Methodref          #240.#242     // java/lang/StringBuilder."<init>":()V
  #244 = String             #32           // Proc
  #245 = Utf8               append
  #246 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #247 = NameAndType        #245:#246     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #248 = Methodref          #240.#247     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #249 = Utf8               (C)Ljava/lang/StringBuilder;
  #250 = NameAndType        #245:#249     // append:(C)Ljava/lang/StringBuilder;
  #251 = Methodref          #240.#250     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #252 = Utf8               org/sireum/String$
  #253 = Class              #252          // org/sireum/String$
  #254 = Utf8               Lorg/sireum/String$;
  #255 = NameAndType        #155:#254     // MODULE$:Lorg/sireum/String$;
  #256 = Fieldref           #253.#255     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #257 = NameAndType        #127:#128     // cmds:()Lorg/sireum/IS;
  #258 = Methodref          #2.#257       // org/sireum/Os$Proc.cmds:()Lorg/sireum/IS;
  #259 = Utf8               escape
  #260 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #261 = NameAndType        #259:#260     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #262 = Methodref          #253.#261     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #263 = Utf8               ,
  #264 = String             #263          // ,
  #265 = NameAndType        #133:#134     // wd:()Lorg/sireum/Os$Path;
  #266 = Methodref          #2.#265       // org/sireum/Os$Proc.wd:()Lorg/sireum/Os$Path;
  #267 = NameAndType        #138:#139     // envMap:()Lorg/sireum/Map;
  #268 = Methodref          #2.#267       // org/sireum/Os$Proc.envMap:()Lorg/sireum/Map;
  #269 = Utf8               org/sireum/B
  #270 = Class              #269          // org/sireum/B
  #271 = NameAndType        #144:#110     // shouldAddEnv:()Z
  #272 = Methodref          #2.#271       // org/sireum/Os$Proc.shouldAddEnv:()Z
  #273 = Utf8               (Z)V
  #274 = NameAndType        #172:#273     // "<init>":(Z)V
  #275 = Methodref          #270.#274     // org/sireum/B."<init>":(Z)V
  #276 = NameAndType        #182:#110     // isErrAsOut:()Z
  #277 = Methodref          #2.#276       // org/sireum/Os$Proc.isErrAsOut:()Z
  #278 = NameAndType        #186:#110     // shouldOutputConsole:()Z
  #279 = Methodref          #2.#278       // org/sireum/Os$Proc.shouldOutputConsole:()Z
  #280 = NameAndType        #190:#110     // isErrBuffered:()Z
  #281 = Methodref          #2.#280       // org/sireum/Os$Proc.isErrBuffered:()Z
  #282 = NameAndType        #194:#110     // shouldPrintEnv:()Z
  #283 = Methodref          #2.#282       // org/sireum/Os$Proc.shouldPrintEnv:()Z
  #284 = NameAndType        #198:#110     // shouldPrintCommands:()Z
  #285 = Methodref          #2.#284       // org/sireum/Os$Proc.shouldPrintCommands:()Z
  #286 = NameAndType        #202:#94      // timeoutInMillis:()Lorg/sireum/Z;
  #287 = Methodref          #2.#286       // org/sireum/Os$Proc.timeoutInMillis:()Lorg/sireum/Z;
  #288 = NameAndType        #206:#110     // shouldUseStandardLib:()Z
  #289 = Methodref          #2.#288       // org/sireum/Os$Proc.shouldUseStandardLib:()Z
  #290 = NameAndType        #210:#110     // isScript:()Z
  #291 = Methodref          #2.#290       // org/sireum/Os$Proc.isScript:()Z
  #292 = NameAndType        #231:#232     // toString:()Ljava/lang/String;
  #293 = Methodref          #240.#292     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #294 = Utf8               sb
  #295 = Utf8               Ljava/lang/StringBuilder;
  #296 = Utf8               java/lang/String
  #297 = Class              #296          // java/lang/String
  #298 = Utf8               string
  #299 = Methodref          #2.#292       // org/sireum/Os$Proc.toString:()Ljava/lang/String;
  #300 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #301 = NameAndType        #159:#300     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #302 = Methodref          #253.#301     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #303 = Utf8               hashCode$lzycompute
  #304 = Utf8               ()I
  #305 = NameAndType        #91:#92       // bitmap$0:B
  #306 = Fieldref           #2.#305       // org/sireum/Os$Proc.bitmap$0:B
  #307 = NameAndType        #109:#110     // $hasEquals:()Z
  #308 = Methodref          #2.#307       // org/sireum/Os$Proc.$hasEquals:()Z
  #309 = NameAndType        #58:#304      // hashCode:()I
  #310 = Methodref          #4.#309       // java/lang/Object.hashCode:()I
  #311 = Utf8               scala/package$
  #312 = Class              #311          // scala/package$
  #313 = Utf8               Lscala/package$;
  #314 = NameAndType        #155:#313     // MODULE$:Lscala/package$;
  #315 = Fieldref           #312.#314     // scala/package$.MODULE$:Lscala/package$;
  #316 = Utf8               Seq
  #317 = Utf8               ()Lscala/collection/immutable/Seq$;
  #318 = NameAndType        #316:#317     // Seq:()Lscala/collection/immutable/Seq$;
  #319 = Methodref          #312.#318     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #320 = Utf8               scala/runtime/ScalaRunTime$
  #321 = Class              #320          // scala/runtime/ScalaRunTime$
  #322 = Utf8               Lscala/runtime/ScalaRunTime$;
  #323 = NameAndType        #155:#322     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #324 = Fieldref           #321.#323     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #325 = Utf8               getClass
  #326 = Utf8               ()Ljava/lang/Class;
  #327 = NameAndType        #325:#326     // getClass:()Ljava/lang/Class;
  #328 = Methodref          #2.#327       // org/sireum/Os$Proc.getClass:()Ljava/lang/Class;
  #329 = Utf8               java/lang/Class
  #330 = Class              #329          // java/lang/Class
  #331 = Utf8               getName
  #332 = NameAndType        #331:#232     // getName:()Ljava/lang/String;
  #333 = Methodref          #330.#332     // java/lang/Class.getName:()Ljava/lang/String;
  #334 = Utf8               genericWrapArray
  #335 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #336 = NameAndType        #334:#335     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #337 = Methodref          #321.#336     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #338 = Utf8               scala/collection/immutable/Seq$
  #339 = Class              #338          // scala/collection/immutable/Seq$
  #340 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #341 = NameAndType        #159:#340     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #342 = Methodref          #339.#341     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #343 = Utf8               scala/collection/Seq
  #344 = Class              #343          // scala/collection/Seq
  #345 = InterfaceMethodref #344.#309     // scala/collection/Seq.hashCode:()I
  #346 = NameAndType        #58:#59       // hashCode:I
  #347 = Fieldref           #2.#346       // org/sireum/Os$Proc.hashCode:I
  #348 = Utf8               java/lang/Throwable
  #349 = Class              #348          // java/lang/Throwable
  #350 = NameAndType        #303:#304     // hashCode$lzycompute:()I
  #351 = Methodref          #2.#350       // org/sireum/Os$Proc.hashCode$lzycompute:()I
  #352 = Utf8               equals
  #353 = Utf8               (Ljava/lang/Object;)Z
  #354 = Utf8               o
  #355 = NameAndType        #352:#353     // equals:(Ljava/lang/Object;)Z
  #356 = Methodref          #4.#355       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #357 = Methodref          #2.#309       // org/sireum/Os$Proc.hashCode:()I
  #358 = Utf8               Ljava/lang/Object;
  #359 = Utf8               org/sireum/IS
  #360 = Class              #359          // org/sireum/IS
  #361 = Utf8               org/sireum/Map
  #362 = Class              #361          // org/sireum/Map
  #363 = Utf8               org/sireum/Option
  #364 = Class              #363          // org/sireum/Option
  #365 = Utf8               org/sireum/Z
  #366 = Class              #365          // org/sireum/Z
  #367 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
  #368 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Os$Path;Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;ZLorg/sireum/Option<Lorg/sireum/String;>;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;)Lorg/sireum/Os$Proc;
  #369 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)V
  #370 = NameAndType        #172:#369     // "<init>":(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)V
  #371 = Methodref          #2.#370       // org/sireum/Os$Proc."<init>":(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)V
  #372 = Utf8               Lorg/sireum/Option;
  #373 = Utf8               apply$default$1
  #374 = Utf8               apply$default$2
  #375 = Utf8               apply$default$3
  #376 = Utf8               apply$default$4
  #377 = Utf8               apply$default$5
  #378 = Utf8               apply$default$6
  #379 = Utf8               apply$default$7
  #380 = Utf8               apply$default$8
  #381 = Utf8               apply$default$9
  #382 = Utf8               apply$default$10
  #383 = Utf8               apply$default$11
  #384 = Utf8               apply$default$12
  #385 = Utf8               apply$default$13
  #386 = Utf8               apply$default$14
  #387 = Utf8               apply$default$15
  #388 = Utf8               $content$lzycompute
  #389 = Utf8               ()Lscala/collection/immutable/Seq;
  #390 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #391 = Utf8               scala/Tuple2
  #392 = Class              #391          // scala/Tuple2
  #393 = Utf8               type
  #394 = String             #393          // type
  #395 = Utf8               List
  #396 = Utf8               ()Lscala/collection/immutable/List$;
  #397 = NameAndType        #395:#396     // List:()Lscala/collection/immutable/List$;
  #398 = Methodref          #312.#397     // scala/package$.List:()Lscala/collection/immutable/List$;
  #399 = Utf8               org
  #400 = String             #399          // org
  #401 = Utf8               sireum
  #402 = String             #401          // sireum
  #403 = Utf8               [Ljava/lang/Object;
  #404 = Class              #403          // "[Ljava/lang/Object;"
  #405 = Utf8               wrapRefArray
  #406 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #407 = NameAndType        #405:#406     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #408 = Methodref          #321.#407     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #409 = Utf8               scala/collection/immutable/List$
  #410 = Class              #409          // scala/collection/immutable/List$
  #411 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #412 = NameAndType        #159:#411     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #413 = Methodref          #410.#412     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #414 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #415 = NameAndType        #172:#414     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #416 = Methodref          #392.#415     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #417 = String             #127          // cmds
  #418 = String             #133          // wd
  #419 = String             #138          // envMap
  #420 = String             #144          // shouldAddEnv
  #421 = String             #148          // in
  #422 = String             #182          // isErrAsOut
  #423 = String             #186          // shouldOutputConsole
  #424 = String             #190          // isErrBuffered
  #425 = String             #194          // shouldPrintEnv
  #426 = String             #198          // shouldPrintCommands
  #427 = String             #202          // timeoutInMillis
  #428 = String             #206          // shouldUseStandardLib
  #429 = String             #210          // isScript
  #430 = String             #214          // outLineActionOpt
  #431 = String             #223          // errLineActionOpt
  #432 = Utf8               scala/collection/immutable/Seq
  #433 = Class              #432          // scala/collection/immutable/Seq
  #434 = NameAndType        #60:#61       // $content:Lscala/collection/immutable/Seq;
  #435 = Fieldref           #2.#434       // org/sireum/Os$Proc.$content:Lscala/collection/immutable/Seq;
  #436 = NameAndType        #388:#389     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #437 = Methodref          #2.#436       // org/sireum/Os$Proc.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #438 = Utf8               commands
  #439 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
  #440 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/Os$Proc;
  #441 = Utf8               cs
  #442 = Utf8               $plus$plus
  #443 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/IS;
  #444 = NameAndType        #442:#443     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #445 = Methodref          #360.#444     // org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #446 = NameAndType        #374:#134     // apply$default$2:()Lorg/sireum/Os$Path;
  #447 = Methodref          #2.#446       // org/sireum/Os$Proc.apply$default$2:()Lorg/sireum/Os$Path;
  #448 = NameAndType        #375:#139     // apply$default$3:()Lorg/sireum/Map;
  #449 = Methodref          #2.#448       // org/sireum/Os$Proc.apply$default$3:()Lorg/sireum/Map;
  #450 = NameAndType        #376:#110     // apply$default$4:()Z
  #451 = Methodref          #2.#450       // org/sireum/Os$Proc.apply$default$4:()Z
  #452 = NameAndType        #377:#149     // apply$default$5:()Lorg/sireum/Option;
  #453 = Methodref          #2.#452       // org/sireum/Os$Proc.apply$default$5:()Lorg/sireum/Option;
  #454 = NameAndType        #378:#110     // apply$default$6:()Z
  #455 = Methodref          #2.#454       // org/sireum/Os$Proc.apply$default$6:()Z
  #456 = NameAndType        #379:#110     // apply$default$7:()Z
  #457 = Methodref          #2.#456       // org/sireum/Os$Proc.apply$default$7:()Z
  #458 = NameAndType        #380:#110     // apply$default$8:()Z
  #459 = Methodref          #2.#458       // org/sireum/Os$Proc.apply$default$8:()Z
  #460 = NameAndType        #381:#110     // apply$default$9:()Z
  #461 = Methodref          #2.#460       // org/sireum/Os$Proc.apply$default$9:()Z
  #462 = NameAndType        #382:#110     // apply$default$10:()Z
  #463 = Methodref          #2.#462       // org/sireum/Os$Proc.apply$default$10:()Z
  #464 = NameAndType        #383:#94      // apply$default$11:()Lorg/sireum/Z;
  #465 = Methodref          #2.#464       // org/sireum/Os$Proc.apply$default$11:()Lorg/sireum/Z;
  #466 = NameAndType        #384:#110     // apply$default$12:()Z
  #467 = Methodref          #2.#466       // org/sireum/Os$Proc.apply$default$12:()Z
  #468 = NameAndType        #385:#110     // apply$default$13:()Z
  #469 = Methodref          #2.#468       // org/sireum/Os$Proc.apply$default$13:()Z
  #470 = NameAndType        #386:#149     // apply$default$14:()Lorg/sireum/Option;
  #471 = Methodref          #2.#470       // org/sireum/Os$Proc.apply$default$14:()Lorg/sireum/Option;
  #472 = NameAndType        #387:#149     // apply$default$15:()Lorg/sireum/Option;
  #473 = Methodref          #2.#472       // org/sireum/Os$Proc.apply$default$15:()Lorg/sireum/Option;
  #474 = NameAndType        #159:#367     // apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
  #475 = Methodref          #2.#474       // org/sireum/Os$Proc.apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
  #476 = Utf8               thisL
  #477 = Utf8               at
  #478 = Utf8               (Lorg/sireum/OsProto$Path;)Lorg/sireum/Os$Proc;
  #479 = Utf8               dir
  #480 = Utf8               Lorg/sireum/Os$Path$Impl$;
  #481 = NameAndType        #155:#480     // MODULE$:Lorg/sireum/Os$Path$Impl$;
  #482 = Fieldref           #30.#481      // org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
  #483 = NameAndType        #298:#232     // string:()Ljava/lang/String;
  #484 = InterfaceMethodref #40.#483      // org/sireum/OsProto$Path.string:()Ljava/lang/String;
  #485 = Utf8               (Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
  #486 = NameAndType        #159:#485     // apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
  #487 = Methodref          #30.#486      // org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
  #488 = NameAndType        #373:#128     // apply$default$1:()Lorg/sireum/IS;
  #489 = Methodref          #2.#488       // org/sireum/Os$Proc.apply$default$1:()Lorg/sireum/IS;
  #490 = Utf8               x$1
  #491 = Utf8               Lorg/sireum/Os$Path$Impl;
  #492 = Utf8               x$2
  #493 = Utf8               x$3
  #494 = Utf8               x$4
  #495 = Utf8               x$5
  #496 = Utf8               x$6
  #497 = Utf8               x$7
  #498 = Utf8               x$8
  #499 = Utf8               x$9
  #500 = Utf8               x$10
  #501 = Utf8               x$11
  #502 = Utf8               x$12
  #503 = Utf8               x$13
  #504 = Utf8               x$14
  #505 = Utf8               x$15
  #506 = Utf8               Lorg/sireum/OsProto$Path;
  #507 = Utf8               env
  #508 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<Lorg/sireum/String;Lorg/sireum/String;>;>;)Lorg/sireum/Os$Proc;
  #509 = Utf8               m
  #510 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Map;
  #511 = NameAndType        #442:#510     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Map;
  #512 = Methodref          #362.#511     // org/sireum/Map.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Map;
  #513 = Utf8               input
  #514 = Utf8               (Ljava/lang/String;)Lorg/sireum/Os$Proc;
  #515 = Utf8               content
  #516 = Utf8               Lorg/sireum/Some;
  #517 = Utf8               timeout
  #518 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Os$Proc;
  #519 = Utf8               millis
  #520 = Utf8               dontInheritEnv
  #521 = Utf8               ()Lorg/sireum/Os$Proc;
  #522 = Utf8               org/sireum/package$
  #523 = Class              #522          // org/sireum/package$
  #524 = Utf8               Lorg/sireum/package$;
  #525 = NameAndType        #155:#524     // MODULE$:Lorg/sireum/package$;
  #526 = Fieldref           #523.#525     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #527 = Utf8               F
  #528 = NameAndType        #527:#110     // F:()Z
  #529 = Methodref          #523.#528     // org/sireum/package$.F:()Z
  #530 = Utf8               redirectErr
  #531 = Utf8               T
  #532 = NameAndType        #531:#110     // T:()Z
  #533 = Methodref          #523.#532     // org/sireum/package$.T:()Z
  #534 = Utf8               bufferErr
  #535 = Utf8               console
  #536 = Utf8               echoEnv
  #537 = Utf8               echo
  #538 = Utf8               standard
  #539 = Utf8               script
  #540 = Utf8               outLineAction
  #541 = Utf8               (Lscala/Function1;)Lorg/sireum/Os$Proc;
  #542 = Utf8               (Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;)Lorg/sireum/Os$Proc;
  #543 = Utf8               f
  #544 = Utf8               errLineAction
  #545 = Utf8               run
  #546 = Utf8               ()Lorg/sireum/Os$Proc$Result;
  #547 = Utf8               Lorg/sireum/Os$Ext$;
  #548 = NameAndType        #155:#547     // MODULE$:Lorg/sireum/Os$Ext$;
  #549 = Fieldref           #16.#548      // org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
  #550 = Utf8               proc
  #551 = Utf8               (Lorg/sireum/Os$Proc;)Lorg/sireum/Os$Proc$Result;
  #552 = NameAndType        #550:#551     // proc:(Lorg/sireum/Os$Proc;)Lorg/sireum/Os$Proc$Result;
  #553 = Methodref          #16.#552      // org/sireum/Os$Ext$.proc:(Lorg/sireum/Os$Proc;)Lorg/sireum/Os$Proc$Result;
  #554 = Utf8               r
  #555 = Utf8               Lorg/sireum/Os$Proc$Result;
  #556 = Utf8               runCheck
  #557 = NameAndType        #545:#546     // run:()Lorg/sireum/Os$Proc$Result;
  #558 = Methodref          #2.#557       // org/sireum/Os$Proc.run:()Lorg/sireum/Os$Proc$Result;
  #559 = Utf8               org/sireum/B$
  #560 = Class              #559          // org/sireum/B$
  #561 = Utf8               Lorg/sireum/B$;
  #562 = NameAndType        #155:#561     // MODULE$:Lorg/sireum/B$;
  #563 = Fieldref           #560.#562     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #564 = Utf8               ok
  #565 = NameAndType        #564:#110     // ok:()Z
  #566 = InterfaceMethodref #37.#565      // org/sireum/Os$Proc$Result.ok:()Z
  #567 = Utf8               unary_$bang$extension
  #568 = Utf8               (Z)Z
  #569 = NameAndType        #567:#568     // unary_$bang$extension:(Z)Z
  #570 = Methodref          #560.#569     // org/sireum/B$.unary_$bang$extension:(Z)Z
  #571 = Utf8               $4B
  #572 = NameAndType        #571:#568     // $4B:(Z)Z
  #573 = Methodref          #560.#572     // org/sireum/B$.$4B:(Z)Z
  #574 = Utf8               org/sireum/ST$
  #575 = Class              #574          // org/sireum/ST$
  #576 = Utf8               Lorg/sireum/ST$;
  #577 = NameAndType        #155:#576     // MODULE$:Lorg/sireum/ST$;
  #578 = Fieldref           #575.#577     // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
  #579 = Utf8               Error encountered when running:
  #580 = String             #579          // Error encountered when running:
  #581 = Utf8               , exit code:
  #582 = String             #581          // , exit code:
  #583 = Utf8               \n              |
  #584 = String             #583          // \n              |
  #585 = Utf8
  #586 = String             #585          //
  #587 = Utf8               Lorg/sireum/ST$Any$;
  #588 = NameAndType        #155:#587     // MODULE$:Lorg/sireum/ST$Any$;
  #589 = Fieldref           #53.#588      // org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
  #590 = Utf8               elements
  #591 = NameAndType        #590:#389     // elements:()Lscala/collection/immutable/Seq;
  #592 = Methodref          #360.#591     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #593 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #594 = MethodType         #593          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #595 = Utf8               $anonfun$runCheck$1
  #596 = NameAndType        #595:#593     // $anonfun$runCheck$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #597 = Methodref          #2.#596       // org/sireum/Os$Proc.$anonfun$runCheck$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #598 = MethodHandle       6:#597        // REF_invokeStatic org/sireum/Os$Proc.$anonfun$runCheck$1:(Ljava/lang/Object;)Ljava/lang/Object;
  #599 = Integer            1
  #600 = Utf8               java/lang/invoke/LambdaMetafactory
  #601 = Class              #600          // java/lang/invoke/LambdaMetafactory
  #602 = Utf8               altMetafactory
  #603 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #604 = NameAndType        #602:#603     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #605 = Methodref          #601.#604     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #606 = MethodHandle       6:#605        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #607 = Utf8               ()Lscala/Function1;
  #608 = NameAndType        #159:#607     // apply:()Lscala/Function1;
  #609 = InvokeDynamic      #0:#608       // #0:apply:()Lscala/Function1;
  #610 = Utf8               map
  #611 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #612 = NameAndType        #610:#611     // map:(Lscala/Function1;)Ljava/lang/Object;
  #613 = InterfaceMethodref #433.#612     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #614 = Utf8
  #615 = String             #614          //
  #616 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #617 = NameAndType        #159:#616     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #618 = Methodref          #53.#617      // org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #619 = Utf8               org/sireum/$internal/Option$
  #620 = Class              #619          // org/sireum/$internal/Option$
  #621 = Utf8               Lorg/sireum/$internal/Option$;
  #622 = NameAndType        #155:#621     // MODULE$:Lorg/sireum/$internal/Option$;
  #623 = Fieldref           #620.#622     // org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
  #624 = Utf8               exitCode
  #625 = NameAndType        #624:#94      // exitCode:()Lorg/sireum/Z;
  #626 = InterfaceMethodref #37.#625      // org/sireum/Os$Proc$Result.exitCode:()Lorg/sireum/Z;
  #627 = NameAndType        #159:#593     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #628 = Methodref          #620.#627     // org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #629 = Utf8               err
  #630 = NameAndType        #629:#232     // err:()Ljava/lang/String;
  #631 = InterfaceMethodref #37.#630      // org/sireum/Os$Proc$Result.err:()Ljava/lang/String;
  #632 = Utf8                         st\"\"\"Error encountered when running: ${(cmds, \" \")}, exit code: ${r.exitCode}\n              |${r.err}\"\"\"
  #633 = String             #632          //           st\"\"\"Error encountered when running: ${(cmds, \" \")}, exit code: ${r.exitCode}\n              |${r.err}\"\"\"
  #634 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #635 = NameAndType        #159:#634     // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #636 = Methodref          #575.#635     // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #637 = Utf8               render
  #638 = NameAndType        #637:#232     // render:()Ljava/lang/String;
  #639 = Methodref          #50.#638      // org/sireum/ST.render:()Ljava/lang/String;
  #640 = Utf8               eprintln
  #641 = Utf8               (Lscala/collection/immutable/Seq;)V
  #642 = NameAndType        #640:#641     // eprintln:(Lscala/collection/immutable/Seq;)V
  #643 = Methodref          #523.#642     // org/sireum/package$.eprintln:(Lscala/collection/immutable/Seq;)V
  #644 = Utf8               org/sireum/Os$
  #645 = Class              #644          // org/sireum/Os$
  #646 = Utf8               Lorg/sireum/Os$;
  #647 = NameAndType        #155:#646     // MODULE$:Lorg/sireum/Os$;
  #648 = Fieldref           #645.#647     // org/sireum/Os$.MODULE$:Lorg/sireum/Os$;
  #649 = Utf8               org/sireum/Z$
  #650 = Class              #649          // org/sireum/Z$
  #651 = Utf8               Lorg/sireum/Z$;
  #652 = NameAndType        #155:#651     // MODULE$:Lorg/sireum/Z$;
  #653 = Fieldref           #650.#652     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #654 = Utf8               (I)Lorg/sireum/Z;
  #655 = NameAndType        #159:#654     // apply:(I)Lorg/sireum/Z;
  #656 = Methodref          #650.#655     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #657 = Utf8               exit
  #658 = Utf8               (Lorg/sireum/Z;)V
  #659 = NameAndType        #657:#658     // exit:(Lorg/sireum/Z;)V
  #660 = Methodref          #645.#659     // org/sireum/Os$.exit:(Lorg/sireum/Z;)V
  #661 = Utf8               ()Ljava/lang/Object;
  #662 = NameAndType        #119:#120     // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #663 = Methodref          #2.#662       // org/sireum/Os$Proc.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #664 = Utf8               ()Lorg/sireum/OsProto$Proc$Result;
  #665 = NameAndType        #556:#546     // runCheck:()Lorg/sireum/Os$Proc$Result;
  #666 = Methodref          #2.#665       // org/sireum/Os$Proc.runCheck:()Lorg/sireum/Os$Proc$Result;
  #667 = Utf8               (Lscala/Function1;)Lorg/sireum/OsProto$Proc;
  #668 = NameAndType        #544:#541     // errLineAction:(Lscala/Function1;)Lorg/sireum/Os$Proc;
  #669 = Methodref          #2.#668       // org/sireum/Os$Proc.errLineAction:(Lscala/Function1;)Lorg/sireum/Os$Proc;
  #670 = NameAndType        #540:#541     // outLineAction:(Lscala/Function1;)Lorg/sireum/Os$Proc;
  #671 = Methodref          #2.#670       // org/sireum/Os$Proc.outLineAction:(Lscala/Function1;)Lorg/sireum/Os$Proc;
  #672 = Utf8               ()Lorg/sireum/OsProto$Proc;
  #673 = NameAndType        #539:#521     // script:()Lorg/sireum/Os$Proc;
  #674 = Methodref          #2.#673       // org/sireum/Os$Proc.script:()Lorg/sireum/Os$Proc;
  #675 = NameAndType        #538:#521     // standard:()Lorg/sireum/Os$Proc;
  #676 = Methodref          #2.#675       // org/sireum/Os$Proc.standard:()Lorg/sireum/Os$Proc;
  #677 = NameAndType        #537:#521     // echo:()Lorg/sireum/Os$Proc;
  #678 = Methodref          #2.#677       // org/sireum/Os$Proc.echo:()Lorg/sireum/Os$Proc;
  #679 = NameAndType        #536:#521     // echoEnv:()Lorg/sireum/Os$Proc;
  #680 = Methodref          #2.#679       // org/sireum/Os$Proc.echoEnv:()Lorg/sireum/Os$Proc;
  #681 = NameAndType        #535:#521     // console:()Lorg/sireum/Os$Proc;
  #682 = Methodref          #2.#681       // org/sireum/Os$Proc.console:()Lorg/sireum/Os$Proc;
  #683 = NameAndType        #534:#521     // bufferErr:()Lorg/sireum/Os$Proc;
  #684 = Methodref          #2.#683       // org/sireum/Os$Proc.bufferErr:()Lorg/sireum/Os$Proc;
  #685 = NameAndType        #530:#521     // redirectErr:()Lorg/sireum/Os$Proc;
  #686 = Methodref          #2.#685       // org/sireum/Os$Proc.redirectErr:()Lorg/sireum/Os$Proc;
  #687 = NameAndType        #520:#521     // dontInheritEnv:()Lorg/sireum/Os$Proc;
  #688 = Methodref          #2.#687       // org/sireum/Os$Proc.dontInheritEnv:()Lorg/sireum/Os$Proc;
  #689 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/OsProto$Proc;
  #690 = NameAndType        #517:#518     // timeout:(Lorg/sireum/Z;)Lorg/sireum/Os$Proc;
  #691 = Methodref          #2.#690       // org/sireum/Os$Proc.timeout:(Lorg/sireum/Z;)Lorg/sireum/Os$Proc;
  #692 = Utf8               (Ljava/lang/String;)Lorg/sireum/OsProto$Proc;
  #693 = NameAndType        #513:#514     // input:(Ljava/lang/String;)Lorg/sireum/Os$Proc;
  #694 = Methodref          #2.#693       // org/sireum/Os$Proc.input:(Ljava/lang/String;)Lorg/sireum/Os$Proc;
  #695 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/OsProto$Proc;
  #696 = NameAndType        #507:#439     // env:(Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
  #697 = Methodref          #2.#696       // org/sireum/Os$Proc.env:(Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
  #698 = Utf8               (Lorg/sireum/OsProto$Path;)Lorg/sireum/OsProto$Proc;
  #699 = NameAndType        #477:#478     // at:(Lorg/sireum/OsProto$Path;)Lorg/sireum/Os$Proc;
  #700 = Methodref          #2.#699       // org/sireum/Os$Proc.at:(Lorg/sireum/OsProto$Path;)Lorg/sireum/Os$Proc;
  #701 = NameAndType        #438:#439     // commands:(Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
  #702 = Methodref          #2.#701       // org/sireum/Os$Proc.commands:(Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
  #703 = Utf8               $anonfun$_in$1
  #704 = Utf8               value
  #705 = NameAndType        #704:#232     // value:()Ljava/lang/String;
  #706 = Methodref          #169.#705     // org/sireum/String.value:()Ljava/lang/String;
  #707 = Utf8               $anonfun$_outLineActionOpt$1
  #708 = Utf8               $anonfun$_errLineActionOpt$1
  #709 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Os$Path;Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;ZLorg/sireum/Option<Lorg/sireum/String;>;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;)V
  #710 = Utf8               __cmds
  #711 = Utf8               __wd
  #712 = Utf8               __envMap
  #713 = Utf8               __shouldAddEnv
  #714 = Utf8               __in
  #715 = Utf8               __isErrAsOut
  #716 = Utf8               __shouldOutputConsole
  #717 = Utf8               __isErrBuffered
  #718 = Utf8               __shouldPrintEnv
  #719 = Utf8               __shouldPrintCommands
  #720 = Utf8               __timeoutInMillis
  #721 = Utf8               __shouldUseStandardLib
  #722 = Utf8               __isScript
  #723 = Utf8               __outLineActionOpt
  #724 = Utf8               __errLineActionOpt
  #725 = Methodref          #4.#242       // java/lang/Object."<init>":()V
  #726 = Utf8               $init$
  #727 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #728 = NameAndType        #726:#727     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #729 = InterfaceMethodref #122.#728     // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #730 = Utf8               (Lorg/sireum/Immutable;)V
  #731 = NameAndType        #726:#730     // $init$:(Lorg/sireum/Immutable;)V
  #732 = InterfaceMethodref #104.#731     // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #733 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #734 = NameAndType        #726:#733     // $init$:(Lorg/sireum/DatatypeSig;)V
  #735 = InterfaceMethodref #8.#734       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #736 = Utf8               isEmpty
  #737 = NameAndType        #736:#110     // isEmpty:()Z
  #738 = InterfaceMethodref #364.#737     // org/sireum/Option.isEmpty:()Z
  #739 = MethodType         #661          //  ()Ljava/lang/Object;
  #740 = Utf8               $anonfun$_in$1$adapted
  #741 = NameAndType        #740:#661     // $anonfun$_in$1$adapted:()Ljava/lang/Object;
  #742 = Methodref          #2.#741       // org/sireum/Os$Proc.$anonfun$_in$1$adapted:()Ljava/lang/Object;
  #743 = MethodHandle       6:#742        // REF_invokeStatic org/sireum/Os$Proc.$anonfun$_in$1$adapted:()Ljava/lang/Object;
  #744 = Utf8               ()Lscala/Function0;
  #745 = NameAndType        #159:#744     // apply:()Lscala/Function0;
  #746 = InvokeDynamic      #1:#745       // #1:apply:()Lscala/Function0;
  #747 = Utf8               getOrElse
  #748 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #749 = NameAndType        #747:#748     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #750 = InterfaceMethodref #364.#749     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #751 = NameAndType        #707:#607     // $anonfun$_outLineActionOpt$1:()Lscala/Function1;
  #752 = Methodref          #2.#751       // org/sireum/Os$Proc.$anonfun$_outLineActionOpt$1:()Lscala/Function1;
  #753 = MethodHandle       6:#752        // REF_invokeStatic org/sireum/Os$Proc.$anonfun$_outLineActionOpt$1:()Lscala/Function1;
  #754 = MethodType         #607          //  ()Lscala/Function1;
  #755 = Integer            5
  #756 = InvokeDynamic      #2:#745       // #2:apply:()Lscala/Function0;
  #757 = Utf8               scala/Function1
  #758 = Class              #757          // scala/Function1
  #759 = NameAndType        #708:#607     // $anonfun$_errLineActionOpt$1:()Lscala/Function1;
  #760 = Methodref          #2.#759       // org/sireum/Os$Proc.$anonfun$_errLineActionOpt$1:()Lscala/Function1;
  #761 = MethodHandle       6:#760        // REF_invokeStatic org/sireum/Os$Proc.$anonfun$_errLineActionOpt$1:()Lscala/Function1;
  #762 = InvokeDynamic      #3:#745       // #3:apply:()Lscala/Function0;
  #763 = NameAndType        #703:#232     // $anonfun$_in$1:()Ljava/lang/String;
  #764 = Methodref          #2.#763       // org/sireum/Os$Proc.$anonfun$_in$1:()Ljava/lang/String;
  #765 = Utf8               $deserializeLambda$
  #766 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #767 = Utf8               scala/runtime/LambdaDeserialize
  #768 = Class              #767          // scala/runtime/LambdaDeserialize
  #769 = Utf8               bootstrap
  #770 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #771 = NameAndType        #769:#770     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #772 = Methodref          #768.#771     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #773 = MethodHandle       6:#772        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #774 = Utf8               lambdaDeserialize
  #775 = NameAndType        #774:#766     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #776 = InvokeDynamic      #4:#775       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #777 = Utf8               Signature
  #778 = Utf8               Code
  #779 = Utf8               LineNumberTable
  #780 = Utf8               LocalVariableTable
  #781 = Utf8               StackMapTable
  #782 = Utf8               MethodParameters
  #783 = Utf8               InnerClasses
  #784 = Utf8               SourceFile
  #785 = Utf8               BootstrapMethods
  #786 = Utf8               ScalaInlineInfo
  #787 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #62                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _cmds;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #65                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private final org.sireum.Os$Path _wd;
    descriptor: Lorg/sireum/Os$Path;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Map<org.sireum.String, org.sireum.String> _envMap;
    descriptor: Lorg/sireum/Map;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #70                          // Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;

  private final boolean _shouldAddEnv;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bin;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _in;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _isErrAsOut;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _shouldOutputConsole;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _isErrBuffered;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _shouldPrintEnv;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _shouldPrintCommands;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _timeoutInMillis;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _shouldUseStandardLib;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _isScript;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _boutLineActionOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Function1<org.sireum.String, org.sireum.B> _outLineActionOpt;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #88                          // Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;

  private final boolean _berrLineActionOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Function1<org.sireum.String, org.sireum.B> _errLineActionOpt;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #88                          // Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #98                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #108                // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #114                // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #118                // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #126                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> cmds();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #131                // Field _cmds:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #129                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getCmds();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #131                // Field _cmds:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #129                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.Os$Path wd();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #136                // Field _wd:Lorg/sireum/Os$Path;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Path getWd();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #136                // Field _wd:Lorg/sireum/Os$Path;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Map<org.sireum.String, org.sireum.String> envMap();
    descriptor: ()Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #142                // Field _envMap:Lorg/sireum/Map;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #140                         // ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;

  public org.sireum.Map<org.sireum.String, org.sireum.String> getEnvMap();
    descriptor: ()Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #142                // Field _envMap:Lorg/sireum/Map;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #140                         // ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;

  public boolean shouldAddEnv();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #146                // Field _shouldAddEnv:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean getShouldAddEnv();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #146                // Field _shouldAddEnv:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Option<org.sireum.String> in();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #152                // Field _bin:Z
         4: ifeq          16
         7: getstatic     #158                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #162                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          33
        16: getstatic     #167                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: new           #169                // class org/sireum/String
        22: dup
        23: aload_0
        24: getfield      #171                // Field _in:Ljava/lang/String;
        27: invokespecial #175                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        30: invokevirtual #178                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/Os$Proc;
    Signature: #150                         // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public org.sireum.Option<org.sireum.String> getIn();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #181                // Method in:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #150                         // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public boolean isErrAsOut();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #184                // Field _isErrAsOut:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean getIsErrAsOut();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #184                // Field _isErrAsOut:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean shouldOutputConsole();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #188                // Field _shouldOutputConsole:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean getShouldOutputConsole();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #188                // Field _shouldOutputConsole:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean isErrBuffered();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #192                // Field _isErrBuffered:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean getIsErrBuffered();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #192                // Field _isErrBuffered:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean shouldPrintEnv();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #196                // Field _shouldPrintEnv:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean getShouldPrintEnv();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #196                // Field _shouldPrintEnv:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean shouldPrintCommands();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #200                // Field _shouldPrintCommands:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean getShouldPrintCommands();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #200                // Field _shouldPrintCommands:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Z timeoutInMillis();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #204                // Field _timeoutInMillis:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Z getTimeoutInMillis();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #204                // Field _timeoutInMillis:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean shouldUseStandardLib();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #208                // Field _shouldUseStandardLib:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean getShouldUseStandardLib();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #208                // Field _shouldUseStandardLib:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean isScript();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #212                // Field _isScript:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean getIsScript();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #212                // Field _isScript:Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>> outLineActionOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #217                // Field _boutLineActionOpt:Z
         4: ifeq          16
         7: getstatic     #158                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #162                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #167                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #219                // Field _outLineActionOpt:Lscala/Function1;
        23: invokevirtual #178                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/Os$Proc;
    Signature: #215                         // ()Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;

  public org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>> getOutLineActionOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #222                // Method outLineActionOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #215                         // ()Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;

  public org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>> errLineActionOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #225                // Field _berrLineActionOpt:Z
         4: ifeq          16
         7: getstatic     #158                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #162                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #167                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #227                // Field _errLineActionOpt:Lscala/Function1;
        23: invokevirtual #178                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/Os$Proc;
    Signature: #215                         // ()Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;

  public org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>> getErrLineActionOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #230                // Method errLineActionOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #215                         // ()Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #234                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #238                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          440
        14: new           #240                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #243                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #244                // String Proc
        25: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #251                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #258                // Method cmds:()Lorg/sireum/IS;
        44: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc_w         #264                // String ,
        55: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: pop
        59: aload_1
        60: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        63: aload_0
        64: invokevirtual #266                // Method wd:()Lorg/sireum/Os$Path;
        67: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        70: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        73: pop
        74: aload_1
        75: ldc_w         #264                // String ,
        78: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        81: pop
        82: aload_1
        83: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        86: aload_0
        87: invokevirtual #268                // Method envMap:()Lorg/sireum/Map;
        90: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        93: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        96: pop
        97: aload_1
        98: ldc_w         #264                // String ,
       101: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       104: pop
       105: aload_1
       106: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       109: new           #270                // class org/sireum/B
       112: dup
       113: aload_0
       114: invokevirtual #272                // Method shouldAddEnv:()Z
       117: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       120: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       123: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       126: pop
       127: aload_1
       128: ldc_w         #264                // String ,
       131: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       134: pop
       135: aload_1
       136: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       139: aload_0
       140: invokevirtual #181                // Method in:()Lorg/sireum/Option;
       143: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       146: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       149: pop
       150: aload_1
       151: ldc_w         #264                // String ,
       154: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       157: pop
       158: aload_1
       159: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       162: new           #270                // class org/sireum/B
       165: dup
       166: aload_0
       167: invokevirtual #277                // Method isErrAsOut:()Z
       170: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       173: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       176: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       179: pop
       180: aload_1
       181: ldc_w         #264                // String ,
       184: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       187: pop
       188: aload_1
       189: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       192: new           #270                // class org/sireum/B
       195: dup
       196: aload_0
       197: invokevirtual #279                // Method shouldOutputConsole:()Z
       200: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       203: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       206: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       209: pop
       210: aload_1
       211: ldc_w         #264                // String ,
       214: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       217: pop
       218: aload_1
       219: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       222: new           #270                // class org/sireum/B
       225: dup
       226: aload_0
       227: invokevirtual #281                // Method isErrBuffered:()Z
       230: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       233: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       236: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       239: pop
       240: aload_1
       241: ldc_w         #264                // String ,
       244: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       247: pop
       248: aload_1
       249: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       252: new           #270                // class org/sireum/B
       255: dup
       256: aload_0
       257: invokevirtual #283                // Method shouldPrintEnv:()Z
       260: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       263: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       266: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       269: pop
       270: aload_1
       271: ldc_w         #264                // String ,
       274: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       277: pop
       278: aload_1
       279: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       282: new           #270                // class org/sireum/B
       285: dup
       286: aload_0
       287: invokevirtual #285                // Method shouldPrintCommands:()Z
       290: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       293: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       296: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       299: pop
       300: aload_1
       301: ldc_w         #264                // String ,
       304: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       307: pop
       308: aload_1
       309: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       312: aload_0
       313: invokevirtual #287                // Method timeoutInMillis:()Lorg/sireum/Z;
       316: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       319: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       322: pop
       323: aload_1
       324: ldc_w         #264                // String ,
       327: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       330: pop
       331: aload_1
       332: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       335: new           #270                // class org/sireum/B
       338: dup
       339: aload_0
       340: invokevirtual #289                // Method shouldUseStandardLib:()Z
       343: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       346: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       349: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       352: pop
       353: aload_1
       354: ldc_w         #264                // String ,
       357: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       360: pop
       361: aload_1
       362: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       365: new           #270                // class org/sireum/B
       368: dup
       369: aload_0
       370: invokevirtual #291                // Method isScript:()Z
       373: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       376: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       379: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       382: pop
       383: aload_1
       384: ldc_w         #264                // String ,
       387: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       390: pop
       391: aload_1
       392: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       395: aload_0
       396: invokevirtual #222                // Method outLineActionOpt:()Lorg/sireum/Option;
       399: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       402: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       405: pop
       406: aload_1
       407: ldc_w         #264                // String ,
       410: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       413: pop
       414: aload_1
       415: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       418: aload_0
       419: invokevirtual #230                // Method errLineActionOpt:()Lorg/sireum/Option;
       422: invokevirtual #262                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       425: invokevirtual #248                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       428: pop
       429: aload_1
       430: bipush        41
       432: invokevirtual #251                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       435: pop
       436: aload_1
       437: invokevirtual #293                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       440: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 425
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22     418     1    sb   Ljava/lang/StringBuilder;
            0     441     0  this   Lorg/sireum/Os$Proc;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #234                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #238                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #299                // Method toString:()Ljava/lang/String;
        21: invokevirtual #302                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/Os$Proc;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #306                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     253
        15: aload_0
        16: aload_0
        17: invokevirtual #308                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #310                // Method java/lang/Object.hashCode:()I
        27: goto          239
        30: getstatic     #315                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #319                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #324                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: bipush        16
        41: anewarray     #4                  // class java/lang/Object
        44: dup
        45: iconst_0
        46: aload_0
        47: invokevirtual #328                // Method getClass:()Ljava/lang/Class;
        50: invokevirtual #333                // Method java/lang/Class.getName:()Ljava/lang/String;
        53: aastore
        54: dup
        55: iconst_1
        56: aload_0
        57: invokevirtual #258                // Method cmds:()Lorg/sireum/IS;
        60: aastore
        61: dup
        62: iconst_2
        63: aload_0
        64: invokevirtual #266                // Method wd:()Lorg/sireum/Os$Path;
        67: aastore
        68: dup
        69: iconst_3
        70: aload_0
        71: invokevirtual #268                // Method envMap:()Lorg/sireum/Map;
        74: aastore
        75: dup
        76: iconst_4
        77: new           #270                // class org/sireum/B
        80: dup
        81: aload_0
        82: invokevirtual #272                // Method shouldAddEnv:()Z
        85: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
        88: aastore
        89: dup
        90: iconst_5
        91: aload_0
        92: invokevirtual #181                // Method in:()Lorg/sireum/Option;
        95: aastore
        96: dup
        97: bipush        6
        99: new           #270                // class org/sireum/B
       102: dup
       103: aload_0
       104: invokevirtual #277                // Method isErrAsOut:()Z
       107: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       110: aastore
       111: dup
       112: bipush        7
       114: new           #270                // class org/sireum/B
       117: dup
       118: aload_0
       119: invokevirtual #279                // Method shouldOutputConsole:()Z
       122: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       125: aastore
       126: dup
       127: bipush        8
       129: new           #270                // class org/sireum/B
       132: dup
       133: aload_0
       134: invokevirtual #281                // Method isErrBuffered:()Z
       137: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       140: aastore
       141: dup
       142: bipush        9
       144: new           #270                // class org/sireum/B
       147: dup
       148: aload_0
       149: invokevirtual #283                // Method shouldPrintEnv:()Z
       152: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       155: aastore
       156: dup
       157: bipush        10
       159: new           #270                // class org/sireum/B
       162: dup
       163: aload_0
       164: invokevirtual #285                // Method shouldPrintCommands:()Z
       167: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       170: aastore
       171: dup
       172: bipush        11
       174: aload_0
       175: invokevirtual #287                // Method timeoutInMillis:()Lorg/sireum/Z;
       178: aastore
       179: dup
       180: bipush        12
       182: new           #270                // class org/sireum/B
       185: dup
       186: aload_0
       187: invokevirtual #289                // Method shouldUseStandardLib:()Z
       190: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       193: aastore
       194: dup
       195: bipush        13
       197: new           #270                // class org/sireum/B
       200: dup
       201: aload_0
       202: invokevirtual #291                // Method isScript:()Z
       205: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       208: aastore
       209: dup
       210: bipush        14
       212: aload_0
       213: invokevirtual #222                // Method outLineActionOpt:()Lorg/sireum/Option;
       216: aastore
       217: dup
       218: bipush        15
       220: aload_0
       221: invokevirtual #230                // Method errLineActionOpt:()Lorg/sireum/Option;
       224: aastore
       225: invokevirtual #337                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       228: invokevirtual #342                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       231: checkcast     #344                // class scala/collection/Seq
       234: invokeinterface #345,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
       239: putfield      #347                // Field hashCode:I
       242: aload_0
       243: aload_0
       244: getfield      #306                // Field bitmap$0:B
       247: iconst_1
       248: ior
       249: i2b
       250: putfield      #306                // Field bitmap$0:B
       253: aload_1
       254: monitorexit
       255: goto          261
       258: aload_1
       259: monitorexit
       260: athrow
       261: aload_0
       262: getfield      #347                // Field hashCode:I
       265: ireturn
      Exception table:
         from    to  target type
             4   253   258   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/Os$Proc, class org/sireum/Os$Proc ]
          stack = [ class org/sireum/Os$Proc ]
        frame_type = 255 /* full_frame */
          offset_delta = 208
          locals = [ class org/sireum/Os$Proc, class org/sireum/Os$Proc ]
          stack = [ class org/sireum/Os$Proc, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     266     0  this   Lorg/sireum/Os$Proc;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #306                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #351                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #347                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Os$Proc;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=12, args_size=2
         0: aload_0
         1: invokevirtual #308                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          393
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          393
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/Os$Proc
        30: ifeq          384
        33: aload_3
        34: checkcast     #2                  // class org/sireum/Os$Proc
        37: astore        4
        39: aload_0
        40: invokevirtual #357                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #357                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          380
        55: aload_0
        56: invokevirtual #258                // Method cmds:()Lorg/sireum/IS;
        59: aload         4
        61: invokevirtual #258                // Method cmds:()Lorg/sireum/IS;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          379
        79: aload         5
        81: invokevirtual #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          379
        87: aload_0
        88: invokevirtual #266                // Method wd:()Lorg/sireum/Os$Path;
        91: aload         4
        93: invokevirtual #266                // Method wd:()Lorg/sireum/Os$Path;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          379
       111: aload         6
       113: invokevirtual #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          379
       119: aload_0
       120: invokevirtual #268                // Method envMap:()Lorg/sireum/Map;
       123: aload         4
       125: invokevirtual #268                // Method envMap:()Lorg/sireum/Map;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          379
       143: aload         7
       145: invokevirtual #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          379
       151: aload_0
       152: invokevirtual #272                // Method shouldAddEnv:()Z
       155: aload         4
       157: invokevirtual #272                // Method shouldAddEnv:()Z
       160: if_icmpne     379
       163: aload_0
       164: invokevirtual #181                // Method in:()Lorg/sireum/Option;
       167: aload         4
       169: invokevirtual #181                // Method in:()Lorg/sireum/Option;
       172: astore        8
       174: dup
       175: ifnonnull     187
       178: pop
       179: aload         8
       181: ifnull        195
       184: goto          379
       187: aload         8
       189: invokevirtual #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       192: ifeq          379
       195: aload_0
       196: invokevirtual #277                // Method isErrAsOut:()Z
       199: aload         4
       201: invokevirtual #277                // Method isErrAsOut:()Z
       204: if_icmpne     379
       207: aload_0
       208: invokevirtual #279                // Method shouldOutputConsole:()Z
       211: aload         4
       213: invokevirtual #279                // Method shouldOutputConsole:()Z
       216: if_icmpne     379
       219: aload_0
       220: invokevirtual #281                // Method isErrBuffered:()Z
       223: aload         4
       225: invokevirtual #281                // Method isErrBuffered:()Z
       228: if_icmpne     379
       231: aload_0
       232: invokevirtual #283                // Method shouldPrintEnv:()Z
       235: aload         4
       237: invokevirtual #283                // Method shouldPrintEnv:()Z
       240: if_icmpne     379
       243: aload_0
       244: invokevirtual #285                // Method shouldPrintCommands:()Z
       247: aload         4
       249: invokevirtual #285                // Method shouldPrintCommands:()Z
       252: if_icmpne     379
       255: aload_0
       256: invokevirtual #287                // Method timeoutInMillis:()Lorg/sireum/Z;
       259: aload         4
       261: invokevirtual #287                // Method timeoutInMillis:()Lorg/sireum/Z;
       264: astore        9
       266: dup
       267: ifnonnull     279
       270: pop
       271: aload         9
       273: ifnull        287
       276: goto          379
       279: aload         9
       281: invokevirtual #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       284: ifeq          379
       287: aload_0
       288: invokevirtual #289                // Method shouldUseStandardLib:()Z
       291: aload         4
       293: invokevirtual #289                // Method shouldUseStandardLib:()Z
       296: if_icmpne     379
       299: aload_0
       300: invokevirtual #291                // Method isScript:()Z
       303: aload         4
       305: invokevirtual #291                // Method isScript:()Z
       308: if_icmpne     379
       311: aload_0
       312: invokevirtual #222                // Method outLineActionOpt:()Lorg/sireum/Option;
       315: aload         4
       317: invokevirtual #222                // Method outLineActionOpt:()Lorg/sireum/Option;
       320: astore        10
       322: dup
       323: ifnonnull     335
       326: pop
       327: aload         10
       329: ifnull        343
       332: goto          379
       335: aload         10
       337: invokevirtual #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       340: ifeq          379
       343: aload_0
       344: invokevirtual #230                // Method errLineActionOpt:()Lorg/sireum/Option;
       347: aload         4
       349: invokevirtual #230                // Method errLineActionOpt:()Lorg/sireum/Option;
       352: astore        11
       354: dup
       355: ifnonnull     367
       358: pop
       359: aload         11
       361: ifnull        375
       364: goto          379
       367: aload         11
       369: invokevirtual #356                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       372: ifeq          379
       375: iconst_1
       376: goto          380
       379: iconst_0
       380: istore_2
       381: goto          392
       384: goto          387
       387: iconst_0
       388: istore_2
       389: goto          392
       392: iload_2
       393: ireturn
      StackMapTable: number_of_entries = 23
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/Os$Proc ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc, class org/sireum/IS, class org/sireum/Os$Path ]
          stack = [ class org/sireum/Os$Path ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc, class org/sireum/IS, class org/sireum/Os$Path, class org/sireum/Map ]
          stack = [ class org/sireum/Map ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc, class org/sireum/IS, class org/sireum/Os$Path, class org/sireum/Map, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 83
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc, class org/sireum/IS, class org/sireum/Os$Path, class org/sireum/Map, class org/sireum/Option, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc, class org/sireum/IS, class org/sireum/Os$Path, class org/sireum/Map, class org/sireum/Option, class org/sireum/Z, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc, class org/sireum/IS, class org/sireum/Os$Path, class org/sireum/Map, class org/sireum/Option, class org/sireum/Z, class org/sireum/Option, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc, class org/sireum/IS ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, top, class java/lang/Object, class org/sireum/Os$Proc ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/Os$Proc, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Os$Proc, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     394     0  this   Lorg/sireum/Os$Proc;
            0     394     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.Os$Proc apply(org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.Os$Path, org.sireum.Map<org.sireum.String, org.sireum.String>, boolean, org.sireum.Option<org.sireum.String>, boolean, boolean, boolean, boolean, boolean, org.sireum.Z, boolean, boolean, org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>>, org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>>);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=17, locals=16, args_size=16
         0: new           #2                  // class org/sireum/Os$Proc
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: iload         4
         9: aload         5
        11: iload         6
        13: iload         7
        15: iload         8
        17: iload         9
        19: iload         10
        21: aload         11
        23: iload         12
        25: iload         13
        27: aload         14
        29: aload         15
        31: invokespecial #371                // Method "<init>":(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)V
        34: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/sireum/Os$Proc;
            0      35     1  cmds   Lorg/sireum/IS;
            0      35     2    wd   Lorg/sireum/Os$Path;
            0      35     3 envMap   Lorg/sireum/Map;
            0      35     4 shouldAddEnv   Z
            0      35     5    in   Lorg/sireum/Option;
            0      35     6 isErrAsOut   Z
            0      35     7 shouldOutputConsole   Z
            0      35     8 isErrBuffered   Z
            0      35     9 shouldPrintEnv   Z
            0      35    10 shouldPrintCommands   Z
            0      35    11 timeoutInMillis   Lorg/sireum/Z;
            0      35    12 shouldUseStandardLib   Z
            0      35    13 isScript   Z
            0      35    14 outLineActionOpt   Lorg/sireum/Option;
            0      35    15 errLineActionOpt   Lorg/sireum/Option;
    Signature: #368                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Os$Path;Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;ZLorg/sireum/Option<Lorg/sireum/String;>;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;)Lorg/sireum/Os$Proc;
    MethodParameters:
      Name                           Flags
      cmds                           final
      wd                             final
      envMap                         final
      shouldAddEnv                   final
      in                             final
      isErrAsOut                     final
      shouldOutputConsole            final
      isErrBuffered                  final
      shouldPrintEnv                 final
      shouldPrintCommands            final
      timeoutInMillis                final
      shouldUseStandardLib           final
      isScript                       final
      outLineActionOpt               final
      errLineActionOpt               final

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$1();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #258                // Method cmds:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #129                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.Os$Path apply$default$2();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #266                // Method wd:()Lorg/sireum/Os$Path;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Map<org.sireum.String, org.sireum.String> apply$default$3();
    descriptor: ()Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #268                // Method envMap:()Lorg/sireum/Map;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #140                         // ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;

  public boolean apply$default$4();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #272                // Method shouldAddEnv:()Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Option<org.sireum.String> apply$default$5();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #181                // Method in:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #150                         // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public boolean apply$default$6();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #277                // Method isErrAsOut:()Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean apply$default$7();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #279                // Method shouldOutputConsole:()Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean apply$default$8();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #281                // Method isErrBuffered:()Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean apply$default$9();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #283                // Method shouldPrintEnv:()Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean apply$default$10();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #285                // Method shouldPrintCommands:()Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Z apply$default$11();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #287                // Method timeoutInMillis:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean apply$default$12();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #289                // Method shouldUseStandardLib:()Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public boolean apply$default$13();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #291                // Method isScript:()Z
         4: ireturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>> apply$default$14();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #222                // Method outLineActionOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #215                         // ()Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;

  public org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>> apply$default$15();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #230                // Method errLineActionOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;
    Signature: #215                         // ()Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #306                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     429
        15: aload_0
        16: getstatic     #315                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #319                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #324                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: bipush        16
        27: anewarray     #392                // class scala/Tuple2
        30: dup
        31: iconst_0
        32: new           #392                // class scala/Tuple2
        35: dup
        36: ldc_w         #394                // String type
        39: getstatic     #315                // Field scala/package$.MODULE$:Lscala/package$;
        42: invokevirtual #398                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        45: getstatic     #324                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        48: iconst_3
        49: anewarray     #297                // class java/lang/String
        52: dup
        53: iconst_0
        54: ldc_w         #400                // String org
        57: aastore
        58: dup
        59: iconst_1
        60: ldc_w         #402                // String sireum
        63: aastore
        64: dup
        65: iconst_2
        66: ldc           #244                // String Proc
        68: aastore
        69: checkcast     #404                // class "[Ljava/lang/Object;"
        72: invokevirtual #408                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        75: invokevirtual #413                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        78: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        81: aastore
        82: dup
        83: iconst_1
        84: new           #392                // class scala/Tuple2
        87: dup
        88: ldc_w         #417                // String cmds
        91: aload_0
        92: invokevirtual #258                // Method cmds:()Lorg/sireum/IS;
        95: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        98: aastore
        99: dup
       100: iconst_2
       101: new           #392                // class scala/Tuple2
       104: dup
       105: ldc_w         #418                // String wd
       108: aload_0
       109: invokevirtual #266                // Method wd:()Lorg/sireum/Os$Path;
       112: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       115: aastore
       116: dup
       117: iconst_3
       118: new           #392                // class scala/Tuple2
       121: dup
       122: ldc_w         #419                // String envMap
       125: aload_0
       126: invokevirtual #268                // Method envMap:()Lorg/sireum/Map;
       129: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       132: aastore
       133: dup
       134: iconst_4
       135: new           #392                // class scala/Tuple2
       138: dup
       139: ldc_w         #420                // String shouldAddEnv
       142: new           #270                // class org/sireum/B
       145: dup
       146: aload_0
       147: invokevirtual #272                // Method shouldAddEnv:()Z
       150: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       153: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       156: aastore
       157: dup
       158: iconst_5
       159: new           #392                // class scala/Tuple2
       162: dup
       163: ldc_w         #421                // String in
       166: aload_0
       167: invokevirtual #181                // Method in:()Lorg/sireum/Option;
       170: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       173: aastore
       174: dup
       175: bipush        6
       177: new           #392                // class scala/Tuple2
       180: dup
       181: ldc_w         #422                // String isErrAsOut
       184: new           #270                // class org/sireum/B
       187: dup
       188: aload_0
       189: invokevirtual #277                // Method isErrAsOut:()Z
       192: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       195: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       198: aastore
       199: dup
       200: bipush        7
       202: new           #392                // class scala/Tuple2
       205: dup
       206: ldc_w         #423                // String shouldOutputConsole
       209: new           #270                // class org/sireum/B
       212: dup
       213: aload_0
       214: invokevirtual #279                // Method shouldOutputConsole:()Z
       217: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       220: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       223: aastore
       224: dup
       225: bipush        8
       227: new           #392                // class scala/Tuple2
       230: dup
       231: ldc_w         #424                // String isErrBuffered
       234: new           #270                // class org/sireum/B
       237: dup
       238: aload_0
       239: invokevirtual #281                // Method isErrBuffered:()Z
       242: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       245: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       248: aastore
       249: dup
       250: bipush        9
       252: new           #392                // class scala/Tuple2
       255: dup
       256: ldc_w         #425                // String shouldPrintEnv
       259: new           #270                // class org/sireum/B
       262: dup
       263: aload_0
       264: invokevirtual #283                // Method shouldPrintEnv:()Z
       267: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       270: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       273: aastore
       274: dup
       275: bipush        10
       277: new           #392                // class scala/Tuple2
       280: dup
       281: ldc_w         #426                // String shouldPrintCommands
       284: new           #270                // class org/sireum/B
       287: dup
       288: aload_0
       289: invokevirtual #285                // Method shouldPrintCommands:()Z
       292: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       295: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       298: aastore
       299: dup
       300: bipush        11
       302: new           #392                // class scala/Tuple2
       305: dup
       306: ldc_w         #427                // String timeoutInMillis
       309: aload_0
       310: invokevirtual #287                // Method timeoutInMillis:()Lorg/sireum/Z;
       313: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       316: aastore
       317: dup
       318: bipush        12
       320: new           #392                // class scala/Tuple2
       323: dup
       324: ldc_w         #428                // String shouldUseStandardLib
       327: new           #270                // class org/sireum/B
       330: dup
       331: aload_0
       332: invokevirtual #289                // Method shouldUseStandardLib:()Z
       335: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       338: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       341: aastore
       342: dup
       343: bipush        13
       345: new           #392                // class scala/Tuple2
       348: dup
       349: ldc_w         #429                // String isScript
       352: new           #270                // class org/sireum/B
       355: dup
       356: aload_0
       357: invokevirtual #291                // Method isScript:()Z
       360: invokespecial #275                // Method org/sireum/B."<init>":(Z)V
       363: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       366: aastore
       367: dup
       368: bipush        14
       370: new           #392                // class scala/Tuple2
       373: dup
       374: ldc_w         #430                // String outLineActionOpt
       377: aload_0
       378: invokevirtual #222                // Method outLineActionOpt:()Lorg/sireum/Option;
       381: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       384: aastore
       385: dup
       386: bipush        15
       388: new           #392                // class scala/Tuple2
       391: dup
       392: ldc_w         #431                // String errLineActionOpt
       395: aload_0
       396: invokevirtual #230                // Method errLineActionOpt:()Lorg/sireum/Option;
       399: invokespecial #416                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       402: aastore
       403: checkcast     #404                // class "[Ljava/lang/Object;"
       406: invokevirtual #408                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       409: invokevirtual #342                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       412: checkcast     #433                // class scala/collection/immutable/Seq
       415: putfield      #435                // Field $content:Lscala/collection/immutable/Seq;
       418: aload_0
       419: aload_0
       420: getfield      #306                // Field bitmap$0:B
       423: iconst_2
       424: ior
       425: i2b
       426: putfield      #306                // Field bitmap$0:B
       429: aload_1
       430: monitorexit
       431: goto          437
       434: aload_1
       435: monitorexit
       436: athrow
       437: aload_0
       438: getfield      #435                // Field $content:Lscala/collection/immutable/Seq;
       441: areturn
      Exception table:
         from    to  target type
             4   429   434   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 429
          locals = [ class org/sireum/Os$Proc ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     442     0  this   Lorg/sireum/Os$Proc;
    Signature: #390                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #306                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #437                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #435                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Os$Proc;
    Signature: #390                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.Os$Proc commands(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=3, args_size=2
         0: aload_0
         1: astore_2
         2: aload_2
         3: aload_0
         4: invokevirtual #258                // Method cmds:()Lorg/sireum/IS;
         7: aload_1
         8: invokevirtual #445                // Method org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        11: aload_2
        12: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        15: aload_2
        16: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        19: aload_2
        20: invokevirtual #451                // Method apply$default$4:()Z
        23: aload_2
        24: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        27: aload_2
        28: invokevirtual #455                // Method apply$default$6:()Z
        31: aload_2
        32: invokevirtual #457                // Method apply$default$7:()Z
        35: aload_2
        36: invokevirtual #459                // Method apply$default$8:()Z
        39: aload_2
        40: invokevirtual #461                // Method apply$default$9:()Z
        43: aload_2
        44: invokevirtual #463                // Method apply$default$10:()Z
        47: aload_2
        48: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        51: aload_2
        52: invokevirtual #467                // Method apply$default$12:()Z
        55: aload_2
        56: invokevirtual #469                // Method apply$default$13:()Z
        59: aload_2
        60: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        63: aload_2
        64: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        67: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
        70: areturn
      LineNumberTable:
        line 310: 0
        line 311: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      69     2 thisL   Lorg/sireum/Os$Proc;
            0      71     0  this   Lorg/sireum/Os$Proc;
            0      71     1    cs   Lorg/sireum/IS;
    Signature: #440                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/Os$Proc;
    MethodParameters:
      Name                           Flags
      cs                             final

  public org.sireum.Os$Proc at(org.sireum.OsProto$Path);
    descriptor: (Lorg/sireum/OsProto$Path;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=18, args_size=2
         0: aload_0
         1: astore_2
         2: getstatic     #482                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
         5: aload_1
         6: invokeinterface #484,  1          // InterfaceMethod org/sireum/OsProto$Path.string:()Ljava/lang/String;
        11: invokevirtual #487                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
        14: astore_3
        15: aload_2
        16: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        19: astore        4
        21: aload_2
        22: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        25: astore        5
        27: aload_2
        28: invokevirtual #451                // Method apply$default$4:()Z
        31: istore        6
        33: aload_2
        34: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        37: astore        7
        39: aload_2
        40: invokevirtual #455                // Method apply$default$6:()Z
        43: istore        8
        45: aload_2
        46: invokevirtual #457                // Method apply$default$7:()Z
        49: istore        9
        51: aload_2
        52: invokevirtual #459                // Method apply$default$8:()Z
        55: istore        10
        57: aload_2
        58: invokevirtual #461                // Method apply$default$9:()Z
        61: istore        11
        63: aload_2
        64: invokevirtual #463                // Method apply$default$10:()Z
        67: istore        12
        69: aload_2
        70: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        73: astore        13
        75: aload_2
        76: invokevirtual #467                // Method apply$default$12:()Z
        79: istore        14
        81: aload_2
        82: invokevirtual #469                // Method apply$default$13:()Z
        85: istore        15
        87: aload_2
        88: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        91: astore        16
        93: aload_2
        94: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        97: astore        17
        99: aload_2
       100: aload         4
       102: aload_3
       103: aload         5
       105: iload         6
       107: aload         7
       109: iload         8
       111: iload         9
       113: iload         10
       115: iload         11
       117: iload         12
       119: aload         13
       121: iload         14
       123: iload         15
       125: aload         16
       127: aload         17
       129: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       132: areturn
      LineNumberTable:
        line 315: 0
        line 316: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15     117     3   x$1   Lorg/sireum/Os$Path$Impl;
           21     111     4   x$2   Lorg/sireum/IS;
           27     105     5   x$3   Lorg/sireum/Map;
           33      99     6   x$4   Z
           39      93     7   x$5   Lorg/sireum/Option;
           45      87     8   x$6   Z
           51      81     9   x$7   Z
           57      75    10   x$8   Z
           63      69    11   x$9   Z
           69      63    12  x$10   Z
           75      57    13  x$11   Lorg/sireum/Z;
           81      51    14  x$12   Z
           87      45    15  x$13   Z
           93      39    16  x$14   Lorg/sireum/Option;
           99      33    17  x$15   Lorg/sireum/Option;
            2     131     2 thisL   Lorg/sireum/Os$Proc;
            0     133     0  this   Lorg/sireum/Os$Proc;
            0     133     1   dir   Lorg/sireum/OsProto$Path;
    MethodParameters:
      Name                           Flags
      dir                            final

  public org.sireum.Os$Proc env(org.sireum.IS<org.sireum.Z, scala.Tuple2<org.sireum.String, org.sireum.String>>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=18, args_size=2
         0: aload_0
         1: astore_2
         2: aload_0
         3: invokevirtual #268                // Method envMap:()Lorg/sireum/Map;
         6: aload_1
         7: invokevirtual #512                // Method org/sireum/Map.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Map;
        10: astore_3
        11: aload_2
        12: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        15: astore        4
        17: aload_2
        18: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        21: astore        5
        23: aload_2
        24: invokevirtual #451                // Method apply$default$4:()Z
        27: istore        6
        29: aload_2
        30: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        33: astore        7
        35: aload_2
        36: invokevirtual #455                // Method apply$default$6:()Z
        39: istore        8
        41: aload_2
        42: invokevirtual #457                // Method apply$default$7:()Z
        45: istore        9
        47: aload_2
        48: invokevirtual #459                // Method apply$default$8:()Z
        51: istore        10
        53: aload_2
        54: invokevirtual #461                // Method apply$default$9:()Z
        57: istore        11
        59: aload_2
        60: invokevirtual #463                // Method apply$default$10:()Z
        63: istore        12
        65: aload_2
        66: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        69: astore        13
        71: aload_2
        72: invokevirtual #467                // Method apply$default$12:()Z
        75: istore        14
        77: aload_2
        78: invokevirtual #469                // Method apply$default$13:()Z
        81: istore        15
        83: aload_2
        84: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        87: astore        16
        89: aload_2
        90: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        93: astore        17
        95: aload_2
        96: aload         4
        98: aload         5
       100: aload_3
       101: iload         6
       103: aload         7
       105: iload         8
       107: iload         9
       109: iload         10
       111: iload         11
       113: iload         12
       115: aload         13
       117: iload         14
       119: iload         15
       121: aload         16
       123: aload         17
       125: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       128: areturn
      LineNumberTable:
        line 320: 0
        line 321: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11     117     3   x$1   Lorg/sireum/Map;
           17     111     4   x$2   Lorg/sireum/IS;
           23     105     5   x$3   Lorg/sireum/Os$Path;
           29      99     6   x$4   Z
           35      93     7   x$5   Lorg/sireum/Option;
           41      87     8   x$6   Z
           47      81     9   x$7   Z
           53      75    10   x$8   Z
           59      69    11   x$9   Z
           65      63    12  x$10   Z
           71      57    13  x$11   Lorg/sireum/Z;
           77      51    14  x$12   Z
           83      45    15  x$13   Z
           89      39    16  x$14   Lorg/sireum/Option;
           95      33    17  x$15   Lorg/sireum/Option;
            2     127     2 thisL   Lorg/sireum/Os$Proc;
            0     129     0  this   Lorg/sireum/Os$Proc;
            0     129     1     m   Lorg/sireum/IS;
    Signature: #508                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<Lorg/sireum/String;Lorg/sireum/String;>;>;)Lorg/sireum/Os$Proc;
    MethodParameters:
      Name                           Flags
      m                              final

  public org.sireum.Os$Proc input(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=18, args_size=2
         0: aload_0
         1: astore_2
         2: getstatic     #167                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         5: new           #169                // class org/sireum/String
         8: dup
         9: aload_1
        10: invokespecial #175                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        13: invokevirtual #178                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        16: astore_3
        17: aload_2
        18: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        21: astore        4
        23: aload_2
        24: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        27: astore        5
        29: aload_2
        30: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        33: astore        6
        35: aload_2
        36: invokevirtual #451                // Method apply$default$4:()Z
        39: istore        7
        41: aload_2
        42: invokevirtual #455                // Method apply$default$6:()Z
        45: istore        8
        47: aload_2
        48: invokevirtual #457                // Method apply$default$7:()Z
        51: istore        9
        53: aload_2
        54: invokevirtual #459                // Method apply$default$8:()Z
        57: istore        10
        59: aload_2
        60: invokevirtual #461                // Method apply$default$9:()Z
        63: istore        11
        65: aload_2
        66: invokevirtual #463                // Method apply$default$10:()Z
        69: istore        12
        71: aload_2
        72: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        75: astore        13
        77: aload_2
        78: invokevirtual #467                // Method apply$default$12:()Z
        81: istore        14
        83: aload_2
        84: invokevirtual #469                // Method apply$default$13:()Z
        87: istore        15
        89: aload_2
        90: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        93: astore        16
        95: aload_2
        96: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        99: astore        17
       101: aload_2
       102: aload         4
       104: aload         5
       106: aload         6
       108: iload         7
       110: aload_3
       111: iload         8
       113: iload         9
       115: iload         10
       117: iload         11
       119: iload         12
       121: aload         13
       123: iload         14
       125: iload         15
       127: aload         16
       129: aload         17
       131: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       134: areturn
      LineNumberTable:
        line 325: 0
        line 326: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17     117     3   x$1   Lorg/sireum/Some;
           23     111     4   x$2   Lorg/sireum/IS;
           29     105     5   x$3   Lorg/sireum/Os$Path;
           35      99     6   x$4   Lorg/sireum/Map;
           41      93     7   x$5   Z
           47      87     8   x$6   Z
           53      81     9   x$7   Z
           59      75    10   x$8   Z
           65      69    11   x$9   Z
           71      63    12  x$10   Z
           77      57    13  x$11   Lorg/sireum/Z;
           83      51    14  x$12   Z
           89      45    15  x$13   Z
           95      39    16  x$14   Lorg/sireum/Option;
          101      33    17  x$15   Lorg/sireum/Option;
            2     133     2 thisL   Lorg/sireum/Os$Proc;
            0     135     0  this   Lorg/sireum/Os$Proc;
            0     135     1 content   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      content                        final

  public org.sireum.Os$Proc timeout(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=18, args_size=2
         0: aload_0
         1: astore_2
         2: aload_1
         3: astore_3
         4: aload_2
         5: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
         8: astore        4
        10: aload_2
        11: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        14: astore        5
        16: aload_2
        17: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        20: astore        6
        22: aload_2
        23: invokevirtual #451                // Method apply$default$4:()Z
        26: istore        7
        28: aload_2
        29: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        32: astore        8
        34: aload_2
        35: invokevirtual #455                // Method apply$default$6:()Z
        38: istore        9
        40: aload_2
        41: invokevirtual #457                // Method apply$default$7:()Z
        44: istore        10
        46: aload_2
        47: invokevirtual #459                // Method apply$default$8:()Z
        50: istore        11
        52: aload_2
        53: invokevirtual #461                // Method apply$default$9:()Z
        56: istore        12
        58: aload_2
        59: invokevirtual #463                // Method apply$default$10:()Z
        62: istore        13
        64: aload_2
        65: invokevirtual #467                // Method apply$default$12:()Z
        68: istore        14
        70: aload_2
        71: invokevirtual #469                // Method apply$default$13:()Z
        74: istore        15
        76: aload_2
        77: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        80: astore        16
        82: aload_2
        83: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        86: astore        17
        88: aload_2
        89: aload         4
        91: aload         5
        93: aload         6
        95: iload         7
        97: aload         8
        99: iload         9
       101: iload         10
       103: iload         11
       105: iload         12
       107: iload         13
       109: aload_3
       110: iload         14
       112: iload         15
       114: aload         16
       116: aload         17
       118: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       121: areturn
      LineNumberTable:
        line 330: 0
        line 331: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4     117     3   x$1   Lorg/sireum/Z;
           10     111     4   x$2   Lorg/sireum/IS;
           16     105     5   x$3   Lorg/sireum/Os$Path;
           22      99     6   x$4   Lorg/sireum/Map;
           28      93     7   x$5   Z
           34      87     8   x$6   Lorg/sireum/Option;
           40      81     9   x$7   Z
           46      75    10   x$8   Z
           52      69    11   x$9   Z
           58      63    12  x$10   Z
           64      57    13  x$11   Z
           70      51    14  x$12   Z
           76      45    15  x$13   Z
           82      39    16  x$14   Lorg/sireum/Option;
           88      33    17  x$15   Lorg/sireum/Option;
            2     120     2 thisL   Lorg/sireum/Os$Proc;
            0     122     0  this   Lorg/sireum/Os$Proc;
            0     122     1 millis   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      millis                         final

  public org.sireum.Os$Proc dontInheritEnv();
    descriptor: ()Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=17, args_size=1
         0: aload_0
         1: astore_1
         2: getstatic     #526                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #529                // Method org/sireum/package$.F:()Z
         8: istore_2
         9: aload_1
        10: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        13: astore_3
        14: aload_1
        15: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        18: astore        4
        20: aload_1
        21: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        24: astore        5
        26: aload_1
        27: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        30: astore        6
        32: aload_1
        33: invokevirtual #455                // Method apply$default$6:()Z
        36: istore        7
        38: aload_1
        39: invokevirtual #457                // Method apply$default$7:()Z
        42: istore        8
        44: aload_1
        45: invokevirtual #459                // Method apply$default$8:()Z
        48: istore        9
        50: aload_1
        51: invokevirtual #461                // Method apply$default$9:()Z
        54: istore        10
        56: aload_1
        57: invokevirtual #463                // Method apply$default$10:()Z
        60: istore        11
        62: aload_1
        63: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        66: astore        12
        68: aload_1
        69: invokevirtual #467                // Method apply$default$12:()Z
        72: istore        13
        74: aload_1
        75: invokevirtual #469                // Method apply$default$13:()Z
        78: istore        14
        80: aload_1
        81: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        84: astore        15
        86: aload_1
        87: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        90: astore        16
        92: aload_1
        93: aload_3
        94: aload         4
        96: aload         5
        98: iload_2
        99: aload         6
       101: iload         7
       103: iload         8
       105: iload         9
       107: iload         10
       109: iload         11
       111: aload         12
       113: iload         13
       115: iload         14
       117: aload         15
       119: aload         16
       121: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       124: areturn
      LineNumberTable:
        line 335: 0
        line 336: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     115     2   x$1   Z
           14     110     3   x$2   Lorg/sireum/IS;
           20     104     4   x$3   Lorg/sireum/Os$Path;
           26      98     5   x$4   Lorg/sireum/Map;
           32      92     6   x$5   Lorg/sireum/Option;
           38      86     7   x$6   Z
           44      80     8   x$7   Z
           50      74     9   x$8   Z
           56      68    10   x$9   Z
           62      62    11  x$10   Z
           68      56    12  x$11   Lorg/sireum/Z;
           74      50    13  x$12   Z
           80      44    14  x$13   Z
           86      38    15  x$14   Lorg/sireum/Option;
           92      32    16  x$15   Lorg/sireum/Option;
            2     123     1 thisL   Lorg/sireum/Os$Proc;
            0     125     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Proc redirectErr();
    descriptor: ()Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=17, args_size=1
         0: aload_0
         1: astore_1
         2: getstatic     #526                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #533                // Method org/sireum/package$.T:()Z
         8: istore_2
         9: aload_1
        10: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        13: astore_3
        14: aload_1
        15: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        18: astore        4
        20: aload_1
        21: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        24: astore        5
        26: aload_1
        27: invokevirtual #451                // Method apply$default$4:()Z
        30: istore        6
        32: aload_1
        33: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        36: astore        7
        38: aload_1
        39: invokevirtual #457                // Method apply$default$7:()Z
        42: istore        8
        44: aload_1
        45: invokevirtual #459                // Method apply$default$8:()Z
        48: istore        9
        50: aload_1
        51: invokevirtual #461                // Method apply$default$9:()Z
        54: istore        10
        56: aload_1
        57: invokevirtual #463                // Method apply$default$10:()Z
        60: istore        11
        62: aload_1
        63: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        66: astore        12
        68: aload_1
        69: invokevirtual #467                // Method apply$default$12:()Z
        72: istore        13
        74: aload_1
        75: invokevirtual #469                // Method apply$default$13:()Z
        78: istore        14
        80: aload_1
        81: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        84: astore        15
        86: aload_1
        87: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        90: astore        16
        92: aload_1
        93: aload_3
        94: aload         4
        96: aload         5
        98: iload         6
       100: aload         7
       102: iload_2
       103: iload         8
       105: iload         9
       107: iload         10
       109: iload         11
       111: aload         12
       113: iload         13
       115: iload         14
       117: aload         15
       119: aload         16
       121: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       124: areturn
      LineNumberTable:
        line 340: 0
        line 341: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     115     2   x$1   Z
           14     110     3   x$2   Lorg/sireum/IS;
           20     104     4   x$3   Lorg/sireum/Os$Path;
           26      98     5   x$4   Lorg/sireum/Map;
           32      92     6   x$5   Z
           38      86     7   x$6   Lorg/sireum/Option;
           44      80     8   x$7   Z
           50      74     9   x$8   Z
           56      68    10   x$9   Z
           62      62    11  x$10   Z
           68      56    12  x$11   Lorg/sireum/Z;
           74      50    13  x$12   Z
           80      44    14  x$13   Z
           86      38    15  x$14   Lorg/sireum/Option;
           92      32    16  x$15   Lorg/sireum/Option;
            2     123     1 thisL   Lorg/sireum/Os$Proc;
            0     125     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Proc bufferErr();
    descriptor: ()Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=17, args_size=1
         0: aload_0
         1: astore_1
         2: getstatic     #526                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #533                // Method org/sireum/package$.T:()Z
         8: istore_2
         9: aload_1
        10: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        13: astore_3
        14: aload_1
        15: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        18: astore        4
        20: aload_1
        21: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        24: astore        5
        26: aload_1
        27: invokevirtual #451                // Method apply$default$4:()Z
        30: istore        6
        32: aload_1
        33: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        36: astore        7
        38: aload_1
        39: invokevirtual #455                // Method apply$default$6:()Z
        42: istore        8
        44: aload_1
        45: invokevirtual #457                // Method apply$default$7:()Z
        48: istore        9
        50: aload_1
        51: invokevirtual #461                // Method apply$default$9:()Z
        54: istore        10
        56: aload_1
        57: invokevirtual #463                // Method apply$default$10:()Z
        60: istore        11
        62: aload_1
        63: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        66: astore        12
        68: aload_1
        69: invokevirtual #467                // Method apply$default$12:()Z
        72: istore        13
        74: aload_1
        75: invokevirtual #469                // Method apply$default$13:()Z
        78: istore        14
        80: aload_1
        81: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        84: astore        15
        86: aload_1
        87: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        90: astore        16
        92: aload_1
        93: aload_3
        94: aload         4
        96: aload         5
        98: iload         6
       100: aload         7
       102: iload         8
       104: iload         9
       106: iload_2
       107: iload         10
       109: iload         11
       111: aload         12
       113: iload         13
       115: iload         14
       117: aload         15
       119: aload         16
       121: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       124: areturn
      LineNumberTable:
        line 345: 0
        line 346: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     115     2   x$1   Z
           14     110     3   x$2   Lorg/sireum/IS;
           20     104     4   x$3   Lorg/sireum/Os$Path;
           26      98     5   x$4   Lorg/sireum/Map;
           32      92     6   x$5   Z
           38      86     7   x$6   Lorg/sireum/Option;
           44      80     8   x$7   Z
           50      74     9   x$8   Z
           56      68    10   x$9   Z
           62      62    11  x$10   Z
           68      56    12  x$11   Lorg/sireum/Z;
           74      50    13  x$12   Z
           80      44    14  x$13   Z
           86      38    15  x$14   Lorg/sireum/Option;
           92      32    16  x$15   Lorg/sireum/Option;
            2     123     1 thisL   Lorg/sireum/Os$Proc;
            0     125     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Proc console();
    descriptor: ()Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=17, args_size=1
         0: aload_0
         1: astore_1
         2: getstatic     #526                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #533                // Method org/sireum/package$.T:()Z
         8: istore_2
         9: aload_1
        10: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        13: astore_3
        14: aload_1
        15: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        18: astore        4
        20: aload_1
        21: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        24: astore        5
        26: aload_1
        27: invokevirtual #451                // Method apply$default$4:()Z
        30: istore        6
        32: aload_1
        33: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        36: astore        7
        38: aload_1
        39: invokevirtual #455                // Method apply$default$6:()Z
        42: istore        8
        44: aload_1
        45: invokevirtual #459                // Method apply$default$8:()Z
        48: istore        9
        50: aload_1
        51: invokevirtual #461                // Method apply$default$9:()Z
        54: istore        10
        56: aload_1
        57: invokevirtual #463                // Method apply$default$10:()Z
        60: istore        11
        62: aload_1
        63: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        66: astore        12
        68: aload_1
        69: invokevirtual #467                // Method apply$default$12:()Z
        72: istore        13
        74: aload_1
        75: invokevirtual #469                // Method apply$default$13:()Z
        78: istore        14
        80: aload_1
        81: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        84: astore        15
        86: aload_1
        87: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        90: astore        16
        92: aload_1
        93: aload_3
        94: aload         4
        96: aload         5
        98: iload         6
       100: aload         7
       102: iload         8
       104: iload_2
       105: iload         9
       107: iload         10
       109: iload         11
       111: aload         12
       113: iload         13
       115: iload         14
       117: aload         15
       119: aload         16
       121: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       124: areturn
      LineNumberTable:
        line 350: 0
        line 351: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     115     2   x$1   Z
           14     110     3   x$2   Lorg/sireum/IS;
           20     104     4   x$3   Lorg/sireum/Os$Path;
           26      98     5   x$4   Lorg/sireum/Map;
           32      92     6   x$5   Z
           38      86     7   x$6   Lorg/sireum/Option;
           44      80     8   x$7   Z
           50      74     9   x$8   Z
           56      68    10   x$9   Z
           62      62    11  x$10   Z
           68      56    12  x$11   Lorg/sireum/Z;
           74      50    13  x$12   Z
           80      44    14  x$13   Z
           86      38    15  x$14   Lorg/sireum/Option;
           92      32    16  x$15   Lorg/sireum/Option;
            2     123     1 thisL   Lorg/sireum/Os$Proc;
            0     125     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Proc echoEnv();
    descriptor: ()Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=17, args_size=1
         0: aload_0
         1: astore_1
         2: getstatic     #526                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #533                // Method org/sireum/package$.T:()Z
         8: istore_2
         9: aload_1
        10: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        13: astore_3
        14: aload_1
        15: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        18: astore        4
        20: aload_1
        21: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        24: astore        5
        26: aload_1
        27: invokevirtual #451                // Method apply$default$4:()Z
        30: istore        6
        32: aload_1
        33: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        36: astore        7
        38: aload_1
        39: invokevirtual #455                // Method apply$default$6:()Z
        42: istore        8
        44: aload_1
        45: invokevirtual #457                // Method apply$default$7:()Z
        48: istore        9
        50: aload_1
        51: invokevirtual #459                // Method apply$default$8:()Z
        54: istore        10
        56: aload_1
        57: invokevirtual #463                // Method apply$default$10:()Z
        60: istore        11
        62: aload_1
        63: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        66: astore        12
        68: aload_1
        69: invokevirtual #467                // Method apply$default$12:()Z
        72: istore        13
        74: aload_1
        75: invokevirtual #469                // Method apply$default$13:()Z
        78: istore        14
        80: aload_1
        81: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        84: astore        15
        86: aload_1
        87: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        90: astore        16
        92: aload_1
        93: aload_3
        94: aload         4
        96: aload         5
        98: iload         6
       100: aload         7
       102: iload         8
       104: iload         9
       106: iload         10
       108: iload_2
       109: iload         11
       111: aload         12
       113: iload         13
       115: iload         14
       117: aload         15
       119: aload         16
       121: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       124: areturn
      LineNumberTable:
        line 355: 0
        line 356: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     115     2   x$1   Z
           14     110     3   x$2   Lorg/sireum/IS;
           20     104     4   x$3   Lorg/sireum/Os$Path;
           26      98     5   x$4   Lorg/sireum/Map;
           32      92     6   x$5   Z
           38      86     7   x$6   Lorg/sireum/Option;
           44      80     8   x$7   Z
           50      74     9   x$8   Z
           56      68    10   x$9   Z
           62      62    11  x$10   Z
           68      56    12  x$11   Lorg/sireum/Z;
           74      50    13  x$12   Z
           80      44    14  x$13   Z
           86      38    15  x$14   Lorg/sireum/Option;
           92      32    16  x$15   Lorg/sireum/Option;
            2     123     1 thisL   Lorg/sireum/Os$Proc;
            0     125     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Proc echo();
    descriptor: ()Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=17, args_size=1
         0: aload_0
         1: astore_1
         2: getstatic     #526                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #533                // Method org/sireum/package$.T:()Z
         8: istore_2
         9: aload_1
        10: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        13: astore_3
        14: aload_1
        15: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        18: astore        4
        20: aload_1
        21: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        24: astore        5
        26: aload_1
        27: invokevirtual #451                // Method apply$default$4:()Z
        30: istore        6
        32: aload_1
        33: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        36: astore        7
        38: aload_1
        39: invokevirtual #455                // Method apply$default$6:()Z
        42: istore        8
        44: aload_1
        45: invokevirtual #457                // Method apply$default$7:()Z
        48: istore        9
        50: aload_1
        51: invokevirtual #459                // Method apply$default$8:()Z
        54: istore        10
        56: aload_1
        57: invokevirtual #461                // Method apply$default$9:()Z
        60: istore        11
        62: aload_1
        63: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        66: astore        12
        68: aload_1
        69: invokevirtual #467                // Method apply$default$12:()Z
        72: istore        13
        74: aload_1
        75: invokevirtual #469                // Method apply$default$13:()Z
        78: istore        14
        80: aload_1
        81: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        84: astore        15
        86: aload_1
        87: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        90: astore        16
        92: aload_1
        93: aload_3
        94: aload         4
        96: aload         5
        98: iload         6
       100: aload         7
       102: iload         8
       104: iload         9
       106: iload         10
       108: iload         11
       110: iload_2
       111: aload         12
       113: iload         13
       115: iload         14
       117: aload         15
       119: aload         16
       121: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       124: areturn
      LineNumberTable:
        line 360: 0
        line 361: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     115     2   x$1   Z
           14     110     3   x$2   Lorg/sireum/IS;
           20     104     4   x$3   Lorg/sireum/Os$Path;
           26      98     5   x$4   Lorg/sireum/Map;
           32      92     6   x$5   Z
           38      86     7   x$6   Lorg/sireum/Option;
           44      80     8   x$7   Z
           50      74     9   x$8   Z
           56      68    10   x$9   Z
           62      62    11  x$10   Z
           68      56    12  x$11   Lorg/sireum/Z;
           74      50    13  x$12   Z
           80      44    14  x$13   Z
           86      38    15  x$14   Lorg/sireum/Option;
           92      32    16  x$15   Lorg/sireum/Option;
            2     123     1 thisL   Lorg/sireum/Os$Proc;
            0     125     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Proc standard();
    descriptor: ()Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=17, args_size=1
         0: aload_0
         1: astore_1
         2: getstatic     #526                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #533                // Method org/sireum/package$.T:()Z
         8: istore_2
         9: aload_1
        10: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        13: astore_3
        14: aload_1
        15: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        18: astore        4
        20: aload_1
        21: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        24: astore        5
        26: aload_1
        27: invokevirtual #451                // Method apply$default$4:()Z
        30: istore        6
        32: aload_1
        33: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        36: astore        7
        38: aload_1
        39: invokevirtual #455                // Method apply$default$6:()Z
        42: istore        8
        44: aload_1
        45: invokevirtual #457                // Method apply$default$7:()Z
        48: istore        9
        50: aload_1
        51: invokevirtual #459                // Method apply$default$8:()Z
        54: istore        10
        56: aload_1
        57: invokevirtual #461                // Method apply$default$9:()Z
        60: istore        11
        62: aload_1
        63: invokevirtual #463                // Method apply$default$10:()Z
        66: istore        12
        68: aload_1
        69: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        72: astore        13
        74: aload_1
        75: invokevirtual #469                // Method apply$default$13:()Z
        78: istore        14
        80: aload_1
        81: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        84: astore        15
        86: aload_1
        87: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        90: astore        16
        92: aload_1
        93: aload_3
        94: aload         4
        96: aload         5
        98: iload         6
       100: aload         7
       102: iload         8
       104: iload         9
       106: iload         10
       108: iload         11
       110: iload         12
       112: aload         13
       114: iload_2
       115: iload         14
       117: aload         15
       119: aload         16
       121: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       124: areturn
      LineNumberTable:
        line 365: 0
        line 366: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     115     2   x$1   Z
           14     110     3   x$2   Lorg/sireum/IS;
           20     104     4   x$3   Lorg/sireum/Os$Path;
           26      98     5   x$4   Lorg/sireum/Map;
           32      92     6   x$5   Z
           38      86     7   x$6   Lorg/sireum/Option;
           44      80     8   x$7   Z
           50      74     9   x$8   Z
           56      68    10   x$9   Z
           62      62    11  x$10   Z
           68      56    12  x$11   Z
           74      50    13  x$12   Lorg/sireum/Z;
           80      44    14  x$13   Z
           86      38    15  x$14   Lorg/sireum/Option;
           92      32    16  x$15   Lorg/sireum/Option;
            2     123     1 thisL   Lorg/sireum/Os$Proc;
            0     125     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Proc script();
    descriptor: ()Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=17, args_size=1
         0: aload_0
         1: astore_1
         2: getstatic     #526                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #533                // Method org/sireum/package$.T:()Z
         8: istore_2
         9: aload_1
        10: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        13: astore_3
        14: aload_1
        15: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        18: astore        4
        20: aload_1
        21: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        24: astore        5
        26: aload_1
        27: invokevirtual #451                // Method apply$default$4:()Z
        30: istore        6
        32: aload_1
        33: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        36: astore        7
        38: aload_1
        39: invokevirtual #455                // Method apply$default$6:()Z
        42: istore        8
        44: aload_1
        45: invokevirtual #457                // Method apply$default$7:()Z
        48: istore        9
        50: aload_1
        51: invokevirtual #459                // Method apply$default$8:()Z
        54: istore        10
        56: aload_1
        57: invokevirtual #461                // Method apply$default$9:()Z
        60: istore        11
        62: aload_1
        63: invokevirtual #463                // Method apply$default$10:()Z
        66: istore        12
        68: aload_1
        69: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        72: astore        13
        74: aload_1
        75: invokevirtual #467                // Method apply$default$12:()Z
        78: istore        14
        80: aload_1
        81: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        84: astore        15
        86: aload_1
        87: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        90: astore        16
        92: aload_1
        93: aload_3
        94: aload         4
        96: aload         5
        98: iload         6
       100: aload         7
       102: iload         8
       104: iload         9
       106: iload         10
       108: iload         11
       110: iload         12
       112: aload         13
       114: iload         14
       116: iload_2
       117: aload         15
       119: aload         16
       121: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       124: areturn
      LineNumberTable:
        line 370: 0
        line 371: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     115     2   x$1   Z
           14     110     3   x$2   Lorg/sireum/IS;
           20     104     4   x$3   Lorg/sireum/Os$Path;
           26      98     5   x$4   Lorg/sireum/Map;
           32      92     6   x$5   Z
           38      86     7   x$6   Lorg/sireum/Option;
           44      80     8   x$7   Z
           50      74     9   x$8   Z
           56      68    10   x$9   Z
           62      62    11  x$10   Z
           68      56    12  x$11   Z
           74      50    13  x$12   Lorg/sireum/Z;
           80      44    14  x$13   Z
           86      38    15  x$14   Lorg/sireum/Option;
           92      32    16  x$15   Lorg/sireum/Option;
            2     123     1 thisL   Lorg/sireum/Os$Proc;
            0     125     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Proc outLineAction(scala.Function1<org.sireum.String, org.sireum.B>);
    descriptor: (Lscala/Function1;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=18, args_size=2
         0: aload_0
         1: astore_2
         2: getstatic     #167                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         5: aload_1
         6: invokevirtual #178                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
         9: astore_3
        10: aload_2
        11: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        14: astore        4
        16: aload_2
        17: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        20: astore        5
        22: aload_2
        23: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        26: astore        6
        28: aload_2
        29: invokevirtual #451                // Method apply$default$4:()Z
        32: istore        7
        34: aload_2
        35: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        38: astore        8
        40: aload_2
        41: invokevirtual #455                // Method apply$default$6:()Z
        44: istore        9
        46: aload_2
        47: invokevirtual #457                // Method apply$default$7:()Z
        50: istore        10
        52: aload_2
        53: invokevirtual #459                // Method apply$default$8:()Z
        56: istore        11
        58: aload_2
        59: invokevirtual #461                // Method apply$default$9:()Z
        62: istore        12
        64: aload_2
        65: invokevirtual #463                // Method apply$default$10:()Z
        68: istore        13
        70: aload_2
        71: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        74: astore        14
        76: aload_2
        77: invokevirtual #467                // Method apply$default$12:()Z
        80: istore        15
        82: aload_2
        83: invokevirtual #469                // Method apply$default$13:()Z
        86: istore        16
        88: aload_2
        89: invokevirtual #473                // Method apply$default$15:()Lorg/sireum/Option;
        92: astore        17
        94: aload_2
        95: aload         4
        97: aload         5
        99: aload         6
       101: iload         7
       103: aload         8
       105: iload         9
       107: iload         10
       109: iload         11
       111: iload         12
       113: iload         13
       115: aload         14
       117: iload         15
       119: iload         16
       121: aload_3
       122: aload         17
       124: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       127: areturn
      LineNumberTable:
        line 375: 0
        line 376: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10     117     3   x$1   Lorg/sireum/Some;
           16     111     4   x$2   Lorg/sireum/IS;
           22     105     5   x$3   Lorg/sireum/Os$Path;
           28      99     6   x$4   Lorg/sireum/Map;
           34      93     7   x$5   Z
           40      87     8   x$6   Lorg/sireum/Option;
           46      81     9   x$7   Z
           52      75    10   x$8   Z
           58      69    11   x$9   Z
           64      63    12  x$10   Z
           70      57    13  x$11   Z
           76      51    14  x$12   Lorg/sireum/Z;
           82      45    15  x$13   Z
           88      39    16  x$14   Z
           94      33    17  x$15   Lorg/sireum/Option;
            2     126     2 thisL   Lorg/sireum/Os$Proc;
            0     128     0  this   Lorg/sireum/Os$Proc;
            0     128     1     f   Lscala/Function1;
    Signature: #542                         // (Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;)Lorg/sireum/Os$Proc;
    MethodParameters:
      Name                           Flags
      f                              final

  public org.sireum.Os$Proc errLineAction(scala.Function1<org.sireum.String, org.sireum.B>);
    descriptor: (Lscala/Function1;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=18, args_size=2
         0: aload_0
         1: astore_2
         2: getstatic     #167                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         5: aload_1
         6: invokevirtual #178                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
         9: astore_3
        10: aload_2
        11: invokevirtual #489                // Method apply$default$1:()Lorg/sireum/IS;
        14: astore        4
        16: aload_2
        17: invokevirtual #447                // Method apply$default$2:()Lorg/sireum/Os$Path;
        20: astore        5
        22: aload_2
        23: invokevirtual #449                // Method apply$default$3:()Lorg/sireum/Map;
        26: astore        6
        28: aload_2
        29: invokevirtual #451                // Method apply$default$4:()Z
        32: istore        7
        34: aload_2
        35: invokevirtual #453                // Method apply$default$5:()Lorg/sireum/Option;
        38: astore        8
        40: aload_2
        41: invokevirtual #455                // Method apply$default$6:()Z
        44: istore        9
        46: aload_2
        47: invokevirtual #457                // Method apply$default$7:()Z
        50: istore        10
        52: aload_2
        53: invokevirtual #459                // Method apply$default$8:()Z
        56: istore        11
        58: aload_2
        59: invokevirtual #461                // Method apply$default$9:()Z
        62: istore        12
        64: aload_2
        65: invokevirtual #463                // Method apply$default$10:()Z
        68: istore        13
        70: aload_2
        71: invokevirtual #465                // Method apply$default$11:()Lorg/sireum/Z;
        74: astore        14
        76: aload_2
        77: invokevirtual #467                // Method apply$default$12:()Z
        80: istore        15
        82: aload_2
        83: invokevirtual #469                // Method apply$default$13:()Z
        86: istore        16
        88: aload_2
        89: invokevirtual #471                // Method apply$default$14:()Lorg/sireum/Option;
        92: astore        17
        94: aload_2
        95: aload         4
        97: aload         5
        99: aload         6
       101: iload         7
       103: aload         8
       105: iload         9
       107: iload         10
       109: iload         11
       111: iload         12
       113: iload         13
       115: aload         14
       117: iload         15
       119: iload         16
       121: aload         17
       123: aload_3
       124: invokevirtual #475                // Method apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
       127: areturn
      LineNumberTable:
        line 380: 0
        line 381: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10     117     3   x$1   Lorg/sireum/Some;
           16     111     4   x$2   Lorg/sireum/IS;
           22     105     5   x$3   Lorg/sireum/Os$Path;
           28      99     6   x$4   Lorg/sireum/Map;
           34      93     7   x$5   Z
           40      87     8   x$6   Lorg/sireum/Option;
           46      81     9   x$7   Z
           52      75    10   x$8   Z
           58      69    11   x$9   Z
           64      63    12  x$10   Z
           70      57    13  x$11   Z
           76      51    14  x$12   Lorg/sireum/Z;
           82      45    15  x$13   Z
           88      39    16  x$14   Z
           94      33    17  x$15   Lorg/sireum/Option;
            2     126     2 thisL   Lorg/sireum/Os$Proc;
            0     128     0  this   Lorg/sireum/Os$Proc;
            0     128     1     f   Lscala/Function1;
    Signature: #542                         // (Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;)Lorg/sireum/Os$Proc;
    MethodParameters:
      Name                           Flags
      f                              final

  public org.sireum.Os$Proc$Result run();
    descriptor: ()Lorg/sireum/Os$Proc$Result;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #549                // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: aload_0
         4: invokevirtual #553                // Method org/sireum/Os$Ext$.proc:(Lorg/sireum/Os$Proc;)Lorg/sireum/Os$Proc$Result;
         7: astore_1
         8: aload_1
         9: areturn
      LineNumberTable:
        line 385: 0
        line 386: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8       2     1     r   Lorg/sireum/Os$Proc$Result;
            0      10     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.Os$Proc$Result runCheck();
    descriptor: ()Lorg/sireum/Os$Proc$Result;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=24, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #558                // Method run:()Lorg/sireum/Os$Proc$Result;
         4: astore_1
         5: getstatic     #563                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         8: getstatic     #563                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: aload_1
        12: invokeinterface #566,  1          // InterfaceMethod org/sireum/Os$Proc$Result.ok:()Z
        17: invokevirtual #570                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        20: invokevirtual #573                // Method org/sireum/B$.$4B:(Z)Z
        23: ifeq          297
        26: getstatic     #526                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        29: getstatic     #324                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        32: iconst_1
        33: anewarray     #4                  // class java/lang/Object
        36: dup
        37: iconst_0
        38: new           #169                // class org/sireum/String
        41: dup
        42: getstatic     #578                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
        45: getstatic     #315                // Field scala/package$.MODULE$:Lscala/package$;
        48: invokevirtual #319                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        51: getstatic     #324                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        54: iconst_4
        55: anewarray     #297                // class java/lang/String
        58: dup
        59: iconst_0
        60: ldc_w         #580                // String Error encountered when running:
        63: aastore
        64: dup
        65: iconst_1
        66: ldc_w         #582                // String , exit code:
        69: aastore
        70: dup
        71: iconst_2
        72: ldc_w         #584                // String \n              |
        75: aastore
        76: dup
        77: iconst_3
        78: ldc_w         #586                // String
        81: aastore
        82: checkcast     #404                // class "[Ljava/lang/Object;"
        85: invokevirtual #408                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        88: invokevirtual #342                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        91: checkcast     #433                // class scala/collection/immutable/Seq
        94: getstatic     #315                // Field scala/package$.MODULE$:Lscala/package$;
        97: invokevirtual #319                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       100: getstatic     #324                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       103: iconst_3
       104: anewarray     #56                 // class org/sireum/ST$Arg
       107: dup
       108: iconst_0
       109: getstatic     #589                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
       112: aload_0
       113: invokevirtual #258                // Method cmds:()Lorg/sireum/IS;
       116: invokevirtual #592                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
       119: invokedynamic #609,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       124: invokeinterface #613,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       129: checkcast     #433                // class scala/collection/immutable/Seq
       132: getstatic     #256                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       135: ldc_w         #615                // String
       138: invokevirtual #302                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       141: invokevirtual #618                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       144: aastore
       145: dup
       146: iconst_1
       147: getstatic     #589                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
       150: getstatic     #315                // Field scala/package$.MODULE$:Lscala/package$;
       153: invokevirtual #319                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       156: getstatic     #324                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       159: iconst_1
       160: anewarray     #4                  // class java/lang/Object
       163: dup
       164: iconst_0
       165: getstatic     #623                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       168: aload_1
       169: invokeinterface #626,  1          // InterfaceMethod org/sireum/Os$Proc$Result.exitCode:()Lorg/sireum/Z;
       174: invokevirtual #628                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       177: aastore
       178: invokevirtual #337                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       181: invokevirtual #342                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       184: checkcast     #433                // class scala/collection/immutable/Seq
       187: ldc_w         #586                // String
       190: invokevirtual #618                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       193: aastore
       194: dup
       195: iconst_2
       196: getstatic     #589                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
       199: getstatic     #315                // Field scala/package$.MODULE$:Lscala/package$;
       202: invokevirtual #319                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       205: getstatic     #324                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       208: iconst_1
       209: anewarray     #4                  // class java/lang/Object
       212: dup
       213: iconst_0
       214: getstatic     #623                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       217: new           #169                // class org/sireum/String
       220: dup
       221: aload_1
       222: invokeinterface #631,  1          // InterfaceMethod org/sireum/Os$Proc$Result.err:()Ljava/lang/String;
       227: invokespecial #175                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       230: invokevirtual #628                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       233: aastore
       234: invokevirtual #337                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       237: invokevirtual #342                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       240: checkcast     #433                // class scala/collection/immutable/Seq
       243: ldc_w         #586                // String
       246: invokevirtual #618                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       249: aastore
       250: checkcast     #404                // class "[Ljava/lang/Object;"
       253: invokevirtual #408                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       256: invokevirtual #342                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       259: checkcast     #433                // class scala/collection/immutable/Seq
       262: ldc_w         #633                // String           st\"\"\"Error encountered when running: ${(cmds, \" \")}, exit code: ${r.exitCode}\n              |${r.err}\"\"\"
       265: invokevirtual #636                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       268: invokevirtual #639                // Method org/sireum/ST.render:()Ljava/lang/String;
       271: invokespecial #175                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       274: aastore
       275: invokevirtual #337                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       278: invokevirtual #643                // Method org/sireum/package$.eprintln:(Lscala/collection/immutable/Seq;)V
       281: getstatic     #648                // Field org/sireum/Os$.MODULE$:Lorg/sireum/Os$;
       284: getstatic     #653                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       287: iconst_m1
       288: invokevirtual #656                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       291: invokevirtual #660                // Method org/sireum/Os$.exit:(Lorg/sireum/Z;)V
       294: goto          297
       297: aload_1
       298: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 297
          locals = [ class org/sireum/Os$Proc$Result ]
      LineNumberTable:
        line 390: 0
        line 391: 5
        line 392: 26
        line 394: 38
        line 393: 42
        line 394: 78
        line 393: 94
        line 394: 217
        line 393: 243
        line 395: 281
        line 397: 297
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5     294     1     r   Lorg/sireum/Os$Proc$Result;
            0     299     0  this   Lorg/sireum/Os$Proc;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #663                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc$Result runCheck();
    descriptor: ()Lorg/sireum/OsProto$Proc$Result;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #666                // Method runCheck:()Lorg/sireum/Os$Proc$Result;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc$Result run();
    descriptor: ()Lorg/sireum/OsProto$Proc$Result;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #558                // Method run:()Lorg/sireum/Os$Proc$Result;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc errLineAction(scala.Function1);
    descriptor: (Lscala/Function1;)Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #669                // Method errLineAction:(Lscala/Function1;)Lorg/sireum/Os$Proc;
         5: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Proc;
            0       6     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f                              final

  public org.sireum.OsProto$Proc outLineAction(scala.Function1);
    descriptor: (Lscala/Function1;)Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #671                // Method outLineAction:(Lscala/Function1;)Lorg/sireum/Os$Proc;
         5: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Proc;
            0       6     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f                              final

  public org.sireum.OsProto$Proc script();
    descriptor: ()Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #674                // Method script:()Lorg/sireum/Os$Proc;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc standard();
    descriptor: ()Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #676                // Method standard:()Lorg/sireum/Os$Proc;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc echo();
    descriptor: ()Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #678                // Method echo:()Lorg/sireum/Os$Proc;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc echoEnv();
    descriptor: ()Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #680                // Method echoEnv:()Lorg/sireum/Os$Proc;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc console();
    descriptor: ()Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #682                // Method console:()Lorg/sireum/Os$Proc;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc bufferErr();
    descriptor: ()Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #684                // Method bufferErr:()Lorg/sireum/Os$Proc;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc redirectErr();
    descriptor: ()Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #686                // Method redirectErr:()Lorg/sireum/Os$Proc;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc dontInheritEnv();
    descriptor: ()Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #688                // Method dontInheritEnv:()Lorg/sireum/Os$Proc;
         4: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Proc;

  public org.sireum.OsProto$Proc timeout(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #691                // Method timeout:(Lorg/sireum/Z;)Lorg/sireum/Os$Proc;
         5: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Proc;
            0       6     1 millis   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      millis                         final

  public org.sireum.OsProto$Proc input(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #694                // Method input:(Ljava/lang/String;)Lorg/sireum/Os$Proc;
         5: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Proc;
            0       6     1 content   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      content                        final

  public org.sireum.OsProto$Proc env(org.sireum.IS);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #697                // Method env:(Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
         5: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Proc;
            0       6     1     m   Lorg/sireum/IS;
    MethodParameters:
      Name                           Flags
      m                              final

  public org.sireum.OsProto$Proc at(org.sireum.OsProto$Path);
    descriptor: (Lorg/sireum/OsProto$Path;)Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #700                // Method at:(Lorg/sireum/OsProto$Path;)Lorg/sireum/Os$Proc;
         5: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Proc;
            0       6     1   dir   Lorg/sireum/OsProto$Path;
    MethodParameters:
      Name                           Flags
      dir                            final

  public org.sireum.OsProto$Proc commands(org.sireum.IS);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/OsProto$Proc;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #702                // Method commands:(Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
         5: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/Os$Proc;
            0       6     1    cs   Lorg/sireum/IS;
    MethodParameters:
      Name                           Flags
      cs                             final

  public static final java.lang.String $anonfun$_in$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: ifnonnull     8
         4: aconst_null
         5: goto          12
         8: aconst_null
         9: invokevirtual #706                // Method org/sireum/String.value:()Ljava/lang/String;
        12: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 293: 8

  public static final scala.Function1 $anonfun$_outLineActionOpt$1();
    descriptor: ()Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 293: 0

  public static final scala.Function1 $anonfun$_errLineActionOpt$1();
    descriptor: ()Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 293: 0

  public static final java.lang.Object $anonfun$runCheck$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #623                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
         3: aload_0
         4: invokevirtual #628                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 393: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.Os$Proc(org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.Os$Path, org.sireum.Map<org.sireum.String, org.sireum.String>, boolean, org.sireum.Option<org.sireum.String>, boolean, boolean, boolean, boolean, boolean, org.sireum.Z, boolean, boolean, org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>>, org.sireum.Option<scala.Function1<org.sireum.String, org.sireum.B>>);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=16, args_size=16
         0: aload_0
         1: invokespecial #725                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #729                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #732                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #735                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #131                // Field _cmds:Lorg/sireum/IS;
        21: aload_0
        22: aload_2
        23: putfield      #136                // Field _wd:Lorg/sireum/Os$Path;
        26: aload_0
        27: aload_3
        28: putfield      #142                // Field _envMap:Lorg/sireum/Map;
        31: aload_0
        32: iload         4
        34: putfield      #146                // Field _shouldAddEnv:Z
        37: aload_0
        38: aload         5
        40: invokeinterface #738,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        45: putfield      #152                // Field _bin:Z
        48: aload_0
        49: aload         5
        51: invokedynamic #746,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
        56: invokeinterface #750,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        61: checkcast     #169                // class org/sireum/String
        64: invokevirtual #706                // Method org/sireum/String.value:()Ljava/lang/String;
        67: putfield      #171                // Field _in:Ljava/lang/String;
        70: aload_0
        71: iload         6
        73: putfield      #184                // Field _isErrAsOut:Z
        76: aload_0
        77: iload         7
        79: putfield      #188                // Field _shouldOutputConsole:Z
        82: aload_0
        83: iload         8
        85: putfield      #192                // Field _isErrBuffered:Z
        88: aload_0
        89: iload         9
        91: putfield      #196                // Field _shouldPrintEnv:Z
        94: aload_0
        95: iload         10
        97: putfield      #200                // Field _shouldPrintCommands:Z
       100: aload_0
       101: aload         11
       103: putfield      #204                // Field _timeoutInMillis:Lorg/sireum/Z;
       106: aload_0
       107: iload         12
       109: putfield      #208                // Field _shouldUseStandardLib:Z
       112: aload_0
       113: iload         13
       115: putfield      #212                // Field _isScript:Z
       118: aload_0
       119: aload         14
       121: invokeinterface #738,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
       126: putfield      #217                // Field _boutLineActionOpt:Z
       129: aload_0
       130: aload         14
       132: invokedynamic #756,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
       137: invokeinterface #750,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       142: checkcast     #758                // class scala/Function1
       145: putfield      #219                // Field _outLineActionOpt:Lscala/Function1;
       148: aload_0
       149: aload         15
       151: invokeinterface #738,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
       156: putfield      #225                // Field _berrLineActionOpt:Z
       159: aload_0
       160: aload         15
       162: invokedynamic #762,  0            // InvokeDynamic #3:apply:()Lscala/Function0;
       167: invokeinterface #750,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       172: checkcast     #758                // class scala/Function1
       175: putfield      #227                // Field _errLineActionOpt:Lscala/Function1;
       178: return
      LineNumberTable:
        line 307: 0
        line 293: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     179     0  this   Lorg/sireum/Os$Proc;
            0     179     1 __cmds   Lorg/sireum/IS;
            0     179     2  __wd   Lorg/sireum/Os$Path;
            0     179     3 __envMap   Lorg/sireum/Map;
            0     179     4 __shouldAddEnv   Z
            0     179     5  __in   Lorg/sireum/Option;
            0     179     6 __isErrAsOut   Z
            0     179     7 __shouldOutputConsole   Z
            0     179     8 __isErrBuffered   Z
            0     179     9 __shouldPrintEnv   Z
            0     179    10 __shouldPrintCommands   Z
            0     179    11 __timeoutInMillis   Lorg/sireum/Z;
            0     179    12 __shouldUseStandardLib   Z
            0     179    13 __isScript   Z
            0     179    14 __outLineActionOpt   Lorg/sireum/Option;
            0     179    15 __errLineActionOpt   Lorg/sireum/Option;
    Signature: #709                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Os$Path;Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;ZLorg/sireum/Option<Lorg/sireum/String;>;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;Lorg/sireum/Option<Lscala/Function1<Lorg/sireum/String;Lorg/sireum/B;>;>;)V
    MethodParameters:
      Name                           Flags
      __cmds                         final
      __wd                           final
      __envMap                       final
      __shouldAddEnv                 final
      __in                           final
      __isErrAsOut                   final
      __shouldOutputConsole          final
      __isErrBuffered                final
      __shouldPrintEnv               final
      __shouldPrintCommands          final
      __timeoutInMillis              final
      __shouldUseStandardLib         final
      __isScript                     final
      __outLineActionOpt             final
      __errLineActionOpt             final

  public static final java.lang.Object $anonfun$_in$1$adapted();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #169                // class org/sireum/String
         3: dup
         4: invokestatic  #764                // Method $anonfun$_in$1:()Ljava/lang/String;
         7: invokespecial #175                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        10: areturn
      LineNumberTable:
        line 293: 0

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #776,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #14= #11 of #13;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #19= #16 of #18;          // Ext$=class org/sireum/Os$Ext$ of class org/sireum/Os
  public static #22= #21 of #18;          // Path=class org/sireum/Os$Path of class org/sireum/Os
  public static #25= #24 of #18;          // Path$=class org/sireum/Os$Path$ of class org/sireum/Os
  public static final #28= #27 of #24;    // Impl=class org/sireum/Os$Path$Impl of class org/sireum/Os$Path$
  public static #31= #30 of #24;          // Impl$=class org/sireum/Os$Path$Impl$ of class org/sireum/Os$Path$
  public static final #32= #2 of #18;     // Proc=class org/sireum/Os$Proc of class org/sireum/Os
  public static #35= #34 of #18;          // Proc$=class org/sireum/Os$Proc$ of class org/sireum/Os
  public static #38= #37 of #34;          // Result=class org/sireum/Os$Proc$Result of class org/sireum/Os$Proc$
  public static #22= #40 of #42;          // Path=class org/sireum/OsProto$Path of class org/sireum/OsProto
  public static #32= #6 of #42;           // Proc=class org/sireum/OsProto$Proc of class org/sireum/OsProto
  public static #35= #44 of #42;          // Proc$=class org/sireum/OsProto$Proc$ of class org/sireum/OsProto
  public static #38= #46 of #44;          // Result=class org/sireum/OsProto$Proc$Result of class org/sireum/OsProto$Proc$
  public static final #51= #48 of #50;    // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #54= #53 of #50;          // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #57= #56 of #50;          // Arg=class org/sireum/ST$Arg of class org/sireum/ST
SourceFile: "Os.scala"
BootstrapMethods:
  0: #606 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #594 (Ljava/lang/Object;)Ljava/lang/Object;
      #598 REF_invokeStatic org/sireum/Os$Proc.$anonfun$runCheck$1:(Ljava/lang/Object;)Ljava/lang/Object;
      #594 (Ljava/lang/Object;)Ljava/lang/Object;
      #599 1
  1: #606 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #739 ()Ljava/lang/Object;
      #743 REF_invokeStatic org/sireum/Os$Proc.$anonfun$_in$1$adapted:()Ljava/lang/Object;
      #739 ()Ljava/lang/Object;
      #599 1
  2: #606 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #739 ()Ljava/lang/Object;
      #753 REF_invokeStatic org/sireum/Os$Proc.$anonfun$_outLineActionOpt$1:()Lscala/Function1;
      #754 ()Lscala/Function1;
      #755 5
      #599 1
      #754 ()Lscala/Function1;
  3: #606 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #739 ()Ljava/lang/Object;
      #761 REF_invokeStatic org/sireum/Os$Proc.$anonfun$_errLineActionOpt$1:()Lscala/Function1;
      #754 ()Lscala/Function1;
      #755 5
      #599 1
      #754 ()Lscala/Function1;
  4: #773 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #761 REF_invokeStatic org/sireum/Os$Proc.$anonfun$_errLineActionOpt$1:()Lscala/Function1;
      #743 REF_invokeStatic org/sireum/Os$Proc.$anonfun$_in$1$adapted:()Ljava/lang/Object;
      #753 REF_invokeStatic org/sireum/Os$Proc.$anonfun$_outLineActionOpt$1:()Lscala/Function1;
      #598 REF_invokeStatic org/sireum/Os$Proc.$anonfun$runCheck$1:(Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x1F3 (unknown attribute)
   01 01 00 63 02 C4 02 5F 01 02 BF 00 E8 01 02 E4
   02 95 01 02 C3 02 5F 01 02 53 02 51 01 00 65 00
   66 01 00 77 02 95 01 00 77 00 78 01 00 3C 01 85
   01 01 84 01 85 01 00 6D 00 6E 01 00 73 00 6E 01
   00 AC 01 71 01 00 9F 01 6F 01 01 75 00 80 01 01
   7E 00 6E 01 01 7F 00 5E 01 01 80 00 6E 01 01 81
   00 6E 01 01 82 00 95 01 01 83 00 95 01 01 76 00
   86 01 01 77 00 8B 01 01 78 00 6E 01 01 79 00 95
   01 01 7A 00 6E 01 01 7B 00 6E 01 01 7C 00 6E 01
   01 7D 00 6E 01 01 DD 01 DE 01 01 DD 02 BA 01 02
   16 02 09 01 02 16 02 A0 01 00 7F 00 80 01 01 B6
   01 B7 01 01 B6 02 B7 01 02 17 02 09 01 02 17 02
   A0 01 02 08 02 09 01 02 08 02 A0 01 02 19 02 09
   01 02 19 02 A0 01 02 18 02 09 01 02 18 02 A0 01
   01 FB 01 B7 01 01 FB 02 B7 01 00 8A 00 8B 01 01
   60 01 61 01 02 20 02 1D 01 02 20 02 9B 01 00 DF
   00 95 01 00 84 00 80 01 00 8F 00 8B 01 00 E4 00
   95 01 00 B3 00 95 01 00 B9 00 6E 01 00 C1 00 6E
   01 00 D5 00 6E 01 00 DC 00 95 01 00 93 00 6E 01
   00 BD 00 6E 01 00 C9 00 6E 01 00 C5 00 6E 01 00
   D1 00 6E 01 00 CD 00 5E 01 00 89 00 86 01 00 5D
   00 5E 01 00 3A 01 30 01 01 2F 01 30 01 00 94 00
   95 01 02 01 02 02 01 02 01 02 B4 01 00 B6 00 6E
   01 00 BE 00 6E 01 00 D2 00 6E 01 02 1C 02 1D 01
   02 1C 02 9B 01 00 D6 00 95 01 02 12 02 09 01 02
   12 02 A0 01 02 21 02 22 01 02 21 02 98 01 02 2C
   02 22 01 02 2C 02 98 01 02 1B 02 09 01 02 1B 02
   A0 01 00 90 00 6E 01 00 BA 00 6E 01 00 C6 00 6E
   01 00 C2 00 6E 01 00 CE 00 6E 01 02 1A 02 09 01
   02 1A 02 A0 01 01 2A 00 E8 01 02 05 02 06 01 02
   05 02 B1 01 00 CA 00 5E 01 00 E7 00 E8 01 00 85
   00 86 01
  Scala: length = 0x0 (unknown attribute)

