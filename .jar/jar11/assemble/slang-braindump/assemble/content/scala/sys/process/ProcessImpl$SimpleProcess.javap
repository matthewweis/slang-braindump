Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/sys/process/ProcessImpl$SimpleProcess.class
  Last modified May 29, 2022; size 2753 bytes
  SHA-256 checksum 5a587a6b7e4e1fdfe9c374894bc042a452b270667bf620fea070af899bc78230
  Compiled from "ProcessImpl.scala"
public class scala.sys.process.ProcessImpl$SimpleProcess implements scala.sys.process.Process
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/sys/process/ProcessImpl$SimpleProcess
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 4, methods: 10, attributes: 4
Constant pool:
    #1 = Utf8               scala/sys/process/ProcessImpl$SimpleProcess
    #2 = Class              #1            // scala/sys/process/ProcessImpl$SimpleProcess
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/sys/process/Process
    #6 = Class              #5            // scala/sys/process/Process
    #7 = Utf8               ProcessImpl.scala
    #8 = Utf8               scala/sys/process/ProcessImpl
    #9 = Class              #8            // scala/sys/process/ProcessImpl
   #10 = Utf8               SimpleProcess
   #11 = Utf8               p
   #12 = Utf8               Ljava/lang/Process;
   #13 = Utf8               inputThread
   #14 = Utf8               Ljava/lang/Thread;
   #15 = Utf8               outputThreads
   #16 = Utf8               Lscala/collection/immutable/List;
   #17 = Utf8               Lscala/collection/immutable/List<Ljava/lang/Thread;>;
   #18 = Utf8               $outer
   #19 = Utf8               Lscala/sys/process/Process$;
   #20 = Utf8               isAlive
   #21 = Utf8               ()Z
   #22 = NameAndType        #11:#12       // p:Ljava/lang/Process;
   #23 = Fieldref           #2.#22        // scala/sys/process/ProcessImpl$SimpleProcess.p:Ljava/lang/Process;
   #24 = Utf8               java/lang/Process
   #25 = Class              #24           // java/lang/Process
   #26 = NameAndType        #20:#21       // isAlive:()Z
   #27 = Methodref          #25.#26       // java/lang/Process.isAlive:()Z
   #28 = Utf8               this
   #29 = Utf8               Lscala/sys/process/ProcessImpl$SimpleProcess;
   #30 = Utf8               exitValue
   #31 = Utf8               ()I
   #32 = Utf8               waitFor
   #33 = NameAndType        #32:#31       // waitFor:()I
   #34 = Methodref          #25.#33       // java/lang/Process.waitFor:()I
   #35 = Utf8               interrupt
   #36 = Utf8               ()V
   #37 = NameAndType        #35:#36       // interrupt:()V
   #38 = Methodref          #2.#37        // scala/sys/process/ProcessImpl$SimpleProcess.interrupt:()V
   #39 = NameAndType        #15:#16       // outputThreads:Lscala/collection/immutable/List;
   #40 = Fieldref           #2.#39        // scala/sys/process/ProcessImpl$SimpleProcess.outputThreads:Lscala/collection/immutable/List;
   #41 = Utf8               scala/collection/immutable/List
   #42 = Class              #41           // scala/collection/immutable/List
   #43 = Utf8               isEmpty
   #44 = NameAndType        #43:#21       // isEmpty:()Z
   #45 = Methodref          #42.#44       // scala/collection/immutable/List.isEmpty:()Z
   #46 = Utf8               head
   #47 = Utf8               ()Ljava/lang/Object;
   #48 = NameAndType        #46:#47       // head:()Ljava/lang/Object;
   #49 = Methodref          #42.#48       // scala/collection/immutable/List.head:()Ljava/lang/Object;
   #50 = Utf8               java/lang/Thread
   #51 = Class              #50           // java/lang/Thread
   #52 = Utf8               join
   #53 = NameAndType        #52:#36       // join:()V
   #54 = Methodref          #51.#53       // java/lang/Thread.join:()V
   #55 = Utf8               tail
   #56 = NameAndType        #55:#47       // tail:()Ljava/lang/Object;
   #57 = Methodref          #42.#56       // scala/collection/immutable/List.tail:()Ljava/lang/Object;
   #58 = NameAndType        #30:#31       // exitValue:()I
   #59 = Methodref          #25.#58       // java/lang/Process.exitValue:()I
   #60 = Utf8               foreach_these
   #61 = Utf8               java/lang/Throwable
   #62 = Class              #61           // java/lang/Throwable
   #63 = Utf8               destroy
   #64 = Methodref          #51.#37       // java/lang/Thread.interrupt:()V
   #65 = NameAndType        #63:#36       // destroy:()V
   #66 = Methodref          #25.#65       // java/lang/Process.destroy:()V
   #67 = NameAndType        #13:#14       // inputThread:Ljava/lang/Thread;
   #68 = Fieldref           #2.#67        // scala/sys/process/ProcessImpl$SimpleProcess.inputThread:Ljava/lang/Thread;
   #69 = Utf8               scala$sys$process$ProcessImpl$SimpleProcess$$$outer
   #70 = Utf8               ()Lscala/sys/process/Process$;
   #71 = NameAndType        #18:#19       // $outer:Lscala/sys/process/Process$;
   #72 = Fieldref           #2.#71        // scala/sys/process/ProcessImpl$SimpleProcess.$outer:Lscala/sys/process/Process$;
   #73 = Utf8               $anonfun$exitValue$2
   #74 = Utf8               (Ljava/lang/Thread;)V
   #75 = Utf8               x$7
   #76 = Utf8               $anonfun$destroy$1
   #77 = Utf8               x$8
   #78 = Utf8               <init>
   #79 = Utf8               (Lscala/sys/process/Process$;Ljava/lang/Process;Ljava/lang/Thread;Lscala/collection/immutable/List;)V
   #80 = Utf8               (Ljava/lang/Process;Ljava/lang/Thread;Lscala/collection/immutable/List<Ljava/lang/Thread;>;)V
   #81 = NameAndType        #78:#36       // "<init>":()V
   #82 = Methodref          #4.#81        // java/lang/Object."<init>":()V
   #83 = Utf8               $anonfun$exitValue$2$adapted
   #84 = Utf8               (Ljava/lang/Thread;)Ljava/lang/Object;
   #85 = NameAndType        #73:#74       // $anonfun$exitValue$2:(Ljava/lang/Thread;)V
   #86 = Methodref          #2.#85        // scala/sys/process/ProcessImpl$SimpleProcess.$anonfun$exitValue$2:(Ljava/lang/Thread;)V
   #87 = Utf8               scala/runtime/BoxedUnit
   #88 = Class              #87           // scala/runtime/BoxedUnit
   #89 = Utf8               UNIT
   #90 = Utf8               Lscala/runtime/BoxedUnit;
   #91 = NameAndType        #89:#90       // UNIT:Lscala/runtime/BoxedUnit;
   #92 = Fieldref           #88.#91       // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   #93 = Utf8               $anonfun$destroy$1$adapted
   #94 = NameAndType        #76:#74       // $anonfun$destroy$1:(Ljava/lang/Thread;)V
   #95 = Methodref          #2.#94        // scala/sys/process/ProcessImpl$SimpleProcess.$anonfun$destroy$1:(Ljava/lang/Thread;)V
   #96 = Utf8               Signature
   #97 = Utf8               Code
   #98 = Utf8               LineNumberTable
   #99 = Utf8               LocalVariableTable
  #100 = Utf8               StackMapTable
  #101 = Utf8               MethodParameters
  #102 = Utf8               InnerClasses
  #103 = Utf8               SourceFile
  #104 = Utf8               ScalaInlineInfo
  #105 = Utf8               Scala
{
  private final java.lang.Process p;
    descriptor: Ljava/lang/Process;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.Thread inputThread;
    descriptor: Ljava/lang/Thread;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.collection.immutable.List<java.lang.Thread> outputThreads;
    descriptor: Lscala/collection/immutable/List;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #17                          // Lscala/collection/immutable/List<Ljava/lang/Thread;>;

  public final scala.sys.process.Process$ $outer;
    descriptor: Lscala/sys/process/Process$;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public boolean isAlive();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #23                 // Field p:Ljava/lang/Process;
         4: invokevirtual #27                 // Method java/lang/Process.isAlive:()Z
         7: ireturn
      LineNumberTable:
        line 264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/sys/process/ProcessImpl$SimpleProcess;

  public int exitValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: getfield      #23                 // Field p:Ljava/lang/Process;
         4: invokevirtual #34                 // Method java/lang/Process.waitFor:()I
         7: pop
         8: goto          18
        11: astore_1
        12: aload_0
        13: invokespecial #38                 // Method interrupt:()V
        16: aload_1
        17: athrow
        18: aload_0
        19: invokespecial #38                 // Method interrupt:()V
        22: aload_0
        23: getfield      #40                 // Field outputThreads:Lscala/collection/immutable/List;
        26: dup
        27: ifnonnull     32
        30: aconst_null
        31: athrow
        32: astore_2
        33: aload_2
        34: invokevirtual #45                 // Method scala/collection/immutable/List.isEmpty:()Z
        37: ifne          61
        40: aload_2
        41: invokevirtual #49                 // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
        44: checkcast     #51                 // class java/lang/Thread
        47: invokevirtual #54                 // Method java/lang/Thread.join:()V
        50: aload_2
        51: invokevirtual #57                 // Method scala/collection/immutable/List.tail:()Ljava/lang/Object;
        54: checkcast     #42                 // class scala/collection/immutable/List
        57: astore_2
        58: goto          33
        61: aconst_null
        62: astore_2
        63: aload_0
        64: getfield      #23                 // Field p:Ljava/lang/Process;
        67: invokevirtual #59                 // Method java/lang/Process.exitValue:()I
        70: ireturn
      Exception table:
         from    to  target type
             0    11    11   any
      StackMapTable: number_of_entries = 5
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 6 /* same */
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/List ]
        frame_type = 253 /* append */
          offset_delta = 0
          locals = [ top, class scala/collection/immutable/List ]
        frame_type = 27 /* same */
      LineNumberTable:
        line 266: 0
        line 267: 12
        line 268: 22
        line 268: 47
        line 268: 50
        line 270: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lscala/sys/process/ProcessImpl$SimpleProcess;
           33      28     2 foreach_these   Lscala/collection/immutable/List;

  public void destroy();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: getfield      #40                 // Field outputThreads:Lscala/collection/immutable/List;
         4: dup
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: astore_2
        11: aload_2
        12: invokevirtual #45                 // Method scala/collection/immutable/List.isEmpty:()Z
        15: ifne          39
        18: aload_2
        19: invokevirtual #49                 // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
        22: checkcast     #51                 // class java/lang/Thread
        25: invokevirtual #64                 // Method java/lang/Thread.interrupt:()V
        28: aload_2
        29: invokevirtual #57                 // Method scala/collection/immutable/List.tail:()Ljava/lang/Object;
        32: checkcast     #42                 // class scala/collection/immutable/List
        35: astore_2
        36: goto          11
        39: aconst_null
        40: astore_2
        41: aload_0
        42: getfield      #23                 // Field p:Ljava/lang/Process;
        45: invokevirtual #66                 // Method java/lang/Process.destroy:()V
        48: goto          58
        51: astore_1
        52: aload_0
        53: invokespecial #38                 // Method interrupt:()V
        56: aload_1
        57: athrow
        58: aload_0
        59: invokespecial #38                 // Method interrupt:()V
        62: return
      Exception table:
         from    to  target type
             0    51    51   any
      StackMapTable: number_of_entries = 5
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/List ]
        frame_type = 253 /* append */
          offset_delta = 0
          locals = [ top, class scala/collection/immutable/List ]
        frame_type = 27 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/sys/process/ProcessImpl$SimpleProcess ]
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 6
          locals = [ top, null ]
      LineNumberTable:
        line 274: 0
        line 274: 25
        line 274: 28
        line 275: 41
        line 277: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lscala/sys/process/ProcessImpl$SimpleProcess;
           11      28     2 foreach_these   Lscala/collection/immutable/List;

  private void interrupt();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #68                 // Field inputThread:Ljava/lang/Thread;
         4: ifnull        14
         7: aload_0
         8: getfield      #68                 // Field inputThread:Ljava/lang/Thread;
        11: invokevirtual #64                 // Method java/lang/Thread.interrupt:()V
        14: return
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
      LineNumberTable:
        line 280: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/sys/process/ProcessImpl$SimpleProcess;

  public scala.sys.process.Process$ scala$sys$process$ProcessImpl$SimpleProcess$$$outer();
    descriptor: ()Lscala/sys/process/Process$;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #72                 // Field $outer:Lscala/sys/process/Process$;
         4: areturn
      LineNumberTable:
        line 263: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/sys/process/ProcessImpl$SimpleProcess;

  public static final void $anonfun$exitValue$2(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #54                 // Method java/lang/Thread.join:()V
         4: return
      LineNumberTable:
        line 268: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$7   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final void $anonfun$destroy$1(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #64                 // Method java/lang/Thread.interrupt:()V
         4: return
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$8   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public scala.sys.process.ProcessImpl$SimpleProcess(java.lang.Process, java.lang.Thread, scala.collection.immutable.List<java.lang.Thread>);
    descriptor: (Lscala/sys/process/Process$;Ljava/lang/Process;Ljava/lang/Thread;Lscala/collection/immutable/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: aload_2
         2: putfield      #23                 // Field p:Ljava/lang/Process;
         5: aload_0
         6: aload_3
         7: putfield      #68                 // Field inputThread:Ljava/lang/Thread;
        10: aload_0
        11: aload         4
        13: putfield      #40                 // Field outputThreads:Lscala/collection/immutable/List;
        16: aload_1
        17: ifnonnull     22
        20: aconst_null
        21: athrow
        22: aload_0
        23: aload_1
        24: putfield      #72                 // Field $outer:Lscala/sys/process/Process$;
        27: aload_0
        28: invokespecial #82                 // Method java/lang/Object."<init>":()V
        31: return
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 263: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/sys/process/ProcessImpl$SimpleProcess;
            0      32     1 $outer   Lscala/sys/process/Process$;
            0      32     2     p   Ljava/lang/Process;
            0      32     3 inputThread   Ljava/lang/Thread;
            0      32     4 outputThreads   Lscala/collection/immutable/List;
    Signature: #80                          // (Ljava/lang/Process;Ljava/lang/Thread;Lscala/collection/immutable/List<Ljava/lang/Thread;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      p                              final
      inputThread                    final
      outputThreads                  final

  public static final java.lang.Object $anonfun$exitValue$2$adapted(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #86                 // Method $anonfun$exitValue$2:(Ljava/lang/Thread;)V
         4: getstatic     #92                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 268: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$7   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final java.lang.Object $anonfun$destroy$1$adapted(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #95                 // Method $anonfun$destroy$1:(Ljava/lang/Thread;)V
         4: getstatic     #92                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$8   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$8                            final
}
InnerClasses:
  public #10= #2 of #9;                   // SimpleProcess=class scala/sys/process/ProcessImpl$SimpleProcess of class scala/sys/process/ProcessImpl
SourceFile: "ProcessImpl.scala"
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 00 00 0A 00 4C 00 4A 01 00 5D 00 54 01 00 49
   00 4A 01 00 53 00 54 01 00 4E 00 4F 00 00 3F 00
   24 00 00 1E 00 1F 00 00 23 00 24 01 00 14 00 15
   00 00 45 00 46 00
  Scala: length = 0x0 (unknown attribute)

