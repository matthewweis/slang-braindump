Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/output/ProxyWriter.class
  Last modified May 29, 2022; size 4011 bytes
  SHA-256 checksum 54a66345d9802ff406c88861b61b89dbd059c6a649a1f620e96ffcb9d09b969a
  Compiled from "ProxyWriter.java"
public class org.apache.commons.io.output.ProxyWriter extends java.io.FilterWriter
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #23                         // org/apache/commons/io/output/ProxyWriter
  super_class: #24                        // java/io/FilterWriter
  interfaces: 0, fields: 0, methods: 17, attributes: 3
Constant pool:
    #1 = Methodref          #24.#75       // java/io/FilterWriter."<init>":(Ljava/io/Writer;)V
    #2 = Methodref          #23.#76       // org/apache/commons/io/output/ProxyWriter.beforeWrite:(I)V
    #3 = Fieldref           #23.#77       // org/apache/commons/io/output/ProxyWriter.out:Ljava/io/Writer;
    #4 = Methodref          #78.#79       // java/io/Writer.append:(C)Ljava/io/Writer;
    #5 = Methodref          #23.#80       // org/apache/commons/io/output/ProxyWriter.afterWrite:(I)V
    #6 = Class              #81           // java/io/IOException
    #7 = Methodref          #23.#82       // org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V
    #8 = Methodref          #78.#83       // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
    #9 = Methodref          #84.#85       // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I
   #10 = Methodref          #78.#86       // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
   #11 = Methodref          #78.#87       // java/io/Writer.write:(I)V
   #12 = Methodref          #84.#88       // org/apache/commons/io/IOUtils.length:([C)I
   #13 = Methodref          #78.#89       // java/io/Writer.write:([C)V
   #14 = Methodref          #78.#90       // java/io/Writer.write:([CII)V
   #15 = Methodref          #78.#91       // java/io/Writer.write:(Ljava/lang/String;)V
   #16 = Methodref          #78.#92       // java/io/Writer.write:(Ljava/lang/String;II)V
   #17 = Methodref          #78.#93       // java/io/Writer.flush:()V
   #18 = InvokeDynamic      #0:#99        // #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;
   #19 = Methodref          #84.#100      // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V
   #20 = Methodref          #23.#79       // org/apache/commons/io/output/ProxyWriter.append:(C)Ljava/io/Writer;
   #21 = Methodref          #23.#83       // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
   #22 = Methodref          #23.#86       // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
   #23 = Class              #101          // org/apache/commons/io/output/ProxyWriter
   #24 = Class              #102          // java/io/FilterWriter
   #25 = Utf8               <init>
   #26 = Utf8               (Ljava/io/Writer;)V
   #27 = Utf8               Code
   #28 = Utf8               LineNumberTable
   #29 = Utf8               LocalVariableTable
   #30 = Utf8               this
   #31 = Utf8               Lorg/apache/commons/io/output/ProxyWriter;
   #32 = Utf8               proxy
   #33 = Utf8               Ljava/io/Writer;
   #34 = Utf8               append
   #35 = Utf8               (C)Ljava/io/Writer;
   #36 = Utf8               e
   #37 = Utf8               Ljava/io/IOException;
   #38 = Utf8               c
   #39 = Utf8               C
   #40 = Utf8               StackMapTable
   #41 = Class              #81           // java/io/IOException
   #42 = Utf8               Exceptions
   #43 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;
   #44 = Utf8               csq
   #45 = Utf8               Ljava/lang/CharSequence;
   #46 = Utf8               start
   #47 = Utf8               I
   #48 = Utf8               end
   #49 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;
   #50 = Utf8               len
   #51 = Utf8               write
   #52 = Utf8               (I)V
   #53 = Utf8               ([C)V
   #54 = Utf8               cbuf
   #55 = Utf8               [C
   #56 = Utf8               ([CII)V
   #57 = Utf8               off
   #58 = Utf8               (Ljava/lang/String;)V
   #59 = Utf8               str
   #60 = Utf8               Ljava/lang/String;
   #61 = Utf8               (Ljava/lang/String;II)V
   #62 = Utf8               flush
   #63 = Utf8               ()V
   #64 = Utf8               close
   #65 = Utf8               beforeWrite
   #66 = Utf8               n
   #67 = Utf8               afterWrite
   #68 = Utf8               handleIOException
   #69 = Utf8               (Ljava/io/IOException;)V
   #70 = Utf8               (C)Ljava/lang/Appendable;
   #71 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
   #72 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
   #73 = Utf8               SourceFile
   #74 = Utf8               ProxyWriter.java
   #75 = NameAndType        #25:#26       // "<init>":(Ljava/io/Writer;)V
   #76 = NameAndType        #65:#52       // beforeWrite:(I)V
   #77 = NameAndType        #103:#33      // out:Ljava/io/Writer;
   #78 = Class              #104          // java/io/Writer
   #79 = NameAndType        #34:#35       // append:(C)Ljava/io/Writer;
   #80 = NameAndType        #67:#52       // afterWrite:(I)V
   #81 = Utf8               java/io/IOException
   #82 = NameAndType        #68:#69       // handleIOException:(Ljava/io/IOException;)V
   #83 = NameAndType        #34:#43       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
   #84 = Class              #105          // org/apache/commons/io/IOUtils
   #85 = NameAndType        #106:#107     // length:(Ljava/lang/CharSequence;)I
   #86 = NameAndType        #34:#49       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
   #87 = NameAndType        #51:#52       // write:(I)V
   #88 = NameAndType        #106:#108     // length:([C)I
   #89 = NameAndType        #51:#53       // write:([C)V
   #90 = NameAndType        #51:#56       // write:([CII)V
   #91 = NameAndType        #51:#58       // write:(Ljava/lang/String;)V
   #92 = NameAndType        #51:#61       // write:(Ljava/lang/String;II)V
   #93 = NameAndType        #62:#63       // flush:()V
   #94 = Utf8               BootstrapMethods
   #95 = MethodHandle       6:#109        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #96 = MethodType         #110          //  (Ljava/lang/Object;)V
   #97 = MethodHandle       5:#7          // REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V
   #98 = MethodType         #69           //  (Ljava/io/IOException;)V
   #99 = NameAndType        #111:#112     // accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;
  #100 = NameAndType        #64:#113      // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V
  #101 = Utf8               org/apache/commons/io/output/ProxyWriter
  #102 = Utf8               java/io/FilterWriter
  #103 = Utf8               out
  #104 = Utf8               java/io/Writer
  #105 = Utf8               org/apache/commons/io/IOUtils
  #106 = Utf8               length
  #107 = Utf8               (Ljava/lang/CharSequence;)I
  #108 = Utf8               ([C)I
  #109 = Methodref          #114.#115     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #110 = Utf8               (Ljava/lang/Object;)V
  #111 = Utf8               accept
  #112 = Utf8               (Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;
  #113 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V
  #114 = Class              #116          // java/lang/invoke/LambdaMetafactory
  #115 = NameAndType        #117:#121     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #116 = Utf8               java/lang/invoke/LambdaMetafactory
  #117 = Utf8               metafactory
  #118 = Class              #123          // java/lang/invoke/MethodHandles$Lookup
  #119 = Utf8               Lookup
  #120 = Utf8               InnerClasses
  #121 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #122 = Class              #124          // java/lang/invoke/MethodHandles
  #123 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #124 = Utf8               java/lang/invoke/MethodHandles
{
  public org.apache.commons.io.output.ProxyWriter(java.io.Writer);
    descriptor: (Ljava/io/Writer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #1                  // Method java/io/FilterWriter."<init>":(Ljava/io/Writer;)V
         5: return
      LineNumberTable:
        line 39: 0
        line 41: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0       6     1 proxy   Ljava/io/Writer;

  public java.io.Writer append(char) throws java.io.IOException;
    descriptor: (C)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: iconst_1
         2: invokevirtual #2                  // Method beforeWrite:(I)V
         5: aload_0
         6: getfield      #3                  // Field out:Ljava/io/Writer;
         9: iload_1
        10: invokevirtual #4                  // Method java/io/Writer.append:(C)Ljava/io/Writer;
        13: pop
        14: aload_0
        15: iconst_1
        16: invokevirtual #5                  // Method afterWrite:(I)V
        19: goto          28
        22: astore_2
        23: aload_0
        24: aload_2
        25: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V
        28: aload_0
        29: areturn
      Exception table:
         from    to  target type
             0    19    22   Class java/io/IOException
      LineNumberTable:
        line 53: 0
        line 54: 5
        line 55: 14
        line 58: 19
        line 56: 22
        line 57: 23
        line 59: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23       5     2     e   Ljava/io/IOException;
            0      30     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0      30     1     c   C
      StackMapTable: number_of_entries = 2
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 5 /* same */
    Exceptions:
      throws java.io.IOException

  public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=4
         0: aload_0
         1: iload_3
         2: iload_2
         3: isub
         4: invokevirtual #2                  // Method beforeWrite:(I)V
         7: aload_0
         8: getfield      #3                  // Field out:Ljava/io/Writer;
        11: aload_1
        12: iload_2
        13: iload_3
        14: invokevirtual #8                  // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
        17: pop
        18: aload_0
        19: iload_3
        20: iload_2
        21: isub
        22: invokevirtual #5                  // Method afterWrite:(I)V
        25: goto          36
        28: astore        4
        30: aload_0
        31: aload         4
        33: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V
        36: aload_0
        37: areturn
      Exception table:
         from    to  target type
             0    25    28   Class java/io/IOException
      LineNumberTable:
        line 74: 0
        line 75: 7
        line 76: 18
        line 79: 25
        line 77: 28
        line 78: 30
        line 80: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30       6     4     e   Ljava/io/IOException;
            0      38     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0      38     1   csq   Ljava/lang/CharSequence;
            0      38     2 start   I
            0      38     3   end   I
      StackMapTable: number_of_entries = 2
        frame_type = 92 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 7 /* same */
    Exceptions:
      throws java.io.IOException

  public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: invokestatic  #9                  // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I
         4: istore_2
         5: aload_0
         6: iload_2
         7: invokevirtual #2                  // Method beforeWrite:(I)V
        10: aload_0
        11: getfield      #3                  // Field out:Ljava/io/Writer;
        14: aload_1
        15: invokevirtual #10                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
        18: pop
        19: aload_0
        20: iload_2
        21: invokevirtual #5                  // Method afterWrite:(I)V
        24: goto          33
        27: astore_2
        28: aload_0
        29: aload_2
        30: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V
        33: aload_0
        34: areturn
      Exception table:
         from    to  target type
             0    24    27   Class java/io/IOException
      LineNumberTable:
        line 93: 0
        line 94: 5
        line 95: 10
        line 96: 19
        line 99: 24
        line 97: 27
        line 98: 28
        line 100: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      19     2   len   I
           28       5     2     e   Ljava/io/IOException;
            0      35     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0      35     1   csq   Ljava/lang/CharSequence;
      StackMapTable: number_of_entries = 2
        frame_type = 91 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 5 /* same */
    Exceptions:
      throws java.io.IOException

  public void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: iconst_1
         2: invokevirtual #2                  // Method beforeWrite:(I)V
         5: aload_0
         6: getfield      #3                  // Field out:Ljava/io/Writer;
         9: iload_1
        10: invokevirtual #11                 // Method java/io/Writer.write:(I)V
        13: aload_0
        14: iconst_1
        15: invokevirtual #5                  // Method afterWrite:(I)V
        18: goto          27
        21: astore_2
        22: aload_0
        23: aload_2
        24: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V
        27: return
      Exception table:
         from    to  target type
             0    18    21   Class java/io/IOException
      LineNumberTable:
        line 111: 0
        line 112: 5
        line 113: 13
        line 116: 18
        line 114: 21
        line 115: 22
        line 117: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22       5     2     e   Ljava/io/IOException;
            0      28     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0      28     1     c   I
      StackMapTable: number_of_entries = 2
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 5 /* same */
    Exceptions:
      throws java.io.IOException

  public void write(char[]) throws java.io.IOException;
    descriptor: ([C)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: invokestatic  #12                 // Method org/apache/commons/io/IOUtils.length:([C)I
         4: istore_2
         5: aload_0
         6: iload_2
         7: invokevirtual #2                  // Method beforeWrite:(I)V
        10: aload_0
        11: getfield      #3                  // Field out:Ljava/io/Writer;
        14: aload_1
        15: invokevirtual #13                 // Method java/io/Writer.write:([C)V
        18: aload_0
        19: iload_2
        20: invokevirtual #5                  // Method afterWrite:(I)V
        23: goto          32
        26: astore_2
        27: aload_0
        28: aload_2
        29: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V
        32: return
      Exception table:
         from    to  target type
             0    23    26   Class java/io/IOException
      LineNumberTable:
        line 127: 0
        line 128: 5
        line 129: 10
        line 130: 18
        line 133: 23
        line 131: 26
        line 132: 27
        line 134: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      18     2   len   I
           27       5     2     e   Ljava/io/IOException;
            0      33     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0      33     1  cbuf   [C
      StackMapTable: number_of_entries = 2
        frame_type = 90 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 5 /* same */
    Exceptions:
      throws java.io.IOException

  public void write(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=4
         0: aload_0
         1: iload_3
         2: invokevirtual #2                  // Method beforeWrite:(I)V
         5: aload_0
         6: getfield      #3                  // Field out:Ljava/io/Writer;
         9: aload_1
        10: iload_2
        11: iload_3
        12: invokevirtual #14                 // Method java/io/Writer.write:([CII)V
        15: aload_0
        16: iload_3
        17: invokevirtual #5                  // Method afterWrite:(I)V
        20: goto          31
        23: astore        4
        25: aload_0
        26: aload         4
        28: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V
        31: return
      Exception table:
         from    to  target type
             0    20    23   Class java/io/IOException
      LineNumberTable:
        line 146: 0
        line 147: 5
        line 148: 15
        line 151: 20
        line 149: 23
        line 150: 25
        line 152: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25       6     4     e   Ljava/io/IOException;
            0      32     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0      32     1  cbuf   [C
            0      32     2   off   I
            0      32     3   len   I
      StackMapTable: number_of_entries = 2
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 7 /* same */
    Exceptions:
      throws java.io.IOException

  public void write(java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: invokestatic  #9                  // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I
         4: istore_2
         5: aload_0
         6: iload_2
         7: invokevirtual #2                  // Method beforeWrite:(I)V
        10: aload_0
        11: getfield      #3                  // Field out:Ljava/io/Writer;
        14: aload_1
        15: invokevirtual #15                 // Method java/io/Writer.write:(Ljava/lang/String;)V
        18: aload_0
        19: iload_2
        20: invokevirtual #5                  // Method afterWrite:(I)V
        23: goto          32
        26: astore_2
        27: aload_0
        28: aload_2
        29: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V
        32: return
      Exception table:
         from    to  target type
             0    23    26   Class java/io/IOException
      LineNumberTable:
        line 162: 0
        line 163: 5
        line 164: 10
        line 165: 18
        line 168: 23
        line 166: 26
        line 167: 27
        line 169: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      18     2   len   I
           27       5     2     e   Ljava/io/IOException;
            0      33     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0      33     1   str   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 90 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 5 /* same */
    Exceptions:
      throws java.io.IOException

  public void write(java.lang.String, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/String;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=4
         0: aload_0
         1: iload_3
         2: invokevirtual #2                  // Method beforeWrite:(I)V
         5: aload_0
         6: getfield      #3                  // Field out:Ljava/io/Writer;
         9: aload_1
        10: iload_2
        11: iload_3
        12: invokevirtual #16                 // Method java/io/Writer.write:(Ljava/lang/String;II)V
        15: aload_0
        16: iload_3
        17: invokevirtual #5                  // Method afterWrite:(I)V
        20: goto          31
        23: astore        4
        25: aload_0
        26: aload         4
        28: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V
        31: return
      Exception table:
         from    to  target type
             0    20    23   Class java/io/IOException
      LineNumberTable:
        line 181: 0
        line 182: 5
        line 183: 15
        line 186: 20
        line 184: 23
        line 185: 25
        line 187: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25       6     4     e   Ljava/io/IOException;
            0      32     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0      32     1   str   Ljava/lang/String;
            0      32     2   off   I
            0      32     3   len   I
      StackMapTable: number_of_entries = 2
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 7 /* same */
    Exceptions:
      throws java.io.IOException

  public void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getfield      #3                  // Field out:Ljava/io/Writer;
         4: invokevirtual #17                 // Method java/io/Writer.flush:()V
         7: goto          16
        10: astore_1
        11: aload_0
        12: aload_1
        13: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V
        16: return
      Exception table:
         from    to  target type
             0     7    10   Class java/io/IOException
      LineNumberTable:
        line 196: 0
        line 199: 7
        line 197: 10
        line 198: 11
        line 200: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       5     1     e   Ljava/io/IOException;
            0      17     0  this   Lorg/apache/commons/io/output/ProxyWriter;
      StackMapTable: number_of_entries = 2
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 5 /* same */
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field out:Ljava/io/Writer;
         4: aload_0
         5: invokedynamic #18,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;
        10: invokestatic  #19                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V
        13: return
      LineNumberTable:
        line 208: 0
        line 209: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/apache/commons/io/output/ProxyWriter;
    Exceptions:
      throws java.io.IOException

  protected void beforeWrite(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 227: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0       1     1     n   I
    Exceptions:
      throws java.io.IOException

  protected void afterWrite(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 246: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0       1     1     n   I
    Exceptions:
      throws java.io.IOException

  protected void handleIOException(java.io.IOException) throws java.io.IOException;
    descriptor: (Ljava/io/IOException;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: athrow
      LineNumberTable:
        line 260: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/apache/commons/io/output/ProxyWriter;
            0       2     1     e   Ljava/io/IOException;
    Exceptions:
      throws java.io.IOException

  public java.lang.Appendable append(char) throws java.io.IOException;
    descriptor: (C)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #20                 // Method append:(C)Ljava/io/Writer;
         5: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/io/output/ProxyWriter;
    Exceptions:
      throws java.io.IOException

  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: invokevirtual #21                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
         7: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/ProxyWriter;
    Exceptions:
      throws java.io.IOException

  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #22                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
         5: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/io/output/ProxyWriter;
    Exceptions:
      throws java.io.IOException
}
SourceFile: "ProxyWriter.java"
InnerClasses:
  public static final #119= #118 of #122; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
BootstrapMethods:
  0: #95 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #96 (Ljava/lang/Object;)V
      #97 REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V
      #98 (Ljava/io/IOException;)V
