Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/runtime/RichDouble$.class
  Last modified May 29, 2022; size 5025 bytes
  SHA-256 checksum b629ea4a03f16916836cca5a24da519428cc0ca242edc5bebf60b5cb92d8c1d5
  Compiled from "RichDouble.scala"
public final class scala.runtime.RichDouble$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/runtime/RichDouble$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 31, attributes: 4
Constant pool:
    #1 = Utf8               scala/runtime/RichDouble$
    #2 = Class              #1            // scala/runtime/RichDouble$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               RichDouble.scala
    #6 = Utf8               scala/math/Numeric$DoubleIsFractional$
    #7 = Class              #6            // scala/math/Numeric$DoubleIsFractional$
    #8 = Utf8               scala/math/Numeric
    #9 = Class              #8            // scala/math/Numeric
   #10 = Utf8               DoubleIsFractional$
   #11 = Utf8               scala/math/Ordering$Double$
   #12 = Class              #11           // scala/math/Ordering$Double$
   #13 = Utf8               scala/math/Ordering
   #14 = Class              #13           // scala/math/Ordering
   #15 = Utf8               Double$
   #16 = Utf8               scala/math/Ordering$Double$TotalOrdering$
   #17 = Class              #16           // scala/math/Ordering$Double$TotalOrdering$
   #18 = Utf8               TotalOrdering$
   #19 = Utf8               MODULE$
   #20 = Utf8               Lscala/runtime/RichDouble$;
   #21 = Utf8               <clinit>
   #22 = Utf8               ()V
   #23 = Utf8               <init>
   #24 = NameAndType        #23:#22       // "<init>":()V
   #25 = Methodref          #2.#24        // scala/runtime/RichDouble$."<init>":()V
   #26 = NameAndType        #19:#20       // MODULE$:Lscala/runtime/RichDouble$;
   #27 = Fieldref           #2.#26        // scala/runtime/RichDouble$.MODULE$:Lscala/runtime/RichDouble$;
   #28 = Utf8               num$extension
   #29 = Utf8               (D)Lscala/math/Fractional;
   #30 = Utf8               (D)Lscala/math/Fractional<Ljava/lang/Object;>;
   #31 = Utf8               $this
   #32 = Utf8               Lscala/math/Numeric$DoubleIsFractional$;
   #33 = NameAndType        #19:#32       // MODULE$:Lscala/math/Numeric$DoubleIsFractional$;
   #34 = Fieldref           #7.#33        // scala/math/Numeric$DoubleIsFractional$.MODULE$:Lscala/math/Numeric$DoubleIsFractional$;
   #35 = Utf8               this
   #36 = Utf8               D
   #37 = Utf8               ord$extension
   #38 = Utf8               (D)Lscala/math/Ordering;
   #39 = Utf8               (D)Lscala/math/Ordering<Ljava/lang/Object;>;
   #40 = Utf8               Lscala/math/Ordering$Double$TotalOrdering$;
   #41 = NameAndType        #19:#40       // MODULE$:Lscala/math/Ordering$Double$TotalOrdering$;
   #42 = Fieldref           #17.#41       // scala/math/Ordering$Double$TotalOrdering$.MODULE$:Lscala/math/Ordering$Double$TotalOrdering$;
   #43 = Utf8               doubleValue$extension
   #44 = Utf8               (D)D
   #45 = Utf8               floatValue$extension
   #46 = Utf8               (D)F
   #47 = Utf8               longValue$extension
   #48 = Utf8               (D)J
   #49 = Utf8               intValue$extension
   #50 = Utf8               (D)I
   #51 = Utf8               byteValue$extension
   #52 = Utf8               (D)B
   #53 = Utf8               shortValue$extension
   #54 = Utf8               (D)S
   #55 = Utf8               isWhole$extension
   #56 = Utf8               (D)Z
   #57 = Long               9223372036854775807l
   #59 = Double             Infinityd
   #61 = Long               -9223372036854775808l
   #63 = Double             -Infinityd
   #65 = Utf8               l
   #66 = Utf8               J
   #67 = Utf8               isValidByte$extension
   #68 = Utf8               isValidShort$extension
   #69 = Utf8               isValidChar$extension
   #70 = Utf8               isValidInt$extension
   #71 = Utf8               isNaN$extension
   #72 = Utf8               java/lang/Double
   #73 = Class              #72           // java/lang/Double
   #74 = Utf8               isNaN
   #75 = NameAndType        #74:#56       // isNaN:(D)Z
   #76 = Methodref          #73.#75       // java/lang/Double.isNaN:(D)Z
   #77 = Utf8               isInfinity$extension
   #78 = Utf8               isInfinite
   #79 = NameAndType        #78:#56       // isInfinite:(D)Z
   #80 = Methodref          #73.#79       // java/lang/Double.isInfinite:(D)Z
   #81 = Utf8               isFinite$extension
   #82 = Utf8               isFinite
   #83 = NameAndType        #82:#56       // isFinite:(D)Z
   #84 = Methodref          #73.#83       // java/lang/Double.isFinite:(D)Z
   #85 = Utf8               isPosInfinity$extension
   #86 = Utf8               isNegInfinity$extension
   #87 = Utf8               abs$extension
   #88 = Utf8               scala/math/package$
   #89 = Class              #88           // scala/math/package$
   #90 = Utf8               Lscala/math/package$;
   #91 = NameAndType        #19:#90       // MODULE$:Lscala/math/package$;
   #92 = Fieldref           #89.#91       // scala/math/package$.MODULE$:Lscala/math/package$;
   #93 = Utf8               java/lang/Math
   #94 = Class              #93           // java/lang/Math
   #95 = Utf8               abs
   #96 = NameAndType        #95:#44       // abs:(D)D
   #97 = Methodref          #94.#96       // java/lang/Math.abs:(D)D
   #98 = Utf8               max$extension
   #99 = Utf8               (DD)D
  #100 = Utf8               that
  #101 = Utf8               max
  #102 = NameAndType        #101:#99      // max:(DD)D
  #103 = Methodref          #94.#102      // java/lang/Math.max:(DD)D
  #104 = Utf8               min$extension
  #105 = Utf8               min
  #106 = NameAndType        #105:#99      // min:(DD)D
  #107 = Methodref          #94.#106      // java/lang/Math.min:(DD)D
  #108 = Utf8               signum$extension
  #109 = Utf8               signum
  #110 = NameAndType        #109:#44      // signum:(D)D
  #111 = Methodref          #94.#110      // java/lang/Math.signum:(D)D
  #112 = Utf8               round$extension
  #113 = Utf8               round
  #114 = NameAndType        #113:#48      // round:(D)J
  #115 = Methodref          #94.#114      // java/lang/Math.round:(D)J
  #116 = Utf8               ceil$extension
  #117 = Utf8               ceil
  #118 = NameAndType        #117:#44      // ceil:(D)D
  #119 = Methodref          #94.#118      // java/lang/Math.ceil:(D)D
  #120 = Utf8               floor$extension
  #121 = Utf8               floor
  #122 = NameAndType        #121:#44      // floor:(D)D
  #123 = Methodref          #94.#122      // java/lang/Math.floor:(D)D
  #124 = Utf8               toRadians$extension
  #125 = Utf8               toRadians
  #126 = NameAndType        #125:#44      // toRadians:(D)D
  #127 = Methodref          #94.#126      // java/lang/Math.toRadians:(D)D
  #128 = Utf8               toDegrees$extension
  #129 = Utf8               toDegrees
  #130 = NameAndType        #129:#44      // toDegrees:(D)D
  #131 = Methodref          #94.#130      // java/lang/Math.toDegrees:(D)D
  #132 = Utf8               hashCode$extension
  #133 = Utf8               hashCode
  #134 = NameAndType        #133:#50      // hashCode:(D)I
  #135 = Methodref          #73.#134      // java/lang/Double.hashCode:(D)I
  #136 = Utf8               equals$extension
  #137 = Utf8               (DLjava/lang/Object;)Z
  #138 = Utf8               x$1
  #139 = Utf8               scala/runtime/RichDouble
  #140 = Class              #139          // scala/runtime/RichDouble
  #141 = Utf8               self
  #142 = Utf8               ()D
  #143 = NameAndType        #141:#142     // self:()D
  #144 = Methodref          #140.#143     // scala/runtime/RichDouble.self:()D
  #145 = Utf8               Ljava/lang/Object;
  #146 = Methodref          #4.#24        // java/lang/Object."<init>":()V
  #147 = Utf8               Code
  #148 = Utf8               LineNumberTable
  #149 = Utf8               LocalVariableTable
  #150 = Utf8               Signature
  #151 = Utf8               MethodParameters
  #152 = Utf8               StackMapTable
  #153 = Utf8               Deprecated
  #154 = Utf8               InnerClasses
  #155 = Utf8               SourceFile
  #156 = Utf8               ScalaInlineInfo
  #157 = Utf8               Scala
{
  public static final scala.runtime.RichDouble$ MODULE$;
    descriptor: Lscala/runtime/RichDouble$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/runtime/RichDouble$
         3: dup
         4: invokespecial #25                 // Method "<init>":()V
         7: putstatic     #27                 // Field MODULE$:Lscala/runtime/RichDouble$;
        10: return
      LineNumberTable:
        line 16: 0

  public final scala.math.Fractional<java.lang.Object> num$extension(double);
    descriptor: (D)Lscala/math/Fractional;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=3, args_size=2
         0: getstatic     #34                 // Field scala/math/Numeric$DoubleIsFractional$.MODULE$:Lscala/math/Numeric$DoubleIsFractional$;
         3: areturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/runtime/RichDouble$;
            0       4     1 $this   D
    Signature: #30                          // (D)Lscala/math/Fractional<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final scala.math.Ordering<java.lang.Object> ord$extension(double);
    descriptor: (D)Lscala/math/Ordering;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=3, args_size=2
         0: getstatic     #42                 // Field scala/math/Ordering$Double$TotalOrdering$.MODULE$:Lscala/math/Ordering$Double$TotalOrdering$;
         3: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/runtime/RichDouble$;
            0       4     1 $this   D
    Signature: #39                          // (D)Lscala/math/Ordering<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final double doubleValue$extension(double);
    descriptor: (D)D
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: dreturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/runtime/RichDouble$;
            0       2     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final float floatValue$extension(double);
    descriptor: (D)F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: d2f
         2: freturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/runtime/RichDouble$;
            0       3     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final long longValue$extension(double);
    descriptor: (D)J
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: d2l
         2: lreturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/runtime/RichDouble$;
            0       3     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int intValue$extension(double);
    descriptor: (D)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: d2i
         2: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/runtime/RichDouble$;
            0       3     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final byte byteValue$extension(double);
    descriptor: (D)B
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: d2i
         2: i2b
         3: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/runtime/RichDouble$;
            0       4     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final short shortValue$extension(double);
    descriptor: (D)S
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: d2i
         2: i2s
         3: ireturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/runtime/RichDouble$;
            0       4     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isWhole$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=2
         0: dload_1
         1: d2l
         2: lstore_3
         3: lload_3
         4: l2d
         5: dload_1
         6: dcmpl
         7: ifeq          42
        10: lload_3
        11: ldc2_w        #57                 // long 9223372036854775807l
        14: lcmp
        15: ifne          26
        18: dload_1
        19: ldc2_w        #59                 // double Infinityd
        22: dcmpg
        23: iflt          42
        26: lload_3
        27: ldc2_w        #61                 // long -9223372036854775808l
        30: lcmp
        31: ifne          44
        34: dload_1
        35: ldc2_w        #63                 // double -Infinityd
        38: dcmpl
        39: ifle          44
        42: iconst_1
        43: ireturn
        44: iconst_0
        45: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ long ]
        frame_type = 15 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 28: 0
        line 29: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      42     3     l   J
            0      46     0  this   Lscala/runtime/RichDouble$;
            0      46     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isValidByte$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=2
         0: dload_1
         1: d2i
         2: i2b
         3: i2d
         4: dload_1
         5: dcmpl
         6: ifne          11
         9: iconst_1
        10: ireturn
        11: iconst_0
        12: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichDouble$;
            0      13     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isValidShort$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=2
         0: dload_1
         1: d2i
         2: i2s
         3: i2d
         4: dload_1
         5: dcmpl
         6: ifne          11
         9: iconst_1
        10: ireturn
        11: iconst_0
        12: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichDouble$;
            0      13     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isValidChar$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=2
         0: dload_1
         1: d2i
         2: i2c
         3: i2d
         4: dload_1
         5: dcmpl
         6: ifne          11
         9: iconst_1
        10: ireturn
        11: iconst_0
        12: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/runtime/RichDouble$;
            0      13     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isValidInt$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=2
         0: dload_1
         1: d2i
         2: i2d
         3: dload_1
         4: dcmpl
         5: ifne          10
         8: iconst_1
         9: ireturn
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 10 /* same */
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichDouble$;
            0      12     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isNaN$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: invokestatic  #76                 // Method java/lang/Double.isNaN:(D)Z
         4: ireturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichDouble$;
            0       5     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isInfinity$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: invokestatic  #80                 // Method java/lang/Double.isInfinite:(D)Z
         4: ireturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichDouble$;
            0       5     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isFinite$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: invokestatic  #84                 // Method java/lang/Double.isFinite:(D)Z
         4: ireturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichDouble$;
            0       5     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isPosInfinity$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=2
         0: ldc2_w        #59                 // double Infinityd
         3: dload_1
         4: dcmpl
         5: ifne          10
         8: iconst_1
         9: ireturn
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 10 /* same */
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichDouble$;
            0      12     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isNegInfinity$extension(double);
    descriptor: (D)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=2
         0: ldc2_w        #63                 // double -Infinityd
         3: dload_1
         4: dcmpl
         5: ifne          10
         8: iconst_1
         9: ireturn
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 10 /* same */
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/RichDouble$;
            0      12     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final double abs$extension(double);
    descriptor: (D)D
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #92                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: dload_1
         5: invokestatic  #97                 // Method java/lang/Math.abs:(D)D
         8: dreturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/runtime/RichDouble$;
            0       9     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final double max$extension(double, double);
    descriptor: (DD)D
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=3
         0: getstatic     #92                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: dload_1
         5: dload_3
         6: invokestatic  #103                // Method java/lang/Math.max:(DD)D
         9: dreturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichDouble$;
            0      10     1 $this   D
            0      10     3  that   D
    MethodParameters:
      Name                           Flags
      $this                          final
      that                           final

  public final double min$extension(double, double);
    descriptor: (DD)D
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=3
         0: getstatic     #92                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: dload_1
         5: dload_3
         6: invokestatic  #107                // Method java/lang/Math.min:(DD)D
         9: dreturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichDouble$;
            0      10     1 $this   D
            0      10     3  that   D
    MethodParameters:
      Name                           Flags
      $this                          final
      that                           final

  public final int signum$extension(double);
    descriptor: (D)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #92                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: dload_1
         5: invokestatic  #111                // Method java/lang/Math.signum:(D)D
         8: d2i
         9: ireturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/RichDouble$;
            0      10     1 $this   D
    Deprecated: true
    MethodParameters:
      Name                           Flags
      $this                          final

  public final long round$extension(double);
    descriptor: (D)J
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #92                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: dload_1
         5: invokestatic  #115                // Method java/lang/Math.round:(D)J
         8: lreturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/runtime/RichDouble$;
            0       9     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final double ceil$extension(double);
    descriptor: (D)D
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #92                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: dload_1
         5: invokestatic  #119                // Method java/lang/Math.ceil:(D)D
         8: dreturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/runtime/RichDouble$;
            0       9     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final double floor$extension(double);
    descriptor: (D)D
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #92                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: dload_1
         5: invokestatic  #123                // Method java/lang/Math.floor:(D)D
         8: dreturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/runtime/RichDouble$;
            0       9     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final double toRadians$extension(double);
    descriptor: (D)D
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #92                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: dload_1
         5: invokestatic  #127                // Method java/lang/Math.toRadians:(D)D
         8: dreturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/runtime/RichDouble$;
            0       9     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final double toDegrees$extension(double);
    descriptor: (D)D
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #92                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: dload_1
         5: invokestatic  #131                // Method java/lang/Math.toDegrees:(D)D
         8: dreturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/runtime/RichDouble$;
            0       9     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int hashCode$extension(double);
    descriptor: (D)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=2
         0: dload_1
         1: invokestatic  #135                // Method java/lang/Double.hashCode:(D)I
         4: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichDouble$;
            0       5     1 $this   D
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean equals$extension(double, java.lang.Object);
    descriptor: (DLjava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=7, args_size=3
         0: aload_3
         1: instanceof    #140                // class scala/runtime/RichDouble
         4: ifeq          13
         7: iconst_1
         8: istore        4
        10: goto          16
        13: iconst_0
        14: istore        4
        16: iload         4
        18: ifeq          47
        21: aload_3
        22: checkcast     #140                // class scala/runtime/RichDouble
        25: invokevirtual #144                // Method scala/runtime/RichDouble.self:()D
        28: dstore        5
        30: dload_1
        31: dload         5
        33: dcmpl
        34: ifne          41
        37: iconst_1
        38: goto          42
        41: iconst_0
        42: ifeq          47
        45: iconst_1
        46: ireturn
        47: iconst_0
        48: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 13 /* same */
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ double ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 4
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lscala/runtime/RichDouble$;
            0      49     1 $this   D
            0      49     3   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  private scala.runtime.RichDouble$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #146                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/RichDouble$;
}
InnerClasses:
  public static #10= #7 of #9;            // DoubleIsFractional$=class scala/math/Numeric$DoubleIsFractional$ of class scala/math/Numeric
  public static #15= #12 of #14;          // Double$=class scala/math/Ordering$Double$ of class scala/math/Ordering
  public static #18= #17 of #12;          // TotalOrdering$=class scala/math/Ordering$Double$TotalOrdering$ of class scala/math/Ordering$Double$
SourceFile: "RichDouble.scala"
  ScalaInlineInfo: length = 0x9A (unknown attribute)
   01 01 00 1E 00 17 00 16 01 00 57 00 2C 01 00 33
   00 34 01 00 74 00 2C 01 00 2B 00 2C 01 00 88 00
   89 01 00 2D 00 2E 01 00 78 00 2C 01 00 84 00 32
   01 00 31 00 32 01 00 51 00 38 01 00 4D 00 38 01
   00 47 00 38 01 00 56 00 38 01 00 55 00 38 01 00
   43 00 38 01 00 45 00 38 01 00 46 00 38 01 00 44
   00 38 01 00 37 00 38 01 00 2F 00 30 01 00 62 00
   63 01 00 68 00 63 01 00 1C 00 1D 01 00 25 00 26
   01 00 70 00 30 01 00 35 00 36 01 00 6C 00 32 01
   00 80 00 2C 01 00 7C 00 2C 01
  Scala: length = 0x0 (unknown attribute)

