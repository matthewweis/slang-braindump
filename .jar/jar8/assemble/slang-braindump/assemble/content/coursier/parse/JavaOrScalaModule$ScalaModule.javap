Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/parse/JavaOrScalaModule$ScalaModule.class
  Last modified May 29, 2022; size 4050 bytes
  SHA-256 checksum c84f11f12b62bbee188bcb0bcd42b3d561a5ca7ca836295c0ad4c2c27fdc6da8
  Compiled from "JavaOrScalaModule.scala"
public final class coursier.parse.JavaOrScalaModule$ScalaModule extends coursier.parse.JavaOrScalaModule
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/parse/JavaOrScalaModule$ScalaModule
  super_class: #4                         // coursier/parse/JavaOrScalaModule
  interfaces: 0, fields: 2, methods: 16, attributes: 4
Constant pool:
    #1 = Utf8               coursier/parse/JavaOrScalaModule$ScalaModule
    #2 = Class              #1            // coursier/parse/JavaOrScalaModule$ScalaModule
    #3 = Utf8               coursier/parse/JavaOrScalaModule
    #4 = Class              #3            // coursier/parse/JavaOrScalaModule
    #5 = Utf8               JavaOrScalaModule.scala
    #6 = Utf8               ScalaModule
    #7 = Utf8               baseModule
    #8 = Utf8               Lcoursier/core/Module;
    #9 = Utf8               fullCrossVersion
   #10 = Utf8               Z
   #11 = Utf8               ()Lcoursier/core/Module;
   #12 = NameAndType        #7:#8         // baseModule:Lcoursier/core/Module;
   #13 = Fieldref           #2.#12        // coursier/parse/JavaOrScalaModule$ScalaModule.baseModule:Lcoursier/core/Module;
   #14 = Utf8               this
   #15 = Utf8               Lcoursier/parse/JavaOrScalaModule$ScalaModule;
   #16 = Utf8               ()Z
   #17 = NameAndType        #9:#10        // fullCrossVersion:Z
   #18 = Fieldref           #2.#17        // coursier/parse/JavaOrScalaModule$ScalaModule.fullCrossVersion:Z
   #19 = Utf8               attributes
   #20 = Utf8               ()Lscala/collection/immutable/Map;
   #21 = Utf8               ()Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;
   #22 = NameAndType        #7:#11        // baseModule:()Lcoursier/core/Module;
   #23 = Methodref          #2.#22        // coursier/parse/JavaOrScalaModule$ScalaModule.baseModule:()Lcoursier/core/Module;
   #24 = Utf8               coursier/core/Module
   #25 = Class              #24           // coursier/core/Module
   #26 = NameAndType        #19:#20       // attributes:()Lscala/collection/immutable/Map;
   #27 = Methodref          #25.#26       // coursier/core/Module.attributes:()Lscala/collection/immutable/Map;
   #28 = Utf8               toString
   #29 = Utf8               ()Ljava/lang/String;
   #30 = NameAndType        #9:#16        // fullCrossVersion:()Z
   #31 = Methodref          #2.#30        // coursier/parse/JavaOrScalaModule$ScalaModule.fullCrossVersion:()Z
   #32 = Utf8               :::
   #33 = String             #32           // :::
   #34 = Utf8               ::
   #35 = String             #34           // ::
   #36 = Utf8               java/lang/String
   #37 = Class              #36           // java/lang/String
   #38 = Utf8               java/lang/StringBuilder
   #39 = Class              #38           // java/lang/StringBuilder
   #40 = Integer            0
   #41 = Utf8               <init>
   #42 = Utf8               (I)V
   #43 = NameAndType        #41:#42       // "<init>":(I)V
   #44 = Methodref          #39.#43       // java/lang/StringBuilder."<init>":(I)V
   #45 = Utf8               organization
   #46 = NameAndType        #45:#29       // organization:()Ljava/lang/String;
   #47 = Methodref          #25.#46       // coursier/core/Module.organization:()Ljava/lang/String;
   #48 = Utf8               append
   #49 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #50 = NameAndType        #48:#49       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #51 = Methodref          #39.#50       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #52 = Utf8               nameWithAttributes
   #53 = NameAndType        #52:#29       // nameWithAttributes:()Ljava/lang/String;
   #54 = Methodref          #25.#53       // coursier/core/Module.nameWithAttributes:()Ljava/lang/String;
   #55 = NameAndType        #28:#29       // toString:()Ljava/lang/String;
   #56 = Methodref          #39.#55       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #57 = Utf8               sep
   #58 = Utf8               Ljava/lang/String;
   #59 = Utf8               module
   #60 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Module;
   #61 = Utf8               scalaBinaryVersion
   #62 = Utf8               scalaVersion
   #63 = Integer            1
   #64 = Utf8               _
   #65 = String             #64           // _
   #66 = Utf8               name
   #67 = NameAndType        #66:#29       // name:()Ljava/lang/String;
   #68 = Methodref          #25.#67       // coursier/core/Module.name:()Ljava/lang/String;
   #69 = Utf8               withName
   #70 = Utf8               (Ljava/lang/String;)Lcoursier/core/Module;
   #71 = NameAndType        #69:#70       // withName:(Ljava/lang/String;)Lcoursier/core/Module;
   #72 = Methodref          #25.#71       // coursier/core/Module.withName:(Ljava/lang/String;)Lcoursier/core/Module;
   #73 = Utf8               scalaSuffix
   #74 = Utf8               newName
   #75 = Utf8               withBaseModule
   #76 = Utf8               (Lcoursier/core/Module;)Lcoursier/parse/JavaOrScalaModule$ScalaModule;
   #77 = Utf8               (Lcoursier/core/Module;Z)V
   #78 = NameAndType        #41:#77       // "<init>":(Lcoursier/core/Module;Z)V
   #79 = Methodref          #2.#78        // coursier/parse/JavaOrScalaModule$ScalaModule."<init>":(Lcoursier/core/Module;Z)V
   #80 = Utf8               withFullCrossVersion
   #81 = Utf8               (Z)Lcoursier/parse/JavaOrScalaModule$ScalaModule;
   #82 = Utf8               canEqual
   #83 = Utf8               (Ljava/lang/Object;)Z
   #84 = Utf8               obj
   #85 = Utf8               Ljava/lang/Object;
   #86 = Utf8               equals
   #87 = NameAndType        #82:#83       // canEqual:(Ljava/lang/Object;)Z
   #88 = Methodref          #2.#87        // coursier/parse/JavaOrScalaModule$ScalaModule.canEqual:(Ljava/lang/Object;)Z
   #89 = Utf8               java/lang/Object
   #90 = Class              #89           // java/lang/Object
   #91 = NameAndType        #86:#83       // equals:(Ljava/lang/Object;)Z
   #92 = Methodref          #90.#91       // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #93 = Utf8               other
   #94 = Utf8               hashCode
   #95 = Utf8               ()I
   #96 = String             #6            // ScalaModule
   #97 = Utf8               scala/runtime/Statics
   #98 = Class              #97           // scala/runtime/Statics
   #99 = Utf8               anyHash
  #100 = Utf8               (Ljava/lang/Object;)I
  #101 = NameAndType        #99:#100      // anyHash:(Ljava/lang/Object;)I
  #102 = Methodref          #98.#101      // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #103 = Utf8               code
  #104 = Utf8               I
  #105 = Utf8               tuple
  #106 = Utf8               ()Lscala/Tuple2;
  #107 = Utf8               ()Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/Object;>;
  #108 = Utf8               scala/Tuple2
  #109 = Class              #108          // scala/Tuple2
  #110 = Utf8               scala/runtime/BoxesRunTime
  #111 = Class              #110          // scala/runtime/BoxesRunTime
  #112 = Utf8               boxToBoolean
  #113 = Utf8               (Z)Ljava/lang/Boolean;
  #114 = NameAndType        #112:#113     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #115 = Methodref          #111.#114     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #116 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #117 = NameAndType        #41:#116      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #118 = Methodref          #109.#117     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #119 = Utf8               productPrefix
  #120 = Utf8               productArity
  #121 = Utf8               productElement
  #122 = Utf8               (I)Ljava/lang/Object;
  #123 = Utf8               n
  #124 = Utf8               java/lang/IndexOutOfBoundsException
  #125 = Class              #124          // java/lang/IndexOutOfBoundsException
  #126 = Utf8               boxToInteger
  #127 = Utf8               (I)Ljava/lang/Integer;
  #128 = NameAndType        #126:#127     // boxToInteger:(I)Ljava/lang/Integer;
  #129 = Methodref          #111.#128     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #130 = Methodref          #90.#55       // java/lang/Object.toString:()Ljava/lang/String;
  #131 = Utf8               (Ljava/lang/String;)V
  #132 = NameAndType        #41:#131      // "<init>":(Ljava/lang/String;)V
  #133 = Methodref          #125.#132     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #134 = Utf8               productElementName
  #135 = Utf8               (I)Ljava/lang/String;
  #136 = String             #7            // baseModule
  #137 = String             #9            // fullCrossVersion
  #138 = Utf8               ()V
  #139 = NameAndType        #41:#138      // "<init>":()V
  #140 = Methodref          #4.#139       // coursier/parse/JavaOrScalaModule."<init>":()V
  #141 = Utf8               Code
  #142 = Utf8               LineNumberTable
  #143 = Utf8               LocalVariableTable
  #144 = Utf8               Signature
  #145 = Utf8               StackMapTable
  #146 = Utf8               MethodParameters
  #147 = Utf8               InnerClasses
  #148 = Utf8               SourceFile
  #149 = Utf8               ScalaInlineInfo
  #150 = Utf8               Scala
{
  private final coursier.core.Module baseModule;
    descriptor: Lcoursier/core/Module;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean fullCrossVersion;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public coursier.core.Module baseModule();
    descriptor: ()Lcoursier/core/Module;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #13                 // Field baseModule:Lcoursier/core/Module;
         4: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;

  public boolean fullCrossVersion();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #18                 // Field fullCrossVersion:Z
         4: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> attributes();
    descriptor: ()Lscala/collection/immutable/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
         4: invokevirtual #27                 // Method coursier/core/Module.attributes:()Lscala/collection/immutable/Map;
         7: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
    Signature: #21                          // ()Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #31                 // Method fullCrossVersion:()Z
         4: ifeq          12
         7: ldc           #33                 // String :::
         9: goto          14
        12: ldc           #35                 // String ::
        14: astore_1
        15: new           #39                 // class java/lang/StringBuilder
        18: dup
        19: ldc           #40                 // int 0
        21: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
        24: aload_0
        25: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
        28: invokevirtual #47                 // Method coursier/core/Module.organization:()Ljava/lang/String;
        31: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: aload_1
        35: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: aload_0
        39: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
        42: invokevirtual #54                 // Method coursier/core/Module.nameWithAttributes:()Ljava/lang/String;
        45: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        48: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        51: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 37: 0
        line 38: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      36     1   sep   Ljava/lang/String;
            0      52     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;

  public coursier.core.Module module(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Module;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_0
         1: invokevirtual #31                 // Method fullCrossVersion:()Z
         4: ifeq          31
         7: new           #39                 // class java/lang/StringBuilder
        10: dup
        11: ldc           #63                 // int 1
        13: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
        16: ldc           #65                 // String _
        18: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: aload_2
        22: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        28: goto          52
        31: new           #39                 // class java/lang/StringBuilder
        34: dup
        35: ldc           #63                 // int 1
        37: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
        40: ldc           #65                 // String _
        42: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: aload_1
        46: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        49: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        52: astore_3
        53: new           #39                 // class java/lang/StringBuilder
        56: dup
        57: ldc           #40                 // int 0
        59: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
        62: aload_0
        63: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
        66: invokevirtual #68                 // Method coursier/core/Module.name:()Ljava/lang/String;
        69: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        72: aload_3
        73: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        76: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        79: astore        4
        81: aload_0
        82: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
        85: aload         4
        87: invokevirtual #72                 // Method coursier/core/Module.withName:(Ljava/lang/String;)Lcoursier/core/Module;
        90: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 31 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 43: 0
        line 44: 31
        line 46: 53
        line 48: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           53      37     3 scalaSuffix   Ljava/lang/String;
           81       9     4 newName   Ljava/lang/String;
            0      91     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
            0      91     1 scalaBinaryVersion   Ljava/lang/String;
            0      91     2 scalaVersion   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      scalaBinaryVersion             final
      scalaVersion                   final

  public coursier.parse.JavaOrScalaModule$ScalaModule withBaseModule(coursier.core.Module);
    descriptor: (Lcoursier/core/Module;)Lcoursier/parse/JavaOrScalaModule$ScalaModule;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #2                  // class coursier/parse/JavaOrScalaModule$ScalaModule
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #31                 // Method fullCrossVersion:()Z
         9: invokespecial #79                 // Method "<init>":(Lcoursier/core/Module;Z)V
        12: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
            0      13     1 baseModule   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      baseModule                     final

  public coursier.parse.JavaOrScalaModule$ScalaModule withFullCrossVersion(boolean);
    descriptor: (Z)Lcoursier/parse/JavaOrScalaModule$ScalaModule;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #2                  // class coursier/parse/JavaOrScalaModule$ScalaModule
         3: dup
         4: aload_0
         5: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
         8: iload_1
         9: invokespecial #79                 // Method "<init>":(Lcoursier/core/Module;Z)V
        12: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
            0      13     1 fullCrossVersion   Z
    MethodParameters:
      Name                           Flags
      fullCrossVersion               final

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/parse/JavaOrScalaModule$ScalaModule
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     69
         5: aload_0
         6: aload_1
         7: invokevirtual #88                 // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          73
        13: aload_1
        14: checkcast     #2                  // class coursier/parse/JavaOrScalaModule$ScalaModule
        17: astore_2
        18: iconst_1
        19: ifeq          65
        22: aload_0
        23: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
        26: aload_2
        27: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          65
        43: aload_3
        44: invokevirtual #92                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          65
        50: aload_0
        51: invokevirtual #31                 // Method fullCrossVersion:()Z
        54: aload_2
        55: invokevirtual #31                 // Method fullCrossVersion:()Z
        58: if_icmpne     65
        61: iconst_1
        62: goto          66
        65: iconst_0
        66: ifeq          73
        69: iconst_1
        70: goto          74
        73: iconst_0
        74: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/parse/JavaOrScalaModule$ScalaModule, class java/lang/Object, class coursier/parse/JavaOrScalaModule$ScalaModule, class coursier/core/Module ]
          stack = [ class coursier/core/Module ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 14
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      48     2 other   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
            0      75     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
            0      75     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc           #96                 // String ScalaModule
         4: invokestatic  #102                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         7: iadd
         8: istore_1
         9: bipush        37
        11: iload_1
        12: imul
        13: aload_0
        14: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
        17: invokestatic  #102                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        20: iadd
        21: istore_1
        22: bipush        37
        24: iload_1
        25: imul
        26: aload_0
        27: invokevirtual #31                 // Method fullCrossVersion:()Z
        30: ifeq          39
        33: sipush        1231
        36: goto          42
        39: sipush        1237
        42: iadd
        43: istore_1
        44: bipush        37
        46: iload_1
        47: imul
        48: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class coursier/parse/JavaOrScalaModule$ScalaModule, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/parse/JavaOrScalaModule$ScalaModule, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      39     1  code   I
            0      49     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;

  private scala.Tuple2<coursier.core.Module, java.lang.Object> tuple();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=1, args_size=1
         0: new           #109                // class scala/Tuple2
         3: dup
         4: aload_0
         5: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
         8: aload_0
         9: invokevirtual #31                 // Method fullCrossVersion:()Z
        12: invokestatic  #115                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        15: invokespecial #118                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        18: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
    Signature: #107                         // ()Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/Object;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #96                 // String ScalaModule
         2: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 41
            }
        24: aload_0
        25: invokevirtual #23                 // Method baseModule:()Lcoursier/core/Module;
        28: goto          56
        31: aload_0
        32: invokevirtual #31                 // Method fullCrossVersion:()Z
        35: invokestatic  #115                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        38: goto          56
        41: new           #125                // class java/lang/IndexOutOfBoundsException
        44: dup
        45: iload_2
        46: invokestatic  #129                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        49: invokevirtual #130                // Method java/lang/Object.toString:()Ljava/lang/String;
        52: invokespecial #133                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        55: athrow
        56: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
            0      57     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 29
                 default: 34
            }
        24: ldc           #136                // String baseModule
        26: goto          49
        29: ldc           #137                // String fullCrossVersion
        31: goto          49
        34: new           #125                // class java/lang/IndexOutOfBoundsException
        37: dup
        38: iload_2
        39: invokestatic  #129                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        42: invokevirtual #130                // Method java/lang/Object.toString:()Ljava/lang/String;
        45: invokespecial #133                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        48: athrow
        49: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
            0      50     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public coursier.parse.JavaOrScalaModule$ScalaModule(coursier.core.Module, boolean);
    descriptor: (Lcoursier/core/Module;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #13                 // Field baseModule:Lcoursier/core/Module;
         5: aload_0
         6: iload_2
         7: putfield      #18                 // Field fullCrossVersion:Z
        10: aload_0
        11: invokespecial #140                // Method coursier/parse/JavaOrScalaModule."<init>":()V
        14: return
      LineNumberTable:
        line 31: 0
        line 34: 10
        line 31: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcoursier/parse/JavaOrScalaModule$ScalaModule;
            0      15     1 baseModule   Lcoursier/core/Module;
            0      15     2 fullCrossVersion   Z
    MethodParameters:
      Name                           Flags
      baseModule                     final
      fullCrossVersion               final
}
InnerClasses:
  public static final #6= #2 of #4;       // ScalaModule=class coursier/parse/JavaOrScalaModule$ScalaModule of class coursier/parse/JavaOrScalaModule
SourceFile: "JavaOrScalaModule.scala"
  ScalaInlineInfo: length = 0x54 (unknown attribute)
   01 01 00 10 00 27 00 4D 01 00 13 00 14 01 00 07
   00 0B 01 00 52 00 53 01 00 56 00 53 01 00 09 00
   10 01 00 5E 00 5F 01 00 3B 00 3C 01 00 78 00 5F
   01 00 79 00 7A 01 00 86 00 87 01 00 77 00 1D 01
   00 1C 00 1D 01 00 69 00 6A 01 00 4B 00 4C 01 00
   50 00 51 01
  Scala: length = 0x0 (unknown attribute)

