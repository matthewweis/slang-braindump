Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/N$.class
  Last modified May 29, 2022; size 10632 bytes
  SHA-256 checksum 41e86e1454a2eb2a4890ddc70ccd42c30ed8f7c14bd55e01a68c11db09a7571f
  Compiled from "BitsRangeTypes.scala"
public final class org.sireum.N$ extends java.lang.Object implements org.sireum.$ZCompanion<org.sireum.N>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/N$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 12, methods: 53, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/N$
    #2 = Class              #1            // org/sireum/N$
    #3 = Utf8               Ljava/lang/Object;Lorg/sireum/$ZCompanion<Lorg/sireum/N;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/$ZCompanion
    #7 = Class              #6            // org/sireum/$ZCompanion
    #8 = Utf8               BitsRangeTypes.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               org/sireum/N$$String$
   #15 = Class              #14           // org/sireum/N$$String$
   #16 = Utf8               org/sireum/N
   #17 = Class              #16           // org/sireum/N
   #18 = Utf8               $String$
   #19 = Utf8               org/sireum/N$BigInt$
   #20 = Class              #19           // org/sireum/N$BigInt$
   #21 = Utf8               BigInt$
   #22 = Utf8               org/sireum/N$Int$
   #23 = Class              #22           // org/sireum/N$Int$
   #24 = Utf8               Int$
   #25 = Utf8               org/sireum/N$Long$
   #26 = Class              #25           // org/sireum/N$Long$
   #27 = Utf8               Long$
   #28 = Utf8               org/sireum/N$N$Slang
   #29 = Class              #28           // org/sireum/N$N$Slang
   #30 = Utf8               N$Slang
   #31 = Utf8               org/sireum/Z$Boxer$
   #32 = Class              #31           // org/sireum/Z$Boxer$
   #33 = Utf8               org/sireum/Z
   #34 = Class              #33           // org/sireum/Z
   #35 = Utf8               Boxer$
   #36 = Utf8               org/sireum/Z$Boxer$Z$
   #37 = Class              #36           // org/sireum/Z$Boxer$Z$
   #38 = Utf8               Z$
   #39 = Utf8               org/sireum/Z$MP$
   #40 = Class              #39           // org/sireum/Z$MP$
   #41 = Utf8               MP$
   #42 = Utf8               MODULE$
   #43 = Utf8               Lorg/sireum/N$;
   #44 = Utf8               Min
   #45 = Utf8               Lorg/sireum/Z;
   #46 = Utf8               Max
   #47 = Utf8               Name
   #48 = Utf8               Ljava/lang/String;
   #49 = Utf8               Index
   #50 = Utf8               isZeroIndex
   #51 = Utf8               Z
   #52 = Utf8               isSigned
   #53 = Utf8               isBitVector
   #54 = Utf8               hasMin
   #55 = Utf8               hasMax
   #56 = Utf8               $NCompanion
   #57 = Utf8               Lorg/sireum/$ZCompanion;
   #58 = Utf8               Lorg/sireum/$ZCompanion<Lorg/sireum/N;>;
   #59 = Utf8               bitmap$0
   #60 = Utf8               B
   #61 = Utf8               <clinit>
   #62 = Utf8               ()V
   #63 = Utf8               <init>
   #64 = NameAndType        #63:#62       // "<init>":()V
   #65 = Methodref          #2.#64        // org/sireum/N$."<init>":()V
   #66 = NameAndType        #42:#43       // MODULE$:Lorg/sireum/N$;
   #67 = Fieldref           #2.#66        // org/sireum/N$.MODULE$:Lorg/sireum/N$;
   #68 = Utf8               N
   #69 = String             #68           // N
   #70 = NameAndType        #47:#48       // Name:Ljava/lang/String;
   #71 = Fieldref           #2.#70        // org/sireum/N$.Name:Ljava/lang/String;
   #72 = Utf8               Lorg/sireum/Z$MP$;
   #73 = NameAndType        #42:#72       // MODULE$:Lorg/sireum/Z$MP$;
   #74 = Fieldref           #40.#73       // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
   #75 = Utf8               org/sireum/String$
   #76 = Class              #75           // org/sireum/String$
   #77 = Utf8               Lorg/sireum/String$;
   #78 = NameAndType        #42:#77       // MODULE$:Lorg/sireum/String$;
   #79 = Fieldref           #76.#78       // org/sireum/String$.MODULE$:Lorg/sireum/String$;
   #80 = Utf8               0
   #81 = String             #80           // 0
   #82 = Utf8               apply
   #83 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #84 = NameAndType        #82:#83       // apply:(Ljava/lang/String;)Ljava/lang/String;
   #85 = Methodref          #76.#84       // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
   #86 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
   #87 = NameAndType        #82:#86       // apply:(Ljava/lang/String;)Lorg/sireum/Z;
   #88 = Methodref          #40.#87       // org/sireum/Z$MP$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
   #89 = NameAndType        #49:#45       // Index:Lorg/sireum/Z;
   #90 = Fieldref           #2.#89        // org/sireum/N$.Index:Lorg/sireum/Z;
   #91 = NameAndType        #50:#51       // isZeroIndex:Z
   #92 = Fieldref           #2.#91        // org/sireum/N$.isZeroIndex:Z
   #93 = NameAndType        #52:#51       // isSigned:Z
   #94 = Fieldref           #2.#93        // org/sireum/N$.isSigned:Z
   #95 = NameAndType        #53:#51       // isBitVector:Z
   #96 = Fieldref           #2.#95        // org/sireum/N$.isBitVector:Z
   #97 = NameAndType        #54:#51       // hasMin:Z
   #98 = Fieldref           #2.#97        // org/sireum/N$.hasMin:Z
   #99 = NameAndType        #55:#51       // hasMax:Z
  #100 = Fieldref           #2.#99        // org/sireum/N$.hasMax:Z
  #101 = NameAndType        #56:#57       // $NCompanion:Lorg/sireum/$ZCompanion;
  #102 = Fieldref           #2.#101       // org/sireum/N$.$NCompanion:Lorg/sireum/$ZCompanion;
  #103 = Utf8               Int
  #104 = Utf8               ()Lorg/sireum/N$Int$;
  #105 = Utf8               Lorg/sireum/N$Int$;
  #106 = NameAndType        #42:#105      // MODULE$:Lorg/sireum/N$Int$;
  #107 = Fieldref           #23.#106      // org/sireum/N$Int$.MODULE$:Lorg/sireum/N$Int$;
  #108 = Utf8               this
  #109 = Utf8               Long
  #110 = Utf8               ()Lorg/sireum/N$Long$;
  #111 = Utf8               Lorg/sireum/N$Long$;
  #112 = NameAndType        #42:#111      // MODULE$:Lorg/sireum/N$Long$;
  #113 = Fieldref           #26.#112      // org/sireum/N$Long$.MODULE$:Lorg/sireum/N$Long$;
  #114 = Utf8               $String
  #115 = Utf8               ()Lorg/sireum/N$$String$;
  #116 = Utf8               Lorg/sireum/N$$String$;
  #117 = NameAndType        #42:#116      // MODULE$:Lorg/sireum/N$$String$;
  #118 = Fieldref           #15.#117      // org/sireum/N$$String$.MODULE$:Lorg/sireum/N$$String$;
  #119 = Utf8               BigInt
  #120 = Utf8               ()Lorg/sireum/N$BigInt$;
  #121 = Utf8               Lorg/sireum/N$BigInt$;
  #122 = NameAndType        #42:#121      // MODULE$:Lorg/sireum/N$BigInt$;
  #123 = Fieldref           #20.#122      // org/sireum/N$BigInt$.MODULE$:Lorg/sireum/N$BigInt$;
  #124 = Utf8               ()Ljava/lang/String;
  #125 = Utf8               Min$lzycompute
  #126 = Utf8               ()Lorg/sireum/Z;
  #127 = NameAndType        #59:#60       // bitmap$0:B
  #128 = Fieldref           #2.#127       // org/sireum/N$.bitmap$0:B
  #129 = Utf8               ()Z
  #130 = NameAndType        #54:#129      // hasMin:()Z
  #131 = Methodref          #2.#130       // org/sireum/N$.hasMin:()Z
  #132 = Utf8               org/sireum/package$
  #133 = Class              #132          // org/sireum/package$
  #134 = Utf8               Lorg/sireum/package$;
  #135 = NameAndType        #42:#134      // MODULE$:Lorg/sireum/package$;
  #136 = Fieldref           #133.#135     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #137 = Utf8               Unsupported Vector(N) operation \'Min\'
  #138 = String             #137          // Unsupported Vector(N) operation \'Min\'
  #139 = Utf8               halt
  #140 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #141 = NameAndType        #139:#140     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #142 = Methodref          #133.#141     // org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #143 = NameAndType        #44:#45       // Min:Lorg/sireum/Z;
  #144 = Fieldref           #2.#143       // org/sireum/N$.Min:Lorg/sireum/Z;
  #145 = Utf8               java/lang/Throwable
  #146 = Class              #145          // java/lang/Throwable
  #147 = NameAndType        #125:#126     // Min$lzycompute:()Lorg/sireum/Z;
  #148 = Methodref          #2.#147       // org/sireum/N$.Min$lzycompute:()Lorg/sireum/Z;
  #149 = Utf8               Max$lzycompute
  #150 = NameAndType        #55:#129      // hasMax:()Z
  #151 = Methodref          #2.#150       // org/sireum/N$.hasMax:()Z
  #152 = Utf8               Unsupported Vector(N) operation \'Max\'
  #153 = String             #152          // Unsupported Vector(N) operation \'Max\'
  #154 = NameAndType        #46:#45       // Max:Lorg/sireum/Z;
  #155 = Fieldref           #2.#154       // org/sireum/N$.Max:Lorg/sireum/Z;
  #156 = NameAndType        #149:#126     // Max$lzycompute:()Lorg/sireum/Z;
  #157 = Methodref          #2.#156       // org/sireum/N$.Max$lzycompute:()Lorg/sireum/Z;
  #158 = Utf8               BitWidth
  #159 = Utf8               ()I
  #160 = Utf8               java/lang/StringBuilder
  #161 = Class              #160          // java/lang/StringBuilder
  #162 = Integer            33
  #163 = Utf8               (I)V
  #164 = NameAndType        #63:#163      // "<init>":(I)V
  #165 = Methodref          #161.#164     // java/lang/StringBuilder."<init>":(I)V
  #166 = Utf8               Unsupported
  #167 = String             #166          // Unsupported
  #168 = Utf8               append
  #169 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #170 = NameAndType        #168:#169     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #171 = Methodref          #161.#170     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #172 = NameAndType        #47:#124      // Name:()Ljava/lang/String;
  #173 = Methodref          #2.#172       // org/sireum/N$.Name:()Ljava/lang/String;
  #174 = Utf8                operation \'BitWidth\'
  #175 = String             #174          //  operation \'BitWidth\'
  #176 = Utf8               toString
  #177 = NameAndType        #176:#124     // toString:()Ljava/lang/String;
  #178 = Methodref          #161.#177     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #179 = Utf8               random
  #180 = NameAndType        #46:#126      // Max:()Lorg/sireum/Z;
  #181 = Methodref          #2.#180       // org/sireum/N$.Max:()Lorg/sireum/Z;
  #182 = NameAndType        #44:#126      // Min:()Lorg/sireum/Z;
  #183 = Methodref          #2.#182       // org/sireum/N$.Min:()Lorg/sireum/Z;
  #184 = Utf8               $minus
  #185 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #186 = NameAndType        #184:#185     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #187 = InterfaceMethodref #34.#186      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #188 = Utf8               one
  #189 = NameAndType        #188:#126     // one:()Lorg/sireum/Z;
  #190 = Methodref          #40.#189      // org/sireum/Z$MP$.one:()Lorg/sireum/Z;
  #191 = Utf8               $plus
  #192 = NameAndType        #191:#185     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #193 = InterfaceMethodref #34.#192      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #194 = Utf8               org/sireum/Z$
  #195 = Class              #194          // org/sireum/Z$
  #196 = Utf8               Lorg/sireum/Z$;
  #197 = NameAndType        #42:#196      // MODULE$:Lorg/sireum/Z$;
  #198 = Fieldref           #195.#197     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #199 = NameAndType        #179:#126     // random:()Lorg/sireum/Z;
  #200 = Methodref          #195.#199     // org/sireum/Z$.random:()Lorg/sireum/Z;
  #201 = Utf8               $percent
  #202 = NameAndType        #201:#185     // $percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #203 = InterfaceMethodref #34.#202      // org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #204 = NameAndType        #82:#185      // apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #205 = Methodref          #2.#204       // org/sireum/N$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #206 = Utf8               org/sireum/B$
  #207 = Class              #206          // org/sireum/B$
  #208 = Utf8               Lorg/sireum/B$;
  #209 = NameAndType        #42:#208      // MODULE$:Lorg/sireum/B$;
  #210 = Fieldref           #207.#209     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #211 = Utf8               $greater
  #212 = Utf8               (Lorg/sireum/Z;)Z
  #213 = NameAndType        #211:#212     // $greater:(Lorg/sireum/Z;)Z
  #214 = InterfaceMethodref #34.#213      // org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
  #215 = Utf8               $4B
  #216 = Utf8               (Z)Z
  #217 = NameAndType        #215:#216     // $4B:(Z)Z
  #218 = Methodref          #207.#217     // org/sireum/B$.$4B:(Z)Z
  #219 = Utf8               $less
  #220 = NameAndType        #219:#212     // $less:(Lorg/sireum/Z;)Z
  #221 = InterfaceMethodref #34.#220      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #222 = Utf8               d
  #223 = Utf8               n
  #224 = Utf8               randomSeed
  #225 = Utf8               seed
  #226 = NameAndType        #224:#185     // randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #227 = Methodref          #195.#226     // org/sireum/Z$.randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #228 = Utf8               check
  #229 = Utf8               v
  #230 = Utf8               scala/Predef$
  #231 = Class              #230          // scala/Predef$
  #232 = Utf8               Lscala/Predef$;
  #233 = NameAndType        #42:#232      // MODULE$:Lscala/Predef$;
  #234 = Fieldref           #231.#233     // scala/Predef$.MODULE$:Lscala/Predef$;
  #235 = Utf8               $less$eq
  #236 = NameAndType        #235:#212     // $less$eq:(Lorg/sireum/Z;)Z
  #237 = InterfaceMethodref #34.#236      // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #238 = Utf8               ()Ljava/lang/Object;
  #239 = MethodType         #238          //  ()Ljava/lang/Object;
  #240 = Utf8               $anonfun$check$9
  #241 = Utf8               (Lorg/sireum/Z;)Ljava/lang/String;
  #242 = NameAndType        #240:#241     // $anonfun$check$9:(Lorg/sireum/Z;)Ljava/lang/String;
  #243 = Methodref          #2.#242       // org/sireum/N$.$anonfun$check$9:(Lorg/sireum/Z;)Ljava/lang/String;
  #244 = MethodHandle       6:#243        // REF_invokeStatic org/sireum/N$.$anonfun$check$9:(Lorg/sireum/Z;)Ljava/lang/String;
  #245 = MethodType         #124          //  ()Ljava/lang/String;
  #246 = Integer            5
  #247 = Integer            1
  #248 = Utf8               java/lang/invoke/LambdaMetafactory
  #249 = Class              #248          // java/lang/invoke/LambdaMetafactory
  #250 = Utf8               altMetafactory
  #251 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #252 = NameAndType        #250:#251     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #253 = Methodref          #249.#252     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #254 = MethodHandle       6:#253        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #255 = Utf8               (Lorg/sireum/Z;)Lscala/Function0;
  #256 = NameAndType        #82:#255      // apply:(Lorg/sireum/Z;)Lscala/Function0;
  #257 = InvokeDynamic      #0:#256       // #0:apply:(Lorg/sireum/Z;)Lscala/Function0;
  #258 = Utf8               assert
  #259 = Utf8               (ZLscala/Function0;)V
  #260 = NameAndType        #258:#259     // assert:(ZLscala/Function0;)V
  #261 = Methodref          #231.#260     // scala/Predef$.assert:(ZLscala/Function0;)V
  #262 = Utf8               $anonfun$check$10
  #263 = NameAndType        #262:#241     // $anonfun$check$10:(Lorg/sireum/Z;)Ljava/lang/String;
  #264 = Methodref          #2.#263       // org/sireum/N$.$anonfun$check$10:(Lorg/sireum/Z;)Ljava/lang/String;
  #265 = MethodHandle       6:#264        // REF_invokeStatic org/sireum/N$.$anonfun$check$10:(Lorg/sireum/Z;)Ljava/lang/String;
  #266 = InvokeDynamic      #1:#256       // #1:apply:(Lorg/sireum/Z;)Lscala/Function0;
  #267 = Utf8               (I)Lorg/sireum/Z;
  #268 = NameAndType        #82:#267      // apply:(I)Lorg/sireum/Z;
  #269 = Methodref          #23.#268      // org/sireum/N$Int$.apply:(I)Lorg/sireum/Z;
  #270 = Utf8               I
  #271 = Utf8               (J)Lorg/sireum/Z;
  #272 = NameAndType        #82:#271      // apply:(J)Lorg/sireum/Z;
  #273 = Methodref          #26.#272      // org/sireum/N$Long$.apply:(J)Lorg/sireum/Z;
  #274 = Utf8               J
  #275 = NameAndType        #228:#185     // check:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #276 = Methodref          #2.#275       // org/sireum/N$.check:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #277 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option;
  #278 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/N;>;
  #279 = Utf8               s
  #280 = Utf8               org/sireum/Some$
  #281 = Class              #280          // org/sireum/Some$
  #282 = Utf8               Lorg/sireum/Some$;
  #283 = NameAndType        #42:#282      // MODULE$:Lorg/sireum/Some$;
  #284 = Fieldref           #281.#283     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #285 = Methodref          #15.#87       // org/sireum/N$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #286 = Utf8               (Lorg/sireum/Z;)V
  #287 = NameAndType        #63:#286      // "<init>":(Lorg/sireum/Z;)V
  #288 = Methodref          #17.#287      // org/sireum/N."<init>":(Lorg/sireum/Z;)V
  #289 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #290 = NameAndType        #82:#289      // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #291 = Methodref          #281.#290     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #292 = Utf8               org/sireum/None$
  #293 = Class              #292          // org/sireum/None$
  #294 = Utf8               Lorg/sireum/None$;
  #295 = NameAndType        #42:#294      // MODULE$:Lorg/sireum/None$;
  #296 = Fieldref           #293.#295     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #297 = Utf8               ()Lorg/sireum/None;
  #298 = NameAndType        #82:#297      // apply:()Lorg/sireum/None;
  #299 = Methodref          #293.#298     // org/sireum/None$.apply:()Lorg/sireum/None;
  #300 = Utf8               unapply
  #301 = Utf8               (Lorg/sireum/Z;)Lscala/Option;
  #302 = Utf8               (Lorg/sireum/Z;)Lscala/Option<Lorg/sireum/Z;>;
  #303 = Utf8               scala/Some
  #304 = Class              #303          // scala/Some
  #305 = Utf8               (Ljava/lang/Object;)V
  #306 = NameAndType        #63:#305      // "<init>":(Ljava/lang/Object;)V
  #307 = Methodref          #304.#306     // scala/Some."<init>":(Ljava/lang/Object;)V
  #308 = Utf8               (Lscala/StringContext;)Lorg/sireum/N$N$Slang;
  #309 = Utf8               sc
  #310 = Utf8               (Lscala/StringContext;)V
  #311 = NameAndType        #63:#310      // "<init>":(Lscala/StringContext;)V
  #312 = Methodref          #29.#311      // org/sireum/N$N$Slang."<init>":(Lscala/StringContext;)V
  #313 = Utf8               Lscala/StringContext;
  #314 = Utf8               ()Lorg/sireum/$ZCompanion;
  #315 = Utf8               ()Lorg/sireum/$ZCompanion<Lorg/sireum/N;>;
  #316 = Utf8               Name$extension
  #317 = Utf8               $this
  #318 = Utf8               Min$extension
  #319 = Utf8               Max$extension
  #320 = Utf8               Index$extension
  #321 = NameAndType        #49:#126      // Index:()Lorg/sireum/Z;
  #322 = Methodref          #2.#321       // org/sireum/N$.Index:()Lorg/sireum/Z;
  #323 = Utf8               isZeroIndex$extension
  #324 = NameAndType        #50:#129      // isZeroIndex:()Z
  #325 = Methodref          #2.#324       // org/sireum/N$.isZeroIndex:()Z
  #326 = Utf8               isSigned$extension
  #327 = NameAndType        #52:#129      // isSigned:()Z
  #328 = Methodref          #2.#327       // org/sireum/N$.isSigned:()Z
  #329 = Utf8               hasMin$extension
  #330 = Utf8               hasMax$extension
  #331 = Utf8               make$extension
  #332 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
  #333 = Utf8               boxer$extension
  #334 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z$Boxer$Z$;
  #335 = Utf8               Lorg/sireum/Z$Boxer$Z$;
  #336 = NameAndType        #42:#335      // MODULE$:Lorg/sireum/Z$Boxer$Z$;
  #337 = Fieldref           #37.#336      // org/sireum/Z$Boxer$Z$.MODULE$:Lorg/sireum/Z$Boxer$Z$;
  #338 = Utf8               hashCode$extension
  #339 = Utf8               (Lorg/sireum/Z;)I
  #340 = Utf8               hashCode
  #341 = NameAndType        #340:#159     // hashCode:()I
  #342 = Methodref          #5.#341       // java/lang/Object.hashCode:()I
  #343 = Utf8               equals$extension
  #344 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;)Z
  #345 = Utf8               x$1
  #346 = Utf8               value
  #347 = NameAndType        #346:#126     // value:()Lorg/sireum/Z;
  #348 = Methodref          #17.#347      // org/sireum/N.value:()Lorg/sireum/Z;
  #349 = Utf8               equals
  #350 = Utf8               (Ljava/lang/Object;)Z
  #351 = NameAndType        #349:#350     // equals:(Ljava/lang/Object;)Z
  #352 = Methodref          #5.#351       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #353 = Utf8               Ljava/lang/Object;
  #354 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #355 = Methodref          #2.#226       // org/sireum/N$.randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #356 = Methodref          #2.#199       // org/sireum/N$.random:()Lorg/sireum/Z;
  #357 = Utf8               ()Lorg/sireum/$ZCompanionBigInt;
  #358 = NameAndType        #119:#120     // BigInt:()Lorg/sireum/N$BigInt$;
  #359 = Methodref          #2.#358       // org/sireum/N$.BigInt:()Lorg/sireum/N$BigInt$;
  #360 = Utf8               ()Lorg/sireum/$ZCompanionString;
  #361 = NameAndType        #114:#115     // $String:()Lorg/sireum/N$$String$;
  #362 = Methodref          #2.#361       // org/sireum/N$.$String:()Lorg/sireum/N$$String$;
  #363 = Utf8               ()Lorg/sireum/$ZCompanionLong;
  #364 = NameAndType        #109:#110     // Long:()Lorg/sireum/N$Long$;
  #365 = Methodref          #2.#364       // org/sireum/N$.Long:()Lorg/sireum/N$Long$;
  #366 = Utf8               ()Lorg/sireum/$ZCompanionInt;
  #367 = NameAndType        #103:#104     // Int:()Lorg/sireum/N$Int$;
  #368 = Methodref          #2.#367       // org/sireum/N$.Int:()Lorg/sireum/N$Int$;
  #369 = Utf8               v$5
  #370 = Integer            23
  #371 = Methodref          #5.#177       // java/lang/Object.toString:()Ljava/lang/String;
  #372 = Utf8                is less than N.Min (0)
  #373 = String             #372          //  is less than N.Min (0)
  #374 = Integer            26
  #375 = Utf8                is greater than N.Max (0)
  #376 = String             #375          //  is greater than N.Max (0)
  #377 = Methodref          #5.#64        // java/lang/Object."<init>":()V
  #378 = Utf8               $deserializeLambda$
  #379 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #380 = Utf8               scala/runtime/LambdaDeserialize
  #381 = Class              #380          // scala/runtime/LambdaDeserialize
  #382 = Utf8               bootstrap
  #383 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #384 = NameAndType        #382:#383     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #385 = Methodref          #381.#384     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #386 = MethodHandle       6:#385        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #387 = Utf8               lambdaDeserialize
  #388 = NameAndType        #387:#379     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #389 = InvokeDynamic      #2:#388       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #390 = Utf8               Signature
  #391 = Utf8               Code
  #392 = Utf8               LineNumberTable
  #393 = Utf8               LocalVariableTable
  #394 = Utf8               StackMapTable
  #395 = Utf8               MethodParameters
  #396 = Utf8               InnerClasses
  #397 = Utf8               SourceFile
  #398 = Utf8               BootstrapMethods
  #399 = Utf8               ScalaInlineInfo
  #400 = Utf8               Scala
{
  public static final org.sireum.N$ MODULE$;
    descriptor: Lorg/sireum/N$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static org.sireum.Z Min;
    descriptor: Lorg/sireum/Z;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static org.sireum.Z Max;
    descriptor: Lorg/sireum/Z;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static final java.lang.String Name;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final org.sireum.Z Index;
    descriptor: Lorg/sireum/Z;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isZeroIndex;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isSigned;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean isBitVector;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean hasMin;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean hasMax;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final org.sireum.$ZCompanion<org.sireum.N> $NCompanion;
    descriptor: Lorg/sireum/$ZCompanion;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #58                          // Lorg/sireum/$ZCompanion<Lorg/sireum/N;>;

  private static volatile byte bitmap$0;
    descriptor: B
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #2                  // class org/sireum/N$
         3: dup
         4: invokespecial #65                 // Method "<init>":()V
         7: putstatic     #67                 // Field MODULE$:Lorg/sireum/N$;
        10: ldc           #69                 // String N
        12: putstatic     #71                 // Field Name:Ljava/lang/String;
        15: getstatic     #74                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        18: getstatic     #79                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        21: ldc           #81                 // String 0
        23: invokevirtual #85                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        26: invokevirtual #88                 // Method org/sireum/Z$MP$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        29: putstatic     #90                 // Field Index:Lorg/sireum/Z;
        32: iconst_1
        33: putstatic     #92                 // Field isZeroIndex:Z
        36: iconst_0
        37: putstatic     #94                 // Field isSigned:Z
        40: iconst_0
        41: putstatic     #96                 // Field isBitVector:Z
        44: iconst_1
        45: putstatic     #98                 // Field hasMin:Z
        48: iconst_0
        49: putstatic     #100                // Field hasMax:Z
        52: getstatic     #67                 // Field MODULE$:Lorg/sireum/N$;
        55: putstatic     #102                // Field $NCompanion:Lorg/sireum/$ZCompanion;
        58: return
      LineNumberTable:
        line 37: 0

  public org.sireum.N$Int$ Int();
    descriptor: ()Lorg/sireum/N$Int$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #107                // Field org/sireum/N$Int$.MODULE$:Lorg/sireum/N$Int$;
         3: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public org.sireum.N$Long$ Long();
    descriptor: ()Lorg/sireum/N$Long$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #113                // Field org/sireum/N$Long$.MODULE$:Lorg/sireum/N$Long$;
         3: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public org.sireum.N$$String$ $String();
    descriptor: ()Lorg/sireum/N$$String$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #118                // Field org/sireum/N$$String$.MODULE$:Lorg/sireum/N$$String$;
         3: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public org.sireum.N$BigInt$ BigInt();
    descriptor: ()Lorg/sireum/N$BigInt$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #123                // Field org/sireum/N$BigInt$.MODULE$:Lorg/sireum/N$BigInt$;
         3: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public java.lang.String Name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #71                 // Field Name:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  private org.sireum.Z Min$lzycompute();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: getstatic     #128                // Field bitmap$0:B
         7: iconst_1
         8: iand
         9: i2b
        10: iconst_0
        11: if_icmpne     59
        14: aload_0
        15: invokevirtual #131                // Method hasMin:()Z
        18: ifeq          38
        21: getstatic     #74                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        24: getstatic     #79                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc           #81                 // String 0
        29: invokevirtual #85                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        32: invokevirtual #88                 // Method org/sireum/Z$MP$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        35: goto          47
        38: getstatic     #136                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        41: ldc           #138                // String Unsupported Vector(N) operation \'Min\'
        43: invokevirtual #142                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        46: athrow
        47: putstatic     #144                // Field Min:Lorg/sireum/Z;
        50: getstatic     #128                // Field bitmap$0:B
        53: iconst_1
        54: ior
        55: i2b
        56: putstatic     #128                // Field bitmap$0:B
        59: aload_1
        60: monitorexit
        61: goto          67
        64: aload_1
        65: monitorexit
        66: athrow
        67: getstatic     #144                // Field Min:Lorg/sireum/Z;
        70: areturn
      Exception table:
         from    to  target type
             4    59    64   any
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 38
          locals = [ class org/sireum/N$ ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
        frame_type = 11 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lorg/sireum/N$;

  public org.sireum.Z Min();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #128                // Field bitmap$0:B
         3: iconst_1
         4: iand
         5: i2b
         6: iconst_0
         7: if_icmpne     17
        10: aload_0
        11: invokespecial #148                // Method Min$lzycompute:()Lorg/sireum/Z;
        14: goto          20
        17: getstatic     #144                // Field Min:Lorg/sireum/Z;
        20: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/N$;

  private org.sireum.Z Max$lzycompute();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: getstatic     #128                // Field bitmap$0:B
         7: iconst_2
         8: iand
         9: i2b
        10: iconst_0
        11: if_icmpne     59
        14: aload_0
        15: invokevirtual #151                // Method hasMax:()Z
        18: ifeq          38
        21: getstatic     #74                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        24: getstatic     #79                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        27: ldc           #81                 // String 0
        29: invokevirtual #85                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        32: invokevirtual #88                 // Method org/sireum/Z$MP$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        35: goto          47
        38: getstatic     #136                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        41: ldc           #153                // String Unsupported Vector(N) operation \'Max\'
        43: invokevirtual #142                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        46: athrow
        47: putstatic     #155                // Field Max:Lorg/sireum/Z;
        50: getstatic     #128                // Field bitmap$0:B
        53: iconst_2
        54: ior
        55: i2b
        56: putstatic     #128                // Field bitmap$0:B
        59: aload_1
        60: monitorexit
        61: goto          67
        64: aload_1
        65: monitorexit
        66: athrow
        67: getstatic     #155                // Field Max:Lorg/sireum/Z;
        70: areturn
      Exception table:
         from    to  target type
             4    59    64   any
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 38
          locals = [ class org/sireum/N$ ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
        frame_type = 11 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lorg/sireum/N$;

  public org.sireum.Z Max();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #128                // Field bitmap$0:B
         3: iconst_2
         4: iand
         5: i2b
         6: iconst_0
         7: if_icmpne     17
        10: aload_0
        11: invokespecial #157                // Method Max$lzycompute:()Lorg/sireum/Z;
        14: goto          20
        17: getstatic     #155                // Field Max:Lorg/sireum/Z;
        20: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/N$;

  public org.sireum.Z Index();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #90                 // Field Index:Lorg/sireum/Z;
         3: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public boolean isZeroIndex();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #92                 // Field isZeroIndex:Z
         3: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public boolean isSigned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #94                 // Field isSigned:Z
         3: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public boolean isBitVector();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #96                 // Field isBitVector:Z
         3: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public boolean hasMin();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #98                 // Field hasMin:Z
         3: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public boolean hasMax();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #100                // Field hasMax:Z
         3: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;

  public int BitWidth();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #136                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: new           #161                // class java/lang/StringBuilder
         6: dup
         7: ldc           #162                // int 33
         9: invokespecial #165                // Method java/lang/StringBuilder."<init>":(I)V
        12: ldc           #167                // String Unsupported
        14: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: aload_0
        18: invokevirtual #173                // Method Name:()Ljava/lang/String;
        21: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: ldc           #175                // String  operation \'BitWidth\'
        26: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        32: invokevirtual #142                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        35: athrow
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/sireum/N$;

  public org.sireum.Z random();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=1
         0: aload_0
         1: invokevirtual #151                // Method hasMax:()Z
         4: ifeq          69
         7: aload_0
         8: invokevirtual #131                // Method hasMin:()Z
        11: ifeq          69
        14: aload_0
        15: invokevirtual #181                // Method Max:()Lorg/sireum/Z;
        18: aload_0
        19: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
        22: invokeinterface #187,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        27: getstatic     #74                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        30: invokevirtual #190                // Method org/sireum/Z$MP$.one:()Lorg/sireum/Z;
        33: invokeinterface #193,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        38: astore_1
        39: getstatic     #198                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        42: invokevirtual #200                // Method org/sireum/Z$.random:()Lorg/sireum/Z;
        45: aload_1
        46: invokeinterface #203,  2          // InterfaceMethod org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
        51: astore_2
        52: aload_0
        53: aload_2
        54: aload_0
        55: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
        58: invokeinterface #193,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        63: invokevirtual #205                // Method apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        66: goto          171
        69: aload_0
        70: invokevirtual #151                // Method hasMax:()Z
        73: ifeq          123
        76: getstatic     #198                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        79: invokevirtual #200                // Method org/sireum/Z$.random:()Lorg/sireum/Z;
        82: astore_3
        83: aload_0
        84: getstatic     #210                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        87: aload_3
        88: aload_0
        89: invokevirtual #181                // Method Max:()Lorg/sireum/Z;
        92: invokeinterface #214,  2          // InterfaceMethod org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
        97: invokevirtual #218                // Method org/sireum/B$.$4B:(Z)Z
       100: ifeq          116
       103: aload_0
       104: invokevirtual #181                // Method Max:()Lorg/sireum/Z;
       107: aload_3
       108: invokeinterface #187,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       113: goto          117
       116: aload_3
       117: invokevirtual #205                // Method apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
       120: goto          171
       123: getstatic     #198                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       126: invokevirtual #200                // Method org/sireum/Z$.random:()Lorg/sireum/Z;
       129: astore        4
       131: aload_0
       132: getstatic     #210                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       135: aload         4
       137: aload_0
       138: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
       141: invokeinterface #221,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       146: invokevirtual #218                // Method org/sireum/B$.$4B:(Z)Z
       149: ifeq          166
       152: aload_0
       153: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
       156: aload         4
       158: invokeinterface #193,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       163: goto          168
       166: aload         4
       168: invokevirtual #205                // Method apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
       171: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 251 /* same_frame_extended */
          offset_delta = 69
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class org/sireum/N$, top, top, class org/sireum/Z ]
          stack = [ class org/sireum/N$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/N$, top, top, class org/sireum/Z ]
          stack = [ class org/sireum/N$, class org/sireum/Z ]
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class org/sireum/N$, top, top, top, class org/sireum/Z ]
          stack = [ class org/sireum/N$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/N$, top, top, top, class org/sireum/Z ]
          stack = [ class org/sireum/N$, class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/sireum/N$ ]
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      27     1     d   Lorg/sireum/Z;
           52      14     2     n   Lorg/sireum/Z;
           83      37     3     n   Lorg/sireum/Z;
          131      40     4     n   Lorg/sireum/Z;
            0     172     0  this   Lorg/sireum/N$;

  public org.sireum.Z randomSeed(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #151                // Method hasMax:()Z
         4: ifeq          70
         7: aload_0
         8: invokevirtual #131                // Method hasMin:()Z
        11: ifeq          70
        14: aload_0
        15: invokevirtual #181                // Method Max:()Lorg/sireum/Z;
        18: aload_0
        19: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
        22: invokeinterface #187,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        27: getstatic     #74                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        30: invokevirtual #190                // Method org/sireum/Z$MP$.one:()Lorg/sireum/Z;
        33: invokeinterface #193,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        38: astore_2
        39: getstatic     #198                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        42: aload_1
        43: invokevirtual #227                // Method org/sireum/Z$.randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
        46: aload_2
        47: invokeinterface #203,  2          // InterfaceMethod org/sireum/Z.$percent:(Lorg/sireum/Z;)Lorg/sireum/Z;
        52: astore_3
        53: aload_0
        54: aload_3
        55: aload_0
        56: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
        59: invokeinterface #193,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        64: invokevirtual #205                // Method apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        67: goto          178
        70: aload_0
        71: invokevirtual #151                // Method hasMax:()Z
        74: ifeq          129
        77: getstatic     #198                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        80: aload_1
        81: invokevirtual #227                // Method org/sireum/Z$.randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
        84: astore        4
        86: aload_0
        87: getstatic     #210                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        90: aload         4
        92: aload_0
        93: invokevirtual #181                // Method Max:()Lorg/sireum/Z;
        96: invokeinterface #214,  2          // InterfaceMethod org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
       101: invokevirtual #218                // Method org/sireum/B$.$4B:(Z)Z
       104: ifeq          121
       107: aload_0
       108: invokevirtual #181                // Method Max:()Lorg/sireum/Z;
       111: aload         4
       113: invokeinterface #187,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       118: goto          123
       121: aload         4
       123: invokevirtual #205                // Method apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
       126: goto          178
       129: getstatic     #198                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       132: aload_1
       133: invokevirtual #227                // Method org/sireum/Z$.randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
       136: astore        5
       138: aload_0
       139: getstatic     #210                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       142: aload         5
       144: aload_0
       145: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
       148: invokeinterface #221,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       153: invokevirtual #218                // Method org/sireum/B$.$4B:(Z)Z
       156: ifeq          173
       159: aload_0
       160: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
       163: aload         5
       165: invokeinterface #193,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       170: goto          175
       173: aload         5
       175: invokevirtual #205                // Method apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
       178: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 251 /* same_frame_extended */
          offset_delta = 70
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class org/sireum/N$, class org/sireum/Z, top, top, class org/sireum/Z ]
          stack = [ class org/sireum/N$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/N$, class org/sireum/Z, top, top, class org/sireum/Z ]
          stack = [ class org/sireum/N$, class org/sireum/Z ]
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class org/sireum/N$, class org/sireum/Z, top, top, top, class org/sireum/Z ]
          stack = [ class org/sireum/N$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/N$, class org/sireum/Z, top, top, top, class org/sireum/Z ]
          stack = [ class org/sireum/N$, class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/sireum/N$, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      28     2     d   Lorg/sireum/Z;
           53      14     3     n   Lorg/sireum/Z;
           86      40     4     n   Lorg/sireum/Z;
          138      40     5     n   Lorg/sireum/Z;
            0     179     0  this   Lorg/sireum/N$;
            0     179     1  seed   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      seed                           final

  private org.sireum.Z check(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #131                // Method hasMin:()Z
         4: ifeq          38
         7: getstatic     #234                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        10: getstatic     #210                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        13: aload_0
        14: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
        17: aload_1
        18: invokeinterface #237,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        23: invokevirtual #218                // Method org/sireum/B$.$4B:(Z)Z
        26: aload_1
        27: invokedynamic #257,  0            // InvokeDynamic #0:apply:(Lorg/sireum/Z;)Lscala/Function0;
        32: invokevirtual #261                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        35: goto          38
        38: aload_0
        39: invokevirtual #151                // Method hasMax:()Z
        42: ifeq          76
        45: getstatic     #234                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        48: getstatic     #210                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        51: aload_1
        52: aload_0
        53: invokevirtual #181                // Method Max:()Lorg/sireum/Z;
        56: invokeinterface #237,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        61: invokevirtual #218                // Method org/sireum/B$.$4B:(Z)Z
        64: aload_1
        65: invokedynamic #266,  0            // InvokeDynamic #1:apply:(Lorg/sireum/Z;)Lscala/Function0;
        70: invokevirtual #261                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        73: goto          76
        76: aload_1
        77: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 38 /* same */
        frame_type = 37 /* same */
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      78     0  this   Lorg/sireum/N$;
            0      78     1     v   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      v                              final

  public org.sireum.Z apply(int);
    descriptor: (I)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #107                // Field org/sireum/N$Int$.MODULE$:Lorg/sireum/N$Int$;
         3: iload_1
         4: invokevirtual #269                // Method org/sireum/N$Int$.apply:(I)Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/N$;
            0       8     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z apply(long);
    descriptor: (J)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #113                // Field org/sireum/N$Long$.MODULE$:Lorg/sireum/N$Long$;
         3: lload_1
         4: invokevirtual #273                // Method org/sireum/N$Long$.apply:(J)Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/N$;
            0       8     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z apply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #276                // Method check:(Lorg/sireum/Z;)Lorg/sireum/Z;
         5: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/N$;
            0       6     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Option<org.sireum.N> apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: getstatic     #284                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         3: new           #17                 // class org/sireum/N
         6: dup
         7: getstatic     #118                // Field org/sireum/N$$String$.MODULE$:Lorg/sireum/N$$String$;
        10: aload_1
        11: invokevirtual #285                // Method org/sireum/N$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        14: invokespecial #288                // Method org/sireum/N."<init>":(Lorg/sireum/Z;)V
        17: invokevirtual #291                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        20: goto          33
        23: pop
        24: getstatic     #296                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        27: invokevirtual #299                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        30: goto          33
        33: areturn
      Exception table:
         from    to  target type
             0    20    23   Class java/lang/Throwable
      StackMapTable: number_of_entries = 2
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/N$;
            0      34     1     s   Ljava/lang/String;
    Signature: #278                         // (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/N;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.Option<org.sireum.Z> unapply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #304                // class scala/Some
         3: dup
         4: aload_1
         5: invokespecial #307                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/N$;
            0       9     1     n   Lorg/sireum/Z;
    Signature: #302                         // (Lorg/sireum/Z;)Lscala/Option<Lorg/sireum/Z;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.N$N$Slang N$Slang(scala.StringContext);
    descriptor: (Lscala/StringContext;)Lorg/sireum/N$N$Slang;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #29                 // class org/sireum/N$N$Slang
         3: dup
         4: aload_1
         5: invokespecial #312                // Method org/sireum/N$N$Slang."<init>":(Lscala/StringContext;)V
         8: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/N$;
            0       9     1    sc   Lscala/StringContext;
    MethodParameters:
      Name                           Flags
      sc                             final

  public org.sireum.$ZCompanion<org.sireum.N> $NCompanion();
    descriptor: ()Lorg/sireum/$ZCompanion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #102                // Field $NCompanion:Lorg/sireum/$ZCompanion;
         3: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;
    Signature: #315                         // ()Lorg/sireum/$ZCompanion<Lorg/sireum/N;>;

  public final java.lang.String Name$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #173                // Method Name:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;
            0       5     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final org.sireum.Z Min$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;
            0       5     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final org.sireum.Z Max$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #181                // Method Max:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;
            0       5     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final org.sireum.Z Index$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #322                // Method Index:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;
            0       5     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isZeroIndex$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #325                // Method isZeroIndex:()Z
         4: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;
            0       5     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean isSigned$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #328                // Method isSigned:()Z
         4: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;
            0       5     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean hasMin$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #131                // Method hasMin:()Z
         4: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;
            0       5     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean hasMax$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #151                // Method hasMax:()Z
         4: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;
            0       5     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final org.sireum.Z make$extension(org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: invokevirtual #205                // Method apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
         5: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/N$;
            0       6     1 $this   Lorg/sireum/Z;
            0       6     2     v   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final
      v                              final

  public final org.sireum.Z$Boxer$Z$ boxer$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Z$Boxer$Z$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #337                // Field org/sireum/Z$Boxer$Z$.MODULE$:Lorg/sireum/Z$Boxer$Z$;
         3: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/N$;
            0       4     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int hashCode$extension(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #342                // Method java/lang/Object.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;
            0       5     1 $this   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean equals$extension(org.sireum.Z, java.lang.Object);
    descriptor: (Lorg/sireum/Z;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #17                 // class org/sireum/N
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          83
        28: aload_2
        29: ifnonnull     36
        32: aconst_null
        33: goto          43
        36: aload_2
        37: checkcast     #17                 // class org/sireum/N
        40: invokevirtual #348                // Method org/sireum/N.value:()Lorg/sireum/Z;
        43: astore        5
        45: aload_1
        46: aload         5
        48: astore        6
        50: dup
        51: ifnonnull     63
        54: pop
        55: aload         6
        57: ifnull        71
        60: goto          75
        63: aload         6
        65: invokevirtual #352                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        68: ifeq          75
        71: iconst_1
        72: goto          76
        75: iconst_0
        76: ifeq          83
        79: iconst_1
        80: goto          84
        83: iconst_0
        84: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/N$, class org/sireum/Z, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class org/sireum/N$, class org/sireum/Z, class java/lang/Object, int, class java/lang/Object, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      85     0  this   Lorg/sireum/N$;
            0      85     1 $this   Lorg/sireum/Z;
            0      85     2   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public java.lang.Object apply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #17                 // class org/sireum/N
         3: dup
         4: aload_0
         5: aload_1
         6: invokevirtual #205                // Method apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
         9: invokespecial #288                // Method org/sireum/N."<init>":(Lorg/sireum/Z;)V
        12: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/N$;
            0      13     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object randomSeed(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #17                 // class org/sireum/N
         3: dup
         4: aload_0
         5: aload_1
         6: invokevirtual #355                // Method randomSeed:(Lorg/sireum/Z;)Lorg/sireum/Z;
         9: invokespecial #288                // Method org/sireum/N."<init>":(Lorg/sireum/Z;)V
        12: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/N$;
            0      13     1  seed   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      seed                           final

  public java.lang.Object random();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #17                 // class org/sireum/N
         3: dup
         4: aload_0
         5: invokevirtual #356                // Method random:()Lorg/sireum/Z;
         8: invokespecial #288                // Method org/sireum/N."<init>":(Lorg/sireum/Z;)V
        11: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/N$;

  public java.lang.Object Index();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #17                 // class org/sireum/N
         3: dup
         4: aload_0
         5: invokevirtual #322                // Method Index:()Lorg/sireum/Z;
         8: invokespecial #288                // Method org/sireum/N."<init>":(Lorg/sireum/Z;)V
        11: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/N$;

  public java.lang.Object Max();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #17                 // class org/sireum/N
         3: dup
         4: aload_0
         5: invokevirtual #181                // Method Max:()Lorg/sireum/Z;
         8: invokespecial #288                // Method org/sireum/N."<init>":(Lorg/sireum/Z;)V
        11: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/N$;

  public java.lang.Object Min();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #17                 // class org/sireum/N
         3: dup
         4: aload_0
         5: invokevirtual #183                // Method Min:()Lorg/sireum/Z;
         8: invokespecial #288                // Method org/sireum/N."<init>":(Lorg/sireum/Z;)V
        11: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/N$;

  public org.sireum.$ZCompanionBigInt BigInt();
    descriptor: ()Lorg/sireum/$ZCompanionBigInt;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #359                // Method BigInt:()Lorg/sireum/N$BigInt$;
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;

  public org.sireum.$ZCompanionString $String();
    descriptor: ()Lorg/sireum/$ZCompanionString;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #362                // Method $String:()Lorg/sireum/N$$String$;
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;

  public org.sireum.$ZCompanionLong Long();
    descriptor: ()Lorg/sireum/$ZCompanionLong;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #365                // Method Long:()Lorg/sireum/N$Long$;
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;

  public org.sireum.$ZCompanionInt Int();
    descriptor: ()Lorg/sireum/$ZCompanionInt;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #368                // Method Int:()Lorg/sireum/N$Int$;
         4: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;

  public static final java.lang.String $anonfun$check$9(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #161                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #370                // int 23
         7: invokespecial #165                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #371                // Method java/lang/Object.toString:()Ljava/lang/String;
        14: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc_w         #373                // String  is less than N.Min (0)
        20: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0   v$5   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      v$5                            final

  public static final java.lang.String $anonfun$check$10(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #161                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #374                // int 26
         7: invokespecial #165                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #371                // Method java/lang/Object.toString:()Ljava/lang/String;
        14: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc_w         #376                // String  is greater than N.Max (0)
        20: invokevirtual #171                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0   v$5   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      v$5                            final

  private org.sireum.N$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #377                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/N$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #389,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #18= #15 of #17;          // $String$=class org/sireum/N$$String$ of class org/sireum/N
  public static #21= #20 of #17;          // BigInt$=class org/sireum/N$BigInt$ of class org/sireum/N
  public static #24= #23 of #17;          // Int$=class org/sireum/N$Int$ of class org/sireum/N
  public static #27= #26 of #17;          // Long$=class org/sireum/N$Long$ of class org/sireum/N
  public static #30= #29 of #17;          // N$Slang=class org/sireum/N$N$Slang of class org/sireum/N
  public static #35= #32 of #34;          // Boxer$=class org/sireum/Z$Boxer$ of class org/sireum/Z
  public static #38= #37 of #32;          // Z$=class org/sireum/Z$Boxer$Z$ of class org/sireum/Z$Boxer$
  public static #41= #40 of #34;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
Signature: #3                           // Ljava/lang/Object;Lorg/sireum/$ZCompanion<Lorg/sireum/N;>;
SourceFile: "BitsRangeTypes.scala"
BootstrapMethods:
  0: #254 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #239 ()Ljava/lang/Object;
      #244 REF_invokeStatic org/sireum/N$.$anonfun$check$9:(Lorg/sireum/Z;)Ljava/lang/String;
      #245 ()Ljava/lang/String;
      #246 5
      #247 1
      #245 ()Ljava/lang/String;
  1: #254 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #239 ()Ljava/lang/Object;
      #265 REF_invokeStatic org/sireum/N$.$anonfun$check$10:(Lorg/sireum/Z;)Ljava/lang/String;
      #245 ()Ljava/lang/String;
      #246 5
      #247 1
      #245 ()Ljava/lang/String;
  2: #386 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #265 REF_invokeStatic org/sireum/N$.$anonfun$check$10:(Lorg/sireum/Z;)Ljava/lang/String;
      #244 REF_invokeStatic org/sireum/N$.$anonfun$check$9:(Lorg/sireum/Z;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x103 (unknown attribute)
   01 01 00 33 00 38 01 3A 01 00 72 01 68 01 00 72
   00 73 01 01 06 00 F1 01 00 F0 00 F1 01 00 3F 00
   3E 01 00 77 01 65 01 00 77 00 78 01 00 9E 00 9F
   01 00 31 00 EE 01 00 31 00 7E 01 01 40 00 B9 05
   00 67 01 6E 01 00 67 00 68 01 00 6D 01 6B 01 00
   6D 00 6E 01 00 2E 00 EE 01 00 2E 00 7E 01 01 3F
   00 B9 05 00 95 00 7E 01 00 2C 00 EE 01 00 2C 00
   7E 01 01 3E 00 B9 05 00 7D 00 7E 01 00 1E 01 34
   01 00 2F 00 7C 01 01 3C 00 F1 05 00 52 01 0B 01
   00 52 01 0F 01 00 52 01 15 01 00 52 01 62 01 00
   52 00 B9 01 01 4D 01 4E 01 00 E4 00 B9 01 01 57
   01 58 01 00 37 00 81 01 01 4A 00 D4 05 00 36 00
   81 01 01 49 00 D4 05 01 52 01 53 01 00 35 00 81
   01 00 34 00 81 01 01 46 00 D4 05 00 32 00 81 01
   01 43 00 D4 05 01 4B 01 4C 01 00 B3 00 EE 01 00
   B3 00 7E 01 00 E0 01 62 01 00 E0 00 B9 01 01 2C
   01 2D 01
  Scala: length = 0x0 (unknown attribute)

