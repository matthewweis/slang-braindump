Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/MatchError.class
  Last modified May 29, 2022; size 2481 bytes
  SHA-256 checksum 48e5f18cc72d03a88054c07fac729b948ac0129fcf3de591c028cae2ecdb9e40
  Compiled from "MatchError.scala"
public final class scala.MatchError extends java.lang.RuntimeException
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/MatchError
  super_class: #4                         // java/lang/RuntimeException
  interfaces: 0, fields: 3, methods: 7, attributes: 4
Constant pool:
   #1 = Utf8               scala/MatchError
   #2 = Class              #1             // scala/MatchError
   #3 = Utf8               java/lang/RuntimeException
   #4 = Class              #3             // java/lang/RuntimeException
   #5 = Utf8               MatchError.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005m3AAB\u0004\u0003\u0015!A1\u0003\u0001B\u0001B\u0003%A\u0003C\u0003\u001c\u0001\u0011\u0005A\u0004\u0003\u0005 \u0001!\u0015\r\u0015\"\u0003!\u0011\u0015I\u0003\u0001\"\u0003+\u0011\u0015I\u0006\u0001\"\u0011[\u0005)i\u0015\r^2i\u000bJ\u0014xN\u001d\u0006\u0002\u0011\u0005)1oY1mC\u000e\u00011C\u0001\u0001\f!\ta\u0001C\u0004\u0002\u000e\u001d5\tq!\u0003\u0002\u0010\u000f\u00059\u0001/Y2lC\u001e,\u0017BA\t\u0013\u0005A\u0011VO\u001c;j[\u0016,\u0005pY3qi&|gN\u0003\u0002\u0010\u000f\u0005\u0019qN\u00196\u0011\u00055)\u0012B\u0001\f\b\u0005\r\te.\u001f\u0015\u0003\u0003a\u0001\"!D\r\n\u0005i9!!\u0003;sC:\u001c\u0018.\u001a8u\u0003\u0019a\u0014N\\5u}Q\u0011QD\b\t\u0003\u001b\u0001AQa\u0005\u0002A\u0002Q\t\u0011b\u001c2k\'R\u0014\u0018N\\4\u0016\u0003\u0005\u0002\"AI\u0014\u000e\u0003\rR!\u0001J\u0013\u0002\t1\fgn\u001a\u0006\u0002M\u0005!!.\u0019<b\u0013\tA3E\u0001\u0004TiJLgnZ\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0002WA\u0011!\u0005L\u0005\u0003[\r\u0012aa\u00142kK\u000e$\bf\u0001\u00030qA\u0019Q\u0002\r\u001a\n\u0005E:!A\u0002;ie><8\u000f\u0005\u00024m5\tAG\u0003\u00026K\u0005\u0011\u0011n\\\u0005\u0003oQ\u0012Qc\u00142kK\u000e$8\u000b\u001e:fC6,\u0005pY3qi&|g.\r\u0003\u001fs\rC\u0006C\u0001\u001eB\u001d\tYt\b\u0005\u0002=\u000f5\tQH\u0003\u0002?\u0013\u00051AH]8pizJ!\u0001Q\u0004\u0002\rA\u0013X\rZ3g\u0013\tA#I\u0003\u0002A\u000fE*1\u0005\u0012%T\u0013V\u0011QIR\u000b\u0002s\u0011)q)\u0003b\u0001\u0019\n\tA+\u0003\u0002J\u0015\u0006YB\u0005\\3tg&t\u0017\u000e\u001e\u0013he\u0016\fG/\u001a:%I\u00164\u0017-\u001e7uIER!aS\u0004\u0002\rQD\'o\\<t#\ti\u0005\u000b\u0005\u0002\u000e\u001d&\u0011qj\u0002\u0002\b\u001d>$\b.\u001b8h!\ta\u0011+\u0003\u0002S%\tIA\u000b\u001b:po\u0006\u0014G.Z\u0019\u0006GQ+fk\u0013\b\u0003\u001bUK!aS\u00042\t\tjqa\u0016\u0002\u0006g\u000e\fG.Y\u0019\u0003MI\n!bZ3u\u001b\u0016\u001c8/Y4f)\u0005\t\u0003
   #9 = Utf8               objString
  #10 = Utf8               Ljava/lang/String;
  #11 = Utf8               obj
  #12 = Utf8               Ljava/lang/Object;
  #13 = Utf8               bitmap$0
  #14 = Utf8               Z
  #15 = Utf8               objString$lzycompute
  #16 = Utf8               ()Ljava/lang/String;
  #17 = NameAndType        #13:#14        // bitmap$0:Z
  #18 = Fieldref           #2.#17         // scala/MatchError.bitmap$0:Z
  #19 = NameAndType        #11:#12        // obj:Ljava/lang/Object;
  #20 = Fieldref           #2.#19         // scala/MatchError.obj:Ljava/lang/Object;
  #21 = Utf8               null
  #22 = String             #21            // null
  #23 = Utf8               liftedTree1$1
  #24 = NameAndType        #23:#16        // liftedTree1$1:()Ljava/lang/String;
  #25 = Methodref          #2.#24         // scala/MatchError.liftedTree1$1:()Ljava/lang/String;
  #26 = NameAndType        #9:#10         // objString:Ljava/lang/String;
  #27 = Fieldref           #2.#26         // scala/MatchError.objString:Ljava/lang/String;
  #28 = Utf8               this
  #29 = Utf8               Lscala/MatchError;
  #30 = Utf8               java/lang/String
  #31 = Class              #30            // java/lang/String
  #32 = Utf8               java/lang/Throwable
  #33 = Class              #32            // java/lang/Throwable
  #34 = NameAndType        #15:#16        // objString$lzycompute:()Ljava/lang/String;
  #35 = Methodref          #2.#34         // scala/MatchError.objString$lzycompute:()Ljava/lang/String;
  #36 = Utf8               writeReplace
  #37 = Utf8               ()Ljava/lang/Object;
  #38 = Utf8               java/io/ObjectStreamException
  #39 = Class              #38            // java/io/ObjectStreamException
  #40 = NameAndType        #9:#16         // objString:()Ljava/lang/String;
  #41 = Methodref          #2.#40         // scala/MatchError.objString:()Ljava/lang/String;
  #42 = Utf8               getMessage
  #43 = Utf8               ofClass$1
  #44 = Utf8               java/lang/StringBuilder
  #45 = Class              #44            // java/lang/StringBuilder
  #46 = Integer            9
  #47 = Utf8               <init>
  #48 = Utf8               (I)V
  #49 = NameAndType        #47:#48        // "<init>":(I)V
  #50 = Methodref          #45.#49        // java/lang/StringBuilder."<init>":(I)V
  #51 = Utf8               of class
  #52 = String             #51            // of class
  #53 = Utf8               append
  #54 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #55 = NameAndType        #53:#54        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #56 = Methodref          #45.#55        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #57 = Utf8               java/lang/Object
  #58 = Class              #57            // java/lang/Object
  #59 = Utf8               getClass
  #60 = Utf8               ()Ljava/lang/Class;
  #61 = NameAndType        #59:#60        // getClass:()Ljava/lang/Class;
  #62 = Methodref          #58.#61        // java/lang/Object.getClass:()Ljava/lang/Class;
  #63 = Utf8               java/lang/Class
  #64 = Class              #63            // java/lang/Class
  #65 = Utf8               getName
  #66 = NameAndType        #65:#16        // getName:()Ljava/lang/String;
  #67 = Methodref          #64.#66        // java/lang/Class.getName:()Ljava/lang/String;
  #68 = Utf8               toString
  #69 = NameAndType        #68:#16        // toString:()Ljava/lang/String;
  #70 = Methodref          #45.#69        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #71 = Integer            3
  #72 = Methodref          #58.#69        // java/lang/Object.toString:()Ljava/lang/String;
  #73 = Utf8                (
  #74 = String             #73            //  (
  #75 = NameAndType        #43:#16        // ofClass$1:()Ljava/lang/String;
  #76 = Methodref          #2.#75         // scala/MatchError.ofClass$1:()Ljava/lang/String;
  #77 = Utf8               )
  #78 = String             #77            // )
  #79 = Integer            12
  #80 = Utf8               an instance
  #81 = String             #80            // an instance
  #82 = Utf8               (Ljava/lang/Object;)V
  #83 = Utf8               ()V
  #84 = NameAndType        #47:#83        // "<init>":()V
  #85 = Methodref          #4.#84         // java/lang/RuntimeException."<init>":()V
  #86 = Utf8               Code
  #87 = Utf8               StackMapTable
  #88 = Utf8               LineNumberTable
  #89 = Utf8               LocalVariableTable
  #90 = Utf8               Exceptions
  #91 = Utf8               MethodParameters
  #92 = Utf8               SourceFile
  #93 = Utf8               RuntimeVisibleAnnotations
  #94 = Utf8               ScalaInlineInfo
  #95 = Utf8               ScalaSig
{
  private java.lang.String objString;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private final transient java.lang.Object obj;
    descriptor: Ljava/lang/Object;
    flags: (0x0092) ACC_PRIVATE, ACC_FINAL, ACC_TRANSIENT

  private volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private java.lang.String objString$lzycompute();
    descriptor: ()Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: monitorenter
         2: aload_0
         3: getfield      #18                 // Field bitmap$0:Z
         6: ifne          34
         9: aload_0
        10: aload_0
        11: getfield      #20                 // Field obj:Ljava/lang/Object;
        14: ifnonnull     22
        17: ldc           #22                 // String null
        19: goto          26
        22: aload_0
        23: invokespecial #25                 // Method liftedTree1$1:()Ljava/lang/String;
        26: putfield      #27                 // Field objString:Ljava/lang/String;
        29: aload_0
        30: iconst_1
        31: putfield      #18                 // Field bitmap$0:Z
        34: aload_0
        35: monitorexit
        36: goto          42
        39: aload_0
        40: monitorexit
        41: athrow
        42: aload_0
        43: getfield      #27                 // Field objString:Ljava/lang/String;
        46: areturn
      Exception table:
         from    to  target type
             2    34    39   any
      StackMapTable: number_of_entries = 5
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class scala/MatchError ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/MatchError ]
          stack = [ class scala/MatchError, class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 23: 0
        line 25: 10
        line 26: 22
        line 23: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lscala/MatchError;

  private java.lang.String objString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #18                 // Field bitmap$0:Z
         4: ifne          12
         7: aload_0
         8: invokespecial #35                 // Method objString$lzycompute:()Ljava/lang/String;
        11: areturn
        12: aload_0
        13: getfield      #27                 // Field objString:Ljava/lang/String;
        16: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/MatchError;

  private java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #41                 // Method objString:()Ljava/lang/String;
         4: pop
         5: aload_0
         6: areturn
      LineNumberTable:
        line 35: 0
        line 36: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/MatchError;
    Exceptions:
      throws java.io.ObjectStreamException

  public java.lang.String getMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #41                 // Method objString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/MatchError;

  private final java.lang.String ofClass$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=1, args_size=1
         0: new           #45                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #46                 // int 9
         6: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #52                 // String of class
        11: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_0
        15: getfield      #20                 // Field obj:Ljava/lang/Object;
        18: invokevirtual #62                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        21: invokevirtual #67                 // Method java/lang/Class.getName:()Ljava/lang/String;
        24: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        30: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/MatchError;

  private final java.lang.String liftedTree1$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #45                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #71                 // int 3
         6: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(I)V
         9: aload_0
        10: getfield      #20                 // Field obj:Ljava/lang/Object;
        13: invokevirtual #72                 // Method java/lang/Object.toString:()Ljava/lang/String;
        16: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: ldc           #74                 // String  (
        21: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: aload_0
        25: invokespecial #76                 // Method ofClass$1:()Ljava/lang/String;
        28: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: ldc           #78                 // String )
        33: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        39: areturn
        40: pop
        41: new           #45                 // class java/lang/StringBuilder
        44: dup
        45: ldc           #79                 // int 12
        47: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(I)V
        50: ldc           #81                 // String an instance
        52: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        55: aload_0
        56: invokespecial #76                 // Method ofClass$1:()Ljava/lang/String;
        59: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        65: areturn
      Exception table:
         from    to  target type
             0    39    40   Class java/lang/Throwable
      StackMapTable: number_of_entries = 1
        frame_type = 104 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
      LineNumberTable:
        line 27: 0
        line 29: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lscala/MatchError;

  public scala.MatchError(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #20                 // Field obj:Ljava/lang/Object;
         5: aload_0
         6: invokespecial #85                 // Method java/lang/RuntimeException."<init>":()V
         9: return
      LineNumberTable:
        line 19: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/MatchError;
            0      10     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final
}
SourceFile: "MatchError.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005m3AAB\u0004\u0003\u0015!A1\u0003\u0001B\u0001B\u0003%A\u0003C\u0003\u001c\u0001\u0011\u0005A\u0004\u0003\u0005 \u0001!\u0015\r\u0015\"\u0003!\u0011\u0015I\u0003\u0001\"\u0003+\u0011\u0015I\u0006\u0001\"\u0011[\u0005)i\u0015\r^2i\u000bJ\u0014xN\u001d\u0006\u0002\u0011\u0005)1oY1mC\u000e\u00011C\u0001\u0001\f!\ta\u0001C\u0004\u0002\u000e\u001d5\tq!\u0003\u0002\u0010\u000f\u00059\u0001/Y2lC\u001e,\u0017BA\t\u0013\u0005A\u0011VO\u001c;j[\u0016,\u0005pY3qi&|gN\u0003\u0002\u0010\u000f\u0005\u0019qN\u00196\u0011\u00055)\u0012B\u0001\f\b\u0005\r\te.\u001f\u0015\u0003\u0003a\u0001\"!D\r\n\u0005i9!!\u0003;sC:\u001c\u0018.\u001a8u\u0003\u0019a\u0014N\\5u}Q\u0011QD\b\t\u0003\u001b\u0001AQa\u0005\u0002A\u0002Q\t\u0011b\u001c2k\'R\u0014\u0018N\\4\u0016\u0003\u0005\u0002\"AI\u0014\u000e\u0003\rR!\u0001J\u0013\u0002\t1\fgn\u001a\u0006\u0002M\u0005!!.\u0019<b\u0013\tA3E\u0001\u0004TiJLgnZ\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0002WA\u0011!\u0005L\u0005\u0003[\r\u0012aa\u00142kK\u000e$\bf\u0001\u00030qA\u0019Q\u0002\r\u001a\n\u0005E:!A\u0002;ie><8\u000f\u0005\u00024m5\tAG\u0003\u00026K\u0005\u0011\u0011n\\\u0005\u0003oQ\u0012Qc\u00142kK\u000e$8\u000b\u001e:fC6,\u0005pY3qi&|g.\r\u0003\u001fs\rC\u0006C\u0001\u001eB\u001d\tYt\b\u0005\u0002=\u000f5\tQH\u0003\u0002?\u0013\u00051AH]8pizJ!\u0001Q\u0004\u0002\rA\u0013X\rZ3g\u0013\tA#I\u0003\u0002A\u000fE*1\u0005\u0012%T\u0013V\u0011QIR\u000b\u0002s\u0011)q)\u0003b\u0001\u0019\n\tA+\u0003\u0002J\u0015\u0006YB\u0005\\3tg&t\u0017\u000e\u001e\u0013he\u0016\fG/\u001a:%I\u00164\u0017-\u001e7uIER!aS\u0004\u0002\rQD\'o\\<t#\ti\u0005\u000b\u0005\u0002\u000e\u001d&\u0011qj\u0002\u0002\b\u001d>$\b.\u001b8h!\ta\u0011+\u0003\u0002S%\tIA\u000b\u001b:po\u0006\u0014G.Z\u0019\u0006GQ+fk\u0013\b\u0003\u001bUK!aS\u00042\t\tjqa\u0016\u0002\u0006g\u000e\fG.Y\u0019\u0003MI\n!bZ3u\u001b\u0016\u001c8/Y4f)\u0005\t\u0003"
    )
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 01 00 07 00 2F 00 52 01 00 2A 00 10 01 00 17
   00 10 01 00 09 00 10 01 00 0F 00 10 01 00 2B 00
   10 01 00 24 00 25 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
