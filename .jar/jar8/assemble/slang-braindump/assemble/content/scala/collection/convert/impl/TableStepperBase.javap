Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/TableStepperBase.class
  Last modified May 29, 2022; size 4340 bytes
  SHA-256 checksum 80621c7d2c4a594f664ba923cd4aa57b61308f7ee26be68b235145206b93138d
  Compiled from "TableStepper.scala"
public abstract class scala.collection.convert.impl.TableStepperBase<A extends java.lang.Object, I extends java.lang.Object, Sub extends java.lang.Object, Semi extends Sub> extends java.lang.Object implements scala.collection.Stepper$EfficientSplit
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/collection/convert/impl/TableStepperBase
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 5, methods: 15, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/TableStepperBase
    #2 = Class              #1            // scala/collection/convert/impl/TableStepperBase
    #3 = Utf8               <A:Ljava/lang/Object;I:Ljava/lang/Object;Sub:Ljava/lang/Object;Semi:TSub;>Ljava/lang/Object;Lscala/collection/Stepper$EfficientSplit;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/Stepper$EfficientSplit
    #7 = Class              #6            // scala/collection/Stepper$EfficientSplit
    #8 = Utf8               TableStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u0005UbAB\u000b\u0017\u0003\u0003Qb\u0004\u0003\u00054\u0001\t\u0005\r\u0011\"\u00055\u0011!A\u0004A!a\u0001\n#I\u0004\u0002C \u0001\u0005\u0003\u0005\u000b\u0015B\u001b\t\u0011\u0001\u0003!Q1A\u0005\u0012\u0005C\u0001\"\u0014\u0001\u0003\u0002\u0003\u0006IA\u0011\u0005\t\u001d\u0002\u0011\t\u0019!C\ti!Aq\n\u0001BA\u0002\u0013E\u0001\u000b\u0003\u0005S\u0001\t\u0005\t\u0015)\u00036\u0011!\u0019\u0006A!b\u0001\n#!\u0004\u0002\u0003+\u0001\u0005\u0003\u0005\u000b\u0011B\u001b\t\u000bU\u0003A\u0011\u0001,\t\u000fi\u0004\u0001\u0019!C\tw\"9A\u0010\u0001a\u0001\n#i\bBB@\u0001A\u0003&Q\tC\u0004\u0002\u0002\u0001!)\"a\u0001\t\u000f\u0005e\u0001A\"\u0005\u0002\u001c!1\u0011\u0011\u0005\u0001\u0005\u0002QBq!a\t\u0001\t\u0003\t)\u0003C\u0004\u0002.\u0001!\t!a\f\t\u000f\u0005E\u0002\u0001\"\u0001\u00024\t\u0001B+\u00192mKN#X\r\u001d9fe\n\u000b7/\u001a\u0006\u0003/a\tA![7qY*\u0011\u0011DG\u0001\bG>tg/\u001a:u\u0015\tYB$\u0001\u0006d_2dWm\u0019;j_:T\u0011!H\u0001\u0006g\u000e\fG.Y\u000b\u0006?i;E\r[\n\u0004\u0001\u0001\"\u0003CA\u0011#\u001b\u0005a\u0012BA\u0012\u001d\u0005\u0019\te.\u001f*fMB\u0011Q\u0005\r\b\u0003M9r!aJ\u0017\u000f\u0005!bS\"A\u0015\u000b\u0005)Z\u0013A\u0002\u001fs_>$hh\u0001\u0001\n\u0003uI!a\u0007\u000f\n\u0005=R\u0012aB*uKB\u0004XM]\u0005\u0003cI\u0012a\"\u00124gS\u000eLWM\u001c;Ta2LGO\u0003\u000205\u0005IQ.\u0019=MK:<G\u000f[\u000b\u0002kA\u0011\u0011EN\u0005\u0003oq\u00111!\u00138u\u00035i\u0017\r\u001f\'f]\u001e$\bn\u0018\u0013fcR\u0011!(\u0010\t\u0003CmJ!\u0001\u0010\u000f\u0003\tUs\u0017\u000e\u001e\u0005\b}\t\t\t\u00111\u00016\u0003\rAH%M\u0001\u000b[\u0006DH*\u001a8hi\"\u0004\u0013!\u0002;bE2,W#\u0001\"\u0011\u0007\u0005\u001aU)\u0003\u0002E9\t)\u0011I\u001d:bsB\u0011ai\u0012\u0007\u0001\t\u0015A\u0005A1\u0001J\u0005\u0005I\u0015C\u0001&!!\t\t3*\u0003\u0002M9\t!a*\u001e7m\u0003\u0019!\u0018M\u00197fA\u0005\u0011\u0011\u000eM\u0001\u0007SBzF%Z9\u0015\u0005i\n\u0006b\u0002 \b\u0003\u0003\u0005\r!N\u0001\u0004SB\u0002\u0013AA5O\u0003\rIg\nI\u0001\u0007y%t\u0017\u000e\u001e \u0015\u000b]3x\u000f_=\u0011\ra\u0003\u0011,R2h\u001b\u00051\u0002C\u0001$[\t\u0015Y\u0006A1\u0001]\u0005\u0005\t\u0015CA/a!\t\tc,\u0003\u0002`9\t9aj\u001c;iS:<\u0007CA\u0011b\u0013\t\u0011GDA\u0002B]f\u0004\"A\u00123\u0005\u000b\u0015\u0004!\u0019\u00014\u0003\u0007M+(-\u0005\u0002KAB\u0011a\t\u001b\u0003\u0006S\u0002\u0011\rA\u001b\u0002\u0005\'\u0016l\u0017.\u0005\u0002^WJ\u0019An\u00198\u0007\t5\u0004\u0001a\u001b\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\u0019\u0004_F$\bC\u0002-\u00013\u0016\u00038\u000f\u0005\u0002Gc\u0012I!\u000f[A\u0001\u0002\u0003\u0015\t\u0001\u0018\u0002\u0004?\u0012\n\u0004C\u0001$u\t%)\b.!A\u0001\u0002\u000b\u0005ALA\u0002`IIBQaM\u0006A\u0002UBQ\u0001Q\u0006A\u0002\tCQAT\u0006A\u0002UBQaU\u0006A\u0002U\n\u0011\"\\=DkJ\u0014XM\u001c;\u0016\u0003\u0015\u000bQ\"\\=DkJ\u0014XM\u001c;`I\u0015\fHC\u0001\u001e\u007f\u0011\u001dqT\"!AA\u0002\u0015\u000b!\"\\=DkJ\u0014XM\u001c;!\u0003=1\u0017N\u001c3OKb$8)\u001e:sK:$HCAA\u0003!\r\t\u0013qA\u0005\u0004\u0003\u0013a\"a\u0002\"p_2,\u0017M\u001c\u0015\u0004\u001f\u00055\u0001\u0003BA\b\u0003+i!!!\u0005\u000b\u0007\u0005MA$\u0001\u0006b]:|G/\u0019;j_:LA!a\u0006\u0002\u0012\t9A/Y5me\u0016\u001c\u0017!C:f[&\u001cGn\u001c8f)\r9\u0017Q\u0004\u0005\u0007\u0003?\u0001\u0002\u0019A\u001b\u0002\t!\fGNZ\u0001\u0010G\"\f\'/Y2uKJL7\u000f^5dg\u0006aQm\u001d;j[\u0006$XmU5{KV\u0011\u0011q\u0005\t\u0004C\u0005%\u0012bAA\u00169\t!Aj\u001c8h\u0003\u001dA\u0017m]*uKB,\"!!\u0002\u0002\u0011Q\u0014\u0018p\u00159mSR$\u0012a\u0019
   #12 = Utf8               scala/collection/Stepper
   #13 = Class              #12           // scala/collection/Stepper
   #14 = Utf8               EfficientSplit
   #15 = Utf8               maxLength
   #16 = Utf8               I
   #17 = Utf8               table
   #18 = Utf8               [Ljava/lang/Object;
   #19 = Utf8               [TI;
   #20 = Utf8               i0
   #21 = Utf8               iN
   #22 = Utf8               myCurrent
   #23 = Utf8               Ljava/lang/Object;
   #24 = Utf8               TI;
   #25 = Utf8               ()I
   #26 = NameAndType        #15:#16       // maxLength:I
   #27 = Fieldref           #2.#26        // scala/collection/convert/impl/TableStepperBase.maxLength:I
   #28 = Utf8               this
   #29 = Utf8               Lscala/collection/convert/impl/TableStepperBase;
   #30 = Utf8               maxLength_$eq
   #31 = Utf8               (I)V
   #32 = Utf8               x$1
   #33 = Utf8               ()[Ljava/lang/Object;
   #34 = Utf8               ()[TI;
   #35 = NameAndType        #17:#18       // table:[Ljava/lang/Object;
   #36 = Fieldref           #2.#35        // scala/collection/convert/impl/TableStepperBase.table:[Ljava/lang/Object;
   #37 = NameAndType        #20:#16       // i0:I
   #38 = Fieldref           #2.#37        // scala/collection/convert/impl/TableStepperBase.i0:I
   #39 = Utf8               i0_$eq
   #40 = NameAndType        #21:#16       // iN:I
   #41 = Fieldref           #2.#40        // scala/collection/convert/impl/TableStepperBase.iN:I
   #42 = Utf8               ()Ljava/lang/Object;
   #43 = Utf8               ()TI;
   #44 = NameAndType        #22:#23       // myCurrent:Ljava/lang/Object;
   #45 = Fieldref           #2.#44        // scala/collection/convert/impl/TableStepperBase.myCurrent:Ljava/lang/Object;
   #46 = Utf8               myCurrent_$eq
   #47 = Utf8               (Ljava/lang/Object;)V
   #48 = Utf8               (TI;)V
   #49 = Utf8               findNextCurrent
   #50 = Utf8               ()Z
   #51 = NameAndType        #20:#25       // i0:()I
   #52 = Methodref          #2.#51        // scala/collection/convert/impl/TableStepperBase.i0:()I
   #53 = NameAndType        #21:#25       // iN:()I
   #54 = Methodref          #2.#53        // scala/collection/convert/impl/TableStepperBase.iN:()I
   #55 = NameAndType        #39:#31       // i0_$eq:(I)V
   #56 = Methodref          #2.#55        // scala/collection/convert/impl/TableStepperBase.i0_$eq:(I)V
   #57 = NameAndType        #17:#33       // table:()[Ljava/lang/Object;
   #58 = Methodref          #2.#57        // scala/collection/convert/impl/TableStepperBase.table:()[Ljava/lang/Object;
   #59 = NameAndType        #46:#47       // myCurrent_$eq:(Ljava/lang/Object;)V
   #60 = Methodref          #2.#59        // scala/collection/convert/impl/TableStepperBase.myCurrent_$eq:(Ljava/lang/Object;)V
   #61 = NameAndType        #22:#42       // myCurrent:()Ljava/lang/Object;
   #62 = Methodref          #2.#61        // scala/collection/convert/impl/TableStepperBase.myCurrent:()Ljava/lang/Object;
   #63 = Utf8               semiclone
   #64 = Utf8               (I)Lscala/collection/convert/impl/TableStepperBase;
   #65 = Utf8               (I)TSemi;
   #66 = Utf8               half
   #67 = Utf8               characteristics
   #68 = Utf8               estimateSize
   #69 = Utf8               ()J
   #70 = Utf8               hasStep
   #71 = NameAndType        #70:#50       // hasStep:()Z
   #72 = Methodref          #2.#71        // scala/collection/convert/impl/TableStepperBase.hasStep:()Z
   #73 = NameAndType        #30:#31       // maxLength_$eq:(I)V
   #74 = Methodref          #2.#73        // scala/collection/convert/impl/TableStepperBase.maxLength_$eq:(I)V
   #75 = NameAndType        #15:#25       // maxLength:()I
   #76 = Methodref          #2.#75        // scala/collection/convert/impl/TableStepperBase.maxLength:()I
   #77 = NameAndType        #49:#50       // findNextCurrent:()Z
   #78 = Methodref          #2.#77        // scala/collection/convert/impl/TableStepperBase.findNextCurrent:()Z
   #79 = Utf8               trySplit
   #80 = Utf8               ()TSub;
   #81 = NameAndType        #63:#64       // semiclone:(I)Lscala/collection/convert/impl/TableStepperBase;
   #82 = Methodref          #2.#81        // scala/collection/convert/impl/TableStepperBase.semiclone:(I)Lscala/collection/convert/impl/TableStepperBase;
   #83 = Utf8               i
   #84 = Utf8               ans
   #85 = Utf8               inLeft
   #86 = Utf8               inRight
   #87 = Utf8               <init>
   #88 = Utf8               (I[Ljava/lang/Object;II)V
   #89 = Utf8               (I[TI;II)V
   #90 = Utf8               ()V
   #91 = NameAndType        #87:#90       // "<init>":()V
   #92 = Methodref          #5.#91        // java/lang/Object."<init>":()V
   #93 = Class              #18           // "[Ljava/lang/Object;"
   #94 = Utf8               Signature
   #95 = Utf8               Code
   #96 = Utf8               LineNumberTable
   #97 = Utf8               LocalVariableTable
   #98 = Utf8               MethodParameters
   #99 = Utf8               StackMapTable
  #100 = Utf8               InnerClasses
  #101 = Utf8               SourceFile
  #102 = Utf8               RuntimeVisibleAnnotations
  #103 = Utf8               ScalaInlineInfo
  #104 = Utf8               ScalaSig
{
  private int maxLength;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private final I[] table;
    descriptor: [Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #19                          // [TI;

  private int i0;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private final int iN;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private I myCurrent;
    descriptor: Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Signature: #24                          // TI;

  public int maxLength();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #27                 // Field maxLength:I
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/TableStepperBase;

  public void maxLength_$eq(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #27                 // Field maxLength:I
         5: return
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/TableStepperBase;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public I[] table();
    descriptor: ()[Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #36                 // Field table:[Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/TableStepperBase;
    Signature: #34                          // ()[TI;

  public int i0();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #38                 // Field i0:I
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/TableStepperBase;

  public void i0_$eq(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #38                 // Field i0:I
         5: return
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/TableStepperBase;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int iN();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #41                 // Field iN:I
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/TableStepperBase;

  public I myCurrent();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #45                 // Field myCurrent:Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/TableStepperBase;
    Signature: #43                          // ()TI;

  public void myCurrent_$eq(I);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #45                 // Field myCurrent:Ljava/lang/Object;
         5: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/TableStepperBase;
            0       6     1   x$1   Ljava/lang/Object;
    Signature: #48                          // (TI;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public final boolean findNextCurrent();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #52                 // Method i0:()I
         4: aload_0
         5: invokevirtual #54                 // Method iN:()I
         8: if_icmpge     56
        11: aload_0
        12: aload_0
        13: invokevirtual #52                 // Method i0:()I
        16: iconst_1
        17: iadd
        18: invokevirtual #56                 // Method i0_$eq:(I)V
        21: aload_0
        22: invokevirtual #52                 // Method i0:()I
        25: aload_0
        26: invokevirtual #54                 // Method iN:()I
        29: if_icmplt     34
        32: iconst_0
        33: ireturn
        34: aload_0
        35: aload_0
        36: invokevirtual #58                 // Method table:()[Ljava/lang/Object;
        39: aload_0
        40: invokevirtual #52                 // Method i0:()I
        43: aaload
        44: invokevirtual #60                 // Method myCurrent_$eq:(Ljava/lang/Object;)V
        47: aload_0
        48: invokevirtual #62                 // Method myCurrent:()Ljava/lang/Object;
        51: ifnull        0
        54: iconst_1
        55: ireturn
        56: iconst_0
        57: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 33 /* same */
        frame_type = 21 /* same */
      LineNumberTable:
        line 29: 0
        line 30: 11
        line 31: 21
        line 33: 34
        line 34: 47
        line 35: 54
        line 38: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lscala/collection/convert/impl/TableStepperBase;

  public abstract Semi semiclone(int);
    descriptor: (I)Lscala/collection/convert/impl/TableStepperBase;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #65                          // (I)TSemi;
    MethodParameters:
      Name                           Flags
      half                           final

  public int characteristics();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/convert/impl/TableStepperBase;

  public long estimateSize();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #72                 // Method hasStep:()Z
         4: ifne          14
         7: aload_0
         8: iconst_0
         9: invokevirtual #74                 // Method maxLength_$eq:(I)V
        12: lconst_0
        13: lreturn
        14: aload_0
        15: invokevirtual #76                 // Method maxLength:()I
        18: i2l
        19: lreturn
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/collection/convert/impl/TableStepperBase;

  public boolean hasStep();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #62                 // Method myCurrent:()Ljava/lang/Object;
         4: ifnonnull     14
         7: aload_0
         8: invokevirtual #78                 // Method findNextCurrent:()Z
        11: ifeq          16
        14: iconst_1
        15: ireturn
        16: iconst_0
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/convert/impl/TableStepperBase;

  public Sub trySplit();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=1
         0: aload_0
         1: invokevirtual #54                 // Method iN:()I
         4: iconst_1
         5: isub
         6: aload_0
         7: invokevirtual #52                 // Method i0:()I
        10: if_icmple     192
        13: aload_0
        14: invokevirtual #76                 // Method maxLength:()I
        17: iconst_0
        18: if_icmple     192
        21: aload_0
        22: invokevirtual #52                 // Method i0:()I
        25: aload_0
        26: invokevirtual #54                 // Method iN:()I
        29: iadd
        30: iconst_1
        31: iushr
        32: istore_1
        33: aload_0
        34: iload_1
        35: invokevirtual #82                 // Method semiclone:(I)Lscala/collection/convert/impl/TableStepperBase;
        38: astore_2
        39: aload_2
        40: aload_0
        41: invokevirtual #62                 // Method myCurrent:()Ljava/lang/Object;
        44: invokevirtual #60                 // Method myCurrent_$eq:(Ljava/lang/Object;)V
        47: aload_0
        48: aload_0
        49: invokevirtual #58                 // Method table:()[Ljava/lang/Object;
        52: iload_1
        53: aaload
        54: invokevirtual #60                 // Method myCurrent_$eq:(Ljava/lang/Object;)V
        57: aload_2
        58: invokevirtual #62                 // Method myCurrent:()Ljava/lang/Object;
        61: ifnull        68
        64: iconst_1
        65: goto          69
        68: iconst_0
        69: istore_3
        70: aload_0
        71: invokevirtual #62                 // Method myCurrent:()Ljava/lang/Object;
        74: ifnull        81
        77: iconst_1
        78: goto          82
        81: iconst_0
        82: istore        4
        84: aload_0
        85: invokevirtual #54                 // Method iN:()I
        88: aload_0
        89: invokevirtual #52                 // Method i0:()I
        92: isub
        93: bipush        32
        95: if_icmpge     164
        98: aload_0
        99: invokevirtual #52                 // Method i0:()I
       102: iconst_1
       103: iadd
       104: istore        5
       106: iload         5
       108: iload_1
       109: if_icmpge     131
       112: aload_0
       113: invokevirtual #58                 // Method table:()[Ljava/lang/Object;
       116: iload         5
       118: aaload
       119: ifnull        131
       122: iinc          5, 1
       125: iinc          3, 1
       128: goto          106
       131: iload_1
       132: iconst_1
       133: iadd
       134: istore        5
       136: iload         5
       138: aload_0
       139: invokevirtual #54                 // Method iN:()I
       142: if_icmpge     164
       145: aload_0
       146: invokevirtual #58                 // Method table:()[Ljava/lang/Object;
       149: iload         5
       151: aaload
       152: ifnull        164
       155: iinc          5, 1
       158: iinc          4, 1
       161: goto          136
       164: aload_0
       165: aload_0
       166: invokevirtual #76                 // Method maxLength:()I
       169: iload_3
       170: isub
       171: invokevirtual #74                 // Method maxLength_$eq:(I)V
       174: aload_2
       175: aload_2
       176: invokevirtual #76                 // Method maxLength:()I
       179: iload         4
       181: isub
       182: invokevirtual #74                 // Method maxLength_$eq:(I)V
       185: aload_0
       186: iload_1
       187: invokevirtual #56                 // Method i0_$eq:(I)V
       190: aload_2
       191: areturn
       192: aconst_null
       193: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 253 /* append */
          offset_delta = 68
          locals = [ int, class scala/collection/convert/impl/TableStepperBase ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [ int, int ]
        frame_type = 24 /* same */
        frame_type = 4 /* same */
        frame_type = 250 /* chop */
          offset_delta = 27
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class scala/collection/convert/impl/TableStepperBase ]
          stack = []
      LineNumberTable:
        line 49: 0
        line 50: 21
        line 51: 33
        line 52: 39
        line 53: 47
        line 54: 57
        line 55: 70
        line 56: 84
        line 57: 98
        line 58: 106
        line 59: 131
        line 60: 136
        line 62: 164
        line 63: 174
        line 64: 185
        line 65: 190
        line 67: 192
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          106      58     5     i   I
           33     158     1  half   I
           39     152     2   ans   Lscala/collection/convert/impl/TableStepperBase;
           70     121     3 inLeft   I
           84     107     4 inRight   I
            0     194     0  this   Lscala/collection/convert/impl/TableStepperBase;
    Signature: #80                          // ()TSub;

  public scala.collection.convert.impl.TableStepperBase(int, I[], int, int);
    descriptor: (I[Ljava/lang/Object;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=5
         0: aload_0
         1: iload_1
         2: putfield      #27                 // Field maxLength:I
         5: aload_0
         6: aload_2
         7: putfield      #36                 // Field table:[Ljava/lang/Object;
        10: aload_0
        11: iload_3
        12: putfield      #38                 // Field i0:I
        15: aload_0
        16: iload         4
        18: putfield      #41                 // Field iN:I
        21: aload_0
        22: invokespecial #92                 // Method java/lang/Object."<init>":()V
        25: aload_0
        26: aload_0
        27: invokevirtual #52                 // Method i0:()I
        30: iload         4
        32: if_icmpge     44
        35: aload_2
        36: aload_0
        37: invokevirtual #52                 // Method i0:()I
        40: aaload
        41: goto          45
        44: aconst_null
        45: putfield      #45                 // Field myCurrent:Ljava/lang/Object;
        48: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class scala/collection/convert/impl/TableStepperBase, int, class "[Ljava/lang/Object;", int, int ]
          stack = [ class scala/collection/convert/impl/TableStepperBase ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/convert/impl/TableStepperBase, int, class "[Ljava/lang/Object;", int, int ]
          stack = [ class scala/collection/convert/impl/TableStepperBase, class java/lang/Object ]
      LineNumberTable:
        line 20: 0
        line 22: 21
        line 24: 25
        line 19: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lscala/collection/convert/impl/TableStepperBase;
            0      49     1 maxLength   I
            0      49     2 table   [Ljava/lang/Object;
            0      49     3    i0   I
            0      49     4    iN   I
    Signature: #89                          // (I[TI;II)V
    MethodParameters:
      Name                           Flags
      maxLength                      final
      table                          final
      i0                             final
      iN                             final
}
InnerClasses:
  public static #14= #7 of #13;           // EfficientSplit=class scala/collection/Stepper$EfficientSplit of class scala/collection/Stepper
Signature: #3                           // <A:Ljava/lang/Object;I:Ljava/lang/Object;Sub:Ljava/lang/Object;Semi:TSub;>Ljava/lang/Object;Lscala/collection/Stepper$EfficientSplit;
SourceFile: "TableStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005UbAB\u000b\u0017\u0003\u0003Qb\u0004\u0003\u00054\u0001\t\u0005\r\u0011\"\u00055\u0011!A\u0004A!a\u0001\n#I\u0004\u0002C \u0001\u0005\u0003\u0005\u000b\u0015B\u001b\t\u0011\u0001\u0003!Q1A\u0005\u0012\u0005C\u0001\"\u0014\u0001\u0003\u0002\u0003\u0006IA\u0011\u0005\t\u001d\u0002\u0011\t\u0019!C\ti!Aq\n\u0001BA\u0002\u0013E\u0001\u000b\u0003\u0005S\u0001\t\u0005\t\u0015)\u00036\u0011!\u0019\u0006A!b\u0001\n#!\u0004\u0002\u0003+\u0001\u0005\u0003\u0005\u000b\u0011B\u001b\t\u000bU\u0003A\u0011\u0001,\t\u000fi\u0004\u0001\u0019!C\tw\"9A\u0010\u0001a\u0001\n#i\bBB@\u0001A\u0003&Q\tC\u0004\u0002\u0002\u0001!)\"a\u0001\t\u000f\u0005e\u0001A\"\u0005\u0002\u001c!1\u0011\u0011\u0005\u0001\u0005\u0002QBq!a\t\u0001\t\u0003\t)\u0003C\u0004\u0002.\u0001!\t!a\f\t\u000f\u0005E\u0002\u0001\"\u0001\u00024\t\u0001B+\u00192mKN#X\r\u001d9fe\n\u000b7/\u001a\u0006\u0003/a\tA![7qY*\u0011\u0011DG\u0001\bG>tg/\u001a:u\u0015\tYB$\u0001\u0006d_2dWm\u0019;j_:T\u0011!H\u0001\u0006g\u000e\fG.Y\u000b\u0006?i;E\r[\n\u0004\u0001\u0001\"\u0003CA\u0011#\u001b\u0005a\u0012BA\u0012\u001d\u0005\u0019\te.\u001f*fMB\u0011Q\u0005\r\b\u0003M9r!aJ\u0017\u000f\u0005!bS\"A\u0015\u000b\u0005)Z\u0013A\u0002\u001fs_>$hh\u0001\u0001\n\u0003uI!a\u0007\u000f\n\u0005=R\u0012aB*uKB\u0004XM]\u0005\u0003cI\u0012a\"\u00124gS\u000eLWM\u001c;Ta2LGO\u0003\u000205\u0005IQ.\u0019=MK:<G\u000f[\u000b\u0002kA\u0011\u0011EN\u0005\u0003oq\u00111!\u00138u\u00035i\u0017\r\u001f\'f]\u001e$\bn\u0018\u0013fcR\u0011!(\u0010\t\u0003CmJ!\u0001\u0010\u000f\u0003\tUs\u0017\u000e\u001e\u0005\b}\t\t\t\u00111\u00016\u0003\rAH%M\u0001\u000b[\u0006DH*\u001a8hi\"\u0004\u0013!\u0002;bE2,W#\u0001\"\u0011\u0007\u0005\u001aU)\u0003\u0002E9\t)\u0011I\u001d:bsB\u0011ai\u0012\u0007\u0001\t\u0015A\u0005A1\u0001J\u0005\u0005I\u0015C\u0001&!!\t\t3*\u0003\u0002M9\t!a*\u001e7m\u0003\u0019!\u0018M\u00197fA\u0005\u0011\u0011\u000eM\u0001\u0007SBzF%Z9\u0015\u0005i\n\u0006b\u0002 \b\u0003\u0003\u0005\r!N\u0001\u0004SB\u0002\u0013AA5O\u0003\rIg\nI\u0001\u0007y%t\u0017\u000e\u001e \u0015\u000b]3x\u000f_=\u0011\ra\u0003\u0011,R2h\u001b\u00051\u0002C\u0001$[\t\u0015Y\u0006A1\u0001]\u0005\u0005\t\u0015CA/a!\t\tc,\u0003\u0002`9\t9aj\u001c;iS:<\u0007CA\u0011b\u0013\t\u0011GDA\u0002B]f\u0004\"A\u00123\u0005\u000b\u0015\u0004!\u0019\u00014\u0003\u0007M+(-\u0005\u0002KAB\u0011a\t\u001b\u0003\u0006S\u0002\u0011\rA\u001b\u0002\u0005\'\u0016l\u0017.\u0005\u0002^WJ\u0019An\u00198\u0007\t5\u0004\u0001a\u001b\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\u0019\u0004_F$\bC\u0002-\u00013\u0016\u00038\u000f\u0005\u0002Gc\u0012I!\u000f[A\u0001\u0002\u0003\u0015\t\u0001\u0018\u0002\u0004?\u0012\n\u0004C\u0001$u\t%)\b.!A\u0001\u0002\u000b\u0005ALA\u0002`IIBQaM\u0006A\u0002UBQ\u0001Q\u0006A\u0002\tCQAT\u0006A\u0002UBQaU\u0006A\u0002U\n\u0011\"\\=DkJ\u0014XM\u001c;\u0016\u0003\u0015\u000bQ\"\\=DkJ\u0014XM\u001c;`I\u0015\fHC\u0001\u001e\u007f\u0011\u001dqT\"!AA\u0002\u0015\u000b!\"\\=DkJ\u0014XM\u001c;!\u0003=1\u0017N\u001c3OKb$8)\u001e:sK:$HCAA\u0003!\r\t\u0013qA\u0005\u0004\u0003\u0013a\"a\u0002\"p_2,\u0017M\u001c\u0015\u0004\u001f\u00055\u0001\u0003BA\b\u0003+i!!!\u0005\u000b\u0007\u0005MA$\u0001\u0006b]:|G/\u0019;j_:LA!a\u0006\u0002\u0012\t9A/Y5me\u0016\u001c\u0017!C:f[&\u001cGn\u001c8f)\r9\u0017Q\u0004\u0005\u0007\u0003?\u0001\u0002\u0019A\u001b\u0002\t!\fGNZ\u0001\u0010G\"\f\'/Y2uKJL7\u000f^5dg\u0006aQm\u001d;j[\u0006$XmU5{KV\u0011\u0011q\u0005\t\u0004C\u0005%\u0012bAA\u00169\t!Aj\u001c8h\u0003\u001dA\u0017m]*uKB,\"!!\u0002\u0002\u0011Q\u0014\u0018p\u00159mSR$\u0012a\u0019"
    )
  ScalaInlineInfo: length = 0x4F (unknown attribute)
   01 00 00 0F 00 57 00 58 00 00 43 00 19 00 00 44
   00 45 00 00 31 00 32 01 00 46 00 32 00 00 14 00
   19 00 00 27 00 1F 00 00 15 00 19 00 00 0F 00 19
   00 00 1E 00 1F 00 00 16 00 2A 00 00 2E 00 2F 00
   00 3F 00 40 00 00 11 00 21 00 00 4F 00 2A 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
