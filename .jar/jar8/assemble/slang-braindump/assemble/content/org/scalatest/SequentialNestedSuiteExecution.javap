Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/SequentialNestedSuiteExecution.class
  Last modified May 29, 2022; size 3549 bytes
  SHA-256 checksum 3cbf32c6a7389b01c77d6c6f6ffe0ababc7b4969d5d49ce6f6cc0438e8a30cac
  Compiled from "SequentialNestedSuiteExecution.scala"
public interface org.scalatest.SequentialNestedSuiteExecution extends org.scalatest.SuiteMixin
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/scalatest/SequentialNestedSuiteExecution
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 4, attributes: 5
Constant pool:
    #1 = Utf8               org/scalatest/SequentialNestedSuiteExecution
    #2 = Class              #1            // org/scalatest/SequentialNestedSuiteExecution
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/scalatest/SuiteMixin
    #6 = Class              #5            // org/scalatest/SuiteMixin
    #7 = Utf8               SequentialNestedSuiteExecution.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005=2\u0001\u0002B\u0003\u0011\u0002\u0007\u0005!\u0002\u000b\u0005\u0006+\u0001!\tA\u0006\u0005\u00075\u0001\u0001J\u0011C\u000e\t\u0017\u0011\u0002\u0001\u0013aA\u0001\u0002\u0013%Qe\n\u0002\u001f\'\u0016\fX/\u001a8uS\u0006dg*Z:uK\u0012\u001cV/\u001b;f\u000bb,7-\u001e;j_:T!AB\u0004\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\u0005\u0002\u0007=\u0014xm\u0001\u0001\u0014\u0007\u0001Y\u0011\u0003\u0005\u0002\r\u001f5\tQBC\u0001\u000f\u0003\u0015\u00198-\u00197b\u0013\t\u0001RB\u0001\u0004B]f\u0014VM\u001a\t\u0003%Mi\u0011!B\u0005\u0003)\u0015\u0011!bU;ji\u0016l\u0015\u000e_5o\u0003\u0019!\u0013N\\5uIQ\tq\u0003\u0005\u0002\r1%\u0011\u0011$\u0004\u0002\u0005+:LG/A\bsk:tUm\u001d;fIN+\u0018\u000e^3t)\tar\u0004\u0005\u0002\u0013;%\u0011a$\u0002\u0002\u0007\'R\fG/^:\t\u000b\u0001\u0012\u0001\u0019A\u0011\u0002\t\u0005\u0014xm\u001d\t\u0003%\tJ!aI\u0003\u0003\t\u0005\u0013xm]\u0001\u0016gV\u0004XM\u001d\u0013sk:tUm\u001d;fIN+\u0018\u000e^3t)\tab\u0005C\u0003!\u0007\u0001\u0007\u0011%\u0003\u0002\u001b\'I\u0019\u0011f\u000b\u0017\u0007\t)\u0002\u0001\u0001\u000b\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\t\u0003%\u0001\u0001\"AE\u0017\n\u00059*!!B*vSR,\u0007
   #11 = Utf8               org/scalactic/Requirements$RequirementsHelper
   #12 = Class              #11           // org/scalactic/Requirements$RequirementsHelper
   #13 = Utf8               org/scalactic/Requirements
   #14 = Class              #13           // org/scalactic/Requirements
   #15 = Utf8               RequirementsHelper
   #16 = Utf8               org$scalatest$SequentialNestedSuiteExecution$$super$runNestedSuites
   #17 = Utf8               (Lorg/scalatest/Args;)Lorg/scalatest/Status;
   #18 = Utf8               args
   #19 = Utf8               runNestedSuites$
   #20 = Utf8               (Lorg/scalatest/SequentialNestedSuiteExecution;Lorg/scalatest/Args;)Lorg/scalatest/Status;
   #21 = Utf8               $this
   #22 = Utf8               runNestedSuites
   #23 = NameAndType        #22:#17       // runNestedSuites:(Lorg/scalatest/Args;)Lorg/scalatest/Status;
   #24 = InterfaceMethodref #2.#23        // org/scalatest/SequentialNestedSuiteExecution.runNestedSuites:(Lorg/scalatest/Args;)Lorg/scalatest/Status;
   #25 = Utf8               Lorg/scalatest/SequentialNestedSuiteExecution;
   #26 = Utf8               Lorg/scalatest/Args;
   #27 = Utf8               org/scalactic/Requirements$
   #28 = Class              #27           // org/scalactic/Requirements$
   #29 = Utf8               MODULE$
   #30 = Utf8               Lorg/scalactic/Requirements$;
   #31 = NameAndType        #29:#30       // MODULE$:Lorg/scalactic/Requirements$;
   #32 = Fieldref           #28.#31       // org/scalactic/Requirements$.MODULE$:Lorg/scalactic/Requirements$;
   #33 = Utf8               requirementsHelper
   #34 = Utf8               ()Lorg/scalactic/Requirements$RequirementsHelper;
   #35 = NameAndType        #33:#34       // requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
   #36 = Methodref          #28.#35       // org/scalactic/Requirements$.requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
   #37 = Utf8               java/lang/String
   #38 = Class              #37           // java/lang/String
   #39 = String             #18           // args
   #40 = Utf8               [Ljava/lang/Object;
   #41 = Class              #40           // "[Ljava/lang/Object;"
   #42 = Utf8               [Ljava/lang/String;
   #43 = Class              #42           // "[Ljava/lang/String;"
   #44 = Utf8               org/scalactic/Prettifier$
   #45 = Class              #44           // org/scalactic/Prettifier$
   #46 = Utf8               Lorg/scalactic/Prettifier$;
   #47 = NameAndType        #29:#46       // MODULE$:Lorg/scalactic/Prettifier$;
   #48 = Fieldref           #45.#47       // org/scalactic/Prettifier$.MODULE$:Lorg/scalactic/Prettifier$;
   #49 = Utf8               default
   #50 = Utf8               ()Lorg/scalactic/Prettifier;
   #51 = NameAndType        #49:#50       // default:()Lorg/scalactic/Prettifier;
   #52 = Methodref          #45.#51       // org/scalactic/Prettifier$.default:()Lorg/scalactic/Prettifier;
   #53 = Utf8               org/scalactic/source/Position
   #54 = Class              #53           // org/scalactic/source/Position
   #55 = String             #7            // SequentialNestedSuiteExecution.scala
   #56 = Utf8               Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
   #57 = String             #56           // Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
   #58 = Utf8               <init>
   #59 = Utf8               (Ljava/lang/String;Ljava/lang/String;I)V
   #60 = NameAndType        #58:#59       // "<init>":(Ljava/lang/String;Ljava/lang/String;I)V
   #61 = Methodref          #54.#60       // org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
   #62 = Utf8               macroRequireNonNull
   #63 = Utf8               ([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
   #64 = NameAndType        #62:#63       // macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
   #65 = Methodref          #12.#64       // org/scalactic/Requirements$RequirementsHelper.macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
   #66 = Utf8               scala/None$
   #67 = Class              #66           // scala/None$
   #68 = Utf8               Lscala/None$;
   #69 = NameAndType        #29:#68       // MODULE$:Lscala/None$;
   #70 = Fieldref           #67.#69       // scala/None$.MODULE$:Lscala/None$;
   #71 = Utf8               org/scalatest/Args
   #72 = Class              #71           // org/scalatest/Args
   #73 = Utf8               copy$default$1
   #74 = Utf8               ()Lorg/scalatest/Reporter;
   #75 = NameAndType        #73:#74       // copy$default$1:()Lorg/scalatest/Reporter;
   #76 = Methodref          #72.#75       // org/scalatest/Args.copy$default$1:()Lorg/scalatest/Reporter;
   #77 = Utf8               copy$default$2
   #78 = Utf8               ()Lorg/scalatest/Stopper;
   #79 = NameAndType        #77:#78       // copy$default$2:()Lorg/scalatest/Stopper;
   #80 = Methodref          #72.#79       // org/scalatest/Args.copy$default$2:()Lorg/scalatest/Stopper;
   #81 = Utf8               copy$default$3
   #82 = Utf8               ()Lorg/scalatest/Filter;
   #83 = NameAndType        #81:#82       // copy$default$3:()Lorg/scalatest/Filter;
   #84 = Methodref          #72.#83       // org/scalatest/Args.copy$default$3:()Lorg/scalatest/Filter;
   #85 = Utf8               copy$default$4
   #86 = Utf8               ()Lorg/scalatest/ConfigMap;
   #87 = NameAndType        #85:#86       // copy$default$4:()Lorg/scalatest/ConfigMap;
   #88 = Methodref          #72.#87       // org/scalatest/Args.copy$default$4:()Lorg/scalatest/ConfigMap;
   #89 = Utf8               copy$default$6
   #90 = Utf8               ()Lorg/scalatest/Tracker;
   #91 = NameAndType        #89:#90       // copy$default$6:()Lorg/scalatest/Tracker;
   #92 = Methodref          #72.#91       // org/scalatest/Args.copy$default$6:()Lorg/scalatest/Tracker;
   #93 = Utf8               copy$default$7
   #94 = Utf8               ()Lscala/collection/immutable/Set;
   #95 = NameAndType        #93:#94       // copy$default$7:()Lscala/collection/immutable/Set;
   #96 = Methodref          #72.#95       // org/scalatest/Args.copy$default$7:()Lscala/collection/immutable/Set;
   #97 = Utf8               copy$default$8
   #98 = Utf8               ()Z
   #99 = NameAndType        #97:#98       // copy$default$8:()Z
  #100 = Methodref          #72.#99       // org/scalatest/Args.copy$default$8:()Z
  #101 = Utf8               copy$default$9
  #102 = Utf8               ()Lscala/Option;
  #103 = NameAndType        #101:#102     // copy$default$9:()Lscala/Option;
  #104 = Methodref          #72.#103      // org/scalatest/Args.copy$default$9:()Lscala/Option;
  #105 = Utf8               copy$default$10
  #106 = NameAndType        #105:#102     // copy$default$10:()Lscala/Option;
  #107 = Methodref          #72.#106      // org/scalatest/Args.copy$default$10:()Lscala/Option;
  #108 = Utf8               copy
  #109 = Utf8               (Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Lorg/scalatest/Filter;Lorg/scalatest/ConfigMap;Lscala/Option;Lorg/scalatest/Tracker;Lscala/collection/immutable/Set;ZLscala/Option;Lscala/Option;)Lorg/scalatest/Args;
  #110 = NameAndType        #108:#109     // copy:(Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Lorg/scalatest/Filter;Lorg/scalatest/ConfigMap;Lscala/Option;Lorg/scalatest/Tracker;Lscala/collection/immutable/Set;ZLscala/Option;Lscala/Option;)Lorg/scalatest/Args;
  #111 = Methodref          #72.#110      // org/scalatest/Args.copy:(Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Lorg/scalatest/Filter;Lorg/scalatest/ConfigMap;Lscala/Option;Lorg/scalatest/Tracker;Lscala/collection/immutable/Set;ZLscala/Option;Lscala/Option;)Lorg/scalatest/Args;
  #112 = NameAndType        #16:#17       // org$scalatest$SequentialNestedSuiteExecution$$super$runNestedSuites:(Lorg/scalatest/Args;)Lorg/scalatest/Status;
  #113 = InterfaceMethodref #2.#112       // org/scalatest/SequentialNestedSuiteExecution.org$scalatest$SequentialNestedSuiteExecution$$super$runNestedSuites:(Lorg/scalatest/Args;)Lorg/scalatest/Status;
  #114 = Utf8               x$1
  #115 = Utf8               x$2
  #116 = Utf8               Lorg/scalatest/Reporter;
  #117 = Utf8               x$3
  #118 = Utf8               Lorg/scalatest/Stopper;
  #119 = Utf8               x$4
  #120 = Utf8               Lorg/scalatest/Filter;
  #121 = Utf8               x$5
  #122 = Utf8               Lorg/scalatest/ConfigMap;
  #123 = Utf8               x$6
  #124 = Utf8               Lorg/scalatest/Tracker;
  #125 = Utf8               x$7
  #126 = Utf8               Lscala/collection/immutable/Set;
  #127 = Utf8               x$8
  #128 = Utf8               Z
  #129 = Utf8               x$9
  #130 = Utf8               Lscala/Option;
  #131 = Utf8               x$10
  #132 = Utf8               this
  #133 = Utf8               $init$
  #134 = Utf8               (Lorg/scalatest/SequentialNestedSuiteExecution;)V
  #135 = Utf8               MethodParameters
  #136 = Utf8               Code
  #137 = Utf8               LineNumberTable
  #138 = Utf8               LocalVariableTable
  #139 = Utf8               InnerClasses
  #140 = Utf8               SourceFile
  #141 = Utf8               RuntimeVisibleAnnotations
  #142 = Utf8               ScalaInlineInfo
  #143 = Utf8               ScalaSig
{
  public abstract org.scalatest.Status org$scalatest$SequentialNestedSuiteExecution$$super$runNestedSuites(org.scalatest.Args);
    descriptor: (Lorg/scalatest/Args;)Lorg/scalatest/Status;
    flags: (0x1401) ACC_PUBLIC, ACC_ABSTRACT, ACC_SYNTHETIC
    MethodParameters:
      Name                           Flags
      args                           final

  public static org.scalatest.Status runNestedSuites$(org.scalatest.SequentialNestedSuiteExecution, org.scalatest.Args);
    descriptor: (Lorg/scalatest/SequentialNestedSuiteExecution;Lorg/scalatest/Args;)Lorg/scalatest/Status;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #24                 // InterfaceMethod runNestedSuites:(Lorg/scalatest/Args;)Lorg/scalatest/Status;
         5: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/scalatest/SequentialNestedSuiteExecution;
            0       6     1  args   Lorg/scalatest/Args;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      args                           final

  public default org.scalatest.Status runNestedSuites(org.scalatest.Args);
    descriptor: (Lorg/scalatest/Args;)Lorg/scalatest/Status;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=12, args_size=2
         0: getstatic     #32                 // Field org/scalactic/Requirements$.MODULE$:Lorg/scalactic/Requirements$;
         3: invokevirtual #36                 // Method org/scalactic/Requirements$.requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
         6: iconst_1
         7: anewarray     #38                 // class java/lang/String
        10: dup
        11: iconst_0
        12: ldc           #39                 // String args
        14: aastore
        15: checkcast     #41                 // class "[Ljava/lang/Object;"
        18: checkcast     #43                 // class "[Ljava/lang/String;"
        21: iconst_1
        22: anewarray     #4                  // class java/lang/Object
        25: dup
        26: iconst_0
        27: aload_1
        28: aastore
        29: checkcast     #41                 // class "[Ljava/lang/Object;"
        32: getstatic     #48                 // Field org/scalactic/Prettifier$.MODULE$:Lorg/scalactic/Prettifier$;
        35: invokevirtual #52                 // Method org/scalactic/Prettifier$.default:()Lorg/scalactic/Prettifier;
        38: new           #54                 // class org/scalactic/source/Position
        41: dup
        42: ldc           #55                 // String SequentialNestedSuiteExecution.scala
        44: ldc           #57                 // String Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
        46: bipush        40
        48: invokespecial #61                 // Method org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
        51: invokevirtual #65                 // Method org/scalactic/Requirements$RequirementsHelper.macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
        54: aload_0
        55: getstatic     #70                 // Field scala/None$.MODULE$:Lscala/None$;
        58: astore_2
        59: aload_1
        60: invokevirtual #76                 // Method org/scalatest/Args.copy$default$1:()Lorg/scalatest/Reporter;
        63: astore_3
        64: aload_1
        65: invokevirtual #80                 // Method org/scalatest/Args.copy$default$2:()Lorg/scalatest/Stopper;
        68: astore        4
        70: aload_1
        71: invokevirtual #84                 // Method org/scalatest/Args.copy$default$3:()Lorg/scalatest/Filter;
        74: astore        5
        76: aload_1
        77: invokevirtual #88                 // Method org/scalatest/Args.copy$default$4:()Lorg/scalatest/ConfigMap;
        80: astore        6
        82: aload_1
        83: invokevirtual #92                 // Method org/scalatest/Args.copy$default$6:()Lorg/scalatest/Tracker;
        86: astore        7
        88: aload_1
        89: invokevirtual #96                 // Method org/scalatest/Args.copy$default$7:()Lscala/collection/immutable/Set;
        92: astore        8
        94: aload_1
        95: invokevirtual #100                // Method org/scalatest/Args.copy$default$8:()Z
        98: istore        9
       100: aload_1
       101: invokevirtual #104                // Method org/scalatest/Args.copy$default$9:()Lscala/Option;
       104: astore        10
       106: aload_1
       107: invokevirtual #107                // Method org/scalatest/Args.copy$default$10:()Lscala/Option;
       110: astore        11
       112: aload_1
       113: aload_3
       114: aload         4
       116: aload         5
       118: aload         6
       120: aload_2
       121: aload         7
       123: aload         8
       125: iload         9
       127: aload         10
       129: aload         11
       131: invokevirtual #111                // Method org/scalatest/Args.copy:(Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Lorg/scalatest/Filter;Lorg/scalatest/ConfigMap;Lscala/Option;Lorg/scalatest/Tracker;Lscala/collection/immutable/Set;ZLscala/Option;Lscala/Option;)Lorg/scalatest/Args;
       134: invokeinterface #113,  2          // InterfaceMethod org$scalatest$SequentialNestedSuiteExecution$$super$runNestedSuites:(Lorg/scalatest/Args;)Lorg/scalatest/Status;
       139: areturn
      LineNumberTable:
        line 40: 0
        line 42: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           59      75     2   x$1   Lscala/None$;
           64      70     3   x$2   Lorg/scalatest/Reporter;
           70      64     4   x$3   Lorg/scalatest/Stopper;
           76      58     5   x$4   Lorg/scalatest/Filter;
           82      52     6   x$5   Lorg/scalatest/ConfigMap;
           88      46     7   x$6   Lorg/scalatest/Tracker;
           94      40     8   x$7   Lscala/collection/immutable/Set;
          100      34     9   x$8   Z
          106      28    10   x$9   Lscala/Option;
          112      22    11  x$10   Lscala/Option;
            0     140     0  this   Lorg/scalatest/SequentialNestedSuiteExecution;
            0     140     1  args   Lorg/scalatest/Args;
    MethodParameters:
      Name                           Flags
      args                           final

  public static void $init$(org.scalatest.SequentialNestedSuiteExecution);
    descriptor: (Lorg/scalatest/SequentialNestedSuiteExecution;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lorg/scalatest/SequentialNestedSuiteExecution;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public static #15= #12 of #14;          // RequirementsHelper=class org/scalactic/Requirements$RequirementsHelper of class org/scalactic/Requirements
SourceFile: "SequentialNestedSuiteExecution.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005=2\u0001\u0002B\u0003\u0011\u0002\u0007\u0005!\u0002\u000b\u0005\u0006+\u0001!\tA\u0006\u0005\u00075\u0001\u0001J\u0011C\u000e\t\u0017\u0011\u0002\u0001\u0013aA\u0001\u0002\u0013%Qe\n\u0002\u001f\'\u0016\fX/\u001a8uS\u0006dg*Z:uK\u0012\u001cV/\u001b;f\u000bb,7-\u001e;j_:T!AB\u0004\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\u0005\u0002\u0007=\u0014xm\u0001\u0001\u0014\u0007\u0001Y\u0011\u0003\u0005\u0002\r\u001f5\tQBC\u0001\u000f\u0003\u0015\u00198-\u00197b\u0013\t\u0001RB\u0001\u0004B]f\u0014VM\u001a\t\u0003%Mi\u0011!B\u0005\u0003)\u0015\u0011!bU;ji\u0016l\u0015\u000e_5o\u0003\u0019!\u0013N\\5uIQ\tq\u0003\u0005\u0002\r1%\u0011\u0011$\u0004\u0002\u0005+:LG/A\bsk:tUm\u001d;fIN+\u0018\u000e^3t)\tar\u0004\u0005\u0002\u0013;%\u0011a$\u0002\u0002\u0007\'R\fG/^:\t\u000b\u0001\u0012\u0001\u0019A\u0011\u0002\t\u0005\u0014xm\u001d\t\u0003%\tJ!aI\u0003\u0003\t\u0005\u0013xm]\u0001\u0016gV\u0004XM\u001d\u0013sk:tUm\u001d;fIN+\u0018\u000e^3t)\tab\u0005C\u0003!\u0007\u0001\u0007\u0011%\u0003\u0002\u001b\'I\u0019\u0011f\u000b\u0017\u0007\t)\u0002\u0001\u0001\u000b\u0002\ryI,g-\u001b8f[\u0016tGO\u0010\t\u0003%\u0001\u0001\"AE\u0017\n\u00059*!!B*vSR,\u0007"
    )
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 85 00 86 01 00 10 00 11 01 00 16
   00 11 00 00 13 00 14 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
