Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/parser/JsonParser$Context.class
  Last modified May 29, 2022; size 17788 bytes
  SHA-256 checksum 89053ef3752367b2732364051270466d27ca1fce1955d87ce1579cda0b25bc62
  Compiled from "JsonParser.scala"
public final class org.sireum.parser.JsonParser$Context implements org.sireum.RecordSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/parser/JsonParser$Context
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 14, methods: 79, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/parser/JsonParser$Context
    #2 = Class              #1            // org/sireum/parser/JsonParser$Context
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/RecordSig
    #6 = Class              #5            // org/sireum/RecordSig
    #7 = Utf8               JsonParser.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/parser/Json$State
   #14 = Class              #13           // org/sireum/parser/Json$State
   #15 = Utf8               org/sireum/parser/Json
   #16 = Class              #15           // org/sireum/parser/Json
   #17 = Utf8               State
   #18 = Utf8               org/sireum/parser/JsonParser
   #19 = Class              #18           // org/sireum/parser/JsonParser
   #20 = Utf8               Context
   #21 = Utf8               org/sireum/parser/JsonParser$Result
   #22 = Class              #21           // org/sireum/parser/JsonParser$Result
   #23 = Utf8               Result
   #24 = Utf8               org/sireum/parser/JsonParser$Result$
   #25 = Class              #24           // org/sireum/parser/JsonParser$Result$
   #26 = Utf8               Result$
   #27 = Utf8               org/sireum/parser/ParseTree$Leaf
   #28 = Class              #27           // org/sireum/parser/ParseTree$Leaf
   #29 = Utf8               org/sireum/parser/ParseTree
   #30 = Class              #29           // org/sireum/parser/ParseTree
   #31 = Utf8               Leaf
   #32 = Utf8               org/sireum/parser/ParseTree$Node
   #33 = Class              #32           // org/sireum/parser/ParseTree$Node
   #34 = Utf8               Node
   #35 = Utf8               org/sireum/parser/ParseTree$Node$
   #36 = Class              #35           // org/sireum/parser/ParseTree$Node$
   #37 = Utf8               Node$
   #38 = Utf8               _ruleName
   #39 = Utf8               Ljava/lang/String;
   #40 = Utf8               _ruleType
   #41 = Utf8               I
   #42 = Utf8               _accepting
   #43 = Utf8               Lorg/sireum/IS;
   #44 = Utf8               Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;
   #45 = Utf8               _state
   #46 = Utf8               Lorg/sireum/Z;
   #47 = Utf8               _bresOpt
   #48 = Utf8               Z
   #49 = Utf8               _resOpt
   #50 = Utf8               Lorg/sireum/parser/JsonParser$Result;
   #51 = Utf8               _j
   #52 = Utf8               _max
   #53 = Utf8               _initial
   #54 = Utf8               _trees
   #55 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;
   #56 = Utf8               _found
   #57 = Utf8               _failIndex
   #58 = Utf8               _isLexical
   #59 = Utf8               org$sireum$RecordSig$$$isOwned
   #60 = Utf8               $owned
   #61 = Utf8               ()Z
   #62 = Utf8               $owned$
   #63 = Utf8               (Lorg/sireum/RecordSig;)Z
   #64 = NameAndType        #62:#63       // $owned$:(Lorg/sireum/RecordSig;)Z
   #65 = InterfaceMethodref #6.#64        // org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
   #66 = Utf8               this
   #67 = Utf8               Lorg/sireum/parser/JsonParser$Context;
   #68 = Utf8               $owned_$eq
   #69 = Utf8               (Z)Lorg/sireum/RecordSig;
   #70 = Utf8               b
   #71 = Utf8               $owned_$eq$
   #72 = Utf8               (Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #73 = NameAndType        #71:#72       // $owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #74 = InterfaceMethodref #6.#73        // org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #75 = Utf8               hash
   #76 = Utf8               ()Lorg/sireum/Z;
   #77 = Utf8               hash$
   #78 = Utf8               (Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #79 = NameAndType        #77:#78       // hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #80 = InterfaceMethodref #6.#79        // org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #81 = Utf8               $cannotMixImmutableAndMutable
   #82 = Utf8               ()Lscala/runtime/Nothing$;
   #83 = Utf8               org/sireum/Mutable
   #84 = Class              #83           // org/sireum/Mutable
   #85 = Utf8               $cannotMixImmutableAndMutable$
   #86 = Utf8               (Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #87 = NameAndType        #85:#86       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #88 = InterfaceMethodref #84.#87       // org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #89 = Utf8               $hasEquals
   #90 = Utf8               $hasEquals$
   #91 = Utf8               (Lorg/sireum/Mutable;)Z
   #92 = NameAndType        #90:#91       // $hasEquals$:(Lorg/sireum/Mutable;)Z
   #93 = InterfaceMethodref #84.#92       // org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
   #94 = Utf8               $hasString
   #95 = Utf8               $hasString$
   #96 = NameAndType        #95:#91       // $hasString$:(Lorg/sireum/Mutable;)Z
   #97 = InterfaceMethodref #84.#96       // org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
   #98 = NameAndType        #59:#48       // org$sireum$RecordSig$$$isOwned:Z
   #99 = Fieldref           #2.#98        // org/sireum/parser/JsonParser$Context.org$sireum$RecordSig$$$isOwned:Z
  #100 = Utf8               org$sireum$RecordSig$$$isOwned_$eq
  #101 = Utf8               (Z)V
  #102 = Utf8               x$1
  #103 = Utf8               ruleName
  #104 = Utf8               ()Ljava/lang/String;
  #105 = NameAndType        #38:#39       // _ruleName:Ljava/lang/String;
  #106 = Fieldref           #2.#105       // org/sireum/parser/JsonParser$Context._ruleName:Ljava/lang/String;
  #107 = Utf8               getRuleName
  #108 = Utf8               ruleType
  #109 = Utf8               ()I
  #110 = NameAndType        #40:#41       // _ruleType:I
  #111 = Fieldref           #2.#110       // org/sireum/parser/JsonParser$Context._ruleType:I
  #112 = Utf8               getRuleType
  #113 = Utf8               accepting
  #114 = Utf8               ()Lorg/sireum/IS;
  #115 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;
  #116 = NameAndType        #42:#43       // _accepting:Lorg/sireum/IS;
  #117 = Fieldref           #2.#116       // org/sireum/parser/JsonParser$Context._accepting:Lorg/sireum/IS;
  #118 = Utf8               getAccepting
  #119 = Utf8               state
  #120 = NameAndType        #45:#46       // _state:Lorg/sireum/Z;
  #121 = Fieldref           #2.#120       // org/sireum/parser/JsonParser$Context._state:Lorg/sireum/Z;
  #122 = Utf8               getState
  #123 = Utf8               state_$eq
  #124 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
  #125 = Utf8               setState
  #126 = Utf8               resOpt
  #127 = Utf8               ()Lorg/sireum/Option;
  #128 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;
  #129 = NameAndType        #47:#48       // _bresOpt:Z
  #130 = Fieldref           #2.#129       // org/sireum/parser/JsonParser$Context._bresOpt:Z
  #131 = Utf8               org/sireum/None$
  #132 = Class              #131          // org/sireum/None$
  #133 = Utf8               MODULE$
  #134 = Utf8               Lorg/sireum/None$;
  #135 = NameAndType        #133:#134     // MODULE$:Lorg/sireum/None$;
  #136 = Fieldref           #132.#135     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #137 = Utf8               apply
  #138 = Utf8               ()Lorg/sireum/None;
  #139 = NameAndType        #137:#138     // apply:()Lorg/sireum/None;
  #140 = Methodref          #132.#139     // org/sireum/None$.apply:()Lorg/sireum/None;
  #141 = Utf8               org/sireum/Some$
  #142 = Class              #141          // org/sireum/Some$
  #143 = Utf8               Lorg/sireum/Some$;
  #144 = NameAndType        #133:#143     // MODULE$:Lorg/sireum/Some$;
  #145 = Fieldref           #142.#144     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #146 = NameAndType        #49:#50       // _resOpt:Lorg/sireum/parser/JsonParser$Result;
  #147 = Fieldref           #2.#146       // org/sireum/parser/JsonParser$Context._resOpt:Lorg/sireum/parser/JsonParser$Result;
  #148 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #149 = NameAndType        #137:#148     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #150 = Methodref          #142.#149     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #151 = Utf8               getResOpt
  #152 = NameAndType        #126:#127     // resOpt:()Lorg/sireum/Option;
  #153 = Methodref          #2.#152       // org/sireum/parser/JsonParser$Context.resOpt:()Lorg/sireum/Option;
  #154 = Utf8               resOpt_$eq
  #155 = Utf8               (Lorg/sireum/Option;)Lorg/sireum/parser/JsonParser$Context;
  #156 = Utf8               (Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;)Lorg/sireum/parser/JsonParser$Context;
  #157 = Utf8               org/sireum/Option
  #158 = Class              #157          // org/sireum/Option
  #159 = Utf8               isEmpty
  #160 = NameAndType        #159:#61      // isEmpty:()Z
  #161 = InterfaceMethodref #158.#160     // org/sireum/Option.isEmpty:()Z
  #162 = Utf8               ()Ljava/lang/Object;
  #163 = MethodType         #162          //  ()Ljava/lang/Object;
  #164 = Utf8               $anonfun$resOpt_$eq$1
  #165 = Utf8               ()Lorg/sireum/parser/JsonParser$Result;
  #166 = NameAndType        #164:#165     // $anonfun$resOpt_$eq$1:()Lorg/sireum/parser/JsonParser$Result;
  #167 = Methodref          #2.#166       // org/sireum/parser/JsonParser$Context.$anonfun$resOpt_$eq$1:()Lorg/sireum/parser/JsonParser$Result;
  #168 = MethodHandle       6:#167        // REF_invokeStatic org/sireum/parser/JsonParser$Context.$anonfun$resOpt_$eq$1:()Lorg/sireum/parser/JsonParser$Result;
  #169 = MethodType         #165          //  ()Lorg/sireum/parser/JsonParser$Result;
  #170 = Integer            5
  #171 = Integer            1
  #172 = Utf8               java/lang/invoke/LambdaMetafactory
  #173 = Class              #172          // java/lang/invoke/LambdaMetafactory
  #174 = Utf8               altMetafactory
  #175 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #176 = NameAndType        #174:#175     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #177 = Methodref          #173.#176     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #178 = MethodHandle       6:#177        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #179 = Utf8               ()Lscala/Function0;
  #180 = NameAndType        #137:#179     // apply:()Lscala/Function0;
  #181 = InvokeDynamic      #0:#180       // #0:apply:()Lscala/Function0;
  #182 = Utf8               getOrElse
  #183 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #184 = NameAndType        #182:#183     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #185 = InterfaceMethodref #158.#184     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #186 = Utf8               Lorg/sireum/Option;
  #187 = Utf8               setResOpt
  #188 = Utf8               $anonfun$setResOpt$1
  #189 = NameAndType        #188:#165     // $anonfun$setResOpt$1:()Lorg/sireum/parser/JsonParser$Result;
  #190 = Methodref          #2.#189       // org/sireum/parser/JsonParser$Context.$anonfun$setResOpt$1:()Lorg/sireum/parser/JsonParser$Result;
  #191 = MethodHandle       6:#190        // REF_invokeStatic org/sireum/parser/JsonParser$Context.$anonfun$setResOpt$1:()Lorg/sireum/parser/JsonParser$Result;
  #192 = InvokeDynamic      #1:#180       // #1:apply:()Lscala/Function0;
  #193 = Utf8               j
  #194 = NameAndType        #51:#46       // _j:Lorg/sireum/Z;
  #195 = Fieldref           #2.#194       // org/sireum/parser/JsonParser$Context._j:Lorg/sireum/Z;
  #196 = Utf8               getJ
  #197 = Utf8               j_$eq
  #198 = Utf8               setJ
  #199 = Utf8               max
  #200 = NameAndType        #52:#46       // _max:Lorg/sireum/Z;
  #201 = Fieldref           #2.#200       // org/sireum/parser/JsonParser$Context._max:Lorg/sireum/Z;
  #202 = Utf8               getMax
  #203 = Utf8               max_$eq
  #204 = Utf8               setMax
  #205 = Utf8               initial
  #206 = NameAndType        #53:#48       // _initial:Z
  #207 = Fieldref           #2.#206       // org/sireum/parser/JsonParser$Context._initial:Z
  #208 = Utf8               getInitial
  #209 = Utf8               initial_$eq
  #210 = Utf8               (Z)Lorg/sireum/parser/JsonParser$Context;
  #211 = Utf8               setInitial
  #212 = Utf8               trees
  #213 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;
  #214 = NameAndType        #54:#43       // _trees:Lorg/sireum/IS;
  #215 = Fieldref           #2.#214       // org/sireum/parser/JsonParser$Context._trees:Lorg/sireum/IS;
  #216 = Utf8               getTrees
  #217 = Utf8               trees_$eq
  #218 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/parser/JsonParser$Context;
  #219 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;)Lorg/sireum/parser/JsonParser$Context;
  #220 = Utf8               setTrees
  #221 = Utf8               found
  #222 = NameAndType        #56:#48       // _found:Z
  #223 = Fieldref           #2.#222       // org/sireum/parser/JsonParser$Context._found:Z
  #224 = Utf8               getFound
  #225 = Utf8               found_$eq
  #226 = Utf8               setFound
  #227 = Utf8               failIndex
  #228 = NameAndType        #57:#46       // _failIndex:Lorg/sireum/Z;
  #229 = Fieldref           #2.#228       // org/sireum/parser/JsonParser$Context._failIndex:Lorg/sireum/Z;
  #230 = Utf8               getFailIndex
  #231 = Utf8               failIndex_$eq
  #232 = Utf8               setFailIndex
  #233 = Utf8               isLexical
  #234 = NameAndType        #58:#48       // _isLexical:Z
  #235 = Fieldref           #2.#234       // org/sireum/parser/JsonParser$Context._isLexical:Z
  #236 = Utf8               getIsLexical
  #237 = Utf8               isLexical_$eq
  #238 = Utf8               setIsLexical
  #239 = Utf8               toString
  #240 = NameAndType        #94:#61       // $hasString:()Z
  #241 = Methodref          #2.#240       // org/sireum/parser/JsonParser$Context.$hasString:()Z
  #242 = Utf8               string$
  #243 = Utf8               (Lorg/sireum/RecordSig;)Ljava/lang/String;
  #244 = NameAndType        #242:#243     // string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #245 = InterfaceMethodref #6.#244       // org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #246 = Utf8               java/lang/StringBuilder
  #247 = Class              #246          // java/lang/StringBuilder
  #248 = Utf8               <init>
  #249 = Utf8               ()V
  #250 = NameAndType        #248:#249     // "<init>":()V
  #251 = Methodref          #247.#250     // java/lang/StringBuilder."<init>":()V
  #252 = String             #20           // Context
  #253 = Utf8               append
  #254 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #255 = NameAndType        #253:#254     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #256 = Methodref          #247.#255     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #257 = Utf8               (C)Ljava/lang/StringBuilder;
  #258 = NameAndType        #253:#257     // append:(C)Ljava/lang/StringBuilder;
  #259 = Methodref          #247.#258     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #260 = Utf8               org/sireum/String$
  #261 = Class              #260          // org/sireum/String$
  #262 = Utf8               Lorg/sireum/String$;
  #263 = NameAndType        #133:#262     // MODULE$:Lorg/sireum/String$;
  #264 = Fieldref           #261.#263     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #265 = Utf8               org/sireum/String
  #266 = Class              #265          // org/sireum/String
  #267 = NameAndType        #103:#104     // ruleName:()Ljava/lang/String;
  #268 = Methodref          #2.#267       // org/sireum/parser/JsonParser$Context.ruleName:()Ljava/lang/String;
  #269 = Utf8               (Ljava/lang/String;)V
  #270 = NameAndType        #248:#269     // "<init>":(Ljava/lang/String;)V
  #271 = Methodref          #266.#270     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #272 = Utf8               escape
  #273 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #274 = NameAndType        #272:#273     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #275 = Methodref          #261.#274     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #276 = Utf8               ,
  #277 = String             #276          // ,
  #278 = Utf8               org/sireum/U32
  #279 = Class              #278          // org/sireum/U32
  #280 = NameAndType        #108:#109     // ruleType:()I
  #281 = Methodref          #2.#280       // org/sireum/parser/JsonParser$Context.ruleType:()I
  #282 = Utf8               (I)V
  #283 = NameAndType        #248:#282     // "<init>":(I)V
  #284 = Methodref          #279.#283     // org/sireum/U32."<init>":(I)V
  #285 = NameAndType        #113:#114     // accepting:()Lorg/sireum/IS;
  #286 = Methodref          #2.#285       // org/sireum/parser/JsonParser$Context.accepting:()Lorg/sireum/IS;
  #287 = NameAndType        #119:#76      // state:()Lorg/sireum/Z;
  #288 = Methodref          #2.#287       // org/sireum/parser/JsonParser$Context.state:()Lorg/sireum/Z;
  #289 = Utf8               (Lorg/sireum/Z;)V
  #290 = NameAndType        #248:#289     // "<init>":(Lorg/sireum/Z;)V
  #291 = Methodref          #14.#290      // org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
  #292 = NameAndType        #193:#76      // j:()Lorg/sireum/Z;
  #293 = Methodref          #2.#292       // org/sireum/parser/JsonParser$Context.j:()Lorg/sireum/Z;
  #294 = NameAndType        #199:#76      // max:()Lorg/sireum/Z;
  #295 = Methodref          #2.#294       // org/sireum/parser/JsonParser$Context.max:()Lorg/sireum/Z;
  #296 = Utf8               org/sireum/B
  #297 = Class              #296          // org/sireum/B
  #298 = NameAndType        #205:#61      // initial:()Z
  #299 = Methodref          #2.#298       // org/sireum/parser/JsonParser$Context.initial:()Z
  #300 = NameAndType        #248:#101     // "<init>":(Z)V
  #301 = Methodref          #297.#300     // org/sireum/B."<init>":(Z)V
  #302 = NameAndType        #212:#114     // trees:()Lorg/sireum/IS;
  #303 = Methodref          #2.#302       // org/sireum/parser/JsonParser$Context.trees:()Lorg/sireum/IS;
  #304 = NameAndType        #221:#61      // found:()Z
  #305 = Methodref          #2.#304       // org/sireum/parser/JsonParser$Context.found:()Z
  #306 = NameAndType        #227:#76      // failIndex:()Lorg/sireum/Z;
  #307 = Methodref          #2.#306       // org/sireum/parser/JsonParser$Context.failIndex:()Lorg/sireum/Z;
  #308 = NameAndType        #233:#61      // isLexical:()Z
  #309 = Methodref          #2.#308       // org/sireum/parser/JsonParser$Context.isLexical:()Z
  #310 = NameAndType        #239:#104     // toString:()Ljava/lang/String;
  #311 = Methodref          #247.#310     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #312 = Utf8               sb
  #313 = Utf8               Ljava/lang/StringBuilder;
  #314 = Utf8               java/lang/String
  #315 = Class              #314          // java/lang/String
  #316 = Utf8               string
  #317 = Methodref          #2.#310       // org/sireum/parser/JsonParser$Context.toString:()Ljava/lang/String;
  #318 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #319 = NameAndType        #137:#318     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #320 = Methodref          #261.#319     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #321 = Utf8               hashCode
  #322 = NameAndType        #89:#61       // $hasEquals:()Z
  #323 = Methodref          #2.#322       // org/sireum/parser/JsonParser$Context.$hasEquals:()Z
  #324 = NameAndType        #321:#109     // hashCode:()I
  #325 = Methodref          #4.#324       // java/lang/Object.hashCode:()I
  #326 = Utf8               scala/package$
  #327 = Class              #326          // scala/package$
  #328 = Utf8               Lscala/package$;
  #329 = NameAndType        #133:#328     // MODULE$:Lscala/package$;
  #330 = Fieldref           #327.#329     // scala/package$.MODULE$:Lscala/package$;
  #331 = Utf8               Seq
  #332 = Utf8               ()Lscala/collection/immutable/Seq$;
  #333 = NameAndType        #331:#332     // Seq:()Lscala/collection/immutable/Seq$;
  #334 = Methodref          #327.#333     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #335 = Utf8               scala/runtime/ScalaRunTime$
  #336 = Class              #335          // scala/runtime/ScalaRunTime$
  #337 = Utf8               Lscala/runtime/ScalaRunTime$;
  #338 = NameAndType        #133:#337     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #339 = Fieldref           #336.#338     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #340 = Utf8               getClass
  #341 = Utf8               ()Ljava/lang/Class;
  #342 = NameAndType        #340:#341     // getClass:()Ljava/lang/Class;
  #343 = Methodref          #2.#342       // org/sireum/parser/JsonParser$Context.getClass:()Ljava/lang/Class;
  #344 = Utf8               java/lang/Class
  #345 = Class              #344          // java/lang/Class
  #346 = Utf8               getName
  #347 = NameAndType        #346:#104     // getName:()Ljava/lang/String;
  #348 = Methodref          #345.#347     // java/lang/Class.getName:()Ljava/lang/String;
  #349 = Utf8               genericWrapArray
  #350 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #351 = NameAndType        #349:#350     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #352 = Methodref          #336.#351     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #353 = Utf8               scala/collection/immutable/Seq$
  #354 = Class              #353          // scala/collection/immutable/Seq$
  #355 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #356 = NameAndType        #137:#355     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #357 = Methodref          #354.#356     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #358 = Utf8               scala/collection/Seq
  #359 = Class              #358          // scala/collection/Seq
  #360 = InterfaceMethodref #359.#324     // scala/collection/Seq.hashCode:()I
  #361 = Utf8               equals
  #362 = Utf8               (Ljava/lang/Object;)Z
  #363 = Utf8               o
  #364 = NameAndType        #361:#362     // equals:(Ljava/lang/Object;)Z
  #365 = Methodref          #4.#364       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #366 = Methodref          #2.#324       // org/sireum/parser/JsonParser$Context.hashCode:()I
  #367 = Utf8               Ljava/lang/Object;
  #368 = Utf8               org/sireum/IS
  #369 = Class              #368          // org/sireum/IS
  #370 = Utf8               org/sireum/Z
  #371 = Class              #370          // org/sireum/Z
  #372 = Utf8               (Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
  #373 = Utf8               (Ljava/lang/String;ILorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
  #374 = Utf8               (Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
  #375 = NameAndType        #248:#374     // "<init>":(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
  #376 = Methodref          #2.#375       // org/sireum/parser/JsonParser$Context."<init>":(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
  #377 = Utf8               apply$default$1
  #378 = Utf8               apply$default$2
  #379 = Utf8               apply$default$3
  #380 = Utf8               apply$default$4
  #381 = Utf8               apply$default$5
  #382 = Utf8               apply$default$6
  #383 = Utf8               apply$default$7
  #384 = Utf8               apply$default$8
  #385 = Utf8               apply$default$9
  #386 = Utf8               apply$default$10
  #387 = Utf8               apply$default$11
  #388 = Utf8               apply$default$12
  #389 = Utf8               $content
  #390 = Utf8               ()Lscala/collection/immutable/Seq;
  #391 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #392 = Utf8               scala/Tuple2
  #393 = Class              #392          // scala/Tuple2
  #394 = Utf8               type
  #395 = String             #394          // type
  #396 = Utf8               List
  #397 = Utf8               ()Lscala/collection/immutable/List$;
  #398 = NameAndType        #396:#397     // List:()Lscala/collection/immutable/List$;
  #399 = Methodref          #327.#398     // scala/package$.List:()Lscala/collection/immutable/List$;
  #400 = Utf8               org
  #401 = String             #400          // org
  #402 = Utf8               sireum
  #403 = String             #402          // sireum
  #404 = Utf8               parser
  #405 = String             #404          // parser
  #406 = Utf8               [Ljava/lang/Object;
  #407 = Class              #406          // "[Ljava/lang/Object;"
  #408 = Utf8               wrapRefArray
  #409 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #410 = NameAndType        #408:#409     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #411 = Methodref          #336.#410     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #412 = Utf8               scala/collection/immutable/List$
  #413 = Class              #412          // scala/collection/immutable/List$
  #414 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #415 = NameAndType        #137:#414     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #416 = Methodref          #413.#415     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #417 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #418 = NameAndType        #248:#417     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #419 = Methodref          #393.#418     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #420 = String             #103          // ruleName
  #421 = String             #108          // ruleType
  #422 = String             #113          // accepting
  #423 = String             #119          // state
  #424 = String             #126          // resOpt
  #425 = String             #193          // j
  #426 = String             #199          // max
  #427 = String             #205          // initial
  #428 = String             #212          // trees
  #429 = String             #221          // found
  #430 = String             #227          // failIndex
  #431 = String             #233          // isLexical
  #432 = Utf8               scala/collection/immutable/Seq
  #433 = Class              #432          // scala/collection/immutable/Seq
  #434 = Utf8               $clone
  #435 = Utf8               ()Lorg/sireum/parser/JsonParser$Context;
  #436 = Utf8               org/sireum/helper$
  #437 = Class              #436          // org/sireum/helper$
  #438 = Utf8               Lorg/sireum/helper$;
  #439 = NameAndType        #133:#438     // MODULE$:Lorg/sireum/helper$;
  #440 = Fieldref           #437.#439     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #441 = Utf8               cloneAssign
  #442 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #443 = NameAndType        #441:#442     // cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #444 = Methodref          #437.#443     // org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #445 = Utf8               value
  #446 = NameAndType        #445:#104     // value:()Ljava/lang/String;
  #447 = Methodref          #266.#446     // org/sireum/String.value:()Ljava/lang/String;
  #448 = NameAndType        #445:#109     // value:()I
  #449 = Methodref          #279.#448     // org/sireum/U32.value:()I
  #450 = NameAndType        #445:#76      // value:()Lorg/sireum/Z;
  #451 = Methodref          #14.#450      // org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
  #452 = NameAndType        #445:#61      // value:()Z
  #453 = Methodref          #297.#452     // org/sireum/B.value:()Z
  #454 = Utf8               r
  #455 = Utf8               updateTerminal
  #456 = Utf8               (Lorg/sireum/parser/ParseTree$Leaf;Lorg/sireum/Z;)V
  #457 = Utf8               token
  #458 = Utf8               newState
  #459 = Utf8               org/sireum/package$
  #460 = Class              #459          // org/sireum/package$
  #461 = Utf8               Lorg/sireum/package$;
  #462 = NameAndType        #133:#461     // MODULE$:Lorg/sireum/package$;
  #463 = Fieldref           #460.#462     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #464 = Utf8               T
  #465 = NameAndType        #464:#61      // T:()Z
  #466 = Methodref          #460.#465     // org/sireum/package$.T:()Z
  #467 = NameAndType        #225:#210     // found_$eq:(Z)Lorg/sireum/parser/JsonParser$Context;
  #468 = Methodref          #2.#467       // org/sireum/parser/JsonParser$Context.found_$eq:(Z)Lorg/sireum/parser/JsonParser$Context;
  #469 = Utf8               org/sireum/Z$
  #470 = Class              #469          // org/sireum/Z$
  #471 = Utf8               Lorg/sireum/Z$;
  #472 = NameAndType        #133:#471     // MODULE$:Lorg/sireum/Z$;
  #473 = Fieldref           #470.#472     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #474 = Utf8               (I)Lorg/sireum/Z;
  #475 = NameAndType        #137:#474     // apply:(I)Lorg/sireum/Z;
  #476 = Methodref          #470.#475     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #477 = Utf8               $plus
  #478 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #479 = NameAndType        #477:#478     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #480 = InterfaceMethodref #371.#479     // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #481 = NameAndType        #197:#124     // j_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
  #482 = Methodref          #2.#481       // org/sireum/parser/JsonParser$Context.j_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
  #483 = Utf8               F
  #484 = NameAndType        #483:#61      // F:()Z
  #485 = Methodref          #460.#484     // org/sireum/package$.F:()Z
  #486 = NameAndType        #209:#210     // initial_$eq:(Z)Lorg/sireum/parser/JsonParser$Context;
  #487 = Methodref          #2.#486       // org/sireum/parser/JsonParser$Context.initial_$eq:(Z)Lorg/sireum/parser/JsonParser$Context;
  #488 = NameAndType        #123:#124     // state_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
  #489 = Methodref          #2.#488       // org/sireum/parser/JsonParser$Context.state_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
  #490 = Utf8               $colon$plus
  #491 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #492 = NameAndType        #490:#491     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #493 = Methodref          #369.#492     // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #494 = NameAndType        #217:#218     // trees_$eq:(Lorg/sireum/IS;)Lorg/sireum/parser/JsonParser$Context;
  #495 = Methodref          #2.#494       // org/sireum/parser/JsonParser$Context.trees_$eq:(Lorg/sireum/IS;)Lorg/sireum/parser/JsonParser$Context;
  #496 = Utf8               org/sireum/B$
  #497 = Class              #496          // org/sireum/B$
  #498 = Utf8               Lorg/sireum/B$;
  #499 = NameAndType        #133:#498     // MODULE$:Lorg/sireum/B$;
  #500 = Fieldref           #497.#499     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #501 = NameAndType        #137:#442     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #502 = Methodref          #369.#501     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #503 = Utf8               $4B
  #504 = Utf8               (Z)Z
  #505 = NameAndType        #503:#504     // $4B:(Z)Z
  #506 = Methodref          #497.#505     // org/sireum/B$.$4B:(Z)Z
  #507 = Utf8               Lorg/sireum/parser/JsonParser$Result$;
  #508 = NameAndType        #133:#507     // MODULE$:Lorg/sireum/parser/JsonParser$Result$;
  #509 = Fieldref           #25.#508      // org/sireum/parser/JsonParser$Result$.MODULE$:Lorg/sireum/parser/JsonParser$Result$;
  #510 = Utf8               Lorg/sireum/parser/ParseTree$Node$;
  #511 = NameAndType        #133:#510     // MODULE$:Lorg/sireum/parser/ParseTree$Node$;
  #512 = Fieldref           #36.#511      // org/sireum/parser/ParseTree$Node$.MODULE$:Lorg/sireum/parser/ParseTree$Node$;
  #513 = Utf8               (Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
  #514 = NameAndType        #137:#513     // apply:(Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
  #515 = Methodref          #36.#514      // org/sireum/parser/ParseTree$Node$.apply:(Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
  #516 = Utf8               create
  #517 = Utf8               (Lorg/sireum/parser/ParseTree;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #518 = NameAndType        #516:#517     // create:(Lorg/sireum/parser/ParseTree;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #519 = Methodref          #25.#518      // org/sireum/parser/JsonParser$Result$.create:(Lorg/sireum/parser/ParseTree;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #520 = NameAndType        #154:#155     // resOpt_$eq:(Lorg/sireum/Option;)Lorg/sireum/parser/JsonParser$Context;
  #521 = Methodref          #2.#520       // org/sireum/parser/JsonParser$Context.resOpt_$eq:(Lorg/sireum/Option;)Lorg/sireum/parser/JsonParser$Context;
  #522 = Utf8               Lorg/sireum/parser/ParseTree$Leaf;
  #523 = Utf8               updateNonTerminal
  #524 = Utf8               (Lorg/sireum/parser/JsonParser$Result;Lorg/sireum/Z;)V
  #525 = Utf8               newIndex
  #526 = NameAndType        #525:#76      // newIndex:()Lorg/sireum/Z;
  #527 = Methodref          #22.#526      // org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
  #528 = Utf8               tree
  #529 = Utf8               ()Lorg/sireum/parser/ParseTree;
  #530 = NameAndType        #528:#529     // tree:()Lorg/sireum/parser/ParseTree;
  #531 = Methodref          #22.#530      // org/sireum/parser/JsonParser$Result.tree:()Lorg/sireum/parser/ParseTree;
  #532 = Utf8               (Z)Lorg/sireum/$internal/MutableMarker;
  #533 = NameAndType        #68:#69       // $owned_$eq:(Z)Lorg/sireum/RecordSig;
  #534 = Methodref          #2.#533       // org/sireum/parser/JsonParser$Context.$owned_$eq:(Z)Lorg/sireum/RecordSig;
  #535 = NameAndType        #434:#435     // $clone:()Lorg/sireum/parser/JsonParser$Context;
  #536 = Methodref          #2.#535       // org/sireum/parser/JsonParser$Context.$clone:()Lorg/sireum/parser/JsonParser$Context;
  #537 = Utf8               ()Lorg/sireum/$internal/MutableMarker;
  #538 = Utf8               $anonfun$_resOpt$1
  #539 = Utf8               (Ljava/lang/String;ILorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;ZLorg/sireum/Z;Z)V
  #540 = Utf8               __ruleName
  #541 = Utf8               __ruleType
  #542 = Utf8               __accepting
  #543 = Utf8               __state
  #544 = Utf8               __resOpt
  #545 = Utf8               __j
  #546 = Utf8               __max
  #547 = Utf8               __initial
  #548 = Utf8               __trees
  #549 = Utf8               __found
  #550 = Utf8               __failIndex
  #551 = Utf8               __isLexical
  #552 = Methodref          #4.#250       // java/lang/Object."<init>":()V
  #553 = Utf8               $init$
  #554 = Utf8               (Lorg/sireum/Mutable;)V
  #555 = NameAndType        #553:#554     // $init$:(Lorg/sireum/Mutable;)V
  #556 = InterfaceMethodref #84.#555      // org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
  #557 = Utf8               (Lorg/sireum/RecordSig;)V
  #558 = NameAndType        #553:#557     // $init$:(Lorg/sireum/RecordSig;)V
  #559 = InterfaceMethodref #6.#558       // org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
  #560 = NameAndType        #538:#165     // $anonfun$_resOpt$1:()Lorg/sireum/parser/JsonParser$Result;
  #561 = Methodref          #2.#560       // org/sireum/parser/JsonParser$Context.$anonfun$_resOpt$1:()Lorg/sireum/parser/JsonParser$Result;
  #562 = MethodHandle       6:#561        // REF_invokeStatic org/sireum/parser/JsonParser$Context.$anonfun$_resOpt$1:()Lorg/sireum/parser/JsonParser$Result;
  #563 = InvokeDynamic      #2:#180       // #2:apply:()Lscala/Function0;
  #564 = Utf8               $deserializeLambda$
  #565 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #566 = Utf8               scala/runtime/LambdaDeserialize
  #567 = Class              #566          // scala/runtime/LambdaDeserialize
  #568 = Utf8               bootstrap
  #569 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #570 = NameAndType        #568:#569     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #571 = Methodref          #567.#570     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #572 = MethodHandle       6:#571        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #573 = Utf8               lambdaDeserialize
  #574 = NameAndType        #573:#565     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #575 = InvokeDynamic      #3:#574       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #576 = Utf8               Signature
  #577 = Utf8               Code
  #578 = Utf8               LineNumberTable
  #579 = Utf8               LocalVariableTable
  #580 = Utf8               MethodParameters
  #581 = Utf8               StackMapTable
  #582 = Utf8               InnerClasses
  #583 = Utf8               SourceFile
  #584 = Utf8               BootstrapMethods
  #585 = Utf8               ScalaInlineInfo
  #586 = Utf8               Scala
{
  private java.lang.String _ruleName;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private int _ruleType;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B> _accepting;
    descriptor: Lorg/sireum/IS;
    flags: (0x0002) ACC_PRIVATE
    Signature: #44                          // Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;

  private org.sireum.Z _state;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private boolean _bresOpt;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.parser.JsonParser$Result _resOpt;
    descriptor: Lorg/sireum/parser/JsonParser$Result;
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.Z _j;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.Z _max;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private boolean _initial;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree> _trees;
    descriptor: Lorg/sireum/IS;
    flags: (0x0002) ACC_PRIVATE
    Signature: #55                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;

  private boolean _found;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.Z _failIndex;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private boolean _isLexical;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private boolean org$sireum$RecordSig$$$isOwned;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public final boolean $owned();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #65                 // InterfaceMethod org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public final org.sireum.RecordSig $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/RecordSig;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #74                 // InterfaceMethod org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #80                 // InterfaceMethod org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #88                 // InterfaceMethod org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #93                 // InterfaceMethod org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #97                 // InterfaceMethod org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public boolean org$sireum$RecordSig$$$isOwned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #99                 // Field org$sireum$RecordSig$$$isOwned:Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public void org$sireum$RecordSig$$$isOwned_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #99                 // Field org$sireum$RecordSig$$$isOwned:Z
         5: return
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String ruleName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field _ruleName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public java.lang.String getRuleName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field _ruleName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public int ruleType();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field _ruleType:I
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public int getRuleType();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field _ruleType:I
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B> accepting();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #117                // Field _accepting:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #115                         // ()Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;

  public org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B> getAccepting();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #117                // Field _accepting:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #115                         // ()Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;

  public org.sireum.Z state();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #121                // Field _state:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.Z getState();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #121                // Field _state:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.parser.JsonParser$Context state_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #121                // Field _state:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 state   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      state                          final

  public org.sireum.parser.JsonParser$Context setState(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #121                // Field _state:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 state   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      state                          final

  public org.sireum.Option<org.sireum.parser.JsonParser$Result> resOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #130                // Field _bresOpt:Z
         4: ifeq          16
         7: getstatic     #136                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #140                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #145                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #147                // Field _resOpt:Lorg/sireum/parser/JsonParser$Result;
        23: invokevirtual #150                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #128                         // ()Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;

  public org.sireum.Option<org.sireum.parser.JsonParser$Result> getResOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #153                // Method resOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #128                         // ()Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;

  public org.sireum.parser.JsonParser$Context resOpt_$eq(org.sireum.Option<org.sireum.parser.JsonParser$Result>);
    descriptor: (Lorg/sireum/Option;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #161,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
         7: putfield      #130                // Field _bresOpt:Z
        10: aload_0
        11: aload_1
        12: invokedynamic #181,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        17: invokeinterface #185,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        22: checkcast     #22                 // class org/sireum/parser/JsonParser$Result
        25: putfield      #147                // Field _resOpt:Lorg/sireum/parser/JsonParser$Result;
        28: aload_0
        29: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/sireum/parser/JsonParser$Context;
            0      30     1 resOpt   Lorg/sireum/Option;
    Signature: #156                         // (Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;)Lorg/sireum/parser/JsonParser$Context;
    MethodParameters:
      Name                           Flags
      resOpt                         final

  public org.sireum.parser.JsonParser$Context setResOpt(org.sireum.Option<org.sireum.parser.JsonParser$Result>);
    descriptor: (Lorg/sireum/Option;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #161,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
         7: putfield      #130                // Field _bresOpt:Z
        10: aload_0
        11: aload_1
        12: invokedynamic #192,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
        17: invokeinterface #185,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        22: checkcast     #22                 // class org/sireum/parser/JsonParser$Result
        25: putfield      #147                // Field _resOpt:Lorg/sireum/parser/JsonParser$Result;
        28: aload_0
        29: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/sireum/parser/JsonParser$Context;
            0      30     1 resOpt   Lorg/sireum/Option;
    Signature: #156                         // (Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;)Lorg/sireum/parser/JsonParser$Context;
    MethodParameters:
      Name                           Flags
      resOpt                         final

  public org.sireum.Z j();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #195                // Field _j:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.Z getJ();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #195                // Field _j:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.parser.JsonParser$Context j_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #195                // Field _j:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      j                              final

  public org.sireum.parser.JsonParser$Context setJ(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #195                // Field _j:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      j                              final

  public org.sireum.Z max();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #201                // Field _max:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.Z getMax();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #201                // Field _max:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.parser.JsonParser$Context max_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #201                // Field _max:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1   max   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      max                            final

  public org.sireum.parser.JsonParser$Context setMax(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #201                // Field _max:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1   max   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      max                            final

  public boolean initial();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #207                // Field _initial:Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public boolean getInitial();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #207                // Field _initial:Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.parser.JsonParser$Context initial_$eq(boolean);
    descriptor: (Z)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #207                // Field _initial:Z
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 initial   Z
    MethodParameters:
      Name                           Flags
      initial                        final

  public org.sireum.parser.JsonParser$Context setInitial(boolean);
    descriptor: (Z)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #207                // Field _initial:Z
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 initial   Z
    MethodParameters:
      Name                           Flags
      initial                        final

  public org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree> trees();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #215                // Field _trees:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #213                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree> getTrees();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #215                // Field _trees:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #213                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;

  public org.sireum.parser.JsonParser$Context trees_$eq(org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #215                // Field _trees:Lorg/sireum/IS;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 trees   Lorg/sireum/IS;
    Signature: #219                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;)Lorg/sireum/parser/JsonParser$Context;
    MethodParameters:
      Name                           Flags
      trees                          final

  public org.sireum.parser.JsonParser$Context setTrees(org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #215                // Field _trees:Lorg/sireum/IS;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 trees   Lorg/sireum/IS;
    Signature: #219                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;)Lorg/sireum/parser/JsonParser$Context;
    MethodParameters:
      Name                           Flags
      trees                          final

  public boolean found();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #223                // Field _found:Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public boolean getFound();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #223                // Field _found:Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.parser.JsonParser$Context found_$eq(boolean);
    descriptor: (Z)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #223                // Field _found:Z
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 found   Z
    MethodParameters:
      Name                           Flags
      found                          final

  public org.sireum.parser.JsonParser$Context setFound(boolean);
    descriptor: (Z)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #223                // Field _found:Z
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 found   Z
    MethodParameters:
      Name                           Flags
      found                          final

  public org.sireum.Z failIndex();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #229                // Field _failIndex:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.Z getFailIndex();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #229                // Field _failIndex:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.parser.JsonParser$Context failIndex_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #229                // Field _failIndex:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 failIndex   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      failIndex                      final

  public org.sireum.parser.JsonParser$Context setFailIndex(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #229                // Field _failIndex:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 failIndex   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      failIndex                      final

  public boolean isLexical();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #235                // Field _isLexical:Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public boolean getIsLexical();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #235                // Field _isLexical:Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.parser.JsonParser$Context isLexical_$eq(boolean);
    descriptor: (Z)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #235                // Field _isLexical:Z
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 isLexical   Z
    MethodParameters:
      Name                           Flags
      isLexical                      final

  public org.sireum.parser.JsonParser$Context setIsLexical(boolean);
    descriptor: (Z)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #235                // Field _isLexical:Z
         5: aload_0
         6: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       7     1 isLexical   Z
    MethodParameters:
      Name                           Flags
      isLexical                      final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #241                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #245                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          357
        14: new           #247                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #251                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #252                // String Context
        25: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #259                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #266                // class org/sireum/String
        43: dup
        44: aload_0
        45: invokevirtual #268                // Method ruleName:()Ljava/lang/String;
        48: invokespecial #271                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        51: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: ldc_w         #277                // String ,
        62: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        65: pop
        66: aload_1
        67: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        70: new           #279                // class org/sireum/U32
        73: dup
        74: aload_0
        75: invokevirtual #281                // Method ruleType:()I
        78: invokespecial #284                // Method org/sireum/U32."<init>":(I)V
        81: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        84: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        87: pop
        88: aload_1
        89: ldc_w         #277                // String ,
        92: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        95: pop
        96: aload_1
        97: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       100: aload_0
       101: invokevirtual #286                // Method accepting:()Lorg/sireum/IS;
       104: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       107: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       110: pop
       111: aload_1
       112: ldc_w         #277                // String ,
       115: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       118: pop
       119: aload_1
       120: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       123: new           #14                 // class org/sireum/parser/Json$State
       126: dup
       127: aload_0
       128: invokevirtual #288                // Method state:()Lorg/sireum/Z;
       131: invokespecial #291                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
       134: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       137: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       140: pop
       141: aload_1
       142: ldc_w         #277                // String ,
       145: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       148: pop
       149: aload_1
       150: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       153: aload_0
       154: invokevirtual #153                // Method resOpt:()Lorg/sireum/Option;
       157: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       160: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       163: pop
       164: aload_1
       165: ldc_w         #277                // String ,
       168: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       171: pop
       172: aload_1
       173: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       176: aload_0
       177: invokevirtual #293                // Method j:()Lorg/sireum/Z;
       180: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       183: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       186: pop
       187: aload_1
       188: ldc_w         #277                // String ,
       191: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       194: pop
       195: aload_1
       196: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       199: aload_0
       200: invokevirtual #295                // Method max:()Lorg/sireum/Z;
       203: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       206: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       209: pop
       210: aload_1
       211: ldc_w         #277                // String ,
       214: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       217: pop
       218: aload_1
       219: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       222: new           #297                // class org/sireum/B
       225: dup
       226: aload_0
       227: invokevirtual #299                // Method initial:()Z
       230: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       233: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       236: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       239: pop
       240: aload_1
       241: ldc_w         #277                // String ,
       244: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       247: pop
       248: aload_1
       249: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       252: aload_0
       253: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
       256: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       259: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       262: pop
       263: aload_1
       264: ldc_w         #277                // String ,
       267: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       270: pop
       271: aload_1
       272: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       275: new           #297                // class org/sireum/B
       278: dup
       279: aload_0
       280: invokevirtual #305                // Method found:()Z
       283: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       286: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       289: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       292: pop
       293: aload_1
       294: ldc_w         #277                // String ,
       297: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       300: pop
       301: aload_1
       302: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       305: aload_0
       306: invokevirtual #307                // Method failIndex:()Lorg/sireum/Z;
       309: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       312: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       315: pop
       316: aload_1
       317: ldc_w         #277                // String ,
       320: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       323: pop
       324: aload_1
       325: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       328: new           #297                // class org/sireum/B
       331: dup
       332: aload_0
       333: invokevirtual #309                // Method isLexical:()Z
       336: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       339: invokevirtual #275                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       342: invokevirtual #256                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       345: pop
       346: aload_1
       347: bipush        41
       349: invokevirtual #259                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       352: pop
       353: aload_1
       354: invokevirtual #311                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       357: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 342
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22     335     1    sb   Ljava/lang/StringBuilder;
            0     358     0  this   Lorg/sireum/parser/JsonParser$Context;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #241                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #245                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #264                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #317                // Method toString:()Ljava/lang/String;
        21: invokevirtual #320                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/parser/JsonParser$Context;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #323                // Method $hasEquals:()Z
         4: ifeq          14
         7: aload_0
         8: invokespecial #325                // Method java/lang/Object.hashCode:()I
        11: goto          185
        14: getstatic     #330                // Field scala/package$.MODULE$:Lscala/package$;
        17: invokevirtual #334                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        20: getstatic     #339                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        23: bipush        13
        25: anewarray     #4                  // class java/lang/Object
        28: dup
        29: iconst_0
        30: aload_0
        31: invokevirtual #343                // Method getClass:()Ljava/lang/Class;
        34: invokevirtual #348                // Method java/lang/Class.getName:()Ljava/lang/String;
        37: aastore
        38: dup
        39: iconst_1
        40: new           #266                // class org/sireum/String
        43: dup
        44: aload_0
        45: invokevirtual #268                // Method ruleName:()Ljava/lang/String;
        48: invokespecial #271                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        51: aastore
        52: dup
        53: iconst_2
        54: new           #279                // class org/sireum/U32
        57: dup
        58: aload_0
        59: invokevirtual #281                // Method ruleType:()I
        62: invokespecial #284                // Method org/sireum/U32."<init>":(I)V
        65: aastore
        66: dup
        67: iconst_3
        68: aload_0
        69: invokevirtual #286                // Method accepting:()Lorg/sireum/IS;
        72: aastore
        73: dup
        74: iconst_4
        75: new           #14                 // class org/sireum/parser/Json$State
        78: dup
        79: aload_0
        80: invokevirtual #288                // Method state:()Lorg/sireum/Z;
        83: invokespecial #291                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        86: aastore
        87: dup
        88: iconst_5
        89: aload_0
        90: invokevirtual #153                // Method resOpt:()Lorg/sireum/Option;
        93: aastore
        94: dup
        95: bipush        6
        97: aload_0
        98: invokevirtual #293                // Method j:()Lorg/sireum/Z;
       101: aastore
       102: dup
       103: bipush        7
       105: aload_0
       106: invokevirtual #295                // Method max:()Lorg/sireum/Z;
       109: aastore
       110: dup
       111: bipush        8
       113: new           #297                // class org/sireum/B
       116: dup
       117: aload_0
       118: invokevirtual #299                // Method initial:()Z
       121: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       124: aastore
       125: dup
       126: bipush        9
       128: aload_0
       129: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
       132: aastore
       133: dup
       134: bipush        10
       136: new           #297                // class org/sireum/B
       139: dup
       140: aload_0
       141: invokevirtual #305                // Method found:()Z
       144: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       147: aastore
       148: dup
       149: bipush        11
       151: aload_0
       152: invokevirtual #307                // Method failIndex:()Lorg/sireum/Z;
       155: aastore
       156: dup
       157: bipush        12
       159: new           #297                // class org/sireum/B
       162: dup
       163: aload_0
       164: invokevirtual #309                // Method isLexical:()Z
       167: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       170: aastore
       171: invokevirtual #352                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       174: invokevirtual #357                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       177: checkcast     #359                // class scala/collection/Seq
       180: invokeinterface #360,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
       185: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 170
          stack = [ int ]
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     186     0  this   Lorg/sireum/parser/JsonParser$Context;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=13, args_size=2
         0: aload_0
         1: invokevirtual #323                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #365                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          377
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          377
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/parser/JsonParser$Context
        30: ifeq          368
        33: aload_3
        34: checkcast     #2                  // class org/sireum/parser/JsonParser$Context
        37: astore        4
        39: aload_0
        40: invokevirtual #366                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #366                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          364
        55: aload_0
        56: invokevirtual #268                // Method ruleName:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #268                // Method ruleName:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          363
        79: aload         5
        81: invokevirtual #365                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          363
        87: aload_0
        88: invokevirtual #281                // Method ruleType:()I
        91: aload         4
        93: invokevirtual #281                // Method ruleType:()I
        96: if_icmpne     363
        99: aload_0
       100: invokevirtual #286                // Method accepting:()Lorg/sireum/IS;
       103: aload         4
       105: invokevirtual #286                // Method accepting:()Lorg/sireum/IS;
       108: astore        6
       110: dup
       111: ifnonnull     123
       114: pop
       115: aload         6
       117: ifnull        131
       120: goto          363
       123: aload         6
       125: invokevirtual #365                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       128: ifeq          363
       131: aload_0
       132: invokevirtual #288                // Method state:()Lorg/sireum/Z;
       135: aload         4
       137: invokevirtual #288                // Method state:()Lorg/sireum/Z;
       140: astore        7
       142: dup
       143: ifnonnull     155
       146: pop
       147: aload         7
       149: ifnull        163
       152: goto          363
       155: aload         7
       157: invokevirtual #365                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       160: ifeq          363
       163: aload_0
       164: invokevirtual #153                // Method resOpt:()Lorg/sireum/Option;
       167: aload         4
       169: invokevirtual #153                // Method resOpt:()Lorg/sireum/Option;
       172: astore        8
       174: dup
       175: ifnonnull     187
       178: pop
       179: aload         8
       181: ifnull        195
       184: goto          363
       187: aload         8
       189: invokevirtual #365                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       192: ifeq          363
       195: aload_0
       196: invokevirtual #293                // Method j:()Lorg/sireum/Z;
       199: aload         4
       201: invokevirtual #293                // Method j:()Lorg/sireum/Z;
       204: astore        9
       206: dup
       207: ifnonnull     219
       210: pop
       211: aload         9
       213: ifnull        227
       216: goto          363
       219: aload         9
       221: invokevirtual #365                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       224: ifeq          363
       227: aload_0
       228: invokevirtual #295                // Method max:()Lorg/sireum/Z;
       231: aload         4
       233: invokevirtual #295                // Method max:()Lorg/sireum/Z;
       236: astore        10
       238: dup
       239: ifnonnull     251
       242: pop
       243: aload         10
       245: ifnull        259
       248: goto          363
       251: aload         10
       253: invokevirtual #365                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       256: ifeq          363
       259: aload_0
       260: invokevirtual #299                // Method initial:()Z
       263: aload         4
       265: invokevirtual #299                // Method initial:()Z
       268: if_icmpne     363
       271: aload_0
       272: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
       275: aload         4
       277: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
       280: astore        11
       282: dup
       283: ifnonnull     295
       286: pop
       287: aload         11
       289: ifnull        303
       292: goto          363
       295: aload         11
       297: invokevirtual #365                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       300: ifeq          363
       303: aload_0
       304: invokevirtual #305                // Method found:()Z
       307: aload         4
       309: invokevirtual #305                // Method found:()Z
       312: if_icmpne     363
       315: aload_0
       316: invokevirtual #307                // Method failIndex:()Lorg/sireum/Z;
       319: aload         4
       321: invokevirtual #307                // Method failIndex:()Lorg/sireum/Z;
       324: astore        12
       326: dup
       327: ifnonnull     339
       330: pop
       331: aload         12
       333: ifnull        347
       336: goto          363
       339: aload         12
       341: invokevirtual #365                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       344: ifeq          363
       347: aload_0
       348: invokevirtual #309                // Method isLexical:()Z
       351: aload         4
       353: invokevirtual #309                // Method isLexical:()Z
       356: if_icmpne     363
       359: iconst_1
       360: goto          364
       363: iconst_0
       364: istore_2
       365: goto          376
       368: goto          371
       371: iconst_0
       372: istore_2
       373: goto          376
       376: iload_2
       377: ireturn
      StackMapTable: number_of_entries = 25
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/parser/JsonParser$Context ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context, class java/lang/String, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context, class java/lang/String, class org/sireum/IS, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context, class java/lang/String, class org/sireum/IS, class org/sireum/Z, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context, class java/lang/String, class org/sireum/IS, class org/sireum/Z, class org/sireum/Option, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context, class java/lang/String, class org/sireum/IS, class org/sireum/Z, class org/sireum/Option, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context, class java/lang/String, class org/sireum/IS, class org/sireum/Z, class org/sireum/Option, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context, class java/lang/String, class org/sireum/IS, class org/sireum/Z, class org/sireum/Option, class org/sireum/Z, class org/sireum/Z, class org/sireum/IS, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$Context ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/JsonParser$Context, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     378     0  this   Lorg/sireum/parser/JsonParser$Context;
            0     378     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.parser.JsonParser$Context apply(java.lang.String, int, org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B>, org.sireum.Z, org.sireum.Option<org.sireum.parser.JsonParser$Result>, org.sireum.Z, org.sireum.Z, boolean, org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree>, boolean, org.sireum.Z, boolean);
    descriptor: (Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=13, args_size=13
         0: new           #2                  // class org/sireum/parser/JsonParser$Context
         3: dup
         4: aload_1
         5: iload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: aload         7
        15: iload         8
        17: aload         9
        19: iload         10
        21: aload         11
        23: iload         12
        25: invokespecial #376                // Method "<init>":(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
        28: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/sireum/parser/JsonParser$Context;
            0      29     1 ruleName   Ljava/lang/String;
            0      29     2 ruleType   I
            0      29     3 accepting   Lorg/sireum/IS;
            0      29     4 state   Lorg/sireum/Z;
            0      29     5 resOpt   Lorg/sireum/Option;
            0      29     6     j   Lorg/sireum/Z;
            0      29     7   max   Lorg/sireum/Z;
            0      29     8 initial   Z
            0      29     9 trees   Lorg/sireum/IS;
            0      29    10 found   Z
            0      29    11 failIndex   Lorg/sireum/Z;
            0      29    12 isLexical   Z
    Signature: #373                         // (Ljava/lang/String;ILorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
    MethodParameters:
      Name                           Flags
      ruleName                       final
      ruleType                       final
      accepting                      final
      state                          final
      resOpt                         final
      j                              final
      max                            final
      initial                        final
      trees                          final
      found                          final
      failIndex                      final
      isLexical                      final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #268                // Method ruleName:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public int apply$default$2();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #281                // Method ruleType:()I
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B> apply$default$3();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #286                // Method accepting:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #115                         // ()Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;

  public org.sireum.Z apply$default$4();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #288                // Method state:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.Option<org.sireum.parser.JsonParser$Result> apply$default$5();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #153                // Method resOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #128                         // ()Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;

  public org.sireum.Z apply$default$6();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #293                // Method j:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.Z apply$default$7();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #295                // Method max:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public boolean apply$default$8();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #299                // Method initial:()Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree> apply$default$9();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #213                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;

  public boolean apply$default$10();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #305                // Method found:()Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.Z apply$default$11();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #307                // Method failIndex:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public boolean apply$default$12();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #309                // Method isLexical:()Z
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=1, args_size=1
         0: getstatic     #330                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #334                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         6: getstatic     #339                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: bipush        13
        11: anewarray     #393                // class scala/Tuple2
        14: dup
        15: iconst_0
        16: new           #393                // class scala/Tuple2
        19: dup
        20: ldc_w         #395                // String type
        23: getstatic     #330                // Field scala/package$.MODULE$:Lscala/package$;
        26: invokevirtual #399                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        29: getstatic     #339                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        32: iconst_4
        33: anewarray     #315                // class java/lang/String
        36: dup
        37: iconst_0
        38: ldc_w         #401                // String org
        41: aastore
        42: dup
        43: iconst_1
        44: ldc_w         #403                // String sireum
        47: aastore
        48: dup
        49: iconst_2
        50: ldc_w         #405                // String parser
        53: aastore
        54: dup
        55: iconst_3
        56: ldc           #252                // String Context
        58: aastore
        59: checkcast     #407                // class "[Ljava/lang/Object;"
        62: invokevirtual #411                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        65: invokevirtual #416                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        68: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        71: aastore
        72: dup
        73: iconst_1
        74: new           #393                // class scala/Tuple2
        77: dup
        78: ldc_w         #420                // String ruleName
        81: new           #266                // class org/sireum/String
        84: dup
        85: aload_0
        86: invokevirtual #268                // Method ruleName:()Ljava/lang/String;
        89: invokespecial #271                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        92: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        95: aastore
        96: dup
        97: iconst_2
        98: new           #393                // class scala/Tuple2
       101: dup
       102: ldc_w         #421                // String ruleType
       105: new           #279                // class org/sireum/U32
       108: dup
       109: aload_0
       110: invokevirtual #281                // Method ruleType:()I
       113: invokespecial #284                // Method org/sireum/U32."<init>":(I)V
       116: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       119: aastore
       120: dup
       121: iconst_3
       122: new           #393                // class scala/Tuple2
       125: dup
       126: ldc_w         #422                // String accepting
       129: aload_0
       130: invokevirtual #286                // Method accepting:()Lorg/sireum/IS;
       133: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       136: aastore
       137: dup
       138: iconst_4
       139: new           #393                // class scala/Tuple2
       142: dup
       143: ldc_w         #423                // String state
       146: new           #14                 // class org/sireum/parser/Json$State
       149: dup
       150: aload_0
       151: invokevirtual #288                // Method state:()Lorg/sireum/Z;
       154: invokespecial #291                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
       157: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       160: aastore
       161: dup
       162: iconst_5
       163: new           #393                // class scala/Tuple2
       166: dup
       167: ldc_w         #424                // String resOpt
       170: aload_0
       171: invokevirtual #153                // Method resOpt:()Lorg/sireum/Option;
       174: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       177: aastore
       178: dup
       179: bipush        6
       181: new           #393                // class scala/Tuple2
       184: dup
       185: ldc_w         #425                // String j
       188: aload_0
       189: invokevirtual #293                // Method j:()Lorg/sireum/Z;
       192: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       195: aastore
       196: dup
       197: bipush        7
       199: new           #393                // class scala/Tuple2
       202: dup
       203: ldc_w         #426                // String max
       206: aload_0
       207: invokevirtual #295                // Method max:()Lorg/sireum/Z;
       210: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       213: aastore
       214: dup
       215: bipush        8
       217: new           #393                // class scala/Tuple2
       220: dup
       221: ldc_w         #427                // String initial
       224: new           #297                // class org/sireum/B
       227: dup
       228: aload_0
       229: invokevirtual #299                // Method initial:()Z
       232: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       235: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       238: aastore
       239: dup
       240: bipush        9
       242: new           #393                // class scala/Tuple2
       245: dup
       246: ldc_w         #428                // String trees
       249: aload_0
       250: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
       253: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       256: aastore
       257: dup
       258: bipush        10
       260: new           #393                // class scala/Tuple2
       263: dup
       264: ldc_w         #429                // String found
       267: new           #297                // class org/sireum/B
       270: dup
       271: aload_0
       272: invokevirtual #305                // Method found:()Z
       275: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       278: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       281: aastore
       282: dup
       283: bipush        11
       285: new           #393                // class scala/Tuple2
       288: dup
       289: ldc_w         #430                // String failIndex
       292: aload_0
       293: invokevirtual #307                // Method failIndex:()Lorg/sireum/Z;
       296: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       299: aastore
       300: dup
       301: bipush        12
       303: new           #393                // class scala/Tuple2
       306: dup
       307: ldc_w         #431                // String isLexical
       310: new           #297                // class org/sireum/B
       313: dup
       314: aload_0
       315: invokevirtual #309                // Method isLexical:()Z
       318: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       321: invokespecial #419                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       324: aastore
       325: checkcast     #407                // class "[Ljava/lang/Object;"
       328: invokevirtual #411                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       331: invokevirtual #357                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       334: checkcast     #433                // class scala/collection/immutable/Seq
       337: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     338     0  this   Lorg/sireum/parser/JsonParser$Context;
    Signature: #391                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.parser.JsonParser$Context $clone();
    descriptor: ()Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=17, locals=2, args_size=1
         0: new           #2                  // class org/sireum/parser/JsonParser$Context
         3: dup
         4: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         7: new           #266                // class org/sireum/String
        10: dup
        11: aload_0
        12: invokevirtual #268                // Method ruleName:()Ljava/lang/String;
        15: invokespecial #271                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        18: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        21: checkcast     #266                // class org/sireum/String
        24: invokevirtual #447                // Method org/sireum/String.value:()Ljava/lang/String;
        27: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        30: new           #279                // class org/sireum/U32
        33: dup
        34: aload_0
        35: invokevirtual #281                // Method ruleType:()I
        38: invokespecial #284                // Method org/sireum/U32."<init>":(I)V
        41: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        44: checkcast     #279                // class org/sireum/U32
        47: invokevirtual #449                // Method org/sireum/U32.value:()I
        50: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        53: aload_0
        54: invokevirtual #286                // Method accepting:()Lorg/sireum/IS;
        57: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        60: checkcast     #369                // class org/sireum/IS
        63: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        66: new           #14                 // class org/sireum/parser/Json$State
        69: dup
        70: aload_0
        71: invokevirtual #288                // Method state:()Lorg/sireum/Z;
        74: invokespecial #291                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        77: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        80: checkcast     #14                 // class org/sireum/parser/Json$State
        83: invokevirtual #451                // Method org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
        86: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        89: aload_0
        90: invokevirtual #153                // Method resOpt:()Lorg/sireum/Option;
        93: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        96: checkcast     #158                // class org/sireum/Option
        99: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       102: aload_0
       103: invokevirtual #293                // Method j:()Lorg/sireum/Z;
       106: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
       109: checkcast     #371                // class org/sireum/Z
       112: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       115: aload_0
       116: invokevirtual #295                // Method max:()Lorg/sireum/Z;
       119: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
       122: checkcast     #371                // class org/sireum/Z
       125: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       128: new           #297                // class org/sireum/B
       131: dup
       132: aload_0
       133: invokevirtual #299                // Method initial:()Z
       136: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       139: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
       142: checkcast     #297                // class org/sireum/B
       145: invokevirtual #453                // Method org/sireum/B.value:()Z
       148: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       151: aload_0
       152: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
       155: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
       158: checkcast     #369                // class org/sireum/IS
       161: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       164: new           #297                // class org/sireum/B
       167: dup
       168: aload_0
       169: invokevirtual #305                // Method found:()Z
       172: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       175: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
       178: checkcast     #297                // class org/sireum/B
       181: invokevirtual #453                // Method org/sireum/B.value:()Z
       184: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       187: aload_0
       188: invokevirtual #307                // Method failIndex:()Lorg/sireum/Z;
       191: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
       194: checkcast     #371                // class org/sireum/Z
       197: getstatic     #440                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       200: new           #297                // class org/sireum/B
       203: dup
       204: aload_0
       205: invokevirtual #309                // Method isLexical:()Z
       208: invokespecial #301                // Method org/sireum/B."<init>":(Z)V
       211: invokevirtual #444                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
       214: checkcast     #297                // class org/sireum/B
       217: invokevirtual #453                // Method org/sireum/B.value:()Z
       220: invokespecial #376                // Method "<init>":(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
       223: astore_1
       224: aload_1
       225: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          224       1     1     r   Lorg/sireum/parser/JsonParser$Context;
            0     226     0  this   Lorg/sireum/parser/JsonParser$Context;

  public void updateTerminal(org.sireum.parser.ParseTree$Leaf, org.sireum.Z);
    descriptor: (Lorg/sireum/parser/ParseTree$Leaf;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=3
         0: aload_0
         1: getstatic     #463                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #466                // Method org/sireum/package$.T:()Z
         7: invokevirtual #468                // Method found_$eq:(Z)Lorg/sireum/parser/JsonParser$Context;
        10: pop
        11: aload_0
        12: aload_0
        13: invokevirtual #293                // Method j:()Lorg/sireum/Z;
        16: getstatic     #473                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        19: iconst_1
        20: invokevirtual #476                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        23: invokeinterface #480,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        28: invokevirtual #482                // Method j_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
        31: pop
        32: aload_0
        33: getstatic     #463                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        36: invokevirtual #485                // Method org/sireum/package$.F:()Z
        39: invokevirtual #487                // Method initial_$eq:(Z)Lorg/sireum/parser/JsonParser$Context;
        42: pop
        43: aload_0
        44: aload_2
        45: invokevirtual #489                // Method state_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
        48: pop
        49: aload_0
        50: aload_0
        51: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
        54: aload_1
        55: invokevirtual #493                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        58: invokevirtual #495                // Method trees_$eq:(Lorg/sireum/IS;)Lorg/sireum/parser/JsonParser$Context;
        61: pop
        62: getstatic     #500                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        65: aload_0
        66: invokevirtual #286                // Method accepting:()Lorg/sireum/IS;
        69: new           #14                 // class org/sireum/parser/Json$State
        72: dup
        73: aload_0
        74: invokevirtual #288                // Method state:()Lorg/sireum/Z;
        77: invokespecial #291                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        80: invokevirtual #502                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        83: checkcast     #297                // class org/sireum/B
        86: invokevirtual #453                // Method org/sireum/B.value:()Z
        89: invokevirtual #506                // Method org/sireum/B$.$4B:(Z)Z
        92: ifeq          137
        95: aload_0
        96: getstatic     #145                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        99: getstatic     #509                // Field org/sireum/parser/JsonParser$Result$.MODULE$:Lorg/sireum/parser/JsonParser$Result$;
       102: getstatic     #512                // Field org/sireum/parser/ParseTree$Node$.MODULE$:Lorg/sireum/parser/ParseTree$Node$;
       105: aload_0
       106: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
       109: aload_0
       110: invokevirtual #268                // Method ruleName:()Ljava/lang/String;
       113: aload_0
       114: invokevirtual #281                // Method ruleType:()I
       117: invokevirtual #515                // Method org/sireum/parser/ParseTree$Node$.apply:(Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
       120: aload_0
       121: invokevirtual #293                // Method j:()Lorg/sireum/Z;
       124: invokevirtual #519                // Method org/sireum/parser/JsonParser$Result$.create:(Lorg/sireum/parser/ParseTree;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
       127: invokevirtual #150                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
       130: invokevirtual #521                // Method resOpt_$eq:(Lorg/sireum/Option;)Lorg/sireum/parser/JsonParser$Context;
       133: pop
       134: goto          137
       137: return
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 137
      LineNumberTable:
        line 82: 0
        line 83: 11
        line 84: 32
        line 85: 43
        line 86: 49
        line 87: 62
        line 88: 95
        line 87: 137
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     138     0  this   Lorg/sireum/parser/JsonParser$Context;
            0     138     1 token   Lorg/sireum/parser/ParseTree$Leaf;
            0     138     2 newState   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      token                          final
      newState                       final

  public void updateNonTerminal(org.sireum.parser.JsonParser$Result, org.sireum.Z);
    descriptor: (Lorg/sireum/parser/JsonParser$Result;Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=3
         0: aload_0
         1: getstatic     #463                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         4: invokevirtual #466                // Method org/sireum/package$.T:()Z
         7: invokevirtual #468                // Method found_$eq:(Z)Lorg/sireum/parser/JsonParser$Context;
        10: pop
        11: aload_0
        12: getstatic     #463                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        15: invokevirtual #485                // Method org/sireum/package$.F:()Z
        18: invokevirtual #487                // Method initial_$eq:(Z)Lorg/sireum/parser/JsonParser$Context;
        21: pop
        22: aload_0
        23: aload_1
        24: invokevirtual #527                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
        27: invokevirtual #482                // Method j_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
        30: pop
        31: aload_0
        32: aload_2
        33: invokevirtual #489                // Method state_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
        36: pop
        37: aload_0
        38: aload_0
        39: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
        42: aload_1
        43: invokevirtual #531                // Method org/sireum/parser/JsonParser$Result.tree:()Lorg/sireum/parser/ParseTree;
        46: invokevirtual #493                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        49: invokevirtual #495                // Method trees_$eq:(Lorg/sireum/IS;)Lorg/sireum/parser/JsonParser$Context;
        52: pop
        53: getstatic     #500                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        56: aload_0
        57: invokevirtual #286                // Method accepting:()Lorg/sireum/IS;
        60: new           #14                 // class org/sireum/parser/Json$State
        63: dup
        64: aload_0
        65: invokevirtual #288                // Method state:()Lorg/sireum/Z;
        68: invokespecial #291                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        71: invokevirtual #502                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        74: checkcast     #297                // class org/sireum/B
        77: invokevirtual #453                // Method org/sireum/B.value:()Z
        80: invokevirtual #506                // Method org/sireum/B$.$4B:(Z)Z
        83: ifeq          128
        86: aload_0
        87: getstatic     #145                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        90: getstatic     #509                // Field org/sireum/parser/JsonParser$Result$.MODULE$:Lorg/sireum/parser/JsonParser$Result$;
        93: getstatic     #512                // Field org/sireum/parser/ParseTree$Node$.MODULE$:Lorg/sireum/parser/ParseTree$Node$;
        96: aload_0
        97: invokevirtual #303                // Method trees:()Lorg/sireum/IS;
       100: aload_0
       101: invokevirtual #268                // Method ruleName:()Ljava/lang/String;
       104: aload_0
       105: invokevirtual #281                // Method ruleType:()I
       108: invokevirtual #515                // Method org/sireum/parser/ParseTree$Node$.apply:(Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
       111: aload_0
       112: invokevirtual #293                // Method j:()Lorg/sireum/Z;
       115: invokevirtual #519                // Method org/sireum/parser/JsonParser$Result$.create:(Lorg/sireum/parser/ParseTree;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
       118: invokevirtual #150                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
       121: invokevirtual #521                // Method resOpt_$eq:(Lorg/sireum/Option;)Lorg/sireum/parser/JsonParser$Context;
       124: pop
       125: goto          128
       128: return
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 128
      LineNumberTable:
        line 93: 0
        line 94: 11
        line 95: 22
        line 96: 31
        line 97: 37
        line 98: 53
        line 99: 86
        line 98: 128
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     129     0  this   Lorg/sireum/parser/JsonParser$Context;
            0     129     1     r   Lorg/sireum/parser/JsonParser$Result;
            0     129     2 newState   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      r                              final
      newState                       final

  public final org.sireum.$internal.MutableMarker $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/$internal/MutableMarker;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #534                // Method $owned_$eq:(Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/JsonParser$Context;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #536                // Method $clone:()Lorg/sireum/parser/JsonParser$Context;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public org.sireum.$internal.MutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/MutableMarker;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #536                // Method $clone:()Lorg/sireum/parser/JsonParser$Context;
         4: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context;

  public static final org.sireum.parser.JsonParser$Result $anonfun$_resOpt$1();
    descriptor: ()Lorg/sireum/parser/JsonParser$Result;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 68: 0

  public static final org.sireum.parser.JsonParser$Result $anonfun$resOpt_$eq$1();
    descriptor: ()Lorg/sireum/parser/JsonParser$Result;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 68: 0

  public static final org.sireum.parser.JsonParser$Result $anonfun$setResOpt$1();
    descriptor: ()Lorg/sireum/parser/JsonParser$Result;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 68: 0

  public org.sireum.parser.JsonParser$Context(java.lang.String, int, org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B>, org.sireum.Z, org.sireum.Option<org.sireum.parser.JsonParser$Result>, org.sireum.Z, org.sireum.Z, boolean, org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree>, boolean, org.sireum.Z, boolean);
    descriptor: (Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=13, args_size=13
         0: aload_0
         1: invokespecial #552                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #556                // InterfaceMethod org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
         8: aload_0
         9: invokestatic  #559                // InterfaceMethod org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
        12: aload_0
        13: aload_1
        14: putfield      #106                // Field _ruleName:Ljava/lang/String;
        17: aload_0
        18: iload_2
        19: putfield      #111                // Field _ruleType:I
        22: aload_0
        23: aload_3
        24: putfield      #117                // Field _accepting:Lorg/sireum/IS;
        27: aload_0
        28: aload         4
        30: putfield      #121                // Field _state:Lorg/sireum/Z;
        33: aload_0
        34: aload         5
        36: invokeinterface #161,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        41: putfield      #130                // Field _bresOpt:Z
        44: aload_0
        45: aload         5
        47: invokedynamic #563,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
        52: invokeinterface #185,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        57: checkcast     #22                 // class org/sireum/parser/JsonParser$Result
        60: putfield      #147                // Field _resOpt:Lorg/sireum/parser/JsonParser$Result;
        63: aload_0
        64: aload         6
        66: putfield      #195                // Field _j:Lorg/sireum/Z;
        69: aload_0
        70: aload         7
        72: putfield      #201                // Field _max:Lorg/sireum/Z;
        75: aload_0
        76: iload         8
        78: putfield      #207                // Field _initial:Z
        81: aload_0
        82: aload         9
        84: putfield      #215                // Field _trees:Lorg/sireum/IS;
        87: aload_0
        88: iload         10
        90: putfield      #223                // Field _found:Z
        93: aload_0
        94: aload         11
        96: putfield      #229                // Field _failIndex:Lorg/sireum/Z;
        99: aload_0
       100: iload         12
       102: putfield      #235                // Field _isLexical:Z
       105: return
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0  this   Lorg/sireum/parser/JsonParser$Context;
            0     106     1 __ruleName   Ljava/lang/String;
            0     106     2 __ruleType   I
            0     106     3 __accepting   Lorg/sireum/IS;
            0     106     4 __state   Lorg/sireum/Z;
            0     106     5 __resOpt   Lorg/sireum/Option;
            0     106     6   __j   Lorg/sireum/Z;
            0     106     7 __max   Lorg/sireum/Z;
            0     106     8 __initial   Z
            0     106     9 __trees   Lorg/sireum/IS;
            0     106    10 __found   Z
            0     106    11 __failIndex   Lorg/sireum/Z;
            0     106    12 __isLexical   Z
    Signature: #539                         // (Ljava/lang/String;ILorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;ZLorg/sireum/Z;Z)V
    MethodParameters:
      Name                           Flags
      __ruleName                     final
      __ruleType                     final
      __accepting                    final
      __state                        final
      __resOpt                       final
      __j                            final
      __max                          final
      __initial                      final
      __trees                        final
      __found                        final
      __failIndex                    final
      __isLexical                    final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #575,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #17= #14 of #16;    // State=class org/sireum/parser/Json$State of class org/sireum/parser/Json
  public static final #20= #2 of #19;     // Context=class org/sireum/parser/JsonParser$Context of class org/sireum/parser/JsonParser
  public static final #23= #22 of #19;    // Result=class org/sireum/parser/JsonParser$Result of class org/sireum/parser/JsonParser
  public static #26= #25 of #19;          // Result$=class org/sireum/parser/JsonParser$Result$ of class org/sireum/parser/JsonParser
  public static final #31= #28 of #30;    // Leaf=class org/sireum/parser/ParseTree$Leaf of class org/sireum/parser/ParseTree
  public static final #34= #33 of #30;    // Node=class org/sireum/parser/ParseTree$Node of class org/sireum/parser/ParseTree
  public static #37= #36 of #30;          // Node$=class org/sireum/parser/ParseTree$Node$ of class org/sireum/parser/ParseTree
SourceFile: "JsonParser.scala"
BootstrapMethods:
  0: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #163 ()Ljava/lang/Object;
      #168 REF_invokeStatic org/sireum/parser/JsonParser$Context.$anonfun$resOpt_$eq$1:()Lorg/sireum/parser/JsonParser$Result;
      #169 ()Lorg/sireum/parser/JsonParser$Result;
      #170 5
      #171 1
      #169 ()Lorg/sireum/parser/JsonParser$Result;
  1: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #163 ()Ljava/lang/Object;
      #191 REF_invokeStatic org/sireum/parser/JsonParser$Context.$anonfun$setResOpt$1:()Lorg/sireum/parser/JsonParser$Result;
      #169 ()Lorg/sireum/parser/JsonParser$Result;
      #170 5
      #171 1
      #169 ()Lorg/sireum/parser/JsonParser$Result;
  2: #178 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #163 ()Ljava/lang/Object;
      #562 REF_invokeStatic org/sireum/parser/JsonParser$Context.$anonfun$_resOpt$1:()Lorg/sireum/parser/JsonParser$Result;
      #169 ()Lorg/sireum/parser/JsonParser$Result;
      #170 5
      #171 1
      #169 ()Lorg/sireum/parser/JsonParser$Result;
  3: #572 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #562 REF_invokeStatic org/sireum/parser/JsonParser$Context.$anonfun$_resOpt$1:()Lorg/sireum/parser/JsonParser$Result;
      #168 REF_invokeStatic org/sireum/parser/JsonParser$Context.$anonfun$resOpt_$eq$1:()Lorg/sireum/parser/JsonParser$Result;
      #191 REF_invokeStatic org/sireum/parser/JsonParser$Context.$anonfun$setResOpt$1:()Lorg/sireum/parser/JsonParser$Result;
  ScalaInlineInfo: length = 0x18A (unknown attribute)
   01 01 00 4E 02 1A 00 A5 01 00 A4 00 A5 01 00 BC
   00 A5 01 00 51 00 52 01 01 B2 00 A2 01 01 B2 02
   19 01 01 B2 01 B3 01 01 85 01 86 01 00 59 00 3D
   01 00 5E 00 3D 01 00 3C 00 3D 01 00 44 02 14 01
   00 44 00 45 01 00 F8 01 76 01 00 71 00 72 01 00
   89 01 74 01 01 79 00 68 01 01 82 00 3D 01 01 83
   00 4C 01 01 84 00 3D 01 01 7A 00 6D 01 01 7B 00
   72 01 01 7C 00 4C 01 01 7D 00 7F 01 01 7E 00 4C
   01 01 7F 00 4C 01 01 80 00 3D 01 01 81 00 72 01
   01 69 01 6A 01 00 E3 00 4C 01 00 E7 00 7C 01 00
   DD 00 3D 01 00 E1 00 D2 01 00 76 00 72 01 00 E6
   00 4C 01 00 E0 00 3D 01 00 D0 00 3D 01 00 EC 00
   3D 01 00 C4 00 4C 01 00 CA 00 4C 01 00 97 00 7F
   01 00 6B 00 68 01 00 70 00 6D 01 00 7A 00 4C 01
   00 D8 00 72 01 00 4B 00 4C 01 01 41 00 6D 01 00
   CD 00 3D 01 00 D1 00 D2 01 00 E9 00 3D 01 00 ED
   00 D2 01 00 C1 00 4C 01 00 C5 00 7C 01 00 C7 00
   4C 01 00 CB 00 7C 01 00 3B 00 3D 01 00 64 00 65
   01 00 7E 00 7F 01 00 9A 00 9B 01 00 67 00 68 01
   00 6C 00 6D 01 00 E8 00 7C 01 00 E2 00 D2 01 00
   D3 00 D2 01 00 EE 00 D2 01 00 C6 00 7C 01 00 CC
   00 7C 01 00 BB 00 9B 01 00 7D 00 7C 01 00 DC 00
   DA 01 00 77 00 4C 01 00 7B 00 7C 01 01 3C 00 68
   01 00 EF 00 68 01 00 D4 00 72 01 00 D9 00 DA 01
   02 0B 02 0C 01 01 C7 01 C8 01
  Scala: length = 0x0 (unknown attribute)

