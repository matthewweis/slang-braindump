Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/ser/std/TimeZoneSerializer.class
  Last modified May 29, 2022; size 2588 bytes
  SHA-256 checksum c1963a769499be8ab370f8c95feafad77af930cf21e2b513d3311f1074690b75
  Compiled from "TimeZoneSerializer.java"
public class com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<java.util.TimeZone>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #11                         // com/fasterxml/jackson/databind/ser/std/TimeZoneSerializer
  super_class: #12                        // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  interfaces: 0, fields: 0, methods: 5, attributes: 2
Constant pool:
   #1 = Class              #42            // java/util/TimeZone
   #2 = Methodref          #12.#43        // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;)V
   #3 = Methodref          #1.#44         // java/util/TimeZone.getID:()Ljava/lang/String;
   #4 = Methodref          #45.#46        // com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
   #5 = Fieldref           #47.#48        // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;
   #6 = Methodref          #49.#50        // com/fasterxml/jackson/databind/jsontype/TypeSerializer.typeId:(Ljava/lang/Object;Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
   #7 = Methodref          #49.#51        // com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
   #8 = Methodref          #11.#52        // com/fasterxml/jackson/databind/ser/std/TimeZoneSerializer.serialize:(Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
   #9 = Methodref          #49.#53        // com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
  #10 = Methodref          #11.#54        // com/fasterxml/jackson/databind/ser/std/TimeZoneSerializer.serializeWithType:(Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
  #11 = Class              #55            // com/fasterxml/jackson/databind/ser/std/TimeZoneSerializer
  #12 = Class              #56            // com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  #13 = Utf8               <init>
  #14 = Utf8               ()V
  #15 = Utf8               Code
  #16 = Utf8               LineNumberTable
  #17 = Utf8               LocalVariableTable
  #18 = Utf8               this
  #19 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/TimeZoneSerializer;
  #20 = Utf8               serialize
  #21 = Utf8               (Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #22 = Utf8               value
  #23 = Utf8               Ljava/util/TimeZone;
  #24 = Utf8               g
  #25 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;
  #26 = Utf8               provider
  #27 = Utf8               Lcom/fasterxml/jackson/databind/SerializerProvider;
  #28 = Utf8               Exceptions
  #29 = Class              #57            // java/io/IOException
  #30 = Utf8               serializeWithType
  #31 = Utf8               (Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
  #32 = Utf8               typeSer
  #33 = Utf8               Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
  #34 = Utf8               typeIdDef
  #35 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId;
  #36 = Utf8               (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
  #37 = Utf8               (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #38 = Utf8               Signature
  #39 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/util/TimeZone;>;
  #40 = Utf8               SourceFile
  #41 = Utf8               TimeZoneSerializer.java
  #42 = Utf8               java/util/TimeZone
  #43 = NameAndType        #13:#58        // "<init>":(Ljava/lang/Class;)V
  #44 = NameAndType        #59:#60        // getID:()Ljava/lang/String;
  #45 = Class              #61            // com/fasterxml/jackson/core/JsonGenerator
  #46 = NameAndType        #62:#63        // writeString:(Ljava/lang/String;)V
  #47 = Class              #64            // com/fasterxml/jackson/core/JsonToken
  #48 = NameAndType        #65:#66        // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;
  #49 = Class              #67            // com/fasterxml/jackson/databind/jsontype/TypeSerializer
  #50 = NameAndType        #68:#69        // typeId:(Ljava/lang/Object;Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
  #51 = NameAndType        #70:#71        // writeTypePrefix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
  #52 = NameAndType        #20:#21        // serialize:(Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
  #53 = NameAndType        #72:#71        // writeTypeSuffix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
  #54 = NameAndType        #30:#31        // serializeWithType:(Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
  #55 = Utf8               com/fasterxml/jackson/databind/ser/std/TimeZoneSerializer
  #56 = Utf8               com/fasterxml/jackson/databind/ser/std/StdScalarSerializer
  #57 = Utf8               java/io/IOException
  #58 = Utf8               (Ljava/lang/Class;)V
  #59 = Utf8               getID
  #60 = Utf8               ()Ljava/lang/String;
  #61 = Utf8               com/fasterxml/jackson/core/JsonGenerator
  #62 = Utf8               writeString
  #63 = Utf8               (Ljava/lang/String;)V
  #64 = Utf8               com/fasterxml/jackson/core/JsonToken
  #65 = Utf8               VALUE_STRING
  #66 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;
  #67 = Utf8               com/fasterxml/jackson/databind/jsontype/TypeSerializer
  #68 = Utf8               typeId
  #69 = Utf8               (Ljava/lang/Object;Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
  #70 = Utf8               writeTypePrefix
  #71 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
  #72 = Utf8               writeTypeSuffix
{
  public com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #1                  // class java/util/TimeZone
         3: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;)V
         6: return
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/databind/ser/std/TimeZoneSerializer;

  public void serialize(java.util.TimeZone, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_2
         1: aload_1
         2: invokevirtual #3                  // Method java/util/TimeZone.getID:()Ljava/lang/String;
         5: invokevirtual #4                  // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 18: 0
        line 19: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/ser/std/TimeZoneSerializer;
            0       9     1 value   Ljava/util/TimeZone;
            0       9     2     g   Lcom/fasterxml/jackson/core/JsonGenerator;
            0       9     3 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
    Exceptions:
      throws java.io.IOException

  public void serializeWithType(java.util.TimeZone, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;
    descriptor: (Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=5
         0: aload         4
         2: aload_2
         3: aload         4
         5: aload_1
         6: ldc           #1                  // class java/util/TimeZone
         8: getstatic     #5                  // Field com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;
        11: invokevirtual #6                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.typeId:(Ljava/lang/Object;Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
        14: invokevirtual #7                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
        17: astore        5
        19: aload_0
        20: aload_1
        21: aload_2
        22: aload_3
        23: invokevirtual #8                  // Method serialize:(Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
        26: aload         4
        28: aload_2
        29: aload         5
        31: invokevirtual #9                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffix:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;
        34: pop
        35: return
      LineNumberTable:
        line 26: 0
        line 27: 11
        line 26: 14
        line 28: 19
        line 29: 26
        line 30: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lcom/fasterxml/jackson/databind/ser/std/TimeZoneSerializer;
            0      36     1 value   Ljava/util/TimeZone;
            0      36     2     g   Lcom/fasterxml/jackson/core/JsonGenerator;
            0      36     3 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
            0      36     4 typeSer   Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
           19      17     5 typeIdDef   Lcom/fasterxml/jackson/core/type/WritableTypeId;
    Exceptions:
      throws java.io.IOException

  public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: checkcast     #1                  // class java/util/TimeZone
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokevirtual #10                 // Method serializeWithType:(Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
        12: return
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcom/fasterxml/jackson/databind/ser/std/TimeZoneSerializer;
    Exceptions:
      throws java.io.IOException

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: checkcast     #1                  // class java/util/TimeZone
         5: aload_2
         6: aload_3
         7: invokevirtual #8                  // Method serialize:(Ljava/util/TimeZone;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
        10: return
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcom/fasterxml/jackson/databind/ser/std/TimeZoneSerializer;
    Exceptions:
      throws java.io.IOException
}
Signature: #39                          // Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/util/TimeZone;>;
SourceFile: "TimeZoneSerializer.java"
