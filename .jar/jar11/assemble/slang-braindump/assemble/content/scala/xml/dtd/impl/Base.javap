Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/xml/dtd/impl/Base.class
  Last modified May 29, 2022; size 4638 bytes
  SHA-256 checksum d6ecebd791011e917879a5603fc613a496954a43693917eeccbbaed166ad41cc
  Compiled from "Base.scala"
public abstract class scala.xml.dtd.impl.Base
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/xml/dtd/impl/Base
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 4, methods: 9, attributes: 6
Constant pool:
   #1 = Utf8               scala/xml/dtd/impl/Base
   #2 = Class              #1             // scala/xml/dtd/impl/Base
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               Base.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005\t-bAB\"E\u0003\u00031E\nC\u0003R\u0001\u0011\u00051\u000bB\u0003W\u0001\t\u0005qKB\u0003^\u0001\u0005\u0005a\fC\u0003R\u0007\u0011\u0005q\fC\u0003a\u0007\u0019\u0005\u0011mB\u0003f\u0001!\u0005aMB\u0003h\u0001!\u0005\u0001\u000eC\u0003R\u000f\u0011\u0005\u0011\u000eC\u0003k\u000f\u0011\u00051\u000eC\u0003z\u000f\u0011\u0005!P\u0002\u0003h\u0001\u0001i\u0007\u0002\u00038\f\u0005\u000b\u0007I\u0011A8\t\u0011Q\\!\u0011!Q\u0001\nADQ!U\u0006\u0005\nUDq\u0001Y\u0006C\u0002\u0013\u0015\u0011\r\u0003\u0004x\u0017\u0001\u0006iAY\u0004\b\u0003#\u0001\u0001\u0012AA\n\r\u001d\t)\u0002\u0001E\u0001\u0003/Aa!\u0015\n\u0005\u0002\u0005e\u0001B\u00026\u0013\t\u0003\tY\u0002\u0003\u0004z%\u0011\u0005\u0011q\u0004\u0004\u0007\u0003+\u0001\u0001!!\n\t\u001194\"Q1A\u0005\u0002=D\u0001\u0002\u001e\f\u0003\u0002\u0003\u0006I\u0001\u001d\u0005\u0007#Z!I!a\n\t\u000f\u00014\"\u0019!C\u0003C\"1qO\u0006Q\u0001\u000e\t4a!a\u000b\u0001\u0001\u00065\u0002BCA\'9\tU\r\u0011\"\u0001\u0002P!I\u0011\u0011\u000b\u000f\u0003\u0012\u0003\u0006Ia\u001d\u0005\u0007#r!\t!a\u0015\t\u0011\u0001d\u0002R1A\u0005\u0006\u0005D\u0011\"!\u0017\u001d\u0003\u0003%\t!a\u0017\t\u0013\u0005}C$%A\u0005\u0002\u0005\u0005\u0004\"CA<9\u0005\u0005I\u0011IA=\u0011%\tY\tHA\u0001\n\u0003\ti\tC\u0005\u0002\u0016r\t\t\u0011\"\u0001\u0002\u0018\"I\u00111\u0015\u000f\u0002\u0002\u0013\u0005\u0013Q\u0015\u0005\n\u0003_c\u0012\u0011!C\u0001\u0003cC\u0011\"!.\u001d\u0003\u0003%\t%a.\t\u0013\u0005mF$!A\u0005B\u0005u\u0006\"CA`9\u0005\u0005I\u0011IAa\u0011%\t\u0019\rHA\u0001\n\u0003\n)mB\u0005\u0002J\u0002\t\t\u0011#\u0001\u0002L\u001aI\u00111\u0006\u0001\u0002\u0002#\u0005\u0011Q\u001a\u0005\u0007#6\"\t!!:\t\u0013\u0005}V&!A\u0005F\u0005\u0005\u0007\u0002\u00036.\u0003\u0003%\t)a:\t\u0013\u0005-X&!A\u0005\u0002\u00065xaBA}\u0001!\u0005\u00151 \u0004\b\u0003{\u0004\u0001\u0012QA\u0000\u0011\u0019\t6\u0007\"\u0001\u0003\u0002!A\u0001m\rEC\u0002\u0013\u0015\u0011\rC\u0004\u0002@N\"\t%!1\t\u0013\u0005]4\'!A\u0005B\u0005e\u0004\"CAFg\u0005\u0005I\u0011AAG\u0011%\t)jMA\u0001\n\u0003\u0011\u0019\u0001C\u0005\u0002$N\n\t\u0011\"\u0011\u0002&\"I\u0011qV\u001a\u0002\u0002\u0013\u0005!q\u0001\u0005\n\u0003w\u001b\u0014\u0011!C!\u0003{3aAa\u0003\u0001\u0001\t5\u0001\"\u0003B\b{\t\u0005\t\u0015!\u0003t\u0011\u0019\tV\b\"\u0001\u0003\u0012!9\u0001-\u0010b\u0001\n\u000b\t\u0007BB<>A\u00035!\rC\u0004\u0002Nu\"\t!a\u0014\u0003\t\t\u000b7/\u001a\u0006\u0003\u000b\u001a\u000bA![7qY*\u0011q\tS\u0001\u0004IR$\'BA%K\u0003\rAX\u000e\u001c\u0006\u0002\u0017\u0006)1oY1mCN\u0011\u0001!\u0014\t\u0003\u001d>k\u0011AS\u0005\u0003!*\u0013a!\u00118z%\u00164\u0017A\u0002\u001fj]&$hh\u0001\u0001\u0015\u0003Q\u0003\"!\u0016\u0001\u000e\u0003\u0011\u0013\u0001b\u0018:fO\u0016D\b\u000fV\t\u00031n\u0003\"AT-\n\u0005iS%a\u0002(pi\"Lgn\u001a\t\u00039\u000ei\u0011\u0001\u0001\u0002\u0007%\u0016<W\t\u001f9\u0014\u0005\riE#A.\u0002\u0015%\u001ch*\u001e7mC\ndW-F\u0001c!\tq5-\u0003\u0002e\u0015\n9!i\\8mK\u0006t\u0017aA!miB\u0011Al\u0002\u0002\u0004\u00032$8CA\u0004N)\u00051\u0017!B1qa2LHC\u00017y!\ta6b\u0005\u0002\f7\u0006\u0011!o]\u000b\u0002aB\u0019a*]:\n\u0005IT%A\u0003\u001fsKB,\u0017\r^3e}A\u0011ALA\u0001\u0004eN\u0004CC\u00017w\u0011\u0015qg\u00021\u0001q\u0003-I7OT;mY\u0006\u0014G.\u001a\u0011\t\u000b9L\u0001\u0019\u00019\u0002\u0015Ut\u0017\r\u001d9msN+\u0017\u000fF\u0002|\u0003\u001b\u00012A\u0014?\u007f\u0013\ti(J\u0001\u0003T_6,\u0007\u0003B@\u0002\nMl!!!\u0001\u000b\t\u0005\r\u0011QA\u0001\nS6lW\u000f^1cY\u0016T1!a\u0002K\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0005\u0003\u0017\t\tAA\u0002TKFDa!a\u0004\u000b\u0001\u0004a\u0017!\u0001=\u0002\tM+\u0017/\u001e\t\u00039J\u0011AaU3rkN\u0011!#\u0014\u000b\u0003\u0003\'!2aWA\u000f\u0011\u0015qG\u00031\u0001q)\rY\u0018\u0011\u0005\u0005\b\u0003\u001f)\u0002\u0019AA\u0012!\tafc\u0005\u0002\u00177R!\u00111EA\u0015\u0011\u0015q\u0017\u00041\u0001q\u0005\u0011\u0019F/\u0019:\u0014\rqY\u0016qFA\u001b!\rq\u0015\u0011G\u0005\u0004\u0003gQ%a\u0002)s_\u0012,8\r\u001e\t\u0005\u0003o\t9E\u0004\u0003\u0002:\u0005\rc\u0002BA\u001e\u0003\u0003j!!!\u0010\u000b\u0007\u0005}\"+\u0001\u0004=e>|GOP\u0005\u0002\u0017&\u0019\u0011Q\t&\u0002\u000fA\f7m[1hK&!\u0011\u0011JA&\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\r\t)ES\u0001\u0002eV\t1/\u0001\u0002sAQ!\u0011QKA,!\taF\u0004\u0003\u0004\u0002N}\u0001\ra]\u0001\u0005G>\u0004\u0018\u0010\u0006\u0003\u0002V\u0005u\u0003\u0002CA\'CA\u0005\t\u0019A:\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\u0011\u00111\r\u0016\u0004g\u0006\u00154FAA4!\u0011\tI\'a\u001d\u000e\u0005\u0005-$\u0002BA7\u0003_\n\u0011\"\u001e8dQ\u0016\u001c7.\u001a3\u000b\u0007\u0005E$*\u0001\u0006b]:|G/\u0019;j_:LA!!\u001e\u0002l\t\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\tY\b\u0005\u0003\u0002~\u0005\u001dUBAA@\u0015\u0011\t\t)a!\u0002\t1\fgn\u001a\u0006\u0003\u0003\u000b\u000bAA[1wC&!\u0011\u0011RA@\u0005\u0019\u0019FO]5oO\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011q\u0012\t\u0004\u001d\u0006E\u0015bAAJ\u0015\n\u0019\u0011J\u001c;\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR!\u0011\u0011TAP!\rq\u00151T\u0005\u0004\u0003;S%aA!os\"I\u0011\u0011U\u0013\u0002\u0002\u0003\u0007\u0011qR\u0001\u0004q\u0012\n\u0014a\u00049s_\u0012,8\r^%uKJ\fGo\u001c:\u0016\u0005\u0005\u001d\u0006CBAU\u0003W\u000bI*\u0004\u0002\u0002\u0006%!\u0011QVA\u0003\u0005!IE/\u001a:bi>\u0014\u0018\u0001C2b]\u0016\u000bX/\u00197\u0015\u0007\t\f\u0019\fC\u0005\u0002\"\u001e\n\t\u00111\u0001\u0002\u001a\u0006\u0011\u0002O]8ek\u000e$X\t\\3nK:$h*Y7f)\u0011\tY(!/\t\u0013\u0005\u0005\u0006&!AA\u0002\u0005=\u0015\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005=\u0015\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u0005m\u0014AB3rk\u0006d7\u000fF\u0002c\u0003\u000fD\u0011\"!),\u0003\u0003\u0005\r!!\'\u0002\tM#\u0018M\u001d\t\u000396\u001aR!LAh\u00037\u0004r!!5\u0002XN\f)&\u0004\u0002\u0002T*\u0019\u0011Q\u001b&\u0002\u000fI,h\u000e^5nK&!\u0011\u0011\\Aj\u0005E\t%m\u001d;sC\u000e$h)\u001e8di&|g.\r\t\u0005\u0003;\f\u0019/\u0004\u0002\u0002`*!\u0011\u0011]AB\u0003\tIw.\u0003\u0003\u0002J\u0005}GCAAf)\u0011\t)&!;\t\r\u00055\u0003\u00071\u0001t\u0003\u001d)h.\u00199qYf$B!a<\u0002vB!a*!=t\u0013\r\t\u0019P\u0013\u0002\u0007\u001fB$\u0018n\u001c8\t\u0013\u0005]\u0018\'!AA\u0002\u0005U\u0013a\u0001=%a\u0005\u0019Q\t]:\u0011\u0005q\u001b$aA#qgN11gWA\u0018\u0003k!\"!a?\u0015\t\u0005e%Q\u0001\u0005\n\u0003CK\u0014\u0011!a\u0001\u0003\u001f#2A\u0019B\u0005\u0011%\t\tkOA\u0001\u0002\u0004\tIJ\u0001\u0003NKR\f7CA\u001f\\\u0003\t\u0011\u0018\u0007\u0006\u0003\u0003\u0014\tU\u0001C\u0001/>\u0011\u0019\u0011ya\u0010a\u0001g\"Z\u0001A!\u0007\u0003 \t\u0005\"Q\u0005B\u0014!\rq%1D\u0005\u0004\u0005;Q%A\u00033faJ,7-\u0019;fI\u00069Q.Z:tC\u001e,\u0017E\u0001B\u0012\u0003i!\u0006.[:!G2\f7o\u001d\u0011xS2d\u0007EY3!e\u0016lwN^3e\u0003\u0015\u0019\u0018N\\2fC\t\u0011I#\u0001\u00043]E\u0002d\u0006\r
   #9 = Utf8               scala/xml/dtd/impl/Base$Alt
  #10 = Class              #9             // scala/xml/dtd/impl/Base$Alt
  #11 = Utf8               Alt
  #12 = Utf8               scala/xml/dtd/impl/Base$Alt$
  #13 = Class              #12            // scala/xml/dtd/impl/Base$Alt$
  #14 = Utf8               Alt$
  #15 = Utf8               scala/xml/dtd/impl/Base$Eps$
  #16 = Class              #15            // scala/xml/dtd/impl/Base$Eps$
  #17 = Utf8               Eps$
  #18 = Utf8               scala/xml/dtd/impl/Base$Meta
  #19 = Class              #18            // scala/xml/dtd/impl/Base$Meta
  #20 = Utf8               Meta
  #21 = Utf8               scala/xml/dtd/impl/Base$RegExp
  #22 = Class              #21            // scala/xml/dtd/impl/Base$RegExp
  #23 = Utf8               RegExp
  #24 = Utf8               scala/xml/dtd/impl/Base$Sequ
  #25 = Class              #24            // scala/xml/dtd/impl/Base$Sequ
  #26 = Utf8               Sequ
  #27 = Utf8               scala/xml/dtd/impl/Base$Sequ$
  #28 = Class              #27            // scala/xml/dtd/impl/Base$Sequ$
  #29 = Utf8               Sequ$
  #30 = Utf8               scala/xml/dtd/impl/Base$Star
  #31 = Class              #30            // scala/xml/dtd/impl/Base$Star
  #32 = Utf8               Star
  #33 = Utf8               scala/xml/dtd/impl/Base$Star$
  #34 = Class              #33            // scala/xml/dtd/impl/Base$Star$
  #35 = Utf8               Star$
  #36 = Utf8               Alt$module
  #37 = Utf8               Lscala/xml/dtd/impl/Base$Alt$;
  #38 = Utf8               Sequ$module
  #39 = Utf8               Lscala/xml/dtd/impl/Base$Sequ$;
  #40 = Utf8               Star$module
  #41 = Utf8               Lscala/xml/dtd/impl/Base$Star$;
  #42 = Utf8               Eps$module
  #43 = Utf8               Lscala/xml/dtd/impl/Base$Eps$;
  #44 = Utf8               ()Lscala/xml/dtd/impl/Base$Alt$;
  #45 = NameAndType        #36:#37        // Alt$module:Lscala/xml/dtd/impl/Base$Alt$;
  #46 = Fieldref           #2.#45         // scala/xml/dtd/impl/Base.Alt$module:Lscala/xml/dtd/impl/Base$Alt$;
  #47 = Utf8               Alt$lzycompute$1
  #48 = Utf8               ()V
  #49 = NameAndType        #47:#48        // Alt$lzycompute$1:()V
  #50 = Methodref          #2.#49         // scala/xml/dtd/impl/Base.Alt$lzycompute$1:()V
  #51 = Utf8               this
  #52 = Utf8               Lscala/xml/dtd/impl/Base;
  #53 = Utf8               ()Lscala/xml/dtd/impl/Base$Sequ$;
  #54 = NameAndType        #38:#39        // Sequ$module:Lscala/xml/dtd/impl/Base$Sequ$;
  #55 = Fieldref           #2.#54         // scala/xml/dtd/impl/Base.Sequ$module:Lscala/xml/dtd/impl/Base$Sequ$;
  #56 = Utf8               Sequ$lzycompute$1
  #57 = NameAndType        #56:#48        // Sequ$lzycompute$1:()V
  #58 = Methodref          #2.#57         // scala/xml/dtd/impl/Base.Sequ$lzycompute$1:()V
  #59 = Utf8               ()Lscala/xml/dtd/impl/Base$Star$;
  #60 = NameAndType        #40:#41        // Star$module:Lscala/xml/dtd/impl/Base$Star$;
  #61 = Fieldref           #2.#60         // scala/xml/dtd/impl/Base.Star$module:Lscala/xml/dtd/impl/Base$Star$;
  #62 = Utf8               Star$lzycompute$1
  #63 = NameAndType        #62:#48        // Star$lzycompute$1:()V
  #64 = Methodref          #2.#63         // scala/xml/dtd/impl/Base.Star$lzycompute$1:()V
  #65 = Utf8               Eps
  #66 = Utf8               ()Lscala/xml/dtd/impl/Base$Eps$;
  #67 = NameAndType        #42:#43        // Eps$module:Lscala/xml/dtd/impl/Base$Eps$;
  #68 = Fieldref           #2.#67         // scala/xml/dtd/impl/Base.Eps$module:Lscala/xml/dtd/impl/Base$Eps$;
  #69 = Utf8               Eps$lzycompute$1
  #70 = NameAndType        #69:#48        // Eps$lzycompute$1:()V
  #71 = Methodref          #2.#70         // scala/xml/dtd/impl/Base.Eps$lzycompute$1:()V
  #72 = Utf8               <init>
  #73 = Utf8               (Lscala/xml/dtd/impl/Base;)V
  #74 = NameAndType        #72:#73        // "<init>":(Lscala/xml/dtd/impl/Base;)V
  #75 = Methodref          #13.#74        // scala/xml/dtd/impl/Base$Alt$."<init>":(Lscala/xml/dtd/impl/Base;)V
  #76 = Utf8               java/lang/Throwable
  #77 = Class              #76            // java/lang/Throwable
  #78 = Methodref          #28.#74        // scala/xml/dtd/impl/Base$Sequ$."<init>":(Lscala/xml/dtd/impl/Base;)V
  #79 = Methodref          #34.#74        // scala/xml/dtd/impl/Base$Star$."<init>":(Lscala/xml/dtd/impl/Base;)V
  #80 = Methodref          #16.#74        // scala/xml/dtd/impl/Base$Eps$."<init>":(Lscala/xml/dtd/impl/Base;)V
  #81 = NameAndType        #72:#48        // "<init>":()V
  #82 = Methodref          #4.#81         // java/lang/Object."<init>":()V
  #83 = Utf8               Code
  #84 = Utf8               StackMapTable
  #85 = Utf8               LineNumberTable
  #86 = Utf8               LocalVariableTable
  #87 = Utf8               InnerClasses
  #88 = Utf8               SourceFile
  #89 = Utf8               Deprecated
  #90 = Utf8               RuntimeVisibleAnnotations
  #91 = Utf8               ScalaInlineInfo
  #92 = Utf8               ScalaSig
{
  private volatile scala.xml.dtd.impl.Base$Alt$ Alt$module;
    descriptor: Lscala/xml/dtd/impl/Base$Alt$;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile scala.xml.dtd.impl.Base$Sequ$ Sequ$module;
    descriptor: Lscala/xml/dtd/impl/Base$Sequ$;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile scala.xml.dtd.impl.Base$Star$ Star$module;
    descriptor: Lscala/xml/dtd/impl/Base$Star$;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile scala.xml.dtd.impl.Base$Eps$ Eps$module;
    descriptor: Lscala/xml/dtd/impl/Base$Eps$;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public scala.xml.dtd.impl.Base$Alt$ Alt();
    descriptor: ()Lscala/xml/dtd/impl/Base$Alt$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #46                 // Field Alt$module:Lscala/xml/dtd/impl/Base$Alt$;
         4: ifnonnull     11
         7: aload_0
         8: invokespecial #50                 // Method Alt$lzycompute$1:()V
        11: aload_0
        12: getfield      #46                 // Field Alt$module:Lscala/xml/dtd/impl/Base$Alt$;
        15: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/xml/dtd/impl/Base;

  public scala.xml.dtd.impl.Base$Sequ$ Sequ();
    descriptor: ()Lscala/xml/dtd/impl/Base$Sequ$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #55                 // Field Sequ$module:Lscala/xml/dtd/impl/Base$Sequ$;
         4: ifnonnull     11
         7: aload_0
         8: invokespecial #58                 // Method Sequ$lzycompute$1:()V
        11: aload_0
        12: getfield      #55                 // Field Sequ$module:Lscala/xml/dtd/impl/Base$Sequ$;
        15: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/xml/dtd/impl/Base;

  public scala.xml.dtd.impl.Base$Star$ Star();
    descriptor: ()Lscala/xml/dtd/impl/Base$Star$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #61                 // Field Star$module:Lscala/xml/dtd/impl/Base$Star$;
         4: ifnonnull     11
         7: aload_0
         8: invokespecial #64                 // Method Star$lzycompute$1:()V
        11: aload_0
        12: getfield      #61                 // Field Star$module:Lscala/xml/dtd/impl/Base$Star$;
        15: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/xml/dtd/impl/Base;

  public scala.xml.dtd.impl.Base$Eps$ Eps();
    descriptor: ()Lscala/xml/dtd/impl/Base$Eps$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #68                 // Field Eps$module:Lscala/xml/dtd/impl/Base$Eps$;
         4: ifnonnull     11
         7: aload_0
         8: invokespecial #71                 // Method Eps$lzycompute$1:()V
        11: aload_0
        12: getfield      #68                 // Field Eps$module:Lscala/xml/dtd/impl/Base$Eps$;
        15: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/xml/dtd/impl/Base;

  private final void Alt$lzycompute$1();
    descriptor: ()V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #46                 // Field Alt$module:Lscala/xml/dtd/impl/Base$Alt$;
         8: ifnonnull     23
        11: aload_0
        12: new           #13                 // class scala/xml/dtd/impl/Base$Alt$
        15: dup
        16: aload_0
        17: invokespecial #75                 // Method scala/xml/dtd/impl/Base$Alt$."<init>":(Lscala/xml/dtd/impl/Base;)V
        20: putfield      #46                 // Field Alt$module:Lscala/xml/dtd/impl/Base$Alt$;
        23: aload_1
        24: monitorexit
        25: goto          31
        28: aload_1
        29: monitorexit
        30: athrow
        31: return
      Exception table:
         from    to  target type
             4    23    28   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class scala/xml/dtd/impl/Base ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/xml/dtd/impl/Base;

  private final void Sequ$lzycompute$1();
    descriptor: ()V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #55                 // Field Sequ$module:Lscala/xml/dtd/impl/Base$Sequ$;
         8: ifnonnull     23
        11: aload_0
        12: new           #28                 // class scala/xml/dtd/impl/Base$Sequ$
        15: dup
        16: aload_0
        17: invokespecial #78                 // Method scala/xml/dtd/impl/Base$Sequ$."<init>":(Lscala/xml/dtd/impl/Base;)V
        20: putfield      #55                 // Field Sequ$module:Lscala/xml/dtd/impl/Base$Sequ$;
        23: aload_1
        24: monitorexit
        25: goto          31
        28: aload_1
        29: monitorexit
        30: athrow
        31: return
      Exception table:
         from    to  target type
             4    23    28   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class scala/xml/dtd/impl/Base ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/xml/dtd/impl/Base;

  private final void Star$lzycompute$1();
    descriptor: ()V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #61                 // Field Star$module:Lscala/xml/dtd/impl/Base$Star$;
         8: ifnonnull     23
        11: aload_0
        12: new           #34                 // class scala/xml/dtd/impl/Base$Star$
        15: dup
        16: aload_0
        17: invokespecial #79                 // Method scala/xml/dtd/impl/Base$Star$."<init>":(Lscala/xml/dtd/impl/Base;)V
        20: putfield      #61                 // Field Star$module:Lscala/xml/dtd/impl/Base$Star$;
        23: aload_1
        24: monitorexit
        25: goto          31
        28: aload_1
        29: monitorexit
        30: athrow
        31: return
      Exception table:
         from    to  target type
             4    23    28   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class scala/xml/dtd/impl/Base ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/xml/dtd/impl/Base;

  private final void Eps$lzycompute$1();
    descriptor: ()V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #68                 // Field Eps$module:Lscala/xml/dtd/impl/Base$Eps$;
         8: ifnonnull     23
        11: aload_0
        12: new           #16                 // class scala/xml/dtd/impl/Base$Eps$
        15: dup
        16: aload_0
        17: invokespecial #80                 // Method scala/xml/dtd/impl/Base$Eps$."<init>":(Lscala/xml/dtd/impl/Base;)V
        20: putfield      #68                 // Field Eps$module:Lscala/xml/dtd/impl/Base$Eps$;
        23: aload_1
        24: monitorexit
        25: goto          31
        28: aload_1
        29: monitorexit
        30: athrow
        31: return
      Exception table:
         from    to  target type
             4    23    28   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class scala/xml/dtd/impl/Base ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/xml/dtd/impl/Base;

  public scala.xml.dtd.impl.Base();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #82                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 69: 0
        line 23: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/dtd/impl/Base;
}
InnerClasses:
  public #11= #10 of #2;                  // Alt=class scala/xml/dtd/impl/Base$Alt of class scala/xml/dtd/impl/Base
  public #14= #13 of #2;                  // Alt$=class scala/xml/dtd/impl/Base$Alt$ of class scala/xml/dtd/impl/Base
  public #17= #16 of #2;                  // Eps$=class scala/xml/dtd/impl/Base$Eps$ of class scala/xml/dtd/impl/Base
  public #20= #19 of #2;                  // Meta=class scala/xml/dtd/impl/Base$Meta of class scala/xml/dtd/impl/Base
  public abstract #23= #22 of #2;         // RegExp=class scala/xml/dtd/impl/Base$RegExp of class scala/xml/dtd/impl/Base
  public #26= #25 of #2;                  // Sequ=class scala/xml/dtd/impl/Base$Sequ of class scala/xml/dtd/impl/Base
  public #29= #28 of #2;                  // Sequ$=class scala/xml/dtd/impl/Base$Sequ$ of class scala/xml/dtd/impl/Base
  public #32= #31 of #2;                  // Star=class scala/xml/dtd/impl/Base$Star of class scala/xml/dtd/impl/Base
  public #35= #34 of #2;                  // Star$=class scala/xml/dtd/impl/Base$Star$ of class scala/xml/dtd/impl/Base
SourceFile: "Base.scala"
Deprecated: true
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t-bAB\"E\u0003\u00031E\nC\u0003R\u0001\u0011\u00051\u000bB\u0003W\u0001\t\u0005qKB\u0003^\u0001\u0005\u0005a\fC\u0003R\u0007\u0011\u0005q\fC\u0003a\u0007\u0019\u0005\u0011mB\u0003f\u0001!\u0005aMB\u0003h\u0001!\u0005\u0001\u000eC\u0003R\u000f\u0011\u0005\u0011\u000eC\u0003k\u000f\u0011\u00051\u000eC\u0003z\u000f\u0011\u0005!P\u0002\u0003h\u0001\u0001i\u0007\u0002\u00038\f\u0005\u000b\u0007I\u0011A8\t\u0011Q\\!\u0011!Q\u0001\nADQ!U\u0006\u0005\nUDq\u0001Y\u0006C\u0002\u0013\u0015\u0011\r\u0003\u0004x\u0017\u0001\u0006iAY\u0004\b\u0003#\u0001\u0001\u0012AA\n\r\u001d\t)\u0002\u0001E\u0001\u0003/Aa!\u0015\n\u0005\u0002\u0005e\u0001B\u00026\u0013\t\u0003\tY\u0002\u0003\u0004z%\u0011\u0005\u0011q\u0004\u0004\u0007\u0003+\u0001\u0001!!\n\t\u001194\"Q1A\u0005\u0002=D\u0001\u0002\u001e\f\u0003\u0002\u0003\u0006I\u0001\u001d\u0005\u0007#Z!I!a\n\t\u000f\u00014\"\u0019!C\u0003C\"1qO\u0006Q\u0001\u000e\t4a!a\u000b\u0001\u0001\u00065\u0002BCA\'9\tU\r\u0011\"\u0001\u0002P!I\u0011\u0011\u000b\u000f\u0003\u0012\u0003\u0006Ia\u001d\u0005\u0007#r!\t!a\u0015\t\u0011\u0001d\u0002R1A\u0005\u0006\u0005D\u0011\"!\u0017\u001d\u0003\u0003%\t!a\u0017\t\u0013\u0005}C$%A\u0005\u0002\u0005\u0005\u0004\"CA<9\u0005\u0005I\u0011IA=\u0011%\tY\tHA\u0001\n\u0003\ti\tC\u0005\u0002\u0016r\t\t\u0011\"\u0001\u0002\u0018\"I\u00111\u0015\u000f\u0002\u0002\u0013\u0005\u0013Q\u0015\u0005\n\u0003_c\u0012\u0011!C\u0001\u0003cC\u0011\"!.\u001d\u0003\u0003%\t%a.\t\u0013\u0005mF$!A\u0005B\u0005u\u0006\"CA`9\u0005\u0005I\u0011IAa\u0011%\t\u0019\rHA\u0001\n\u0003\n)mB\u0005\u0002J\u0002\t\t\u0011#\u0001\u0002L\u001aI\u00111\u0006\u0001\u0002\u0002#\u0005\u0011Q\u001a\u0005\u0007#6\"\t!!:\t\u0013\u0005}V&!A\u0005F\u0005\u0005\u0007\u0002\u00036.\u0003\u0003%\t)a:\t\u0013\u0005-X&!A\u0005\u0002\u00065xaBA}\u0001!\u0005\u00151 \u0004\b\u0003{\u0004\u0001\u0012QA\u0000\u0011\u0019\t6\u0007\"\u0001\u0003\u0002!A\u0001m\rEC\u0002\u0013\u0015\u0011\rC\u0004\u0002@N\"\t%!1\t\u0013\u0005]4\'!A\u0005B\u0005e\u0004\"CAFg\u0005\u0005I\u0011AAG\u0011%\t)jMA\u0001\n\u0003\u0011\u0019\u0001C\u0005\u0002$N\n\t\u0011\"\u0011\u0002&\"I\u0011qV\u001a\u0002\u0002\u0013\u0005!q\u0001\u0005\n\u0003w\u001b\u0014\u0011!C!\u0003{3aAa\u0003\u0001\u0001\t5\u0001\"\u0003B\b{\t\u0005\t\u0015!\u0003t\u0011\u0019\tV\b\"\u0001\u0003\u0012!9\u0001-\u0010b\u0001\n\u000b\t\u0007BB<>A\u00035!\rC\u0004\u0002Nu\"\t!a\u0014\u0003\t\t\u000b7/\u001a\u0006\u0003\u000b\u001a\u000bA![7qY*\u0011q\tS\u0001\u0004IR$\'BA%K\u0003\rAX\u000e\u001c\u0006\u0002\u0017\u0006)1oY1mCN\u0011\u0001!\u0014\t\u0003\u001d>k\u0011AS\u0005\u0003!*\u0013a!\u00118z%\u00164\u0017A\u0002\u001fj]&$hh\u0001\u0001\u0015\u0003Q\u0003\"!\u0016\u0001\u000e\u0003\u0011\u0013\u0001b\u0018:fO\u0016D\b\u000fV\t\u00031n\u0003\"AT-\n\u0005iS%a\u0002(pi\"Lgn\u001a\t\u00039\u000ei\u0011\u0001\u0001\u0002\u0007%\u0016<W\t\u001f9\u0014\u0005\riE#A.\u0002\u0015%\u001ch*\u001e7mC\ndW-F\u0001c!\tq5-\u0003\u0002e\u0015\n9!i\\8mK\u0006t\u0017aA!miB\u0011Al\u0002\u0002\u0004\u00032$8CA\u0004N)\u00051\u0017!B1qa2LHC\u00017y!\ta6b\u0005\u0002\f7\u0006\u0011!o]\u000b\u0002aB\u0019a*]:\n\u0005IT%A\u0003\u001fsKB,\u0017\r^3e}A\u0011ALA\u0001\u0004eN\u0004CC\u00017w\u0011\u0015qg\u00021\u0001q\u0003-I7OT;mY\u0006\u0014G.\u001a\u0011\t\u000b9L\u0001\u0019\u00019\u0002\u0015Ut\u0017\r\u001d9msN+\u0017\u000fF\u0002|\u0003\u001b\u00012A\u0014?\u007f\u0013\ti(J\u0001\u0003T_6,\u0007\u0003B@\u0002\nMl!!!\u0001\u000b\t\u0005\r\u0011QA\u0001\nS6lW\u000f^1cY\u0016T1!a\u0002K\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0005\u0003\u0017\t\tAA\u0002TKFDa!a\u0004\u000b\u0001\u0004a\u0017!\u0001=\u0002\tM+\u0017/\u001e\t\u00039J\u0011AaU3rkN\u0011!#\u0014\u000b\u0003\u0003\'!2aWA\u000f\u0011\u0015qG\u00031\u0001q)\rY\u0018\u0011\u0005\u0005\b\u0003\u001f)\u0002\u0019AA\u0012!\tafc\u0005\u0002\u00177R!\u00111EA\u0015\u0011\u0015q\u0017\u00041\u0001q\u0005\u0011\u0019F/\u0019:\u0014\rqY\u0016qFA\u001b!\rq\u0015\u0011G\u0005\u0004\u0003gQ%a\u0002)s_\u0012,8\r\u001e\t\u0005\u0003o\t9E\u0004\u0003\u0002:\u0005\rc\u0002BA\u001e\u0003\u0003j!!!\u0010\u000b\u0007\u0005}\"+\u0001\u0004=e>|GOP\u0005\u0002\u0017&\u0019\u0011Q\t&\u0002\u000fA\f7m[1hK&!\u0011\u0011JA&\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\r\t)ES\u0001\u0002eV\t1/\u0001\u0002sAQ!\u0011QKA,!\taF\u0004\u0003\u0004\u0002N}\u0001\ra]\u0001\u0005G>\u0004\u0018\u0010\u0006\u0003\u0002V\u0005u\u0003\u0002CA\'CA\u0005\t\u0019A:\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%cU\u0011\u00111\r\u0016\u0004g\u0006\u00154FAA4!\u0011\tI\'a\u001d\u000e\u0005\u0005-$\u0002BA7\u0003_\n\u0011\"\u001e8dQ\u0016\u001c7.\u001a3\u000b\u0007\u0005E$*\u0001\u0006b]:|G/\u0019;j_:LA!!\u001e\u0002l\t\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\tY\b\u0005\u0003\u0002~\u0005\u001dUBAA@\u0015\u0011\t\t)a!\u0002\t1\fgn\u001a\u0006\u0003\u0003\u000b\u000bAA[1wC&!\u0011\u0011RA@\u0005\u0019\u0019FO]5oO\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011q\u0012\t\u0004\u001d\u0006E\u0015bAAJ\u0015\n\u0019\u0011J\u001c;\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR!\u0011\u0011TAP!\rq\u00151T\u0005\u0004\u0003;S%aA!os\"I\u0011\u0011U\u0013\u0002\u0002\u0003\u0007\u0011qR\u0001\u0004q\u0012\n\u0014a\u00049s_\u0012,8\r^%uKJ\fGo\u001c:\u0016\u0005\u0005\u001d\u0006CBAU\u0003W\u000bI*\u0004\u0002\u0002\u0006%!\u0011QVA\u0003\u0005!IE/\u001a:bi>\u0014\u0018\u0001C2b]\u0016\u000bX/\u00197\u0015\u0007\t\f\u0019\fC\u0005\u0002\"\u001e\n\t\u00111\u0001\u0002\u001a\u0006\u0011\u0002O]8ek\u000e$X\t\\3nK:$h*Y7f)\u0011\tY(!/\t\u0013\u0005\u0005\u0006&!AA\u0002\u0005=\u0015\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005=\u0015\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u0005m\u0014AB3rk\u0006d7\u000fF\u0002c\u0003\u000fD\u0011\"!),\u0003\u0003\u0005\r!!\'\u0002\tM#\u0018M\u001d\t\u000396\u001aR!LAh\u00037\u0004r!!5\u0002XN\f)&\u0004\u0002\u0002T*\u0019\u0011Q\u001b&\u0002\u000fI,h\u000e^5nK&!\u0011\u0011\\Aj\u0005E\t%m\u001d;sC\u000e$h)\u001e8di&|g.\r\t\u0005\u0003;\f\u0019/\u0004\u0002\u0002`*!\u0011\u0011]AB\u0003\tIw.\u0003\u0003\u0002J\u0005}GCAAf)\u0011\t)&!;\t\r\u00055\u0003\u00071\u0001t\u0003\u001d)h.\u00199qYf$B!a<\u0002vB!a*!=t\u0013\r\t\u0019P\u0013\u0002\u0007\u001fB$\u0018n\u001c8\t\u0013\u0005]\u0018\'!AA\u0002\u0005U\u0013a\u0001=%a\u0005\u0019Q\t]:\u0011\u0005q\u001b$aA#qgN11gWA\u0018\u0003k!\"!a?\u0015\t\u0005e%Q\u0001\u0005\n\u0003CK\u0014\u0011!a\u0001\u0003\u001f#2A\u0019B\u0005\u0011%\t\tkOA\u0001\u0002\u0004\tIJ\u0001\u0003NKR\f7CA\u001f\\\u0003\t\u0011\u0018\u0007\u0006\u0003\u0003\u0014\tU\u0001C\u0001/>\u0011\u0019\u0011ya\u0010a\u0001g\"Z\u0001A!\u0007\u0003 \t\u0005\"Q\u0005B\u0014!\rq%1D\u0005\u0004\u0005;Q%A\u00033faJ,7-\u0019;fI\u00069Q.Z:tC\u001e,\u0017E\u0001B\u0012\u0003i!\u0006.[:!G2\f7o\u001d\u0011xS2d\u0007EY3!e\u0016lwN^3e\u0003\u0015\u0019\u0018N\\2fC\t\u0011I#\u0001\u00043]E\u0002d\u0006\r"
    )
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 00 00 09 00 48 00 30 00 00 0B 00 2C 01 00 2F
   00 30 01 00 41 00 42 01 00 45 00 30 01 00 1A 00
   35 01 00 38 00 30 01 00 20 00 3B 01 00 3E 00 30
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
