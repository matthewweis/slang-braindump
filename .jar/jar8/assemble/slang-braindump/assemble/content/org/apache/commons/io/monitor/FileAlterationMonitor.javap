Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/monitor/FileAlterationMonitor.class
  Last modified May 29, 2022; size 3710 bytes
  SHA-256 checksum 0ad2217b0b7d6d6d9c1add31110a73784a0a7a4207fe498a2f04de4b2df0afd1
  Compiled from "FileAlterationMonitor.java"
public final class org.apache.commons.io.monitor.FileAlterationMonitor implements java.lang.Runnable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #36                         // org/apache/commons/io/monitor/FileAlterationMonitor
  super_class: #37                        // java/lang/Object
  interfaces: 1, fields: 5, methods: 12, attributes: 1
Constant pool:
    #1 = Long               10000l
    #3 = Methodref          #36.#88       // org/apache/commons/io/monitor/FileAlterationMonitor."<init>":(J)V
    #4 = Methodref          #37.#89       // java/lang/Object."<init>":()V
    #5 = Class              #90           // java/util/concurrent/CopyOnWriteArrayList
    #6 = Methodref          #5.#89        // java/util/concurrent/CopyOnWriteArrayList."<init>":()V
    #7 = Fieldref           #36.#91       // org/apache/commons/io/monitor/FileAlterationMonitor.observers:Ljava/util/List;
    #8 = Fieldref           #36.#92       // org/apache/commons/io/monitor/FileAlterationMonitor.thread:Ljava/lang/Thread;
    #9 = Fieldref           #36.#93       // org/apache/commons/io/monitor/FileAlterationMonitor.running:Z
   #10 = Fieldref           #36.#94       // org/apache/commons/io/monitor/FileAlterationMonitor.interval:J
   #11 = Methodref          #36.#95       // org/apache/commons/io/monitor/FileAlterationMonitor.addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V
   #12 = Fieldref           #36.#96       // org/apache/commons/io/monitor/FileAlterationMonitor.threadFactory:Ljava/util/concurrent/ThreadFactory;
   #13 = InterfaceMethodref #97.#98       // java/util/List.add:(Ljava/lang/Object;)Z
   #14 = InterfaceMethodref #97.#99       // java/util/List.remove:(Ljava/lang/Object;)Z
   #15 = Class              #100          // java/lang/IllegalStateException
   #16 = String             #101          // Monitor is already running
   #17 = Methodref          #15.#102      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #18 = InterfaceMethodref #97.#103      // java/util/List.iterator:()Ljava/util/Iterator;
   #19 = InterfaceMethodref #104.#105     // java/util/Iterator.hasNext:()Z
   #20 = InterfaceMethodref #104.#106     // java/util/Iterator.next:()Ljava/lang/Object;
   #21 = Class              #107          // org/apache/commons/io/monitor/FileAlterationObserver
   #22 = Methodref          #21.#108      // org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V
   #23 = InterfaceMethodref #109.#110     // java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
   #24 = Class              #111          // java/lang/Thread
   #25 = Methodref          #24.#112      // java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
   #26 = Methodref          #24.#113      // java/lang/Thread.start:()V
   #27 = Methodref          #36.#114      // org/apache/commons/io/monitor/FileAlterationMonitor.stop:(J)V
   #28 = String             #115          // Monitor is not running
   #29 = Methodref          #24.#116      // java/lang/Thread.interrupt:()V
   #30 = Methodref          #24.#117      // java/lang/Thread.join:(J)V
   #31 = Class              #118          // java/lang/InterruptedException
   #32 = Methodref          #24.#119      // java/lang/Thread.currentThread:()Ljava/lang/Thread;
   #33 = Methodref          #21.#120      // org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V
   #34 = Methodref          #21.#121      // org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V
   #35 = Methodref          #24.#122      // java/lang/Thread.sleep:(J)V
   #36 = Class              #123          // org/apache/commons/io/monitor/FileAlterationMonitor
   #37 = Class              #124          // java/lang/Object
   #38 = Class              #125          // java/lang/Runnable
   #39 = Utf8               interval
   #40 = Utf8               J
   #41 = Utf8               observers
   #42 = Utf8               Ljava/util/List;
   #43 = Utf8               Signature
   #44 = Utf8               Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;
   #45 = Utf8               thread
   #46 = Utf8               Ljava/lang/Thread;
   #47 = Utf8               threadFactory
   #48 = Utf8               Ljava/util/concurrent/ThreadFactory;
   #49 = Utf8               running
   #50 = Utf8               Z
   #51 = Utf8               <init>
   #52 = Utf8               ()V
   #53 = Utf8               Code
   #54 = Utf8               LineNumberTable
   #55 = Utf8               LocalVariableTable
   #56 = Utf8               this
   #57 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationMonitor;
   #58 = Utf8               (J)V
   #59 = Utf8               (J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V
   #60 = Utf8               observer
   #61 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationObserver;
   #62 = Utf8               [Lorg/apache/commons/io/monitor/FileAlterationObserver;
   #63 = Utf8               StackMapTable
   #64 = Class              #123          // org/apache/commons/io/monitor/FileAlterationMonitor
   #65 = Class              #62           // "[Lorg/apache/commons/io/monitor/FileAlterationObserver;"
   #66 = Utf8               getInterval
   #67 = Utf8               ()J
   #68 = Utf8               setThreadFactory
   #69 = Utf8               (Ljava/util/concurrent/ThreadFactory;)V
   #70 = Utf8               addObserver
   #71 = Utf8               (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V
   #72 = Utf8               removeObserver
   #73 = Utf8               getObservers
   #74 = Utf8               ()Ljava/lang/Iterable;
   #75 = Utf8               ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;
   #76 = Utf8               start
   #77 = Class              #126          // java/util/Iterator
   #78 = Utf8               Exceptions
   #79 = Class              #127          // java/lang/Exception
   #80 = Utf8               stop
   #81 = Utf8               e
   #82 = Utf8               Ljava/lang/InterruptedException;
   #83 = Utf8               stopInterval
   #84 = Class              #118          // java/lang/InterruptedException
   #85 = Utf8               run
   #86 = Utf8               SourceFile
   #87 = Utf8               FileAlterationMonitor.java
   #88 = NameAndType        #51:#58       // "<init>":(J)V
   #89 = NameAndType        #51:#52       // "<init>":()V
   #90 = Utf8               java/util/concurrent/CopyOnWriteArrayList
   #91 = NameAndType        #41:#42       // observers:Ljava/util/List;
   #92 = NameAndType        #45:#46       // thread:Ljava/lang/Thread;
   #93 = NameAndType        #49:#50       // running:Z
   #94 = NameAndType        #39:#40       // interval:J
   #95 = NameAndType        #70:#71       // addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V
   #96 = NameAndType        #47:#48       // threadFactory:Ljava/util/concurrent/ThreadFactory;
   #97 = Class              #128          // java/util/List
   #98 = NameAndType        #129:#130     // add:(Ljava/lang/Object;)Z
   #99 = NameAndType        #131:#130     // remove:(Ljava/lang/Object;)Z
  #100 = Utf8               java/lang/IllegalStateException
  #101 = Utf8               Monitor is already running
  #102 = NameAndType        #51:#132      // "<init>":(Ljava/lang/String;)V
  #103 = NameAndType        #133:#134     // iterator:()Ljava/util/Iterator;
  #104 = Class              #126          // java/util/Iterator
  #105 = NameAndType        #135:#136     // hasNext:()Z
  #106 = NameAndType        #137:#138     // next:()Ljava/lang/Object;
  #107 = Utf8               org/apache/commons/io/monitor/FileAlterationObserver
  #108 = NameAndType        #139:#52      // initialize:()V
  #109 = Class              #140          // java/util/concurrent/ThreadFactory
  #110 = NameAndType        #141:#142     // newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
  #111 = Utf8               java/lang/Thread
  #112 = NameAndType        #51:#143      // "<init>":(Ljava/lang/Runnable;)V
  #113 = NameAndType        #76:#52       // start:()V
  #114 = NameAndType        #80:#58       // stop:(J)V
  #115 = Utf8               Monitor is not running
  #116 = NameAndType        #144:#52      // interrupt:()V
  #117 = NameAndType        #145:#58      // join:(J)V
  #118 = Utf8               java/lang/InterruptedException
  #119 = NameAndType        #146:#147     // currentThread:()Ljava/lang/Thread;
  #120 = NameAndType        #148:#52      // destroy:()V
  #121 = NameAndType        #149:#52      // checkAndNotify:()V
  #122 = NameAndType        #150:#58      // sleep:(J)V
  #123 = Utf8               org/apache/commons/io/monitor/FileAlterationMonitor
  #124 = Utf8               java/lang/Object
  #125 = Utf8               java/lang/Runnable
  #126 = Utf8               java/util/Iterator
  #127 = Utf8               java/lang/Exception
  #128 = Utf8               java/util/List
  #129 = Utf8               add
  #130 = Utf8               (Ljava/lang/Object;)Z
  #131 = Utf8               remove
  #132 = Utf8               (Ljava/lang/String;)V
  #133 = Utf8               iterator
  #134 = Utf8               ()Ljava/util/Iterator;
  #135 = Utf8               hasNext
  #136 = Utf8               ()Z
  #137 = Utf8               next
  #138 = Utf8               ()Ljava/lang/Object;
  #139 = Utf8               initialize
  #140 = Utf8               java/util/concurrent/ThreadFactory
  #141 = Utf8               newThread
  #142 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;
  #143 = Utf8               (Ljava/lang/Runnable;)V
  #144 = Utf8               interrupt
  #145 = Utf8               join
  #146 = Utf8               currentThread
  #147 = Utf8               ()Ljava/lang/Thread;
  #148 = Utf8               destroy
  #149 = Utf8               checkAndNotify
  #150 = Utf8               sleep
{
  private final long interval;
    descriptor: J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.util.List<org.apache.commons.io.monitor.FileAlterationObserver> observers;
    descriptor: Ljava/util/List;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #44                          // Ljava/util/List<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;

  private java.lang.Thread thread;
    descriptor: Ljava/lang/Thread;
    flags: (0x0002) ACC_PRIVATE

  private java.util.concurrent.ThreadFactory threadFactory;
    descriptor: Ljava/util/concurrent/ThreadFactory;
    flags: (0x0002) ACC_PRIVATE

  private volatile boolean running;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.apache.commons.io.monitor.FileAlterationMonitor();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc2_w        #1                  // long 10000l
         4: invokespecial #3                  // Method "<init>":(J)V
         7: return
      LineNumberTable:
        line 42: 0
        line 43: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;

  public org.apache.commons.io.monitor.FileAlterationMonitor(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: invokespecial #4                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
         8: dup
         9: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
        12: putfield      #7                  // Field observers:Ljava/util/List;
        15: aload_0
        16: aconst_null
        17: putfield      #8                  // Field thread:Ljava/lang/Thread;
        20: aload_0
        21: iconst_0
        22: putfield      #9                  // Field running:Z
        25: aload_0
        26: lload_1
        27: putfield      #10                 // Field interval:J
        30: return
      LineNumberTable:
        line 51: 0
        line 33: 4
        line 34: 15
        line 36: 20
        line 52: 25
        line 53: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
            0      31     1 interval   J

  public org.apache.commons.io.monitor.FileAlterationMonitor(long, org.apache.commons.io.monitor.FileAlterationObserver...);
    descriptor: (J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V
    flags: (0x0081) ACC_PUBLIC, ACC_VARARGS
    Code:
      stack=3, locals=8, args_size=3
         0: aload_0
         1: lload_1
         2: invokespecial #3                  // Method "<init>":(J)V
         5: aload_3
         6: ifnull        46
         9: aload_3
        10: astore        4
        12: aload         4
        14: arraylength
        15: istore        5
        17: iconst_0
        18: istore        6
        20: iload         6
        22: iload         5
        24: if_icmpge     46
        27: aload         4
        29: iload         6
        31: aaload
        32: astore        7
        34: aload_0
        35: aload         7
        37: invokevirtual #11                 // Method addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V
        40: iinc          6, 1
        43: goto          20
        46: return
      LineNumberTable:
        line 63: 0
        line 64: 5
        line 65: 9
        line 66: 34
        line 65: 40
        line 69: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           34       6     7 observer   Lorg/apache/commons/io/monitor/FileAlterationObserver;
            0      47     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
            0      47     1 interval   J
            0      47     3 observers   [Lorg/apache/commons/io/monitor/FileAlterationObserver;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class org/apache/commons/io/monitor/FileAlterationMonitor, long, class "[Lorg/apache/commons/io/monitor/FileAlterationObserver;", class "[Lorg/apache/commons/io/monitor/FileAlterationObserver;", int, int ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 25

  public long getInterval();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #10                 // Field interval:J
         4: lreturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;

  public synchronized void setThreadFactory(java.util.concurrent.ThreadFactory);
    descriptor: (Ljava/util/concurrent/ThreadFactory;)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #12                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
         5: return
      LineNumberTable:
        line 86: 0
        line 87: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
            0       6     1 threadFactory   Ljava/util/concurrent/ThreadFactory;

  public void addObserver(org.apache.commons.io.monitor.FileAlterationObserver);
    descriptor: (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_0
         5: getfield      #7                  // Field observers:Ljava/util/List;
         8: aload_1
         9: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
        14: pop
        15: return
      LineNumberTable:
        line 95: 0
        line 96: 4
        line 98: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
            0      16     1 observer   Lorg/apache/commons/io/monitor/FileAlterationObserver;
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */

  public void removeObserver(org.apache.commons.io.monitor.FileAlterationObserver);
    descriptor: (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnull        20
         4: aload_0
         5: getfield      #7                  // Field observers:Ljava/util/List;
         8: aload_1
         9: invokeinterface #14,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
        14: ifeq          20
        17: goto          4
        20: return
      LineNumberTable:
        line 106: 0
        line 107: 4
        line 111: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
            0      21     1 observer   Lorg/apache/commons/io/monitor/FileAlterationObserver;
      StackMapTable: number_of_entries = 2
        frame_type = 4 /* same */
        frame_type = 15 /* same */

  public java.lang.Iterable<org.apache.commons.io.monitor.FileAlterationObserver> getObservers();
    descriptor: ()Ljava/lang/Iterable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #7                  // Field observers:Ljava/util/List;
         4: areturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
    Signature: #75                          // ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;

  public synchronized void start() throws java.lang.Exception;
    descriptor: ()V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: getfield      #9                  // Field running:Z
         4: ifeq          17
         7: new           #15                 // class java/lang/IllegalStateException
        10: dup
        11: ldc           #16                 // String Monitor is already running
        13: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: getfield      #7                  // Field observers:Ljava/util/List;
        21: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        26: astore_1
        27: aload_1
        28: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        33: ifeq          53
        36: aload_1
        37: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        42: checkcast     #21                 // class org/apache/commons/io/monitor/FileAlterationObserver
        45: astore_2
        46: aload_2
        47: invokevirtual #22                 // Method org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V
        50: goto          27
        53: aload_0
        54: iconst_1
        55: putfield      #9                  // Field running:Z
        58: aload_0
        59: getfield      #12                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
        62: ifnull        82
        65: aload_0
        66: aload_0
        67: getfield      #12                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
        70: aload_0
        71: invokeinterface #23,  2           // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
        76: putfield      #8                  // Field thread:Ljava/lang/Thread;
        79: goto          94
        82: aload_0
        83: new           #24                 // class java/lang/Thread
        86: dup
        87: aload_0
        88: invokespecial #25                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
        91: putfield      #8                  // Field thread:Ljava/lang/Thread;
        94: aload_0
        95: getfield      #8                  // Field thread:Ljava/lang/Thread;
        98: invokevirtual #26                 // Method java/lang/Thread.start:()V
       101: return
      LineNumberTable:
        line 129: 0
        line 130: 7
        line 132: 17
        line 133: 46
        line 134: 50
        line 135: 53
        line 136: 58
        line 137: 65
        line 139: 82
        line 141: 94
        line 142: 101
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           46       4     2 observer   Lorg/apache/commons/io/monitor/FileAlterationObserver;
            0     102     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
      StackMapTable: number_of_entries = 5
        frame_type = 17 /* same */
        frame_type = 252 /* append */
          offset_delta = 9
          locals = [ class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 25
        frame_type = 28 /* same */
        frame_type = 11 /* same */
    Exceptions:
      throws java.lang.Exception

  public synchronized void stop() throws java.lang.Exception;
    descriptor: ()V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: getfield      #10                 // Field interval:J
         5: invokevirtual #27                 // Method stop:(J)V
         8: return
      LineNumberTable:
        line 150: 0
        line 151: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
    Exceptions:
      throws java.lang.Exception

  public synchronized void stop(long) throws java.lang.Exception;
    descriptor: (J)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=5, args_size=2
         0: aload_0
         1: getfield      #9                  // Field running:Z
         4: ifne          17
         7: new           #15                 // class java/lang/IllegalStateException
        10: dup
        11: ldc           #28                 // String Monitor is not running
        13: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: iconst_0
        19: putfield      #9                  // Field running:Z
        22: aload_0
        23: getfield      #8                  // Field thread:Ljava/lang/Thread;
        26: invokevirtual #29                 // Method java/lang/Thread.interrupt:()V
        29: aload_0
        30: getfield      #8                  // Field thread:Ljava/lang/Thread;
        33: lload_1
        34: invokevirtual #30                 // Method java/lang/Thread.join:(J)V
        37: goto          47
        40: astore_3
        41: invokestatic  #32                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
        44: invokevirtual #29                 // Method java/lang/Thread.interrupt:()V
        47: aload_0
        48: getfield      #7                  // Field observers:Ljava/util/List;
        51: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        56: astore_3
        57: aload_3
        58: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        63: ifeq          85
        66: aload_3
        67: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        72: checkcast     #21                 // class org/apache/commons/io/monitor/FileAlterationObserver
        75: astore        4
        77: aload         4
        79: invokevirtual #33                 // Method org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V
        82: goto          57
        85: return
      Exception table:
         from    to  target type
            22    37    40   Class java/lang/InterruptedException
      LineNumberTable:
        line 162: 0
        line 163: 7
        line 165: 17
        line 167: 22
        line 168: 29
        line 171: 37
        line 169: 40
        line 170: 41
        line 172: 47
        line 173: 77
        line 174: 82
        line 175: 85
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           41       6     3     e   Ljava/lang/InterruptedException;
           77       5     4 observer   Lorg/apache/commons/io/monitor/FileAlterationObserver;
            0      86     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
            0      86     1 stopInterval   J
      StackMapTable: number_of_entries = 5
        frame_type = 17 /* same */
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class java/lang/InterruptedException ]
        frame_type = 6 /* same */
        frame_type = 252 /* append */
          offset_delta = 9
          locals = [ class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 27
    Exceptions:
      throws java.lang.Exception

  public void run();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: getfield      #9                  // Field running:Z
         4: ifeq          67
         7: aload_0
         8: getfield      #7                  // Field observers:Ljava/util/List;
        11: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        16: astore_1
        17: aload_1
        18: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        23: ifeq          43
        26: aload_1
        27: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        32: checkcast     #21                 // class org/apache/commons/io/monitor/FileAlterationObserver
        35: astore_2
        36: aload_2
        37: invokevirtual #34                 // Method org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V
        40: goto          17
        43: aload_0
        44: getfield      #9                  // Field running:Z
        47: ifne          53
        50: goto          67
        53: aload_0
        54: getfield      #10                 // Field interval:J
        57: invokestatic  #35                 // Method java/lang/Thread.sleep:(J)V
        60: goto          0
        63: astore_1
        64: goto          0
        67: return
      Exception table:
         from    to  target type
            53    60    63   Class java/lang/InterruptedException
      LineNumberTable:
        line 182: 0
        line 183: 7
        line 184: 36
        line 185: 40
        line 186: 43
        line 187: 50
        line 190: 53
        line 193: 60
        line 191: 63
        line 193: 64
        line 195: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           36       4     2 observer   Lorg/apache/commons/io/monitor/FileAlterationObserver;
            0      68     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;
      StackMapTable: number_of_entries = 6
        frame_type = 0 /* same */
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 25
        frame_type = 9 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/InterruptedException ]
        frame_type = 3 /* same */
}
SourceFile: "FileAlterationMonitor.java"
