Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/Validate.class
  Last modified May 29, 2022; size 14981 bytes
  SHA-256 checksum 348aaefc1c7f8ee09c8ea325f6366fa2c53e25d0226b90e131547f6d15490295
  Compiled from "Validate.java"
public class org.apache.commons.lang3.Validate
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                          // org/apache/commons/lang3/Validate
  super_class: #3                         // java/lang/Object
  interfaces: 0, fields: 20, methods: 51, attributes: 1
Constant pool:
    #1 = Methodref          #3.#220       // java/lang/Object."<init>":()V
    #2 = Class              #221          // java/lang/IllegalArgumentException
    #3 = Class              #222          // java/lang/Object
    #4 = Methodref          #223.#224     // java/lang/Long.valueOf:(J)Ljava/lang/Long;
    #5 = Methodref          #207.#225     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    #6 = Methodref          #2.#226       // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    #7 = Methodref          #227.#228     // java/lang/Double.valueOf:(D)Ljava/lang/Double;
    #8 = Class              #229          // org/apache/commons/lang3/Validate
    #9 = String             #230          // The validated expression is false
   #10 = String             #231          // The validated object is null
   #11 = Methodref          #8.#232       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
   #12 = Class              #233          // java/lang/NullPointerException
   #13 = Methodref          #12.#226      // java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
   #14 = String             #234          // The validated array is empty
   #15 = Methodref          #8.#235       // org/apache/commons/lang3/Validate.notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
   #16 = InterfaceMethodref #236.#237     // java/util/Collection.isEmpty:()Z
   #17 = String             #238          // The validated collection is empty
   #18 = Methodref          #8.#239       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
   #19 = InterfaceMethodref #240.#237     // java/util/Map.isEmpty:()Z
   #20 = String             #241          // The validated map is empty
   #21 = Methodref          #8.#242       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;
   #22 = InterfaceMethodref #243.#244     // java/lang/CharSequence.length:()I
   #23 = String             #245          // The validated character sequence is empty
   #24 = Methodref          #8.#246       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
   #25 = Methodref          #247.#248     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
   #26 = String             #249          // The validated character sequence is blank
   #27 = Methodref          #8.#250       // org/apache/commons/lang3/Validate.notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
   #28 = Methodref          #8.#251       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;
   #29 = Methodref          #252.#253     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #30 = Methodref          #254.#255     // org/apache/commons/lang3/ArrayUtils.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
   #31 = String             #256          // The validated array contains null element at index: %d
   #32 = Methodref          #8.#257       // org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
   #33 = InterfaceMethodref #258.#259     // java/lang/Iterable.iterator:()Ljava/util/Iterator;
   #34 = InterfaceMethodref #158.#260     // java/util/Iterator.hasNext:()Z
   #35 = InterfaceMethodref #158.#261     // java/util/Iterator.next:()Ljava/lang/Object;
   #36 = Methodref          #254.#262     // org/apache/commons/lang3/ArrayUtils.addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
   #37 = String             #263          // The validated collection contains null element at index: %d
   #38 = Methodref          #8.#264       // org/apache/commons/lang3/Validate.noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;
   #39 = Class              #265          // java/lang/IndexOutOfBoundsException
   #40 = Methodref          #39.#226      // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   #41 = String             #266          // The validated array index is invalid: %d
   #42 = Methodref          #8.#267       // org/apache/commons/lang3/Validate.validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
   #43 = InterfaceMethodref #236.#268     // java/util/Collection.size:()I
   #44 = String             #269          // The validated collection index is invalid: %d
   #45 = Methodref          #8.#270       // org/apache/commons/lang3/Validate.validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
   #46 = String             #271          // The validated character sequence index is invalid: %d
   #47 = Methodref          #8.#272       // org/apache/commons/lang3/Validate.validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
   #48 = Class              #273          // java/lang/IllegalStateException
   #49 = String             #274          // The validated state is false
   #50 = Methodref          #48.#226      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #51 = Methodref          #275.#276     // java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
   #52 = String             #277          // The string %s does not match the pattern %s
   #53 = String             #278          // The validated value is not a number
   #54 = Methodref          #8.#279       // org/apache/commons/lang3/Validate.notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V
   #55 = Methodref          #227.#280     // java/lang/Double.isNaN:(D)Z
   #56 = String             #281          // The value is invalid: %f
   #57 = Methodref          #8.#282       // org/apache/commons/lang3/Validate.finite:(DLjava/lang/String;[Ljava/lang/Object;)V
   #58 = Methodref          #227.#283     // java/lang/Double.isInfinite:(D)Z
   #59 = InterfaceMethodref #284.#285     // java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
   #60 = String             #286          // The value %s is not in the specified inclusive range of %s to %s
   #61 = String             #287          // The value %s is not in the specified exclusive range of %s to %s
   #62 = Methodref          #206.#288     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z
   #63 = String             #289          // Expected type: %s, actual: %s
   #64 = Methodref          #206.#290     // java/lang/Class.getName:()Ljava/lang/String;
   #65 = String             #291          // null
   #66 = Methodref          #3.#292       // java/lang/Object.getClass:()Ljava/lang/Class;
   #67 = Methodref          #206.#293     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
   #68 = String             #294          // Cannot assign a %s to a %s
   #69 = Utf8               DEFAULT_NOT_NAN_EX_MESSAGE
   #70 = Utf8               Ljava/lang/String;
   #71 = Utf8               ConstantValue
   #72 = Utf8               DEFAULT_FINITE_EX_MESSAGE
   #73 = Utf8               DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE
   #74 = Utf8               DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE
   #75 = Utf8               DEFAULT_MATCHES_PATTERN_EX
   #76 = Utf8               DEFAULT_IS_NULL_EX_MESSAGE
   #77 = Utf8               DEFAULT_IS_TRUE_EX_MESSAGE
   #78 = Utf8               DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE
   #79 = Utf8               DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE
   #80 = Utf8               DEFAULT_NOT_BLANK_EX_MESSAGE
   #81 = Utf8               DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE
   #82 = Utf8               DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE
   #83 = Utf8               DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE
   #84 = Utf8               DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE
   #85 = Utf8               DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE
   #86 = Utf8               DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE
   #87 = Utf8               DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE
   #88 = Utf8               DEFAULT_VALID_STATE_EX_MESSAGE
   #89 = Utf8               DEFAULT_IS_ASSIGNABLE_EX_MESSAGE
   #90 = Utf8               DEFAULT_IS_INSTANCE_OF_EX_MESSAGE
   #91 = Utf8               <init>
   #92 = Utf8               ()V
   #93 = Utf8               Code
   #94 = Utf8               LineNumberTable
   #95 = Utf8               LocalVariableTable
   #96 = Utf8               this
   #97 = Utf8               Lorg/apache/commons/lang3/Validate;
   #98 = Utf8               isTrue
   #99 = Utf8               (ZLjava/lang/String;J)V
  #100 = Utf8               expression
  #101 = Utf8               Z
  #102 = Utf8               message
  #103 = Utf8               value
  #104 = Utf8               J
  #105 = Utf8               StackMapTable
  #106 = Utf8               (ZLjava/lang/String;D)V
  #107 = Utf8               D
  #108 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V
  #109 = Utf8               values
  #110 = Utf8               [Ljava/lang/Object;
  #111 = Utf8               (Z)V
  #112 = Utf8               notNull
  #113 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #114 = Utf8               object
  #115 = Utf8               Ljava/lang/Object;
  #116 = Utf8               LocalVariableTypeTable
  #117 = Utf8               TT;
  #118 = Utf8               Signature
  #119 = Utf8               <T:Ljava/lang/Object;>(TT;)TT;
  #120 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
  #121 = Utf8               <T:Ljava/lang/Object;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;
  #122 = Utf8               notEmpty
  #123 = Utf8               ([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
  #124 = Utf8               array
  #125 = Utf8               [TT;
  #126 = Utf8               <T:Ljava/lang/Object;>([TT;Ljava/lang/String;[Ljava/lang/Object;)[TT;
  #127 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;
  #128 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;
  #129 = Utf8               (Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
  #130 = Utf8               collection
  #131 = Utf8               Ljava/util/Collection;
  #132 = Utf8               <T::Ljava/util/Collection<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;
  #133 = Utf8               (Ljava/util/Collection;)Ljava/util/Collection;
  #134 = Utf8               <T::Ljava/util/Collection<*>;>(TT;)TT;
  #135 = Utf8               (Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;
  #136 = Utf8               map
  #137 = Utf8               Ljava/util/Map;
  #138 = Utf8               <T::Ljava/util/Map<**>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;
  #139 = Utf8               (Ljava/util/Map;)Ljava/util/Map;
  #140 = Utf8               <T::Ljava/util/Map<**>;>(TT;)TT;
  #141 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
  #142 = Utf8               chars
  #143 = Utf8               Ljava/lang/CharSequence;
  #144 = Utf8               <T::Ljava/lang/CharSequence;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;
  #145 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
  #146 = Utf8               <T::Ljava/lang/CharSequence;>(TT;)TT;
  #147 = Utf8               notBlank
  #148 = Utf8               noNullElements
  #149 = Utf8               values2
  #150 = Utf8               i
  #151 = Utf8               I
  #152 = Utf8               (Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;
  #153 = Utf8               it
  #154 = Utf8               Ljava/util/Iterator;
  #155 = Utf8               iterable
  #156 = Utf8               Ljava/lang/Iterable;
  #157 = Utf8               Ljava/util/Iterator<*>;
  #158 = Class              #295          // java/util/Iterator
  #159 = Utf8               <T::Ljava/lang/Iterable<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;
  #160 = Utf8               (Ljava/lang/Iterable;)Ljava/lang/Iterable;
  #161 = Utf8               <T::Ljava/lang/Iterable<*>;>(TT;)TT;
  #162 = Utf8               validIndex
  #163 = Utf8               ([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
  #164 = Utf8               index
  #165 = Utf8               <T:Ljava/lang/Object;>([TT;ILjava/lang/String;[Ljava/lang/Object;)[TT;
  #166 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;
  #167 = Utf8               <T:Ljava/lang/Object;>([TT;I)[TT;
  #168 = Utf8               (Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
  #169 = Utf8               <T::Ljava/util/Collection<*>;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;
  #170 = Utf8               (Ljava/util/Collection;I)Ljava/util/Collection;
  #171 = Utf8               <T::Ljava/util/Collection<*>;>(TT;I)TT;
  #172 = Utf8               (Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
  #173 = Utf8               <T::Ljava/lang/CharSequence;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;
  #174 = Utf8               (Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;
  #175 = Utf8               <T::Ljava/lang/CharSequence;>(TT;I)TT;
  #176 = Utf8               validState
  #177 = Utf8               matchesPattern
  #178 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;)V
  #179 = Utf8               input
  #180 = Utf8               pattern
  #181 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
  #182 = Utf8               notNaN
  #183 = Utf8               (D)V
  #184 = Utf8               (DLjava/lang/String;[Ljava/lang/Object;)V
  #185 = Utf8               finite
  #186 = Utf8               inclusiveBetween
  #187 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V
  #188 = Utf8               start
  #189 = Utf8               end
  #190 = Utf8               Ljava/lang/Comparable;
  #191 = Utf8               Ljava/lang/Comparable<TT;>;
  #192 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;)V
  #193 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V
  #194 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;Ljava/lang/String;[Ljava/lang/Object;)V
  #195 = Utf8               (JJJ)V
  #196 = Utf8               (JJJLjava/lang/String;)V
  #197 = Utf8               (DDD)V
  #198 = Utf8               (DDDLjava/lang/String;)V
  #199 = Utf8               exclusiveBetween
  #200 = Utf8               isInstanceOf
  #201 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)V
  #202 = Utf8               type
  #203 = Utf8               Ljava/lang/Class;
  #204 = Utf8               obj
  #205 = Utf8               Ljava/lang/Class<*>;
  #206 = Class              #296          // java/lang/Class
  #207 = Class              #297          // java/lang/String
  #208 = Class              #110          // "[Ljava/lang/Object;"
  #209 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;)V
  #210 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
  #211 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
  #212 = Utf8               isAssignableFrom
  #213 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;)V
  #214 = Utf8               superType
  #215 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V
  #216 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V
  #217 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V
  #218 = Utf8               SourceFile
  #219 = Utf8               Validate.java
  #220 = NameAndType        #91:#92       // "<init>":()V
  #221 = Utf8               java/lang/IllegalArgumentException
  #222 = Utf8               java/lang/Object
  #223 = Class              #298          // java/lang/Long
  #224 = NameAndType        #299:#300     // valueOf:(J)Ljava/lang/Long;
  #225 = NameAndType        #301:#302     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #226 = NameAndType        #91:#303      // "<init>":(Ljava/lang/String;)V
  #227 = Class              #304          // java/lang/Double
  #228 = NameAndType        #299:#305     // valueOf:(D)Ljava/lang/Double;
  #229 = Utf8               org/apache/commons/lang3/Validate
  #230 = Utf8               The validated expression is false
  #231 = Utf8               The validated object is null
  #232 = NameAndType        #112:#120     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
  #233 = Utf8               java/lang/NullPointerException
  #234 = Utf8               The validated array is empty
  #235 = NameAndType        #122:#123     // notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
  #236 = Class              #306          // java/util/Collection
  #237 = NameAndType        #307:#308     // isEmpty:()Z
  #238 = Utf8               The validated collection is empty
  #239 = NameAndType        #122:#129     // notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
  #240 = Class              #309          // java/util/Map
  #241 = Utf8               The validated map is empty
  #242 = NameAndType        #122:#135     // notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;
  #243 = Class              #310          // java/lang/CharSequence
  #244 = NameAndType        #311:#312     // length:()I
  #245 = Utf8               The validated character sequence is empty
  #246 = NameAndType        #122:#141     // notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
  #247 = Class              #313          // org/apache/commons/lang3/StringUtils
  #248 = NameAndType        #314:#315     // isBlank:(Ljava/lang/CharSequence;)Z
  #249 = Utf8               The validated character sequence is blank
  #250 = NameAndType        #147:#141     // notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
  #251 = NameAndType        #112:#113     // notNull:(Ljava/lang/Object;)Ljava/lang/Object;
  #252 = Class              #316          // java/lang/Integer
  #253 = NameAndType        #299:#317     // valueOf:(I)Ljava/lang/Integer;
  #254 = Class              #318          // org/apache/commons/lang3/ArrayUtils
  #255 = NameAndType        #319:#320     // add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
  #256 = Utf8               The validated array contains null element at index: %d
  #257 = NameAndType        #148:#123     // noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
  #258 = Class              #321          // java/lang/Iterable
  #259 = NameAndType        #322:#323     // iterator:()Ljava/util/Iterator;
  #260 = NameAndType        #324:#308     // hasNext:()Z
  #261 = NameAndType        #325:#326     // next:()Ljava/lang/Object;
  #262 = NameAndType        #327:#328     // addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
  #263 = Utf8               The validated collection contains null element at index: %d
  #264 = NameAndType        #148:#152     // noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;
  #265 = Utf8               java/lang/IndexOutOfBoundsException
  #266 = Utf8               The validated array index is invalid: %d
  #267 = NameAndType        #162:#163     // validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
  #268 = NameAndType        #329:#312     // size:()I
  #269 = Utf8               The validated collection index is invalid: %d
  #270 = NameAndType        #162:#168     // validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
  #271 = Utf8               The validated character sequence index is invalid: %d
  #272 = NameAndType        #162:#172     // validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
  #273 = Utf8               java/lang/IllegalStateException
  #274 = Utf8               The validated state is false
  #275 = Class              #330          // java/util/regex/Pattern
  #276 = NameAndType        #331:#332     // matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
  #277 = Utf8               The string %s does not match the pattern %s
  #278 = Utf8               The validated value is not a number
  #279 = NameAndType        #182:#184     // notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V
  #280 = NameAndType        #333:#334     // isNaN:(D)Z
  #281 = Utf8               The value is invalid: %f
  #282 = NameAndType        #185:#184     // finite:(DLjava/lang/String;[Ljava/lang/Object;)V
  #283 = NameAndType        #335:#334     // isInfinite:(D)Z
  #284 = Class              #336          // java/lang/Comparable
  #285 = NameAndType        #337:#338     // compareTo:(Ljava/lang/Object;)I
  #286 = Utf8               The value %s is not in the specified inclusive range of %s to %s
  #287 = Utf8               The value %s is not in the specified exclusive range of %s to %s
  #288 = NameAndType        #339:#340     // isInstance:(Ljava/lang/Object;)Z
  #289 = Utf8               Expected type: %s, actual: %s
  #290 = NameAndType        #341:#342     // getName:()Ljava/lang/String;
  #291 = Utf8               null
  #292 = NameAndType        #343:#344     // getClass:()Ljava/lang/Class;
  #293 = NameAndType        #212:#345     // isAssignableFrom:(Ljava/lang/Class;)Z
  #294 = Utf8               Cannot assign a %s to a %s
  #295 = Utf8               java/util/Iterator
  #296 = Utf8               java/lang/Class
  #297 = Utf8               java/lang/String
  #298 = Utf8               java/lang/Long
  #299 = Utf8               valueOf
  #300 = Utf8               (J)Ljava/lang/Long;
  #301 = Utf8               format
  #302 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #303 = Utf8               (Ljava/lang/String;)V
  #304 = Utf8               java/lang/Double
  #305 = Utf8               (D)Ljava/lang/Double;
  #306 = Utf8               java/util/Collection
  #307 = Utf8               isEmpty
  #308 = Utf8               ()Z
  #309 = Utf8               java/util/Map
  #310 = Utf8               java/lang/CharSequence
  #311 = Utf8               length
  #312 = Utf8               ()I
  #313 = Utf8               org/apache/commons/lang3/StringUtils
  #314 = Utf8               isBlank
  #315 = Utf8               (Ljava/lang/CharSequence;)Z
  #316 = Utf8               java/lang/Integer
  #317 = Utf8               (I)Ljava/lang/Integer;
  #318 = Utf8               org/apache/commons/lang3/ArrayUtils
  #319 = Utf8               add
  #320 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
  #321 = Utf8               java/lang/Iterable
  #322 = Utf8               iterator
  #323 = Utf8               ()Ljava/util/Iterator;
  #324 = Utf8               hasNext
  #325 = Utf8               next
  #326 = Utf8               ()Ljava/lang/Object;
  #327 = Utf8               addAll
  #328 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
  #329 = Utf8               size
  #330 = Utf8               java/util/regex/Pattern
  #331 = Utf8               matches
  #332 = Utf8               (Ljava/lang/String;Ljava/lang/CharSequence;)Z
  #333 = Utf8               isNaN
  #334 = Utf8               (D)Z
  #335 = Utf8               isInfinite
  #336 = Utf8               java/lang/Comparable
  #337 = Utf8               compareTo
  #338 = Utf8               (Ljava/lang/Object;)I
  #339 = Utf8               isInstance
  #340 = Utf8               (Ljava/lang/Object;)Z
  #341 = Utf8               getName
  #342 = Utf8               ()Ljava/lang/String;
  #343 = Utf8               getClass
  #344 = Utf8               ()Ljava/lang/Class;
  #345 = Utf8               (Ljava/lang/Class;)Z
{
  private static final java.lang.String DEFAULT_NOT_NAN_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated value is not a number

  private static final java.lang.String DEFAULT_FINITE_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The value is invalid: %f

  private static final java.lang.String DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The value %s is not in the specified exclusive range of %s to %s

  private static final java.lang.String DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The value %s is not in the specified inclusive range of %s to %s

  private static final java.lang.String DEFAULT_MATCHES_PATTERN_EX;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The string %s does not match the pattern %s

  private static final java.lang.String DEFAULT_IS_NULL_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated object is null

  private static final java.lang.String DEFAULT_IS_TRUE_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated expression is false

  private static final java.lang.String DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated array contains null element at index: %d

  private static final java.lang.String DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated collection contains null element at index: %d

  private static final java.lang.String DEFAULT_NOT_BLANK_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated character sequence is blank

  private static final java.lang.String DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated array is empty

  private static final java.lang.String DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated character sequence is empty

  private static final java.lang.String DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated collection is empty

  private static final java.lang.String DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated map is empty

  private static final java.lang.String DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated array index is invalid: %d

  private static final java.lang.String DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated character sequence index is invalid: %d

  private static final java.lang.String DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated collection index is invalid: %d

  private static final java.lang.String DEFAULT_VALID_STATE_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String The validated state is false

  private static final java.lang.String DEFAULT_IS_ASSIGNABLE_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String Cannot assign a %s to a %s

  private static final java.lang.String DEFAULT_IS_INSTANCE_OF_EX_MESSAGE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String Expected type: %s, actual: %s

  public org.apache.commons.lang3.Validate();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 82: 0
        line 83: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/Validate;

  public static void isTrue(boolean, java.lang.String, long);
    descriptor: (ZLjava/lang/String;J)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=4, args_size=3
         0: iload_0
         1: ifne          27
         4: new           #2                  // class java/lang/IllegalArgumentException
         7: dup
         8: aload_1
         9: iconst_1
        10: anewarray     #3                  // class java/lang/Object
        13: dup
        14: iconst_0
        15: lload_2
        16: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        19: aastore
        20: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        23: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        26: athrow
        27: return
      LineNumberTable:
        line 108: 0
        line 109: 4
        line 111: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 expression   Z
            0      28     1 message   Ljava/lang/String;
            0      28     2 value   J
      StackMapTable: number_of_entries = 1
        frame_type = 27 /* same */

  public static void isTrue(boolean, java.lang.String, double);
    descriptor: (ZLjava/lang/String;D)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=4, args_size=3
         0: iload_0
         1: ifne          27
         4: new           #2                  // class java/lang/IllegalArgumentException
         7: dup
         8: aload_1
         9: iconst_1
        10: anewarray     #3                  // class java/lang/Object
        13: dup
        14: iconst_0
        15: dload_2
        16: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        19: aastore
        20: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        23: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        26: athrow
        27: return
      LineNumberTable:
        line 133: 0
        line 134: 4
        line 136: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 expression   Z
            0      28     1 message   Ljava/lang/String;
            0      28     2 value   D
      StackMapTable: number_of_entries = 1
        frame_type = 27 /* same */

  public static void isTrue(boolean, java.lang.String, java.lang.Object...);
    descriptor: (ZLjava/lang/String;[Ljava/lang/Object;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=3, args_size=3
         0: iload_0
         1: ifne          17
         4: new           #2                  // class java/lang/IllegalArgumentException
         7: dup
         8: aload_1
         9: aload_2
        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        13: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: return
      LineNumberTable:
        line 157: 0
        line 158: 4
        line 160: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 expression   Z
            0      18     1 message   Ljava/lang/String;
            0      18     2 values   [Ljava/lang/Object;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */

  public static void isTrue(boolean);
    descriptor: (Z)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: iload_0
         1: ifne          14
         4: new           #2                  // class java/lang/IllegalArgumentException
         7: dup
         8: ldc           #9                  // String The validated expression is false
        10: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        13: athrow
        14: return
      LineNumberTable:
        line 182: 0
        line 183: 4
        line 185: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 expression   Z
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */

  public static <T extends java.lang.Object> T notNull(T);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #10                 // String The validated object is null
         3: iconst_0
         4: anewarray     #3                  // class java/lang/Object
         7: invokestatic  #11                 // Method notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 object   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     0 object   TT;
    Signature: #119                         // <T:Ljava/lang/Object;>(TT;)TT;

  public static <T extends java.lang.Object> T notNull(T, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     17
         4: new           #12                 // class java/lang/NullPointerException
         7: dup
         8: aload_1
         9: aload_2
        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        13: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: areturn
      LineNumberTable:
        line 224: 0
        line 225: 4
        line 227: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 object   Ljava/lang/Object;
            0      19     1 message   Ljava/lang/String;
            0      19     2 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      19     0 object   TT;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
    Signature: #121                         // <T:Ljava/lang/Object;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;

  public static <T extends java.lang.Object> T[] notEmpty(T[], java.lang.String, java.lang.Object...);
    descriptor: ([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     17
         4: new           #12                 // class java/lang/NullPointerException
         7: dup
         8: aload_1
         9: aload_2
        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        13: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: arraylength
        19: ifne          35
        22: new           #2                  // class java/lang/IllegalArgumentException
        25: dup
        26: aload_1
        27: aload_2
        28: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        31: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        34: athrow
        35: aload_0
        36: areturn
      LineNumberTable:
        line 250: 0
        line 251: 4
        line 253: 17
        line 254: 22
        line 256: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0 array   [Ljava/lang/Object;
            0      37     1 message   Ljava/lang/String;
            0      37     2 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      37     0 array   [TT;
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 17 /* same */
    Signature: #126                         // <T:Ljava/lang/Object;>([TT;Ljava/lang/String;[Ljava/lang/Object;)[TT;

  public static <T extends java.lang.Object> T[] notEmpty(T[]);
    descriptor: ([Ljava/lang/Object;)[Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #14                 // String The validated array is empty
         3: iconst_0
         4: anewarray     #3                  // class java/lang/Object
         7: invokestatic  #15                 // Method notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 276: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 array   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     0 array   [TT;
    Signature: #128                         // <T:Ljava/lang/Object;>([TT;)[TT;

  public static <T extends java.util.Collection<?>> T notEmpty(T, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     17
         4: new           #12                 // class java/lang/NullPointerException
         7: dup
         8: aload_1
         9: aload_2
        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        13: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
        23: ifeq          39
        26: new           #2                  // class java/lang/IllegalArgumentException
        29: dup
        30: aload_1
        31: aload_2
        32: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        35: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        38: athrow
        39: aload_0
        40: areturn
      LineNumberTable:
        line 299: 0
        line 300: 4
        line 302: 17
        line 303: 26
        line 305: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0 collection   Ljava/util/Collection;
            0      41     1 message   Ljava/lang/String;
            0      41     2 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      41     0 collection   TT;
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 21 /* same */
    Signature: #132                         // <T::Ljava/util/Collection<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;

  public static <T extends java.util.Collection<?>> T notEmpty(T);
    descriptor: (Ljava/util/Collection;)Ljava/util/Collection;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #17                 // String The validated collection is empty
         3: iconst_0
         4: anewarray     #3                  // class java/lang/Object
         7: invokestatic  #18                 // Method notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
        10: areturn
      LineNumberTable:
        line 325: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 collection   Ljava/util/Collection;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     0 collection   TT;
    Signature: #134                         // <T::Ljava/util/Collection<*>;>(TT;)TT;

  public static <T extends java.util.Map<?, ?>> T notEmpty(T, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     17
         4: new           #12                 // class java/lang/NullPointerException
         7: dup
         8: aload_1
         9: aload_2
        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        13: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: invokeinterface #19,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
        23: ifeq          39
        26: new           #2                  // class java/lang/IllegalArgumentException
        29: dup
        30: aload_1
        31: aload_2
        32: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        35: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        38: athrow
        39: aload_0
        40: areturn
      LineNumberTable:
        line 348: 0
        line 349: 4
        line 351: 17
        line 352: 26
        line 354: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0   map   Ljava/util/Map;
            0      41     1 message   Ljava/lang/String;
            0      41     2 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      41     0   map   TT;
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 21 /* same */
    Signature: #138                         // <T::Ljava/util/Map<**>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;

  public static <T extends java.util.Map<?, ?>> T notEmpty(T);
    descriptor: (Ljava/util/Map;)Ljava/util/Map;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #20                 // String The validated map is empty
         3: iconst_0
         4: anewarray     #3                  // class java/lang/Object
         7: invokestatic  #21                 // Method notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;
        10: areturn
      LineNumberTable:
        line 374: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   map   Ljava/util/Map;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     0   map   TT;
    Signature: #140                         // <T::Ljava/util/Map<**>;>(TT;)TT;

  public static <T extends java.lang.CharSequence> T notEmpty(T, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     17
         4: new           #12                 // class java/lang/NullPointerException
         7: dup
         8: aload_1
         9: aload_2
        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        13: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: invokeinterface #22,  1           // InterfaceMethod java/lang/CharSequence.length:()I
        23: ifne          39
        26: new           #2                  // class java/lang/IllegalArgumentException
        29: dup
        30: aload_1
        31: aload_2
        32: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        35: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        38: athrow
        39: aload_0
        40: areturn
      LineNumberTable:
        line 397: 0
        line 398: 4
        line 400: 17
        line 401: 26
        line 403: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0 chars   Ljava/lang/CharSequence;
            0      41     1 message   Ljava/lang/String;
            0      41     2 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      41     0 chars   TT;
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 21 /* same */
    Signature: #144                         // <T::Ljava/lang/CharSequence;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;

  public static <T extends java.lang.CharSequence> T notEmpty(T);
    descriptor: (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #23                 // String The validated character sequence is empty
         3: iconst_0
         4: anewarray     #3                  // class java/lang/Object
         7: invokestatic  #24                 // Method notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
        10: areturn
      LineNumberTable:
        line 424: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 chars   Ljava/lang/CharSequence;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     0 chars   TT;
    Signature: #146                         // <T::Ljava/lang/CharSequence;>(TT;)TT;

  public static <T extends java.lang.CharSequence> T notBlank(T, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     17
         4: new           #12                 // class java/lang/NullPointerException
         7: dup
         8: aload_1
         9: aload_2
        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        13: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: invokestatic  #25                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
        21: ifeq          37
        24: new           #2                  // class java/lang/IllegalArgumentException
        27: dup
        28: aload_1
        29: aload_2
        30: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        33: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        36: athrow
        37: aload_0
        38: areturn
      LineNumberTable:
        line 450: 0
        line 451: 4
        line 453: 17
        line 454: 24
        line 456: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0 chars   Ljava/lang/CharSequence;
            0      39     1 message   Ljava/lang/String;
            0      39     2 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      39     0 chars   TT;
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 19 /* same */
    Signature: #144                         // <T::Ljava/lang/CharSequence;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;

  public static <T extends java.lang.CharSequence> T notBlank(T);
    descriptor: (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #26                 // String The validated character sequence is blank
         3: iconst_0
         4: anewarray     #3                  // class java/lang/Object
         7: invokestatic  #27                 // Method notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
        10: areturn
      LineNumberTable:
        line 479: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 chars   Ljava/lang/CharSequence;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     0 chars   TT;
    Signature: #146                         // <T::Ljava/lang/CharSequence;>(TT;)TT;

  public static <T extends java.lang.Object> T[] noNullElements(T[], java.lang.String, java.lang.Object...);
    descriptor: ([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=5, args_size=3
         0: aload_0
         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: iconst_0
         6: istore_3
         7: iload_3
         8: aload_0
         9: arraylength
        10: if_icmpge     49
        13: aload_0
        14: iload_3
        15: aaload
        16: ifnonnull     43
        19: aload_2
        20: iload_3
        21: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        24: invokestatic  #30                 // Method org/apache/commons/lang3/ArrayUtils.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;
        27: astore        4
        29: new           #2                  // class java/lang/IllegalArgumentException
        32: dup
        33: aload_1
        34: aload         4
        36: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        39: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        42: athrow
        43: iinc          3, 1
        46: goto          7
        49: aload_0
        50: areturn
      LineNumberTable:
        line 509: 0
        line 510: 5
        line 511: 13
        line 512: 19
        line 513: 29
        line 510: 43
        line 516: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      14     4 values2   [Ljava/lang/Object;
            7      42     3     i   I
            0      51     0 array   [Ljava/lang/Object;
            0      51     1 message   Ljava/lang/String;
            0      51     2 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      51     0 array   [TT;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 7
          locals = [ int ]
        frame_type = 35 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
    Signature: #126                         // <T:Ljava/lang/Object;>([TT;Ljava/lang/String;[Ljava/lang/Object;)[TT;

  public static <T extends java.lang.Object> T[] noNullElements(T[]);
    descriptor: ([Ljava/lang/Object;)[Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #31                 // String The validated array contains null element at index: %d
         3: iconst_0
         4: anewarray     #3                  // class java/lang/Object
         7: invokestatic  #32                 // Method noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 541: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 array   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     0 array   [TT;
    Signature: #128                         // <T:Ljava/lang/Object;>([TT;)[TT;

  public static <T extends java.lang.Iterable<?>> T noNullElements(T, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=5, locals=6, args_size=3
         0: aload_0
         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: iconst_0
         6: istore_3
         7: aload_0
         8: invokeinterface #33,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
        13: astore        4
        15: aload         4
        17: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        22: ifeq          72
        25: aload         4
        27: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        32: ifnonnull     66
        35: aload_2
        36: iconst_1
        37: anewarray     #3                  // class java/lang/Object
        40: dup
        41: iconst_0
        42: iload_3
        43: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        46: aastore
        47: invokestatic  #36                 // Method org/apache/commons/lang3/ArrayUtils.addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;
        50: astore        5
        52: new           #2                  // class java/lang/IllegalArgumentException
        55: dup
        56: aload_1
        57: aload         5
        59: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        62: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        65: athrow
        66: iinc          3, 1
        69: goto          15
        72: aload_0
        73: areturn
      LineNumberTable:
        line 571: 0
        line 572: 5
        line 573: 7
        line 574: 25
        line 575: 35
        line 576: 52
        line 573: 66
        line 579: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           52      14     5 values2   [Ljava/lang/Object;
           15      57     4    it   Ljava/util/Iterator;
            0      74     0 iterable   Ljava/lang/Iterable;
            0      74     1 message   Ljava/lang/String;
            0      74     2 values   [Ljava/lang/Object;
            7      67     3     i   I
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           15      57     4    it   Ljava/util/Iterator<*>;
            0      74     0 iterable   TT;
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 15
          locals = [ int, class java/util/Iterator ]
        frame_type = 50 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
    Signature: #159                         // <T::Ljava/lang/Iterable<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;

  public static <T extends java.lang.Iterable<?>> T noNullElements(T);
    descriptor: (Ljava/lang/Iterable;)Ljava/lang/Iterable;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #37                 // String The validated collection contains null element at index: %d
         3: iconst_0
         4: anewarray     #3                  // class java/lang/Object
         7: invokestatic  #38                 // Method noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;
        10: areturn
      LineNumberTable:
        line 604: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 iterable   Ljava/lang/Iterable;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     0 iterable   TT;
    Signature: #161                         // <T::Ljava/lang/Iterable<*>;>(TT;)TT;

  public static <T extends java.lang.Object> T[] validIndex(T[], int, java.lang.String, java.lang.Object...);
    descriptor: ([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: iload_1
         6: iflt          15
         9: iload_1
        10: aload_0
        11: arraylength
        12: if_icmplt     28
        15: new           #39                 // class java/lang/IndexOutOfBoundsException
        18: dup
        19: aload_2
        20: aload_3
        21: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        24: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        27: athrow
        28: aload_0
        29: areturn
      LineNumberTable:
        line 632: 0
        line 633: 5
        line 634: 15
        line 636: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 array   [Ljava/lang/Object;
            0      30     1 index   I
            0      30     2 message   Ljava/lang/String;
            0      30     3 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      30     0 array   [TT;
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 12 /* same */
    Signature: #165                         // <T:Ljava/lang/Object;>([TT;ILjava/lang/String;[Ljava/lang/Object;)[TT;

  public static <T extends java.lang.Object> T[] validIndex(T[], int);
    descriptor: ([Ljava/lang/Object;I)[Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: ldc           #41                 // String The validated array index is invalid: %d
         4: iconst_1
         5: anewarray     #3                  // class java/lang/Object
         8: dup
         9: iconst_0
        10: iload_1
        11: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        14: aastore
        15: invokestatic  #42                 // Method validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;
        18: areturn
      LineNumberTable:
        line 663: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 array   [Ljava/lang/Object;
            0      19     1 index   I
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      19     0 array   [TT;
    Signature: #167                         // <T:Ljava/lang/Object;>([TT;I)[TT;

  public static <T extends java.util.Collection<?>> T validIndex(T, int, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: iload_1
         6: iflt          19
         9: iload_1
        10: aload_0
        11: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.size:()I
        16: if_icmplt     32
        19: new           #39                 // class java/lang/IndexOutOfBoundsException
        22: dup
        23: aload_2
        24: aload_3
        25: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        28: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        31: athrow
        32: aload_0
        33: areturn
      LineNumberTable:
        line 691: 0
        line 692: 5
        line 693: 19
        line 695: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0 collection   Ljava/util/Collection;
            0      34     1 index   I
            0      34     2 message   Ljava/lang/String;
            0      34     3 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      34     0 collection   TT;
      StackMapTable: number_of_entries = 2
        frame_type = 19 /* same */
        frame_type = 12 /* same */
    Signature: #169                         // <T::Ljava/util/Collection<*>;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;

  public static <T extends java.util.Collection<?>> T validIndex(T, int);
    descriptor: (Ljava/util/Collection;I)Ljava/util/Collection;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: ldc           #44                 // String The validated collection index is invalid: %d
         4: iconst_1
         5: anewarray     #3                  // class java/lang/Object
         8: dup
         9: iconst_0
        10: iload_1
        11: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        14: aastore
        15: invokestatic  #45                 // Method validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;
        18: areturn
      LineNumberTable:
        line 719: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 collection   Ljava/util/Collection;
            0      19     1 index   I
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      19     0 collection   TT;
    Signature: #171                         // <T::Ljava/util/Collection<*>;>(TT;I)TT;

  public static <T extends java.lang.CharSequence> T validIndex(T, int, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokestatic  #28                 // Method notNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: iload_1
         6: iflt          19
         9: iload_1
        10: aload_0
        11: invokeinterface #22,  1           // InterfaceMethod java/lang/CharSequence.length:()I
        16: if_icmplt     32
        19: new           #39                 // class java/lang/IndexOutOfBoundsException
        22: dup
        23: aload_2
        24: aload_3
        25: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        28: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        31: athrow
        32: aload_0
        33: areturn
      LineNumberTable:
        line 748: 0
        line 749: 5
        line 750: 19
        line 752: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0 chars   Ljava/lang/CharSequence;
            0      34     1 index   I
            0      34     2 message   Ljava/lang/String;
            0      34     3 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      34     0 chars   TT;
      StackMapTable: number_of_entries = 2
        frame_type = 19 /* same */
        frame_type = 12 /* same */
    Signature: #173                         // <T::Ljava/lang/CharSequence;>(TT;ILjava/lang/String;[Ljava/lang/Object;)TT;

  public static <T extends java.lang.CharSequence> T validIndex(T, int);
    descriptor: (Ljava/lang/CharSequence;I)Ljava/lang/CharSequence;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: ldc           #46                 // String The validated character sequence index is invalid: %d
         4: iconst_1
         5: anewarray     #3                  // class java/lang/Object
         8: dup
         9: iconst_0
        10: iload_1
        11: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        14: aastore
        15: invokestatic  #47                 // Method validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;
        18: areturn
      LineNumberTable:
        line 780: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 chars   Ljava/lang/CharSequence;
            0      19     1 index   I
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      19     0 chars   TT;
    Signature: #175                         // <T::Ljava/lang/CharSequence;>(TT;I)TT;

  public static void validState(boolean);
    descriptor: (Z)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: iload_0
         1: ifne          14
         4: new           #48                 // class java/lang/IllegalStateException
         7: dup
         8: ldc           #49                 // String The validated state is false
        10: invokespecial #50                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        13: athrow
        14: return
      LineNumberTable:
        line 806: 0
        line 807: 4
        line 809: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 expression   Z
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */

  public static void validState(boolean, java.lang.String, java.lang.Object...);
    descriptor: (ZLjava/lang/String;[Ljava/lang/Object;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=3, args_size=3
         0: iload_0
         1: ifne          17
         4: new           #48                 // class java/lang/IllegalStateException
         7: dup
         8: aload_1
         9: aload_2
        10: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        13: invokespecial #50                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: return
      LineNumberTable:
        line 828: 0
        line 829: 4
        line 831: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 expression   Z
            0      18     1 message   Ljava/lang/String;
            0      18     2 values   [Ljava/lang/Object;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */

  public static void matchesPattern(java.lang.CharSequence, java.lang.String);
    descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokestatic  #51                 // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
         5: ifne          33
         8: new           #2                  // class java/lang/IllegalArgumentException
        11: dup
        12: ldc           #52                 // String The string %s does not match the pattern %s
        14: iconst_2
        15: anewarray     #3                  // class java/lang/Object
        18: dup
        19: iconst_0
        20: aload_0
        21: aastore
        22: dup
        23: iconst_1
        24: aload_1
        25: aastore
        26: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        29: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        32: athrow
        33: return
      LineNumberTable:
        line 853: 0
        line 854: 8
        line 856: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0 input   Ljava/lang/CharSequence;
            0      34     1 pattern   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 33 /* same */

  public static void matchesPattern(java.lang.CharSequence, java.lang.String, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=4
         0: aload_1
         1: aload_0
         2: invokestatic  #51                 // Method java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z
         5: ifne          21
         8: new           #2                  // class java/lang/IllegalArgumentException
        11: dup
        12: aload_2
        13: aload_3
        14: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        17: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        20: athrow
        21: return
      LineNumberTable:
        line 877: 0
        line 878: 8
        line 880: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 input   Ljava/lang/CharSequence;
            0      22     1 pattern   Ljava/lang/String;
            0      22     2 message   Ljava/lang/String;
            0      22     3 values   [Ljava/lang/Object;
      StackMapTable: number_of_entries = 1
        frame_type = 21 /* same */

  public static void notNaN(double);
    descriptor: (D)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=1
         0: dload_0
         1: ldc           #53                 // String The validated value is not a number
         3: iconst_0
         4: anewarray     #3                  // class java/lang/Object
         7: invokestatic  #54                 // Method notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V
        10: return
      LineNumberTable:
        line 901: 0
        line 902: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 value   D

  public static void notNaN(double, java.lang.String, java.lang.Object...);
    descriptor: (DLjava/lang/String;[Ljava/lang/Object;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=3
         0: dload_0
         1: invokestatic  #55                 // Method java/lang/Double.isNaN:(D)Z
         4: ifeq          20
         7: new           #2                  // class java/lang/IllegalArgumentException
        10: dup
        11: aload_2
        12: aload_3
        13: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        16: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        19: athrow
        20: return
      LineNumberTable:
        line 919: 0
        line 920: 7
        line 922: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 value   D
            0      21     2 message   Ljava/lang/String;
            0      21     3 values   [Ljava/lang/Object;
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */

  public static void finite(double);
    descriptor: (D)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=2, args_size=1
         0: dload_0
         1: ldc           #56                 // String The value is invalid: %f
         3: iconst_1
         4: anewarray     #3                  // class java/lang/Object
         7: dup
         8: iconst_0
         9: dload_0
        10: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        13: aastore
        14: invokestatic  #57                 // Method finite:(DLjava/lang/String;[Ljava/lang/Object;)V
        17: return
      LineNumberTable:
        line 942: 0
        line 943: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 value   D

  public static void finite(double, java.lang.String, java.lang.Object...);
    descriptor: (DLjava/lang/String;[Ljava/lang/Object;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=3
         0: dload_0
         1: invokestatic  #55                 // Method java/lang/Double.isNaN:(D)Z
         4: ifne          14
         7: dload_0
         8: invokestatic  #58                 // Method java/lang/Double.isInfinite:(D)Z
        11: ifeq          27
        14: new           #2                  // class java/lang/IllegalArgumentException
        17: dup
        18: aload_2
        19: aload_3
        20: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        23: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        26: athrow
        27: return
      LineNumberTable:
        line 960: 0
        line 961: 14
        line 963: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 value   D
            0      28     2 message   Ljava/lang/String;
            0      28     3 values   [Ljava/lang/Object;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 12 /* same */

  public static <T extends java.lang.Object> void inclusiveBetween(T, T, java.lang.Comparable<T>);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=3, args_size=3
         0: aload_2
         1: aload_0
         2: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
         7: iflt          20
        10: aload_2
        11: aload_1
        12: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
        17: ifle          49
        20: new           #2                  // class java/lang/IllegalArgumentException
        23: dup
        24: ldc           #60                 // String The value %s is not in the specified inclusive range of %s to %s
        26: iconst_3
        27: anewarray     #3                  // class java/lang/Object
        30: dup
        31: iconst_0
        32: aload_2
        33: aastore
        34: dup
        35: iconst_1
        36: aload_0
        37: aastore
        38: dup
        39: iconst_2
        40: aload_1
        41: aastore
        42: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        45: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        48: athrow
        49: return
      LineNumberTable:
        line 985: 0
        line 986: 20
        line 988: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0 start   Ljava/lang/Object;
            0      50     1   end   Ljava/lang/Object;
            0      50     2 value   Ljava/lang/Comparable;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      50     0 start   TT;
            0      50     1   end   TT;
            0      50     2 value   Ljava/lang/Comparable<TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 28 /* same */
    Signature: #192                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;)V

  public static <T extends java.lang.Object> void inclusiveBetween(T, T, java.lang.Comparable<T>, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=5, args_size=5
         0: aload_2
         1: aload_0
         2: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
         7: iflt          20
        10: aload_2
        11: aload_1
        12: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
        17: ifle          34
        20: new           #2                  // class java/lang/IllegalArgumentException
        23: dup
        24: aload_3
        25: aload         4
        27: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        30: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        33: athrow
        34: return
      LineNumberTable:
        line 1010: 0
        line 1011: 20
        line 1013: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0 start   Ljava/lang/Object;
            0      35     1   end   Ljava/lang/Object;
            0      35     2 value   Ljava/lang/Comparable;
            0      35     3 message   Ljava/lang/String;
            0      35     4 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      35     0 start   TT;
            0      35     1   end   TT;
            0      35     2 value   Ljava/lang/Comparable<TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 13 /* same */
    Signature: #194                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;Ljava/lang/String;[Ljava/lang/Object;)V

  public static void inclusiveBetween(long, long, long);
    descriptor: (JJJ)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=6, args_size=3
         0: lload         4
         2: lload_0
         3: lcmp
         4: iflt          14
         7: lload         4
         9: lload_2
        10: lcmp
        11: ifle          53
        14: new           #2                  // class java/lang/IllegalArgumentException
        17: dup
        18: ldc           #60                 // String The value %s is not in the specified inclusive range of %s to %s
        20: iconst_3
        21: anewarray     #3                  // class java/lang/Object
        24: dup
        25: iconst_0
        26: lload         4
        28: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        31: aastore
        32: dup
        33: iconst_1
        34: lload_0
        35: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        38: aastore
        39: dup
        40: iconst_2
        41: lload_2
        42: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        45: aastore
        46: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        49: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        52: athrow
        53: return
      LineNumberTable:
        line 1031: 0
        line 1032: 14
        line 1034: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0 start   J
            0      54     2   end   J
            0      54     4 value   J
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 38 /* same */

  public static void inclusiveBetween(long, long, long, java.lang.String);
    descriptor: (JJJLjava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=7, args_size=4
         0: lload         4
         2: lload_0
         3: lcmp
         4: iflt          14
         7: lload         4
         9: lload_2
        10: lcmp
        11: ifle          24
        14: new           #2                  // class java/lang/IllegalArgumentException
        17: dup
        18: aload         6
        20: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        23: athrow
        24: return
      LineNumberTable:
        line 1054: 0
        line 1055: 14
        line 1057: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 start   J
            0      25     2   end   J
            0      25     4 value   J
            0      25     6 message   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 9 /* same */

  public static void inclusiveBetween(double, double, double);
    descriptor: (DDD)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=6, args_size=3
         0: dload         4
         2: dload_0
         3: dcmpg
         4: iflt          14
         7: dload         4
         9: dload_2
        10: dcmpl
        11: ifle          53
        14: new           #2                  // class java/lang/IllegalArgumentException
        17: dup
        18: ldc           #60                 // String The value %s is not in the specified inclusive range of %s to %s
        20: iconst_3
        21: anewarray     #3                  // class java/lang/Object
        24: dup
        25: iconst_0
        26: dload         4
        28: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        31: aastore
        32: dup
        33: iconst_1
        34: dload_0
        35: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        38: aastore
        39: dup
        40: iconst_2
        41: dload_2
        42: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        45: aastore
        46: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        49: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        52: athrow
        53: return
      LineNumberTable:
        line 1075: 0
        line 1076: 14
        line 1078: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0 start   D
            0      54     2   end   D
            0      54     4 value   D
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 38 /* same */

  public static void inclusiveBetween(double, double, double, java.lang.String);
    descriptor: (DDDLjava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=7, args_size=4
         0: dload         4
         2: dload_0
         3: dcmpg
         4: iflt          14
         7: dload         4
         9: dload_2
        10: dcmpl
        11: ifle          24
        14: new           #2                  // class java/lang/IllegalArgumentException
        17: dup
        18: aload         6
        20: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        23: athrow
        24: return
      LineNumberTable:
        line 1098: 0
        line 1099: 14
        line 1101: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 start   D
            0      25     2   end   D
            0      25     4 value   D
            0      25     6 message   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 9 /* same */

  public static <T extends java.lang.Object> void exclusiveBetween(T, T, java.lang.Comparable<T>);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=3, args_size=3
         0: aload_2
         1: aload_0
         2: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
         7: ifle          20
        10: aload_2
        11: aload_1
        12: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
        17: iflt          49
        20: new           #2                  // class java/lang/IllegalArgumentException
        23: dup
        24: ldc           #61                 // String The value %s is not in the specified exclusive range of %s to %s
        26: iconst_3
        27: anewarray     #3                  // class java/lang/Object
        30: dup
        31: iconst_0
        32: aload_2
        33: aastore
        34: dup
        35: iconst_1
        36: aload_0
        37: aastore
        38: dup
        39: iconst_2
        40: aload_1
        41: aastore
        42: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        45: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        48: athrow
        49: return
      LineNumberTable:
        line 1123: 0
        line 1124: 20
        line 1126: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0 start   Ljava/lang/Object;
            0      50     1   end   Ljava/lang/Object;
            0      50     2 value   Ljava/lang/Comparable;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      50     0 start   TT;
            0      50     1   end   TT;
            0      50     2 value   Ljava/lang/Comparable<TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 28 /* same */
    Signature: #192                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;)V

  public static <T extends java.lang.Object> void exclusiveBetween(T, T, java.lang.Comparable<T>, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Comparable;Ljava/lang/String;[Ljava/lang/Object;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=5, args_size=5
         0: aload_2
         1: aload_0
         2: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
         7: ifle          20
        10: aload_2
        11: aload_1
        12: invokeinterface #59,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
        17: iflt          34
        20: new           #2                  // class java/lang/IllegalArgumentException
        23: dup
        24: aload_3
        25: aload         4
        27: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        30: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        33: athrow
        34: return
      LineNumberTable:
        line 1148: 0
        line 1149: 20
        line 1151: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0 start   Ljava/lang/Object;
            0      35     1   end   Ljava/lang/Object;
            0      35     2 value   Ljava/lang/Comparable;
            0      35     3 message   Ljava/lang/String;
            0      35     4 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      35     0 start   TT;
            0      35     1   end   TT;
            0      35     2 value   Ljava/lang/Comparable<TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 13 /* same */
    Signature: #194                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/lang/Comparable<TT;>;Ljava/lang/String;[Ljava/lang/Object;)V

  public static void exclusiveBetween(long, long, long);
    descriptor: (JJJ)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=6, args_size=3
         0: lload         4
         2: lload_0
         3: lcmp
         4: ifle          14
         7: lload         4
         9: lload_2
        10: lcmp
        11: iflt          53
        14: new           #2                  // class java/lang/IllegalArgumentException
        17: dup
        18: ldc           #61                 // String The value %s is not in the specified exclusive range of %s to %s
        20: iconst_3
        21: anewarray     #3                  // class java/lang/Object
        24: dup
        25: iconst_0
        26: lload         4
        28: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        31: aastore
        32: dup
        33: iconst_1
        34: lload_0
        35: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        38: aastore
        39: dup
        40: iconst_2
        41: lload_2
        42: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        45: aastore
        46: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        49: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        52: athrow
        53: return
      LineNumberTable:
        line 1169: 0
        line 1170: 14
        line 1172: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0 start   J
            0      54     2   end   J
            0      54     4 value   J
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 38 /* same */

  public static void exclusiveBetween(long, long, long, java.lang.String);
    descriptor: (JJJLjava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=7, args_size=4
         0: lload         4
         2: lload_0
         3: lcmp
         4: ifle          14
         7: lload         4
         9: lload_2
        10: lcmp
        11: iflt          24
        14: new           #2                  // class java/lang/IllegalArgumentException
        17: dup
        18: aload         6
        20: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        23: athrow
        24: return
      LineNumberTable:
        line 1192: 0
        line 1193: 14
        line 1195: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 start   J
            0      25     2   end   J
            0      25     4 value   J
            0      25     6 message   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 9 /* same */

  public static void exclusiveBetween(double, double, double);
    descriptor: (DDD)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=6, args_size=3
         0: dload         4
         2: dload_0
         3: dcmpg
         4: ifle          14
         7: dload         4
         9: dload_2
        10: dcmpl
        11: iflt          53
        14: new           #2                  // class java/lang/IllegalArgumentException
        17: dup
        18: ldc           #61                 // String The value %s is not in the specified exclusive range of %s to %s
        20: iconst_3
        21: anewarray     #3                  // class java/lang/Object
        24: dup
        25: iconst_0
        26: dload         4
        28: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        31: aastore
        32: dup
        33: iconst_1
        34: dload_0
        35: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        38: aastore
        39: dup
        40: iconst_2
        41: dload_2
        42: invokestatic  #7                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        45: aastore
        46: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        49: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        52: athrow
        53: return
      LineNumberTable:
        line 1213: 0
        line 1214: 14
        line 1216: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0 start   D
            0      54     2   end   D
            0      54     4 value   D
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 38 /* same */

  public static void exclusiveBetween(double, double, double, java.lang.String);
    descriptor: (DDDLjava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=7, args_size=4
         0: dload         4
         2: dload_0
         3: dcmpg
         4: ifle          14
         7: dload         4
         9: dload_2
        10: dcmpl
        11: iflt          24
        14: new           #2                  // class java/lang/IllegalArgumentException
        17: dup
        18: aload         6
        20: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        23: athrow
        24: return
      LineNumberTable:
        line 1236: 0
        line 1237: 14
        line 1239: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 start   D
            0      25     2   end   D
            0      25     4 value   D
            0      25     6 message   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 9 /* same */

  public static void isInstanceOf(java.lang.Class<?>, java.lang.Object);
    descriptor: (Ljava/lang/Class;Ljava/lang/Object;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #62                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
         5: ifne          51
         8: new           #2                  // class java/lang/IllegalArgumentException
        11: dup
        12: ldc           #63                 // String Expected type: %s, actual: %s
        14: iconst_2
        15: anewarray     #3                  // class java/lang/Object
        18: dup
        19: iconst_0
        20: aload_0
        21: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;
        24: aastore
        25: dup
        26: iconst_1
        27: aload_1
        28: ifnonnull     36
        31: ldc           #65                 // String null
        33: goto          43
        36: aload_1
        37: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        40: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;
        43: aastore
        44: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        47: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        50: athrow
        51: return
      LineNumberTable:
        line 1262: 0
        line 1263: 8
        line 1264: 27
        line 1263: 44
        line 1266: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  type   Ljava/lang/Class;
            0      52     1   obj   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      52     0  type   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class java/lang/Class, class java/lang/Object ]
          stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class java/lang/Class, class java/lang/Object ]
          stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int, class java/lang/Object ]
        frame_type = 7 /* same */
    Signature: #209                         // (Ljava/lang/Class<*>;Ljava/lang/Object;)V

  public static void isInstanceOf(java.lang.Class<?>, java.lang.Object, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: invokevirtual #62                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
         5: ifne          21
         8: new           #2                  // class java/lang/IllegalArgumentException
        11: dup
        12: aload_2
        13: aload_3
        14: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        17: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        20: athrow
        21: return
      LineNumberTable:
        line 1287: 0
        line 1288: 8
        line 1290: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  type   Ljava/lang/Class;
            0      22     1   obj   Ljava/lang/Object;
            0      22     2 message   Ljava/lang/String;
            0      22     3 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      22     0  type   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 1
        frame_type = 21 /* same */
    Signature: #211                         // (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V

  public static void isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;Ljava/lang/Class;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #67                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
         5: ifne          48
         8: new           #2                  // class java/lang/IllegalArgumentException
        11: dup
        12: ldc           #68                 // String Cannot assign a %s to a %s
        14: iconst_2
        15: anewarray     #3                  // class java/lang/Object
        18: dup
        19: iconst_0
        20: aload_1
        21: ifnonnull     29
        24: ldc           #65                 // String null
        26: goto          33
        29: aload_1
        30: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;
        33: aastore
        34: dup
        35: iconst_1
        36: aload_0
        37: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;
        40: aastore
        41: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        44: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        47: athrow
        48: return
      LineNumberTable:
        line 1313: 0
        line 1314: 8
        line 1315: 37
        line 1314: 41
        line 1317: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0 superType   Ljava/lang/Class;
            0      49     1  type   Ljava/lang/Class;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      49     0 superType   Ljava/lang/Class<*>;
            0      49     1  type   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class java/lang/Class, class java/lang/Class ]
          stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class java/lang/Class, class java/lang/Class ]
          stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int, class java/lang/Object ]
        frame_type = 14 /* same */
    Signature: #215                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V

  public static void isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>, java.lang.String, java.lang.Object...);
    descriptor: (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: invokevirtual #67                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
         5: ifne          21
         8: new           #2                  // class java/lang/IllegalArgumentException
        11: dup
        12: aload_2
        13: aload_3
        14: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        17: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        20: athrow
        21: return
      LineNumberTable:
        line 1338: 0
        line 1339: 8
        line 1341: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 superType   Ljava/lang/Class;
            0      22     1  type   Ljava/lang/Class;
            0      22     2 message   Ljava/lang/String;
            0      22     3 values   [Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      22     0 superType   Ljava/lang/Class<*>;
            0      22     1  type   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 1
        frame_type = 21 /* same */
    Signature: #217                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V
}
SourceFile: "Validate.java"
