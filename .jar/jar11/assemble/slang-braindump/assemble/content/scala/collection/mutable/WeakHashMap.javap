Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/mutable/WeakHashMap.class
  Last modified May 29, 2022; size 3425 bytes
  SHA-256 checksum 20fb23982886ac71e2001cd6b6bcd82d9f87a1b7d1c46749d576fa3e0ffe8595
  Compiled from "WeakHashMap.scala"
public class scala.collection.mutable.WeakHashMap<K extends java.lang.Object, V extends java.lang.Object> extends scala.collection.convert.JavaCollectionWrappers$JMapWrapper<K, V>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/mutable/WeakHashMap
  super_class: #5                         // scala/collection/convert/JavaCollectionWrappers$JMapWrapper
  interfaces: 0, fields: 1, methods: 9, attributes: 6
Constant pool:
   #1 = Utf8               scala/collection/mutable/WeakHashMap
   #2 = Class              #1             // scala/collection/mutable/WeakHashMap
   #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/convert/JavaCollectionWrappers$JMapWrapper<TK;TV;>;
   #4 = Utf8               scala/collection/convert/JavaCollectionWrappers$JMapWrapper
   #5 = Class              #4             // scala/collection/convert/JavaCollectionWrappers$JMapWrapper
   #6 = Utf8               WeakHashMap.scala
   #7 = Utf8               Lscala/reflect/ScalaSignature;
   #8 = Utf8               bytes
   #9 = Utf8               \u0006\u0005\u0005ua\u0001\u0002\u0007\u000e\u0001QAQ\u0001\u0012\u0001\u0005\u0002\u0015CQA\u0012\u0001\u0005B\u001dCQ\u0001\u0013\u0001\u0005B%Ca!\u0014\u0001!\n#ru!B/\u000e\u0011\u0003qf!\u0002\u0007\u000e\u0011\u0003y\u0006\"\u0002#\u0007\t\u0003\u0019\u0007\"\u0002$\u0007\t\u0003!\u0007\"B6\u0007\t\u0003a\u0007\"B>\u0007\t\u0003a\b\"CA\b\r\u0005\u0005I\u0011BA\t\u0005-9V-Y6ICNDW*\u00199\u000b\u00059y\u0011aB7vi\u0006\u0014G.\u001a\u0006\u0003!E\t!bY8mY\u0016\u001cG/[8o\u0015\u0005\u0011\u0012!B:dC2\f7\u0001A\u000b\u0004+)*4\u0003\u0002\u0001\u0017ou\u0002BaF\u0013)i9\u0011\u0001D\t\b\u00033\u0001r!AG\u0010\u000f\u0005mqR\"\u0001\u000f\u000b\u0005u\u0019\u0012A\u0002\u001fs_>$h(C\u0001\u0013\u0013\t\u0001\u0012#\u0003\u0002\"\u001f\u000591m\u001c8wKJ$\u0018BA\u0012%\u0003YQ\u0015M^1D_2dWm\u0019;j_:<&/\u00199qKJ\u001c(BA\u0011\u0010\u0013\t1sEA\u0006K\u001b\u0006\u0004xK]1qa\u0016\u0014(BA\u0012%!\tI#\u0006\u0004\u0001\u0005\u000b-\u0002!\u0019\u0001\u0017\u0003\u0003-\u000b\"!L\u0019\u0011\u00059zS\"A\t\n\u0005A\n\"a\u0002(pi\"Lgn\u001a\t\u0003]IJ!aM\t\u0003\u0007\u0005s\u0017\u0010\u0005\u0002*k\u0011)a\u0007\u0001b\u0001Y\t\ta\u000b\u0005\u0004\u0018q!\"$\bP\u0005\u0003s\u001d\u0012qBS\'ba^\u0013\u0018\r\u001d9fe2K7.\u001a\t\u0003w\u0001i\u0011!\u0004\t\u0005w\u0001AC\u0007\u0005\u0004?\u007f!\"$(Q\u0007\u0002\u001f%\u0011\u0001i\u0004\u0002\u0013\u001b\u0006\u0004h)Y2u_JLH)\u001a4bk2$8\u000f\u0005\u0002<\u0005&\u00111)\u0004\u0002\t\u0013R,\'/\u00192mK\u00061A(\u001b8jiz\"\u0012\u0001P\u0001\u0006K6\u0004H/_\u000b\u0002y\u0005QQ.\u00199GC\u000e$xN]=\u0016\u0003)\u00032AP&;\u0013\tauB\u0001\u0006NCB4\u0015m\u0019;pef\fAb\u001d;sS:<\u0007K]3gSb,\u0012a\u0014\t\u0003!Vk\u0011!\u0015\u0006\u0003%N\u000bA\u0001\\1oO*\tA+\u0001\u0003kCZ\f\u0017B\u0001,R\u0005\u0019\u0019FO]5oO\"\"\u0001\u0001W.]!\tq\u0013,\u0003\u0002[#\t\u00012+\u001a:jC24VM]:j_:,\u0016\nR\u0001\u0006m\u0006dW/\u001a\u0010\u0002\u0007\u0005Yq+Z1l\u0011\u0006\u001c\b.T1q!\tYdaE\u0002\u0007A*\u0003\"AL1\n\u0005\t\f\"AB!osJ+g\rF\u0001_+\r)\u0007N[\u000b\u0002MB!1\bA4j!\tI\u0003\u000eB\u0003,\u0011\t\u0007A\u0006\u0005\u0002*U\u0012)a\u0007\u0003b\u0001Y\u0005!aM]8n+\ri\u0007O\u001d\u000b\u0003]N\u0004Ba\u000f\u0001pcB\u0011\u0011\u0006\u001d\u0003\u0006W%\u0011\r\u0001\f\t\u0003SI$QAN\u0005C\u00021BQ\u0001^\u0005A\u0002U\f!!\u001b;\u0011\u0007y2\b0\u0003\u0002x\u001f\ta\u0011\n^3sC\ndWm\u00148dKB!a&_8r\u0013\tQ\u0018C\u0001\u0004UkBdWMM\u0001\u000b]\u0016<()^5mI\u0016\u0014X#B?\u0002\b\u0005-Q#\u0001@\u0011\rmz\u00181AA\u0007\u0013\r\t\t!\u0004\u0002\b\u0005VLG\u000eZ3s!\u0019q\u00130!\u0002\u0002\nA\u0019\u0011&a\u0002\u0005\u000b-R!\u0019\u0001\u0017\u0011\u0007%\nY\u0001B\u00037\u0015\t\u0007A\u0006\u0005\u0004<\u0001\u0005\u0015\u0011\u0011B\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003\'\u00012\u0001UA\u000b\u0013\r\t9\"\u0015\u0002\u0007\u001f\nTWm\u0019;)\t\u0019A6\f\u0018\u0015\u0005\u000ba[F\f
  #10 = Utf8               scala/collection/convert/JavaCollectionWrappers
  #11 = Class              #10            // scala/collection/convert/JavaCollectionWrappers
  #12 = Utf8               JMapWrapper
  #13 = Utf8               serialVersionUID
  #14 = Utf8               J
  #15 = Long               3l
  #17 = Utf8               newBuilder
  #18 = Utf8               ()Lscala/collection/mutable/Builder;
  #19 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/mutable/Builder<Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/WeakHashMap<TK;TV;>;>;
  #20 = Utf8               scala/collection/mutable/WeakHashMap$
  #21 = Class              #20            // scala/collection/mutable/WeakHashMap$
  #22 = Utf8               MODULE$
  #23 = Utf8               Lscala/collection/mutable/WeakHashMap$;
  #24 = NameAndType        #22:#23        // MODULE$:Lscala/collection/mutable/WeakHashMap$;
  #25 = Fieldref           #21.#24        // scala/collection/mutable/WeakHashMap$.MODULE$:Lscala/collection/mutable/WeakHashMap$;
  #26 = NameAndType        #17:#18        // newBuilder:()Lscala/collection/mutable/Builder;
  #27 = Methodref          #21.#26        // scala/collection/mutable/WeakHashMap$.newBuilder:()Lscala/collection/mutable/Builder;
  #28 = Utf8               from
  #29 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/WeakHashMap;
  #30 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/mutable/WeakHashMap<TK;TV;>;
  #31 = Utf8               it
  #32 = NameAndType        #28:#29        // from:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/WeakHashMap;
  #33 = Methodref          #21.#32        // scala/collection/mutable/WeakHashMap$.from:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/WeakHashMap;
  #34 = Utf8               Lscala/collection/IterableOnce;
  #35 = Utf8               empty
  #36 = Utf8               ()Lscala/collection/mutable/WeakHashMap;
  #37 = Utf8               ()Lscala/collection/mutable/WeakHashMap<TK;TV;>;
  #38 = Utf8               <init>
  #39 = Utf8               ()V
  #40 = NameAndType        #38:#39        // "<init>":()V
  #41 = Methodref          #2.#40         // scala/collection/mutable/WeakHashMap."<init>":()V
  #42 = Utf8               this
  #43 = Utf8               Lscala/collection/mutable/WeakHashMap;
  #44 = Utf8               mapFactory
  #45 = Utf8               ()Lscala/collection/MapFactory;
  #46 = Utf8               ()Lscala/collection/MapFactory<Lscala/collection/mutable/WeakHashMap;>;
  #47 = Utf8               stringPrefix
  #48 = Utf8               ()Ljava/lang/String;
  #49 = Utf8               WeakHashMap
  #50 = String             #49            // WeakHashMap
  #51 = Utf8               ()Ljava/lang/Object;
  #52 = NameAndType        #35:#36        // empty:()Lscala/collection/mutable/WeakHashMap;
  #53 = Methodref          #2.#52         // scala/collection/mutable/WeakHashMap.empty:()Lscala/collection/mutable/WeakHashMap;
  #54 = Utf8               ()Lscala/collection/IterableOps;
  #55 = Utf8               ()Lscala/collection/convert/JavaCollectionWrappers$JMapWrapper;
  #56 = Utf8               java/util/WeakHashMap
  #57 = Class              #56            // java/util/WeakHashMap
  #58 = Methodref          #57.#40        // java/util/WeakHashMap."<init>":()V
  #59 = Utf8               (Ljava/util/Map;)V
  #60 = NameAndType        #38:#59        // "<init>":(Ljava/util/Map;)V
  #61 = Methodref          #5.#60         // scala/collection/convert/JavaCollectionWrappers$JMapWrapper."<init>":(Ljava/util/Map;)V
  #62 = Utf8               ConstantValue
  #63 = Utf8               Code
  #64 = Utf8               Signature
  #65 = Utf8               LocalVariableTable
  #66 = Utf8               MethodParameters
  #67 = Utf8               LineNumberTable
  #68 = Utf8               InnerClasses
  #69 = Utf8               SourceFile
  #70 = Utf8               RuntimeVisibleAnnotations
  #71 = Utf8               ScalaInlineInfo
  #72 = Utf8               ScalaSig
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 3l

  public static <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.Builder<scala.Tuple2<K, V>, scala.collection.mutable.WeakHashMap<K, V>> newBuilder();
    descriptor: ()Lscala/collection/mutable/Builder;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #25                 // Field scala/collection/mutable/WeakHashMap$.MODULE$:Lscala/collection/mutable/WeakHashMap$;
         3: invokevirtual #27                 // Method scala/collection/mutable/WeakHashMap$.newBuilder:()Lscala/collection/mutable/Builder;
         6: areturn
    Signature: #19                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/mutable/Builder<Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/WeakHashMap<TK;TV;>;>;

  public static <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.WeakHashMap<K, V> from(scala.collection.IterableOnce<scala.Tuple2<K, V>>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/mutable/WeakHashMap;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #25                 // Field scala/collection/mutable/WeakHashMap$.MODULE$:Lscala/collection/mutable/WeakHashMap$;
         3: aload_0
         4: invokevirtual #33                 // Method scala/collection/mutable/WeakHashMap$.from:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/WeakHashMap;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    it   Lscala/collection/IterableOnce;
    Signature: #30                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/mutable/WeakHashMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      it                             final

  public scala.collection.mutable.WeakHashMap<K, V> empty();
    descriptor: ()Lscala/collection/mutable/WeakHashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: new           #2                  // class scala/collection/mutable/WeakHashMap
         3: dup
         4: invokespecial #41                 // Method "<init>":()V
         7: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/mutable/WeakHashMap;
    Signature: #37                          // ()Lscala/collection/mutable/WeakHashMap<TK;TV;>;

  public scala.collection.MapFactory<scala.collection.mutable.WeakHashMap> mapFactory();
    descriptor: ()Lscala/collection/MapFactory;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #25                 // Field scala/collection/mutable/WeakHashMap$.MODULE$:Lscala/collection/mutable/WeakHashMap$;
         3: areturn
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/WeakHashMap;
    Signature: #46                          // ()Lscala/collection/MapFactory<Lscala/collection/mutable/WeakHashMap;>;

  public java.lang.String stringPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #50                 // String WeakHashMap
         2: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/mutable/WeakHashMap;

  public java.lang.Object empty();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method empty:()Lscala/collection/mutable/WeakHashMap;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/WeakHashMap;

  public scala.collection.IterableOps empty();
    descriptor: ()Lscala/collection/IterableOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method empty:()Lscala/collection/mutable/WeakHashMap;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/WeakHashMap;

  public scala.collection.convert.JavaCollectionWrappers$JMapWrapper empty();
    descriptor: ()Lscala/collection/convert/JavaCollectionWrappers$JMapWrapper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method empty:()Lscala/collection/mutable/WeakHashMap;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/WeakHashMap;

  public scala.collection.mutable.WeakHashMap();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: new           #57                 // class java/util/WeakHashMap
         4: dup
         5: invokespecial #58                 // Method java/util/WeakHashMap."<init>":()V
         8: invokespecial #61                 // Method scala/collection/convert/JavaCollectionWrappers$JMapWrapper."<init>":(Ljava/util/Map;)V
        11: return
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/mutable/WeakHashMap;
}
InnerClasses:
  public static #12= #5 of #11;           // JMapWrapper=class scala/collection/convert/JavaCollectionWrappers$JMapWrapper of class scala/collection/convert/JavaCollectionWrappers
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/convert/JavaCollectionWrappers$JMapWrapper<TK;TV;>;
SourceFile: "WeakHashMap.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005ua\u0001\u0002\u0007\u000e\u0001QAQ\u0001\u0012\u0001\u0005\u0002\u0015CQA\u0012\u0001\u0005B\u001dCQ\u0001\u0013\u0001\u0005B%Ca!\u0014\u0001!\n#ru!B/\u000e\u0011\u0003qf!\u0002\u0007\u000e\u0011\u0003y\u0006\"\u0002#\u0007\t\u0003\u0019\u0007\"\u0002$\u0007\t\u0003!\u0007\"B6\u0007\t\u0003a\u0007\"B>\u0007\t\u0003a\b\"CA\b\r\u0005\u0005I\u0011BA\t\u0005-9V-Y6ICNDW*\u00199\u000b\u00059y\u0011aB7vi\u0006\u0014G.\u001a\u0006\u0003!E\t!bY8mY\u0016\u001cG/[8o\u0015\u0005\u0011\u0012!B:dC2\f7\u0001A\u000b\u0004+)*4\u0003\u0002\u0001\u0017ou\u0002BaF\u0013)i9\u0011\u0001D\t\b\u00033\u0001r!AG\u0010\u000f\u0005mqR\"\u0001\u000f\u000b\u0005u\u0019\u0012A\u0002\u001fs_>$h(C\u0001\u0013\u0013\t\u0001\u0012#\u0003\u0002\"\u001f\u000591m\u001c8wKJ$\u0018BA\u0012%\u0003YQ\u0015M^1D_2dWm\u0019;j_:<&/\u00199qKJ\u001c(BA\u0011\u0010\u0013\t1sEA\u0006K\u001b\u0006\u0004xK]1qa\u0016\u0014(BA\u0012%!\tI#\u0006\u0004\u0001\u0005\u000b-\u0002!\u0019\u0001\u0017\u0003\u0003-\u000b\"!L\u0019\u0011\u00059zS\"A\t\n\u0005A\n\"a\u0002(pi\"Lgn\u001a\t\u0003]IJ!aM\t\u0003\u0007\u0005s\u0017\u0010\u0005\u0002*k\u0011)a\u0007\u0001b\u0001Y\t\ta\u000b\u0005\u0004\u0018q!\"$\bP\u0005\u0003s\u001d\u0012qBS\'ba^\u0013\u0018\r\u001d9fe2K7.\u001a\t\u0003w\u0001i\u0011!\u0004\t\u0005w\u0001AC\u0007\u0005\u0004?\u007f!\"$(Q\u0007\u0002\u001f%\u0011\u0001i\u0004\u0002\u0013\u001b\u0006\u0004h)Y2u_JLH)\u001a4bk2$8\u000f\u0005\u0002<\u0005&\u00111)\u0004\u0002\t\u0013R,\'/\u00192mK\u00061A(\u001b8jiz\"\u0012\u0001P\u0001\u0006K6\u0004H/_\u000b\u0002y\u0005QQ.\u00199GC\u000e$xN]=\u0016\u0003)\u00032AP&;\u0013\tauB\u0001\u0006NCB4\u0015m\u0019;pef\fAb\u001d;sS:<\u0007K]3gSb,\u0012a\u0014\t\u0003!Vk\u0011!\u0015\u0006\u0003%N\u000bA\u0001\\1oO*\tA+\u0001\u0003kCZ\f\u0017B\u0001,R\u0005\u0019\u0019FO]5oO\"\"\u0001\u0001W.]!\tq\u0013,\u0003\u0002[#\t\u00012+\u001a:jC24VM]:j_:,\u0016\nR\u0001\u0006m\u0006dW/\u001a\u0010\u0002\u0007\u0005Yq+Z1l\u0011\u0006\u001c\b.T1q!\tYdaE\u0002\u0007A*\u0003\"AL1\n\u0005\t\f\"AB!osJ+g\rF\u0001_+\r)\u0007N[\u000b\u0002MB!1\bA4j!\tI\u0003\u000eB\u0003,\u0011\t\u0007A\u0006\u0005\u0002*U\u0012)a\u0007\u0003b\u0001Y\u0005!aM]8n+\ri\u0007O\u001d\u000b\u0003]N\u0004Ba\u000f\u0001pcB\u0011\u0011\u0006\u001d\u0003\u0006W%\u0011\r\u0001\f\t\u0003SI$QAN\u0005C\u00021BQ\u0001^\u0005A\u0002U\f!!\u001b;\u0011\u0007y2\b0\u0003\u0002x\u001f\ta\u0011\n^3sC\ndWm\u00148dKB!a&_8r\u0013\tQ\u0018C\u0001\u0004UkBdWMM\u0001\u000b]\u0016<()^5mI\u0016\u0014X#B?\u0002\b\u0005-Q#\u0001@\u0011\rmz\u00181AA\u0007\u0013\r\t\t!\u0004\u0002\b\u0005VLG\u000eZ3s!\u0019q\u00130!\u0002\u0002\nA\u0019\u0011&a\u0002\u0005\u000b-R!\u0019\u0001\u0017\u0011\u0007%\nY\u0001B\u00037\u0015\t\u0007A\u0006\u0005\u0004<\u0001\u0005\u0015\u0011\u0011B\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003\'\u00012\u0001UA\u000b\u0013\r\t9\"\u0015\u0002\u0007\u001f\nTWm\u0019;)\t\u0019A6\f\u0018\u0015\u0005\u000ba[F\f"
    )
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 00 00 07 00 26 00 27 00 00 23 00 33 00 00 23
   00 36 00 00 23 00 37 00 00 23 00 24 00 00 2C 00
   2D 00 00 2F 00 30 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
