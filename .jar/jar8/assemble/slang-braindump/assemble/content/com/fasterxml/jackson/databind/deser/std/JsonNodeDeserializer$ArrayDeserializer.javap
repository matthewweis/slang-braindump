Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer.class
  Last modified May 29, 2022; size 3585 bytes
  SHA-256 checksum 45a2af68b332dd5188911223d24d4027de92775c6f554fc5c38ed7eee9f0486f
  Compiled from "JsonNodeDeserializer.java"
final class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer extends com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer<com.fasterxml.jackson.databind.node.ArrayNode>
  minor version: 0
  major version: 52
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #14                         // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer
  super_class: #16                        // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer
  interfaces: 0, fields: 2, methods: 7, attributes: 3
Constant pool:
   #1 = Class              #56            // com/fasterxml/jackson/databind/node/ArrayNode
   #2 = Methodref          #57.#58        // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
   #3 = Methodref          #16.#59        // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer."<init>":(Ljava/lang/Class;Ljava/lang/Boolean;)V
   #4 = Fieldref           #14.#60        // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer._instance:Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
   #5 = Methodref          #61.#62        // com/fasterxml/jackson/core/JsonParser.isExpectedStartArrayToken:()Z
   #6 = Methodref          #63.#64        // com/fasterxml/jackson/databind/DeserializationContext.getNodeFactory:()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
   #7 = Methodref          #65.#66        // com/fasterxml/jackson/databind/node/JsonNodeFactory.arrayNode:()Lcom/fasterxml/jackson/databind/node/ArrayNode;
   #8 = Class              #67            // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack
   #9 = Methodref          #8.#69         // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack."<init>":()V
  #10 = Methodref          #14.#70        // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer._deserializeContainerNoRecursion:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
  #11 = Methodref          #63.#71        // com/fasterxml/jackson/databind/DeserializationContext.handleUnexpectedToken:(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;
  #12 = Methodref          #14.#72        // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer.deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/ArrayNode;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #13 = Methodref          #14.#73        // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer.deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #14 = Class              #75            // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer
  #15 = Methodref          #14.#69        // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer."<init>":()V
  #16 = Class              #76            // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer
  #17 = Utf8               serialVersionUID
  #18 = Utf8               J
  #19 = Utf8               ConstantValue
  #20 = Long               1l
  #22 = Utf8               _instance
  #23 = Utf8               ArrayDeserializer
  #24 = Utf8               InnerClasses
  #25 = Utf8               Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
  #26 = Utf8               <init>
  #27 = Utf8               ()V
  #28 = Utf8               Code
  #29 = Utf8               LineNumberTable
  #30 = Utf8               LocalVariableTable
  #31 = Utf8               this
  #32 = Utf8               getInstance
  #33 = Utf8               ()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
  #34 = Utf8               deserialize
  #35 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #36 = Utf8               nodeF
  #37 = Utf8               Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
  #38 = Utf8               arrayNode
  #39 = Utf8               Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #40 = Utf8               p
  #41 = Utf8               Lcom/fasterxml/jackson/core/JsonParser;
  #42 = Utf8               ctxt
  #43 = Utf8               Lcom/fasterxml/jackson/databind/DeserializationContext;
  #44 = Utf8               StackMapTable
  #45 = Utf8               Exceptions
  #46 = Class              #77            // java/io/IOException
  #47 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/ArrayNode;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #48 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
  #49 = Class              #78            // com/fasterxml/jackson/core/JacksonException
  #50 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
  #51 = Utf8               <clinit>
  #52 = Utf8               Signature
  #53 = Utf8               Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer<Lcom/fasterxml/jackson/databind/node/ArrayNode;>;
  #54 = Utf8               SourceFile
  #55 = Utf8               JsonNodeDeserializer.java
  #56 = Utf8               com/fasterxml/jackson/databind/node/ArrayNode
  #57 = Class              #79            // java/lang/Boolean
  #58 = NameAndType        #80:#81        // valueOf:(Z)Ljava/lang/Boolean;
  #59 = NameAndType        #26:#82        // "<init>":(Ljava/lang/Class;Ljava/lang/Boolean;)V
  #60 = NameAndType        #22:#25        // _instance:Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
  #61 = Class              #83            // com/fasterxml/jackson/core/JsonParser
  #62 = NameAndType        #84:#85        // isExpectedStartArrayToken:()Z
  #63 = Class              #86            // com/fasterxml/jackson/databind/DeserializationContext
  #64 = NameAndType        #87:#88        // getNodeFactory:()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
  #65 = Class              #89            // com/fasterxml/jackson/databind/node/JsonNodeFactory
  #66 = NameAndType        #38:#90        // arrayNode:()Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #67 = Utf8               com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack
  #68 = Utf8               ContainerStack
  #69 = NameAndType        #26:#27        // "<init>":()V
  #70 = NameAndType        #91:#92        // _deserializeContainerNoRecursion:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
  #71 = NameAndType        #93:#94        // handleUnexpectedToken:(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;
  #72 = NameAndType        #34:#47        // deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/ArrayNode;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #73 = NameAndType        #34:#35        // deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #74 = Class              #95            // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer
  #75 = Utf8               com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer
  #76 = Utf8               com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer
  #77 = Utf8               java/io/IOException
  #78 = Utf8               com/fasterxml/jackson/core/JacksonException
  #79 = Utf8               java/lang/Boolean
  #80 = Utf8               valueOf
  #81 = Utf8               (Z)Ljava/lang/Boolean;
  #82 = Utf8               (Ljava/lang/Class;Ljava/lang/Boolean;)V
  #83 = Utf8               com/fasterxml/jackson/core/JsonParser
  #84 = Utf8               isExpectedStartArrayToken
  #85 = Utf8               ()Z
  #86 = Utf8               com/fasterxml/jackson/databind/DeserializationContext
  #87 = Utf8               getNodeFactory
  #88 = Utf8               ()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
  #89 = Utf8               com/fasterxml/jackson/databind/node/JsonNodeFactory
  #90 = Utf8               ()Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #91 = Utf8               _deserializeContainerNoRecursion
  #92 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
  #93 = Utf8               handleUnexpectedToken
  #94 = Utf8               (Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;
  #95 = Utf8               com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 1l

  protected static final com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance;
    descriptor: Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
    flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL

  protected com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #1                  // class com/fasterxml/jackson/databind/node/ArrayNode
         3: iconst_1
         4: invokestatic  #2                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
         7: invokespecial #3                  // Method com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer."<init>":(Ljava/lang/Class;Ljava/lang/Boolean;)V
        10: return
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;

  public static com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance();
    descriptor: ()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #4                  // Field _instance:Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
         3: areturn
      LineNumberTable:
        line 165: 0

  public com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=3
         0: aload_1
         1: invokevirtual #5                  // Method com/fasterxml/jackson/core/JsonParser.isExpectedStartArrayToken:()Z
         4: ifeq          38
         7: aload_2
         8: invokevirtual #6                  // Method com/fasterxml/jackson/databind/DeserializationContext.getNodeFactory:()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
        11: astore_3
        12: aload_3
        13: invokevirtual #7                  // Method com/fasterxml/jackson/databind/node/JsonNodeFactory.arrayNode:()Lcom/fasterxml/jackson/databind/node/ArrayNode;
        16: astore        4
        18: aload_0
        19: aload_1
        20: aload_2
        21: aload_3
        22: new           #8                  // class com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack
        25: dup
        26: invokespecial #9                  // Method com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack."<init>":()V
        29: aload         4
        31: invokevirtual #10                 // Method _deserializeContainerNoRecursion:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
        34: pop
        35: aload         4
        37: areturn
        38: aload_2
        39: ldc           #1                  // class com/fasterxml/jackson/databind/node/ArrayNode
        41: aload_1
        42: invokevirtual #11                 // Method com/fasterxml/jackson/databind/DeserializationContext.handleUnexpectedToken:(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;
        45: checkcast     #1                  // class com/fasterxml/jackson/databind/node/ArrayNode
        48: areturn
      LineNumberTable:
        line 170: 0
        line 171: 7
        line 172: 12
        line 173: 18
        line 175: 35
        line 177: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     3 nodeF   Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
           18      20     4 arrayNode   Lcom/fasterxml/jackson/databind/node/ArrayNode;
            0      49     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
            0      49     1     p   Lcom/fasterxml/jackson/core/JsonParser;
            0      49     2  ctxt   Lcom/fasterxml/jackson/databind/DeserializationContext;
      StackMapTable: number_of_entries = 1
        frame_type = 38 /* same */
    Exceptions:
      throws java.io.IOException

  public com.fasterxml.jackson.databind.node.ArrayNode deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.node.ArrayNode) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/ArrayNode;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=4
         0: aload_1
         1: invokevirtual #5                  // Method com/fasterxml/jackson/core/JsonParser.isExpectedStartArrayToken:()Z
         4: ifeq          28
         7: aload_0
         8: aload_1
         9: aload_2
        10: aload_2
        11: invokevirtual #6                  // Method com/fasterxml/jackson/databind/DeserializationContext.getNodeFactory:()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
        14: new           #8                  // class com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack
        17: dup
        18: invokespecial #9                  // Method com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack."<init>":()V
        21: aload_3
        22: invokevirtual #10                 // Method _deserializeContainerNoRecursion:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
        25: pop
        26: aload_3
        27: areturn
        28: aload_2
        29: ldc           #1                  // class com/fasterxml/jackson/databind/node/ArrayNode
        31: aload_1
        32: invokevirtual #11                 // Method com/fasterxml/jackson/databind/DeserializationContext.handleUnexpectedToken:(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;
        35: checkcast     #1                  // class com/fasterxml/jackson/databind/node/ArrayNode
        38: areturn
      LineNumberTable:
        line 187: 0
        line 188: 7
        line 190: 26
        line 192: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
            0      39     1     p   Lcom/fasterxml/jackson/core/JsonParser;
            0      39     2  ctxt   Lcom/fasterxml/jackson/databind/DeserializationContext;
            0      39     3 arrayNode   Lcom/fasterxml/jackson/databind/node/ArrayNode;
      StackMapTable: number_of_entries = 1
        frame_type = 28 /* same */
    Exceptions:
      throws java.io.IOException

  public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) throws java.io.IOException, com.fasterxml.jackson.core.JacksonException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: checkcast     #1                  // class com/fasterxml/jackson/databind/node/ArrayNode
         7: invokevirtual #12                 // Method deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/ArrayNode;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
        10: areturn
      LineNumberTable:
        line 156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
    Exceptions:
      throws java.io.IOException, com.fasterxml.jackson.core.JacksonException

  public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JacksonException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #13                 // Method deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/node/ArrayNode;
         6: areturn
      LineNumberTable:
        line 156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
    Exceptions:
      throws java.io.IOException, com.fasterxml.jackson.core.JacksonException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #14                 // class com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer
         3: dup
         4: invokespecial #15                 // Method "<init>":()V
         7: putstatic     #4                  // Field _instance:Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
        10: return
      LineNumberTable:
        line 161: 0
}
Signature: #53                          // Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer<Lcom/fasterxml/jackson/databind/node/ArrayNode;>;
SourceFile: "JsonNodeDeserializer.java"
InnerClasses:
  static final #23= #14 of #74;           // ArrayDeserializer=class com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer of class com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer
  static final #68= #8 of #16;            // ContainerStack=class com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack of class com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer
