Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/U34$BigInt$.class
  Last modified May 29, 2022; size 1831 bytes
  SHA-256 checksum 9083c4009cdac7a9d5c6c3a995af49cb16d17daac13aba26f373ad73a73ba05d
  Compiled from "BitsRangeTypes.scala"
public class org.sireum.U34$BigInt$ extends java.lang.Object implements org.sireum.$ZCompanionBigInt<org.sireum.U34>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/U34$BigInt$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 6, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/U34$BigInt$
    #2 = Class              #1            // org/sireum/U34$BigInt$
    #3 = Utf8               Ljava/lang/Object;Lorg/sireum/$ZCompanionBigInt<Lorg/sireum/U34;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/$ZCompanionBigInt
    #7 = Class              #6            // org/sireum/$ZCompanionBigInt
    #8 = Utf8               BitsRangeTypes.scala
    #9 = Utf8               org/sireum/U34
   #10 = Class              #9            // org/sireum/U34
   #11 = Utf8               BigInt$
   #12 = Utf8               org/sireum/Z$MP$
   #13 = Class              #12           // org/sireum/Z$MP$
   #14 = Utf8               org/sireum/Z
   #15 = Class              #14           // org/sireum/Z
   #16 = Utf8               MP$
   #17 = Utf8               MODULE$
   #18 = Utf8               Lorg/sireum/U34$BigInt$;
   #19 = Utf8               <clinit>
   #20 = Utf8               ()V
   #21 = Utf8               <init>
   #22 = NameAndType        #21:#20       // "<init>":()V
   #23 = Methodref          #2.#22        // org/sireum/U34$BigInt$."<init>":()V
   #24 = NameAndType        #17:#18       // MODULE$:Lorg/sireum/U34$BigInt$;
   #25 = Fieldref           #2.#24        // org/sireum/U34$BigInt$.MODULE$:Lorg/sireum/U34$BigInt$;
   #26 = Utf8               apply
   #27 = Utf8               (Lscala/math/BigInt;)J
   #28 = Utf8               n
   #29 = Utf8               org/sireum/U34$
   #30 = Class              #29           // org/sireum/U34$
   #31 = Utf8               Lorg/sireum/U34$;
   #32 = NameAndType        #17:#31       // MODULE$:Lorg/sireum/U34$;
   #33 = Fieldref           #30.#32       // org/sireum/U34$.MODULE$:Lorg/sireum/U34$;
   #34 = Utf8               isWrapped
   #35 = Utf8               ()Z
   #36 = NameAndType        #34:#35       // isWrapped:()Z
   #37 = Methodref          #30.#36       // org/sireum/U34$.isWrapped:()Z
   #38 = Utf8               scala/math/BigInt
   #39 = Class              #38           // scala/math/BigInt
   #40 = Utf8               toLong
   #41 = Utf8               ()J
   #42 = NameAndType        #40:#41       // toLong:()J
   #43 = Methodref          #39.#42       // scala/math/BigInt.toLong:()J
   #44 = Utf8               Lorg/sireum/Z$MP$;
   #45 = NameAndType        #17:#44       // MODULE$:Lorg/sireum/Z$MP$;
   #46 = Fieldref           #13.#45       // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
   #47 = Utf8               (Lscala/math/BigInt;)Lorg/sireum/Z;
   #48 = NameAndType        #26:#47       // apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
   #49 = Methodref          #13.#48       // org/sireum/Z$MP$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
   #50 = Utf8               (Lorg/sireum/Z;)J
   #51 = NameAndType        #26:#50       // apply:(Lorg/sireum/Z;)J
   #52 = Methodref          #30.#51       // org/sireum/U34$.apply:(Lorg/sireum/Z;)J
   #53 = Utf8               this
   #54 = Utf8               Lscala/math/BigInt;
   #55 = Utf8               unapply
   #56 = Utf8               (J)Lscala/Option;
   #57 = Utf8               (J)Lscala/Option<Lscala/math/BigInt;>;
   #58 = Utf8               scala/Some
   #59 = Class              #58           // scala/Some
   #60 = Utf8               (J)V
   #61 = NameAndType        #21:#60       // "<init>":(J)V
   #62 = Methodref          #10.#61       // org/sireum/U34."<init>":(J)V
   #63 = Utf8               toBigInt
   #64 = Utf8               ()Lscala/math/BigInt;
   #65 = NameAndType        #63:#64       // toBigInt:()Lscala/math/BigInt;
   #66 = Methodref          #10.#65       // org/sireum/U34.toBigInt:()Lscala/math/BigInt;
   #67 = Utf8               (Ljava/lang/Object;)V
   #68 = NameAndType        #21:#67       // "<init>":(Ljava/lang/Object;)V
   #69 = Methodref          #59.#68       // scala/Some."<init>":(Ljava/lang/Object;)V
   #70 = Utf8               J
   #71 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #72 = Utf8               value
   #73 = NameAndType        #72:#41       // value:()J
   #74 = Methodref          #10.#73       // org/sireum/U34.value:()J
   #75 = NameAndType        #55:#56       // unapply:(J)Lscala/Option;
   #76 = Methodref          #2.#75        // org/sireum/U34$BigInt$.unapply:(J)Lscala/Option;
   #77 = Utf8               scala/None$
   #78 = Class              #77           // scala/None$
   #79 = Utf8               Lscala/None$;
   #80 = NameAndType        #17:#79       // MODULE$:Lscala/None$;
   #81 = Fieldref           #78.#80       // scala/None$.MODULE$:Lscala/None$;
   #82 = Utf8               Ljava/lang/Object;
   #83 = Utf8               scala/Option
   #84 = Class              #83           // scala/Option
   #85 = Utf8               (Lscala/math/BigInt;)Ljava/lang/Object;
   #86 = Utf8               s
   #87 = NameAndType        #26:#27       // apply:(Lscala/math/BigInt;)J
   #88 = Methodref          #2.#87        // org/sireum/U34$BigInt$.apply:(Lscala/math/BigInt;)J
   #89 = Methodref          #5.#22        // java/lang/Object."<init>":()V
   #90 = Utf8               Code
   #91 = Utf8               LineNumberTable
   #92 = Utf8               StackMapTable
   #93 = Utf8               LocalVariableTable
   #94 = Utf8               MethodParameters
   #95 = Utf8               Signature
   #96 = Utf8               InnerClasses
   #97 = Utf8               SourceFile
   #98 = Utf8               ScalaInlineInfo
   #99 = Utf8               Scala
{
  public static final org.sireum.U34$BigInt$ MODULE$;
    descriptor: Lorg/sireum/U34$BigInt$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/U34$BigInt$
         3: dup
         4: invokespecial #23                 // Method "<init>":()V
         7: putstatic     #25                 // Field MODULE$:Lorg/sireum/U34$BigInt$;
        10: return
      LineNumberTable:
        line 121: 0

  public long apply(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #33                 // Field org/sireum/U34$.MODULE$:Lorg/sireum/U34$;
         3: invokevirtual #37                 // Method org/sireum/U34$.isWrapped:()Z
         6: ifeq          16
         9: aload_1
        10: invokevirtual #43                 // Method scala/math/BigInt.toLong:()J
        13: goto          29
        16: getstatic     #33                 // Field org/sireum/U34$.MODULE$:Lorg/sireum/U34$;
        19: getstatic     #46                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        22: aload_1
        23: invokevirtual #49                 // Method org/sireum/Z$MP$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        26: invokevirtual #52                 // Method org/sireum/U34$.apply:(Lorg/sireum/Z;)J
        29: lreturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ long ]
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/sireum/U34$BigInt$;
            0      30     1     n   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.Option<scala.math.BigInt> unapply(long);
    descriptor: (J)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=2
         0: new           #59                 // class scala/Some
         3: dup
         4: new           #10                 // class org/sireum/U34
         7: dup
         8: lload_1
         9: invokespecial #62                 // Method org/sireum/U34."<init>":(J)V
        12: invokevirtual #66                 // Method org/sireum/U34.toBigInt:()Lscala/math/BigInt;
        15: invokespecial #69                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        18: areturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/sireum/U34$BigInt$;
            0      19     1     n   J
    Signature: #57                          // (J)Lscala/Option<Lscala/math/BigInt;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.Option unapply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: instanceof    #10                 // class org/sireum/U34
         4: ifeq          21
         7: aload_0
         8: aload_1
         9: checkcast     #10                 // class org/sireum/U34
        12: invokevirtual #74                 // Method org/sireum/U34.value:()J
        15: invokevirtual #76                 // Method unapply:(J)Lscala/Option;
        18: goto          24
        21: getstatic     #81                 // Field scala/None$.MODULE$:Lscala/None$;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/U34$BigInt$;
            0      25     1     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.Object apply(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #10                 // class org/sireum/U34
         3: dup
         4: aload_0
         5: aload_1
         6: invokevirtual #88                 // Method apply:(Lscala/math/BigInt;)J
         9: invokespecial #62                 // Method org/sireum/U34."<init>":(J)V
        12: areturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/U34$BigInt$;
            0      13     1     s   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      s                              final

  public org.sireum.U34$BigInt$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #89                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/U34$BigInt$;
}
InnerClasses:
  public static #11= #2 of #10;           // BigInt$=class org/sireum/U34$BigInt$ of class org/sireum/U34
  public static #16= #13 of #15;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
Signature: #3                           // Ljava/lang/Object;Lorg/sireum/$ZCompanionBigInt<Lorg/sireum/U34;>;
SourceFile: "BitsRangeTypes.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 15 00 14 01 00 1A 00 1B 01 00 1A
   00 55 01 00 37 00 38 01 00 37 00 47 01
  Scala: length = 0x0 (unknown attribute)

