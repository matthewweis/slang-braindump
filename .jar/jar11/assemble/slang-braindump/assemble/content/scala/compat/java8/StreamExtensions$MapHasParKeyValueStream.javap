Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/compat/java8/StreamExtensions$MapHasParKeyValueStream.class
  Last modified May 29, 2022; size 3142 bytes
  SHA-256 checksum 9afba475cb9efb12a0c514a88b7e35f2106e2f78699b4fb9a13c341cc21712ab
  Compiled from "StreamConverters.scala"
public class scala.compat.java8.StreamExtensions$MapHasParKeyValueStream<K extends java.lang.Object, V extends java.lang.Object, CC extends scala.collection.MapOps<java.lang.Object, java.lang.Object, scala.collection.Map, ?>> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/compat/java8/StreamExtensions$MapHasParKeyValueStream
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 5, attributes: 5
Constant pool:
   #1 = Utf8               scala/compat/java8/StreamExtensions$MapHasParKeyValueStream
   #2 = Class              #1             // scala/compat/java8/StreamExtensions$MapHasParKeyValueStream
   #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               StreamConverters.scala
   #7 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
   #8 = Class              #7             // scala/collection/convert/StreamExtensions$StreamShape
   #9 = Utf8               scala/collection/convert/StreamExtensions
  #10 = Class              #9             // scala/collection/convert/StreamExtensions
  #11 = Utf8               StreamShape
  #12 = Utf8               scala/compat/java8/StreamExtensions
  #13 = Class              #12            // scala/compat/java8/StreamExtensions
  #14 = Utf8               MapHasParKeyValueStream
  #15 = Utf8               cc
  #16 = Utf8               Lscala/collection/MapOps;
  #17 = Utf8               TCC;
  #18 = Utf8               $outer
  #19 = Utf8               Lscala/compat/java8/StreamExtensions;
  #20 = Utf8               parKeyStream
  #21 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
  #22 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TK;TS;TSt;>;Lscala/collection/StepperShape<TK;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
  #23 = Utf8               s
  #24 = Utf8               st
  #25 = Utf8               isEfficient
  #26 = NameAndType        #15:#16        // cc:Lscala/collection/MapOps;
  #27 = Fieldref           #2.#26         // scala/compat/java8/StreamExtensions$MapHasParKeyValueStream.cc:Lscala/collection/MapOps;
  #28 = Utf8               scala/collection/MapOps
  #29 = Class              #28            // scala/collection/MapOps
  #30 = Utf8               keyStepper
  #31 = Utf8               (Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #32 = NameAndType        #30:#31        // keyStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #33 = InterfaceMethodref #29.#32        // scala/collection/MapOps.keyStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #34 = Utf8               fromStepper
  #35 = Utf8               (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #36 = NameAndType        #34:#35        // fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #37 = InterfaceMethodref #8.#36         // scala/collection/convert/StreamExtensions$StreamShape.fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #38 = Utf8               this
  #39 = Utf8               Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
  #40 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape;
  #41 = Utf8               Lscala/collection/StepperShape;
  #42 = Utf8               Lscala/$less$colon$less;
  #43 = Utf8               parValueStream
  #44 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TV;TS;TSt;>;Lscala/collection/StepperShape<TV;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
  #45 = Utf8               valueStepper
  #46 = NameAndType        #45:#31        // valueStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #47 = InterfaceMethodref #29.#46        // scala/collection/MapOps.valueStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #48 = Utf8               parStream
  #49 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<Lscala/Tuple2<TK;TV;>;TS;TSt;>;Lscala/collection/StepperShape<Lscala/Tuple2<TK;TV;>;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
  #50 = Utf8               stepper
  #51 = NameAndType        #50:#31        // stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #52 = InterfaceMethodref #29.#51        // scala/collection/MapOps.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
  #53 = Utf8               scala$compat$java8$StreamExtensions$MapHasParKeyValueStream$$$outer
  #54 = Utf8               ()Lscala/compat/java8/StreamExtensions;
  #55 = NameAndType        #18:#19        // $outer:Lscala/compat/java8/StreamExtensions;
  #56 = Fieldref           #2.#55         // scala/compat/java8/StreamExtensions$MapHasParKeyValueStream.$outer:Lscala/compat/java8/StreamExtensions;
  #57 = Utf8               <init>
  #58 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)V
  #59 = Utf8               (TCC;)V
  #60 = Utf8               ()V
  #61 = NameAndType        #57:#60        // "<init>":()V
  #62 = Methodref          #5.#61         // java/lang/Object."<init>":()V
  #63 = Utf8               Signature
  #64 = Utf8               Code
  #65 = Utf8               LineNumberTable
  #66 = Utf8               LocalVariableTable
  #67 = Utf8               MethodParameters
  #68 = Utf8               StackMapTable
  #69 = Utf8               InnerClasses
  #70 = Utf8               SourceFile
  #71 = Utf8               ScalaInlineInfo
  #72 = Utf8               Scala
{
  private final CC cc;
    descriptor: Lscala/collection/MapOps;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #17                          // TCC;

  public final scala.compat.java8.StreamExtensions $outer;
    descriptor: Lscala/compat/java8/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S parKeyStream(scala.collection.convert.StreamExtensions$StreamShape<K, S, St>, scala.collection.StepperShape<K, St>, scala.$less$colon$less<CC, scala.collection.MapOps<K, V, scala.collection.Map, ?>>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #27                 // Field cc:Lscala/collection/MapOps;
         5: aload_2
         6: invokeinterface #33,  2           // InterfaceMethod scala/collection/MapOps.keyStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_1
        12: invokeinterface #37,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        17: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
            0      18     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      18     2    st   Lscala/collection/StepperShape;
            0      18     3 isEfficient   Lscala/$less$colon$less;
    Signature: #22                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TK;TS;TSt;>;Lscala/collection/StepperShape<TK;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final
      isEfficient                    final

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S parValueStream(scala.collection.convert.StreamExtensions$StreamShape<V, S, St>, scala.collection.StepperShape<V, St>, scala.$less$colon$less<CC, scala.collection.MapOps<K, V, scala.collection.Map, ?>>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #27                 // Field cc:Lscala/collection/MapOps;
         5: aload_2
         6: invokeinterface #47,  2           // InterfaceMethod scala/collection/MapOps.valueStepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_1
        12: invokeinterface #37,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        17: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
            0      18     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      18     2    st   Lscala/collection/StepperShape;
            0      18     3 isEfficient   Lscala/$less$colon$less;
    Signature: #44                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TV;TS;TSt;>;Lscala/collection/StepperShape<TV;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final
      isEfficient                    final

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S parStream(scala.collection.convert.StreamExtensions$StreamShape<scala.Tuple2<K, V>, S, St>, scala.collection.StepperShape<scala.Tuple2<K, V>, St>, scala.$less$colon$less<CC, scala.collection.MapOps<K, V, scala.collection.Map, ?>>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;Lscala/$less$colon$less;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #27                 // Field cc:Lscala/collection/MapOps;
         5: aload_2
         6: invokeinterface #52,  2           // InterfaceMethod scala/collection/MapOps.stepper:(Lscala/collection/StepperShape;)Lscala/collection/Stepper;
        11: iconst_1
        12: invokeinterface #37,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.fromStepper:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        17: areturn
      LineNumberTable:
        line 123: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
            0      18     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      18     2    st   Lscala/collection/StepperShape;
            0      18     3 isEfficient   Lscala/$less$colon$less;
    Signature: #49                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<Lscala/Tuple2<TK;TV;>;TS;TSt;>;Lscala/collection/StepperShape<Lscala/Tuple2<TK;TV;>;TSt;>;Lscala/$less$colon$less<TCC;Lscala/collection/MapOps<TK;TV;Lscala/collection/Map;*>;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final
      isEfficient                    final

  public scala.compat.java8.StreamExtensions scala$compat$java8$StreamExtensions$MapHasParKeyValueStream$$$outer();
    descriptor: ()Lscala/compat/java8/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field $outer:Lscala/compat/java8/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;

  public scala.compat.java8.StreamExtensions$MapHasParKeyValueStream(CC);
    descriptor: (Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #27                 // Field cc:Lscala/collection/MapOps;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #56                 // Field $outer:Lscala/compat/java8/StreamExtensions;
        16: aload_0
        17: invokespecial #62                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 87: 0
        line 128: 16
        line 87: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
            0      21     1 $outer   Lscala/compat/java8/StreamExtensions;
            0      21     2    cc   Lscala/collection/MapOps;
    Signature: #59                          // (TCC;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      cc                             final
}
InnerClasses:
  public static #11= #8 of #10;           // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
  public #14= #2 of #13;                  // MapHasParKeyValueStream=class scala/compat/java8/StreamExtensions$MapHasParKeyValueStream of class scala/compat/java8/StreamExtensions
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>Ljava/lang/Object;
SourceFile: "StreamConverters.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 39 00 3A 00 00 14 00 15 00 00 30
   00 15 00 00 2B 00 15 00 00 35 00 36 00
  Scala: length = 0x0 (unknown attribute)

