Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/util/Random.class
  Last modified May 29, 2022; size 11510 bytes
  SHA-256 checksum 7bdf98ba5892ad27f00716b847f5fd3f6a7a18f284dc1c79e7bce47b07b8dfdc
  Compiled from "Random.scala"
public class scala.util.Random implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/util/Random
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 38, attributes: 6
Constant pool:
    #1 = Utf8               scala/util/Random
    #2 = Class              #1            // scala/util/Random
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               Random.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\u0005uf\u0001B\u0010!\u0001\u0015B\u0001\"\r\u0001\u0003\u0006\u0004%\tA\r\u0005\ts\u0001\u0011\t\u0011)A\u0005g!)!\b\u0001C\u0001w!)!\b\u0001C\u0001\u007f!)!\b\u0001C\u0001\u000b\")!\b\u0001C\u0001\u0015\")1\n\u0001C\u0001\u0019\")\u0001\u000b\u0001C\u0001#\")\u0001\u000b\u0001C\u0001;\")\u0001\r\u0001C\u0001C\")Q\r\u0001C\u0001M\")1\u000e\u0001C\u0001Y\")Q\r\u0001C\u0001a\")1\u000f\u0001C\u0001C\")A\u000f\u0001C\u0001k\")A\u000f\u0001C\u0001m\")Q\r\u0001C\u0001q\")1\u0010\u0001C\u0001y\")1\u0010\u0001C\u0001{\")Q\r\u0001C\u0001\u007f\"9\u0011Q\u0001\u0001\u0005\u0002\u0005\u001d\u0001bBA\u0012\u0001\u0011\u0005\u0011Q\u0005\u0005\b\u0003[\u0001A\u0011AA\u0018\u0011\u001d\t\u0019\u0004\u0001C\u0001\u0003kAq!a\u001d\u0001\t\u0003\t)hB\u0004\u0002\u001e\u0002B\t!a(\u0007\r}\u0001\u0003\u0012AAQ\u0011\u0019Q4\u0004\"\u0001\u0002$\"9\u0011QU\u000e\u0005\u0004\u0005\u001d\u0006\"CAW7\u0005\u0005I\u0011BAX\u0005\u0019\u0011\u0016M\u001c3p[*\u0011\u0011EI\u0001\u0005kRLGNC\u0001$\u0003\u0015\u00198-\u00197b\u0007\u0001\u00192\u0001\u0001\u0014+!\t9\u0003&D\u0001#\u0013\tI#E\u0001\u0004B]f\u0014VM\u001a\t\u0003W9r!a\n\u0017\n\u00055\u0012\u0013a\u00029bG.\fw-Z\u0005\u0003_A\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!!\f\u0012\u0002\tM,GNZ\u000b\u0002gA\u0011A\u0007O\u0007\u0002k)\u0011\u0011E\u000e\u0006\u0002o\u0005!!.\u0019<b\u0013\tyR\'A\u0003tK24\u0007%\u0001\u0004=S:LGO\u0010\u000b\u0003yy\u0002\"!\u0010\u0001\u000e\u0003\u0001BQ!M\u0002A\u0002M\"\"\u0001\u0010!\t\u000b\u0005#\u0001\u0019\u0001\"\u0002\tM,W\r\u001a\t\u0003O\rK!\u0001\u0012\u0012\u0003\t1{gn\u001a\u000b\u0003y\u0019CQ!Q\u0003A\u0002\u001d\u0003\"a\n%\n\u0005%\u0013#aA%oiR\tA(A\u0006oKb$(i\\8mK\u0006tG#A\'\u0011\u0005\u001dr\u0015BA(#\u0005\u001d\u0011un\u001c7fC:\f\u0011B\\3yi\nKH/Z:\u0015\u0005I+\u0006CA\u0014T\u0013\t!&E\u0001\u0003V]&$\b\"\u0002,\t\u0001\u00049\u0016!\u00022zi\u0016\u001c\bcA\u0014Y5&\u0011\u0011L\t\u0002\u0006\u0003J\u0014\u0018-\u001f\t\u0003OmK!\u0001\u0018\u0012\u0003\t\tKH/\u001a\u000b\u0003/zCQaX\u0005A\u0002\u001d\u000b\u0011A\\\u0001\u000b]\u0016DH\u000fR8vE2,G#\u00012\u0011\u0005\u001d\u001a\u0017B\u00013#\u0005\u0019!u.\u001e2mK\u00069!-\u001a;xK\u0016tGc\u00012hS\")\u0001n\u0003a\u0001E\u0006aQ.\u001b8J]\u000edWo]5wK\")!n\u0003a\u0001E\u0006aQ.\u0019=Fq\u000edWo]5wK\u0006Ia.\u001a=u\r2|\u0017\r\u001e\u000b\u0002[B\u0011qE\\\u0005\u0003_\n\u0012QA\u00127pCR$2!\\9s\u0011\u0015AW\u00021\u0001n\u0011\u0015QW\u00021\u0001n\u00031qW\r\u001f;HCV\u001c8/[1o\u0003\u001dqW\r\u001f;J]R$\u0012a\u0012\u000b\u0003\u000f^DQa\u0018\tA\u0002\u001d#2aR={\u0011\u0015A\u0017\u00031\u0001H\u0011\u0015Q\u0017\u00031\u0001H\u0003!qW\r\u001f;M_:<G#\u0001\"\u0015\u0005\ts\b\"B0\u0014\u0001\u0004\u0011E#\u0002\"\u0002\u0002\u0005\r\u0001\"\u00025\u0015\u0001\u0004\u0011\u0005\"\u00026\u0015\u0001\u0004\u0011\u0015A\u00038fqR\u001cFO]5oOR!\u0011\u0011BA\u0010!\u0011\tY!!\u0007\u000f\t\u00055\u0011Q\u0003\t\u0004\u0003\u001f\u0011SBAA\t\u0015\r\t\u0019\u0002J\u0001\u0007yI|w\u000e\u001e \n\u0007\u0005]!%\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u00037\tiB\u0001\u0004TiJLgn\u001a\u0006\u0004\u0003/\u0011\u0003BBA\u0011+\u0001\u0007q)\u0001\u0004mK:<G\u000f[\u0001\u0012]\u0016DH\u000f\u0015:j]R\f\'\r\\3DQ\u0006\u0014HCAA\u0014!\r9\u0013\u0011F\u0005\u0004\u0003W\u0011#\u0001B\"iCJ\fqa]3u\'\u0016,G\rF\u0002S\u0003cAQ!Q\fA\u0002\t\u000bqa\u001d5vM\u001adW-\u0006\u0004\u00028\u0005=\u0014q\b\u000b\u0005\u0003s\t\u0019\u0007\u0006\u0003\u0002<\u0005E\u0003\u0003BA\u001f\u0003\u007fa\u0001\u0001B\u0004\u0002Ba\u0011\r!a\u0011\u0003\u0003\r\u000bB!!\u0012\u0002LA\u0019q%a\u0012\n\u0007\u0005%#EA\u0004O_RD\u0017N\\4\u0011\u0007\u001d\ni%C\u0002\u0002P\t\u00121!\u00118z\u0011\u001d\t\u0019\u0006\u0007a\u0002\u0003+\n!A\u00194\u0011\u0015\u0005]\u0013QLA1\u0003[\nY$\u0004\u0002\u0002Z)\u0019\u00111\f\u0012\u0002\u0015\r|G\u000e\\3di&|g.\u0003\u0003\u0002`\u0005e#!\u0003\"vS2$gI]8n\u001d\u0011\ti$a\u0019\t\u000f\u0005\u0015\u0004\u00041\u0001\u0002h\u0005\u0011\u0001p\u001d\t\u0006W\u0005%\u0014QN\u0005\u0004\u0003W\u0002$\u0001D%uKJ\f\'\r\\3P]\u000e,\u0007\u0003BA\u001f\u0003_\"q!!\u001d\u0019\u0005\u0004\t\u0019EA\u0001U\u00031\tG\u000e\u001d5b]VlWM]5d+\t\t9\b\u0005\u0004\u0002z\u0005}\u0014qE\u0007\u0003\u0003wRA!! \u0002Z\u0005I\u0011.\\7vi\u0006\u0014G.Z\u0005\u0005\u0003\u0003\u000bYH\u0001\u0005MCjLH*[:uQ-I\u0012QQAI\u0003\'\u000b9*!\'\u0011\t\u0005\u001d\u0015QR\u0007\u0003\u0003\u0013S1!a##\u0003)\tgN\\8uCRLwN\\\u0005\u0005\u0003\u001f\u000bIIA\u0005nS\u001e\u0014\u0018\r^5p]\u00069Q.Z:tC\u001e,\u0017EAAK\u0003U\u0002\u0017\r\u001c9iC:,X.\u001a:jG\u0002\u0004#/\u001a;ve:\u001c\b%\u0019\u0011MCjLH*[:uA%t7\u000f^3bI\u0002zg\rI1!\'R\u0014X-Y7\u0002\u0013\rD\u0017M\\4fI&s\u0017EAAN\u0003\u0019\u0011d&M\u001a/a\u00051!+\u00198e_6\u0004\"!P\u000e\u0014\u0005maDCAAP\u0003IQ\u0017M^1SC:$w.\u001c+p%\u0006tGm\\7\u0015\u0007q\nI\u000b\u0003\u0004\u0002,v\u0001\raM\u0001\u0002e\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011\u0011\u0017\t\u0005\u0003g\u000bI,\u0004\u0002\u00026*\u0019\u0011q\u0017\u001c\u0002\t1\fgnZ\u0005\u0005\u0003w\u000b)L\u0001\u0004PE*,7\r\u001e
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/collection/immutable/LazyList$State
   #17 = Class              #16           // scala/collection/immutable/LazyList$State
   #18 = Utf8               scala/collection/immutable/LazyList
   #19 = Class              #18           // scala/collection/immutable/LazyList
   #20 = Utf8               State
   #21 = Utf8               scala/collection/immutable/Range$Inclusive
   #22 = Class              #21           // scala/collection/immutable/Range$Inclusive
   #23 = Utf8               scala/collection/immutable/Range
   #24 = Class              #23           // scala/collection/immutable/Range
   #25 = Utf8               Inclusive
   #26 = Utf8               self
   #27 = Utf8               Ljava/util/Random;
   #28 = Utf8               javaRandomToRandom
   #29 = Utf8               (Ljava/util/Random;)Lscala/util/Random;
   #30 = Utf8               r
   #31 = Utf8               scala/util/Random$
   #32 = Class              #31           // scala/util/Random$
   #33 = Utf8               MODULE$
   #34 = Utf8               Lscala/util/Random$;
   #35 = NameAndType        #33:#34       // MODULE$:Lscala/util/Random$;
   #36 = Fieldref           #32.#35       // scala/util/Random$.MODULE$:Lscala/util/Random$;
   #37 = Utf8               <init>
   #38 = Utf8               (Ljava/util/Random;)V
   #39 = NameAndType        #37:#38       // "<init>":(Ljava/util/Random;)V
   #40 = Methodref          #2.#39        // scala/util/Random."<init>":(Ljava/util/Random;)V
   #41 = Utf8               ()Ljava/util/Random;
   #42 = NameAndType        #26:#27       // self:Ljava/util/Random;
   #43 = Fieldref           #2.#42        // scala/util/Random.self:Ljava/util/Random;
   #44 = Utf8               this
   #45 = Utf8               Lscala/util/Random;
   #46 = Utf8               nextBoolean
   #47 = Utf8               ()Z
   #48 = NameAndType        #26:#41       // self:()Ljava/util/Random;
   #49 = Methodref          #2.#48        // scala/util/Random.self:()Ljava/util/Random;
   #50 = Utf8               java/util/Random
   #51 = Class              #50           // java/util/Random
   #52 = NameAndType        #46:#47       // nextBoolean:()Z
   #53 = Methodref          #51.#52       // java/util/Random.nextBoolean:()Z
   #54 = Utf8               nextBytes
   #55 = Utf8               ([B)V
   #56 = NameAndType        #54:#55       // nextBytes:([B)V
   #57 = Methodref          #51.#56       // java/util/Random.nextBytes:([B)V
   #58 = Utf8               [B
   #59 = Utf8               (I)[B
   #60 = Utf8               n
   #61 = Utf8               scala/runtime/RichInt$
   #62 = Class              #61           // scala/runtime/RichInt$
   #63 = Utf8               Lscala/runtime/RichInt$;
   #64 = NameAndType        #33:#63       // MODULE$:Lscala/runtime/RichInt$;
   #65 = Fieldref           #62.#64       // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
   #66 = Utf8               scala/math/package$
   #67 = Class              #66           // scala/math/package$
   #68 = Utf8               Lscala/math/package$;
   #69 = NameAndType        #33:#68       // MODULE$:Lscala/math/package$;
   #70 = Fieldref           #67.#69       // scala/math/package$.MODULE$:Lscala/math/package$;
   #71 = Utf8               java/lang/Math
   #72 = Class              #71           // java/lang/Math
   #73 = Utf8               max
   #74 = Utf8               (II)I
   #75 = NameAndType        #73:#74       // max:(II)I
   #76 = Methodref          #72.#75       // java/lang/Math.max:(II)I
   #77 = Utf8               I
   #78 = Utf8               nextDouble
   #79 = Utf8               ()D
   #80 = NameAndType        #78:#79       // nextDouble:()D
   #81 = Methodref          #51.#80       // java/util/Random.nextDouble:()D
   #82 = Utf8               between
   #83 = Utf8               (DD)D
   #84 = Utf8               minInclusive
   #85 = Utf8               maxExclusive
   #86 = Utf8               java/lang/IllegalArgumentException
   #87 = Class              #86           // java/lang/IllegalArgumentException
   #88 = Utf8               java/lang/StringBuilder
   #89 = Class              #88           // java/lang/StringBuilder
   #90 = Integer            20
   #91 = Utf8               (I)V
   #92 = NameAndType        #37:#91       // "<init>":(I)V
   #93 = Methodref          #89.#92       // java/lang/StringBuilder."<init>":(I)V
   #94 = Utf8               requirement failed:
   #95 = String             #94           // requirement failed:
   #96 = Utf8               append
   #97 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #98 = NameAndType        #96:#97       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #99 = Methodref          #89.#98       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #100 = Utf8               Invalid bounds
  #101 = String             #100          // Invalid bounds
  #102 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #103 = NameAndType        #96:#102      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #104 = Methodref          #89.#103      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #105 = Utf8               toString
  #106 = Utf8               ()Ljava/lang/String;
  #107 = NameAndType        #105:#106     // toString:()Ljava/lang/String;
  #108 = Methodref          #89.#107      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #109 = Utf8               (Ljava/lang/String;)V
  #110 = NameAndType        #37:#109      // "<init>":(Ljava/lang/String;)V
  #111 = Methodref          #87.#110      // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #112 = Methodref          #2.#80        // scala/util/Random.nextDouble:()D
  #113 = Double             -Infinityd
  #115 = Utf8               nextAfter
  #116 = NameAndType        #115:#83      // nextAfter:(DD)D
  #117 = Methodref          #72.#116      // java/lang/Math.nextAfter:(DD)D
  #118 = Utf8               next
  #119 = Utf8               D
  #120 = Utf8               nextFloat
  #121 = Utf8               ()F
  #122 = NameAndType        #120:#121     // nextFloat:()F
  #123 = Methodref          #51.#122      // java/util/Random.nextFloat:()F
  #124 = Utf8               (FF)F
  #125 = Methodref          #2.#122       // scala/util/Random.nextFloat:()F
  #126 = Utf8               (FD)F
  #127 = NameAndType        #115:#126     // nextAfter:(FD)F
  #128 = Methodref          #72.#127      // java/lang/Math.nextAfter:(FD)F
  #129 = Utf8               F
  #130 = Utf8               nextGaussian
  #131 = NameAndType        #130:#79      // nextGaussian:()D
  #132 = Methodref          #51.#131      // java/util/Random.nextGaussian:()D
  #133 = Utf8               nextInt
  #134 = Utf8               ()I
  #135 = NameAndType        #133:#134     // nextInt:()I
  #136 = Methodref          #51.#135      // java/util/Random.nextInt:()I
  #137 = Utf8               (I)I
  #138 = NameAndType        #133:#137     // nextInt:(I)I
  #139 = Methodref          #51.#138      // java/util/Random.nextInt:(I)I
  #140 = Methodref          #2.#138       // scala/util/Random.nextInt:(I)I
  #141 = Utf8               loop$1
  #142 = NameAndType        #141:#74      // loop$1:(II)I
  #143 = Methodref          #2.#142       // scala/util/Random.loop$1:(II)I
  #144 = Utf8               difference
  #145 = Utf8               nextLong
  #146 = Utf8               ()J
  #147 = NameAndType        #145:#146     // nextLong:()J
  #148 = Methodref          #51.#147      // java/util/Random.nextLong:()J
  #149 = Utf8               (J)J
  #150 = Utf8               n must be positive
  #151 = String             #150          // n must be positive
  #152 = Long               2147483647l
  #154 = Utf8               bits
  #155 = Utf8               halfn
  #156 = Utf8               J
  #157 = Utf8               nextn
  #158 = Utf8               offset
  #159 = Utf8               _n
  #160 = Utf8               (JJ)J
  #161 = NameAndType        #145:#149     // nextLong:(J)J
  #162 = Methodref          #2.#161       // scala/util/Random.nextLong:(J)J
  #163 = Utf8               loop$2
  #164 = NameAndType        #163:#160     // loop$2:(JJ)J
  #165 = Methodref          #2.#164       // scala/util/Random.loop$2:(JJ)J
  #166 = Utf8               nextString
  #167 = Utf8               (I)Ljava/lang/String;
  #168 = Utf8               length
  #169 = Utf8
  #170 = String             #169          //
  #171 = Utf8               safeChar$1
  #172 = Utf8               ()C
  #173 = NameAndType        #171:#172     // safeChar$1:()C
  #174 = Methodref          #2.#173       // scala/util/Random.safeChar$1:()C
  #175 = Utf8               java/lang/String
  #176 = Class              #175          // java/lang/String
  #177 = Utf8               ([C)V
  #178 = NameAndType        #37:#177      // "<init>":([C)V
  #179 = Methodref          #176.#178     // java/lang/String."<init>":([C)V
  #180 = Utf8               arr
  #181 = Utf8               [C
  #182 = Utf8               i
  #183 = Class              #181          // "[C"
  #184 = Utf8               nextPrintableChar
  #185 = Utf8               low
  #186 = Utf8               high
  #187 = Utf8               setSeed
  #188 = Utf8               (J)V
  #189 = Utf8               seed
  #190 = NameAndType        #187:#188     // setSeed:(J)V
  #191 = Methodref          #51.#190      // java/util/Random.setSeed:(J)V
  #192 = Utf8               shuffle
  #193 = Utf8               (Lscala/collection/IterableOnce;Lscala/collection/BuildFrom;)Ljava/lang/Object;
  #194 = Utf8               <T:Ljava/lang/Object;C:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TT;>;Lscala/collection/BuildFrom<+Lscala/collection/IterableOnce<TT;>;TT;TC;>;)TC;
  #195 = Utf8               xs
  #196 = Utf8               bf
  #197 = Utf8               scala/collection/mutable/ArrayBuffer
  #198 = Class              #197          // scala/collection/mutable/ArrayBuffer
  #199 = Utf8               ()V
  #200 = NameAndType        #37:#199      // "<init>":()V
  #201 = Methodref          #198.#200     // scala/collection/mutable/ArrayBuffer."<init>":()V
  #202 = Utf8               scala/collection/mutable/Growable
  #203 = Class              #202          // scala/collection/mutable/Growable
  #204 = Utf8               addAll
  #205 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #206 = NameAndType        #204:#205     // addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #207 = InterfaceMethodref #203.#206     // scala/collection/mutable/Growable.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #208 = NameAndType        #168:#134     // length:()I
  #209 = Methodref          #198.#208     // scala/collection/mutable/ArrayBuffer.length:()I
  #210 = Utf8               scala/collection/immutable/Range$
  #211 = Class              #210          // scala/collection/immutable/Range$
  #212 = Utf8               Lscala/collection/immutable/Range$;
  #213 = NameAndType        #33:#212      // MODULE$:Lscala/collection/immutable/Range$;
  #214 = Fieldref           #211.#213     // scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
  #215 = Utf8               (III)V
  #216 = NameAndType        #37:#215      // "<init>":(III)V
  #217 = Methodref          #22.#216      // scala/collection/immutable/Range$Inclusive."<init>":(III)V
  #218 = Utf8               by
  #219 = Utf8               (I)Lscala/collection/immutable/Range;
  #220 = NameAndType        #218:#219     // by:(I)Lscala/collection/immutable/Range;
  #221 = Methodref          #22.#220      // scala/collection/immutable/Range$Inclusive.by:(I)Lscala/collection/immutable/Range;
  #222 = Utf8               isEmpty
  #223 = NameAndType        #222:#47      // isEmpty:()Z
  #224 = Methodref          #24.#223      // scala/collection/immutable/Range.isEmpty:()Z
  #225 = Utf8               start
  #226 = NameAndType        #225:#134     // start:()I
  #227 = Methodref          #24.#226      // scala/collection/immutable/Range.start:()I
  #228 = Utf8               $anonfun$shuffle$1
  #229 = Utf8               (Lscala/util/Random;Lscala/collection/mutable/ArrayBuffer;I)V
  #230 = NameAndType        #228:#229     // $anonfun$shuffle$1:(Lscala/util/Random;Lscala/collection/mutable/ArrayBuffer;I)V
  #231 = Methodref          #2.#230       // scala/util/Random.$anonfun$shuffle$1:(Lscala/util/Random;Lscala/collection/mutable/ArrayBuffer;I)V
  #232 = Utf8               scala$collection$immutable$Range$$lastElement
  #233 = NameAndType        #232:#77      // scala$collection$immutable$Range$$lastElement:I
  #234 = Fieldref           #24.#233      // scala/collection/immutable/Range.scala$collection$immutable$Range$$lastElement:I
  #235 = Utf8               step
  #236 = NameAndType        #235:#134     // step:()I
  #237 = Methodref          #24.#236      // scala/collection/immutable/Range.step:()I
  #238 = Utf8               scala/collection/BuildFrom
  #239 = Class              #238          // scala/collection/BuildFrom
  #240 = Utf8               newBuilder
  #241 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Builder;
  #242 = NameAndType        #240:#241     // newBuilder:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
  #243 = InterfaceMethodref #239.#242     // scala/collection/BuildFrom.newBuilder:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
  #244 = Utf8               scala/collection/mutable/Builder
  #245 = Class              #244          // scala/collection/mutable/Builder
  #246 = Utf8               result
  #247 = Utf8               ()Ljava/lang/Object;
  #248 = NameAndType        #246:#247     // result:()Ljava/lang/Object;
  #249 = InterfaceMethodref #245.#248     // scala/collection/mutable/Builder.result:()Ljava/lang/Object;
  #250 = Utf8               buf
  #251 = Utf8               Lscala/collection/mutable/ArrayBuffer;
  #252 = Utf8               Lscala/collection/IterableOnce;
  #253 = Utf8               Lscala/collection/BuildFrom;
  #254 = Utf8               foreach$mVc$sp_i
  #255 = Utf8               foreach$mVc$sp_this
  #256 = Utf8               Lscala/collection/immutable/Range;
  #257 = Utf8               to$extension_end
  #258 = Utf8               scala/collection/IterableOnce
  #259 = Class              #258          // scala/collection/IterableOnce
  #260 = Utf8               alphanumeric
  #261 = Utf8               ()Lscala/collection/immutable/LazyList;
  #262 = Utf8               ()Lscala/collection/immutable/LazyList<Ljava/lang/Object;>;
  #263 = Utf8               scala/collection/immutable/LazyList$
  #264 = Class              #263          // scala/collection/immutable/LazyList$
  #265 = Utf8               Lscala/collection/immutable/LazyList$;
  #266 = NameAndType        #33:#265      // MODULE$:Lscala/collection/immutable/LazyList$;
  #267 = Fieldref           #264.#266     // scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
  #268 = MethodType         #172          //  ()C
  #269 = Utf8               $anonfun$alphanumeric$1
  #270 = Utf8               (Lscala/util/Random;)C
  #271 = NameAndType        #269:#270     // $anonfun$alphanumeric$1:(Lscala/util/Random;)C
  #272 = Methodref          #2.#271       // scala/util/Random.$anonfun$alphanumeric$1:(Lscala/util/Random;)C
  #273 = MethodHandle       6:#272        // REF_invokeStatic scala/util/Random.$anonfun$alphanumeric$1:(Lscala/util/Random;)C
  #274 = Integer            1
  #275 = Utf8               java/lang/invoke/LambdaMetafactory
  #276 = Class              #275          // java/lang/invoke/LambdaMetafactory
  #277 = Utf8               altMetafactory
  #278 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #279 = NameAndType        #277:#278     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #280 = Methodref          #276.#279     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #281 = MethodHandle       6:#280        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #282 = Utf8               apply$mcC$sp
  #283 = Utf8               (Lscala/util/Random;)Lscala/runtime/java8/JFunction0$mcC$sp;
  #284 = NameAndType        #282:#283     // apply$mcC$sp:(Lscala/util/Random;)Lscala/runtime/java8/JFunction0$mcC$sp;
  #285 = InvokeDynamic      #0:#284       // #0:apply$mcC$sp:(Lscala/util/Random;)Lscala/runtime/java8/JFunction0$mcC$sp;
  #286 = MethodType         #247          //  ()Ljava/lang/Object;
  #287 = Utf8               $anonfun$continually$1
  #288 = Utf8               (Lscala/Function0;)Lscala/collection/immutable/LazyList$State;
  #289 = NameAndType        #287:#288     // $anonfun$continually$1:(Lscala/Function0;)Lscala/collection/immutable/LazyList$State;
  #290 = Methodref          #264.#289     // scala/collection/immutable/LazyList$.$anonfun$continually$1:(Lscala/Function0;)Lscala/collection/immutable/LazyList$State;
  #291 = MethodHandle       6:#290        // REF_invokeStatic scala/collection/immutable/LazyList$.$anonfun$continually$1:(Lscala/Function0;)Lscala/collection/immutable/LazyList$State;
  #292 = Utf8               ()Lscala/collection/immutable/LazyList$State;
  #293 = MethodType         #292          //  ()Lscala/collection/immutable/LazyList$State;
  #294 = Integer            5
  #295 = Utf8               apply
  #296 = Utf8               (Lscala/Function0;)Lscala/Function0;
  #297 = NameAndType        #295:#296     // apply:(Lscala/Function0;)Lscala/Function0;
  #298 = InvokeDynamic      #1:#297       // #1:apply:(Lscala/Function0;)Lscala/Function0;
  #299 = Utf8               (Lscala/Function0;)V
  #300 = NameAndType        #37:#299      // "<init>":(Lscala/Function0;)V
  #301 = Methodref          #19.#300      // scala/collection/immutable/LazyList."<init>":(Lscala/Function0;)V
  #302 = Utf8               continually_scala$collection$immutable$LazyList$$newLL_state
  #303 = Utf8               Lscala/Function0;
  #304 = Utf8               $anonfun$between$1
  #305 = Utf8               $anonfun$between$2
  #306 = Utf8               $anonfun$between$3
  #307 = Utf8               minInclusive$1
  #308 = Utf8               maxExclusive$1
  #309 = Methodref          #2.#135       // scala/util/Random.nextInt:()I
  #310 = Utf8               $anonfun$nextLong$1
  #311 = Utf8               $anonfun$between$4
  #312 = Utf8               minInclusive$2
  #313 = Utf8               maxExclusive$2
  #314 = Methodref          #2.#147       // scala/util/Random.nextLong:()J
  #315 = Integer            55296
  #316 = Utf8               surrogateStart
  #317 = Utf8               swap$1
  #318 = Utf8               (IILscala/collection/mutable/ArrayBuffer;)V
  #319 = Utf8               i1
  #320 = Utf8               i2
  #321 = Utf8               buf$1
  #322 = Utf8               (I)Ljava/lang/Object;
  #323 = NameAndType        #295:#322     // apply:(I)Ljava/lang/Object;
  #324 = Methodref          #198.#323     // scala/collection/mutable/ArrayBuffer.apply:(I)Ljava/lang/Object;
  #325 = Utf8               update
  #326 = Utf8               (ILjava/lang/Object;)V
  #327 = NameAndType        #325:#326     // update:(ILjava/lang/Object;)V
  #328 = Methodref          #198.#327     // scala/collection/mutable/ArrayBuffer.update:(ILjava/lang/Object;)V
  #329 = Utf8               tmp
  #330 = Utf8               Ljava/lang/Object;
  #331 = Utf8               $this
  #332 = NameAndType        #317:#318     // swap$1:(IILscala/collection/mutable/ArrayBuffer;)V
  #333 = Methodref          #2.#332       // scala/util/Random.swap$1:(IILscala/collection/mutable/ArrayBuffer;)V
  #334 = Utf8               k
  #335 = Utf8               nextAlphaNum$1
  #336 = Utf8               ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
  #337 = String             #336          // ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
  #338 = Methodref          #176.#208     // java/lang/String.length:()I
  #339 = Utf8               charAt
  #340 = Utf8               (I)C
  #341 = NameAndType        #339:#340     // charAt:(I)C
  #342 = Methodref          #176.#341     // java/lang/String.charAt:(I)C
  #343 = Utf8               chars
  #344 = Utf8               Ljava/lang/String;
  #345 = NameAndType        #335:#172     // nextAlphaNum$1:()C
  #346 = Methodref          #2.#345       // scala/util/Random.nextAlphaNum$1:()C
  #347 = Methodref          #4.#200       // java/lang/Object."<init>":()V
  #348 = NameAndType        #37:#188      // "<init>":(J)V
  #349 = Methodref          #51.#348      // java/util/Random."<init>":(J)V
  #350 = Methodref          #2.#348       // scala/util/Random."<init>":(J)V
  #351 = Methodref          #51.#200      // java/util/Random."<init>":()V
  #352 = Utf8               $deserializeLambda$
  #353 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #354 = Utf8               scala/runtime/LambdaDeserialize
  #355 = Class              #354          // scala/runtime/LambdaDeserialize
  #356 = Utf8               bootstrap
  #357 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #358 = NameAndType        #356:#357     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #359 = Methodref          #355.#358     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #360 = MethodHandle       6:#359        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #361 = Utf8               lambdaDeserialize
  #362 = NameAndType        #361:#353     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #363 = InvokeDynamic      #2:#362       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #364 = Utf8               Code
  #365 = Utf8               LineNumberTable
  #366 = Utf8               LocalVariableTable
  #367 = Utf8               MethodParameters
  #368 = Utf8               StackMapTable
  #369 = Utf8               Signature
  #370 = Utf8               InnerClasses
  #371 = Utf8               SourceFile
  #372 = Utf8               RuntimeVisibleAnnotations
  #373 = Utf8               BootstrapMethods
  #374 = Utf8               ScalaInlineInfo
  #375 = Utf8               ScalaSig
{
  private final java.util.Random self;
    descriptor: Ljava/util/Random;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.util.Random javaRandomToRandom(java.util.Random);
    descriptor: (Ljava/util/Random;)Lscala/util/Random;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #36                 // Field scala/util/Random$.MODULE$:Lscala/util/Random$;
         3: pop
         4: new           #2                  // class scala/util/Random
         7: dup
         8: aload_0
         9: invokespecial #40                 // Method "<init>":(Ljava/util/Random;)V
        12: areturn
      LineNumberTable:
        line 262: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0     r   Ljava/util/Random;
    MethodParameters:
      Name                           Flags
      r                              final

  public java.util.Random self();
    descriptor: ()Ljava/util/Random;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #43                 // Field self:Ljava/util/Random;
         4: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Random;

  public boolean nextBoolean();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #49                 // Method self:()Ljava/util/Random;
         4: invokevirtual #53                 // Method java/util/Random.nextBoolean:()Z
         7: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/util/Random;

  public void nextBytes(byte[]);
    descriptor: ([B)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #49                 // Method self:()Ljava/util/Random;
         4: aload_1
         5: invokevirtual #57                 // Method java/util/Random.nextBytes:([B)V
         8: return
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/util/Random;
            0       9     1 bytes   [B
    MethodParameters:
      Name                           Flags
      bytes                          final

  public byte[] nextBytes(int);
    descriptor: (I)[B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: getstatic     #65                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
         3: pop
         4: iconst_0
         5: istore_3
         6: getstatic     #70                 // Field scala/math/package$.MODULE$:Lscala/math/package$;
         9: pop
        10: iload_3
        11: iload_1
        12: invokestatic  #76                 // Method java/lang/Math.max:(II)I
        15: newarray       byte
        17: astore_2
        18: aload_0
        19: invokevirtual #49                 // Method self:()Ljava/util/Random;
        22: aload_2
        23: invokevirtual #57                 // Method java/util/Random.nextBytes:([B)V
        26: aload_2
        27: areturn
      LineNumberTable:
        line 44: 0
        line 45: 18
        line 46: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18       9     2 bytes   [B
            0      28     0  this   Lscala/util/Random;
            0      28     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public double nextDouble();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #49                 // Method self:()Ljava/util/Random;
         4: invokevirtual #81                 // Method java/util/Random.nextDouble:()D
         7: dreturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/util/Random;

  public double between(double, double);
    descriptor: (DD)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=7, args_size=3
         0: dload_1
         1: dload_3
         2: dcmpg
         3: ifge          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ifne          44
        14: new           #87                 // class java/lang/IllegalArgumentException
        17: dup
        18: new           #89                 // class java/lang/StringBuilder
        21: dup
        22: ldc           #90                 // int 20
        24: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(I)V
        27: ldc           #95                 // String requirement failed:
        29: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: ldc           #101                // String Invalid bounds
        34: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        37: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        40: invokespecial #111                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        43: athrow
        44: aload_0
        45: invokevirtual #112                // Method nextDouble:()D
        48: dload_3
        49: dload_1
        50: dsub
        51: dmul
        52: dload_1
        53: dadd
        54: dstore        5
        56: dload         5
        58: dload_3
        59: dcmpg
        60: ifge          66
        63: dload         5
        65: dreturn
        66: dload_3
        67: ldc2_w        #113                // double -Infinityd
        70: invokestatic  #117                // Method java/lang/Math.nextAfter:(DD)D
        73: dreturn
      StackMapTable: number_of_entries = 4
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 32 /* same */
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ double ]
      LineNumberTable:
        line 58: 0
        line 58: 32
        line 58: 34
        line 60: 44
        line 61: 56
        line 62: 66
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           56      17     5  next   D
            0      74     0  this   Lscala/util/Random;
            0      74     1 minInclusive   D
            0      74     3 maxExclusive   D
    MethodParameters:
      Name                           Flags
      minInclusive                   final
      maxExclusive                   final

  public float nextFloat();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #49                 // Method self:()Ljava/util/Random;
         4: invokevirtual #123                // Method java/util/Random.nextFloat:()F
         7: freturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/util/Random;

  public float between(float, float);
    descriptor: (FF)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: fload_1
         1: fload_2
         2: fcmpg
         3: ifge          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ifne          44
        14: new           #87                 // class java/lang/IllegalArgumentException
        17: dup
        18: new           #89                 // class java/lang/StringBuilder
        21: dup
        22: ldc           #90                 // int 20
        24: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(I)V
        27: ldc           #95                 // String requirement failed:
        29: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: ldc           #101                // String Invalid bounds
        34: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        37: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        40: invokespecial #111                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        43: athrow
        44: aload_0
        45: invokevirtual #125                // Method nextFloat:()F
        48: fload_2
        49: fload_1
        50: fsub
        51: fmul
        52: fload_1
        53: fadd
        54: fstore_3
        55: fload_3
        56: fload_2
        57: fcmpg
        58: ifge          63
        61: fload_3
        62: freturn
        63: fload_2
        64: ldc2_w        #113                // double -Infinityd
        67: invokestatic  #128                // Method java/lang/Math.nextAfter:(FD)F
        70: freturn
      StackMapTable: number_of_entries = 4
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 32 /* same */
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ float ]
      LineNumberTable:
        line 74: 0
        line 74: 32
        line 74: 34
        line 76: 44
        line 77: 55
        line 78: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           55      15     3  next   F
            0      71     0  this   Lscala/util/Random;
            0      71     1 minInclusive   F
            0      71     2 maxExclusive   F
    MethodParameters:
      Name                           Flags
      minInclusive                   final
      maxExclusive                   final

  public double nextGaussian();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #49                 // Method self:()Ljava/util/Random;
         4: invokevirtual #132                // Method java/util/Random.nextGaussian:()D
         7: dreturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/util/Random;

  public int nextInt();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #49                 // Method self:()Ljava/util/Random;
         4: invokevirtual #136                // Method java/util/Random.nextInt:()I
         7: ireturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/util/Random;

  public int nextInt(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #49                 // Method self:()Ljava/util/Random;
         4: iload_1
         5: invokevirtual #139                // Method java/util/Random.nextInt:(I)I
         8: ireturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/util/Random;
            0       9     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public int between(int, int);
    descriptor: (II)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: iload_1
         1: iload_2
         2: if_icmpge     9
         5: iconst_1
         6: goto          10
         9: iconst_0
        10: ifne          43
        13: new           #87                 // class java/lang/IllegalArgumentException
        16: dup
        17: new           #89                 // class java/lang/StringBuilder
        20: dup
        21: ldc           #90                 // int 20
        23: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(I)V
        26: ldc           #95                 // String requirement failed:
        28: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: ldc           #101                // String Invalid bounds
        33: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        36: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        39: invokespecial #111                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        42: athrow
        43: iload_2
        44: iload_1
        45: isub
        46: istore_3
        47: iload_3
        48: iconst_0
        49: if_icmplt     60
        52: aload_0
        53: iload_3
        54: invokevirtual #140                // Method nextInt:(I)I
        57: iload_1
        58: iadd
        59: ireturn
        60: aload_0
        61: iload_1
        62: iload_2
        63: invokespecial #143                // Method loop$1:(II)I
        66: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 32 /* same */
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ int ]
      LineNumberTable:
        line 103: 0
        line 103: 31
        line 103: 33
        line 105: 43
        line 106: 47
        line 107: 52
        line 118: 60
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           47      19     3 difference   I
            0      67     0  this   Lscala/util/Random;
            0      67     1 minInclusive   I
            0      67     2 maxExclusive   I
    MethodParameters:
      Name                           Flags
      minInclusive                   final
      maxExclusive                   final

  public long nextLong();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #49                 // Method self:()Ljava/util/Random;
         4: invokevirtual #148                // Method java/util/Random.nextLong:()J
         7: lreturn
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/util/Random;

  public long nextLong(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=12, args_size=2
         0: lload_1
         1: lconst_0
         2: lcmp
         3: ifle          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ifne          44
        14: new           #87                 // class java/lang/IllegalArgumentException
        17: dup
        18: new           #89                 // class java/lang/StringBuilder
        21: dup
        22: ldc           #90                 // int 20
        24: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(I)V
        27: ldc           #95                 // String requirement failed:
        29: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: ldc           #151                // String n must be positive
        34: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        37: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        40: invokespecial #111                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        43: athrow
        44: lconst_0
        45: lstore_3
        46: lload_1
        47: lstore        5
        49: lload         5
        51: ldc2_w        #152                // long 2147483647l
        54: lcmp
        55: iflt          114
        58: aload_0
        59: iconst_2
        60: invokevirtual #140                // Method nextInt:(I)I
        63: istore        7
        65: lload         5
        67: iconst_1
        68: lushr
        69: lstore        8
        71: iload         7
        73: iconst_2
        74: iand
        75: iconst_0
        76: if_icmpne     84
        79: lload         8
        81: goto          89
        84: lload         5
        86: lload         8
        88: lsub
        89: lstore        10
        91: iload         7
        93: iconst_1
        94: iand
        95: iconst_0
        96: if_icmpne     107
        99: lload_3
       100: lload         5
       102: lload         10
       104: lsub
       105: ladd
       106: lstore_3
       107: lload         10
       109: lstore        5
       111: goto          49
       114: lload_3
       115: aload_0
       116: lload         5
       118: l2i
       119: invokevirtual #140                // Method nextInt:(I)I
       122: i2l
       123: ladd
       124: lreturn
      StackMapTable: number_of_entries = 8
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 32 /* same */
        frame_type = 253 /* append */
          offset_delta = 4
          locals = [ long, long ]
        frame_type = 253 /* append */
          offset_delta = 34
          locals = [ int, long ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ long ]
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ long ]
        frame_type = 248 /* chop */
          offset_delta = 6
      LineNumberTable:
        line 132: 0
        line 132: 32
        line 132: 34
        line 142: 44
        line 143: 46
        line 145: 49
        line 146: 58
        line 147: 65
        line 149: 71
        line 150: 84
        line 151: 91
        line 152: 99
        line 153: 107
        line 145: 111
        line 155: 114
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           65      46     7  bits   I
           71      40     8 halfn   J
           91      20    10 nextn   J
           46      78     3 offset   J
           49      75     5    _n   J
            0     125     0  this   Lscala/util/Random;
            0     125     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public long between(long, long);
    descriptor: (JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=3
         0: lload_1
         1: lload_3
         2: lcmp
         3: ifge          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ifne          44
        14: new           #87                 // class java/lang/IllegalArgumentException
        17: dup
        18: new           #89                 // class java/lang/StringBuilder
        21: dup
        22: ldc           #90                 // int 20
        24: invokespecial #93                 // Method java/lang/StringBuilder."<init>":(I)V
        27: ldc           #95                 // String requirement failed:
        29: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: ldc           #101                // String Invalid bounds
        34: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        37: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        40: invokespecial #111                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        43: athrow
        44: lload_3
        45: lload_1
        46: lsub
        47: lstore        5
        49: lload         5
        51: lconst_0
        52: lcmp
        53: iflt          65
        56: aload_0
        57: lload         5
        59: invokevirtual #162                // Method nextLong:(J)J
        62: lload_1
        63: ladd
        64: lreturn
        65: aload_0
        66: lload_1
        67: lload_3
        68: invokespecial #165                // Method loop$2:(JJ)J
        71: lreturn
      StackMapTable: number_of_entries = 4
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 32 /* same */
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ long ]
      LineNumberTable:
        line 163: 0
        line 163: 32
        line 163: 34
        line 165: 44
        line 166: 49
        line 167: 56
        line 178: 65
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           49      22     5 difference   J
            0      72     0  this   Lscala/util/Random;
            0      72     1 minInclusive   J
            0      72     3 maxExclusive   J
    MethodParameters:
      Name                           Flags
      minInclusive                   final
      maxExclusive                   final

  public java.lang.String nextString(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: iload_1
         1: iconst_0
         2: if_icmpgt     8
         5: ldc           #170                // String
         7: areturn
         8: iload_1
         9: newarray       char
        11: astore_2
        12: iconst_0
        13: istore_3
        14: iload_3
        15: iload_1
        16: if_icmpge     32
        19: aload_2
        20: iload_3
        21: aload_0
        22: invokespecial #174                // Method safeChar$1:()C
        25: castore
        26: iinc          3, 1
        29: goto          14
        32: new           #176                // class java/lang/String
        35: dup
        36: aload_2
        37: invokespecial #179                // Method java/lang/String."<init>":([C)V
        40: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 5
          locals = [ class "[C", int ]
        frame_type = 17 /* same */
      LineNumberTable:
        line 197: 0
        line 198: 5
        line 200: 8
        line 201: 12
        line 202: 14
        line 203: 19
        line 204: 26
        line 202: 29
        line 206: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      28     2   arr   [C
           14      26     3     i   I
            0      41     0  this   Lscala/util/Random;
            0      41     1 length   I
    MethodParameters:
      Name                           Flags
      length                         final

  public char nextPrintableChar();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: bipush        33
         2: istore_1
         3: bipush        127
         5: istore_2
         6: aload_0
         7: invokevirtual #49                 // Method self:()Ljava/util/Random;
        10: iload_2
        11: iload_1
        12: isub
        13: invokevirtual #139                // Method java/util/Random.nextInt:(I)I
        16: iload_1
        17: iadd
        18: i2c
        19: ireturn
      LineNumberTable:
        line 214: 0
        line 215: 3
        line 216: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      16     1   low   I
            6      13     2  high   I
            0      20     0  this   Lscala/util/Random;

  public void setSeed(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #49                 // Method self:()Ljava/util/Random;
         4: lload_1
         5: invokevirtual #191                // Method java/util/Random.setSeed:(J)V
         8: return
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/util/Random;
            0       9     1  seed   J
    MethodParameters:
      Name                           Flags
      seed                           final

  public <T extends java.lang.Object, C extends java.lang.Object> C shuffle(scala.collection.IterableOnce<T>, scala.collection.BuildFrom<? extends scala.collection.IterableOnce<T>, T, C>);
    descriptor: (Lscala/collection/IterableOnce;Lscala/collection/BuildFrom;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=8, args_size=3
         0: new           #198                // class scala/collection/mutable/ArrayBuffer
         3: dup
         4: invokespecial #201                // Method scala/collection/mutable/ArrayBuffer."<init>":()V
         7: aload_1
         8: invokeinterface #207,  2          // InterfaceMethod scala/collection/mutable/Growable.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
        13: checkcast     #198                // class scala/collection/mutable/ArrayBuffer
        16: astore_3
        17: getstatic     #65                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        20: pop
        21: aload_3
        22: invokevirtual #209                // Method scala/collection/mutable/ArrayBuffer.length:()I
        25: istore        4
        27: iconst_2
        28: istore        7
        30: getstatic     #214                // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
        33: pop
        34: new           #22                 // class scala/collection/immutable/Range$Inclusive
        37: dup
        38: iload         4
        40: iload         7
        42: iconst_1
        43: invokespecial #217                // Method scala/collection/immutable/Range$Inclusive."<init>":(III)V
        46: iconst_m1
        47: invokevirtual #221                // Method scala/collection/immutable/Range$Inclusive.by:(I)Lscala/collection/immutable/Range;
        50: dup
        51: ifnonnull     56
        54: aconst_null
        55: athrow
        56: astore        5
        58: aload         5
        60: invokevirtual #224                // Method scala/collection/immutable/Range.isEmpty:()Z
        63: ifne          103
        66: aload         5
        68: invokevirtual #227                // Method scala/collection/immutable/Range.start:()I
        71: istore        6
        73: aload_0
        74: aload_3
        75: iload         6
        77: invokestatic  #231                // Method $anonfun$shuffle$1:(Lscala/util/Random;Lscala/collection/mutable/ArrayBuffer;I)V
        80: iload         6
        82: aload         5
        84: getfield      #234                // Field scala/collection/immutable/Range.scala$collection$immutable$Range$$lastElement:I
        87: if_icmpeq     103
        90: iload         6
        92: aload         5
        94: invokevirtual #237                // Method scala/collection/immutable/Range.step:()I
        97: iadd
        98: istore        6
       100: goto          73
       103: aconst_null
       104: astore        5
       106: aload_2
       107: aload_1
       108: invokeinterface #243,  2          // InterfaceMethod scala/collection/BuildFrom.newBuilder:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
       113: dup
       114: ifnonnull     119
       117: aconst_null
       118: athrow
       119: aload_3
       120: invokeinterface #207,  2          // InterfaceMethod scala/collection/mutable/Growable.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
       125: checkcast     #245                // class scala/collection/mutable/Builder
       128: invokeinterface #249,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
       133: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [ class scala/util/Random, class scala/collection/IterableOnce, class scala/collection/BuildFrom, class scala/collection/mutable/ArrayBuffer, int, top, top, int ]
          stack = [ class scala/collection/immutable/Range ]
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class scala/util/Random, class scala/collection/IterableOnce, class scala/collection/BuildFrom, class scala/collection/mutable/ArrayBuffer, int, class scala/collection/immutable/Range, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class scala/util/Random, class scala/collection/IterableOnce, class scala/collection/BuildFrom, class scala/collection/mutable/ArrayBuffer, int, class scala/collection/immutable/Range, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class scala/util/Random, class scala/collection/IterableOnce, class scala/collection/BuildFrom, class scala/collection/mutable/ArrayBuffer, int, null, top, int ]
          stack = [ class scala/collection/mutable/Builder ]
      LineNumberTable:
        line 226: 0
        line 234: 17
        line 239: 106
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17     116     3   buf   Lscala/collection/mutable/ArrayBuffer;
            0     134     0  this   Lscala/util/Random;
            0     134     1    xs   Lscala/collection/IterableOnce;
            0     134     2    bf   Lscala/collection/BuildFrom;
           73      30     6 foreach$mVc$sp_i   I
           58      45     5 foreach$mVc$sp_this   Lscala/collection/immutable/Range;
           30      16     7 to$extension_end   I
    Signature: #194                         // <T:Ljava/lang/Object;C:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TT;>;Lscala/collection/BuildFrom<+Lscala/collection/IterableOnce<TT;>;TT;TC;>;)TC;
    MethodParameters:
      Name                           Flags
      xs                             final
      bf                             final

  public scala.collection.immutable.LazyList<java.lang.Object> alphanumeric();
    descriptor: ()Lscala/collection/immutable/LazyList;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #267                // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
         3: pop
         4: aload_0
         5: invokedynamic #285,  0            // InvokeDynamic #0:apply$mcC$sp:(Lscala/util/Random;)Lscala/runtime/java8/JFunction0$mcC$sp;
        10: invokedynamic #298,  0            // InvokeDynamic #1:apply:(Lscala/Function0;)Lscala/Function0;
        15: astore_1
        16: new           #19                 // class scala/collection/immutable/LazyList
        19: dup
        20: aload_1
        21: invokespecial #301                // Method scala/collection/immutable/LazyList."<init>":(Lscala/Function0;)V
        24: areturn
      LineNumberTable:
        line 252: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/util/Random;
           16       8     1 continually_scala$collection$immutable$LazyList$$newLL_state   Lscala/Function0;
    Signature: #262                         // ()Lscala/collection/immutable/LazyList<Ljava/lang/Object;>;

  public static final java.lang.String $anonfun$between$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #101                // String Invalid bounds
         2: areturn
      LineNumberTable:
        line 58: 0

  public static final java.lang.String $anonfun$between$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #101                // String Invalid bounds
         2: areturn
      LineNumberTable:
        line 74: 0

  public static final java.lang.String $anonfun$between$3();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #101                // String Invalid bounds
         2: areturn
      LineNumberTable:
        line 103: 0

  private final int loop$1(int, int);
    descriptor: (II)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=4, args_size=3
         0: aload_0
         1: invokevirtual #309                // Method nextInt:()I
         4: istore_3
         5: iload_3
         6: iload_1
         7: if_icmplt     0
        10: iload_3
        11: iload_2
        12: if_icmpge     0
        15: iload_3
        16: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 0 /* same */
      LineNumberTable:
        line 114: 0
        line 115: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      12     3     n   I
            0      17     0  this   Lscala/util/Random;
            0      17     1 minInclusive$1   I
            0      17     2 maxExclusive$1   I
    MethodParameters:
      Name                           Flags
      minInclusive$1                 final
      maxExclusive$1                 final

  public static final java.lang.String $anonfun$nextLong$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #151                // String n must be positive
         2: areturn
      LineNumberTable:
        line 132: 0

  public static final java.lang.String $anonfun$between$4();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #101                // String Invalid bounds
         2: areturn
      LineNumberTable:
        line 163: 0

  private final long loop$2(long, long);
    descriptor: (JJ)J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=7, args_size=3
         0: aload_0
         1: invokevirtual #314                // Method nextLong:()J
         4: lstore        5
         6: lload         5
         8: lload_1
         9: lcmp
        10: iflt          0
        13: lload         5
        15: lload_3
        16: lcmp
        17: ifge          0
        20: lload         5
        22: lreturn
      StackMapTable: number_of_entries = 1
        frame_type = 0 /* same */
      LineNumberTable:
        line 174: 0
        line 175: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      17     5     n   J
            0      23     0  this   Lscala/util/Random;
            0      23     1 minInclusive$2   J
            0      23     3 maxExclusive$2   J
    MethodParameters:
      Name                           Flags
      minInclusive$2                 final
      maxExclusive$2                 final

  private final char safeChar$1();
    descriptor: ()C
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=1
         0: ldc_w         #315                // int 55296
         3: istore_1
         4: aload_0
         5: iload_1
         6: iconst_1
         7: isub
         8: invokevirtual #140                // Method nextInt:(I)I
        11: iconst_1
        12: iadd
        13: i2c
        14: ireturn
      LineNumberTable:
        line 193: 0
        line 194: 4
        line 195: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4      10     1 surrogateStart   I
            0      15     0  this   Lscala/util/Random;

  private static final void swap$1(int, int, scala.collection.mutable.ArrayBuffer);
    descriptor: (IILscala/collection/mutable/ArrayBuffer;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=4, args_size=3
         0: aload_2
         1: iload_0
         2: invokevirtual #324                // Method scala/collection/mutable/ArrayBuffer.apply:(I)Ljava/lang/Object;
         5: astore_3
         6: aload_2
         7: iload_0
         8: aload_2
         9: iload_1
        10: invokevirtual #324                // Method scala/collection/mutable/ArrayBuffer.apply:(I)Ljava/lang/Object;
        13: invokevirtual #328                // Method scala/collection/mutable/ArrayBuffer.update:(ILjava/lang/Object;)V
        16: aload_2
        17: iload_1
        18: aload_3
        19: invokevirtual #328                // Method scala/collection/mutable/ArrayBuffer.update:(ILjava/lang/Object;)V
        22: return
      LineNumberTable:
        line 229: 0
        line 230: 6
        line 231: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      16     3   tmp   Ljava/lang/Object;
            0      23     0    i1   I
            0      23     1    i2   I
            0      23     2 buf$1   Lscala/collection/mutable/ArrayBuffer;
    MethodParameters:
      Name                           Flags
      i1                             final
      i2                             final
      buf$1                          final

  public static final void $anonfun$shuffle$1(scala.util.Random, scala.collection.mutable.ArrayBuffer, int);
    descriptor: (Lscala/util/Random;Lscala/collection/mutable/ArrayBuffer;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: iload_2
         2: invokevirtual #140                // Method nextInt:(I)I
         5: istore_3
         6: iload_2
         7: iconst_1
         8: isub
         9: iload_3
        10: aload_1
        11: invokestatic  #333                // Method swap$1:(IILscala/collection/mutable/ArrayBuffer;)V
        14: return
      LineNumberTable:
        line 235: 0
        line 236: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6       8     3     k   I
            0      15     0 $this   Lscala/util/Random;
            0      15     1 buf$1   Lscala/collection/mutable/ArrayBuffer;
            0      15     2     n   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      buf$1                          final
      n                              final

  private final char nextAlphaNum$1();
    descriptor: ()C
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=1
         0: ldc_w         #337                // String ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
         3: astore_1
         4: aload_1
         5: aload_0
         6: invokevirtual #49                 // Method self:()Ljava/util/Random;
         9: aload_1
        10: invokevirtual #338                // Method java/lang/String.length:()I
        13: invokevirtual #139                // Method java/util/Random.nextInt:(I)I
        16: invokevirtual #342                // Method java/lang/String.charAt:(I)C
        19: ireturn
      LineNumberTable:
        line 248: 0
        line 249: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4      15     1 chars   Ljava/lang/String;
            0      20     0  this   Lscala/util/Random;

  public static final char $anonfun$alphanumeric$1(scala.util.Random);
    descriptor: (Lscala/util/Random;)C
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #346                // Method nextAlphaNum$1:()C
         4: ireturn
      LineNumberTable:
        line 252: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/util/Random;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public scala.util.Random(java.util.Random);
    descriptor: (Ljava/util/Random;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #43                 // Field self:Ljava/util/Random;
         5: aload_0
         6: invokespecial #347                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/Random;
            0      10     1  self   Ljava/util/Random;
    MethodParameters:
      Name                           Flags
      self                           final

  public scala.util.Random(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: new           #51                 // class java/util/Random
         4: dup
         5: lload_1
         6: invokespecial #349                // Method java/util/Random."<init>":(J)V
         9: invokespecial #40                 // Method "<init>":(Ljava/util/Random;)V
        12: return
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/util/Random;
            0      13     1  seed   J
    MethodParameters:
      Name                           Flags
      seed                           final

  public scala.util.Random(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: i2l
         3: invokespecial #350                // Method "<init>":(J)V
         6: return
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/util/Random;
            0       7     1  seed   I
    MethodParameters:
      Name                           Flags
      seed                           final

  public scala.util.Random();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: new           #51                 // class java/util/Random
         4: dup
         5: invokespecial #351                // Method java/util/Random."<init>":()V
         8: invokespecial #40                 // Method "<init>":(Ljava/util/Random;)V
        11: return
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/util/Random;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #363,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  private static #20= #17 of #19;         // State=class scala/collection/immutable/LazyList$State of class scala/collection/immutable/LazyList
  public static final #25= #22 of #24;    // Inclusive=class scala/collection/immutable/Range$Inclusive of class scala/collection/immutable/Range
SourceFile: "Random.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005uf\u0001B\u0010!\u0001\u0015B\u0001\"\r\u0001\u0003\u0006\u0004%\tA\r\u0005\ts\u0001\u0011\t\u0011)A\u0005g!)!\b\u0001C\u0001w!)!\b\u0001C\u0001\u007f!)!\b\u0001C\u0001\u000b\")!\b\u0001C\u0001\u0015\")1\n\u0001C\u0001\u0019\")\u0001\u000b\u0001C\u0001#\")\u0001\u000b\u0001C\u0001;\")\u0001\r\u0001C\u0001C\")Q\r\u0001C\u0001M\")1\u000e\u0001C\u0001Y\")Q\r\u0001C\u0001a\")1\u000f\u0001C\u0001C\")A\u000f\u0001C\u0001k\")A\u000f\u0001C\u0001m\")Q\r\u0001C\u0001q\")1\u0010\u0001C\u0001y\")1\u0010\u0001C\u0001{\")Q\r\u0001C\u0001\u007f\"9\u0011Q\u0001\u0001\u0005\u0002\u0005\u001d\u0001bBA\u0012\u0001\u0011\u0005\u0011Q\u0005\u0005\b\u0003[\u0001A\u0011AA\u0018\u0011\u001d\t\u0019\u0004\u0001C\u0001\u0003kAq!a\u001d\u0001\t\u0003\t)hB\u0004\u0002\u001e\u0002B\t!a(\u0007\r}\u0001\u0003\u0012AAQ\u0011\u0019Q4\u0004\"\u0001\u0002$\"9\u0011QU\u000e\u0005\u0004\u0005\u001d\u0006\"CAW7\u0005\u0005I\u0011BAX\u0005\u0019\u0011\u0016M\u001c3p[*\u0011\u0011EI\u0001\u0005kRLGNC\u0001$\u0003\u0015\u00198-\u00197b\u0007\u0001\u00192\u0001\u0001\u0014+!\t9\u0003&D\u0001#\u0013\tI#E\u0001\u0004B]f\u0014VM\u001a\t\u0003W9r!a\n\u0017\n\u00055\u0012\u0013a\u00029bG.\fw-Z\u0005\u0003_A\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!!\f\u0012\u0002\tM,GNZ\u000b\u0002gA\u0011A\u0007O\u0007\u0002k)\u0011\u0011E\u000e\u0006\u0002o\u0005!!.\u0019<b\u0013\tyR\'A\u0003tK24\u0007%\u0001\u0004=S:LGO\u0010\u000b\u0003yy\u0002\"!\u0010\u0001\u000e\u0003\u0001BQ!M\u0002A\u0002M\"\"\u0001\u0010!\t\u000b\u0005#\u0001\u0019\u0001\"\u0002\tM,W\r\u001a\t\u0003O\rK!\u0001\u0012\u0012\u0003\t1{gn\u001a\u000b\u0003y\u0019CQ!Q\u0003A\u0002\u001d\u0003\"a\n%\n\u0005%\u0013#aA%oiR\tA(A\u0006oKb$(i\\8mK\u0006tG#A\'\u0011\u0005\u001dr\u0015BA(#\u0005\u001d\u0011un\u001c7fC:\f\u0011B\\3yi\nKH/Z:\u0015\u0005I+\u0006CA\u0014T\u0013\t!&E\u0001\u0003V]&$\b\"\u0002,\t\u0001\u00049\u0016!\u00022zi\u0016\u001c\bcA\u0014Y5&\u0011\u0011L\t\u0002\u0006\u0003J\u0014\u0018-\u001f\t\u0003OmK!\u0001\u0018\u0012\u0003\t\tKH/\u001a\u000b\u0003/zCQaX\u0005A\u0002\u001d\u000b\u0011A\\\u0001\u000b]\u0016DH\u000fR8vE2,G#\u00012\u0011\u0005\u001d\u001a\u0017B\u00013#\u0005\u0019!u.\u001e2mK\u00069!-\u001a;xK\u0016tGc\u00012hS\")\u0001n\u0003a\u0001E\u0006aQ.\u001b8J]\u000edWo]5wK\")!n\u0003a\u0001E\u0006aQ.\u0019=Fq\u000edWo]5wK\u0006Ia.\u001a=u\r2|\u0017\r\u001e\u000b\u0002[B\u0011qE\\\u0005\u0003_\n\u0012QA\u00127pCR$2!\\9s\u0011\u0015AW\u00021\u0001n\u0011\u0015QW\u00021\u0001n\u00031qW\r\u001f;HCV\u001c8/[1o\u0003\u001dqW\r\u001f;J]R$\u0012a\u0012\u000b\u0003\u000f^DQa\u0018\tA\u0002\u001d#2aR={\u0011\u0015A\u0017\u00031\u0001H\u0011\u0015Q\u0017\u00031\u0001H\u0003!qW\r\u001f;M_:<G#\u0001\"\u0015\u0005\ts\b\"B0\u0014\u0001\u0004\u0011E#\u0002\"\u0002\u0002\u0005\r\u0001\"\u00025\u0015\u0001\u0004\u0011\u0005\"\u00026\u0015\u0001\u0004\u0011\u0015A\u00038fqR\u001cFO]5oOR!\u0011\u0011BA\u0010!\u0011\tY!!\u0007\u000f\t\u00055\u0011Q\u0003\t\u0004\u0003\u001f\u0011SBAA\t\u0015\r\t\u0019\u0002J\u0001\u0007yI|w\u000e\u001e \n\u0007\u0005]!%\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u00037\tiB\u0001\u0004TiJLgn\u001a\u0006\u0004\u0003/\u0011\u0003BBA\u0011+\u0001\u0007q)\u0001\u0004mK:<G\u000f[\u0001\u0012]\u0016DH\u000f\u0015:j]R\f\'\r\\3DQ\u0006\u0014HCAA\u0014!\r9\u0013\u0011F\u0005\u0004\u0003W\u0011#\u0001B\"iCJ\fqa]3u\'\u0016,G\rF\u0002S\u0003cAQ!Q\fA\u0002\t\u000bqa\u001d5vM\u001adW-\u0006\u0004\u00028\u0005=\u0014q\b\u000b\u0005\u0003s\t\u0019\u0007\u0006\u0003\u0002<\u0005E\u0003\u0003BA\u001f\u0003\u007fa\u0001\u0001B\u0004\u0002Ba\u0011\r!a\u0011\u0003\u0003\r\u000bB!!\u0012\u0002LA\u0019q%a\u0012\n\u0007\u0005%#EA\u0004O_RD\u0017N\\4\u0011\u0007\u001d\ni%C\u0002\u0002P\t\u00121!\u00118z\u0011\u001d\t\u0019\u0006\u0007a\u0002\u0003+\n!A\u00194\u0011\u0015\u0005]\u0013QLA1\u0003[\nY$\u0004\u0002\u0002Z)\u0019\u00111\f\u0012\u0002\u0015\r|G\u000e\\3di&|g.\u0003\u0003\u0002`\u0005e#!\u0003\"vS2$gI]8n\u001d\u0011\ti$a\u0019\t\u000f\u0005\u0015\u0004\u00041\u0001\u0002h\u0005\u0011\u0001p\u001d\t\u0006W\u0005%\u0014QN\u0005\u0004\u0003W\u0002$\u0001D%uKJ\f\'\r\\3P]\u000e,\u0007\u0003BA\u001f\u0003_\"q!!\u001d\u0019\u0005\u0004\t\u0019EA\u0001U\u00031\tG\u000e\u001d5b]VlWM]5d+\t\t9\b\u0005\u0004\u0002z\u0005}\u0014qE\u0007\u0003\u0003wRA!! \u0002Z\u0005I\u0011.\\7vi\u0006\u0014G.Z\u0005\u0005\u0003\u0003\u000bYH\u0001\u0005MCjLH*[:uQ-I\u0012QQAI\u0003\'\u000b9*!\'\u0011\t\u0005\u001d\u0015QR\u0007\u0003\u0003\u0013S1!a##\u0003)\tgN\\8uCRLwN\\\u0005\u0005\u0003\u001f\u000bIIA\u0005nS\u001e\u0014\u0018\r^5p]\u00069Q.Z:tC\u001e,\u0017EAAK\u0003U\u0002\u0017\r\u001c9iC:,X.\u001a:jG\u0002\u0004#/\u001a;ve:\u001c\b%\u0019\u0011MCjLH*[:uA%t7\u000f^3bI\u0002zg\rI1!\'R\u0014X-Y7\u0002\u0013\rD\u0017M\\4fI&s\u0017EAAN\u0003\u0019\u0011d&M\u001a/a\u00051!+\u00198e_6\u0004\"!P\u000e\u0014\u0005maDCAAP\u0003IQ\u0017M^1SC:$w.\u001c+p%\u0006tGm\\7\u0015\u0007q\nI\u000b\u0003\u0004\u0002,v\u0001\raM\u0001\u0002e\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011\u0011\u0017\t\u0005\u0003g\u000bI,\u0004\u0002\u00026*\u0019\u0011q\u0017\u001c\u0002\t1\fgnZ\u0005\u0005\u0003w\u000b)L\u0001\u0004PE*,7\r\u001e"
    )
BootstrapMethods:
  0: #281 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #268 ()C
      #273 REF_invokeStatic scala/util/Random.$anonfun$alphanumeric$1:(Lscala/util/Random;)C
      #268 ()C
      #274 1
  1: #281 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #286 ()Ljava/lang/Object;
      #291 REF_invokeStatic scala/collection/immutable/LazyList$.$anonfun$continually$1:(Lscala/Function0;)Lscala/collection/immutable/LazyList$State;
      #293 ()Lscala/collection/immutable/LazyList$State;
      #294 5
      #274 1
      #293 ()Lscala/collection/immutable/LazyList$State;
  2: #360 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #291 REF_invokeStatic scala/collection/immutable/LazyList$.$anonfun$continually$1:(Lscala/Function0;)Lscala/collection/immutable/LazyList$State;
      #273 REF_invokeStatic scala/util/Random.$anonfun$alphanumeric$1:(Lscala/util/Random;)C
  ScalaInlineInfo: length = 0xB8 (unknown attribute)
   01 00 00 24 01 0D 01 0E 01 01 30 00 6A 01 01 31
   00 6A 01 01 32 00 6A 01 01 37 00 6A 01 01 36 00
   6A 01 00 E4 00 E5 01 00 25 00 C7 00 00 25 00 5B
   00 00 25 00 BC 00 00 25 00 26 00 01 04 01 05 00
   00 52 00 53 00 00 52 00 7C 00 00 52 00 4A 00 00
   52 00 A0 00 00 8D 00 4A 01 00 A3 00 A0 01 01 4F
   00 AC 01 00 2E 00 2F 00 00 36 00 3B 00 00 36 00
   37 00 00 4E 00 4F 00 00 78 00 79 00 00 82 00 4F
   00 00 85 00 86 00 00 85 00 89 00 00 91 00 92 00
   00 91 00 95 00 00 B8 00 AC 00 00 A6 00 A7 00 00
   AB 00 AC 01 00 1A 00 29 00 00 BB 00 BC 00 00 C0
   00 C1 00 01 3D 01 3E 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
