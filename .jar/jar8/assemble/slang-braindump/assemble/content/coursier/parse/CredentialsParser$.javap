Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/parse/CredentialsParser$.class
  Last modified May 29, 2022; size 6161 bytes
  SHA-256 checksum 267dbb91e9715b3c58652649f47e979a60ff884508eec43ee7ccb3aa1aaff74c
  Compiled from "CredentialsParser.scala"
public final class coursier.parse.CredentialsParser$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/parse/CredentialsParser$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 13, attributes: 5
Constant pool:
    #1 = Utf8               coursier/parse/CredentialsParser$
    #2 = Class              #1            // coursier/parse/CredentialsParser$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               CredentialsParser.scala
    #6 = Utf8               coursier/util/Traverse$TraverseOps
    #7 = Class              #6            // coursier/util/Traverse$TraverseOps
    #8 = Utf8               coursier/util/Traverse
    #9 = Class              #8            // coursier/util/Traverse
   #10 = Utf8               TraverseOps
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               MODULE$
   #17 = Utf8               Lcoursier/parse/CredentialsParser$;
   #18 = Utf8               pattern
   #19 = Utf8               Ljava/util/regex/Pattern;
   #20 = Utf8               <clinit>
   #21 = Utf8               ()V
   #22 = Utf8               <init>
   #23 = NameAndType        #22:#21       // "<init>":()V
   #24 = Methodref          #2.#23        // coursier/parse/CredentialsParser$."<init>":()V
   #25 = NameAndType        #16:#17       // MODULE$:Lcoursier/parse/CredentialsParser$;
   #26 = Fieldref           #2.#25        // coursier/parse/CredentialsParser$.MODULE$:Lcoursier/parse/CredentialsParser$;
   #27 = Utf8               scala/collection/StringOps$
   #28 = Class              #27           // scala/collection/StringOps$
   #29 = Utf8               Lscala/collection/StringOps$;
   #30 = NameAndType        #16:#29       // MODULE$:Lscala/collection/StringOps$;
   #31 = Fieldref           #28.#30       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #32 = Utf8               scala/Predef$
   #33 = Class              #32           // scala/Predef$
   #34 = Utf8               Lscala/Predef$;
   #35 = NameAndType        #16:#34       // MODULE$:Lscala/Predef$;
   #36 = Fieldref           #33.#35       // scala/Predef$.MODULE$:Lscala/Predef$;
   #37 = Utf8               ([a-zA-Z0-9.-]*)(\\(.*\\))?[ ]+([^ :][^:]*):(.*)
   #38 = String             #37           // ([a-zA-Z0-9.-]*)(\\(.*\\))?[ ]+([^ :][^:]*):(.*)
   #39 = Utf8               augmentString
   #40 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #41 = NameAndType        #39:#40       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #42 = Methodref          #33.#41       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #43 = Utf8               r$extension
   #44 = Utf8               (Ljava/lang/String;)Lscala/util/matching/Regex;
   #45 = NameAndType        #43:#44       // r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
   #46 = Methodref          #28.#45       // scala/collection/StringOps$.r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
   #47 = Utf8               scala/util/matching/Regex
   #48 = Class              #47           // scala/util/matching/Regex
   #49 = Utf8               ()Ljava/util/regex/Pattern;
   #50 = NameAndType        #18:#49       // pattern:()Ljava/util/regex/Pattern;
   #51 = Methodref          #48.#50       // scala/util/matching/Regex.pattern:()Ljava/util/regex/Pattern;
   #52 = NameAndType        #18:#19       // pattern:Ljava/util/regex/Pattern;
   #53 = Fieldref           #2.#52        // coursier/parse/CredentialsParser$.pattern:Ljava/util/regex/Pattern;
   #54 = Utf8               this
   #55 = Utf8               parse
   #56 = Utf8               (Ljava/lang/String;)Lscala/util/Either;
   #57 = Utf8               (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/credentials/DirectCredentials;>;
   #58 = Utf8               s
   #59 = Methodref          #2.#50        // coursier/parse/CredentialsParser$.pattern:()Ljava/util/regex/Pattern;
   #60 = Utf8               java/util/regex/Pattern
   #61 = Class              #60           // java/util/regex/Pattern
   #62 = Utf8               matcher
   #63 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #64 = NameAndType        #62:#63       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #65 = Methodref          #61.#64       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #66 = Utf8               java/util/regex/Matcher
   #67 = Class              #66           // java/util/regex/Matcher
   #68 = Utf8               matches
   #69 = Utf8               ()Z
   #70 = NameAndType        #68:#69       // matches:()Z
   #71 = Methodref          #67.#70       // java/util/regex/Matcher.matches:()Z
   #72 = Utf8               coursier/credentials/DirectCredentials$
   #73 = Class              #72           // coursier/credentials/DirectCredentials$
   #74 = Utf8               Lcoursier/credentials/DirectCredentials$;
   #75 = NameAndType        #16:#74       // MODULE$:Lcoursier/credentials/DirectCredentials$;
   #76 = Fieldref           #73.#75       // coursier/credentials/DirectCredentials$.MODULE$:Lcoursier/credentials/DirectCredentials$;
   #77 = Utf8               group
   #78 = Utf8               (I)Ljava/lang/String;
   #79 = NameAndType        #77:#78       // group:(I)Ljava/lang/String;
   #80 = Methodref          #67.#79       // java/util/regex/Matcher.group:(I)Ljava/lang/String;
   #81 = Utf8               apply
   #82 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/credentials/DirectCredentials;
   #83 = NameAndType        #81:#82       // apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/credentials/DirectCredentials;
   #84 = Methodref          #73.#83       // coursier/credentials/DirectCredentials$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/credentials/DirectCredentials;
   #85 = Utf8               scala/Option$
   #86 = Class              #85           // scala/Option$
   #87 = Utf8               Lscala/Option$;
   #88 = NameAndType        #16:#87       // MODULE$:Lscala/Option$;
   #89 = Fieldref           #86.#88       // scala/Option$.MODULE$:Lscala/Option$;
   #90 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #91 = NameAndType        #81:#90       // apply:(Ljava/lang/Object;)Lscala/Option;
   #92 = Methodref          #86.#91       // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
   #93 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #94 = MethodType         #93           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #95 = Utf8               $anonfun$parse$1
   #96 = NameAndType        #95:#40       // $anonfun$parse$1:(Ljava/lang/String;)Ljava/lang/String;
   #97 = Methodref          #2.#96        // coursier/parse/CredentialsParser$.$anonfun$parse$1:(Ljava/lang/String;)Ljava/lang/String;
   #98 = MethodHandle       6:#97         // REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parse$1:(Ljava/lang/String;)Ljava/lang/String;
   #99 = MethodType         #40           //  (Ljava/lang/String;)Ljava/lang/String;
  #100 = Integer            5
  #101 = Integer            1
  #102 = Utf8               java/lang/invoke/LambdaMetafactory
  #103 = Class              #102          // java/lang/invoke/LambdaMetafactory
  #104 = Utf8               altMetafactory
  #105 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #106 = NameAndType        #104:#105     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #107 = Methodref          #103.#106     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #108 = MethodHandle       6:#107        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #109 = Utf8               ()Lscala/Function1;
  #110 = NameAndType        #81:#109      // apply:()Lscala/Function1;
  #111 = InvokeDynamic      #0:#110       // #0:apply:()Lscala/Function1;
  #112 = Utf8               scala/Option
  #113 = Class              #112          // scala/Option
  #114 = Utf8               map
  #115 = Utf8               (Lscala/Function1;)Lscala/Option;
  #116 = NameAndType        #114:#115     // map:(Lscala/Function1;)Lscala/Option;
  #117 = Methodref          #113.#116     // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #118 = Utf8               coursier/credentials/DirectCredentials
  #119 = Class              #118          // coursier/credentials/DirectCredentials
  #120 = Utf8               withRealm
  #121 = Utf8               (Lscala/Option;)Lcoursier/credentials/DirectCredentials;
  #122 = NameAndType        #120:#121     // withRealm:(Lscala/Option;)Lcoursier/credentials/DirectCredentials;
  #123 = Methodref          #119.#122     // coursier/credentials/DirectCredentials.withRealm:(Lscala/Option;)Lcoursier/credentials/DirectCredentials;
  #124 = Utf8               scala/package$
  #125 = Class              #124          // scala/package$
  #126 = Utf8               Lscala/package$;
  #127 = NameAndType        #16:#126      // MODULE$:Lscala/package$;
  #128 = Fieldref           #125.#127     // scala/package$.MODULE$:Lscala/package$;
  #129 = Utf8               Right
  #130 = Utf8               ()Lscala/util/Right$;
  #131 = NameAndType        #129:#130     // Right:()Lscala/util/Right$;
  #132 = Methodref          #125.#131     // scala/package$.Right:()Lscala/util/Right$;
  #133 = Utf8               scala/util/Right$
  #134 = Class              #133          // scala/util/Right$
  #135 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #136 = NameAndType        #81:#135      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #137 = Methodref          #134.#136     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #138 = Utf8               Left
  #139 = Utf8               ()Lscala/util/Left$;
  #140 = NameAndType        #138:#139     // Left:()Lscala/util/Left$;
  #141 = Methodref          #125.#140     // scala/package$.Left:()Lscala/util/Left$;
  #142 = Utf8               Malformed credentials
  #143 = String             #142          // Malformed credentials
  #144 = Utf8               scala/util/Left$
  #145 = Class              #144          // scala/util/Left$
  #146 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #147 = NameAndType        #81:#146      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #148 = Methodref          #145.#147     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #149 = Utf8               scala/util/Either
  #150 = Class              #149          // scala/util/Either
  #151 = Utf8               cred
  #152 = Utf8               Lcoursier/credentials/DirectCredentials;
  #153 = Utf8               m
  #154 = Utf8               Ljava/util/regex/Matcher;
  #155 = Utf8               Ljava/lang/String;
  #156 = Utf8               parseSeq
  #157 = Utf8               (Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #158 = Utf8               (Ljava/lang/String;)Lcoursier/util/ValidationNel<Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/credentials/DirectCredentials;>;>;
  #159 = Utf8               input
  #160 = Utf8               coursier/util/Traverse$
  #161 = Class              #160          // coursier/util/Traverse$
  #162 = Utf8               Lcoursier/util/Traverse$;
  #163 = NameAndType        #16:#162      // MODULE$:Lcoursier/util/Traverse$;
  #164 = Fieldref           #161.#163     // coursier/util/Traverse$.MODULE$:Lcoursier/util/Traverse$;
  #165 = Utf8               linesIterator$extension
  #166 = Utf8               (Ljava/lang/String;)Lscala/collection/Iterator;
  #167 = NameAndType        #165:#166     // linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
  #168 = Methodref          #28.#167      // scala/collection/StringOps$.linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
  #169 = Utf8               $anonfun$parseSeq$1
  #170 = NameAndType        #169:#40      // $anonfun$parseSeq$1:(Ljava/lang/String;)Ljava/lang/String;
  #171 = Methodref          #2.#170       // coursier/parse/CredentialsParser$.$anonfun$parseSeq$1:(Ljava/lang/String;)Ljava/lang/String;
  #172 = MethodHandle       6:#171        // REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$1:(Ljava/lang/String;)Ljava/lang/String;
  #173 = InvokeDynamic      #1:#110       // #1:apply:()Lscala/Function1;
  #174 = Utf8               scala/collection/Iterator
  #175 = Class              #174          // scala/collection/Iterator
  #176 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #177 = NameAndType        #114:#176     // map:(Lscala/Function1;)Lscala/collection/Iterator;
  #178 = InterfaceMethodref #175.#177     // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
  #179 = Utf8               $anonfun$parseSeq$3$adapted
  #180 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #181 = NameAndType        #179:#180     // $anonfun$parseSeq$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #182 = Methodref          #2.#181       // coursier/parse/CredentialsParser$.$anonfun$parseSeq$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #183 = MethodHandle       6:#182        // REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #184 = MethodType         #180          //  (Ljava/lang/String;)Ljava/lang/Object;
  #185 = InvokeDynamic      #2:#110       // #2:apply:()Lscala/Function1;
  #186 = Utf8               filter
  #187 = NameAndType        #186:#176     // filter:(Lscala/Function1;)Lscala/collection/Iterator;
  #188 = InterfaceMethodref #175.#187     // scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
  #189 = Utf8               toVector
  #190 = Utf8               ()Lscala/collection/immutable/Vector;
  #191 = NameAndType        #189:#190     // toVector:()Lscala/collection/immutable/Vector;
  #192 = InterfaceMethodref #175.#191     // scala/collection/Iterator.toVector:()Lscala/collection/immutable/Vector;
  #193 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
  #194 = NameAndType        #10:#193      // TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
  #195 = Methodref          #161.#194     // coursier/util/Traverse$.TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
  #196 = Utf8               $anonfun$parseSeq$4
  #197 = NameAndType        #196:#157     // $anonfun$parseSeq$4:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #198 = Methodref          #2.#197       // coursier/parse/CredentialsParser$.$anonfun$parseSeq$4:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #199 = MethodHandle       6:#198        // REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$4:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #200 = MethodType         #157          //  (Ljava/lang/String;)Lcoursier/util/ValidationNel;
  #201 = InvokeDynamic      #3:#110       // #3:apply:()Lscala/Function1;
  #202 = Utf8               validationNelTraverse
  #203 = Utf8               (Lscala/Function1;)Lcoursier/util/ValidationNel;
  #204 = NameAndType        #202:#203     // validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #205 = Methodref          #7.#204       // coursier/util/Traverse$TraverseOps.validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #206 = Utf8               x$1
  #207 = Utf8               (
  #208 = String             #207          // (
  #209 = Utf8               stripPrefix$extension
  #210 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #211 = NameAndType        #209:#210     // stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #212 = Methodref          #28.#211      // scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #213 = Utf8               )
  #214 = String             #213          // )
  #215 = Utf8               stripSuffix$extension
  #216 = NameAndType        #215:#210     // stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #217 = Methodref          #28.#216      // scala/collection/StringOps$.stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #218 = Utf8               $anonfun$parseSeq$2
  #219 = Utf8               (C)Z
  #220 = Utf8               x$3
  #221 = Utf8               scala/runtime/RichChar$
  #222 = Class              #221          // scala/runtime/RichChar$
  #223 = Utf8               Lscala/runtime/RichChar$;
  #224 = NameAndType        #16:#223      // MODULE$:Lscala/runtime/RichChar$;
  #225 = Fieldref           #222.#224     // scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
  #226 = Utf8               charWrapper
  #227 = Utf8               (C)C
  #228 = NameAndType        #226:#227     // charWrapper:(C)C
  #229 = Methodref          #33.#228      // scala/Predef$.charWrapper:(C)C
  #230 = Utf8               isSpaceChar$extension
  #231 = NameAndType        #230:#219     // isSpaceChar$extension:(C)Z
  #232 = Methodref          #222.#231     // scala/runtime/RichChar$.isSpaceChar$extension:(C)Z
  #233 = Utf8               C
  #234 = Utf8               x$2
  #235 = Utf8               $anonfun$parseSeq$2$adapted
  #236 = NameAndType        #235:#93      // $anonfun$parseSeq$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #237 = Methodref          #2.#236       // coursier/parse/CredentialsParser$.$anonfun$parseSeq$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #238 = MethodHandle       6:#237        // REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #239 = InvokeDynamic      #4:#110       // #4:apply:()Lscala/Function1;
  #240 = Utf8               dropWhile$extension
  #241 = Utf8               (Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #242 = NameAndType        #240:#241     // dropWhile$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #243 = Methodref          #28.#242      // scala/collection/StringOps$.dropWhile$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #244 = Utf8               $anonfun$parseSeq$3
  #245 = Utf8               (Ljava/lang/String;)Z
  #246 = Utf8               x$4
  #247 = Utf8               nonEmpty$extension
  #248 = NameAndType        #247:#245     // nonEmpty$extension:(Ljava/lang/String;)Z
  #249 = Methodref          #28.#248      // scala/collection/StringOps$.nonEmpty$extension:(Ljava/lang/String;)Z
  #250 = NameAndType        #55:#56       // parse:(Ljava/lang/String;)Lscala/util/Either;
  #251 = Methodref          #2.#250       // coursier/parse/CredentialsParser$.parse:(Ljava/lang/String;)Lscala/util/Either;
  #252 = Utf8               coursier/util/ValidationNel$
  #253 = Class              #252          // coursier/util/ValidationNel$
  #254 = Utf8               Lcoursier/util/ValidationNel$;
  #255 = NameAndType        #16:#254      // MODULE$:Lcoursier/util/ValidationNel$;
  #256 = Fieldref           #253.#255     // coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
  #257 = Utf8               fromEither
  #258 = Utf8               (Lscala/util/Either;)Lcoursier/util/ValidationNel;
  #259 = NameAndType        #257:#258     // fromEither:(Lscala/util/Either;)Lcoursier/util/ValidationNel;
  #260 = Methodref          #253.#259     // coursier/util/ValidationNel$.fromEither:(Lscala/util/Either;)Lcoursier/util/ValidationNel;
  #261 = Utf8               e
  #262 = Utf8               Lscala/util/Either;
  #263 = Methodref          #4.#23        // java/lang/Object."<init>":()V
  #264 = NameAndType        #244:#245     // $anonfun$parseSeq$3:(Ljava/lang/String;)Z
  #265 = Methodref          #2.#264       // coursier/parse/CredentialsParser$.$anonfun$parseSeq$3:(Ljava/lang/String;)Z
  #266 = Utf8               scala/runtime/BoxesRunTime
  #267 = Class              #266          // scala/runtime/BoxesRunTime
  #268 = Utf8               boxToBoolean
  #269 = Utf8               (Z)Ljava/lang/Boolean;
  #270 = NameAndType        #268:#269     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #271 = Methodref          #267.#270     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #272 = Utf8               unboxToChar
  #273 = Utf8               (Ljava/lang/Object;)C
  #274 = NameAndType        #272:#273     // unboxToChar:(Ljava/lang/Object;)C
  #275 = Methodref          #267.#274     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #276 = NameAndType        #218:#219     // $anonfun$parseSeq$2:(C)Z
  #277 = Methodref          #2.#276       // coursier/parse/CredentialsParser$.$anonfun$parseSeq$2:(C)Z
  #278 = Utf8               Ljava/lang/Object;
  #279 = Utf8               $deserializeLambda$
  #280 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #281 = Utf8               scala/runtime/LambdaDeserialize
  #282 = Class              #281          // scala/runtime/LambdaDeserialize
  #283 = Utf8               bootstrap
  #284 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #285 = NameAndType        #283:#284     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #286 = Methodref          #282.#285     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #287 = MethodHandle       6:#286        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #288 = Utf8               lambdaDeserialize
  #289 = NameAndType        #288:#280     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #290 = InvokeDynamic      #5:#289       // #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #291 = Utf8               Code
  #292 = Utf8               LineNumberTable
  #293 = Utf8               LocalVariableTable
  #294 = Utf8               StackMapTable
  #295 = Utf8               Signature
  #296 = Utf8               MethodParameters
  #297 = Utf8               InnerClasses
  #298 = Utf8               SourceFile
  #299 = Utf8               BootstrapMethods
  #300 = Utf8               ScalaInlineInfo
  #301 = Utf8               Scala
{
  public static final coursier.parse.CredentialsParser$ MODULE$;
    descriptor: Lcoursier/parse/CredentialsParser$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final java.util.regex.Pattern pattern;
    descriptor: Ljava/util/regex/Pattern;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #2                  // class coursier/parse/CredentialsParser$
         3: dup
         4: invokespecial #24                 // Method "<init>":()V
         7: putstatic     #26                 // Field MODULE$:Lcoursier/parse/CredentialsParser$;
        10: getstatic     #31                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        13: getstatic     #36                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        16: ldc           #38                 // String ([a-zA-Z0-9.-]*)(\\(.*\\))?[ ]+([^ :][^:]*):(.*)
        18: invokevirtual #42                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        21: invokevirtual #46                 // Method scala/collection/StringOps$.r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
        24: invokevirtual #51                 // Method scala/util/matching/Regex.pattern:()Ljava/util/regex/Pattern;
        27: putstatic     #53                 // Field pattern:Ljava/util/regex/Pattern;
        30: return
      LineNumberTable:
        line 7: 0
        line 9: 10
        line 7: 30

  private java.util.regex.Pattern pattern();
    descriptor: ()Ljava/util/regex/Pattern;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #53                 // Field pattern:Ljava/util/regex/Pattern;
         3: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/parse/CredentialsParser$;

  public scala.util.Either<java.lang.String, coursier.credentials.DirectCredentials> parse(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: aload_0
         1: invokespecial #59                 // Method pattern:()Ljava/util/regex/Pattern;
         4: aload_1
         5: invokevirtual #65                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
         8: astore_2
         9: aload_2
        10: invokevirtual #71                 // Method java/util/regex/Matcher.matches:()Z
        13: ifeq          73
        16: getstatic     #76                 // Field coursier/credentials/DirectCredentials$.MODULE$:Lcoursier/credentials/DirectCredentials$;
        19: aload_2
        20: iconst_1
        21: invokevirtual #80                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
        24: aload_2
        25: iconst_3
        26: invokevirtual #80                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
        29: aload_2
        30: iconst_4
        31: invokevirtual #80                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
        34: invokevirtual #84                 // Method coursier/credentials/DirectCredentials$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/credentials/DirectCredentials;
        37: getstatic     #89                 // Field scala/Option$.MODULE$:Lscala/Option$;
        40: aload_2
        41: iconst_2
        42: invokevirtual #80                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
        45: invokevirtual #92                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        48: invokedynamic #111,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        53: invokevirtual #117                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        56: invokevirtual #123                // Method coursier/credentials/DirectCredentials.withRealm:(Lscala/Option;)Lcoursier/credentials/DirectCredentials;
        59: astore_3
        60: getstatic     #128                // Field scala/package$.MODULE$:Lscala/package$;
        63: invokevirtual #132                // Method scala/package$.Right:()Lscala/util/Right$;
        66: aload_3
        67: invokevirtual #137                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        70: goto          84
        73: getstatic     #128                // Field scala/package$.MODULE$:Lscala/package$;
        76: invokevirtual #141                // Method scala/package$.Left:()Lscala/util/Left$;
        79: ldc           #143                // String Malformed credentials
        81: invokevirtual #148                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        84: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 73
          locals = [ class java/util/regex/Matcher ]
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 12: 0
        line 13: 9
        line 14: 16
        line 15: 37
        line 16: 60
        line 18: 73
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           60      10     3  cred   Lcoursier/credentials/DirectCredentials;
            9      75     2     m   Ljava/util/regex/Matcher;
            0      85     0  this   Lcoursier/parse/CredentialsParser$;
            0      85     1     s   Ljava/lang/String;
    Signature: #57                          // (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/credentials/DirectCredentials;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public coursier.util.ValidationNel<java.lang.String, scala.collection.immutable.Seq<coursier.credentials.DirectCredentials>> parseSeq(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/util/ValidationNel;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #164                // Field coursier/util/Traverse$.MODULE$:Lcoursier/util/Traverse$;
         3: getstatic     #31                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         6: getstatic     #36                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         9: aload_1
        10: invokevirtual #42                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        13: invokevirtual #168                // Method scala/collection/StringOps$.linesIterator$extension:(Ljava/lang/String;)Lscala/collection/Iterator;
        16: invokedynamic #173,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        21: invokeinterface #178,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        26: invokedynamic #185,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        31: invokeinterface #188,  2          // InterfaceMethod scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
        36: invokeinterface #192,  1          // InterfaceMethod scala/collection/Iterator.toVector:()Lscala/collection/immutable/Vector;
        41: invokevirtual #195                // Method coursier/util/Traverse$.TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
        44: invokedynamic #201,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        49: invokevirtual #205                // Method coursier/util/Traverse$TraverseOps.validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
        52: areturn
      LineNumberTable:
        line 26: 0
        line 24: 3
        line 22: 6
        line 24: 16
        line 25: 26
        line 27: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0  this   Lcoursier/parse/CredentialsParser$;
            0      53     1 input   Ljava/lang/String;
    Signature: #158                         // (Ljava/lang/String;)Lcoursier/util/ValidationNel<Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/credentials/DirectCredentials;>;>;
    MethodParameters:
      Name                           Flags
      input                          final

  public static final java.lang.String $anonfun$parse$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: getstatic     #31                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #36                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: getstatic     #31                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         9: getstatic     #36                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: aload_0
        13: invokevirtual #42                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        16: ldc           #208                // String (
        18: invokevirtual #212                // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        21: invokevirtual #42                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        24: ldc           #214                // String )
        26: invokevirtual #217                // Method scala/collection/StringOps$.stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 15: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final boolean $anonfun$parseSeq$2(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #225                // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: getstatic     #36                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: iload_0
         7: invokevirtual #229                // Method scala/Predef$.charWrapper:(C)C
        10: invokevirtual #232                // Method scala/runtime/RichChar$.isSpaceChar$extension:(C)Z
        13: ireturn
      LineNumberTable:
        line 24: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   x$3   C
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final java.lang.String $anonfun$parseSeq$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #31                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #36                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #42                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokedynamic #239,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        15: invokevirtual #243                // Method scala/collection/StringOps$.dropWhile$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
        18: areturn
      LineNumberTable:
        line 24: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final boolean $anonfun$parseSeq$3(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #31                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #36                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #42                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #249                // Method scala/collection/StringOps$.nonEmpty$extension:(Ljava/lang/String;)Z
        13: ireturn
      LineNumberTable:
        line 25: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   x$4   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final coursier.util.ValidationNel $anonfun$parseSeq$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/util/ValidationNel;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #26                 // Field MODULE$:Lcoursier/parse/CredentialsParser$;
         3: aload_0
         4: invokevirtual #251                // Method parse:(Ljava/lang/String;)Lscala/util/Either;
         7: astore_1
         8: getstatic     #256                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
        11: aload_1
        12: invokevirtual #260                // Method coursier/util/ValidationNel$.fromEither:(Lscala/util/Either;)Lcoursier/util/ValidationNel;
        15: areturn
      LineNumberTable:
        line 28: 0
        line 29: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8       7     1     e   Lscala/util/Either;
            0      16     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  private coursier.parse.CredentialsParser$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #263                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 32: 0
        line 7: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/parse/CredentialsParser$;

  public static final java.lang.Object $anonfun$parseSeq$3$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #265                // Method $anonfun$parseSeq$3:(Ljava/lang/String;)Z
         4: invokestatic  #271                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$4   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final java.lang.Object $anonfun$parseSeq$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #275                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #277                // Method $anonfun$parseSeq$2:(C)Z
         7: invokestatic  #271                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$3   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$3                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #290,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #10= #7 of #9;            // TraverseOps=class coursier/util/Traverse$TraverseOps of class coursier/util/Traverse
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "CredentialsParser.scala"
BootstrapMethods:
  0: #108 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #98 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parse$1:(Ljava/lang/String;)Ljava/lang/String;
      #99 (Ljava/lang/String;)Ljava/lang/String;
      #100 5
      #101 1
      #99 (Ljava/lang/String;)Ljava/lang/String;
  1: #108 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #172 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$1:(Ljava/lang/String;)Ljava/lang/String;
      #99 (Ljava/lang/String;)Ljava/lang/String;
      #100 5
      #101 1
      #99 (Ljava/lang/String;)Ljava/lang/String;
  2: #108 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #183 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #184 (Ljava/lang/String;)Ljava/lang/Object;
      #100 5
      #101 1
      #184 (Ljava/lang/String;)Ljava/lang/Object;
  3: #108 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #199 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$4:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
      #200 (Ljava/lang/String;)Lcoursier/util/ValidationNel;
      #100 5
      #101 1
      #200 (Ljava/lang/String;)Lcoursier/util/ValidationNel;
  4: #108 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #238 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #101 1
  5: #287 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parse$1:(Ljava/lang/String;)Ljava/lang/String;
      #172 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$1:(Ljava/lang/String;)Ljava/lang/String;
      #238 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #183 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #199 REF_invokeStatic coursier/parse/CredentialsParser$.$anonfun$parseSeq$4:(Ljava/lang/String;)Lcoursier/util/ValidationNel;
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 01 00 0B 00 5F 00 28 01 00 A9 00 28 01 00 DA
   00 DB 01 00 EB 00 5D 01 00 F4 00 F5 01 00 B3 00
   B4 01 00 C4 00 9D 01 00 16 00 15 01 00 37 00 38
   01 00 9C 00 9D 01 00 12 00 31 01
  Scala: length = 0x0 (unknown attribute)

