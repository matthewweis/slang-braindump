Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/immutable/MapNode.class
  Last modified May 29, 2022; size 6814 bytes
  SHA-256 checksum 256ceed1da163284d9eb418fcab8dc09daed4ae8d5cabf8128884d29a8f246be
  Compiled from "HashMap.scala"
public abstract class scala.collection.immutable.MapNode<K extends java.lang.Object, V extends java.lang.Object> extends scala.collection.immutable.Node<scala.collection.immutable.MapNode<K, V>>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/collection/immutable/MapNode
  super_class: #5                         // scala/collection/immutable/Node
  interfaces: 0, fields: 0, methods: 28, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/immutable/MapNode
    #2 = Class              #1            // scala/collection/immutable/MapNode
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/immutable/Node<Lscala/collection/immutable/MapNode<TK;TV;>;>;
    #4 = Utf8               scala/collection/immutable/Node
    #5 = Class              #4            // scala/collection/immutable/Node
    #6 = Utf8               HashMap.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005\turAB\u0012%\u0011\u0003!#F\u0002\u0004-I!\u0005A%\f\u0005\u0006e\u0005!\t\u0001\u000e\u0005\bk\u0005\u0011\r\u0011\"\u00047\u0011\u0019i\u0014\u0001)A\u0007o!)a(\u0001C\u0001\u007f!9Q*\u0001b\u0001\n\u000bq\u0005BB)\u0002A\u00035qJ\u0002\u0004-I\u0005\u0005BE\u0015\u0005\u0006e!!\tA\u001a\u0005\u0006Q\"1\t!\u001b\u0005\u0006k\"1\tA\u001e\u0005\u0006}\"1\ta \u0005\b\u0003;Aa\u0011AA\u0010\u0011\u001d\ty\u0003\u0003D\u0001\u0003cAq!a\u0013\t\r\u0003\ti\u0005C\u0004\u0002`!1\t!!\u0019\t\u000f\u0005\r\u0004B\"\u0001\u0002f!9\u0011q\r\u0005\u0007\u0002\u0005%\u0004bBA8\u0011\u0019\u0005\u0011\u0011\r\u0005\b\u0003cBa\u0011AA3\u0011\u001d\t\u0019\b\u0003D\u0001\u0003kBq!!\u001f\t\r\u0003\tY\bC\u0004\u0002\u0000!1\t!!!\t\u000f\u0005-\u0005B\"\u0001\u0002f!9\u0011Q\u0012\u0005\u0007\u0002\u0005=\u0005bBAT\u0011\u0019\u0005\u0011\u0011\u0016\u0005\b\u0003sCa\u0011AA^\u0011\u001d\t)\r\u0003D\u0001\u0003\u000fDa!a6\t\r\u00031\u0007bBAm\u0011\u0019\u0005\u00111\u001c\u0005\b\u0003WDa\u0011AAw\u0011\u001d\tI\u0010\u0003D\u0001\u0003wDqA!\b\t\r\u0003\u0011y\u0002C\u0004\u0003*!1\tAa\u000b\u0002\u000f5\u000b\u0007OT8eK*\u0011QEJ\u0001\nS6lW\u000f^1cY\u0016T!a\n\u0015\u0002\u0015\r|G\u000e\\3di&|gNC\u0001*\u0003\u0015\u00198-\u00197b!\tY\u0013!D\u0001%\u0005\u001di\u0015\r\u001d(pI\u0016\u001c\"!\u0001\u0018\u0011\u0005=\u0002T\"\u0001\u0015\n\u0005EB#AB!osJ+g-\u0001\u0004=S:LGOP\u0002\u0001)\u0005Q\u0013\u0001D#naRLX*\u00199O_\u0012,W#A\u001c\u0011\t-B$HO\u0005\u0003s\u0011\u0012ACQ5u[\u0006\u0004\u0018J\u001c3fq\u0016$W*\u00199O_\u0012,\u0007CA\u0018<\u0013\ta\u0004FA\u0004O_RD\u0017N\\4\u0002\u001b\u0015k\u0007\u000f^=NCBtu\u000eZ3!\u0003\u0015)W\u000e\u001d;z+\r\u0001EiS\u000b\u0002\u0003B!1\u0006\u000f\"K!\t\u0019E\t\u0004\u0001\u0005\u000b\u0015+!\u0019\u0001$\u0003\u0003-\u000b\"AO$\u0011\u0005=B\u0015BA%)\u0005\r\te.\u001f\t\u0003\u0007.#Q\u0001T\u0003C\u0002\u0019\u0013\u0011AV\u0001\f)V\u0004H.\u001a\'f]\u001e$\b.F\u0001P\u001f\u0005\u0001V$\u0001\u0002\u0002\u0019Q+\b\u000f\\3MK:<G\u000f\u001b\u0011\u0016\u0007MKFl\u0005\u0002\t)B\u00191&V,\n\u0005Y##\u0001\u0002(pI\u0016\u0004Ba\u000b\u0005Y5B\u00111)\u0017\u0003\u0006\u000b\"\u0011\rA\u0012\u0016\u00037v\u0003\"a\u0011/\u0005\r1CAQ1\u0001GW\u0005q\u0006CA0e\u001b\u0005\u0001\'BA1c\u0003%)hn\u00195fG.,GM\u0003\u0002dQ\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\u0005\u0015\u0004\'!E;oG\",7m[3e-\u0006\u0014\u0018.\u00198dKR\tq\r\u0005\u0003,\u0011a[\u0016!B1qa2LH#B.kYF\u001c\b\"B6\u000b\u0001\u0004A\u0016aA6fs\")QN\u0003a\u0001]\u0006aqN]5hS:\fG\u000eS1tQB\u0011qf\\\u0005\u0003a\"\u00121!\u00138u\u0011\u0015\u0011(\u00021\u0001o\u0003\u0011A\u0017m\u001d5\t\u000bQT\u0001\u0019\u00018\u0002\u000bMD\u0017N\u001a;\u0002\u0007\u001d,G\u000fF\u0003xundX\u0010E\u00020qnK!!\u001f\u0015\u0003\r=\u0003H/[8o\u0011\u0015Y7\u00021\u0001Y\u0011\u0015i7\u00021\u0001o\u0011\u0015\u00118\u00021\u0001o\u0011\u0015!8\u00021\u0001o\u0003%9W\r^(s\u000b2\u001cX-\u0006\u0003\u0002\u0002\u0005\u0015A\u0003DA\u0002\u0003\u0017\ti!a\u0004\u0002\u0012\u0005M\u0001cA\"\u0002\u0006\u00119\u0011q\u0001\u0007C\u0002\u0005%!A\u0001,2#\tYv\tC\u0003l\u0019\u0001\u0007\u0001\fC\u0003n\u0019\u0001\u0007a\u000eC\u0003s\u0019\u0001\u0007a\u000eC\u0003u\u0019\u0001\u0007a\u000e\u0003\u0005\u0002\u00161!\t\u0019AA\f\u0003\u00051\u0007#B\u0018\u0002\u001a\u0005\r\u0011bAA\u000eQ\tAAHY=oC6,g(A\u0006d_:$\u0018-\u001b8t\u0017\u0016LHCCA\u0011\u0003O\tI#a\u000b\u0002.A\u0019q&a\t\n\u0007\u0005\u0015\u0002FA\u0004C_>dW-\u00198\t\u000b-l\u0001\u0019\u0001-\t\u000b5l\u0001\u0019\u00018\t\u000bIl\u0001\u0019\u00018\t\u000bQl\u0001\u0019\u00018\u0002\u000fU\u0004H-\u0019;fIV!\u00111GA\u001d)9\t)$a\u000f\u0002>\u0005\u0005\u00131IA#\u0003\u000f\u0002Ra\u000b\u0005Y\u0003o\u00012aQA\u001d\t\u001d\t9A\u0004b\u0001\u0003\u0013AQa\u001b\bA\u0002aCq!a\u0010\u000f\u0001\u0004\t9$A\u0003wC2,X\rC\u0003n\u001d\u0001\u0007a\u000eC\u0003s\u001d\u0001\u0007a\u000eC\u0003u\u001d\u0001\u0007a\u000eC\u0004\u0002J9\u0001\r!!\t\u0002\u0019I,\u0007\u000f\\1dKZ\u000bG.^3\u0002\u000fI,Wn\u001c<fIV!\u0011qJA+))\t\t&a\u0016\u0002Z\u0005m\u0013Q\f\t\u0006W!A\u00161\u000b\t\u0004\u0007\u0006UCaBA\u0004\u001f\t\u0007\u0011\u0011\u0002\u0005\u0006W>\u0001\r\u0001\u0017\u0005\u0006[>\u0001\rA\u001c\u0005\u0006e>\u0001\rA\u001c\u0005\u0006i>\u0001\rA\\\u0001\tQ\u0006\u001chj\u001c3fgV\u0011\u0011\u0011E\u0001\n]>$W-\u0011:jif,\u0012A\\\u0001\bO\u0016$hj\u001c3f)\r9\u00171\u000e\u0005\u0007\u0003[\u0012\u0002\u0019\u00018\u0002\u000b%tG-\u001a=\u0002\u0015!\f7\u000fU1zY>\fG-\u0001\u0007qCfdw.\u00193Be&$\u00180\u0001\u0004hKR\\U-\u001f\u000b\u00041\u0006]\u0004BBA7+\u0001\u0007a.\u0001\u0005hKR4\u0016\r\\;f)\rY\u0016Q\u0010\u0005\u0007\u0003[2\u0002\u0019\u00018\u0002\u0015\u001d,G\u000fU1zY>\fG\r\u0006\u0003\u0002\u0004\u0006%\u0005#B\u0018\u0002\u0006b[\u0016bAADQ\t1A+\u001e9mKJBa!!\u001c\u0018\u0001\u0004q\u0017\u0001B:ju\u0016\fqAZ8sK\u0006\u001c\u0007.\u0006\u0003\u0002\u0012\u0006\rF\u0003BAJ\u00033\u00032aLAK\u0013\r\t9\n\u000b\u0002\u0005+:LG\u000fC\u0004\u0002\u0016e\u0001\r!a\'\u0011\u000f=\ni*a!\u0002\"&\u0019\u0011q\u0014\u0015\u0003\u0013\u0019+hn\u0019;j_:\f\u0004cA\"\u0002$\u00121\u0011QU\rC\u0002\u0019\u0013\u0011!V\u0001\rM>\u0014X-Y2i\u000b:$(/_\u000b\u0005\u0003W\u000b9\f\u0006\u0003\u0002\u0014\u00065\u0006bBA\u000b5\u0001\u0007\u0011q\u0016\t\b_\u0005E\u0006lWA[\u0013\r\t\u0019\f\u000b\u0002\n\rVt7\r^5p]J\u00022aQA\\\t\u0019\t)K\u0007b\u0001\r\u0006yam\u001c:fC\u000eDw+\u001b;i\u0011\u0006\u001c\b\u000e\u0006\u0003\u0002\u0014\u0006u\u0006bBA\u000b7\u0001\u0007\u0011q\u0018\t\t_\u0005\u0005\u0007l\u00178\u0002\u0014&\u0019\u00111\u0019\u0015\u0003\u0013\u0019+hn\u0019;j_:\u001c\u0014!\u0003;sC:\u001chm\u001c:n+\u0011\tI-a4\u0015\t\u0005-\u00171\u001b\t\u0006W!A\u0016Q\u001a\t\u0004\u0007\u0006=GABAi9\t\u0007aIA\u0001X\u0011\u001d\t)\u0002\ba\u0001\u0003+\u0004raLAY1n\u000bi-\u0001\u0003d_BL\u0018AB2p]\u000e\fG/\u0006\u0003\u0002^\u0006\rHCBAp\u0003K\fI\u000fE\u0003,\u0011a\u000b\t\u000fE\u0002D\u0003G$q!a\u0002\u001f\u0005\u0004\tI\u0001C\u0004\u0002hz\u0001\r!a8\u0002\tQD\u0017\r\u001e\u0005\u0006iz\u0001\rA\\\u0001\u000bM&dG/\u001a:J[BdG#B4\u0002p\u0006U\bbBAy?\u0001\u0007\u00111_\u0001\u0005aJ,G\rE\u00040\u0003;\u000b\u0019)!\t\t\u000f\u0005]x\u00041\u0001\u0002\"\u0005I\u0011n\u001d$mSB\u0004X\rZ\u0001\n[\u0016\u0014x-Z%oi>,B!!@\u0003\fQA\u0011q B\u0007\u0005#\u0011Y\u0002\u0006\u0003\u0002\u0014\n\u0005\u0001b\u0002B\u0002A\u0001\u0007!QA\u0001\u0007[\u0016\u0014x-\u001a4\u0011\u0013=\n\t,a!\u0003\b\t\u001d\u0001CB\u0018\u0002\u0006b\u0013I\u0001E\u0002D\u0005\u0017!q!a\u0002!\u0005\u0004\tI\u0001C\u0004\u0002h\u0002\u0002\rAa\u0004\u0011\u000b-B\u0001L!\u0003\t\u000f\tM\u0001\u00051\u0001\u0003\u0016\u00059!-^5mI\u0016\u0014\bCB\u0016\u0003\u0018a\u0013I!C\u0002\u0003\u001a\u0011\u0012a\u0002S1tQ6\u000b\u0007OQ;jY\u0012,\'\u000fC\u0003uA\u0001\u0007a.\u0001\u0005hKR$V\u000f\u001d7f))\t\u0019I!\t\u0003$\t\u0015\"q\u0005\u0005\u0006W\u0006\u0002\r\u0001\u0017\u0005\u0006[\u0006\u0002\rA\u001c\u0005\u0006e\u0006\u0002\rA\u001c\u0005\u0006i\u0006\u0002\rA\\\u0001\bEVLG\u000e\u001a+p+\u0011\u0011iC!\u000e\u0015\t\u0005M%q\u0006\u0005\b\u0005\'\u0011\u0003\u0019\u0001B\u0019!\u0019Y#q\u0003-\u00034A\u00191I!\u000e\u0005\u000f\u0005\u001d!E1\u0001\u0002\n%\"\u0001\u0002\u000fB\u001d\u0013\r\u0011Y\u0004\n\u0002\u0015\u0011\u0006\u001c\bnQ8mY&\u001c\u0018n\u001c8NCBtu\u000eZ3
   #10 = Utf8               TupleLength
   #11 = Utf8               ()I
   #12 = Utf8               scala/collection/immutable/MapNode$
   #13 = Class              #12           // scala/collection/immutable/MapNode$
   #14 = Utf8               MODULE$
   #15 = Utf8               Lscala/collection/immutable/MapNode$;
   #16 = NameAndType        #14:#15       // MODULE$:Lscala/collection/immutable/MapNode$;
   #17 = Fieldref           #13.#16       // scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
   #18 = Utf8               empty
   #19 = Utf8               ()Lscala/collection/immutable/BitmapIndexedMapNode;
   #20 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV;>;
   #21 = NameAndType        #18:#19       // empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
   #22 = Methodref          #13.#21       // scala/collection/immutable/MapNode$.empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
   #23 = Utf8               apply
   #24 = Utf8               (Ljava/lang/Object;III)Ljava/lang/Object;
   #25 = Utf8               (TK;III)TV;
   #26 = Utf8               key
   #27 = Utf8               originalHash
   #28 = Utf8               hash
   #29 = Utf8               shift
   #30 = Utf8               get
   #31 = Utf8               (Ljava/lang/Object;III)Lscala/Option;
   #32 = Utf8               (TK;III)Lscala/Option<TV;>;
   #33 = Utf8               getOrElse
   #34 = Utf8               (Ljava/lang/Object;IIILscala/Function0;)Ljava/lang/Object;
   #35 = Utf8               <V1:Ljava/lang/Object;>(TK;IIILscala/Function0<TV1;>;)TV1;
   #36 = Utf8               f
   #37 = Utf8               containsKey
   #38 = Utf8               (Ljava/lang/Object;III)Z
   #39 = Utf8               (TK;III)Z
   #40 = Utf8               updated
   #41 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/MapNode;
   #42 = Utf8               <V1:Ljava/lang/Object;>(TK;TV1;IIIZ)Lscala/collection/immutable/MapNode<TK;TV1;>;
   #43 = Utf8               value
   #44 = Utf8               replaceValue
   #45 = Utf8               removed
   #46 = Utf8               (Ljava/lang/Object;III)Lscala/collection/immutable/MapNode;
   #47 = Utf8               <V1:Ljava/lang/Object;>(TK;III)Lscala/collection/immutable/MapNode<TK;TV1;>;
   #48 = Utf8               hasNodes
   #49 = Utf8               ()Z
   #50 = Utf8               nodeArity
   #51 = Utf8               getNode
   #52 = Utf8               (I)Lscala/collection/immutable/MapNode;
   #53 = Utf8               (I)Lscala/collection/immutable/MapNode<TK;TV;>;
   #54 = Utf8               index
   #55 = Utf8               hasPayload
   #56 = Utf8               payloadArity
   #57 = Utf8               getKey
   #58 = Utf8               (I)Ljava/lang/Object;
   #59 = Utf8               (I)TK;
   #60 = Utf8               getValue
   #61 = Utf8               (I)TV;
   #62 = Utf8               getPayload
   #63 = Utf8               (I)Lscala/Tuple2;
   #64 = Utf8               (I)Lscala/Tuple2<TK;TV;>;
   #65 = Utf8               size
   #66 = Utf8               foreach
   #67 = Utf8               (Lscala/Function1;)V
   #68 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;TU;>;)V
   #69 = Utf8               foreachEntry
   #70 = Utf8               (Lscala/Function2;)V
   #71 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TU;>;)V
   #72 = Utf8               foreachWithHash
   #73 = Utf8               (Lscala/Function3;)V
   #74 = Utf8               (Lscala/Function3<TK;TV;Ljava/lang/Object;Lscala/runtime/BoxedUnit;>;)V
   #75 = Utf8               transform
   #76 = Utf8               (Lscala/Function2;)Lscala/collection/immutable/MapNode;
   #77 = Utf8               <W:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TW;>;)Lscala/collection/immutable/MapNode<TK;TW;>;
   #78 = Utf8               copy
   #79 = Utf8               ()Lscala/collection/immutable/MapNode;
   #80 = Utf8               ()Lscala/collection/immutable/MapNode<TK;TV;>;
   #81 = Utf8               concat
   #82 = Utf8               (Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/MapNode;
   #83 = Utf8               <V1:Ljava/lang/Object;>(Lscala/collection/immutable/MapNode<TK;TV1;>;I)Lscala/collection/immutable/MapNode<TK;TV1;>;
   #84 = Utf8               that
   #85 = Utf8               filterImpl
   #86 = Utf8               (Lscala/Function1;Z)Lscala/collection/immutable/MapNode;
   #87 = Utf8               (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;Z)Lscala/collection/immutable/MapNode<TK;TV;>;
   #88 = Utf8               pred
   #89 = Utf8               isFlipped
   #90 = Utf8               mergeInto
   #91 = Utf8               (Lscala/collection/immutable/MapNode;Lscala/collection/immutable/HashMapBuilder;ILscala/Function2;)V
   #92 = Utf8               <V1:Ljava/lang/Object;>(Lscala/collection/immutable/MapNode<TK;TV1;>;Lscala/collection/immutable/HashMapBuilder<TK;TV1;>;ILscala/Function2<Lscala/Tuple2<TK;TV;>;Lscala/Tuple2<TK;TV1;>;Lscala/Tuple2<TK;TV1;>;>;)V
   #93 = Utf8               builder
   #94 = Utf8               mergef
   #95 = Utf8               getTuple
   #96 = Utf8               (Ljava/lang/Object;III)Lscala/Tuple2;
   #97 = Utf8               (TK;III)Lscala/Tuple2<TK;TV;>;
   #98 = Utf8               buildTo
   #99 = Utf8               (Lscala/collection/immutable/HashMapBuilder;)V
  #100 = Utf8               <V1:Ljava/lang/Object;>(Lscala/collection/immutable/HashMapBuilder<TK;TV1;>;)V
  #101 = Utf8               <init>
  #102 = Utf8               ()V
  #103 = NameAndType        #101:#102     // "<init>":()V
  #104 = Methodref          #5.#103       // scala/collection/immutable/Node."<init>":()V
  #105 = Utf8               this
  #106 = Utf8               Lscala/collection/immutable/MapNode;
  #107 = Utf8               Code
  #108 = Utf8               Signature
  #109 = Utf8               MethodParameters
  #110 = Utf8               LineNumberTable
  #111 = Utf8               LocalVariableTable
  #112 = Utf8               SourceFile
  #113 = Utf8               RuntimeVisibleAnnotations
  #114 = Utf8               ScalaInlineInfo
  #115 = Utf8               ScalaSig
{
  public static int TupleLength();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #17                 // Field scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
         3: pop
         4: iconst_2
         5: ireturn

  public static <K extends java.lang.Object, V extends java.lang.Object> scala.collection.immutable.BitmapIndexedMapNode<K, V> empty();
    descriptor: ()Lscala/collection/immutable/BitmapIndexedMapNode;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #17                 // Field scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
         3: invokevirtual #22                 // Method scala/collection/immutable/MapNode$.empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
         6: areturn
    Signature: #20                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/immutable/BitmapIndexedMapNode<TK;TV;>;

  public abstract V apply(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #25                          // (TK;III)TV;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public abstract scala.Option<V> get(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Lscala/Option;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #32                          // (TK;III)Lscala/Option<TV;>;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public abstract <V1 extends java.lang.Object> V1 getOrElse(K, int, int, int, scala.Function0<V1>);
    descriptor: (Ljava/lang/Object;IIILscala/Function0;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #35                          // <V1:Ljava/lang/Object;>(TK;IIILscala/Function0<TV1;>;)TV1;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final
      f                              final

  public abstract boolean containsKey(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #39                          // (TK;III)Z
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public abstract <V1 extends java.lang.Object> scala.collection.immutable.MapNode<K, V1> updated(K, V1, int, int, int, boolean);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/MapNode;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #42                          // <V1:Ljava/lang/Object;>(TK;TV1;IIIZ)Lscala/collection/immutable/MapNode<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      key                            final
      value                          final
      originalHash                   final
      hash                           final
      shift                          final
      replaceValue                   final

  public abstract <V1 extends java.lang.Object> scala.collection.immutable.MapNode<K, V1> removed(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Lscala/collection/immutable/MapNode;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #47                          // <V1:Ljava/lang/Object;>(TK;III)Lscala/collection/immutable/MapNode<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public abstract boolean hasNodes();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int nodeArity();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract scala.collection.immutable.MapNode<K, V> getNode(int);
    descriptor: (I)Lscala/collection/immutable/MapNode;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #53                          // (I)Lscala/collection/immutable/MapNode<TK;TV;>;
    MethodParameters:
      Name                           Flags
      index                          final

  public abstract boolean hasPayload();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract int payloadArity();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract K getKey(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #59                          // (I)TK;
    MethodParameters:
      Name                           Flags
      index                          final

  public abstract V getValue(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #61                          // (I)TV;
    MethodParameters:
      Name                           Flags
      index                          final

  public abstract scala.Tuple2<K, V> getPayload(int);
    descriptor: (I)Lscala/Tuple2;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #64                          // (I)Lscala/Tuple2<TK;TV;>;
    MethodParameters:
      Name                           Flags
      index                          final

  public abstract int size();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract <U extends java.lang.Object> void foreach(scala.Function1<scala.Tuple2<K, V>, U>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #68                          // <U:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract <U extends java.lang.Object> void foreachEntry(scala.Function2<K, V, U>);
    descriptor: (Lscala/Function2;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #71                          // <U:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract void foreachWithHash(scala.Function3<K, V, java.lang.Object, scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Function3;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #74                          // (Lscala/Function3<TK;TV;Ljava/lang/Object;Lscala/runtime/BoxedUnit;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract <W extends java.lang.Object> scala.collection.immutable.MapNode<K, W> transform(scala.Function2<K, V, W>);
    descriptor: (Lscala/Function2;)Lscala/collection/immutable/MapNode;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #77                          // <W:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TW;>;)Lscala/collection/immutable/MapNode<TK;TW;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract scala.collection.immutable.MapNode<K, V> copy();
    descriptor: ()Lscala/collection/immutable/MapNode;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #80                          // ()Lscala/collection/immutable/MapNode<TK;TV;>;

  public abstract <V1 extends java.lang.Object> scala.collection.immutable.MapNode<K, V1> concat(scala.collection.immutable.MapNode<K, V1>, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/MapNode;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #83                          // <V1:Ljava/lang/Object;>(Lscala/collection/immutable/MapNode<TK;TV1;>;I)Lscala/collection/immutable/MapNode<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      that                           final
      shift                          final

  public abstract scala.collection.immutable.MapNode<K, V> filterImpl(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>, boolean);
    descriptor: (Lscala/Function1;Z)Lscala/collection/immutable/MapNode;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #87                          // (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;Z)Lscala/collection/immutable/MapNode<TK;TV;>;
    MethodParameters:
      Name                           Flags
      pred                           final
      isFlipped                      final

  public abstract <V1 extends java.lang.Object> void mergeInto(scala.collection.immutable.MapNode<K, V1>, scala.collection.immutable.HashMapBuilder<K, V1>, int, scala.Function2<scala.Tuple2<K, V>, scala.Tuple2<K, V1>, scala.Tuple2<K, V1>>);
    descriptor: (Lscala/collection/immutable/MapNode;Lscala/collection/immutable/HashMapBuilder;ILscala/Function2;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #92                          // <V1:Ljava/lang/Object;>(Lscala/collection/immutable/MapNode<TK;TV1;>;Lscala/collection/immutable/HashMapBuilder<TK;TV1;>;ILscala/Function2<Lscala/Tuple2<TK;TV;>;Lscala/Tuple2<TK;TV1;>;Lscala/Tuple2<TK;TV1;>;>;)V
    MethodParameters:
      Name                           Flags
      that                           final
      builder                        final
      shift                          final
      mergef                         final

  public abstract scala.Tuple2<K, V> getTuple(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Lscala/Tuple2;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #97                          // (TK;III)Lscala/Tuple2<TK;TV;>;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public abstract <V1 extends java.lang.Object> void buildTo(scala.collection.immutable.HashMapBuilder<K, V1>);
    descriptor: (Lscala/collection/immutable/HashMapBuilder;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #100                         // <V1:Ljava/lang/Object;>(Lscala/collection/immutable/HashMapBuilder<TK;TV1;>;)V
    MethodParameters:
      Name                           Flags
      builder                        final

  public scala.collection.immutable.MapNode();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #104                // Method scala/collection/immutable/Node."<init>":()V
         4: return
      LineNumberTable:
        line 504: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/MapNode;
}
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/immutable/Node<Lscala/collection/immutable/MapNode<TK;TV;>;>;
SourceFile: "HashMap.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\turAB\u0012%\u0011\u0003!#F\u0002\u0004-I!\u0005A%\f\u0005\u0006e\u0005!\t\u0001\u000e\u0005\bk\u0005\u0011\r\u0011\"\u00047\u0011\u0019i\u0014\u0001)A\u0007o!)a(\u0001C\u0001\u007f!9Q*\u0001b\u0001\n\u000bq\u0005BB)\u0002A\u00035qJ\u0002\u0004-I\u0005\u0005BE\u0015\u0005\u0006e!!\tA\u001a\u0005\u0006Q\"1\t!\u001b\u0005\u0006k\"1\tA\u001e\u0005\u0006}\"1\ta \u0005\b\u0003;Aa\u0011AA\u0010\u0011\u001d\ty\u0003\u0003D\u0001\u0003cAq!a\u0013\t\r\u0003\ti\u0005C\u0004\u0002`!1\t!!\u0019\t\u000f\u0005\r\u0004B\"\u0001\u0002f!9\u0011q\r\u0005\u0007\u0002\u0005%\u0004bBA8\u0011\u0019\u0005\u0011\u0011\r\u0005\b\u0003cBa\u0011AA3\u0011\u001d\t\u0019\b\u0003D\u0001\u0003kBq!!\u001f\t\r\u0003\tY\bC\u0004\u0002\u0000!1\t!!!\t\u000f\u0005-\u0005B\"\u0001\u0002f!9\u0011Q\u0012\u0005\u0007\u0002\u0005=\u0005bBAT\u0011\u0019\u0005\u0011\u0011\u0016\u0005\b\u0003sCa\u0011AA^\u0011\u001d\t)\r\u0003D\u0001\u0003\u000fDa!a6\t\r\u00031\u0007bBAm\u0011\u0019\u0005\u00111\u001c\u0005\b\u0003WDa\u0011AAw\u0011\u001d\tI\u0010\u0003D\u0001\u0003wDqA!\b\t\r\u0003\u0011y\u0002C\u0004\u0003*!1\tAa\u000b\u0002\u000f5\u000b\u0007OT8eK*\u0011QEJ\u0001\nS6lW\u000f^1cY\u0016T!a\n\u0015\u0002\u0015\r|G\u000e\\3di&|gNC\u0001*\u0003\u0015\u00198-\u00197b!\tY\u0013!D\u0001%\u0005\u001di\u0015\r\u001d(pI\u0016\u001c\"!\u0001\u0018\u0011\u0005=\u0002T\"\u0001\u0015\n\u0005EB#AB!osJ+g-\u0001\u0004=S:LGOP\u0002\u0001)\u0005Q\u0013\u0001D#naRLX*\u00199O_\u0012,W#A\u001c\u0011\t-B$HO\u0005\u0003s\u0011\u0012ACQ5u[\u0006\u0004\u0018J\u001c3fq\u0016$W*\u00199O_\u0012,\u0007CA\u0018<\u0013\ta\u0004FA\u0004O_RD\u0017N\\4\u0002\u001b\u0015k\u0007\u000f^=NCBtu\u000eZ3!\u0003\u0015)W\u000e\u001d;z+\r\u0001EiS\u000b\u0002\u0003B!1\u0006\u000f\"K!\t\u0019E\t\u0004\u0001\u0005\u000b\u0015+!\u0019\u0001$\u0003\u0003-\u000b\"AO$\u0011\u0005=B\u0015BA%)\u0005\r\te.\u001f\t\u0003\u0007.#Q\u0001T\u0003C\u0002\u0019\u0013\u0011AV\u0001\f)V\u0004H.\u001a\'f]\u001e$\b.F\u0001P\u001f\u0005\u0001V$\u0001\u0002\u0002\u0019Q+\b\u000f\\3MK:<G\u000f\u001b\u0011\u0016\u0007MKFl\u0005\u0002\t)B\u00191&V,\n\u0005Y##\u0001\u0002(pI\u0016\u0004Ba\u000b\u0005Y5B\u00111)\u0017\u0003\u0006\u000b\"\u0011\rA\u0012\u0016\u00037v\u0003\"a\u0011/\u0005\r1CAQ1\u0001GW\u0005q\u0006CA0e\u001b\u0005\u0001\'BA1c\u0003%)hn\u00195fG.,GM\u0003\u0002dQ\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\u0005\u0015\u0004\'!E;oG\",7m[3e-\u0006\u0014\u0018.\u00198dKR\tq\r\u0005\u0003,\u0011a[\u0016!B1qa2LH#B.kYF\u001c\b\"B6\u000b\u0001\u0004A\u0016aA6fs\")QN\u0003a\u0001]\u0006aqN]5hS:\fG\u000eS1tQB\u0011qf\\\u0005\u0003a\"\u00121!\u00138u\u0011\u0015\u0011(\u00021\u0001o\u0003\u0011A\u0017m\u001d5\t\u000bQT\u0001\u0019\u00018\u0002\u000bMD\u0017N\u001a;\u0002\u0007\u001d,G\u000fF\u0003xundX\u0010E\u00020qnK!!\u001f\u0015\u0003\r=\u0003H/[8o\u0011\u0015Y7\u00021\u0001Y\u0011\u0015i7\u00021\u0001o\u0011\u0015\u00118\u00021\u0001o\u0011\u0015!8\u00021\u0001o\u0003%9W\r^(s\u000b2\u001cX-\u0006\u0003\u0002\u0002\u0005\u0015A\u0003DA\u0002\u0003\u0017\ti!a\u0004\u0002\u0012\u0005M\u0001cA\"\u0002\u0006\u00119\u0011q\u0001\u0007C\u0002\u0005%!A\u0001,2#\tYv\tC\u0003l\u0019\u0001\u0007\u0001\fC\u0003n\u0019\u0001\u0007a\u000eC\u0003s\u0019\u0001\u0007a\u000eC\u0003u\u0019\u0001\u0007a\u000e\u0003\u0005\u0002\u00161!\t\u0019AA\f\u0003\u00051\u0007#B\u0018\u0002\u001a\u0005\r\u0011bAA\u000eQ\tAAHY=oC6,g(A\u0006d_:$\u0018-\u001b8t\u0017\u0016LHCCA\u0011\u0003O\tI#a\u000b\u0002.A\u0019q&a\t\n\u0007\u0005\u0015\u0002FA\u0004C_>dW-\u00198\t\u000b-l\u0001\u0019\u0001-\t\u000b5l\u0001\u0019\u00018\t\u000bIl\u0001\u0019\u00018\t\u000bQl\u0001\u0019\u00018\u0002\u000fU\u0004H-\u0019;fIV!\u00111GA\u001d)9\t)$a\u000f\u0002>\u0005\u0005\u00131IA#\u0003\u000f\u0002Ra\u000b\u0005Y\u0003o\u00012aQA\u001d\t\u001d\t9A\u0004b\u0001\u0003\u0013AQa\u001b\bA\u0002aCq!a\u0010\u000f\u0001\u0004\t9$A\u0003wC2,X\rC\u0003n\u001d\u0001\u0007a\u000eC\u0003s\u001d\u0001\u0007a\u000eC\u0003u\u001d\u0001\u0007a\u000eC\u0004\u0002J9\u0001\r!!\t\u0002\u0019I,\u0007\u000f\\1dKZ\u000bG.^3\u0002\u000fI,Wn\u001c<fIV!\u0011qJA+))\t\t&a\u0016\u0002Z\u0005m\u0013Q\f\t\u0006W!A\u00161\u000b\t\u0004\u0007\u0006UCaBA\u0004\u001f\t\u0007\u0011\u0011\u0002\u0005\u0006W>\u0001\r\u0001\u0017\u0005\u0006[>\u0001\rA\u001c\u0005\u0006e>\u0001\rA\u001c\u0005\u0006i>\u0001\rA\\\u0001\tQ\u0006\u001chj\u001c3fgV\u0011\u0011\u0011E\u0001\n]>$W-\u0011:jif,\u0012A\\\u0001\bO\u0016$hj\u001c3f)\r9\u00171\u000e\u0005\u0007\u0003[\u0012\u0002\u0019\u00018\u0002\u000b%tG-\u001a=\u0002\u0015!\f7\u000fU1zY>\fG-\u0001\u0007qCfdw.\u00193Be&$\u00180\u0001\u0004hKR\\U-\u001f\u000b\u00041\u0006]\u0004BBA7+\u0001\u0007a.\u0001\u0005hKR4\u0016\r\\;f)\rY\u0016Q\u0010\u0005\u0007\u0003[2\u0002\u0019\u00018\u0002\u0015\u001d,G\u000fU1zY>\fG\r\u0006\u0003\u0002\u0004\u0006%\u0005#B\u0018\u0002\u0006b[\u0016bAADQ\t1A+\u001e9mKJBa!!\u001c\u0018\u0001\u0004q\u0017\u0001B:ju\u0016\fqAZ8sK\u0006\u001c\u0007.\u0006\u0003\u0002\u0012\u0006\rF\u0003BAJ\u00033\u00032aLAK\u0013\r\t9\n\u000b\u0002\u0005+:LG\u000fC\u0004\u0002\u0016e\u0001\r!a\'\u0011\u000f=\ni*a!\u0002\"&\u0019\u0011q\u0014\u0015\u0003\u0013\u0019+hn\u0019;j_:\f\u0004cA\"\u0002$\u00121\u0011QU\rC\u0002\u0019\u0013\u0011!V\u0001\rM>\u0014X-Y2i\u000b:$(/_\u000b\u0005\u0003W\u000b9\f\u0006\u0003\u0002\u0014\u00065\u0006bBA\u000b5\u0001\u0007\u0011q\u0016\t\b_\u0005E\u0006lWA[\u0013\r\t\u0019\f\u000b\u0002\n\rVt7\r^5p]J\u00022aQA\\\t\u0019\t)K\u0007b\u0001\r\u0006yam\u001c:fC\u000eDw+\u001b;i\u0011\u0006\u001c\b\u000e\u0006\u0003\u0002\u0014\u0006u\u0006bBA\u000b7\u0001\u0007\u0011q\u0018\t\t_\u0005\u0005\u0007l\u00178\u0002\u0014&\u0019\u00111\u0019\u0015\u0003\u0013\u0019+hn\u0019;j_:\u001c\u0014!\u0003;sC:\u001chm\u001c:n+\u0011\tI-a4\u0015\t\u0005-\u00171\u001b\t\u0006W!A\u0016Q\u001a\t\u0004\u0007\u0006=GABAi9\t\u0007aIA\u0001X\u0011\u001d\t)\u0002\ba\u0001\u0003+\u0004raLAY1n\u000bi-\u0001\u0003d_BL\u0018AB2p]\u000e\fG/\u0006\u0003\u0002^\u0006\rHCBAp\u0003K\fI\u000fE\u0003,\u0011a\u000b\t\u000fE\u0002D\u0003G$q!a\u0002\u001f\u0005\u0004\tI\u0001C\u0004\u0002hz\u0001\r!a8\u0002\tQD\u0017\r\u001e\u0005\u0006iz\u0001\rA\\\u0001\u000bM&dG/\u001a:J[BdG#B4\u0002p\u0006U\bbBAy?\u0001\u0007\u00111_\u0001\u0005aJ,G\rE\u00040\u0003;\u000b\u0019)!\t\t\u000f\u0005]x\u00041\u0001\u0002\"\u0005I\u0011n\u001d$mSB\u0004X\rZ\u0001\n[\u0016\u0014x-Z%oi>,B!!@\u0003\fQA\u0011q B\u0007\u0005#\u0011Y\u0002\u0006\u0003\u0002\u0014\n\u0005\u0001b\u0002B\u0002A\u0001\u0007!QA\u0001\u0007[\u0016\u0014x-\u001a4\u0011\u0013=\n\t,a!\u0003\b\t\u001d\u0001CB\u0018\u0002\u0006b\u0013I\u0001E\u0002D\u0005\u0017!q!a\u0002!\u0005\u0004\tI\u0001C\u0004\u0002h\u0002\u0002\rAa\u0004\u0011\u000b-B\u0001L!\u0003\t\u000f\tM\u0001\u00051\u0001\u0003\u0016\u00059!-^5mI\u0016\u0014\bCB\u0016\u0003\u0018a\u0013I!C\u0002\u0003\u001a\u0011\u0012a\u0002S1tQ6\u000b\u0007OQ;jY\u0012,\'\u000fC\u0003uA\u0001\u0007a.\u0001\u0005hKR$V\u000f\u001d7f))\t\u0019I!\t\u0003$\t\u0015\"q\u0005\u0005\u0006W\u0006\u0002\r\u0001\u0017\u0005\u0006[\u0006\u0002\rA\u001c\u0005\u0006e\u0006\u0002\rA\u001c\u0005\u0006i\u0006\u0002\rA\\\u0001\bEVLG\u000e\u001a+p+\u0011\u0011iC!\u000e\u0015\t\u0005M%q\u0006\u0005\b\u0005\'\u0011\u0003\u0019\u0001B\u0019!\u0019Y#q\u0003-\u00034A\u00191I!\u000e\u0005\u000f\u0005\u001d!E1\u0001\u0002\n%\"\u0001\u0002\u000fB\u001d\u0013\r\u0011Y\u0004\n\u0002\u0015\u0011\u0006\u001c\bnQ8mY&\u001c\u0018n\u001c8NCBtu\u000eZ3"
    )
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 00 00 1A 00 65 00 66 01 00 17 00 18 00 00 62
   00 63 00 00 51 00 52 00 00 25 00 26 00 00 4E 00
   4F 00 00 55 00 56 00 00 42 00 43 00 00 45 00 46
   00 00 48 00 49 00 00 1E 00 1F 00 00 39 00 3A 00
   00 33 00 34 00 00 21 00 22 00 00 3E 00 3F 00 00
   5F 00 60 00 00 3C 00 3A 00 00 30 00 31 00 00 37
   00 31 00 00 5A 00 5B 00 00 32 00 0B 00 00 38 00
   0B 00 00 2D 00 2E 00 00 41 00 0B 00 00 4B 00 4C
   00 00 28 00 29 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
