Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/runtime/Statics.class
  Last modified May 29, 2022; size 2809 bytes
  SHA-256 checksum 0e5e483d3cf62d02dca3753df30e1c4b8e3dcbfd05fbb2162844b3c9540c6891
  Compiled from "Statics.java"
public final class scala.runtime.Statics
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/runtime/Statics
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 13, attributes: 2
Constant pool:
    #1 = Utf8               scala/runtime/Statics
    #2 = Class              #1            // scala/runtime/Statics
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Statics.java
    #6 = Utf8               scala/runtime/Statics$VM
    #7 = Class              #6            // scala/runtime/Statics$VM
    #8 = Utf8               VM
    #9 = Utf8               pfMarker
   #10 = Utf8               Ljava/lang/Object;
   #11 = Utf8               <init>
   #12 = Utf8               ()V
   #13 = NameAndType        #11:#12       // "<init>":()V
   #14 = Methodref          #4.#13        // java/lang/Object."<init>":()V
   #15 = Utf8               this
   #16 = Utf8               Lscala/runtime/Statics;
   #17 = Utf8               mix
   #18 = Utf8               (II)I
   #19 = Utf8               mixLast
   #20 = NameAndType        #19:#18       // mixLast:(II)I
   #21 = Methodref          #2.#20        // scala/runtime/Statics.mixLast:(II)I
   #22 = Utf8               java/lang/Integer
   #23 = Class              #22           // java/lang/Integer
   #24 = Utf8               rotateLeft
   #25 = NameAndType        #24:#18       // rotateLeft:(II)I
   #26 = Methodref          #23.#25       // java/lang/Integer.rotateLeft:(II)I
   #27 = Integer            -430675100
   #28 = Utf8               hash
   #29 = Utf8               I
   #30 = Utf8               data
   #31 = Utf8               h
   #32 = Integer            -862048943
   #33 = Integer            461845907
   #34 = Utf8               k
   #35 = Utf8               finalizeHash
   #36 = Utf8               avalanche
   #37 = Utf8               (I)I
   #38 = NameAndType        #36:#37       // avalanche:(I)I
   #39 = Methodref          #2.#38        // scala/runtime/Statics.avalanche:(I)I
   #40 = Utf8               length
   #41 = Integer            -2048144789
   #42 = Integer            -1028477387
   #43 = Utf8               longHash
   #44 = Utf8               (J)I
   #45 = Utf8               java/lang/Long
   #46 = Class              #45           // java/lang/Long
   #47 = Utf8               hashCode
   #48 = NameAndType        #47:#44       // hashCode:(J)I
   #49 = Methodref          #46.#48       // java/lang/Long.hashCode:(J)I
   #50 = Utf8               lv
   #51 = Utf8               J
   #52 = Utf8               iv
   #53 = Utf8               doubleHash
   #54 = Utf8               (D)I
   #55 = Utf8               java/lang/Float
   #56 = Class              #55           // java/lang/Float
   #57 = Utf8               (F)I
   #58 = NameAndType        #47:#57       // hashCode:(F)I
   #59 = Methodref          #56.#58       // java/lang/Float.hashCode:(F)I
   #60 = Utf8               java/lang/Double
   #61 = Class              #60           // java/lang/Double
   #62 = NameAndType        #47:#54       // hashCode:(D)I
   #63 = Methodref          #61.#62       // java/lang/Double.hashCode:(D)I
   #64 = Utf8               dv
   #65 = Utf8               D
   #66 = Utf8               fv
   #67 = Utf8               F
   #68 = Utf8               floatHash
   #69 = Utf8               anyHash
   #70 = Utf8               (Ljava/lang/Object;)I
   #71 = Utf8               java/lang/Number
   #72 = Class              #71           // java/lang/Number
   #73 = Utf8               anyHashNumber
   #74 = Utf8               (Ljava/lang/Number;)I
   #75 = NameAndType        #73:#74       // anyHashNumber:(Ljava/lang/Number;)I
   #76 = Methodref          #2.#75        // scala/runtime/Statics.anyHashNumber:(Ljava/lang/Number;)I
   #77 = Utf8               ()I
   #78 = NameAndType        #47:#77       // hashCode:()I
   #79 = Methodref          #4.#78        // java/lang/Object.hashCode:()I
   #80 = Utf8               x
   #81 = Utf8               longValue
   #82 = Utf8               ()J
   #83 = NameAndType        #81:#82       // longValue:()J
   #84 = Methodref          #46.#83       // java/lang/Long.longValue:()J
   #85 = NameAndType        #43:#44       // longHash:(J)I
   #86 = Methodref          #2.#85        // scala/runtime/Statics.longHash:(J)I
   #87 = Utf8               doubleValue
   #88 = Utf8               ()D
   #89 = NameAndType        #87:#88       // doubleValue:()D
   #90 = Methodref          #61.#89       // java/lang/Double.doubleValue:()D
   #91 = NameAndType        #53:#54       // doubleHash:(D)I
   #92 = Methodref          #2.#91        // scala/runtime/Statics.doubleHash:(D)I
   #93 = Utf8               floatValue
   #94 = Utf8               ()F
   #95 = NameAndType        #93:#94       // floatValue:()F
   #96 = Methodref          #56.#95       // java/lang/Float.floatValue:()F
   #97 = NameAndType        #68:#57       // floatHash:(F)I
   #98 = Methodref          #2.#97        // scala/runtime/Statics.floatHash:(F)I
   #99 = Utf8               Ljava/lang/Number;
  #100 = Utf8               releaseFence
  #101 = Utf8               java/lang/Throwable
  #102 = Class              #101          // java/lang/Throwable
  #103 = Utf8               org/sireum/$internal/UnsafeUtils
  #104 = Class              #103          // org/sireum/$internal/UnsafeUtils
  #105 = NameAndType        #100:#12      // releaseFence:()V
  #106 = Methodref          #104.#105     // org/sireum/$internal/UnsafeUtils.releaseFence:()V
  #107 = Utf8               RELEASE_FENCE
  #108 = Utf8               Ljava/lang/invoke/MethodHandle;
  #109 = NameAndType        #107:#108     // RELEASE_FENCE:Ljava/lang/invoke/MethodHandle;
  #110 = Fieldref           #7.#109       // scala/runtime/Statics$VM.RELEASE_FENCE:Ljava/lang/invoke/MethodHandle;
  #111 = Utf8               java/lang/invoke/MethodHandle
  #112 = Class              #111          // java/lang/invoke/MethodHandle
  #113 = Utf8               invoke
  #114 = NameAndType        #113:#12      // invoke:()V
  #115 = Methodref          #112.#114     // java/lang/invoke/MethodHandle.invoke:()V
  #116 = Utf8               ioobe
  #117 = Utf8               (I)Ljava/lang/Object;
  #118 = Utf8               <T:Ljava/lang/Object;>(I)TT;
  #119 = Utf8               java/lang/IndexOutOfBoundsException
  #120 = Class              #119          // java/lang/IndexOutOfBoundsException
  #121 = Utf8               java/lang/String
  #122 = Class              #121          // java/lang/String
  #123 = Utf8               valueOf
  #124 = Utf8               (I)Ljava/lang/String;
  #125 = NameAndType        #123:#124     // valueOf:(I)Ljava/lang/String;
  #126 = Methodref          #122.#125     // java/lang/String.valueOf:(I)Ljava/lang/String;
  #127 = Utf8               (Ljava/lang/String;)V
  #128 = NameAndType        #11:#127      // "<init>":(Ljava/lang/String;)V
  #129 = Methodref          #120.#128     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #130 = Utf8               n
  #131 = Utf8               <clinit>
  #132 = NameAndType        #9:#10        // pfMarker:Ljava/lang/Object;
  #133 = Fieldref           #2.#132       // scala/runtime/Statics.pfMarker:Ljava/lang/Object;
  #134 = Utf8               Code
  #135 = Utf8               LineNumberTable
  #136 = Utf8               LocalVariableTable
  #137 = Utf8               StackMapTable
  #138 = Utf8               Exceptions
  #139 = Utf8               Signature
  #140 = Utf8               InnerClasses
  #141 = Utf8               SourceFile
{
  public static final java.lang.Object pfMarker;
    descriptor: Ljava/lang/Object;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public scala.runtime.Statics();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #14                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/Statics;

  public static int mix(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=2
         0: iload_0
         1: iload_1
         2: invokestatic  #21                 // Method mixLast:(II)I
         5: istore_2
         6: iload_2
         7: bipush        13
         9: invokestatic  #26                 // Method java/lang/Integer.rotateLeft:(II)I
        12: istore_2
        13: iload_2
        14: iconst_5
        15: imul
        16: ldc           #27                 // int -430675100
        18: iadd
        19: ireturn
      LineNumberTable:
        line 25: 0
        line 26: 6
        line 27: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  hash   I
            0      20     1  data   I
            6      14     2     h   I

  public static int mixLast(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: ldc           #32                 // int -862048943
         5: imul
         6: istore_2
         7: iload_2
         8: bipush        15
        10: invokestatic  #26                 // Method java/lang/Integer.rotateLeft:(II)I
        13: istore_2
        14: iload_2
        15: ldc           #33                 // int 461845907
        17: imul
        18: istore_2
        19: iload_0
        20: iload_2
        21: ixor
        22: ireturn
      LineNumberTable:
        line 31: 0
        line 33: 2
        line 34: 7
        line 35: 14
        line 37: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  hash   I
            0      23     1  data   I
            2      21     2     k   I

  public static int finalizeHash(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: ixor
         3: invokestatic  #39                 // Method avalanche:(I)I
         6: ireturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  hash   I
            0       7     1 length   I

  public static int avalanche(int);
    descriptor: (I)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: iload_0
         1: iload_0
         2: bipush        16
         4: iushr
         5: ixor
         6: istore_0
         7: iload_0
         8: ldc           #41                 // int -2048144789
        10: imul
        11: istore_0
        12: iload_0
        13: iload_0
        14: bipush        13
        16: iushr
        17: ixor
        18: istore_0
        19: iload_0
        20: ldc           #42                 // int -1028477387
        22: imul
        23: istore_0
        24: iload_0
        25: iload_0
        26: bipush        16
        28: iushr
        29: ixor
        30: istore_0
        31: iload_0
        32: ireturn
      LineNumberTable:
        line 46: 0
        line 47: 7
        line 48: 12
        line 49: 19
        line 50: 24
        line 52: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0     h   I

  public static int longHash(long);
    descriptor: (J)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=1
         0: lload_0
         1: l2i
         2: istore_2
         3: iload_2
         4: i2l
         5: lload_0
         6: lcmp
         7: ifne          12
        10: iload_2
        11: ireturn
        12: lload_0
        13: invokestatic  #49                 // Method java/lang/Long.hashCode:(J)I
        16: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
      LineNumberTable:
        line 56: 0
        line 57: 3
        line 58: 10
        line 60: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0    lv   J
            3      14     2    iv   I

  public static int doubleHash(double);
    descriptor: (D)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=1
         0: dload_0
         1: d2i
         2: istore_2
         3: iload_2
         4: i2d
         5: dload_0
         6: dcmpl
         7: ifne          12
        10: iload_2
        11: ireturn
        12: dload_0
        13: d2l
        14: lstore_3
        15: lload_3
        16: l2d
        17: dload_0
        18: dcmpl
        19: ifne          27
        22: lload_3
        23: invokestatic  #49                 // Method java/lang/Long.hashCode:(J)I
        26: ireturn
        27: dload_0
        28: d2f
        29: fstore        5
        31: fload         5
        33: f2d
        34: dload_0
        35: dcmpl
        36: ifne          45
        39: fload         5
        41: invokestatic  #59                 // Method java/lang/Float.hashCode:(F)I
        44: ireturn
        45: dload_0
        46: invokestatic  #63                 // Method java/lang/Double.hashCode:(D)I
        49: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ long ]
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ float ]
      LineNumberTable:
        line 64: 0
        line 65: 3
        line 66: 10
        line 68: 12
        line 69: 15
        line 70: 22
        line 72: 27
        line 73: 31
        line 74: 39
        line 76: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0    dv   D
            3      47     2    iv   I
           15      35     3    lv   J
           31      19     5    fv   F

  public static int floatHash(float);
    descriptor: (F)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=4, args_size=1
         0: fload_0
         1: f2i
         2: istore_1
         3: iload_1
         4: i2f
         5: fload_0
         6: fcmpl
         7: ifne          12
        10: iload_1
        11: ireturn
        12: fload_0
        13: f2l
        14: lstore_2
        15: lload_2
        16: l2f
        17: fload_0
        18: fcmpl
        19: ifne          27
        22: lload_2
        23: invokestatic  #49                 // Method java/lang/Long.hashCode:(J)I
        26: ireturn
        27: fload_0
        28: invokestatic  #59                 // Method java/lang/Float.hashCode:(F)I
        31: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ long ]
      LineNumberTable:
        line 80: 0
        line 81: 3
        line 82: 10
        line 84: 12
        line 85: 15
        line 86: 22
        line 88: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0    fv   F
            3      29     1    iv   I
           15      17     2    lv   J

  public static int anyHash(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: iconst_0
         5: ireturn
         6: aload_0
         7: instanceof    #72                 // class java/lang/Number
        10: ifeq          21
        13: aload_0
        14: checkcast     #72                 // class java/lang/Number
        17: invokestatic  #76                 // Method anyHashNumber:(Ljava/lang/Number;)I
        20: ireturn
        21: aload_0
        22: invokevirtual #79                 // Method java/lang/Object.hashCode:()I
        25: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 14 /* same */
      LineNumberTable:
        line 120: 0
        line 121: 4
        line 123: 6
        line 124: 13
        line 127: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0     x   Ljava/lang/Object;

  private static int anyHashNumber(java.lang.Number);
    descriptor: (Ljava/lang/Number;)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: instanceof    #46                 // class java/lang/Long
         4: ifeq          18
         7: aload_0
         8: checkcast     #46                 // class java/lang/Long
        11: invokevirtual #84                 // Method java/lang/Long.longValue:()J
        14: invokestatic  #86                 // Method longHash:(J)I
        17: ireturn
        18: aload_0
        19: instanceof    #61                 // class java/lang/Double
        22: ifeq          36
        25: aload_0
        26: checkcast     #61                 // class java/lang/Double
        29: invokevirtual #90                 // Method java/lang/Double.doubleValue:()D
        32: invokestatic  #92                 // Method doubleHash:(D)I
        35: ireturn
        36: aload_0
        37: instanceof    #56                 // class java/lang/Float
        40: ifeq          54
        43: aload_0
        44: checkcast     #56                 // class java/lang/Float
        47: invokevirtual #96                 // Method java/lang/Float.floatValue:()F
        50: invokestatic  #98                 // Method floatHash:(F)I
        53: ireturn
        54: aload_0
        55: invokevirtual #79                 // Method java/lang/Object.hashCode:()I
        58: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 18 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
      LineNumberTable:
        line 131: 0
        line 132: 7
        line 134: 18
        line 135: 25
        line 137: 36
        line 138: 43
        line 140: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0     x   Ljava/lang/Number;

  public static void releaseFence() throws java.lang.Throwable;
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: invokestatic  #106                // Method org/sireum/$internal/UnsafeUtils.releaseFence:()V
         3: return
         4: nop
         5: nop
         6: nop
         7: nop
         8: nop
         9: nop
        10: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
      LineNumberTable:
        line 148: 4
        line 149: 10
    Exceptions:
      throws java.lang.Throwable

  public static final <T extends java.lang.Object> T ioobe(int) throws java.lang.IndexOutOfBoundsException;
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=1, args_size=1
         0: new           #120                // class java/lang/IndexOutOfBoundsException
         3: dup
         4: iload_0
         5: invokestatic  #126                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
         8: invokespecial #129                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        11: athrow
      LineNumberTable:
        line 196: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0     n   I
    Exceptions:
      throws java.lang.IndexOutOfBoundsException
    Signature: #118                         // <T:Ljava/lang/Object;>(I)TT;

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #4                  // class java/lang/Object
         3: dup
         4: invokespecial #14                 // Method java/lang/Object."<init>":()V
         7: putstatic     #133                // Field pfMarker:Ljava/lang/Object;
        10: return
      LineNumberTable:
        line 144: 0
}
InnerClasses:
  static final #8= #7 of #2;              // VM=class scala/runtime/Statics$VM of class scala/runtime/Statics
SourceFile: "Statics.java"
