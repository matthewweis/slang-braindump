Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/ops/MSOps_Ext$.class
  Last modified May 29, 2022; size 8683 bytes
  SHA-256 checksum a02c2835aa314c8a4efe537beedcd21e59d989b7e84533ef2493733d549e7908
  Compiled from "SOps_Ext.scala"
public final class org.sireum.ops.MSOps_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/ops/MSOps_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 15, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/ops/MSOps_Ext$
    #2 = Class              #1            // org/sireum/ops/MSOps_Ext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               SOps_Ext.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/Z$MP$
   #12 = Class              #11           // org/sireum/Z$MP$
   #13 = Utf8               org/sireum/Z
   #14 = Class              #13           // org/sireum/Z
   #15 = Utf8               MP$
   #16 = Utf8               MODULE$
   #17 = Utf8               Lorg/sireum/ops/MSOps_Ext$;
   #18 = Utf8               <clinit>
   #19 = Utf8               ()V
   #20 = Utf8               <init>
   #21 = NameAndType        #20:#19       // "<init>":()V
   #22 = Methodref          #2.#21        // org/sireum/ops/MSOps_Ext$."<init>":()V
   #23 = NameAndType        #16:#17       // MODULE$:Lorg/sireum/ops/MSOps_Ext$;
   #24 = Fieldref           #2.#23        // org/sireum/ops/MSOps_Ext$.MODULE$:Lorg/sireum/ops/MSOps_Ext$;
   #25 = Utf8               mParMap
   #26 = Utf8               (Lorg/sireum/MS;Lscala/Function1;Lorg/sireum/Z;)Lorg/sireum/MS;
   #27 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TV;>;Lscala/Function1<TV;TU;>;Lorg/sireum/Z;)Lorg/sireum/MS<TI;TU;>;
   #28 = Utf8               s
   #29 = Utf8               f
   #30 = Utf8               numOfCores
   #31 = Utf8               org/sireum/MS
   #32 = Class              #31           // org/sireum/MS
   #33 = Utf8               elements
   #34 = Utf8               ()Lscala/collection/immutable/Seq;
   #35 = NameAndType        #33:#34       // elements:()Lscala/collection/immutable/Seq;
   #36 = Methodref          #32.#35       // org/sireum/MS.elements:()Lscala/collection/immutable/Seq;
   #37 = Utf8               scala/collection/immutable/Seq
   #38 = Class              #37           // scala/collection/immutable/Seq
   #39 = Utf8               indices
   #40 = Utf8               ()Lscala/collection/immutable/Range;
   #41 = NameAndType        #39:#40       // indices:()Lscala/collection/immutable/Range;
   #42 = InterfaceMethodref #38.#41       // scala/collection/immutable/Seq.indices:()Lscala/collection/immutable/Range;
   #43 = Utf8               scala/collection/immutable/Range
   #44 = Class              #43           // scala/collection/immutable/Range
   #45 = Utf8               zip
   #46 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #47 = NameAndType        #45:#46       // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #48 = Methodref          #44.#47       // scala/collection/immutable/Range.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #49 = Utf8               scala/collection/immutable/IndexedSeq
   #50 = Class              #49           // scala/collection/immutable/IndexedSeq
   #51 = Utf8               org/sireum/B$
   #52 = Class              #51           // org/sireum/B$
   #53 = Utf8               Lorg/sireum/B$;
   #54 = NameAndType        #16:#53       // MODULE$:Lorg/sireum/B$;
   #55 = Fieldref           #52.#54       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #56 = Utf8               org/sireum/Z$
   #57 = Class              #56           // org/sireum/Z$
   #58 = Utf8               Lorg/sireum/Z$;
   #59 = NameAndType        #16:#58       // MODULE$:Lorg/sireum/Z$;
   #60 = Fieldref           #57.#59       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #61 = Utf8               apply
   #62 = Utf8               (I)Lorg/sireum/Z;
   #63 = NameAndType        #61:#62       // apply:(I)Lorg/sireum/Z;
   #64 = Methodref          #57.#63       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #65 = Utf8               $greater$eq
   #66 = Utf8               (Lorg/sireum/Z;)Z
   #67 = NameAndType        #65:#66       // $greater$eq:(Lorg/sireum/Z;)Z
   #68 = InterfaceMethodref #14.#67       // org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
   #69 = Utf8               $4B
   #70 = Utf8               (Z)Z
   #71 = NameAndType        #69:#70       // $4B:(Z)Z
   #72 = Methodref          #52.#71       // org/sireum/B$.$4B:(Z)Z
   #73 = Utf8               toInt
   #74 = Utf8               ()I
   #75 = NameAndType        #73:#74       // toInt:()I
   #76 = InterfaceMethodref #14.#75       // org/sireum/Z.toInt:()I
   #77 = Utf8               java/lang/Runtime
   #78 = Class              #77           // java/lang/Runtime
   #79 = Utf8               getRuntime
   #80 = Utf8               ()Ljava/lang/Runtime;
   #81 = NameAndType        #79:#80       // getRuntime:()Ljava/lang/Runtime;
   #82 = Methodref          #78.#81       // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
   #83 = Utf8               availableProcessors
   #84 = NameAndType        #83:#74       // availableProcessors:()I
   #85 = Methodref          #78.#84       // java/lang/Runtime.availableProcessors:()I
   #86 = Utf8               size
   #87 = NameAndType        #86:#74       // size:()I
   #88 = InterfaceMethodref #50.#87       // scala/collection/immutable/IndexedSeq.size:()I
   #89 = Utf8               org/sireum/ops/ISOps_Ext$
   #90 = Class              #89           // org/sireum/ops/ISOps_Ext$
   #91 = Utf8               Lorg/sireum/ops/ISOps_Ext$;
   #92 = NameAndType        #16:#91       // MODULE$:Lorg/sireum/ops/ISOps_Ext$;
   #93 = Fieldref           #90.#92       // org/sireum/ops/ISOps_Ext$.MODULE$:Lorg/sireum/ops/ISOps_Ext$;
   #94 = Utf8               MinimumParallelThreshold
   #95 = NameAndType        #94:#74       // MinimumParallelThreshold:()I
   #96 = Methodref          #90.#95       // org/sireum/ops/ISOps_Ext$.MinimumParallelThreshold:()I
   #97 = Utf8               java/util/concurrent/ForkJoinPool
   #98 = Class              #97           // java/util/concurrent/ForkJoinPool
   #99 = Utf8               (I)V
  #100 = NameAndType        #20:#99       // "<init>":(I)V
  #101 = Methodref          #98.#100      // java/util/concurrent/ForkJoinPool."<init>":(I)V
  #102 = Utf8               poolRef
  #103 = Utf8               ()Ljava/util/concurrent/atomic/AtomicReference;
  #104 = NameAndType        #102:#103     // poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
  #105 = Methodref          #90.#104      // org/sireum/ops/ISOps_Ext$.poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
  #106 = Utf8               java/util/concurrent/atomic/AtomicReference
  #107 = Class              #106          // java/util/concurrent/atomic/AtomicReference
  #108 = Utf8               compareAndSet
  #109 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #110 = NameAndType        #108:#109     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #111 = Methodref          #107.#110     // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #112 = Utf8               shutdown
  #113 = NameAndType        #112:#19      // shutdown:()V
  #114 = Methodref          #98.#113      // java/util/concurrent/ForkJoinPool.shutdown:()V
  #115 = Utf8               scala/collection/parallel/mutable/ParArray$
  #116 = Class              #115          // scala/collection/parallel/mutable/ParArray$
  #117 = Utf8               Lscala/collection/parallel/mutable/ParArray$;
  #118 = NameAndType        #16:#117      // MODULE$:Lscala/collection/parallel/mutable/ParArray$;
  #119 = Fieldref           #116.#118     // scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
  #120 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/parallel/ParIterable;
  #121 = NameAndType        #61:#120      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/ParIterable;
  #122 = Methodref          #116.#121     // scala/collection/parallel/mutable/ParArray$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/ParIterable;
  #123 = Utf8               scala/collection/parallel/mutable/ParArray
  #124 = Class              #123          // scala/collection/parallel/mutable/ParArray
  #125 = Utf8               scala/collection/parallel/ForkJoinTaskSupport
  #126 = Class              #125          // scala/collection/parallel/ForkJoinTaskSupport
  #127 = Utf8               get
  #128 = Utf8               ()Ljava/lang/Object;
  #129 = NameAndType        #127:#128     // get:()Ljava/lang/Object;
  #130 = Methodref          #107.#129     // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
  #131 = Utf8               (Ljava/util/concurrent/ForkJoinPool;)V
  #132 = NameAndType        #20:#131      // "<init>":(Ljava/util/concurrent/ForkJoinPool;)V
  #133 = Methodref          #126.#132     // scala/collection/parallel/ForkJoinTaskSupport."<init>":(Ljava/util/concurrent/ForkJoinPool;)V
  #134 = Utf8               tasksupport_$eq
  #135 = Utf8               (Lscala/collection/parallel/TaskSupport;)V
  #136 = NameAndType        #134:#135     // tasksupport_$eq:(Lscala/collection/parallel/TaskSupport;)V
  #137 = Methodref          #124.#136     // scala/collection/parallel/mutable/ParArray.tasksupport_$eq:(Lscala/collection/parallel/TaskSupport;)V
  #138 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #139 = MethodType         #138          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #140 = Utf8               $anonfun$mParMap$5
  #141 = Utf8               (Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #142 = NameAndType        #140:#141     // $anonfun$mParMap$5:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #143 = Methodref          #2.#142       // org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$5:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #144 = MethodHandle       6:#143        // REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$5:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #145 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
  #146 = MethodType         #145          //  (Lscala/Tuple2;)Lscala/Tuple2;
  #147 = Integer            5
  #148 = Integer            1
  #149 = Utf8               java/lang/invoke/LambdaMetafactory
  #150 = Class              #149          // java/lang/invoke/LambdaMetafactory
  #151 = Utf8               altMetafactory
  #152 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #153 = NameAndType        #151:#152     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #154 = Methodref          #150.#153     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #155 = MethodHandle       6:#154        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #156 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #157 = NameAndType        #61:#156      // apply:(Lscala/Function1;)Lscala/Function1;
  #158 = InvokeDynamic      #0:#157       // #0:apply:(Lscala/Function1;)Lscala/Function1;
  #159 = Utf8               map
  #160 = Utf8               (Lscala/Function1;)Lscala/collection/parallel/mutable/ParArray;
  #161 = NameAndType        #159:#160     // map:(Lscala/Function1;)Lscala/collection/parallel/mutable/ParArray;
  #162 = Methodref          #124.#161     // scala/collection/parallel/mutable/ParArray.map:(Lscala/Function1;)Lscala/collection/parallel/mutable/ParArray;
  #163 = Utf8               toIndexedSeq
  #164 = Utf8               ()Lscala/collection/immutable/IndexedSeq;
  #165 = NameAndType        #163:#164     // toIndexedSeq:()Lscala/collection/immutable/IndexedSeq;
  #166 = Methodref          #124.#165     // scala/collection/parallel/mutable/ParArray.toIndexedSeq:()Lscala/collection/immutable/IndexedSeq;
  #167 = Utf8               getAndSet
  #168 = NameAndType        #167:#138     // getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
  #169 = Methodref          #107.#168     // java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
  #170 = Utf8               $anonfun$mParMap$6
  #171 = NameAndType        #170:#141     // $anonfun$mParMap$6:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #172 = Methodref          #2.#171       // org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$6:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #173 = MethodHandle       6:#172        // REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$6:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
  #174 = InvokeDynamic      #1:#157       // #1:apply:(Lscala/Function1;)Lscala/Function1;
  #175 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #176 = NameAndType        #159:#175     // map:(Lscala/Function1;)Ljava/lang/Object;
  #177 = InterfaceMethodref #50.#176      // scala/collection/immutable/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
  #178 = Utf8               scala/collection/IndexedSeq
  #179 = Class              #178          // scala/collection/IndexedSeq
  #180 = Utf8               length
  #181 = NameAndType        #180:#74      // length:()I
  #182 = InterfaceMethodref #38.#181      // scala/collection/immutable/Seq.length:()I
  #183 = Utf8               $anonfun$mParMap$7$adapted
  #184 = Utf8               ([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #185 = NameAndType        #183:#184     // $anonfun$mParMap$7$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #186 = Methodref          #2.#185       // org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$7$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #187 = MethodHandle       6:#186        // REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$7$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #188 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #189 = MethodType         #188          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #190 = Utf8               ([Ljava/lang/Object;)Lscala/Function1;
  #191 = NameAndType        #61:#190      // apply:([Ljava/lang/Object;)Lscala/Function1;
  #192 = InvokeDynamic      #2:#191       // #2:apply:([Ljava/lang/Object;)Lscala/Function1;
  #193 = Utf8               foreach
  #194 = Utf8               (Lscala/Function1;)V
  #195 = NameAndType        #193:#194     // foreach:(Lscala/Function1;)V
  #196 = InterfaceMethodref #179.#195     // scala/collection/IndexedSeq.foreach:(Lscala/Function1;)V
  #197 = Utf8               org/sireum/MS$
  #198 = Class              #197          // org/sireum/MS$
  #199 = Utf8               Lorg/sireum/MS$;
  #200 = NameAndType        #16:#199      // MODULE$:Lorg/sireum/MS$;
  #201 = Fieldref           #198.#200     // org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
  #202 = Utf8               $anonfun$mParMap$8
  #203 = NameAndType        #202:#188     // $anonfun$mParMap$8:(Lscala/Tuple2;)Ljava/lang/Object;
  #204 = Methodref          #2.#203       // org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$8:(Lscala/Tuple2;)Ljava/lang/Object;
  #205 = MethodHandle       6:#204        // REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$8:(Lscala/Tuple2;)Ljava/lang/Object;
  #206 = Utf8               ()Lscala/Function1;
  #207 = NameAndType        #61:#206      // apply:()Lscala/Function1;
  #208 = InvokeDynamic      #3:#207       // #3:apply:()Lscala/Function1;
  #209 = InterfaceMethodref #179.#176     // scala/collection/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
  #210 = Utf8               scala/collection/IterableOnceOps
  #211 = Class              #210          // scala/collection/IterableOnceOps
  #212 = Utf8               toSeq
  #213 = NameAndType        #212:#34      // toSeq:()Lscala/collection/immutable/Seq;
  #214 = InterfaceMethodref #211.#213     // scala/collection/IterableOnceOps.toSeq:()Lscala/collection/immutable/Seq;
  #215 = Utf8               companion
  #216 = Utf8               ()Lorg/sireum/$ZCompanion;
  #217 = NameAndType        #215:#216     // companion:()Lorg/sireum/$ZCompanion;
  #218 = Methodref          #32.#217      // org/sireum/MS.companion:()Lorg/sireum/$ZCompanion;
  #219 = Utf8               (Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
  #220 = NameAndType        #61:#219      // apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
  #221 = Methodref          #198.#220     // org/sireum/MS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
  #222 = Utf8               newPool
  #223 = Utf8               Ljava/util/concurrent/ForkJoinPool;
  #224 = Utf8               success
  #225 = Utf8               Z
  #226 = Utf8               pc
  #227 = Utf8               Lscala/collection/parallel/mutable/ParArray;
  #228 = Utf8               r
  #229 = Utf8               Lscala/collection/immutable/IndexedSeq;
  #230 = Utf8               Lscala/collection/immutable/Seq;
  #231 = Utf8               ies
  #232 = Utf8               cores
  #233 = Utf8               I
  #234 = Utf8               irs
  #235 = Utf8               Lscala/collection/IndexedSeq;
  #236 = Utf8               a
  #237 = Utf8               [Ljava/lang/Object;
  #238 = Utf8               this
  #239 = Utf8               Lorg/sireum/MS;
  #240 = Utf8               Lscala/Function1;
  #241 = Utf8               Lorg/sireum/Z;
  #242 = Utf8               scala/Function1
  #243 = Class              #242          // scala/Function1
  #244 = Utf8               mParMap$default$3
  #245 = Utf8               ()Lorg/sireum/Z;
  #246 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;U:Ljava/lang/Object;>()Lorg/sireum/Z;
  #247 = Utf8               sortWith
  #248 = Utf8               (Lorg/sireum/MS;Lscala/Function2;)Lorg/sireum/MS;
  #249 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TV;>;Lscala/Function2<TV;TV;Lorg/sireum/B;>;)Lorg/sireum/MS<TI;TV;>;
  #250 = Utf8               lt
  #251 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #252 = MethodType         #251          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #253 = Utf8               $anonfun$sortWith$3$adapted
  #254 = Utf8               (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #255 = NameAndType        #253:#254     // $anonfun$sortWith$3$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #256 = Methodref          #2.#255       // org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$3$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #257 = MethodHandle       6:#256        // REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$3$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #258 = Utf8               (Lscala/Function2;)Lscala/Function2;
  #259 = NameAndType        #61:#258      // apply:(Lscala/Function2;)Lscala/Function2;
  #260 = InvokeDynamic      #4:#259       // #4:apply:(Lscala/Function2;)Lscala/Function2;
  #261 = Utf8               (Lscala/Function2;)Ljava/lang/Object;
  #262 = NameAndType        #247:#261     // sortWith:(Lscala/Function2;)Ljava/lang/Object;
  #263 = InterfaceMethodref #38.#262      // scala/collection/immutable/Seq.sortWith:(Lscala/Function2;)Ljava/lang/Object;
  #264 = Utf8               boxer
  #265 = Utf8               ()Lorg/sireum/$internal/Boxer;
  #266 = NameAndType        #264:#265     // boxer:()Lorg/sireum/$internal/Boxer;
  #267 = Methodref          #32.#266      // org/sireum/MS.boxer:()Lorg/sireum/$internal/Boxer;
  #268 = NameAndType        #180:#245     // length:()Lorg/sireum/Z;
  #269 = Methodref          #32.#268      // org/sireum/MS.length:()Lorg/sireum/Z;
  #270 = Utf8               org/sireum/$internal/Boxer
  #271 = Class              #270          // org/sireum/$internal/Boxer
  #272 = Utf8               create
  #273 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #274 = NameAndType        #272:#273     // create:(Lorg/sireum/Z;)Ljava/lang/Object;
  #275 = InterfaceMethodref #271.#274     // org/sireum/$internal/Boxer.create:(Lorg/sireum/Z;)Ljava/lang/Object;
  #276 = Utf8               Lorg/sireum/Z$MP$;
  #277 = NameAndType        #16:#276      // MODULE$:Lorg/sireum/Z$MP$;
  #278 = Fieldref           #12.#277      // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
  #279 = Utf8               zero
  #280 = NameAndType        #279:#245     // zero:()Lorg/sireum/Z;
  #281 = Methodref          #12.#280      // org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
  #282 = Utf8               scala/runtime/ObjectRef
  #283 = Class              #282          // scala/runtime/ObjectRef
  #284 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #285 = NameAndType        #272:#284     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #286 = Methodref          #283.#285     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #287 = Utf8               $anonfun$sortWith$4$adapted
  #288 = Utf8               (Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #289 = NameAndType        #287:#288     // $anonfun$sortWith$4$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #290 = Methodref          #2.#289       // org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$4$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #291 = MethodHandle       6:#290        // REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$4$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #292 = Utf8               (Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #293 = NameAndType        #61:#292      // apply:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #294 = InvokeDynamic      #5:#293       // #5:apply:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #295 = InterfaceMethodref #38.#195      // scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
  #296 = Utf8               (Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
  #297 = NameAndType        #20:#296      // "<init>":(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
  #298 = Methodref          #32.#297      // org/sireum/MS."<init>":(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
  #299 = Utf8               es
  #300 = Utf8               Ljava/lang/Object;
  #301 = Utf8               i
  #302 = Utf8               Lscala/runtime/ObjectRef;
  #303 = Utf8               Lscala/Function2;
  #304 = Utf8               f$2
  #305 = Utf8               p
  #306 = Utf8               scala/Tuple2
  #307 = Class              #306          // scala/Tuple2
  #308 = Utf8               _1$mcI$sp
  #309 = NameAndType        #308:#74      // _1$mcI$sp:()I
  #310 = Methodref          #307.#309     // scala/Tuple2._1$mcI$sp:()I
  #311 = Utf8               scala/runtime/BoxesRunTime
  #312 = Class              #311          // scala/runtime/BoxesRunTime
  #313 = Utf8               boxToInteger
  #314 = Utf8               (I)Ljava/lang/Integer;
  #315 = NameAndType        #313:#314     // boxToInteger:(I)Ljava/lang/Integer;
  #316 = Methodref          #312.#315     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #317 = Utf8               _2
  #318 = NameAndType        #317:#128     // _2:()Ljava/lang/Object;
  #319 = Methodref          #307.#318     // scala/Tuple2._2:()Ljava/lang/Object;
  #320 = NameAndType        #61:#138      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #321 = InterfaceMethodref #243.#320     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #322 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #323 = NameAndType        #20:#322      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #324 = Methodref          #307.#323     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #325 = Utf8               Lscala/Tuple2;
  #326 = Utf8               $anonfun$mParMap$7
  #327 = Utf8               ([Ljava/lang/Object;Lscala/Tuple2;)V
  #328 = Utf8               a$3
  #329 = Utf8               x$2
  #330 = Utf8               $anonfun$sortWith$3
  #331 = Utf8               (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
  #332 = Utf8               lt$2
  #333 = Utf8               e1
  #334 = Utf8               e2
  #335 = Utf8               scala/Function2
  #336 = Class              #335          // scala/Function2
  #337 = NameAndType        #61:#251      // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #338 = InterfaceMethodref #336.#337     // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #339 = Utf8               org/sireum/B
  #340 = Class              #339          // org/sireum/B
  #341 = Utf8               value
  #342 = Utf8               ()Z
  #343 = NameAndType        #341:#342     // value:()Z
  #344 = Methodref          #340.#343     // org/sireum/B.value:()Z
  #345 = Utf8               $anonfun$sortWith$4
  #346 = Utf8               (Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #347 = Utf8               s$2
  #348 = Utf8               a$4
  #349 = Utf8               i$2
  #350 = Utf8               e
  #351 = Utf8               elem
  #352 = NameAndType        #351:#300     // elem:Ljava/lang/Object;
  #353 = Fieldref           #283.#352     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #354 = Utf8               org/sireum/helper$
  #355 = Class              #354          // org/sireum/helper$
  #356 = Utf8               Lorg/sireum/helper$;
  #357 = NameAndType        #16:#356      // MODULE$:Lorg/sireum/helper$;
  #358 = Fieldref           #355.#357     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #359 = Utf8               cloneAssign
  #360 = NameAndType        #359:#138     // cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #361 = Methodref          #355.#360     // org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #362 = Utf8               store
  #363 = Utf8               (Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
  #364 = NameAndType        #362:#363     // store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
  #365 = InterfaceMethodref #271.#364     // org/sireum/$internal/Boxer.store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
  #366 = Utf8               increase
  #367 = NameAndType        #366:#245     // increase:()Lorg/sireum/Z;
  #368 = InterfaceMethodref #14.#367      // org/sireum/Z.increase:()Lorg/sireum/Z;
  #369 = Methodref          #4.#21        // java/lang/Object."<init>":()V
  #370 = NameAndType        #326:#327     // $anonfun$mParMap$7:([Ljava/lang/Object;Lscala/Tuple2;)V
  #371 = Methodref          #2.#370       // org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$7:([Ljava/lang/Object;Lscala/Tuple2;)V
  #372 = Utf8               scala/runtime/BoxedUnit
  #373 = Class              #372          // scala/runtime/BoxedUnit
  #374 = Utf8               UNIT
  #375 = Utf8               Lscala/runtime/BoxedUnit;
  #376 = NameAndType        #374:#375     // UNIT:Lscala/runtime/BoxedUnit;
  #377 = Fieldref           #373.#376     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #378 = NameAndType        #330:#331     // $anonfun$sortWith$3:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
  #379 = Methodref          #2.#378       // org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$3:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
  #380 = Utf8               boxToBoolean
  #381 = Utf8               (Z)Ljava/lang/Boolean;
  #382 = NameAndType        #380:#381     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #383 = Methodref          #312.#382     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #384 = NameAndType        #345:#346     // $anonfun$sortWith$4:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #385 = Methodref          #2.#384       // org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$4:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #386 = Utf8               $deserializeLambda$
  #387 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #388 = Utf8               scala/runtime/LambdaDeserialize
  #389 = Class              #388          // scala/runtime/LambdaDeserialize
  #390 = Utf8               bootstrap
  #391 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #392 = NameAndType        #390:#391     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #393 = Methodref          #389.#392     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #394 = MethodHandle       6:#393        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #395 = Utf8               lambdaDeserialize
  #396 = NameAndType        #395:#387     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #397 = InvokeDynamic      #6:#396       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #398 = Utf8               Code
  #399 = Utf8               LineNumberTable
  #400 = Utf8               StackMapTable
  #401 = Utf8               LocalVariableTable
  #402 = Utf8               Signature
  #403 = Utf8               MethodParameters
  #404 = Utf8               InnerClasses
  #405 = Utf8               SourceFile
  #406 = Utf8               BootstrapMethods
  #407 = Utf8               ScalaInlineInfo
  #408 = Utf8               Scala
{
  public static final org.sireum.ops.MSOps_Ext$ MODULE$;
    descriptor: Lorg/sireum/ops/MSOps_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/ops/MSOps_Ext$
         3: dup
         4: invokespecial #22                 // Method "<init>":()V
         7: putstatic     #24                 // Field MODULE$:Lorg/sireum/ops/MSOps_Ext$;
        10: return
      LineNumberTable:
        line 74: 0

  public <I extends java.lang.Object, V extends java.lang.Object, U extends java.lang.Object> org.sireum.MS<I, U> mParMap(org.sireum.MS<I, V>, scala.Function1<V, U>, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lscala/Function1;Lorg/sireum/Z;)Lorg/sireum/MS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=13, args_size=4
         0: aload_1
         1: invokevirtual #36                 // Method org/sireum/MS.elements:()Lscala/collection/immutable/Seq;
         4: astore        4
         6: aload         4
         8: invokeinterface #42,  1           // InterfaceMethod scala/collection/immutable/Seq.indices:()Lscala/collection/immutable/Range;
        13: aload         4
        15: invokevirtual #48                 // Method scala/collection/immutable/Range.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        18: checkcast     #50                 // class scala/collection/immutable/IndexedSeq
        21: astore        5
        23: getstatic     #55                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        26: aload_3
        27: getstatic     #60                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        30: iconst_1
        31: invokevirtual #64                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        34: invokeinterface #68,  2           // InterfaceMethod org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
        39: invokevirtual #72                 // Method org/sireum/B$.$4B:(Z)Z
        42: ifeq          54
        45: aload_3
        46: invokeinterface #76,  1           // InterfaceMethod org/sireum/Z.toInt:()I
        51: goto          60
        54: invokestatic  #82                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
        57: invokevirtual #85                 // Method java/lang/Runtime.availableProcessors:()I
        60: istore        6
        62: aload         5
        64: invokeinterface #88,  1           // InterfaceMethod scala/collection/immutable/IndexedSeq.size:()I
        69: getstatic     #93                 // Field org/sireum/ops/ISOps_Ext$.MODULE$:Lorg/sireum/ops/ISOps_Ext$;
        72: invokevirtual #96                 // Method org/sireum/ops/ISOps_Ext$.MinimumParallelThreshold:()I
        75: if_icmplt     198
        78: new           #98                 // class java/util/concurrent/ForkJoinPool
        81: dup
        82: iload         6
        84: invokespecial #101                // Method java/util/concurrent/ForkJoinPool."<init>":(I)V
        87: astore        8
        89: getstatic     #93                 // Field org/sireum/ops/ISOps_Ext$.MODULE$:Lorg/sireum/ops/ISOps_Ext$;
        92: invokevirtual #105                // Method org/sireum/ops/ISOps_Ext$.poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
        95: aconst_null
        96: aload         8
        98: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       101: istore        9
       103: iload         9
       105: ifne          116
       108: aload         8
       110: invokevirtual #114                // Method java/util/concurrent/ForkJoinPool.shutdown:()V
       113: goto          116
       116: getstatic     #119                // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
       119: aload         5
       121: invokevirtual #122                // Method scala/collection/parallel/mutable/ParArray$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/ParIterable;
       124: checkcast     #124                // class scala/collection/parallel/mutable/ParArray
       127: astore        10
       129: aload         10
       131: new           #126                // class scala/collection/parallel/ForkJoinTaskSupport
       134: dup
       135: getstatic     #93                 // Field org/sireum/ops/ISOps_Ext$.MODULE$:Lorg/sireum/ops/ISOps_Ext$;
       138: invokevirtual #105                // Method org/sireum/ops/ISOps_Ext$.poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
       141: invokevirtual #130                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       144: checkcast     #98                 // class java/util/concurrent/ForkJoinPool
       147: invokespecial #133                // Method scala/collection/parallel/ForkJoinTaskSupport."<init>":(Ljava/util/concurrent/ForkJoinPool;)V
       150: invokevirtual #137                // Method scala/collection/parallel/mutable/ParArray.tasksupport_$eq:(Lscala/collection/parallel/TaskSupport;)V
       153: aload         10
       155: aload_2
       156: invokedynamic #158,  0            // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function1;
       161: invokevirtual #162                // Method scala/collection/parallel/mutable/ParArray.map:(Lscala/Function1;)Lscala/collection/parallel/mutable/ParArray;
       164: invokevirtual #166                // Method scala/collection/parallel/mutable/ParArray.toIndexedSeq:()Lscala/collection/immutable/IndexedSeq;
       167: astore        11
       169: iload         9
       171: ifeq          193
       174: getstatic     #93                 // Field org/sireum/ops/ISOps_Ext$.MODULE$:Lorg/sireum/ops/ISOps_Ext$;
       177: invokevirtual #105                // Method org/sireum/ops/ISOps_Ext$.poolRef:()Ljava/util/concurrent/atomic/AtomicReference;
       180: aconst_null
       181: invokevirtual #169                // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       184: checkcast     #98                 // class java/util/concurrent/ForkJoinPool
       187: invokevirtual #114                // Method java/util/concurrent/ForkJoinPool.shutdown:()V
       190: goto          193
       193: aload         11
       195: goto          214
       198: aload         5
       200: aload_2
       201: invokedynamic #174,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
       206: invokeinterface #177,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
       211: checkcast     #179                // class scala/collection/IndexedSeq
       214: astore        7
       216: aload         4
       218: invokeinterface #182,  1          // InterfaceMethod scala/collection/immutable/Seq.length:()I
       223: anewarray     #4                  // class java/lang/Object
       226: astore        12
       228: aload         7
       230: aload         12
       232: invokedynamic #192,  0            // InvokeDynamic #2:apply:([Ljava/lang/Object;)Lscala/Function1;
       237: invokeinterface #196,  2          // InterfaceMethod scala/collection/IndexedSeq.foreach:(Lscala/Function1;)V
       242: getstatic     #201                // Field org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
       245: aload         7
       247: invokedynamic #208,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       252: invokeinterface #209,  2          // InterfaceMethod scala/collection/IndexedSeq.map:(Lscala/Function1;)Ljava/lang/Object;
       257: checkcast     #211                // class scala/collection/IterableOnceOps
       260: invokeinterface #214,  1          // InterfaceMethod scala/collection/IterableOnceOps.toSeq:()Lscala/collection/immutable/Seq;
       265: aload_1
       266: invokevirtual #218                // Method org/sireum/MS.companion:()Lorg/sireum/$ZCompanion;
       269: invokevirtual #221                // Method org/sireum/MS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
       272: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 54
          locals = [ class scala/collection/immutable/Seq, class scala/collection/immutable/IndexedSeq ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class org/sireum/ops/MSOps_Ext$, class org/sireum/MS, class scala/Function1, class org/sireum/Z, class scala/collection/immutable/Seq, class scala/collection/immutable/IndexedSeq, int, top, class java/util/concurrent/ForkJoinPool, int ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 76
          locals = [ class scala/collection/parallel/mutable/ParArray, class scala/collection/immutable/IndexedSeq ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/ops/MSOps_Ext$, class org/sireum/MS, class scala/Function1, class org/sireum/Z, class scala/collection/immutable/Seq, class scala/collection/immutable/IndexedSeq, int ]
          stack = []
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class scala/collection/IndexedSeq ]
      LineNumberTable:
        line 77: 0
        line 78: 6
        line 79: 23
        line 81: 62
        line 82: 155
        line 81: 169
        line 83: 198
        line 84: 216
        line 85: 228
        line 86: 242
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           89     106     8 newPool   Ljava/util/concurrent/ForkJoinPool;
          103      92     9 success   Z
          129      66    10    pc   Lscala/collection/parallel/mutable/ParArray;
          169      26    11     r   Lscala/collection/immutable/IndexedSeq;
            6     266     4 elements   Lscala/collection/immutable/Seq;
           23     249     5   ies   Lscala/collection/immutable/IndexedSeq;
           62     210     6 cores   I
          216      56     7   irs   Lscala/collection/IndexedSeq;
          228      44    12     a   [Ljava/lang/Object;
            0     273     0  this   Lorg/sireum/ops/MSOps_Ext$;
            0     273     1     s   Lorg/sireum/MS;
            0     273     2     f   Lscala/Function1;
            0     273     3 numOfCores   Lorg/sireum/Z;
    Signature: #27                          // <I:Ljava/lang/Object;V:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TV;>;Lscala/Function1<TV;TU;>;Lorg/sireum/Z;)Lorg/sireum/MS<TI;TU;>;
    MethodParameters:
      Name                           Flags
      s                              final
      f                              final
      numOfCores                     final

  public <I extends java.lang.Object, V extends java.lang.Object, U extends java.lang.Object> org.sireum.Z mParMap$default$3();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #60                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: invokestatic  #82                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
         6: invokevirtual #85                 // Method java/lang/Runtime.availableProcessors:()I
         9: invokevirtual #64                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        12: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/ops/MSOps_Ext$;
    Signature: #246                         // <I:Ljava/lang/Object;V:Ljava/lang/Object;U:Ljava/lang/Object;>()Lorg/sireum/Z;

  public <I extends java.lang.Object, V extends java.lang.Object> org.sireum.MS<I, V> sortWith(org.sireum.MS<I, V>, scala.Function2<V, V, org.sireum.B>);
    descriptor: (Lorg/sireum/MS;Lscala/Function2;)Lorg/sireum/MS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=3
         0: aload_1
         1: invokevirtual #36                 // Method org/sireum/MS.elements:()Lscala/collection/immutable/Seq;
         4: aload_2
         5: invokedynamic #260,  0            // InvokeDynamic #4:apply:(Lscala/Function2;)Lscala/Function2;
        10: invokeinterface #263,  2          // InterfaceMethod scala/collection/immutable/Seq.sortWith:(Lscala/Function2;)Ljava/lang/Object;
        15: checkcast     #38                 // class scala/collection/immutable/Seq
        18: astore_3
        19: aload_1
        20: invokevirtual #267                // Method org/sireum/MS.boxer:()Lorg/sireum/$internal/Boxer;
        23: aload_1
        24: invokevirtual #269                // Method org/sireum/MS.length:()Lorg/sireum/Z;
        27: invokeinterface #275,  2          // InterfaceMethod org/sireum/$internal/Boxer.create:(Lorg/sireum/Z;)Ljava/lang/Object;
        32: astore        4
        34: getstatic     #278                // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        37: invokevirtual #281                // Method org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
        40: invokestatic  #286                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        43: astore        5
        45: aload_3
        46: aload_1
        47: aload         4
        49: aload         5
        51: invokedynamic #294,  0            // InvokeDynamic #5:apply:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
        56: invokeinterface #295,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
        61: new           #32                 // class org/sireum/MS
        64: dup
        65: aload_1
        66: invokevirtual #218                // Method org/sireum/MS.companion:()Lorg/sireum/$ZCompanion;
        69: aload         4
        71: aload_1
        72: invokevirtual #269                // Method org/sireum/MS.length:()Lorg/sireum/Z;
        75: aload_1
        76: invokevirtual #267                // Method org/sireum/MS.boxer:()Lorg/sireum/$internal/Boxer;
        79: invokespecial #298                // Method org/sireum/MS."<init>":(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
        82: areturn
      LineNumberTable:
        line 90: 0
        line 91: 19
        line 92: 34
        line 93: 45
        line 97: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      63     3    es   Lscala/collection/immutable/Seq;
           34      48     4     a   Ljava/lang/Object;
           45      37     5     i   Lscala/runtime/ObjectRef;
            0      83     0  this   Lorg/sireum/ops/MSOps_Ext$;
            0      83     1     s   Lorg/sireum/MS;
            0      83     2    lt   Lscala/Function2;
    Signature: #249                         // <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TV;>;Lscala/Function2<TV;TV;Lorg/sireum/B;>;)Lorg/sireum/MS<TI;TV;>;
    MethodParameters:
      Name                           Flags
      s                              final
      lt                             final

  public static final scala.Tuple2 $anonfun$mParMap$5(scala.Function1, scala.Tuple2);
    descriptor: (Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #307                // class scala/Tuple2
         3: dup
         4: aload_1
         5: invokevirtual #310                // Method scala/Tuple2._1$mcI$sp:()I
         8: invokestatic  #316                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: aload_0
        12: aload_1
        13: invokevirtual #319                // Method scala/Tuple2._2:()Ljava/lang/Object;
        16: invokeinterface #321,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        21: invokespecial #324                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        24: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0   f$2   Lscala/Function1;
            0      25     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      f$2                            final
      p                              final

  public static final scala.Tuple2 $anonfun$mParMap$6(scala.Function1, scala.Tuple2);
    descriptor: (Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #307                // class scala/Tuple2
         3: dup
         4: aload_1
         5: invokevirtual #310                // Method scala/Tuple2._1$mcI$sp:()I
         8: invokestatic  #316                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: aload_0
        12: aload_1
        13: invokevirtual #319                // Method scala/Tuple2._2:()Ljava/lang/Object;
        16: invokeinterface #321,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        21: invokespecial #324                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        24: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0   f$2   Lscala/Function1;
            0      25     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      f$2                            final
      p                              final

  public static final void $anonfun$mParMap$7(java.lang.Object[], scala.Tuple2);
    descriptor: ([Ljava/lang/Object;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #310                // Method scala/Tuple2._1$mcI$sp:()I
         5: aload_1
         6: invokevirtual #319                // Method scala/Tuple2._2:()Ljava/lang/Object;
         9: aastore
        10: return
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   a$3   [Ljava/lang/Object;
            0      11     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      a$3                            final
      p                              final

  public static final java.lang.Object $anonfun$mParMap$8(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #319                // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final boolean $anonfun$sortWith$3(scala.Function2, java.lang.Object, java.lang.Object);
    descriptor: (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokeinterface #338,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
         8: checkcast     #340                // class org/sireum/B
        11: invokevirtual #344                // Method org/sireum/B.value:()Z
        14: ireturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  lt$2   Lscala/Function2;
            0      15     1    e1   Ljava/lang/Object;
            0      15     2    e2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      lt$2                           final
      e1                             final
      e2                             final

  public static final void $anonfun$sortWith$4(org.sireum.MS, java.lang.Object, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: invokevirtual #267                // Method org/sireum/MS.boxer:()Lorg/sireum/$internal/Boxer;
         4: aload_1
         5: aload_2
         6: getfield      #353                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         9: checkcast     #14                 // class org/sireum/Z
        12: getstatic     #358                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        15: aload_3
        16: invokevirtual #361                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        19: invokeinterface #365,  4          // InterfaceMethod org/sireum/$internal/Boxer.store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
        24: aload_2
        25: aload_2
        26: getfield      #353                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        29: checkcast     #14                 // class org/sireum/Z
        32: invokeinterface #368,  1          // InterfaceMethod org/sireum/Z.increase:()Lorg/sireum/Z;
        37: putfield      #353                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        40: return
      LineNumberTable:
        line 94: 0
        line 95: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0   s$2   Lorg/sireum/MS;
            0      41     1   a$4   Ljava/lang/Object;
            0      41     2   i$2   Lscala/runtime/ObjectRef;
            0      41     3     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      s$2                            final
      a$4                            final
      i$2                            final
      e                              final

  private org.sireum.ops.MSOps_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #369                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/MSOps_Ext$;

  public static final java.lang.Object $anonfun$mParMap$7$adapted(java.lang.Object[], scala.Tuple2);
    descriptor: ([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #371                // Method $anonfun$mParMap$7:([Ljava/lang/Object;Lscala/Tuple2;)V
         5: getstatic     #377                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   a$3   [Ljava/lang/Object;
            0       9     1     p   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      a$3                            final
      p                              final

  public static final java.lang.Object $anonfun$sortWith$3$adapted(scala.Function2, java.lang.Object, java.lang.Object);
    descriptor: (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #379                // Method $anonfun$sortWith$3:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: invokestatic  #383                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  lt$2   Lscala/Function2;
            0      10     1    e1   Ljava/lang/Object;
            0      10     2    e2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      lt$2                           final
      e1                             final
      e2                             final

  public static final java.lang.Object $anonfun$sortWith$4$adapted(org.sireum.MS, java.lang.Object, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #385                // Method $anonfun$sortWith$4:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         7: getstatic     #377                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        10: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   s$2   Lorg/sireum/MS;
            0      11     1   a$4   Ljava/lang/Object;
            0      11     2   i$2   Lscala/runtime/ObjectRef;
            0      11     3     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      s$2                            final
      a$4                            final
      i$2                            final
      e                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #397,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
SourceFile: "SOps_Ext.scala"
BootstrapMethods:
  0: #155 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #139 (Ljava/lang/Object;)Ljava/lang/Object;
      #144 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$5:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
      #146 (Lscala/Tuple2;)Lscala/Tuple2;
      #147 5
      #148 1
      #146 (Lscala/Tuple2;)Lscala/Tuple2;
  1: #155 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #139 (Ljava/lang/Object;)Ljava/lang/Object;
      #173 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$6:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
      #146 (Lscala/Tuple2;)Lscala/Tuple2;
      #147 5
      #148 1
      #146 (Lscala/Tuple2;)Lscala/Tuple2;
  2: #155 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #139 (Ljava/lang/Object;)Ljava/lang/Object;
      #187 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$7$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #189 (Lscala/Tuple2;)Ljava/lang/Object;
      #147 5
      #148 1
      #189 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #155 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #139 (Ljava/lang/Object;)Ljava/lang/Object;
      #205 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$8:(Lscala/Tuple2;)Ljava/lang/Object;
      #189 (Lscala/Tuple2;)Ljava/lang/Object;
      #147 5
      #148 1
      #189 (Lscala/Tuple2;)Ljava/lang/Object;
  4: #155 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #252 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #257 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$3$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #252 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #148 1
  5: #155 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #139 (Ljava/lang/Object;)Ljava/lang/Object;
      #291 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$4$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #139 (Ljava/lang/Object;)Ljava/lang/Object;
      #148 1
  6: #394 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #144 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$5:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
      #173 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$6:(Lscala/Function1;Lscala/Tuple2;)Lscala/Tuple2;
      #187 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$7$adapted:([Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #205 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$mParMap$8:(Lscala/Tuple2;)Ljava/lang/Object;
      #257 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$3$adapted:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #291 REF_invokeStatic org/sireum/ops/MSOps_Ext$.$anonfun$sortWith$4$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x45 (unknown attribute)
   01 01 00 0D 00 8C 00 8D 01 00 AA 00 8D 01 01 46
   01 47 01 00 B7 00 B8 01 00 CA 00 BC 01 01 4A 01
   4B 01 00 FD 00 FE 01 01 59 01 5A 01 01 1F 01 20
   01 00 14 00 13 01 00 19 00 1A 01 00 F4 00 F5 01
   00 F7 00 F8 01
  Scala: length = 0x0 (unknown attribute)

