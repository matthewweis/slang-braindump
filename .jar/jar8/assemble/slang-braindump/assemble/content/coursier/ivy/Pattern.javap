Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/ivy/Pattern.class
  Last modified May 29, 2022; size 17366 bytes
  SHA-256 checksum c64c550d3f6e2a2051fbcc9cc2e9c4d92e7e4315749f3361112f104bec97bee4
  Compiled from "Pattern.scala"
public final class coursier.ivy.Pattern implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/ivy/Pattern
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 3, methods: 38, attributes: 6
Constant pool:
    #1 = Utf8               coursier/ivy/Pattern
    #2 = Class              #1            // coursier/ivy/Pattern
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               Pattern.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\t\rg\u0001B3g\u0005-D!\"a\u0001\u0001\u0005\u000b\u0007I\u0011AA\u0003\u0011)\u00119\u0007\u0001B\u0001B\u0003%\u0011q\u0001\u0005\b\u0003O\u0001A\u0011\u0001B5\u0011\u001d\u0011i\u0007\u0001C\u0001\u0005_Bq!!\u000e\u0001\t\u0003\t9\u0004C\u0004\u0003t\u0001!\tA!\u001e\t\u000f\t\u001d\u0005\u0001\"\u0001\u0003\n\"9!1\u0013\u0001\u0005\u0002\tu\u0003B\u0003BK\u0001!\u0015\r\u0011\"\u0003\u00028!9!q\u0013\u0001\u0005\u0002\te\u0005b\u0002BO\u0001\u0011\u0005!q\u0014\u0005\b\u0005G\u0003A\u0011\u0001BS\u0011\u001d\u0011I\u000b\u0001C\u0001\u0005WCq!!\u001d\u0001\t\u0003\n\u0019\bC\u0004\u0002\u0000\u0001!\tEa,\t\u000f\u0005M\u0005\u0001\"\u0011\u00034\"9\u0011\u0011\u0014\u0001\u0005B\u0005m\u0005bBAR\u0001\u0011%!q\u0017\u0005\b\u0003[\u0003A\u0011IAX\u0011\u001d\t\t\f\u0001C!\u0003gCq!!.\u0001\t\u0003\u0012Y\fC\u0004\u0002>\u0002!\tEa0\b\u000f\u0005Ma\r#\u0001\u0002\u0016\u00191QM\u001aE\u0001\u0003/Aq!a\n\u0019\t\u0003\tICB\u0004\u0002,a\t\t#!\f\t\u000f\u0005\u001d\"\u0004\"\u0001\u00020!9\u0011Q\u0007\u000e\u0007\u0002\u0005]ra\u0002B-1!\u0005\u0011\u0011\u000b\u0004\b\u0003WA\u0002\u0012AA\'\u0011\u001d\t9C\bC\u0001\u0003\u001fBq!a\u0015\u001f\t\u0007\t)F\u0002\u0004\u0002\\y\u0011\u0011Q\f\u0005\u000b\u0003?\n#Q1A\u0005\u0002\u0005]\u0002BCA1C\t\u0005\t\u0015!\u0003\u0002:!9\u0011qE\u0011\u0005\u0002\u0005\r\u0004bBA\u001bC\u0011\u0005\u0011q\u0007\u0005\b\u0003W\nC\u0011AA7\u0011\u001d\t\t(\tC!\u0003gBq!a \"\t\u0003\n\t\tC\u0004\u0002\u0014\u0006\"\t%!&\t\u000f\u0005e\u0015\u0005\"\u0011\u0002\u001c\"9\u00111U\u0011\u0005\n\u0005\u0015\u0006bBAWC\u0011\u0005\u0013q\u0016\u0005\b\u0003c\u000bC\u0011IAZ\u0011\u001d\t),\tC!\u0003oCq!!0\"\t\u0003\nylB\u0004\u0002DzA\t!!2\u0007\u000f\u0005mc\u0004#\u0001\u0002H\"9\u0011qE\u0019\u0005\u0002\u0005%\u0007bBAfc\u0011\u0005\u0011Q\u001a\u0005\n\u0003#\f\u0014\u0011!C\u0005\u0003\'4a!a7\u001f\u0005\u0005u\u0007BCApk\t\u0015\r\u0011\"\u0001\u0002b\"Q\u0011Q]\u001b\u0003\u0002\u0003\u0006I!a9\t\u000f\u0005\u001dR\u0007\"\u0001\u0002h\"9\u0011QG\u001b\u0005\u0002\u0005]\u0002bBAwk\u0011\u0005\u0011q\u001e\u0005\b\u0003c*D\u0011IA:\u0011\u001d\ty(\u000eC!\u0003gDq!a%6\t\u0003\n9\u0010C\u0004\u0002\u001aV\"\t%a\'\t\u000f\u0005\rV\u0007\"\u0003\u0002|\"9\u0011QV\u001b\u0005B\u0005=\u0006bBAYk\u0011\u0005\u00131\u0017\u0005\b\u0003k+D\u0011IA\u0000\u0011\u001d\ti,\u000eC!\u0005\u00079qAa\u0002\u001f\u0011\u0003\u0011IAB\u0004\u0002\\zA\tAa\u0003\t\u000f\u0005\u001dR\t\"\u0001\u0003\u000e!9\u00111Z#\u0005\u0002\t=\u0001bBAf\u000b\u0012\u0005!Q\u0003\u0005\b\u0003\u0017,E\u0011\u0001B\u000f\u0011\u001d\tY-\u0012C\u0001\u0005OA\u0011\"!5F\u0003\u0003%I!a5\u0007\r\u0005-cD\u0001B\u001e\u0011)\u0011I\u0004\u0014BC\u0002\u0013\u0005\u0011q\u0007\u0005\u000b\u0005{a%\u0011!Q\u0001\n\u0005e\u0002bBA\u0014\u0019\u0012\u0005!q\b\u0005\b\u0003kaE\u0011AA\u001c\u0011\u001d\u0011\u0019\u0005\u0014C\u0001\u0005\u000bBq!!\u001dM\t\u0003\n\u0019\bC\u0004\u0002\u00001#\tE!\u0013\t\u000f\u0005ME\n\"\u0011\u0003N!9\u0011\u0011\u0014\'\u0005B\u0005m\u0005bBAR\u0019\u0012%\u0011Q\u0015\u0005\b\u0003[cE\u0011IAX\u0011\u001d\t\t\f\u0014C!\u0003gCq!!.M\t\u0003\u0012\t\u0006C\u0004\u0002>2#\tE!\u0016\b\u000f\t-b\u0004#\u0001\u0003.\u00199\u00111\n\u0010\t\u0002\t=\u0002bBA\u00149\u0012\u0005!\u0011\u0007\u0005\b\u0003\u0017dF\u0011\u0001B\u001a\u0011%\t\t\u000eXA\u0001\n\u0013\t\u0019\u000eC\u0005\u0002Rz\t\t\u0011\"\u0003\u0002T\"I!1\f\rC\u0002\u0013\u0005!Q\f\u0005\t\u0005CB\u0002\u0015!\u0003\u0003`!9\u00111\u001a\r\u0005\u0002\t\r\u0004\"CAi1\u0005\u0005I\u0011BAj\u0005\u001d\u0001\u0016\r\u001e;fe:T!a\u001a5\u0002\u0007%4\u0018PC\u0001j\u0003!\u0019w.\u001e:tS\u0016\u00148\u0001A\n\u0005\u00011\u0014X\u000f\u0005\u0002na6\taNC\u0001p\u0003\u0015\u00198-\u00197b\u0013\t\thN\u0001\u0004B]f\u0014VM\u001a\t\u0003[NL!\u0001\u001e8\u0003\u000fA\u0013x\u000eZ;diB\u0011aO \b\u0003ort!\u0001_>\u000e\u0003eT!A\u001f6\u0002\rq\u0012xn\u001c;?\u0013\u0005y\u0017BA?o\u0003\u001d\u0001\u0018mY6bO\u0016L1a`A\u0001\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\tih.\u0001\u0004dQVt7n]\u000b\u0003\u0003\u000f\u0001RA^A\u0005\u0003\u001bIA!a\u0003\u0002\u0002\t\u00191+Z9\u0011\u0007\u0005=!DD\u0002\u0002\u0012]i\u0011AZ\u0001\b!\u0006$H/\u001a:o!\r\t\t\u0002G\n\u000511\fI\u0002\u0005\u0003\u0002\u001c\u0005\u0015RBAA\u000f\u0015\u0011\ty\"!\t\u0002\u0005%|\'BAA\u0012\u0003\u0011Q\u0017M^1\n\u0007}\fi\"\u0001\u0004=S:LGO\u0010\u000b\u0003\u0003+\u0011Qa\u00115v].\u001cBA\u00077skR\u0011\u0011\u0011\u0007\t\u0004\u0003gQR\"\u0001\r\u0002\rM$(/\u001b8h+\t\tI\u0004\u0005\u0003\u0002<\u0005\rc\u0002BA\u001f\u0003\u007f\u0001\"\u0001\u001f8\n\u0007\u0005\u0005c.\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u0003\u000b\n9E\u0001\u0004TiJLgn\u001a\u0006\u0004\u0003\u0003r\u0017\u0006\u0002\u000eMk\u0005\u0012QaQ8ogR\u001cBA\b7\u0002\u001aQ\u0011\u0011\u0011\u000b\t\u0004\u0003gq\u0012A\u00034s_6\u001cFO]5oOR!\u0011\u0011GA,\u0011\u001d\tI\u0006\ta\u0001\u0003s\t\u0011a\u001d\u0002\u0004-\u0006\u00148#B\u0011\u00022I,\u0018\u0001\u00028b[\u0016\fQA\\1nK\u0002\"B!!\u001a\u0002jA\u0019\u0011qM\u0011\u000e\u0003yAq!a\u0018%\u0001\u0004\tI$\u0001\u0005xSRDg*Y7f)\u0011\t)\'a\u001c\t\u000f\u0005}c\u00051\u0001\u0002:\u0005AAo\\*ue&tw\r\u0006\u0002\u0002vA!\u0011qOA?\u001b\t\tIH\u0003\u0003\u0002|\u0005\u0005\u0012\u0001\u00027b]\u001eLA!!\u0012\u0002z\u0005A1-\u00198FcV\fG\u000e\u0006\u0003\u0002\u0004\u0006%\u0005cA7\u0002\u0006&\u0019\u0011q\u00118\u0003\u000f\t{w\u000e\\3b]\"9\u00111\u0012\u0015A\u0002\u00055\u0015aA8cUB\u0019Q.a$\n\u0007\u0005EeNA\u0002B]f\fa!Z9vC2\u001cH\u0003BAB\u0003/Cq!a#*\u0001\u0004\ti)\u0001\u0005iCND7i\u001c3f)\t\ti\nE\u0002n\u0003?K1!!)o\u0005\rIe\u000e^\u0001\u0006iV\u0004H.Z\u000b\u0003\u0003O\u0003R!\\AU\u0003sI1!a+o\u0005\u0019!V\u000f\u001d7fc\u0005i\u0001O]8ek\u000e$\bK]3gSb,\"!!\u001e\u0002\u0019A\u0014x\u000eZ;di\u0006\u0013\u0018\u000e^=\u0016\u0005\u0005u\u0015A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0005\u0003\u001b\u000bI\fC\u0004\u0002<:\u0002\r!!(\u0002\u00039\f!\u0003\u001d:pIV\u001cG/\u00127f[\u0016tGOT1nKR!\u0011QOAa\u0011\u001d\tYl\fa\u0001\u0003;\u000b1AV1s!\r\t9\'M\n\u0005c1\fI\u0002\u0006\u0002\u0002F\u0006)\u0011\r\u001d9msR!\u0011QMAh\u0011\u001d\tyf\ra\u0001\u0003s\tAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!!6\u0011\t\u0005]\u0014q[\u0005\u0005\u00033\fIH\u0001\u0004PE*,7\r\u001e\u0002\u0004\u001fB$8#B\u001b\u00022I,\u0018aB2p]R,g\u000e^\u000b\u0003\u0003G\u0004RA^A\u0005\u0003c\t\u0001bY8oi\u0016tG\u000f\t\u000b\u0005\u0003S\fY\u000fE\u0002\u0002hUBq!a89\u0001\u0004\t\u0019/A\u0006xSRD7i\u001c8uK:$H\u0003BAu\u0003cDq!a8;\u0001\u0004\t\u0019\u000f\u0006\u0003\u0002\u0004\u0006U\bbBAFy\u0001\u0007\u0011Q\u0012\u000b\u0005\u0003\u0007\u000bI\u0010C\u0004\u0002\fv\u0002\r!!$\u0016\u0005\u0005u\b#B7\u0002*\u0006\rH\u0003BAG\u0005\u0003Aq!a/C\u0001\u0004\ti\n\u0006\u0003\u0002v\t\u0015\u0001bBA^\u0007\u0002\u0007\u0011QT\u0001\u0004\u001fB$\bcAA4\u000bN!Q\t\\A\r)\t\u0011I\u0001\u0006\u0003\u0002j\nE\u0001b\u0002B\n\u000f\u0002\u0007\u0011\u0011G\u0001\u0006G\",hn\u001b\u000b\u0007\u0003S\u00149B!\u0007\t\u000f\tM\u0001\n1\u0001\u00022!9!1\u0004%A\u0002\u0005E\u0012AB2ik:\\\u0017\u0007\u0006\u0005\u0002j\n}!\u0011\u0005B\u0012\u0011\u001d\u0011\u0019\"\u0013a\u0001\u0003cAqAa\u0007J\u0001\u0004\t\t\u0004C\u0004\u0003&%\u0003\r!!\r\u0002\r\rDWO\\63)\u0011\tIO!\u000b\t\u000f\u0005}\'\n1\u0001\u0002d\u0006)1i\u001c8tiB\u0019\u0011q\r/\u0014\tqc\u0017\u0011\u0004\u000b\u0003\u0005[!BA!\u000e\u00038A\u0019\u0011q\r\'\t\u000f\teb\f1\u0001\u0002:\u0005)a/\u00197vKN)A*!\rsk\u00061a/\u00197vK\u0002\"BA!\u000e\u0003B!9!\u0011H(A\u0002\u0005e\u0012!C<ji\"4\u0016\r\\;f)\u0011\u0011)Da\u0012\t\u000f\te\u0012\u000b1\u0001\u0002:Q!\u00111\u0011B&\u0011\u001d\tYi\u0015a\u0001\u0003\u001b#B!a!\u0003P!9\u00111\u0012+A\u0002\u00055E\u0003BAG\u0005\'Bq!a/Z\u0001\u0004\ti\n\u0006\u0003\u0002v\t]\u0003bBA^5\u0002\u0007\u0011QT\u0001\u0006\u0007\",hn[\u0001\bI\u00164\u0017-\u001e7u+\t\u0011y\u0006E\u0002\u0002\u0012\u0001\t\u0001\u0002Z3gCVdG\u000f\t\u000b\u0005\u0005?\u0012)\u0007C\u0004\u0002\u0004\r\u0004\r!a\u0002\u0002\u000f\rDWO\\6tAQ!!q\fB6\u0011\u001d\t\u0019a\u0001a\u0001\u0003\u000f\t1\u0002\n9mkN$3m\u001c7p]R!!q\fB9\u0011\u001d\u0011\u0019\u0002\u0002a\u0001\u0003\u001b\t1c];cgRLG/\u001e;f-\u0006\u0014\u0018.\u00192mKN$BAa\u001e\u0003~A9aO!\u001f\u0002:\u0005e\u0012\u0002\u0002B>\u0003\u0003\u0011a!R5uQ\u0016\u0014\bb\u0002B@\r\u0001\u0007!\u0011Q\u0001\nm\u0006\u0014\u0018.\u00192mKN\u0004\u0002\"a\u000f\u0003\u0004\u0006e\u0012\u0011H\u0005\u0005\u0005\u000b\u000b9EA\u0002NCB\f!b];cgRLG/\u001e;f)\u0019\u0011yFa#\u0003\u0010\"9!QR\u0004A\u0002\u0005e\u0012a\u0002<be:\u000bW.\u001a\u0005\b\u0005#;\u0001\u0019AA\u0004\u0003-\u0011X\r\u001d7bG\u0016lWM\u001c;\u0002#M,(m\u001d;jiV$X\rR3gCVdG/\u0001\u0006d_:\u001cHo\u0015;beR\f!b\u001d;beR\u001cx+\u001b;i)\u0011\t\u0019Ia\'\t\u000f\u0005e#\u00021\u0001\u0002:\u0005Y1\u000f\u001e:jaB\u0013XMZ5y)\u0011\u0011yF!)\t\u000f\u0005e3\u00021\u0001\u0002:\u0005I\u0011\r\u001a3Qe\u00164\u0017\u000e\u001f\u000b\u0005\u0005?\u00129\u000bC\u0004\u0002Z1\u0001\r!!\u000f\u0002\u0015]LG\u000f[\"ik:\\7\u000f\u0006\u0003\u0003`\t5\u0006bBA\u0002\u001b\u0001\u0007\u0011q\u0001\u000b\u0005\u0003\u0007\u0013\t\fC\u0004\u0002\f>\u0001\r!!$\u0015\t\u0005\r%Q\u0017\u0005\b\u0003\u0017\u0003\u0002\u0019AAG+\t\u0011I\fE\u0003n\u0003S\u000b9\u0001\u0006\u0003\u0002\u000e\nu\u0006bBA^+\u0001\u0007\u0011Q\u0014\u000b\u0005\u0003k\u0012\t\rC\u0004\u0002<Z\u0001\r!!(
   #13 = Utf8               coursier/ivy/Pattern$Chunk
   #14 = Class              #13           // coursier/ivy/Pattern$Chunk
   #15 = Utf8               Chunk
   #16 = Utf8               coursier/ivy/Pattern$Chunk$
   #17 = Class              #16           // coursier/ivy/Pattern$Chunk$
   #18 = Utf8
   #19 = Utf8               coursier/ivy/Pattern$Chunk$Const
   #20 = Class              #19           // coursier/ivy/Pattern$Chunk$Const
   #21 = Utf8               Const
   #22 = Utf8               coursier/ivy/Pattern$Chunk$Const$
   #23 = Class              #22           // coursier/ivy/Pattern$Chunk$Const$
   #24 = Utf8               coursier/ivy/Pattern$Chunk$Opt
   #25 = Class              #24           // coursier/ivy/Pattern$Chunk$Opt
   #26 = Utf8               Opt
   #27 = Utf8               coursier/ivy/Pattern$Chunk$Opt$
   #28 = Class              #27           // coursier/ivy/Pattern$Chunk$Opt$
   #29 = Utf8               coursier/ivy/Pattern$Chunk$Var
   #30 = Class              #29           // coursier/ivy/Pattern$Chunk$Var
   #31 = Utf8               Var
   #32 = Utf8               coursier/util/Traverse$TraverseOps
   #33 = Class              #32           // coursier/util/Traverse$TraverseOps
   #34 = Utf8               coursier/util/Traverse
   #35 = Class              #34           // coursier/util/Traverse
   #36 = Utf8               TraverseOps
   #37 = Utf8               coursier/util/ValidationNel$FailureBuilder
   #38 = Class              #37           // coursier/util/ValidationNel$FailureBuilder
   #39 = Utf8               coursier/util/ValidationNel
   #40 = Class              #39           // coursier/util/ValidationNel
   #41 = Utf8               FailureBuilder
   #42 = Utf8               coursier/util/ValidationNel$SuccessBuilder
   #43 = Class              #42           // coursier/util/ValidationNel$SuccessBuilder
   #44 = Utf8               SuccessBuilder
   #45 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #46 = Class              #45           // java/lang/invoke/MethodHandles$Lookup
   #47 = Utf8               java/lang/invoke/MethodHandles
   #48 = Class              #47           // java/lang/invoke/MethodHandles
   #49 = Utf8               Lookup
   #50 = Utf8               constStart
   #51 = Utf8               Ljava/lang/String;
   #52 = Utf8               chunks
   #53 = Utf8               Lscala/collection/immutable/Seq;
   #54 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;
   #55 = Utf8               bitmap$0
   #56 = Utf8               Z
   #57 = Utf8               apply
   #58 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
   #59 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;)Lcoursier/ivy/Pattern;
   #60 = Utf8               coursier/ivy/Pattern$
   #61 = Class              #60           // coursier/ivy/Pattern$
   #62 = Utf8               MODULE$
   #63 = Utf8               Lcoursier/ivy/Pattern$;
   #64 = NameAndType        #62:#63       // MODULE$:Lcoursier/ivy/Pattern$;
   #65 = Fieldref           #61.#64       // coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
   #66 = NameAndType        #57:#58       // apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
   #67 = Methodref          #61.#66       // coursier/ivy/Pattern$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
   #68 = Utf8               default
   #69 = Utf8               ()Lcoursier/ivy/Pattern;
   #70 = NameAndType        #68:#69       // default:()Lcoursier/ivy/Pattern;
   #71 = Methodref          #61.#70       // coursier/ivy/Pattern$.default:()Lcoursier/ivy/Pattern;
   #72 = Utf8               productIterator
   #73 = Utf8               ()Lscala/collection/Iterator;
   #74 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #75 = Utf8               productIterator$
   #76 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #77 = NameAndType        #75:#76       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #78 = InterfaceMethodref #6.#77        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #79 = Utf8               this
   #80 = Utf8               Lcoursier/ivy/Pattern;
   #81 = Utf8               productElementNames
   #82 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #83 = Utf8               productElementNames$
   #84 = NameAndType        #83:#76       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #85 = InterfaceMethodref #6.#84        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #86 = Utf8               ()Lscala/collection/immutable/Seq;
   #87 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;
   #88 = NameAndType        #52:#53       // chunks:Lscala/collection/immutable/Seq;
   #89 = Fieldref           #2.#88        // coursier/ivy/Pattern.chunks:Lscala/collection/immutable/Seq;
   #90 = Utf8               $plus$colon
   #91 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Lcoursier/ivy/Pattern;
   #92 = Utf8               chunk
   #93 = NameAndType        #52:#86       // chunks:()Lscala/collection/immutable/Seq;
   #94 = Methodref          #2.#93        // coursier/ivy/Pattern.chunks:()Lscala/collection/immutable/Seq;
   #95 = Utf8               scala/collection/immutable/Seq
   #96 = Class              #95           // scala/collection/immutable/Seq
   #97 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #98 = NameAndType        #90:#97       // $plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
   #99 = InterfaceMethodref #96.#98       // scala/collection/immutable/Seq.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
  #100 = Utf8               Lcoursier/ivy/Pattern$Chunk;
  #101 = Utf8               string
  #102 = Utf8               ()Ljava/lang/String;
  #103 = MethodType         #97           //  (Ljava/lang/Object;)Ljava/lang/Object;
  #104 = Utf8               $anonfun$string$2
  #105 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #106 = NameAndType        #104:#105     // $anonfun$string$2:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #107 = Methodref          #2.#106       // coursier/ivy/Pattern.$anonfun$string$2:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #108 = MethodHandle       6:#107        // REF_invokeStatic coursier/ivy/Pattern.$anonfun$string$2:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #109 = MethodType         #105          //  (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  #110 = Integer            5
  #111 = Integer            1
  #112 = Utf8               java/lang/invoke/LambdaMetafactory
  #113 = Class              #112          // java/lang/invoke/LambdaMetafactory
  #114 = Utf8               altMetafactory
  #115 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #116 = NameAndType        #114:#115     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #117 = Methodref          #113.#116     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #118 = MethodHandle       6:#117        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #119 = Utf8               ()Lscala/Function1;
  #120 = NameAndType        #57:#119      // apply:()Lscala/Function1;
  #121 = InvokeDynamic      #0:#120       // #0:apply:()Lscala/Function1;
  #122 = Utf8               map
  #123 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #124 = NameAndType        #122:#123     // map:(Lscala/Function1;)Ljava/lang/Object;
  #125 = InterfaceMethodref #96.#124      // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #126 = Utf8               scala/collection/IterableOnceOps
  #127 = Class              #126          // scala/collection/IterableOnceOps
  #128 = Utf8               mkString
  #129 = NameAndType        #128:#102     // mkString:()Ljava/lang/String;
  #130 = InterfaceMethodref #127.#129     // scala/collection/IterableOnceOps.mkString:()Ljava/lang/String;
  #131 = Utf8               substituteVariables
  #132 = Utf8               (Lscala/collection/immutable/Map;)Lscala/util/Either;
  #133 = Utf8               (Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;)Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;
  #134 = Utf8               variables
  #135 = Utf8               helper$1
  #136 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;)Lcoursier/util/ValidationNel;
  #137 = NameAndType        #135:#136     // helper$1:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;)Lcoursier/util/ValidationNel;
  #138 = Methodref          #2.#137       // coursier/ivy/Pattern.helper$1:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;)Lcoursier/util/ValidationNel;
  #139 = Utf8               either
  #140 = Utf8               ()Lscala/util/Either;
  #141 = NameAndType        #139:#140     // either:()Lscala/util/Either;
  #142 = Methodref          #40.#141      // coursier/util/ValidationNel.either:()Lscala/util/Either;
  #143 = Utf8               scala/util/Left
  #144 = Class              #143          // scala/util/Left
  #145 = Utf8               value
  #146 = Utf8               ()Ljava/lang/Object;
  #147 = NameAndType        #145:#146     // value:()Ljava/lang/Object;
  #148 = Methodref          #144.#147     // scala/util/Left.value:()Ljava/lang/Object;
  #149 = Utf8               scala/collection/immutable/$colon$colon
  #150 = Class              #149          // scala/collection/immutable/$colon$colon
  #151 = Utf8               scala/package$
  #152 = Class              #151          // scala/package$
  #153 = Utf8               Lscala/package$;
  #154 = NameAndType        #62:#153      // MODULE$:Lscala/package$;
  #155 = Fieldref           #152.#154     // scala/package$.MODULE$:Lscala/package$;
  #156 = Utf8               Left
  #157 = Utf8               ()Lscala/util/Left$;
  #158 = NameAndType        #156:#157     // Left:()Lscala/util/Left$;
  #159 = Methodref          #152.#158     // scala/package$.Left:()Lscala/util/Left$;
  #160 = Utf8               java/lang/StringBuilder
  #161 = Class              #160          // java/lang/StringBuilder
  #162 = Integer            21
  #163 = Utf8               <init>
  #164 = Utf8               (I)V
  #165 = NameAndType        #163:#164     // "<init>":(I)V
  #166 = Methodref          #161.#165     // java/lang/StringBuilder."<init>":(I)V
  #167 = Utf8               Variables not found:
  #168 = String             #167          // Variables not found:
  #169 = Utf8               append
  #170 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #171 = NameAndType        #169:#170     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #172 = Methodref          #161.#171     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #173 = Utf8               ,
  #174 = String             #173          // ,
  #175 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #176 = NameAndType        #128:#175     // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #177 = Methodref          #150.#176     // scala/collection/immutable/$colon$colon.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #178 = Utf8               toString
  #179 = NameAndType        #178:#102     // toString:()Ljava/lang/String;
  #180 = Methodref          #161.#179     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #181 = Utf8               scala/util/Left$
  #182 = Class              #181          // scala/util/Left$
  #183 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #184 = NameAndType        #57:#183      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #185 = Methodref          #182.#184     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #186 = Utf8               scala/util/Either
  #187 = Class              #186          // scala/util/Either
  #188 = Utf8               scala/util/Right
  #189 = Class              #188          // scala/util/Right
  #190 = Methodref          #189.#147     // scala/util/Right.value:()Ljava/lang/Object;
  #191 = Utf8               scala/collection/mutable/StringBuilder
  #192 = Class              #191          // scala/collection/mutable/StringBuilder
  #193 = Utf8               ()V
  #194 = NameAndType        #163:#193     // "<init>":()V
  #195 = Methodref          #192.#194     // scala/collection/mutable/StringBuilder."<init>":()V
  #196 = Utf8               $anonfun$substituteVariables$3
  #197 = Utf8               (Lscala/collection/mutable/StringBuilder;Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
  #198 = NameAndType        #196:#197     // $anonfun$substituteVariables$3:(Lscala/collection/mutable/StringBuilder;Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
  #199 = Methodref          #2.#198       // coursier/ivy/Pattern.$anonfun$substituteVariables$3:(Lscala/collection/mutable/StringBuilder;Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
  #200 = MethodHandle       6:#199        // REF_invokeStatic coursier/ivy/Pattern.$anonfun$substituteVariables$3:(Lscala/collection/mutable/StringBuilder;Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
  #201 = Utf8               (Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
  #202 = MethodType         #201          //  (Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
  #203 = Utf8               (Lscala/collection/mutable/StringBuilder;)Lscala/Function1;
  #204 = NameAndType        #57:#203      // apply:(Lscala/collection/mutable/StringBuilder;)Lscala/Function1;
  #205 = InvokeDynamic      #1:#204       // #1:apply:(Lscala/collection/mutable/StringBuilder;)Lscala/Function1;
  #206 = Utf8               foreach
  #207 = Utf8               (Lscala/Function1;)V
  #208 = NameAndType        #206:#207     // foreach:(Lscala/Function1;)V
  #209 = InterfaceMethodref #96.#208      // scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
  #210 = Utf8               Right
  #211 = Utf8               ()Lscala/util/Right$;
  #212 = NameAndType        #210:#211     // Right:()Lscala/util/Right$;
  #213 = Methodref          #152.#212     // scala/package$.Right:()Lscala/util/Right$;
  #214 = Utf8               result
  #215 = NameAndType        #214:#102     // result:()Ljava/lang/String;
  #216 = Methodref          #192.#215     // scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
  #217 = Utf8               scala/util/Right$
  #218 = Class              #217          // scala/util/Right$
  #219 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #220 = NameAndType        #57:#219      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #221 = Methodref          #218.#220     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #222 = Utf8               scala/MatchError
  #223 = Class              #222          // scala/MatchError
  #224 = Utf8               (Ljava/lang/Object;)V
  #225 = NameAndType        #163:#224     // "<init>":(Ljava/lang/Object;)V
  #226 = Methodref          #223.#225     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #227 = Utf8               scala/collection/immutable/Map
  #228 = Class              #227          // scala/collection/immutable/Map
  #229 = Utf8               notFoundVariables
  #230 = Utf8               Lscala/collection/immutable/$colon$colon;
  #231 = Utf8               b
  #232 = Utf8               Lscala/collection/mutable/StringBuilder;
  #233 = Utf8               constants
  #234 = Utf8               validation
  #235 = Utf8               Lcoursier/util/ValidationNel;
  #236 = Utf8               Lscala/collection/immutable/Map;
  #237 = Utf8               substitute
  #238 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
  #239 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;)Lcoursier/ivy/Pattern;
  #240 = Utf8               varName
  #241 = Utf8               replacement
  #242 = Utf8               $anonfun$substitute$1
  #243 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
  #244 = NameAndType        #242:#243     // $anonfun$substitute$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
  #245 = Methodref          #2.#244       // coursier/ivy/Pattern.$anonfun$substitute$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
  #246 = MethodHandle       6:#245        // REF_invokeStatic coursier/ivy/Pattern.$anonfun$substitute$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
  #247 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
  #248 = MethodType         #247          //  (Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
  #249 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #250 = NameAndType        #57:#249      // apply:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #251 = InvokeDynamic      #2:#250       // #2:apply:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #252 = Utf8               flatMap
  #253 = NameAndType        #252:#123     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #254 = InterfaceMethodref #96.#253      // scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #255 = Utf8               substituteDefault
  #256 = Utf8               defaultPattern
  #257 = String             #256          // defaultPattern
  #258 = NameAndType        #237:#238     // substitute:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
  #259 = Methodref          #2.#258       // coursier/ivy/Pattern.substitute:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
  #260 = Utf8               constStart$lzycompute
  #261 = NameAndType        #55:#56       // bitmap$0:Z
  #262 = Fieldref           #2.#261       // coursier/ivy/Pattern.bitmap$0:Z
  #263 = Utf8               iterator
  #264 = NameAndType        #263:#73      // iterator:()Lscala/collection/Iterator;
  #265 = InterfaceMethodref #96.#264      // scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
  #266 = Utf8               $anonfun$constStart$1
  #267 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
  #268 = NameAndType        #266:#267     // $anonfun$constStart$1:(Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
  #269 = Methodref          #2.#268       // coursier/ivy/Pattern.$anonfun$constStart$1:(Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
  #270 = MethodHandle       6:#269        // REF_invokeStatic coursier/ivy/Pattern.$anonfun$constStart$1:(Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
  #271 = MethodType         #267          //  (Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
  #272 = InvokeDynamic      #3:#120       // #3:apply:()Lscala/Function1;
  #273 = Utf8               scala/collection/Iterator
  #274 = Class              #273          // scala/collection/Iterator
  #275 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #276 = NameAndType        #122:#275     // map:(Lscala/Function1;)Lscala/collection/Iterator;
  #277 = InterfaceMethodref #274.#276     // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
  #278 = Utf8               $anonfun$constStart$2$adapted
  #279 = Utf8               (Lscala/Option;)Ljava/lang/Object;
  #280 = NameAndType        #278:#279     // $anonfun$constStart$2$adapted:(Lscala/Option;)Ljava/lang/Object;
  #281 = Methodref          #2.#280       // coursier/ivy/Pattern.$anonfun$constStart$2$adapted:(Lscala/Option;)Ljava/lang/Object;
  #282 = MethodHandle       6:#281        // REF_invokeStatic coursier/ivy/Pattern.$anonfun$constStart$2$adapted:(Lscala/Option;)Ljava/lang/Object;
  #283 = MethodType         #279          //  (Lscala/Option;)Ljava/lang/Object;
  #284 = InvokeDynamic      #4:#120       // #4:apply:()Lscala/Function1;
  #285 = Utf8               takeWhile
  #286 = NameAndType        #285:#275     // takeWhile:(Lscala/Function1;)Lscala/collection/Iterator;
  #287 = InterfaceMethodref #274.#286     // scala/collection/Iterator.takeWhile:(Lscala/Function1;)Lscala/collection/Iterator;
  #288 = Utf8               scala/Predef$
  #289 = Class              #288          // scala/Predef$
  #290 = Utf8               Lscala/Predef$;
  #291 = NameAndType        #62:#290      // MODULE$:Lscala/Predef$;
  #292 = Fieldref           #289.#291     // scala/Predef$.MODULE$:Lscala/Predef$;
  #293 = Utf8               $conforms
  #294 = NameAndType        #293:#119     // $conforms:()Lscala/Function1;
  #295 = Methodref          #289.#294     // scala/Predef$.$conforms:()Lscala/Function1;
  #296 = Utf8               flatten
  #297 = NameAndType        #296:#275     // flatten:(Lscala/Function1;)Lscala/collection/Iterator;
  #298 = InterfaceMethodref #274.#297     // scala/collection/Iterator.flatten:(Lscala/Function1;)Lscala/collection/Iterator;
  #299 = InterfaceMethodref #274.#129     // scala/collection/Iterator.mkString:()Ljava/lang/String;
  #300 = NameAndType        #50:#51       // constStart:Ljava/lang/String;
  #301 = Fieldref           #2.#300       // coursier/ivy/Pattern.constStart:Ljava/lang/String;
  #302 = Utf8               java/lang/Throwable
  #303 = Class              #302          // java/lang/Throwable
  #304 = NameAndType        #260:#102     // constStart$lzycompute:()Ljava/lang/String;
  #305 = Methodref          #2.#304       // coursier/ivy/Pattern.constStart$lzycompute:()Ljava/lang/String;
  #306 = Utf8               java/lang/String
  #307 = Class              #306          // java/lang/String
  #308 = Utf8               startsWith
  #309 = Utf8               (Ljava/lang/String;)Z
  #310 = Utf8               s
  #311 = NameAndType        #50:#102      // constStart:()Ljava/lang/String;
  #312 = Methodref          #2.#311       // coursier/ivy/Pattern.constStart:()Ljava/lang/String;
  #313 = NameAndType        #308:#309     // startsWith:(Ljava/lang/String;)Z
  #314 = Methodref          #307.#313     // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #315 = Utf8               stripPrefix
  #316 = Utf8               (Ljava/lang/String;)Lcoursier/ivy/Pattern;
  #317 = Utf8               Lcoursier/ivy/Pattern$Chunk$Const$;
  #318 = NameAndType        #62:#317      // MODULE$:Lcoursier/ivy/Pattern$Chunk$Const$;
  #319 = Fieldref           #23.#318      // coursier/ivy/Pattern$Chunk$Const$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Const$;
  #320 = Utf8               scala/collection/StringOps$
  #321 = Class              #320          // scala/collection/StringOps$
  #322 = Utf8               Lscala/collection/StringOps$;
  #323 = NameAndType        #62:#322      // MODULE$:Lscala/collection/StringOps$;
  #324 = Fieldref           #321.#323     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #325 = Utf8               augmentString
  #326 = NameAndType        #325:#175     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #327 = Methodref          #289.#326     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #328 = Utf8               stripPrefix$extension
  #329 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #330 = NameAndType        #328:#329     // stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #331 = Methodref          #321.#330     // scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #332 = Utf8               (Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
  #333 = NameAndType        #57:#332      // apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
  #334 = Methodref          #23.#333      // coursier/ivy/Pattern$Chunk$Const$.apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
  #335 = Utf8               $anonfun$stripPrefix$1$adapted
  #336 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #337 = NameAndType        #335:#336     // $anonfun$stripPrefix$1$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #338 = Methodref          #2.#337       // coursier/ivy/Pattern.$anonfun$stripPrefix$1$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #339 = MethodHandle       6:#338        // REF_invokeStatic coursier/ivy/Pattern.$anonfun$stripPrefix$1$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #340 = MethodType         #336          //  (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  #341 = InvokeDynamic      #5:#120       // #5:apply:()Lscala/Function1;
  #342 = Utf8               dropWhile
  #343 = NameAndType        #342:#123     // dropWhile:(Lscala/Function1;)Ljava/lang/Object;
  #344 = InterfaceMethodref #96.#343      // scala/collection/immutable/Seq.dropWhile:(Lscala/Function1;)Ljava/lang/Object;
  #345 = Utf8               scala/collection/SeqOps
  #346 = Class              #345          // scala/collection/SeqOps
  #347 = InterfaceMethodref #346.#98      // scala/collection/SeqOps.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
  #348 = Utf8               addPrefix
  #349 = Utf8               withChunks
  #350 = Utf8               (Lscala/collection/immutable/Seq;)V
  #351 = NameAndType        #163:#350     // "<init>":(Lscala/collection/immutable/Seq;)V
  #352 = Methodref          #2.#351       // coursier/ivy/Pattern."<init>":(Lscala/collection/immutable/Seq;)V
  #353 = Utf8               Pattern(
  #354 = String             #353          // Pattern(
  #355 = Utf8               (Ljava/lang/String;)V
  #356 = NameAndType        #163:#355     // "<init>":(Ljava/lang/String;)V
  #357 = Methodref          #161.#356     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #358 = Utf8               valueOf
  #359 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #360 = NameAndType        #358:#359     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #361 = Methodref          #307.#360     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #362 = Utf8               )
  #363 = String             #362          // )
  #364 = Utf8               Ljava/lang/StringBuilder;
  #365 = Utf8               canEqual
  #366 = Utf8               (Ljava/lang/Object;)Z
  #367 = Utf8               obj
  #368 = Utf8               Ljava/lang/Object;
  #369 = Utf8               equals
  #370 = NameAndType        #365:#366     // canEqual:(Ljava/lang/Object;)Z
  #371 = Methodref          #2.#370       // coursier/ivy/Pattern.canEqual:(Ljava/lang/Object;)Z
  #372 = NameAndType        #369:#366     // equals:(Ljava/lang/Object;)Z
  #373 = Methodref          #4.#372       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #374 = Utf8               other
  #375 = Utf8               hashCode
  #376 = Utf8               ()I
  #377 = Utf8               Pattern
  #378 = String             #377          // Pattern
  #379 = Utf8               scala/runtime/Statics
  #380 = Class              #379          // scala/runtime/Statics
  #381 = Utf8               anyHash
  #382 = Utf8               (Ljava/lang/Object;)I
  #383 = NameAndType        #381:#382     // anyHash:(Ljava/lang/Object;)I
  #384 = Methodref          #380.#383     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #385 = Utf8               code
  #386 = Utf8               I
  #387 = Utf8               tuple
  #388 = Utf8               ()Lscala/Tuple1;
  #389 = Utf8               ()Lscala/Tuple1<Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;>;
  #390 = Utf8               scala/Tuple1
  #391 = Class              #390          // scala/Tuple1
  #392 = Methodref          #391.#225     // scala/Tuple1."<init>":(Ljava/lang/Object;)V
  #393 = Utf8               productPrefix
  #394 = Utf8               productArity
  #395 = Utf8               productElement
  #396 = Utf8               (I)Ljava/lang/Object;
  #397 = Utf8               n
  #398 = Utf8               java/lang/IndexOutOfBoundsException
  #399 = Class              #398          // java/lang/IndexOutOfBoundsException
  #400 = Utf8               scala/runtime/BoxesRunTime
  #401 = Class              #400          // scala/runtime/BoxesRunTime
  #402 = Utf8               boxToInteger
  #403 = Utf8               (I)Ljava/lang/Integer;
  #404 = NameAndType        #402:#403     // boxToInteger:(I)Ljava/lang/Integer;
  #405 = Methodref          #401.#404     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #406 = Methodref          #4.#179       // java/lang/Object.toString:()Ljava/lang/String;
  #407 = Methodref          #399.#356     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #408 = Utf8               productElementName
  #409 = Utf8               (I)Ljava/lang/String;
  #410 = String             #52           // chunks
  #411 = Utf8               x$3
  #412 = NameAndType        #101:#102     // string:()Ljava/lang/String;
  #413 = Methodref          #14.#412      // coursier/ivy/Pattern$Chunk.string:()Ljava/lang/String;
  #414 = Utf8               $anonfun$substituteVariables$1
  #415 = Utf8               (Lscala/collection/immutable/Map;Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
  #416 = Utf8               variables$1
  #417 = Utf8               x0$1
  #418 = Utf8               name
  #419 = NameAndType        #418:#102     // name:()Ljava/lang/String;
  #420 = Methodref          #30.#419      // coursier/ivy/Pattern$Chunk$Var.name:()Ljava/lang/String;
  #421 = Utf8               get
  #422 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #423 = NameAndType        #421:#422     // get:(Ljava/lang/Object;)Lscala/Option;
  #424 = InterfaceMethodref #228.#423     // scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
  #425 = Utf8               scala/Some
  #426 = Class              #425          // scala/Some
  #427 = Methodref          #426.#147     // scala/Some.value:()Ljava/lang/Object;
  #428 = Utf8               coursier/util/ValidationNel$
  #429 = Class              #428          // coursier/util/ValidationNel$
  #430 = Utf8               Lcoursier/util/ValidationNel$;
  #431 = NameAndType        #62:#430      // MODULE$:Lcoursier/util/ValidationNel$;
  #432 = Fieldref           #429.#431     // coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
  #433 = Utf8               success
  #434 = Utf8               ()Lcoursier/util/ValidationNel$SuccessBuilder;
  #435 = NameAndType        #433:#434     // success:()Lcoursier/util/ValidationNel$SuccessBuilder;
  #436 = Methodref          #429.#435     // coursier/util/ValidationNel$.success:()Lcoursier/util/ValidationNel$SuccessBuilder;
  #437 = Utf8               scala/collection/immutable/Nil$
  #438 = Class              #437          // scala/collection/immutable/Nil$
  #439 = Utf8               Lscala/collection/immutable/Nil$;
  #440 = NameAndType        #62:#439      // MODULE$:Lscala/collection/immutable/Nil$;
  #441 = Fieldref           #438.#440     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #442 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #443 = NameAndType        #163:#442     // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #444 = Methodref          #150.#443     // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #445 = Utf8               (Ljava/lang/Object;)Lcoursier/util/ValidationNel;
  #446 = NameAndType        #57:#445      // apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
  #447 = Methodref          #43.#446      // coursier/util/ValidationNel$SuccessBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
  #448 = Utf8               scala/Option
  #449 = Class              #448          // scala/Option
  #450 = Utf8               scala/None$
  #451 = Class              #450          // scala/None$
  #452 = Utf8               Lscala/None$;
  #453 = NameAndType        #62:#452      // MODULE$:Lscala/None$;
  #454 = Fieldref           #451.#453     // scala/None$.MODULE$:Lscala/None$;
  #455 = Utf8               failure
  #456 = Utf8               ()Lcoursier/util/ValidationNel$FailureBuilder;
  #457 = NameAndType        #455:#456     // failure:()Lcoursier/util/ValidationNel$FailureBuilder;
  #458 = Methodref          #429.#457     // coursier/util/ValidationNel$.failure:()Lcoursier/util/ValidationNel$FailureBuilder;
  #459 = Methodref          #38.#446      // coursier/util/ValidationNel$FailureBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
  #460 = Utf8               content
  #461 = NameAndType        #460:#86      // content:()Lscala/collection/immutable/Seq;
  #462 = Methodref          #25.#461      // coursier/ivy/Pattern$Chunk$Opt.content:()Lscala/collection/immutable/Seq;
  #463 = Utf8               isSuccess
  #464 = Utf8               ()Z
  #465 = NameAndType        #463:#464     // isSuccess:()Z
  #466 = Methodref          #40.#465      // coursier/util/ValidationNel.isSuccess:()Z
  #467 = Utf8               res
  #468 = Utf8               $anonfun$substituteVariables$2
  #469 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #470 = Utf8               x$4
  #471 = NameAndType        #296:#123     // flatten:(Lscala/Function1;)Ljava/lang/Object;
  #472 = InterfaceMethodref #96.#471      // scala/collection/immutable/Seq.flatten:(Lscala/Function1;)Ljava/lang/Object;
  #473 = Utf8               coursier/util/Traverse$
  #474 = Class              #473          // coursier/util/Traverse$
  #475 = Utf8               Lcoursier/util/Traverse$;
  #476 = NameAndType        #62:#475      // MODULE$:Lcoursier/util/Traverse$;
  #477 = Fieldref           #474.#476     // coursier/util/Traverse$.MODULE$:Lcoursier/util/Traverse$;
  #478 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
  #479 = NameAndType        #36:#478      // TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
  #480 = Methodref          #474.#479     // coursier/util/Traverse$.TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
  #481 = NameAndType        #414:#415     // $anonfun$substituteVariables$1:(Lscala/collection/immutable/Map;Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
  #482 = Methodref          #2.#481       // coursier/ivy/Pattern.$anonfun$substituteVariables$1:(Lscala/collection/immutable/Map;Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
  #483 = MethodHandle       6:#482        // REF_invokeStatic coursier/ivy/Pattern.$anonfun$substituteVariables$1:(Lscala/collection/immutable/Map;Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
  #484 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
  #485 = MethodType         #484          //  (Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
  #486 = Utf8               (Lscala/collection/immutable/Map;)Lscala/Function1;
  #487 = NameAndType        #57:#486      // apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
  #488 = InvokeDynamic      #6:#487       // #6:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
  #489 = Utf8               validationNelTraverse
  #490 = Utf8               (Lscala/Function1;)Lcoursier/util/ValidationNel;
  #491 = NameAndType        #489:#490     // validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #492 = Methodref          #33.#491      // coursier/util/Traverse$TraverseOps.validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #493 = NameAndType        #468:#469     // $anonfun$substituteVariables$2:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #494 = Methodref          #2.#493       // coursier/ivy/Pattern.$anonfun$substituteVariables$2:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #495 = MethodHandle       6:#494        // REF_invokeStatic coursier/ivy/Pattern.$anonfun$substituteVariables$2:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #496 = MethodType         #469          //  (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #497 = InvokeDynamic      #7:#120       // #7:apply:()Lscala/Function1;
  #498 = NameAndType        #122:#490     // map:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #499 = Methodref          #40.#498      // coursier/util/ValidationNel.map:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #500 = Utf8               b$1
  #501 = Utf8               x$5
  #502 = NameAndType        #145:#102     // value:()Ljava/lang/String;
  #503 = Methodref          #20.#502      // coursier/ivy/Pattern$Chunk$Const.value:()Ljava/lang/String;
  #504 = Utf8               $plus$plus$eq
  #505 = Utf8               (Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #506 = NameAndType        #504:#505     // $plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #507 = Methodref          #192.#506     // scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #508 = Utf8               Lcoursier/ivy/Pattern$Chunk$Const;
  #509 = Utf8               varName$1
  #510 = Utf8               replacement$1
  #511 = Utf8               Lcoursier/ivy/Pattern$Chunk$Opt$;
  #512 = NameAndType        #62:#511      // MODULE$:Lcoursier/ivy/Pattern$Chunk$Opt$;
  #513 = Fieldref           #28.#512      // coursier/ivy/Pattern$Chunk$Opt$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Opt$;
  #514 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern$Chunk$Opt;
  #515 = NameAndType        #57:#514      // apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern$Chunk$Opt;
  #516 = Methodref          #28.#515      // coursier/ivy/Pattern$Chunk$Opt$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern$Chunk$Opt;
  #517 = Methodref          #426.#225     // scala/Some."<init>":(Ljava/lang/Object;)V
  #518 = Utf8               $anonfun$constStart$2
  #519 = Utf8               (Lscala/Option;)Z
  #520 = Utf8               x$6
  #521 = Utf8               nonEmpty
  #522 = NameAndType        #521:#464     // nonEmpty:()Z
  #523 = Methodref          #449.#522     // scala/Option.nonEmpty:()Z
  #524 = Utf8               Lscala/Option;
  #525 = Utf8               $anonfun$stripPrefix$1
  #526 = Utf8               (Lcoursier/ivy/Pattern$Chunk;)Z
  #527 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;)V
  #528 = Methodref          #4.#194       // java/lang/Object."<init>":()V
  #529 = Utf8               $init$
  #530 = Utf8               (Lscala/Product;)V
  #531 = NameAndType        #529:#530     // $init$:(Lscala/Product;)V
  #532 = InterfaceMethodref #6.#531       // scala/Product.$init$:(Lscala/Product;)V
  #533 = NameAndType        #518:#519     // $anonfun$constStart$2:(Lscala/Option;)Z
  #534 = Methodref          #2.#533       // coursier/ivy/Pattern.$anonfun$constStart$2:(Lscala/Option;)Z
  #535 = Utf8               boxToBoolean
  #536 = Utf8               (Z)Ljava/lang/Boolean;
  #537 = NameAndType        #535:#536     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #538 = Methodref          #401.#537     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #539 = NameAndType        #525:#526     // $anonfun$stripPrefix$1:(Lcoursier/ivy/Pattern$Chunk;)Z
  #540 = Methodref          #2.#539       // coursier/ivy/Pattern.$anonfun$stripPrefix$1:(Lcoursier/ivy/Pattern$Chunk;)Z
  #541 = Utf8               $deserializeLambda$
  #542 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #543 = Utf8               scala/runtime/LambdaDeserialize
  #544 = Class              #543          // scala/runtime/LambdaDeserialize
  #545 = Utf8               bootstrap
  #546 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #547 = NameAndType        #545:#546     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #548 = Methodref          #544.#547     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #549 = MethodHandle       6:#548        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #550 = Utf8               lambdaDeserialize
  #551 = NameAndType        #550:#542     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #552 = InvokeDynamic      #8:#551       // #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #553 = Utf8               Signature
  #554 = Utf8               Code
  #555 = Utf8               MethodParameters
  #556 = Utf8               LineNumberTable
  #557 = Utf8               LocalVariableTable
  #558 = Utf8               StackMapTable
  #559 = Utf8               InnerClasses
  #560 = Utf8               SourceFile
  #561 = Utf8               RuntimeVisibleAnnotations
  #562 = Utf8               BootstrapMethods
  #563 = Utf8               ScalaInlineInfo
  #564 = Utf8               ScalaSig
{
  private java.lang.String constStart;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private final scala.collection.immutable.Seq<coursier.ivy.Pattern$Chunk> chunks;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #54                          // Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;

  private volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static coursier.ivy.Pattern apply(scala.collection.immutable.Seq<coursier.ivy.Pattern$Chunk>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #65                 // Field coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
         3: aload_0
         4: invokevirtual #67                 // Method coursier/ivy/Pattern$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
         7: areturn
    Signature: #59                          // (Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;)Lcoursier/ivy/Pattern;
    MethodParameters:
      Name                           Flags
      chunks                         final

  public static coursier.ivy.Pattern default();
    descriptor: ()Lcoursier/ivy/Pattern;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #65                 // Field coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
         3: invokevirtual #71                 // Method coursier/ivy/Pattern$.default:()Lcoursier/ivy/Pattern;
         6: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #78                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/Pattern;
    Signature: #74                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #85                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/Pattern;
    Signature: #82                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public scala.collection.immutable.Seq<coursier.ivy.Pattern$Chunk> chunks();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #89                 // Field chunks:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/ivy/Pattern;
    Signature: #87                          // ()Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;

  public coursier.ivy.Pattern $plus$colon(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Lcoursier/ivy/Pattern;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #65                 // Field coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
         3: aload_1
         4: astore_2
         5: aload_0
         6: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
         9: aload_2
        10: invokeinterface #99,  2           // InterfaceMethod scala/collection/immutable/Seq.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
        15: checkcast     #96                 // class scala/collection/immutable/Seq
        18: invokevirtual #67                 // Method coursier/ivy/Pattern$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
        21: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lcoursier/ivy/Pattern;
            0      22     1 chunk   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      chunk                          final

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
         4: invokedynamic #121,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
         9: invokeinterface #125,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        14: checkcast     #127                // class scala/collection/IterableOnceOps
        17: invokeinterface #130,  1          // InterfaceMethod scala/collection/IterableOnceOps.mkString:()Ljava/lang/String;
        22: areturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/ivy/Pattern;

  public scala.util.Either<java.lang.String, java.lang.String> substituteVariables(scala.collection.immutable.Map<java.lang.String, java.lang.String>);
    descriptor: (Lscala/collection/immutable/Map;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=10, args_size=2
         0: aload_0
         1: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
         4: aload_1
         5: invokestatic  #138                // Method helper$1:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;)Lcoursier/util/ValidationNel;
         8: astore_3
         9: aload_3
        10: invokevirtual #142                // Method coursier/util/ValidationNel.either:()Lscala/util/Either;
        13: astore        4
        15: aload         4
        17: instanceof    #144                // class scala/util/Left
        20: ifeq          80
        23: aload         4
        25: checkcast     #144                // class scala/util/Left
        28: astore        5
        30: aload         5
        32: invokevirtual #148                // Method scala/util/Left.value:()Ljava/lang/Object;
        35: checkcast     #150                // class scala/collection/immutable/$colon$colon
        38: astore        6
        40: getstatic     #155                // Field scala/package$.MODULE$:Lscala/package$;
        43: invokevirtual #159                // Method scala/package$.Left:()Lscala/util/Left$;
        46: new           #161                // class java/lang/StringBuilder
        49: dup
        50: ldc           #162                // int 21
        52: invokespecial #166                // Method java/lang/StringBuilder."<init>":(I)V
        55: ldc           #168                // String Variables not found:
        57: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        60: aload         6
        62: ldc           #174                // String ,
        64: invokevirtual #177                // Method scala/collection/immutable/$colon$colon.mkString:(Ljava/lang/String;)Ljava/lang/String;
        67: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: invokevirtual #180                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        73: invokevirtual #185                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        76: astore_2
        77: goto          162
        80: goto          83
        83: aload         4
        85: instanceof    #189                // class scala/util/Right
        88: ifeq          149
        91: aload         4
        93: checkcast     #189                // class scala/util/Right
        96: astore        7
        98: aload         7
       100: invokevirtual #190                // Method scala/util/Right.value:()Ljava/lang/Object;
       103: checkcast     #96                 // class scala/collection/immutable/Seq
       106: astore        8
       108: new           #192                // class scala/collection/mutable/StringBuilder
       111: dup
       112: invokespecial #195                // Method scala/collection/mutable/StringBuilder."<init>":()V
       115: astore        9
       117: aload         8
       119: aload         9
       121: invokedynamic #205,  0            // InvokeDynamic #1:apply:(Lscala/collection/mutable/StringBuilder;)Lscala/Function1;
       126: invokeinterface #209,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
       131: getstatic     #155                // Field scala/package$.MODULE$:Lscala/package$;
       134: invokevirtual #213                // Method scala/package$.Right:()Lscala/util/Right$;
       137: aload         9
       139: invokevirtual #216                // Method scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
       142: invokevirtual #221                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       145: astore_2
       146: goto          162
       149: goto          152
       152: new           #223                // class scala/MatchError
       155: dup
       156: aload         4
       158: invokespecial #226                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       161: athrow
       162: aload_2
       163: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 80
          locals = [ top, class coursier/util/ValidationNel, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 65
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/ivy/Pattern, class scala/collection/immutable/Map, class scala/util/Either, class coursier/util/ValidationNel, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 85: 0
        line 87: 9
        line 88: 15
        line 89: 40
        line 88: 80
        line 90: 83
        line 91: 108
        line 92: 117
        line 93: 131
        line 90: 149
        line 87: 152
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      40     6 notFoundVariables   Lscala/collection/immutable/$colon$colon;
          117      28     9     b   Lscala/collection/mutable/StringBuilder;
          108      41     8 constants   Lscala/collection/immutable/Seq;
            9     154     3 validation   Lcoursier/util/ValidationNel;
            0     164     0  this   Lcoursier/ivy/Pattern;
            0     164     1 variables   Lscala/collection/immutable/Map;
    Signature: #133                         // (Lscala/collection/immutable/Map<Ljava/lang/String;Ljava/lang/String;>;)Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      variables                      final

  public coursier.ivy.Pattern substitute(java.lang.String, scala.collection.immutable.Seq<coursier.ivy.Pattern$Chunk>);
    descriptor: (Ljava/lang/String;Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #65                 // Field coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
         3: aload_0
         4: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
         7: aload_1
         8: aload_2
         9: invokedynamic #251,  0            // InvokeDynamic #2:apply:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lscala/Function1;
        14: invokeinterface #254,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        19: checkcast     #96                 // class scala/collection/immutable/Seq
        22: invokevirtual #67                 // Method coursier/ivy/Pattern$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
        25: areturn
      LineNumberTable:
        line 99: 0
        line 100: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lcoursier/ivy/Pattern;
            0      26     1 varName   Ljava/lang/String;
            0      26     2 replacement   Lscala/collection/immutable/Seq;
    Signature: #239                         // (Ljava/lang/String;Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;)Lcoursier/ivy/Pattern;
    MethodParameters:
      Name                           Flags
      varName                        final
      replacement                    final

  public coursier.ivy.Pattern substituteDefault();
    descriptor: ()Lcoursier/ivy/Pattern;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #257                // String defaultPattern
         4: getstatic     #65                 // Field coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
         7: invokevirtual #71                 // Method coursier/ivy/Pattern$.default:()Lcoursier/ivy/Pattern;
        10: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        13: invokevirtual #259                // Method substitute:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
        16: areturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/ivy/Pattern;

  private java.lang.String constStart$lzycompute();
    descriptor: ()Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #262                // Field bitmap$0:Z
         8: ifne          65
        11: aload_0
        12: aload_0
        13: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        16: invokeinterface #265,  1          // InterfaceMethod scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
        21: invokedynamic #272,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        26: invokeinterface #277,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        31: invokedynamic #284,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        36: invokeinterface #287,  2          // InterfaceMethod scala/collection/Iterator.takeWhile:(Lscala/Function1;)Lscala/collection/Iterator;
        41: getstatic     #292                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        44: invokevirtual #295                // Method scala/Predef$.$conforms:()Lscala/Function1;
        47: invokeinterface #298,  2          // InterfaceMethod scala/collection/Iterator.flatten:(Lscala/Function1;)Lscala/collection/Iterator;
        52: invokeinterface #299,  1          // InterfaceMethod scala/collection/Iterator.mkString:()Ljava/lang/String;
        57: putfield      #301                // Field constStart:Ljava/lang/String;
        60: aload_0
        61: iconst_1
        62: putfield      #262                // Field bitmap$0:Z
        65: aload_1
        66: monitorexit
        67: goto          73
        70: aload_1
        71: monitorexit
        72: athrow
        73: aload_0
        74: getfield      #301                // Field constStart:Ljava/lang/String;
        77: areturn
      Exception table:
         from    to  target type
             4    65    70   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 65
          locals = [ class coursier/ivy/Pattern ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 110: 0
        line 110: 12
        line 112: 21
        line 116: 31
        line 117: 41
        line 110: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      78     0  this   Lcoursier/ivy/Pattern;

  private java.lang.String constStart();
    descriptor: ()Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #262                // Field bitmap$0:Z
         4: ifne          14
         7: aload_0
         8: invokespecial #305                // Method constStart$lzycompute:()Ljava/lang/String;
        11: goto          18
        14: aload_0
        15: getfield      #301                // Field constStart:Ljava/lang/String;
        18: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/ivy/Pattern;

  public boolean startsWith(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #312                // Method constStart:()Ljava/lang/String;
         4: aload_1
         5: invokevirtual #314                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         8: ireturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/ivy/Pattern;
            0       9     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public coursier.ivy.Pattern stripPrefix(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/ivy/Pattern;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #65                 // Field coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
         3: getstatic     #319                // Field coursier/ivy/Pattern$Chunk$Const$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Const$;
         6: getstatic     #324                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         9: getstatic     #292                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: aload_0
        13: invokespecial #312                // Method constStart:()Ljava/lang/String;
        16: invokevirtual #327                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        19: aload_1
        20: invokevirtual #331                // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        23: invokevirtual #334                // Method coursier/ivy/Pattern$Chunk$Const$.apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
        26: astore_2
        27: aload_0
        28: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        31: invokedynamic #341,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        36: invokeinterface #344,  2          // InterfaceMethod scala/collection/immutable/Seq.dropWhile:(Lscala/Function1;)Ljava/lang/Object;
        41: checkcast     #346                // class scala/collection/SeqOps
        44: aload_2
        45: invokeinterface #347,  2          // InterfaceMethod scala/collection/SeqOps.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
        50: checkcast     #96                 // class scala/collection/immutable/Seq
        53: invokevirtual #67                 // Method coursier/ivy/Pattern$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
        56: areturn
      LineNumberTable:
        line 123: 0
        line 124: 3
        line 125: 27
        line 124: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lcoursier/ivy/Pattern;
            0      57     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public coursier.ivy.Pattern addPrefix(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/ivy/Pattern;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #65                 // Field coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
         3: getstatic     #319                // Field coursier/ivy/Pattern$Chunk$Const$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Const$;
         6: aload_1
         7: invokevirtual #334                // Method coursier/ivy/Pattern$Chunk$Const$.apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
        10: astore_2
        11: aload_0
        12: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        15: aload_2
        16: invokeinterface #99,  2           // InterfaceMethod scala/collection/immutable/Seq.$plus$colon:(Ljava/lang/Object;)Ljava/lang/Object;
        21: checkcast     #96                 // class scala/collection/immutable/Seq
        24: invokevirtual #67                 // Method coursier/ivy/Pattern$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
        27: areturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/ivy/Pattern;
            0      28     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public coursier.ivy.Pattern withChunks(scala.collection.immutable.Seq<coursier.ivy.Pattern$Chunk>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class coursier/ivy/Pattern
         3: dup
         4: aload_1
         5: invokespecial #352                // Method "<init>":(Lscala/collection/immutable/Seq;)V
         8: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/ivy/Pattern;
            0       9     1 chunks   Lscala/collection/immutable/Seq;
    Signature: #59                          // (Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;)Lcoursier/ivy/Pattern;
    MethodParameters:
      Name                           Flags
      chunks                         final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #161                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #354                // String Pattern(
         7: invokespecial #357                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        16: invokestatic  #361                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #363                // String )
        27: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: invokevirtual #180                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        35: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      24     1     b   Ljava/lang/StringBuilder;
            0      36     0  this   Lcoursier/ivy/Pattern;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/ivy/Pattern
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/ivy/Pattern;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     58
         5: aload_0
         6: aload_1
         7: invokevirtual #371                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          62
        13: aload_1
        14: checkcast     #2                  // class coursier/ivy/Pattern
        17: astore_2
        18: iconst_1
        19: ifeq          54
        22: aload_0
        23: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        26: aload_2
        27: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          54
        43: aload_3
        44: invokevirtual #373                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          54
        50: iconst_1
        51: goto          55
        54: iconst_0
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/ivy/Pattern, class java/lang/Object, class coursier/ivy/Pattern, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      37     2 other   Lcoursier/ivy/Pattern;
            0      64     0  this   Lcoursier/ivy/Pattern;
            0      64     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #378                // String Pattern
         5: invokestatic  #384                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        18: invokestatic  #384                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: ireturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      17     1  code   I
            0      28     0  this   Lcoursier/ivy/Pattern;

  private scala.Tuple1<scala.collection.immutable.Seq<coursier.ivy.Pattern$Chunk>> tuple();
    descriptor: ()Lscala/Tuple1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #391                // class scala/Tuple1
         3: dup
         4: aload_0
         5: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
         8: invokespecial #392                // Method scala/Tuple1."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/ivy/Pattern;
    Signature: #389                         // ()Lscala/Tuple1<Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #378                // String Pattern
         3: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/ivy/Pattern;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/ivy/Pattern;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        24: goto          42
        27: new           #399                // class java/lang/IndexOutOfBoundsException
        30: dup
        31: iload_2
        32: invokestatic  #405                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        35: invokevirtual #406                // Method java/lang/Object.toString:()Ljava/lang/String;
        38: invokespecial #407                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/ivy/Pattern;
            0      43     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 26
            }
        20: ldc_w         #410                // String chunks
        23: goto          41
        26: new           #399                // class java/lang/IndexOutOfBoundsException
        29: dup
        30: iload_2
        31: invokestatic  #405                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        34: invokevirtual #406                // Method java/lang/Object.toString:()Ljava/lang/String;
        37: invokespecial #407                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        40: athrow
        41: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/ivy/Pattern;
            0      42     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final java.lang.String $anonfun$string$2(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #413                // Method coursier/ivy/Pattern$Chunk.string:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$3   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final coursier.util.ValidationNel $anonfun$substituteVariables$1(scala.collection.immutable.Map, coursier.ivy.Pattern$Chunk);
    descriptor: (Lscala/collection/immutable/Map;Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=12, args_size=2
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #30                 // class coursier/ivy/Pattern$Chunk$Var
         8: ifeq          137
        11: aload         4
        13: checkcast     #30                 // class coursier/ivy/Pattern$Chunk$Var
        16: astore        5
        18: aload_0
        19: aload         5
        21: invokevirtual #420                // Method coursier/ivy/Pattern$Chunk$Var.name:()Ljava/lang/String;
        24: invokeinterface #424,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        29: astore        6
        31: aload         6
        33: instanceof    #426                // class scala/Some
        36: ifeq          87
        39: aload         6
        41: checkcast     #426                // class scala/Some
        44: astore        7
        46: aload         7
        48: invokevirtual #427                // Method scala/Some.value:()Ljava/lang/Object;
        51: checkcast     #307                // class java/lang/String
        54: astore        8
        56: getstatic     #432                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
        59: invokevirtual #436                // Method coursier/util/ValidationNel$.success:()Lcoursier/util/ValidationNel$SuccessBuilder;
        62: new           #150                // class scala/collection/immutable/$colon$colon
        65: dup
        66: getstatic     #319                // Field coursier/ivy/Pattern$Chunk$Const$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Const$;
        69: aload         8
        71: invokevirtual #334                // Method coursier/ivy/Pattern$Chunk$Const$.apply:(Ljava/lang/String;)Lcoursier/ivy/Pattern$Chunk$Const;
        74: getstatic     #441                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        77: invokespecial #444                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
        80: invokevirtual #447                // Method coursier/util/ValidationNel$SuccessBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
        83: astore_3
        84: goto          132
        87: goto          90
        90: getstatic     #454                // Field scala/None$.MODULE$:Lscala/None$;
        93: aload         6
        95: invokevirtual #373                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        98: ifeq          119
       101: getstatic     #432                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
       104: invokevirtual #458                // Method coursier/util/ValidationNel$.failure:()Lcoursier/util/ValidationNel$FailureBuilder;
       107: aload         5
       109: invokevirtual #420                // Method coursier/ivy/Pattern$Chunk$Var.name:()Ljava/lang/String;
       112: invokevirtual #459                // Method coursier/util/ValidationNel$FailureBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
       115: astore_3
       116: goto          132
       119: goto          122
       122: new           #223                // class scala/MatchError
       125: dup
       126: aload         6
       128: invokespecial #226                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       131: athrow
       132: aload_3
       133: astore_2
       134: goto          251
       137: goto          140
       140: aload         4
       142: instanceof    #25                 // class coursier/ivy/Pattern$Chunk$Opt
       145: ifeq          195
       148: aload         4
       150: checkcast     #25                 // class coursier/ivy/Pattern$Chunk$Opt
       153: astore        9
       155: aload         9
       157: invokevirtual #462                // Method coursier/ivy/Pattern$Chunk$Opt.content:()Lscala/collection/immutable/Seq;
       160: aload_0
       161: invokestatic  #138                // Method helper$1:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;)Lcoursier/util/ValidationNel;
       164: astore        10
       166: aload         10
       168: invokevirtual #466                // Method coursier/util/ValidationNel.isSuccess:()Z
       171: ifeq          179
       174: aload         10
       176: goto          191
       179: getstatic     #432                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
       182: invokevirtual #436                // Method coursier/util/ValidationNel$.success:()Lcoursier/util/ValidationNel$SuccessBuilder;
       185: getstatic     #441                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       188: invokevirtual #447                // Method coursier/util/ValidationNel$SuccessBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
       191: astore_2
       192: goto          251
       195: goto          198
       198: aload         4
       200: instanceof    #20                 // class coursier/ivy/Pattern$Chunk$Const
       203: ifeq          238
       206: aload         4
       208: checkcast     #20                 // class coursier/ivy/Pattern$Chunk$Const
       211: astore        11
       213: getstatic     #432                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
       216: invokevirtual #436                // Method coursier/util/ValidationNel$.success:()Lcoursier/util/ValidationNel$SuccessBuilder;
       219: new           #150                // class scala/collection/immutable/$colon$colon
       222: dup
       223: aload         11
       225: getstatic     #441                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       228: invokespecial #444                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       231: invokevirtual #447                // Method coursier/util/ValidationNel$SuccessBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
       234: astore_2
       235: goto          251
       238: goto          241
       241: new           #223                // class scala/MatchError
       244: dup
       245: aload         4
       247: invokespecial #226                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       250: athrow
       251: aload_2
       252: areturn
      StackMapTable: number_of_entries = 14
        frame_type = 255 /* full_frame */
          offset_delta = 87
          locals = [ class scala/collection/immutable/Map, class coursier/ivy/Pattern$Chunk, top, top, class coursier/ivy/Pattern$Chunk, class coursier/ivy/Pattern$Chunk$Var, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 28 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/immutable/Map, class coursier/ivy/Pattern$Chunk, top, class coursier/util/ValidationNel, class coursier/ivy/Pattern$Chunk, class coursier/ivy/Pattern$Chunk$Var, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/immutable/Map, class coursier/ivy/Pattern$Chunk, top, top, class coursier/ivy/Pattern$Chunk ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class scala/collection/immutable/Map, class coursier/ivy/Pattern$Chunk, top, top, class coursier/ivy/Pattern$Chunk, top, top, top, top, class coursier/ivy/Pattern$Chunk$Opt, class coursier/util/ValidationNel ]
          stack = []
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ class coursier/util/ValidationNel ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/collection/immutable/Map, class coursier/ivy/Pattern$Chunk, top, top, class coursier/ivy/Pattern$Chunk ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 39 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/immutable/Map, class coursier/ivy/Pattern$Chunk, class coursier/util/ValidationNel, top, class coursier/ivy/Pattern$Chunk ]
          stack = []
      LineNumberTable:
        line 67: 0
        line 68: 3
        line 69: 18
        line 70: 31
        line 71: 56
        line 70: 87
        line 72: 90
        line 73: 101
        line 72: 119
        line 69: 122
        line 68: 137
        line 75: 140
        line 76: 155
        line 77: 166
        line 78: 174
        line 80: 179
        line 75: 195
        line 81: 198
        line 82: 213
        line 81: 238
        line 67: 241
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           56      31     8 value   Ljava/lang/String;
          166      25    10   res   Lcoursier/util/ValidationNel;
            0     253     0 variables$1   Lscala/collection/immutable/Map;
            0     253     1  x0$1   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      variables$1                    final
      x0$1                           final

  public static final scala.collection.immutable.Seq $anonfun$substituteVariables$2(scala.collection.immutable.Seq);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #292                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         4: invokevirtual #295                // Method scala/Predef$.$conforms:()Lscala/Function1;
         7: invokeinterface #472,  2          // InterfaceMethod scala/collection/immutable/Seq.flatten:(Lscala/Function1;)Ljava/lang/Object;
        12: checkcast     #96                 // class scala/collection/immutable/Seq
        15: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   x$4   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      x$4                            final

  private static final coursier.util.ValidationNel helper$1(scala.collection.immutable.Seq, scala.collection.immutable.Map);
    descriptor: (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;)Lcoursier/util/ValidationNel;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #477                // Field coursier/util/Traverse$.MODULE$:Lcoursier/util/Traverse$;
         3: aload_0
         4: invokevirtual #480                // Method coursier/util/Traverse$.TraverseOps:(Lscala/collection/immutable/Seq;)Lcoursier/util/Traverse$TraverseOps;
         7: aload_1
         8: invokedynamic #488,  0            // InvokeDynamic #6:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
        13: invokevirtual #492                // Method coursier/util/Traverse$TraverseOps.validationNelTraverse:(Lscala/Function1;)Lcoursier/util/ValidationNel;
        16: invokedynamic #497,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        21: invokevirtual #499                // Method coursier/util/ValidationNel.map:(Lscala/Function1;)Lcoursier/util/ValidationNel;
        24: areturn
      LineNumberTable:
        line 67: 0
        line 83: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 chunks   Lscala/collection/immutable/Seq;
            0      25     1 variables$1   Lscala/collection/immutable/Map;
    MethodParameters:
      Name                           Flags
      chunks                         final
      variables$1                    final

  public static final scala.collection.mutable.StringBuilder $anonfun$substituteVariables$3(scala.collection.mutable.StringBuilder, coursier.ivy.Pattern$Chunk$Const);
    descriptor: (Lscala/collection/mutable/StringBuilder;Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #503                // Method coursier/ivy/Pattern$Chunk$Const.value:()Ljava/lang/String;
         5: invokevirtual #507                // Method scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
         8: areturn
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   b$1   Lscala/collection/mutable/StringBuilder;
            0       9     1   x$5   Lcoursier/ivy/Pattern$Chunk$Const;
    MethodParameters:
      Name                           Flags
      b$1                            final
      x$5                            final

  public static final scala.collection.IterableOnce $anonfun$substitute$1(java.lang.String, scala.collection.immutable.Seq, coursier.ivy.Pattern$Chunk);
    descriptor: (Ljava/lang/String;Lscala/collection/immutable/Seq;Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=8, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #30                 // class coursier/ivy/Pattern$Chunk$Var
         8: ifeq          55
        11: aload         4
        13: checkcast     #30                 // class coursier/ivy/Pattern$Chunk$Var
        16: astore        5
        18: aload         5
        20: invokevirtual #420                // Method coursier/ivy/Pattern$Chunk$Var.name:()Ljava/lang/String;
        23: aload_0
        24: astore        6
        26: dup
        27: ifnonnull     39
        30: pop
        31: aload         6
        33: ifnull        47
        36: goto          52
        39: aload         6
        41: invokevirtual #373                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        44: ifeq          52
        47: aload_1
        48: astore_3
        49: goto          131
        52: goto          58
        55: goto          58
        58: aload         4
        60: instanceof    #25                 // class coursier/ivy/Pattern$Chunk$Opt
        63: ifeq          112
        66: aload         4
        68: checkcast     #25                 // class coursier/ivy/Pattern$Chunk$Opt
        71: astore        7
        73: new           #150                // class scala/collection/immutable/$colon$colon
        76: dup
        77: getstatic     #513                // Field coursier/ivy/Pattern$Chunk$Opt$.MODULE$:Lcoursier/ivy/Pattern$Chunk$Opt$;
        80: getstatic     #65                 // Field coursier/ivy/Pattern$.MODULE$:Lcoursier/ivy/Pattern$;
        83: aload         7
        85: invokevirtual #462                // Method coursier/ivy/Pattern$Chunk$Opt.content:()Lscala/collection/immutable/Seq;
        88: invokevirtual #67                 // Method coursier/ivy/Pattern$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
        91: aload_0
        92: aload_1
        93: invokevirtual #259                // Method substitute:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern;
        96: invokevirtual #94                 // Method chunks:()Lscala/collection/immutable/Seq;
        99: invokevirtual #516                // Method coursier/ivy/Pattern$Chunk$Opt$.apply:(Lscala/collection/immutable/Seq;)Lcoursier/ivy/Pattern$Chunk$Opt;
       102: getstatic     #441                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       105: invokespecial #444                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       108: astore_3
       109: goto          131
       112: goto          115
       115: new           #150                // class scala/collection/immutable/$colon$colon
       118: dup
       119: aload         4
       121: getstatic     #441                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       124: invokespecial #444                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       127: astore_3
       128: goto          131
       131: aload_3
       132: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class java/lang/String, class scala/collection/immutable/Seq, class coursier/ivy/Pattern$Chunk, top, class coursier/ivy/Pattern$Chunk, class coursier/ivy/Pattern$Chunk$Var, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 4 /* same */
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 53 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class java/lang/String, class scala/collection/immutable/Seq, class coursier/ivy/Pattern$Chunk, class scala/collection/immutable/Seq, class coursier/ivy/Pattern$Chunk ]
          stack = []
      LineNumberTable:
        line 100: 0
        line 101: 3
        line 102: 58
        line 103: 115
        line 100: 131
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     133     0 varName$1   Ljava/lang/String;
            0     133     1 replacement$1   Lscala/collection/immutable/Seq;
            0     133     2  x0$1   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      varName$1                      final
      replacement$1                  final
      x0$1                           final

  public static final scala.Option $anonfun$constStart$1(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: instanceof    #20                 // class coursier/ivy/Pattern$Chunk$Const
         6: ifeq          29
         9: aload_2
        10: checkcast     #20                 // class coursier/ivy/Pattern$Chunk$Const
        13: astore_3
        14: new           #426                // class scala/Some
        17: dup
        18: aload_3
        19: invokevirtual #503                // Method coursier/ivy/Pattern$Chunk$Const.value:()Ljava/lang/String;
        22: invokespecial #517                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        25: astore_1
        26: goto          39
        29: goto          32
        32: getstatic     #454                // Field scala/None$.MODULE$:Lscala/None$;
        35: astore_1
        36: goto          39
        39: aload_1
        40: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 29
          locals = [ top, class coursier/ivy/Pattern$Chunk ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/ivy/Pattern$Chunk, class scala/Option, class coursier/ivy/Pattern$Chunk ]
          stack = []
      LineNumberTable:
        line 112: 0
        line 113: 2
        line 114: 32
        line 112: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  x0$1   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final boolean $anonfun$constStart$2(scala.Option);
    descriptor: (Lscala/Option;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #523                // Method scala/Option.nonEmpty:()Z
         4: ireturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$6   Lscala/Option;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final boolean $anonfun$stripPrefix$1(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: instanceof    #20                 // class coursier/ivy/Pattern$Chunk$Const
         6: ifeq          14
         9: iconst_1
        10: istore_1
        11: goto          22
        14: goto          17
        17: iconst_0
        18: istore_1
        19: goto          22
        22: iload_1
        23: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 14
          locals = [ top, class coursier/ivy/Pattern$Chunk ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/ivy/Pattern$Chunk, int, class coursier/ivy/Pattern$Chunk ]
          stack = []
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  x0$1   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public coursier.ivy.Pattern(scala.collection.immutable.Seq<coursier.ivy.Pattern$Chunk>);
    descriptor: (Lscala/collection/immutable/Seq;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #89                 // Field chunks:Lscala/collection/immutable/Seq;
         5: aload_0
         6: invokespecial #528                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #532                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: return
      LineNumberTable:
        line 55: 0
        line 131: 5
        line 55: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/ivy/Pattern;
            0      14     1 chunks   Lscala/collection/immutable/Seq;
    Signature: #527                         // (Lscala/collection/immutable/Seq<Lcoursier/ivy/Pattern$Chunk;>;)V
    MethodParameters:
      Name                           Flags
      chunks                         final

  public static final java.lang.Object $anonfun$constStart$2$adapted(scala.Option);
    descriptor: (Lscala/Option;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #534                // Method $anonfun$constStart$2:(Lscala/Option;)Z
         4: invokestatic  #538                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$6   Lscala/Option;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final java.lang.Object $anonfun$stripPrefix$1$adapted(coursier.ivy.Pattern$Chunk);
    descriptor: (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #540                // Method $anonfun$stripPrefix$1:(Lcoursier/ivy/Pattern$Chunk;)Z
         4: invokestatic  #538                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x0$1   Lcoursier/ivy/Pattern$Chunk;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #552,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static abstract #15= #14 of #2;  // Chunk=class coursier/ivy/Pattern$Chunk of class coursier/ivy/Pattern
  public static #18= #17 of #2;           // =class coursier/ivy/Pattern$Chunk$ of class coursier/ivy/Pattern
  public static final #21= #20 of #17;    // Const=class coursier/ivy/Pattern$Chunk$Const of class coursier/ivy/Pattern$Chunk$
  public static #18= #23 of #17;          // =class coursier/ivy/Pattern$Chunk$Const$ of class coursier/ivy/Pattern$Chunk$
  public static final #26= #25 of #17;    // Opt=class coursier/ivy/Pattern$Chunk$Opt of class coursier/ivy/Pattern$Chunk$
  public static #18= #28 of #17;          // =class coursier/ivy/Pattern$Chunk$Opt$ of class coursier/ivy/Pattern$Chunk$
  public static final #31= #30 of #17;    // Var=class coursier/ivy/Pattern$Chunk$Var of class coursier/ivy/Pattern$Chunk$
  public static #36= #33 of #35;          // TraverseOps=class coursier/util/Traverse$TraverseOps of class coursier/util/Traverse
  public static final #41= #38 of #40;    // FailureBuilder=class coursier/util/ValidationNel$FailureBuilder of class coursier/util/ValidationNel
  public static final #44= #43 of #40;    // SuccessBuilder=class coursier/util/ValidationNel$SuccessBuilder of class coursier/util/ValidationNel
  public static final #49= #46 of #48;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "Pattern.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t\rg\u0001B3g\u0005-D!\"a\u0001\u0001\u0005\u000b\u0007I\u0011AA\u0003\u0011)\u00119\u0007\u0001B\u0001B\u0003%\u0011q\u0001\u0005\b\u0003O\u0001A\u0011\u0001B5\u0011\u001d\u0011i\u0007\u0001C\u0001\u0005_Bq!!\u000e\u0001\t\u0003\t9\u0004C\u0004\u0003t\u0001!\tA!\u001e\t\u000f\t\u001d\u0005\u0001\"\u0001\u0003\n\"9!1\u0013\u0001\u0005\u0002\tu\u0003B\u0003BK\u0001!\u0015\r\u0011\"\u0003\u00028!9!q\u0013\u0001\u0005\u0002\te\u0005b\u0002BO\u0001\u0011\u0005!q\u0014\u0005\b\u0005G\u0003A\u0011\u0001BS\u0011\u001d\u0011I\u000b\u0001C\u0001\u0005WCq!!\u001d\u0001\t\u0003\n\u0019\bC\u0004\u0002\u0000\u0001!\tEa,\t\u000f\u0005M\u0005\u0001\"\u0011\u00034\"9\u0011\u0011\u0014\u0001\u0005B\u0005m\u0005bBAR\u0001\u0011%!q\u0017\u0005\b\u0003[\u0003A\u0011IAX\u0011\u001d\t\t\f\u0001C!\u0003gCq!!.\u0001\t\u0003\u0012Y\fC\u0004\u0002>\u0002!\tEa0\b\u000f\u0005Ma\r#\u0001\u0002\u0016\u00191QM\u001aE\u0001\u0003/Aq!a\n\u0019\t\u0003\tICB\u0004\u0002,a\t\t#!\f\t\u000f\u0005\u001d\"\u0004\"\u0001\u00020!9\u0011Q\u0007\u000e\u0007\u0002\u0005]ra\u0002B-1!\u0005\u0011\u0011\u000b\u0004\b\u0003WA\u0002\u0012AA\'\u0011\u001d\t9C\bC\u0001\u0003\u001fBq!a\u0015\u001f\t\u0007\t)F\u0002\u0004\u0002\\y\u0011\u0011Q\f\u0005\u000b\u0003?\n#Q1A\u0005\u0002\u0005]\u0002BCA1C\t\u0005\t\u0015!\u0003\u0002:!9\u0011qE\u0011\u0005\u0002\u0005\r\u0004bBA\u001bC\u0011\u0005\u0011q\u0007\u0005\b\u0003W\nC\u0011AA7\u0011\u001d\t\t(\tC!\u0003gBq!a \"\t\u0003\n\t\tC\u0004\u0002\u0014\u0006\"\t%!&\t\u000f\u0005e\u0015\u0005\"\u0011\u0002\u001c\"9\u00111U\u0011\u0005\n\u0005\u0015\u0006bBAWC\u0011\u0005\u0013q\u0016\u0005\b\u0003c\u000bC\u0011IAZ\u0011\u001d\t),\tC!\u0003oCq!!0\"\t\u0003\nylB\u0004\u0002DzA\t!!2\u0007\u000f\u0005mc\u0004#\u0001\u0002H\"9\u0011qE\u0019\u0005\u0002\u0005%\u0007bBAfc\u0011\u0005\u0011Q\u001a\u0005\n\u0003#\f\u0014\u0011!C\u0005\u0003\'4a!a7\u001f\u0005\u0005u\u0007BCApk\t\u0015\r\u0011\"\u0001\u0002b\"Q\u0011Q]\u001b\u0003\u0002\u0003\u0006I!a9\t\u000f\u0005\u001dR\u0007\"\u0001\u0002h\"9\u0011QG\u001b\u0005\u0002\u0005]\u0002bBAwk\u0011\u0005\u0011q\u001e\u0005\b\u0003c*D\u0011IA:\u0011\u001d\ty(\u000eC!\u0003gDq!a%6\t\u0003\n9\u0010C\u0004\u0002\u001aV\"\t%a\'\t\u000f\u0005\rV\u0007\"\u0003\u0002|\"9\u0011QV\u001b\u0005B\u0005=\u0006bBAYk\u0011\u0005\u00131\u0017\u0005\b\u0003k+D\u0011IA\u0000\u0011\u001d\ti,\u000eC!\u0005\u00079qAa\u0002\u001f\u0011\u0003\u0011IAB\u0004\u0002\\zA\tAa\u0003\t\u000f\u0005\u001dR\t\"\u0001\u0003\u000e!9\u00111Z#\u0005\u0002\t=\u0001bBAf\u000b\u0012\u0005!Q\u0003\u0005\b\u0003\u0017,E\u0011\u0001B\u000f\u0011\u001d\tY-\u0012C\u0001\u0005OA\u0011\"!5F\u0003\u0003%I!a5\u0007\r\u0005-cD\u0001B\u001e\u0011)\u0011I\u0004\u0014BC\u0002\u0013\u0005\u0011q\u0007\u0005\u000b\u0005{a%\u0011!Q\u0001\n\u0005e\u0002bBA\u0014\u0019\u0012\u0005!q\b\u0005\b\u0003kaE\u0011AA\u001c\u0011\u001d\u0011\u0019\u0005\u0014C\u0001\u0005\u000bBq!!\u001dM\t\u0003\n\u0019\bC\u0004\u0002\u00001#\tE!\u0013\t\u000f\u0005ME\n\"\u0011\u0003N!9\u0011\u0011\u0014\'\u0005B\u0005m\u0005bBAR\u0019\u0012%\u0011Q\u0015\u0005\b\u0003[cE\u0011IAX\u0011\u001d\t\t\f\u0014C!\u0003gCq!!.M\t\u0003\u0012\t\u0006C\u0004\u0002>2#\tE!\u0016\b\u000f\t-b\u0004#\u0001\u0003.\u00199\u00111\n\u0010\t\u0002\t=\u0002bBA\u00149\u0012\u0005!\u0011\u0007\u0005\b\u0003\u0017dF\u0011\u0001B\u001a\u0011%\t\t\u000eXA\u0001\n\u0013\t\u0019\u000eC\u0005\u0002Rz\t\t\u0011\"\u0003\u0002T\"I!1\f\rC\u0002\u0013\u0005!Q\f\u0005\t\u0005CB\u0002\u0015!\u0003\u0003`!9\u00111\u001a\r\u0005\u0002\t\r\u0004\"CAi1\u0005\u0005I\u0011BAj\u0005\u001d\u0001\u0016\r\u001e;fe:T!a\u001a5\u0002\u0007%4\u0018PC\u0001j\u0003!\u0019w.\u001e:tS\u0016\u00148\u0001A\n\u0005\u00011\u0014X\u000f\u0005\u0002na6\taNC\u0001p\u0003\u0015\u00198-\u00197b\u0013\t\thN\u0001\u0004B]f\u0014VM\u001a\t\u0003[NL!\u0001\u001e8\u0003\u000fA\u0013x\u000eZ;diB\u0011aO \b\u0003ort!\u0001_>\u000e\u0003eT!A\u001f6\u0002\rq\u0012xn\u001c;?\u0013\u0005y\u0017BA?o\u0003\u001d\u0001\u0018mY6bO\u0016L1a`A\u0001\u00051\u0019VM]5bY&T\u0018M\u00197f\u0015\tih.\u0001\u0004dQVt7n]\u000b\u0003\u0003\u000f\u0001RA^A\u0005\u0003\u001bIA!a\u0003\u0002\u0002\t\u00191+Z9\u0011\u0007\u0005=!DD\u0002\u0002\u0012]i\u0011AZ\u0001\b!\u0006$H/\u001a:o!\r\t\t\u0002G\n\u000511\fI\u0002\u0005\u0003\u0002\u001c\u0005\u0015RBAA\u000f\u0015\u0011\ty\"!\t\u0002\u0005%|\'BAA\u0012\u0003\u0011Q\u0017M^1\n\u0007}\fi\"\u0001\u0004=S:LGO\u0010\u000b\u0003\u0003+\u0011Qa\u00115v].\u001cBA\u00077skR\u0011\u0011\u0011\u0007\t\u0004\u0003gQR\"\u0001\r\u0002\rM$(/\u001b8h+\t\tI\u0004\u0005\u0003\u0002<\u0005\rc\u0002BA\u001f\u0003\u007f\u0001\"\u0001\u001f8\n\u0007\u0005\u0005c.\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u0003\u000b\n9E\u0001\u0004TiJLgn\u001a\u0006\u0004\u0003\u0003r\u0017\u0006\u0002\u000eMk\u0005\u0012QaQ8ogR\u001cBA\b7\u0002\u001aQ\u0011\u0011\u0011\u000b\t\u0004\u0003gq\u0012A\u00034s_6\u001cFO]5oOR!\u0011\u0011GA,\u0011\u001d\tI\u0006\ta\u0001\u0003s\t\u0011a\u001d\u0002\u0004-\u0006\u00148#B\u0011\u00022I,\u0018\u0001\u00028b[\u0016\fQA\\1nK\u0002\"B!!\u001a\u0002jA\u0019\u0011qM\u0011\u000e\u0003yAq!a\u0018%\u0001\u0004\tI$\u0001\u0005xSRDg*Y7f)\u0011\t)\'a\u001c\t\u000f\u0005}c\u00051\u0001\u0002:\u0005AAo\\*ue&tw\r\u0006\u0002\u0002vA!\u0011qOA?\u001b\t\tIH\u0003\u0003\u0002|\u0005\u0005\u0012\u0001\u00027b]\u001eLA!!\u0012\u0002z\u0005A1-\u00198FcV\fG\u000e\u0006\u0003\u0002\u0004\u0006%\u0005cA7\u0002\u0006&\u0019\u0011q\u00118\u0003\u000f\t{w\u000e\\3b]\"9\u00111\u0012\u0015A\u0002\u00055\u0015aA8cUB\u0019Q.a$\n\u0007\u0005EeNA\u0002B]f\fa!Z9vC2\u001cH\u0003BAB\u0003/Cq!a#*\u0001\u0004\ti)\u0001\u0005iCND7i\u001c3f)\t\ti\nE\u0002n\u0003?K1!!)o\u0005\rIe\u000e^\u0001\u0006iV\u0004H.Z\u000b\u0003\u0003O\u0003R!\\AU\u0003sI1!a+o\u0005\u0019!V\u000f\u001d7fc\u0005i\u0001O]8ek\u000e$\bK]3gSb,\"!!\u001e\u0002\u0019A\u0014x\u000eZ;di\u0006\u0013\u0018\u000e^=\u0016\u0005\u0005u\u0015A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0005\u0003\u001b\u000bI\fC\u0004\u0002<:\u0002\r!!(\u0002\u00039\f!\u0003\u001d:pIV\u001cG/\u00127f[\u0016tGOT1nKR!\u0011QOAa\u0011\u001d\tYl\fa\u0001\u0003;\u000b1AV1s!\r\t9\'M\n\u0005c1\fI\u0002\u0006\u0002\u0002F\u0006)\u0011\r\u001d9msR!\u0011QMAh\u0011\u001d\tyf\ra\u0001\u0003s\tAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!!6\u0011\t\u0005]\u0014q[\u0005\u0005\u00033\fIH\u0001\u0004PE*,7\r\u001e\u0002\u0004\u001fB$8#B\u001b\u00022I,\u0018aB2p]R,g\u000e^\u000b\u0003\u0003G\u0004RA^A\u0005\u0003c\t\u0001bY8oi\u0016tG\u000f\t\u000b\u0005\u0003S\fY\u000fE\u0002\u0002hUBq!a89\u0001\u0004\t\u0019/A\u0006xSRD7i\u001c8uK:$H\u0003BAu\u0003cDq!a8;\u0001\u0004\t\u0019\u000f\u0006\u0003\u0002\u0004\u0006U\bbBAFy\u0001\u0007\u0011Q\u0012\u000b\u0005\u0003\u0007\u000bI\u0010C\u0004\u0002\fv\u0002\r!!$\u0016\u0005\u0005u\b#B7\u0002*\u0006\rH\u0003BAG\u0005\u0003Aq!a/C\u0001\u0004\ti\n\u0006\u0003\u0002v\t\u0015\u0001bBA^\u0007\u0002\u0007\u0011QT\u0001\u0004\u001fB$\bcAA4\u000bN!Q\t\\A\r)\t\u0011I\u0001\u0006\u0003\u0002j\nE\u0001b\u0002B\n\u000f\u0002\u0007\u0011\u0011G\u0001\u0006G\",hn\u001b\u000b\u0007\u0003S\u00149B!\u0007\t\u000f\tM\u0001\n1\u0001\u00022!9!1\u0004%A\u0002\u0005E\u0012AB2ik:\\\u0017\u0007\u0006\u0005\u0002j\n}!\u0011\u0005B\u0012\u0011\u001d\u0011\u0019\"\u0013a\u0001\u0003cAqAa\u0007J\u0001\u0004\t\t\u0004C\u0004\u0003&%\u0003\r!!\r\u0002\r\rDWO\\63)\u0011\tIO!\u000b\t\u000f\u0005}\'\n1\u0001\u0002d\u0006)1i\u001c8tiB\u0019\u0011q\r/\u0014\tqc\u0017\u0011\u0004\u000b\u0003\u0005[!BA!\u000e\u00038A\u0019\u0011q\r\'\t\u000f\teb\f1\u0001\u0002:\u0005)a/\u00197vKN)A*!\rsk\u00061a/\u00197vK\u0002\"BA!\u000e\u0003B!9!\u0011H(A\u0002\u0005e\u0012!C<ji\"4\u0016\r\\;f)\u0011\u0011)Da\u0012\t\u000f\te\u0012\u000b1\u0001\u0002:Q!\u00111\u0011B&\u0011\u001d\tYi\u0015a\u0001\u0003\u001b#B!a!\u0003P!9\u00111\u0012+A\u0002\u00055E\u0003BAG\u0005\'Bq!a/Z\u0001\u0004\ti\n\u0006\u0003\u0002v\t]\u0003bBA^5\u0002\u0007\u0011QT\u0001\u0006\u0007\",hn[\u0001\bI\u00164\u0017-\u001e7u+\t\u0011y\u0006E\u0002\u0002\u0012\u0001\t\u0001\u0002Z3gCVdG\u000f\t\u000b\u0005\u0005?\u0012)\u0007C\u0004\u0002\u0004\r\u0004\r!a\u0002\u0002\u000f\rDWO\\6tAQ!!q\fB6\u0011\u001d\t\u0019a\u0001a\u0001\u0003\u000f\t1\u0002\n9mkN$3m\u001c7p]R!!q\fB9\u0011\u001d\u0011\u0019\u0002\u0002a\u0001\u0003\u001b\t1c];cgRLG/\u001e;f-\u0006\u0014\u0018.\u00192mKN$BAa\u001e\u0003~A9aO!\u001f\u0002:\u0005e\u0012\u0002\u0002B>\u0003\u0003\u0011a!R5uQ\u0016\u0014\bb\u0002B@\r\u0001\u0007!\u0011Q\u0001\nm\u0006\u0014\u0018.\u00192mKN\u0004\u0002\"a\u000f\u0003\u0004\u0006e\u0012\u0011H\u0005\u0005\u0005\u000b\u000b9EA\u0002NCB\f!b];cgRLG/\u001e;f)\u0019\u0011yFa#\u0003\u0010\"9!QR\u0004A\u0002\u0005e\u0012a\u0002<be:\u000bW.\u001a\u0005\b\u0005#;\u0001\u0019AA\u0004\u0003-\u0011X\r\u001d7bG\u0016lWM\u001c;\u0002#M,(m\u001d;jiV$X\rR3gCVdG/\u0001\u0006d_:\u001cHo\u0015;beR\f!b\u001d;beR\u001cx+\u001b;i)\u0011\t\u0019Ia\'\t\u000f\u0005e#\u00021\u0001\u0002:\u0005Y1\u000f\u001e:jaB\u0013XMZ5y)\u0011\u0011yF!)\t\u000f\u0005e3\u00021\u0001\u0002:\u0005I\u0011\r\u001a3Qe\u00164\u0017\u000e\u001f\u000b\u0005\u0005?\u00129\u000bC\u0004\u0002Z1\u0001\r!!\u000f\u0002\u0015]LG\u000f[\"ik:\\7\u000f\u0006\u0003\u0003`\t5\u0006bBA\u0002\u001b\u0001\u0007\u0011q\u0001\u000b\u0005\u0003\u0007\u0013\t\fC\u0004\u0002\f>\u0001\r!!$\u0015\t\u0005\r%Q\u0017\u0005\b\u0003\u0017\u0003\u0002\u0019AAG+\t\u0011I\fE\u0003n\u0003S\u000b9\u0001\u0006\u0003\u0002\u000e\nu\u0006bBA^+\u0001\u0007\u0011Q\u0014\u000b\u0005\u0003k\u0012\t\rC\u0004\u0002<Z\u0001\r!!("
    )
BootstrapMethods:
  0: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #108 REF_invokeStatic coursier/ivy/Pattern.$anonfun$string$2:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
      #109 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
      #110 5
      #111 1
      #109 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
  1: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #200 REF_invokeStatic coursier/ivy/Pattern.$anonfun$substituteVariables$3:(Lscala/collection/mutable/StringBuilder;Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
      #202 (Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
      #110 5
      #111 1
      #202 (Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
  2: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #246 REF_invokeStatic coursier/ivy/Pattern.$anonfun$substitute$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
      #248 (Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
      #110 5
      #111 1
      #248 (Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
  3: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #270 REF_invokeStatic coursier/ivy/Pattern.$anonfun$constStart$1:(Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
      #271 (Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
      #110 5
      #111 1
      #271 (Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
  4: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #282 REF_invokeStatic coursier/ivy/Pattern.$anonfun$constStart$2$adapted:(Lscala/Option;)Ljava/lang/Object;
      #283 (Lscala/Option;)Ljava/lang/Object;
      #110 5
      #111 1
      #283 (Lscala/Option;)Ljava/lang/Object;
  5: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #339 REF_invokeStatic coursier/ivy/Pattern.$anonfun$stripPrefix$1$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
      #340 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
      #110 5
      #111 1
      #340 (Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
  6: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #483 REF_invokeStatic coursier/ivy/Pattern.$anonfun$substituteVariables$1:(Lscala/collection/immutable/Map;Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
      #485 (Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
      #110 5
      #111 1
      #485 (Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
  7: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 (Ljava/lang/Object;)Ljava/lang/Object;
      #495 REF_invokeStatic coursier/ivy/Pattern.$anonfun$substituteVariables$2:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #496 (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #110 5
      #111 1
      #496 (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  8: #549 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #270 REF_invokeStatic coursier/ivy/Pattern.$anonfun$constStart$1:(Lcoursier/ivy/Pattern$Chunk;)Lscala/Option;
      #282 REF_invokeStatic coursier/ivy/Pattern.$anonfun$constStart$2$adapted:(Lscala/Option;)Ljava/lang/Object;
      #108 REF_invokeStatic coursier/ivy/Pattern.$anonfun$string$2:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/String;
      #339 REF_invokeStatic coursier/ivy/Pattern.$anonfun$stripPrefix$1$adapted:(Lcoursier/ivy/Pattern$Chunk;)Ljava/lang/Object;
      #246 REF_invokeStatic coursier/ivy/Pattern.$anonfun$substitute$1:(Ljava/lang/String;Lscala/collection/immutable/Seq;Lcoursier/ivy/Pattern$Chunk;)Lscala/collection/IterableOnce;
      #483 REF_invokeStatic coursier/ivy/Pattern.$anonfun$substituteVariables$1:(Lscala/collection/immutable/Map;Lcoursier/ivy/Pattern$Chunk;)Lcoursier/util/ValidationNel;
      #495 REF_invokeStatic coursier/ivy/Pattern.$anonfun$substituteVariables$2:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
      #200 REF_invokeStatic coursier/ivy/Pattern.$anonfun$substituteVariables$3:(Lscala/collection/mutable/StringBuilder;Lcoursier/ivy/Pattern$Chunk$Const;)Lscala/collection/mutable/StringBuilder;
  ScalaInlineInfo: length = 0xB3 (unknown attribute)
   01 01 00 23 01 0C 01 0D 01 02 08 02 09 01 01 18
   01 19 01 00 6A 00 6B 01 02 0F 02 10 01 01 51 01
   52 01 00 F4 00 F5 01 01 A0 01 A1 01 01 D6 01 D7
   01 00 C4 00 C5 01 00 5C 00 5D 01 00 A5 01 60 01
   01 5E 01 3E 01 01 6F 01 70 01 00 36 00 58 01 00
   34 00 68 01 01 06 00 68 01 01 73 01 70 01 01 79
   01 7A 01 00 89 00 8A 01 01 8C 01 7A 01 01 8D 01
   8E 01 01 9A 01 9B 01 00 53 00 4B 01 00 4A 00 4B
   01 01 8B 00 68 01 01 36 01 37 01 00 67 00 68 01
   01 3D 01 3E 01 00 EF 00 F0 01 01 01 00 47 01 00
   85 00 86 01 00 B4 00 68 01 01 85 01 86 01 01 5F
   00 3C 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
