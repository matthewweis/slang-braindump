Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet.class
  Last modified May 29, 2022; size 1583 bytes
  SHA-256 checksum f60617a578a26ad524b5147e8ca00c413be391c4aae766ec0550975adfc76ee5
  Compiled from "ConcurrentReferenceHashMap.java"
final class concurrentrefhashmap.ConcurrentReferenceHashMap$EntrySet extends java.util.AbstractSet<java.util.Map$Entry<K, V>>
  minor version: 0
  major version: 52
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #14                         // concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet
  super_class: #15                        // java/util/AbstractSet
  interfaces: 0, fields: 1, methods: 7, attributes: 3
Constant pool:
   #1 = Fieldref           #14.#42        // concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet.this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
   #2 = Methodref          #15.#43        // java/util/AbstractSet."<init>":()V
   #3 = Class              #45            // concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator
   #4 = Methodref          #3.#47         // concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
   #5 = Class              #49            // java/util/Map$Entry
   #6 = InterfaceMethodref #5.#50         // java/util/Map$Entry.getKey:()Ljava/lang/Object;
   #7 = Methodref          #44.#51        // concurrentrefhashmap/ConcurrentReferenceHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #8 = InterfaceMethodref #5.#52         // java/util/Map$Entry.getValue:()Ljava/lang/Object;
   #9 = Methodref          #31.#53        // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #10 = Methodref          #44.#54        // concurrentrefhashmap/ConcurrentReferenceHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #11 = Methodref          #44.#55        // concurrentrefhashmap/ConcurrentReferenceHashMap.size:()I
  #12 = Methodref          #44.#56        // concurrentrefhashmap/ConcurrentReferenceHashMap.isEmpty:()Z
  #13 = Methodref          #44.#57        // concurrentrefhashmap/ConcurrentReferenceHashMap.clear:()V
  #14 = Class              #58            // concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet
  #15 = Class              #60            // java/util/AbstractSet
  #16 = Utf8               this$0
  #17 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
  #18 = Utf8               <init>
  #19 = Utf8               (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
  #20 = Utf8               Code
  #21 = Utf8               LineNumberTable
  #22 = Utf8               iterator
  #23 = Utf8               ()Ljava/util/Iterator;
  #24 = Utf8               Signature
  #25 = Utf8               Entry
  #26 = Utf8               InnerClasses
  #27 = Utf8               ()Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;
  #28 = Utf8               contains
  #29 = Utf8               (Ljava/lang/Object;)Z
  #30 = Utf8               StackMapTable
  #31 = Class              #61            // java/lang/Object
  #32 = Utf8               remove
  #33 = Utf8               size
  #34 = Utf8               ()I
  #35 = Utf8               isEmpty
  #36 = Utf8               ()Z
  #37 = Utf8               clear
  #38 = Utf8               ()V
  #39 = Utf8               Ljava/util/AbstractSet<Ljava/util/Map$Entry<TK;TV;>;>;
  #40 = Utf8               SourceFile
  #41 = Utf8               ConcurrentReferenceHashMap.java
  #42 = NameAndType        #16:#17        // this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
  #43 = NameAndType        #18:#38        // "<init>":()V
  #44 = Class              #62            // concurrentrefhashmap/ConcurrentReferenceHashMap
  #45 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator
  #46 = Utf8               EntryIterator
  #47 = NameAndType        #18:#19        // "<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
  #48 = Class              #63            // java/util/Map
  #49 = Utf8               java/util/Map$Entry
  #50 = NameAndType        #64:#65        // getKey:()Ljava/lang/Object;
  #51 = NameAndType        #66:#67        // get:(Ljava/lang/Object;)Ljava/lang/Object;
  #52 = NameAndType        #68:#65        // getValue:()Ljava/lang/Object;
  #53 = NameAndType        #69:#29        // equals:(Ljava/lang/Object;)Z
  #54 = NameAndType        #32:#70        // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #55 = NameAndType        #33:#34        // size:()I
  #56 = NameAndType        #35:#36        // isEmpty:()Z
  #57 = NameAndType        #37:#38        // clear:()V
  #58 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet
  #59 = Utf8               EntrySet
  #60 = Utf8               java/util/AbstractSet
  #61 = Utf8               java/lang/Object
  #62 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap
  #63 = Utf8               java/util/Map
  #64 = Utf8               getKey
  #65 = Utf8               ()Ljava/lang/Object;
  #66 = Utf8               get
  #67 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #68 = Utf8               getValue
  #69 = Utf8               equals
  #70 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
{
  final concurrentrefhashmap.ConcurrentReferenceHashMap this$0;
    descriptor: Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
    flags: (0x1010) ACC_FINAL, ACC_SYNTHETIC

  concurrentrefhashmap.ConcurrentReferenceHashMap$EntrySet(concurrentrefhashmap.ConcurrentReferenceHashMap);
    descriptor: (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
    flags: (0x0000)
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         5: aload_0
         6: invokespecial #2                  // Method java/util/AbstractSet."<init>":()V
         9: return
      LineNumberTable:
        line 1819: 0

  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #3                  // class concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator
         3: dup
         4: aload_0
         5: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         8: invokespecial #4                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
        11: areturn
      LineNumberTable:
        line 1822: 0
    Signature: #27                          // ()Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;

  public boolean contains(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_1
         1: instanceof    #5                  // class java/util/Map$Entry
         4: ifne          9
         7: iconst_0
         8: ireturn
         9: aload_1
        10: checkcast     #5                  // class java/util/Map$Entry
        13: astore_2
        14: aload_0
        15: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
        18: aload_2
        19: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        24: invokevirtual #7                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        27: astore_3
        28: aload_3
        29: ifnull        49
        32: aload_3
        33: aload_2
        34: invokeinterface #8,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
        39: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        42: ifeq          49
        45: iconst_1
        46: goto          50
        49: iconst_0
        50: ireturn
      LineNumberTable:
        line 1827: 0
        line 1828: 7
        line 1830: 9
        line 1831: 14
        line 1832: 28
      StackMapTable: number_of_entries = 3
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 39
          locals = [ class java/util/Map$Entry, class java/lang/Object ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean remove(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: instanceof    #5                  // class java/util/Map$Entry
         4: ifne          9
         7: iconst_0
         8: ireturn
         9: aload_1
        10: checkcast     #5                  // class java/util/Map$Entry
        13: astore_2
        14: aload_0
        15: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
        18: aload_2
        19: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        24: aload_2
        25: invokeinterface #8,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
        30: invokevirtual #10                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
        33: ireturn
      LineNumberTable:
        line 1837: 0
        line 1838: 7
        line 1840: 9
        line 1841: 14
      StackMapTable: number_of_entries = 1
        frame_type = 9 /* same */

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         4: invokevirtual #11                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap.size:()I
         7: ireturn
      LineNumberTable:
        line 1846: 0

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         4: invokevirtual #12                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap.isEmpty:()Z
         7: ireturn
      LineNumberTable:
        line 1851: 0

  public void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         4: invokevirtual #13                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap.clear:()V
         7: return
      LineNumberTable:
        line 1856: 0
        line 1857: 7
}
Signature: #39                          // Ljava/util/AbstractSet<Ljava/util/Map$Entry<TK;TV;>;>;
SourceFile: "ConcurrentReferenceHashMap.java"
InnerClasses:
  public static #25= #5 of #48;           // Entry=class java/util/Map$Entry of class java/util/Map
  final #46= #3 of #44;                   // EntryIterator=class concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #59= #14 of #44;                  // EntrySet=class concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet of class concurrentrefhashmap/ConcurrentReferenceHashMap
