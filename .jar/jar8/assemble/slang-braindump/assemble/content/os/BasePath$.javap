Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/os/BasePath$.class
  Last modified May 29, 2022; size 5254 bytes
  SHA-256 checksum 886cdc10bae51dafc2a3517bfd1c7972d9698ed113c3d36168bf67f725029060
  Compiled from "Path.scala"
public final class os.BasePath$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // os/BasePath$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 13, attributes: 5
Constant pool:
    #1 = Utf8               os/BasePath$
    #2 = Class              #1            // os/BasePath$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Path.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               os/PathError$InvalidSegment
   #12 = Class              #11           // os/PathError$InvalidSegment
   #13 = Utf8               os/PathError
   #14 = Class              #13           // os/PathError
   #15 = Utf8               InvalidSegment
   #16 = Utf8               scala/collection/JavaConverters$AsScala
   #17 = Class              #16           // scala/collection/JavaConverters$AsScala
   #18 = Utf8               scala/collection/JavaConverters
   #19 = Class              #18           // scala/collection/JavaConverters
   #20 = Utf8               AsScala
   #21 = Utf8               MODULE$
   #22 = Utf8               Los/BasePath$;
   #23 = Utf8               <clinit>
   #24 = Utf8               ()V
   #25 = Utf8               <init>
   #26 = NameAndType        #25:#24       // "<init>":()V
   #27 = Methodref          #2.#26        // os/BasePath$."<init>":()V
   #28 = NameAndType        #21:#22       // MODULE$:Los/BasePath$;
   #29 = Fieldref           #2.#28        // os/BasePath$.MODULE$:Los/BasePath$;
   #30 = Utf8               checkSegment
   #31 = Utf8               (Ljava/lang/String;)V
   #32 = Utf8               s
   #33 = Utf8               java/lang/String
   #34 = Class              #33           // java/lang/String
   #35 = Utf8               indexOf
   #36 = Utf8               (I)I
   #37 = NameAndType        #35:#36       // indexOf:(I)I
   #38 = Methodref          #34.#37       // java/lang/String.indexOf:(I)I
   #39 = Utf8               java/lang/StringBuilder
   #40 = Class              #39           // java/lang/StringBuilder
   #41 = Integer            130
   #42 = Utf8               (I)V
   #43 = NameAndType        #25:#42       // "<init>":(I)V
   #44 = Methodref          #40.#43       // java/lang/StringBuilder."<init>":(I)V
   #45 = Utf8               [/] is not a valid character to appear in a path segment.
   #46 = String             #45           // [/] is not a valid character to appear in a path segment.
   #47 = Utf8               append
   #48 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #49 = NameAndType        #47:#48       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #50 = Methodref          #40.#49       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #51 = Utf8               If you want to parse an absolute or relative path that may have
   #52 = String             #51           // If you want to parse an absolute or relative path that may have
   #53 = Utf8               multiple segments, e.g. path-strings coming from external sources
   #54 = String             #53           // multiple segments, e.g. path-strings coming from external sources
   #55 = Utf8               considerStr$1
   #56 = Utf8               ()Ljava/lang/String;
   #57 = NameAndType        #55:#56       // considerStr$1:()Ljava/lang/String;
   #58 = Methodref          #2.#57        // os/BasePath$.considerStr$1:()Ljava/lang/String;
   #59 = Utf8               toString
   #60 = NameAndType        #59:#56       // toString:()Ljava/lang/String;
   #61 = Methodref          #40.#60       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #62 = Utf8               fail$1
   #63 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/runtime/Nothing$;
   #64 = NameAndType        #62:#63       // fail$1:(Ljava/lang/String;Ljava/lang/String;)Lscala/runtime/Nothing$;
   #65 = Methodref          #2.#64        // os/BasePath$.fail$1:(Ljava/lang/String;Ljava/lang/String;)Lscala/runtime/Nothing$;
   #66 = Utf8               hashCode
   #67 = Utf8               ()I
   #68 = NameAndType        #66:#67       // hashCode:()I
   #69 = Methodref          #34.#68       // java/lang/String.hashCode:()I
   #70 = Utf8
   #71 = String             #70           //
   #72 = Utf8               equals
   #73 = Utf8               (Ljava/lang/Object;)Z
   #74 = NameAndType        #72:#73       // equals:(Ljava/lang/Object;)Z
   #75 = Methodref          #34.#74       // java/lang/String.equals:(Ljava/lang/Object;)Z
   #76 = Utf8               .
   #77 = String             #76           // .
   #78 = Utf8               ..
   #79 = String             #78           // ..
   #80 = Integer            42
   #81 = Utf8               OS-Lib does not allow empty path segments
   #82 = String             #81           // OS-Lib does not allow empty path segments
   #83 = Utf8               externalStr$1
   #84 = NameAndType        #83:#56       // externalStr$1:()Ljava/lang/String;
   #85 = Methodref          #2.#84        // os/BasePath$.externalStr$1:()Ljava/lang/String;
   #86 = Integer            44
   #87 = Utf8               OS-Lib does not allow [.] as a path segment
   #88 = String             #87           // OS-Lib does not allow [.] as a path segment
   #89 = Integer            240
   #90 = Utf8               OS-Lib does not allow [..] as a path segment
   #91 = String             #90           // OS-Lib does not allow [..] as a path segment
   #92 = Utf8               If you want to use the `..` segment manually to represent going up
   #93 = String             #92           // If you want to use the `..` segment manually to represent going up
   #94 = Utf8               one level in the path, use the `up` segment from `os.up`
   #95 = String             #94           // one level in the path, use the `up` segment from `os.up`
   #96 = Utf8               e.g. an external path foo/bar/../baz translates into \'foo/\'bar/up/\'baz.
   #97 = String             #96           // e.g. an external path foo/bar/../baz translates into \'foo/\'bar/up/\'baz.
   #98 = Utf8               this
   #99 = Utf8               Ljava/lang/String;
  #100 = Utf8               chunkify
  #101 = Utf8               (Ljava/nio/file/Path;)[Ljava/lang/String;
  #102 = Utf8               scala/collection/JavaConverters$
  #103 = Class              #102          // scala/collection/JavaConverters$
  #104 = Utf8               Lscala/collection/JavaConverters$;
  #105 = NameAndType        #21:#104      // MODULE$:Lscala/collection/JavaConverters$;
  #106 = Fieldref           #103.#105     // scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
  #107 = Utf8               java/nio/file/Path
  #108 = Class              #107          // java/nio/file/Path
  #109 = Utf8               iterator
  #110 = Utf8               ()Ljava/util/Iterator;
  #111 = NameAndType        #109:#110     // iterator:()Ljava/util/Iterator;
  #112 = InterfaceMethodref #108.#111     // java/nio/file/Path.iterator:()Ljava/util/Iterator;
  #113 = Utf8               asScalaIteratorConverter
  #114 = Utf8               (Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #115 = NameAndType        #113:#114     // asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #116 = Methodref          #103.#115     // scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #117 = Utf8               asScala
  #118 = Utf8               ()Ljava/lang/Object;
  #119 = NameAndType        #117:#118     // asScala:()Ljava/lang/Object;
  #120 = Methodref          #17.#119      // scala/collection/JavaConverters$AsScala.asScala:()Ljava/lang/Object;
  #121 = Utf8               scala/collection/Iterator
  #122 = Class              #121          // scala/collection/Iterator
  #123 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #124 = MethodType         #123          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #125 = Utf8               $anonfun$chunkify$1
  #126 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;
  #127 = NameAndType        #125:#126     // $anonfun$chunkify$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #128 = Methodref          #2.#127       // os/BasePath$.$anonfun$chunkify$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #129 = MethodHandle       6:#128        // REF_invokeStatic os/BasePath$.$anonfun$chunkify$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #130 = MethodType         #126          //  (Ljava/nio/file/Path;)Ljava/lang/String;
  #131 = Integer            5
  #132 = Integer            1
  #133 = Utf8               java/lang/invoke/LambdaMetafactory
  #134 = Class              #133          // java/lang/invoke/LambdaMetafactory
  #135 = Utf8               altMetafactory
  #136 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #137 = NameAndType        #135:#136     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #138 = Methodref          #134.#137     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #139 = MethodHandle       6:#138        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #140 = Utf8               apply
  #141 = Utf8               ()Lscala/Function1;
  #142 = NameAndType        #140:#141     // apply:()Lscala/Function1;
  #143 = InvokeDynamic      #0:#142       // #0:apply:()Lscala/Function1;
  #144 = Utf8               map
  #145 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #146 = NameAndType        #144:#145     // map:(Lscala/Function1;)Lscala/collection/Iterator;
  #147 = InterfaceMethodref #122.#146     // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
  #148 = Utf8               $anonfun$chunkify$2$adapted
  #149 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #150 = NameAndType        #148:#149     // $anonfun$chunkify$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #151 = Methodref          #2.#150       // os/BasePath$.$anonfun$chunkify$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #152 = MethodHandle       6:#151        // REF_invokeStatic os/BasePath$.$anonfun$chunkify$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #153 = MethodType         #149          //  (Ljava/lang/String;)Ljava/lang/Object;
  #154 = InvokeDynamic      #1:#142       // #1:apply:()Lscala/Function1;
  #155 = Utf8               filter
  #156 = NameAndType        #155:#145     // filter:(Lscala/Function1;)Lscala/collection/Iterator;
  #157 = InterfaceMethodref #122.#156     // scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
  #158 = Utf8               $anonfun$chunkify$3$adapted
  #159 = NameAndType        #158:#149     // $anonfun$chunkify$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #160 = Methodref          #2.#159       // os/BasePath$.$anonfun$chunkify$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #161 = MethodHandle       6:#160        // REF_invokeStatic os/BasePath$.$anonfun$chunkify$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #162 = InvokeDynamic      #2:#142       // #2:apply:()Lscala/Function1;
  #163 = Utf8               scala/reflect/ClassTag$
  #164 = Class              #163          // scala/reflect/ClassTag$
  #165 = Utf8               Lscala/reflect/ClassTag$;
  #166 = NameAndType        #21:#165      // MODULE$:Lscala/reflect/ClassTag$;
  #167 = Fieldref           #164.#166     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #168 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #169 = NameAndType        #140:#168     // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #170 = Methodref          #164.#169     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #171 = Utf8               toArray
  #172 = Utf8               (Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #173 = NameAndType        #171:#172     // toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #174 = InterfaceMethodref #122.#173     // scala/collection/Iterator.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #175 = Utf8               [Ljava/lang/String;
  #176 = Class              #175          // "[Ljava/lang/String;"
  #177 = Utf8               Ljava/nio/file/Path;
  #178 = Utf8               msg
  #179 = Utf8               s$1
  #180 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #181 = NameAndType        #25:#180      // "<init>":(Ljava/lang/String;Ljava/lang/String;)V
  #182 = Methodref          #12.#181      // os/PathError$InvalidSegment."<init>":(Ljava/lang/String;Ljava/lang/String;)V
  #183 = Utf8               use the Path(...) or RelPath(...) constructor calls to convert them.
  #184 = String             #183          // use the Path(...) or RelPath(...) constructor calls to convert them.
  #185 = Utf8               If you are dealing with path-strings coming from external sources,
  #186 = String             #185          // If you are dealing with path-strings coming from external sources,
  #187 = Utf8               x$2
  #188 = Methodref          #4.#60        // java/lang/Object.toString:()Ljava/lang/String;
  #189 = Utf8               $anonfun$chunkify$2
  #190 = Utf8               (Ljava/lang/String;)Z
  #191 = Utf8               x$3
  #192 = Methodref          #4.#74        // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #193 = Utf8               $anonfun$chunkify$3
  #194 = Utf8               x$4
  #195 = Methodref          #4.#26        // java/lang/Object."<init>":()V
  #196 = NameAndType        #189:#190     // $anonfun$chunkify$2:(Ljava/lang/String;)Z
  #197 = Methodref          #2.#196       // os/BasePath$.$anonfun$chunkify$2:(Ljava/lang/String;)Z
  #198 = Utf8               scala/runtime/BoxesRunTime
  #199 = Class              #198          // scala/runtime/BoxesRunTime
  #200 = Utf8               boxToBoolean
  #201 = Utf8               (Z)Ljava/lang/Boolean;
  #202 = NameAndType        #200:#201     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #203 = Methodref          #199.#202     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #204 = NameAndType        #193:#190     // $anonfun$chunkify$3:(Ljava/lang/String;)Z
  #205 = Methodref          #2.#204       // os/BasePath$.$anonfun$chunkify$3:(Ljava/lang/String;)Z
  #206 = Utf8               $deserializeLambda$
  #207 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #208 = Utf8               scala/runtime/LambdaDeserialize
  #209 = Class              #208          // scala/runtime/LambdaDeserialize
  #210 = Utf8               bootstrap
  #211 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #212 = NameAndType        #210:#211     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #213 = Methodref          #209.#212     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #214 = MethodHandle       6:#213        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #215 = Utf8               lambdaDeserialize
  #216 = NameAndType        #215:#207     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #217 = InvokeDynamic      #3:#216       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #218 = Utf8               Code
  #219 = Utf8               LineNumberTable
  #220 = Utf8               StackMapTable
  #221 = Utf8               LocalVariableTable
  #222 = Utf8               MethodParameters
  #223 = Utf8               InnerClasses
  #224 = Utf8               SourceFile
  #225 = Utf8               BootstrapMethods
  #226 = Utf8               ScalaInlineInfo
  #227 = Utf8               Scala
{
  public static final os.BasePath$ MODULE$;
    descriptor: Los/BasePath$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/BasePath$
         3: dup
         4: invokespecial #27                 // Method "<init>":()V
         7: putstatic     #29                 // Field MODULE$:Los/BasePath$;
        10: return
      LineNumberTable:
        line 118: 0

  public void checkSegment(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_1
         1: bipush        47
         3: invokevirtual #38                 // Method java/lang/String.indexOf:(I)I
         6: istore_2
         7: iload_2
         8: tableswitch   { // -1 to -1
                      -1: 28
                 default: 31
            }
        28: goto          69
        31: new           #40                 // class java/lang/StringBuilder
        34: dup
        35: ldc           #41                 // int 130
        37: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
        40: ldc           #46                 // String [/] is not a valid character to appear in a path segment.
        42: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: ldc           #52                 // String If you want to parse an absolute or relative path that may have
        47: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: ldc           #54                 // String multiple segments, e.g. path-strings coming from external sources
        52: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        55: invokestatic  #58                 // Method considerStr$1:()Ljava/lang/String;
        58: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        61: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        64: aload_1
        65: invokestatic  #65                 // Method fail$1:(Ljava/lang/String;Ljava/lang/String;)Lscala/runtime/Nothing$;
        68: athrow
        69: aload_1
        70: astore_3
        71: aload_3
        72: ifnonnull     79
        75: iconst_0
        76: goto          83
        79: aload_3
        80: invokevirtual #69                 // Method java/lang/String.hashCode:()I
        83: lookupswitch  { // 3
                       0: 116
                      46: 131
                    1472: 146
                 default: 161
            }
       116: ldc           #71                 // String
       118: aload_3
       119: invokevirtual #75                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       122: ifeq          128
       125: goto          164
       128: goto          281
       131: ldc           #77                 // String .
       133: aload_3
       134: invokevirtual #75                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       137: ifeq          143
       140: goto          198
       143: goto          281
       146: ldc           #79                 // String ..
       148: aload_3
       149: invokevirtual #75                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       152: ifeq          158
       155: goto          232
       158: goto          281
       161: goto          281
       164: new           #40                 // class java/lang/StringBuilder
       167: dup
       168: ldc           #80                 // int 42
       170: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
       173: ldc           #82                 // String OS-Lib does not allow empty path segments
       175: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       178: invokestatic  #85                 // Method externalStr$1:()Ljava/lang/String;
       181: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       184: invokestatic  #58                 // Method considerStr$1:()Ljava/lang/String;
       187: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       190: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       193: aload_1
       194: invokestatic  #65                 // Method fail$1:(Ljava/lang/String;Ljava/lang/String;)Lscala/runtime/Nothing$;
       197: athrow
       198: new           #40                 // class java/lang/StringBuilder
       201: dup
       202: ldc           #86                 // int 44
       204: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
       207: ldc           #88                 // String OS-Lib does not allow [.] as a path segment
       209: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       212: invokestatic  #85                 // Method externalStr$1:()Ljava/lang/String;
       215: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       218: invokestatic  #58                 // Method considerStr$1:()Ljava/lang/String;
       221: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       224: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       227: aload_1
       228: invokestatic  #65                 // Method fail$1:(Ljava/lang/String;Ljava/lang/String;)Lscala/runtime/Nothing$;
       231: athrow
       232: new           #40                 // class java/lang/StringBuilder
       235: dup
       236: ldc           #89                 // int 240
       238: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(I)V
       241: ldc           #91                 // String OS-Lib does not allow [..] as a path segment
       243: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       246: invokestatic  #85                 // Method externalStr$1:()Ljava/lang/String;
       249: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       252: invokestatic  #58                 // Method considerStr$1:()Ljava/lang/String;
       255: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       258: ldc           #93                 // String If you want to use the `..` segment manually to represent going up
       260: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       263: ldc           #95                 // String one level in the path, use the `up` segment from `os.up`
       265: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       268: ldc           #97                 // String e.g. an external path foo/bar/../baz translates into \'foo/\'bar/up/\'baz.
       270: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       273: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       276: aload_1
       277: invokestatic  #65                 // Method fail$1:(Ljava/lang/String;Ljava/lang/String;)Lscala/runtime/Nothing$;
       280: athrow
       281: goto          284
       284: return
      StackMapTable: number_of_entries = 17
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 2 /* same */
        frame_type = 37 /* same */
        frame_type = 252 /* append */
          offset_delta = 9
          locals = [ class java/lang/String ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 32 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 2 /* same */
        frame_type = 33 /* same */
        frame_type = 33 /* same */
        frame_type = 48 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 124: 0
        line 125: 28
        line 129: 31
        line 127: 40
        line 128: 45
        line 129: 50
        line 130: 55
        line 126: 64
        line 135: 69
        line 136: 116
        line 135: 128
        line 141: 131
        line 135: 143
        line 146: 146
        line 135: 158
        line 139: 164
        line 138: 173
        line 139: 178
        line 137: 193
        line 144: 198
        line 143: 207
        line 144: 212
        line 142: 227
        line 152: 232
        line 148: 241
        line 149: 246
        line 150: 252
        line 151: 258
        line 152: 263
        line 153: 268
        line 147: 276
        line 135: 281
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     285     0  this   Los/BasePath$;
            0     285     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String[] chunkify(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)[Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #106                // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
         3: aload_1
         4: invokeinterface #112,  1          // InterfaceMethod java/nio/file/Path.iterator:()Ljava/util/Iterator;
         9: invokevirtual #116                // Method scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
        12: invokevirtual #120                // Method scala/collection/JavaConverters$AsScala.asScala:()Ljava/lang/Object;
        15: checkcast     #122                // class scala/collection/Iterator
        18: invokedynamic #143,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        23: invokeinterface #147,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        28: invokedynamic #154,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        33: invokeinterface #157,  2          // InterfaceMethod scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
        38: invokedynamic #162,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        43: invokeinterface #157,  2          // InterfaceMethod scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
        48: getstatic     #167                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        51: ldc           #34                 // class java/lang/String
        53: invokevirtual #170                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        56: invokeinterface #174,  2          // InterfaceMethod scala/collection/Iterator.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
        61: checkcast     #176                // class "[Ljava/lang/String;"
        64: areturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0  this   Los/BasePath$;
            0      65     1     s   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      s                              final

  private static final scala.runtime.Nothing$ fail$1(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lscala/runtime/Nothing$;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=2
         0: new           #12                 // class os/PathError$InvalidSegment
         3: dup
         4: aload_1
         5: aload_0
         6: invokespecial #182                // Method os/PathError$InvalidSegment."<init>":(Ljava/lang/String;Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   msg   Ljava/lang/String;
            0      10     1   s$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      msg                            final
      s$1                            final

  private static final java.lang.String considerStr$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #184                // String use the Path(...) or RelPath(...) constructor calls to convert them.
         2: areturn
      LineNumberTable:
        line 122: 0

  private static final java.lang.String externalStr$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #186                // String If you are dealing with path-strings coming from external sources,
         2: areturn
      LineNumberTable:
        line 134: 0

  public static final java.lang.String $anonfun$chunkify$1(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #188                // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$2   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final boolean $anonfun$chunkify$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc           #77                 // String .
         3: astore_1
         4: dup
         5: ifnonnull     16
         8: pop
         9: aload_1
        10: ifnull        27
        13: goto          23
        16: aload_1
        17: invokevirtual #192                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        20: ifne          27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0   x$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final boolean $anonfun$chunkify$3(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc           #71                 // String
         3: astore_1
         4: dup
         5: ifnonnull     16
         8: pop
         9: aload_1
        10: ifnull        27
        13: goto          23
        16: aload_1
        17: invokevirtual #192                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        20: ifne          27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0   x$4   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$4                            final

  private os.BasePath$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #195                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 164: 0
        line 118: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/BasePath$;

  public static final java.lang.Object $anonfun$chunkify$2$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #197                // Method $anonfun$chunkify$2:(Ljava/lang/String;)Z
         4: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final java.lang.Object $anonfun$chunkify$3$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #205                // Method $anonfun$chunkify$3:(Ljava/lang/String;)Z
         4: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$4   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$4                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #217,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // InvalidSegment=class os/PathError$InvalidSegment of class os/PathError
  public static #20= #17 of #19;          // AsScala=class scala/collection/JavaConverters$AsScala of class scala/collection/JavaConverters
SourceFile: "Path.scala"
BootstrapMethods:
  0: #139 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #124 (Ljava/lang/Object;)Ljava/lang/Object;
      #129 REF_invokeStatic os/BasePath$.$anonfun$chunkify$1:(Ljava/nio/file/Path;)Ljava/lang/String;
      #130 (Ljava/nio/file/Path;)Ljava/lang/String;
      #131 5
      #132 1
      #130 (Ljava/nio/file/Path;)Ljava/lang/String;
  1: #139 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #124 (Ljava/lang/Object;)Ljava/lang/Object;
      #152 REF_invokeStatic os/BasePath$.$anonfun$chunkify$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #153 (Ljava/lang/String;)Ljava/lang/Object;
      #131 5
      #132 1
      #153 (Ljava/lang/String;)Ljava/lang/Object;
  2: #139 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #124 (Ljava/lang/Object;)Ljava/lang/Object;
      #161 REF_invokeStatic os/BasePath$.$anonfun$chunkify$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #153 (Ljava/lang/String;)Ljava/lang/Object;
      #131 5
      #132 1
      #153 (Ljava/lang/String;)Ljava/lang/Object;
  3: #214 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #129 REF_invokeStatic os/BasePath$.$anonfun$chunkify$1:(Ljava/nio/file/Path;)Ljava/lang/String;
      #152 REF_invokeStatic os/BasePath$.$anonfun$chunkify$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #161 REF_invokeStatic os/BasePath$.$anonfun$chunkify$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 01 00 0B 00 7D 00 7E 01 00 BD 00 BE 01 00 94
   00 95 01 00 C1 00 BE 01 00 9E 00 95 01 00 19 00
   18 01 00 1E 00 1F 01 00 64 00 65 01 00 37 00 38
   01 00 53 00 38 01 00 3E 00 3F 01
  Scala: length = 0x0 (unknown attribute)

