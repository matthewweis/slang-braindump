Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/derive/JsonProductCodecFor.class
  Last modified May 29, 2022; size 1495 bytes
  SHA-256 checksum 05b9dfb1f1a1053c00023761e1d67817607e3ff450e9880a6783294437d6566b
  Compiled from "JsonProductCodec.scala"
public interface argonaut.derive.JsonProductCodecFor<P extends java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // argonaut/derive/JsonProductCodecFor
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 5
Constant pool:
   #1 = Utf8               argonaut/derive/JsonProductCodecFor
   #2 = Class              #1             // argonaut/derive/JsonProductCodecFor
   #3 = Utf8               <P:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               JsonProductCodec.scala
   #7 = Utf8               Lscala/reflect/ScalaSignature;
   #8 = Utf8               bytes
   #9 = Utf8               \u0006\u0005\u00053q\u0001C\u0005\u0011\u0002G\u0005a\u0002C\u0003\u0017\u0001\u0019\u0005qcB\u0003&\u0013!\u0005aEB\u0003\t\u0013!\u0005q\u0005C\u0003)\u0007\u0011\u0005\u0011\u0006C\u0003+\u0007\u0011\u00051\u0006C\u00035\u0007\u0011\rQ\u0007C\u0003<\u0007\u0011\u0005AHA\nKg>t\u0007K]8ek\u000e$8i\u001c3fG\u001a{\'O\u0003\u0002\u000b\u0017\u00051A-\u001a:jm\u0016T\u0011\u0001D\u0001\tCJ<wN\\1vi\u000e\u0001QCA\b\u001d\'\t\u0001\u0001\u0003\u0005\u0002\u0012)5\t!CC\u0001\u0014\u0003\u0015\u00198-\u00197b\u0013\t)\"C\u0001\u0004B]f\u0014VMZ\u0001\u0006G>$WmY\u000b\u00021A\u0011\u0011DG\u0007\u0002\u0013%\u00111$\u0003\u0002\u0011\u0015N|g\u000e\u0015:pIV\u001cGoQ8eK\u000e$Q!\b\u0001C\u0002y\u0011\u0011\u0001U\t\u0003?\t\u0002\"!\u0005\u0011\n\u0005\u0005\u0012\"a\u0002(pi\"Lgn\u001a\t\u0003#\rJ!\u0001\n\n\u0003\u0007\u0005s\u00170A\nKg>t\u0007K]8ek\u000e$8i\u001c3fG\u001a{\'\u000f\u0005\u0002\u001a\u0007M\u00111\u0001E\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003\u0019\nQ!\u00199qYf,\"\u0001\f\u0019\u0015\u00055\u0012\u0004cA\r\u0001]A\u0011q\u0006\r\u0007\u0001\t\u0015\tTA1\u0001\u001f\u0005\u0005\u0019\u0006\"B\u001a\u0006\u0001\u0004A\u0012AB2pI\u0016\u001c\u0007\'A\u0004eK\u001a\fW\u000f\u001c;\u0016\u0005YJT#A\u001c\u0011\u0007e\u0001\u0001\b\u0005\u00020s\u0011)!H\u0002b\u0001=\t\tA+A\rbY^\f\u0017p]%oG2,H-\u001a#fM\u0006,H\u000e\u001e,bYV,WCA\u001fA+\u0005q\u0004cA\r\u0001\u007fA\u0011q\u0006\u0011\u0003\u0006u\u001d\u0011\rA\b
  #10 = Utf8               alwaysIncludeDefaultValue
  #11 = Utf8               ()Largonaut/derive/JsonProductCodecFor;
  #12 = Utf8               <T:Ljava/lang/Object;>()Largonaut/derive/JsonProductCodecFor<TT;>;
  #13 = Utf8               argonaut/derive/JsonProductCodecFor$
  #14 = Class              #13            // argonaut/derive/JsonProductCodecFor$
  #15 = Utf8               MODULE$
  #16 = Utf8               Largonaut/derive/JsonProductCodecFor$;
  #17 = NameAndType        #15:#16        // MODULE$:Largonaut/derive/JsonProductCodecFor$;
  #18 = Fieldref           #14.#17        // argonaut/derive/JsonProductCodecFor$.MODULE$:Largonaut/derive/JsonProductCodecFor$;
  #19 = NameAndType        #10:#11        // alwaysIncludeDefaultValue:()Largonaut/derive/JsonProductCodecFor;
  #20 = Methodref          #14.#19        // argonaut/derive/JsonProductCodecFor$.alwaysIncludeDefaultValue:()Largonaut/derive/JsonProductCodecFor;
  #21 = Utf8               default
  #22 = NameAndType        #21:#11        // default:()Largonaut/derive/JsonProductCodecFor;
  #23 = Methodref          #14.#22        // argonaut/derive/JsonProductCodecFor$.default:()Largonaut/derive/JsonProductCodecFor;
  #24 = Utf8               apply
  #25 = Utf8               (Largonaut/derive/JsonProductCodec;)Largonaut/derive/JsonProductCodecFor;
  #26 = Utf8               <S:Ljava/lang/Object;>(Largonaut/derive/JsonProductCodec;)Largonaut/derive/JsonProductCodecFor<TS;>;
  #27 = Utf8               codec0
  #28 = NameAndType        #24:#25        // apply:(Largonaut/derive/JsonProductCodec;)Largonaut/derive/JsonProductCodecFor;
  #29 = Methodref          #14.#28        // argonaut/derive/JsonProductCodecFor$.apply:(Largonaut/derive/JsonProductCodec;)Largonaut/derive/JsonProductCodecFor;
  #30 = Utf8               codec
  #31 = Utf8               ()Largonaut/derive/JsonProductCodec;
  #32 = Utf8               Code
  #33 = Utf8               Signature
  #34 = Utf8               MethodParameters
  #35 = Utf8               SourceFile
  #36 = Utf8               RuntimeVisibleAnnotations
  #37 = Utf8               ScalaInlineInfo
  #38 = Utf8               ScalaSig
{
  public static <T extends java.lang.Object> argonaut.derive.JsonProductCodecFor<T> alwaysIncludeDefaultValue();
    descriptor: ()Largonaut/derive/JsonProductCodecFor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #18                 // Field argonaut/derive/JsonProductCodecFor$.MODULE$:Largonaut/derive/JsonProductCodecFor$;
         3: invokevirtual #20                 // Method argonaut/derive/JsonProductCodecFor$.alwaysIncludeDefaultValue:()Largonaut/derive/JsonProductCodecFor;
         6: areturn
    Signature: #12                          // <T:Ljava/lang/Object;>()Largonaut/derive/JsonProductCodecFor<TT;>;

  public static <T extends java.lang.Object> argonaut.derive.JsonProductCodecFor<T> default();
    descriptor: ()Largonaut/derive/JsonProductCodecFor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #18                 // Field argonaut/derive/JsonProductCodecFor$.MODULE$:Largonaut/derive/JsonProductCodecFor$;
         3: invokevirtual #23                 // Method argonaut/derive/JsonProductCodecFor$.default:()Largonaut/derive/JsonProductCodecFor;
         6: areturn
    Signature: #12                          // <T:Ljava/lang/Object;>()Largonaut/derive/JsonProductCodecFor<TT;>;

  public static <S extends java.lang.Object> argonaut.derive.JsonProductCodecFor<S> apply(argonaut.derive.JsonProductCodec);
    descriptor: (Largonaut/derive/JsonProductCodec;)Largonaut/derive/JsonProductCodecFor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #18                 // Field argonaut/derive/JsonProductCodecFor$.MODULE$:Largonaut/derive/JsonProductCodecFor$;
         3: aload_0
         4: invokevirtual #29                 // Method argonaut/derive/JsonProductCodecFor$.apply:(Largonaut/derive/JsonProductCodec;)Largonaut/derive/JsonProductCodecFor;
         7: areturn
    Signature: #26                          // <S:Ljava/lang/Object;>(Largonaut/derive/JsonProductCodec;)Largonaut/derive/JsonProductCodecFor<TS;>;
    MethodParameters:
      Name                           Flags
      codec0                         final

  public abstract argonaut.derive.JsonProductCodec codec();
    descriptor: ()Largonaut/derive/JsonProductCodec;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
}
Signature: #3                           // <P:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "JsonProductCodec.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00053q\u0001C\u0005\u0011\u0002G\u0005a\u0002C\u0003\u0017\u0001\u0019\u0005qcB\u0003&\u0013!\u0005aEB\u0003\t\u0013!\u0005q\u0005C\u0003)\u0007\u0011\u0005\u0011\u0006C\u0003+\u0007\u0011\u00051\u0006C\u00035\u0007\u0011\rQ\u0007C\u0003<\u0007\u0011\u0005AHA\nKg>t\u0007K]8ek\u000e$8i\u001c3fG\u001a{\'O\u0003\u0002\u000b\u0017\u00051A-\u001a:jm\u0016T\u0011\u0001D\u0001\tCJ<wN\\1vi\u000e\u0001QCA\b\u001d\'\t\u0001\u0001\u0003\u0005\u0002\u0012)5\t!CC\u0001\u0014\u0003\u0015\u00198-\u00197b\u0013\t)\"C\u0001\u0004B]f\u0014VMZ\u0001\u0006G>$WmY\u000b\u00021A\u0011\u0011DG\u0007\u0002\u0013%\u00111$\u0003\u0002\u0011\u0015N|g\u000e\u0015:pIV\u001cGoQ8eK\u000e$Q!\b\u0001C\u0002y\u0011\u0011\u0001U\t\u0003?\t\u0002\"!\u0005\u0011\n\u0005\u0005\u0012\"a\u0002(pi\"Lgn\u001a\t\u0003#\rJ!\u0001\n\n\u0003\u0007\u0005s\u00170A\nKg>t\u0007K]8ek\u000e$8i\u001c3fG\u001a{\'\u000f\u0005\u0002\u001a\u0007M\u00111\u0001E\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003\u0019\nQ!\u00199qYf,\"\u0001\f\u0019\u0015\u00055\u0012\u0004cA\r\u0001]A\u0011q\u0006\r\u0007\u0001\t\u0015\tTA1\u0001\u001f\u0005\u0005\u0019\u0006\"B\u001a\u0006\u0001\u0004A\u0012AB2pI\u0016\u001c\u0007\'A\u0004eK\u001a\fW\u000f\u001c;\u0016\u0005YJT#A\u001c\u0011\u0007e\u0001\u0001\b\u0005\u00020s\u0011)!H\u0002b\u0001=\t\tA+A\rbY^\f\u0017p]%oG2,H-\u001a#fM\u0006,H\u000e\u001e,bYV,WCA\u001fA+\u0005q\u0004cA\r\u0001\u007fA\u0011q\u0006\u0011\u0003\u0006u\u001d\u0011\rA\b"
    )
  ScalaInlineInfo: length = 0x9 (unknown attribute)
   01 00 00 01 00 1E 00 1F 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
