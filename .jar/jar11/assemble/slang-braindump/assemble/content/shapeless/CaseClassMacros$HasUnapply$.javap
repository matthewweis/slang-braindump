Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/CaseClassMacros$HasUnapply$.class
  Last modified May 29, 2022; size 8524 bytes
  SHA-256 checksum aab72643e02849cd93fb78a35c481b50ec4e65ed2af21763a7b2e4553a3002f4
  Compiled from "generic.scala"
public class shapeless.CaseClassMacros$HasUnapply$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // shapeless/CaseClassMacros$HasUnapply$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 12, attributes: 5
Constant pool:
    #1 = Utf8               shapeless/CaseClassMacros$HasUnapply$
    #2 = Class              #1            // shapeless/CaseClassMacros$HasUnapply$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               generic.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/Option$WithFilter
   #12 = Class              #11           // scala/Option$WithFilter
   #13 = Utf8               scala/Option
   #14 = Class              #13           // scala/Option
   #15 = Utf8               WithFilter
   #16 = Utf8               scala/reflect/api/Names$NameApi
   #17 = Class              #16           // scala/reflect/api/Names$NameApi
   #18 = Utf8               scala/reflect/api/Names
   #19 = Class              #18           // scala/reflect/api/Names
   #20 = Utf8               NameApi
   #21 = Utf8               scala/reflect/api/Names$TermNameApi
   #22 = Class              #21           // scala/reflect/api/Names$TermNameApi
   #23 = Utf8               TermNameApi
   #24 = Utf8               scala/reflect/api/Names$TermNameExtractor
   #25 = Class              #24           // scala/reflect/api/Names$TermNameExtractor
   #26 = Utf8               TermNameExtractor
   #27 = Utf8               scala/reflect/api/Symbols$MethodSymbolApi
   #28 = Class              #27           // scala/reflect/api/Symbols$MethodSymbolApi
   #29 = Utf8               scala/reflect/api/Symbols
   #30 = Class              #29           // scala/reflect/api/Symbols
   #31 = Utf8               MethodSymbolApi
   #32 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #33 = Class              #32           // scala/reflect/api/Symbols$SymbolApi
   #34 = Utf8               SymbolApi
   #35 = Utf8               scala/reflect/api/Symbols$TermSymbolApi
   #36 = Class              #35           // scala/reflect/api/Symbols$TermSymbolApi
   #37 = Utf8               TermSymbolApi
   #38 = Utf8               scala/reflect/api/Symbols$TypeSymbolApi
   #39 = Class              #38           // scala/reflect/api/Symbols$TypeSymbolApi
   #40 = Utf8               TypeSymbolApi
   #41 = Utf8               scala/reflect/api/TypeTags$TypeTag
   #42 = Class              #41           // scala/reflect/api/TypeTags$TypeTag
   #43 = Utf8               scala/reflect/api/TypeTags
   #44 = Class              #43           // scala/reflect/api/TypeTags
   #45 = Utf8               TypeTag
   #46 = Utf8               scala/reflect/api/TypeTags$TypeTag$
   #47 = Class              #46           // scala/reflect/api/TypeTags$TypeTag$
   #48 = Utf8               TypeTag$
   #49 = Utf8               scala/reflect/api/TypeTags$WeakTypeTag
   #50 = Class              #49           // scala/reflect/api/TypeTags$WeakTypeTag
   #51 = Utf8               WeakTypeTag
   #52 = Utf8               scala/reflect/api/Types$TypeApi
   #53 = Class              #52           // scala/reflect/api/Types$TypeApi
   #54 = Utf8               scala/reflect/api/Types
   #55 = Class              #54           // scala/reflect/api/Types
   #56 = Utf8               TypeApi
   #57 = Utf8               shapeless/CaseClassMacros
   #58 = Class              #57           // shapeless/CaseClassMacros
   #59 = Utf8               HasUnapply$
   #60 = Utf8               shapeless/CaseClassMacros$HasUnapply$$typecreator1$13
   #61 = Class              #60           // shapeless/CaseClassMacros$HasUnapply$$typecreator1$13
   #62 = Utf8               $typecreator1$13
   #63 = Utf8               shapeless/CaseClassMacros$HasUnapply$$typecreator2$1
   #64 = Class              #63           // shapeless/CaseClassMacros$HasUnapply$$typecreator2$1
   #65 = Utf8               $typecreator2$1
   #66 = Utf8               $outer
   #67 = Utf8               Lshapeless/CaseClassMacros;
   #68 = Utf8               unapply
   #69 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #70 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Option<Lscala/collection/immutable/List<Lscala/reflect/api/Types$TypeApi;>;>;
   #71 = Utf8               tpe
   #72 = Utf8               scala/Option$
   #73 = Class              #72           // scala/Option$
   #74 = Utf8               MODULE$
   #75 = Utf8               Lscala/Option$;
   #76 = NameAndType        #74:#75       // MODULE$:Lscala/Option$;
   #77 = Fieldref           #73.#76       // scala/Option$.MODULE$:Lscala/Option$;
   #78 = NameAndType        #66:#67       // $outer:Lshapeless/CaseClassMacros;
   #79 = Fieldref           #2.#78        // shapeless/CaseClassMacros$HasUnapply$.$outer:Lshapeless/CaseClassMacros;
   #80 = Utf8               typeSymbol
   #81 = Utf8               ()Lscala/reflect/api/Symbols$SymbolApi;
   #82 = NameAndType        #80:#81       // typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
   #83 = Methodref          #53.#82       // scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
   #84 = Utf8               patchedCompanionSymbolOf
   #85 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Symbols$SymbolApi;
   #86 = NameAndType        #84:#85       // patchedCompanionSymbolOf:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Symbols$SymbolApi;
   #87 = InterfaceMethodref #58.#86       // shapeless/CaseClassMacros.patchedCompanionSymbolOf:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Symbols$SymbolApi;
   #88 = Utf8               typeSignature
   #89 = Utf8               ()Lscala/reflect/api/Types$TypeApi;
   #90 = NameAndType        #88:#89       // typeSignature:()Lscala/reflect/api/Types$TypeApi;
   #91 = InterfaceMethodref #33.#90       // scala/reflect/api/Symbols$SymbolApi.typeSignature:()Lscala/reflect/api/Types$TypeApi;
   #92 = Utf8               apply
   #93 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #94 = NameAndType        #92:#93       // apply:(Ljava/lang/Object;)Lscala/Option;
   #95 = Methodref          #73.#94       // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
   #96 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #97 = MethodType         #96           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #98 = Utf8               $anonfun$unapply$10
   #99 = Utf8               (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
  #100 = NameAndType        #98:#99       // $anonfun$unapply$10:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
  #101 = Methodref          #2.#100       // shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$10:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
  #102 = MethodHandle       6:#101        // REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$10:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
  #103 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
  #104 = MethodType         #103          //  (Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
  #105 = Integer            5
  #106 = Integer            1
  #107 = Utf8               java/lang/invoke/LambdaMetafactory
  #108 = Class              #107          // java/lang/invoke/LambdaMetafactory
  #109 = Utf8               altMetafactory
  #110 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #111 = NameAndType        #109:#110     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #112 = Methodref          #108.#111     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #113 = MethodHandle       6:#112        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #114 = Utf8               (Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
  #115 = NameAndType        #92:#114      // apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
  #116 = InvokeDynamic      #0:#115       // #0:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
  #117 = Utf8               map
  #118 = Utf8               (Lscala/Function1;)Lscala/Option;
  #119 = NameAndType        #117:#118     // map:(Lscala/Function1;)Lscala/Option;
  #120 = Methodref          #14.#119      // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #121 = Utf8               $anonfun$unapply$11$adapted
  #122 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #123 = NameAndType        #121:#122     // $anonfun$unapply$11$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #124 = Methodref          #2.#123       // shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$11$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #125 = MethodHandle       6:#124        // REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$11$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #126 = MethodType         #122          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #127 = Utf8               ()Lscala/Function1;
  #128 = NameAndType        #92:#127      // apply:()Lscala/Function1;
  #129 = InvokeDynamic      #1:#128       // #1:apply:()Lscala/Function1;
  #130 = Utf8               withFilter
  #131 = Utf8               (Lscala/Function1;)Lscala/Option$WithFilter;
  #132 = NameAndType        #130:#131     // withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #133 = Methodref          #14.#132      // scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #134 = Utf8               $anonfun$unapply$12$adapted
  #135 = Utf8               (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
  #136 = NameAndType        #134:#135     // $anonfun$unapply$12$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
  #137 = Methodref          #2.#136       // shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$12$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
  #138 = MethodHandle       6:#137        // REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$12$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
  #139 = InvokeDynamic      #2:#115       // #2:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
  #140 = Methodref          #12.#132      // scala/Option$WithFilter.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #141 = Utf8               $anonfun$unapply$13$adapted
  #142 = NameAndType        #141:#135     // $anonfun$unapply$13$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
  #143 = Methodref          #2.#142       // shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$13$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
  #144 = MethodHandle       6:#143        // REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$13$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
  #145 = InvokeDynamic      #3:#115       // #3:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
  #146 = Utf8               $anonfun$unapply$14
  #147 = Utf8               (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Lscala/Option;
  #148 = NameAndType        #146:#147     // $anonfun$unapply$14:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Lscala/Option;
  #149 = Methodref          #2.#148       // shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$14:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Lscala/Option;
  #150 = MethodHandle       6:#149        // REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$14:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Lscala/Option;
  #151 = Utf8               (Lscala/Tuple2;)Lscala/Option;
  #152 = MethodType         #151          //  (Lscala/Tuple2;)Lscala/Option;
  #153 = InvokeDynamic      #4:#115       // #4:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
  #154 = Utf8               flatMap
  #155 = NameAndType        #154:#118     // flatMap:(Lscala/Function1;)Lscala/Option;
  #156 = Methodref          #12.#155      // scala/Option$WithFilter.flatMap:(Lscala/Function1;)Lscala/Option;
  #157 = Utf8               this
  #158 = Utf8               Lshapeless/CaseClassMacros$HasUnapply$;
  #159 = Utf8               Lscala/reflect/api/Types$TypeApi;
  #160 = Utf8               $this
  #161 = Utf8               companion
  #162 = Utf8               c
  #163 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
  #164 = NameAndType        #162:#163     // c:()Lscala/reflect/macros/whitebox/Context;
  #165 = InterfaceMethodref #58.#164      // shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
  #166 = Utf8               scala/reflect/macros/whitebox/Context
  #167 = Class              #166          // scala/reflect/macros/whitebox/Context
  #168 = Utf8               universe
  #169 = Utf8               ()Lscala/reflect/macros/Universe;
  #170 = NameAndType        #168:#169     // universe:()Lscala/reflect/macros/Universe;
  #171 = InterfaceMethodref #167.#170     // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
  #172 = Utf8               scala/reflect/macros/Universe
  #173 = Class              #172          // scala/reflect/macros/Universe
  #174 = Utf8               TermName
  #175 = Utf8               ()Lscala/reflect/api/Names$TermNameExtractor;
  #176 = NameAndType        #174:#175     // TermName:()Lscala/reflect/api/Names$TermNameExtractor;
  #177 = Methodref          #173.#176     // scala/reflect/macros/Universe.TermName:()Lscala/reflect/api/Names$TermNameExtractor;
  #178 = String             #68           // unapply
  #179 = Utf8               (Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #180 = NameAndType        #92:#179      // apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #181 = Methodref          #25.#180      // scala/reflect/api/Names$TermNameExtractor.apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #182 = Utf8               member
  #183 = Utf8               (Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Symbols$SymbolApi;
  #184 = NameAndType        #182:#183     // member:(Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Symbols$SymbolApi;
  #185 = Methodref          #53.#184      // scala/reflect/api/Types$TypeApi.member:(Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Symbols$SymbolApi;
  #186 = Utf8               scala/Tuple2
  #187 = Class              #186          // scala/Tuple2
  #188 = Utf8               <init>
  #189 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #190 = NameAndType        #188:#189     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #191 = Methodref          #187.#190     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #192 = Utf8               Lscala/reflect/api/Symbols$SymbolApi;
  #193 = Utf8               $anonfun$unapply$11
  #194 = Utf8               (Lscala/Tuple2;)Z
  #195 = Utf8               x$24
  #196 = Utf8               _2
  #197 = Utf8               ()Ljava/lang/Object;
  #198 = NameAndType        #196:#197     // _2:()Ljava/lang/Object;
  #199 = Methodref          #187.#198     // scala/Tuple2._2:()Ljava/lang/Object;
  #200 = Utf8               isTerm
  #201 = Utf8               ()Z
  #202 = NameAndType        #200:#201     // isTerm:()Z
  #203 = InterfaceMethodref #33.#202      // scala/reflect/api/Symbols$SymbolApi.isTerm:()Z
  #204 = Utf8               asTerm
  #205 = Utf8               ()Lscala/reflect/api/Symbols$TermSymbolApi;
  #206 = NameAndType        #204:#205     // asTerm:()Lscala/reflect/api/Symbols$TermSymbolApi;
  #207 = InterfaceMethodref #33.#206      // scala/reflect/api/Symbols$SymbolApi.asTerm:()Lscala/reflect/api/Symbols$TermSymbolApi;
  #208 = Utf8               isOverloaded
  #209 = NameAndType        #208:#201     // isOverloaded:()Z
  #210 = InterfaceMethodref #36.#209      // scala/reflect/api/Symbols$TermSymbolApi.isOverloaded:()Z
  #211 = Utf8               scala/MatchError
  #212 = Class              #211          // scala/MatchError
  #213 = Utf8               (Ljava/lang/Object;)V
  #214 = NameAndType        #188:#213     // "<init>":(Ljava/lang/Object;)V
  #215 = Methodref          #212.#214     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #216 = Utf8               Lscala/Tuple2;
  #217 = Utf8               $anonfun$unapply$12
  #218 = Utf8               (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Z
  #219 = Utf8               x$25
  #220 = Utf8               isMethod
  #221 = NameAndType        #220:#201     // isMethod:()Z
  #222 = InterfaceMethodref #33.#221      // scala/reflect/api/Symbols$SymbolApi.isMethod:()Z
  #223 = Utf8               isNonGeneric
  #224 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Z
  #225 = NameAndType        #223:#224     // isNonGeneric:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #226 = InterfaceMethodref #58.#225      // shapeless/CaseClassMacros.isNonGeneric:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #227 = Utf8               $anonfun$unapply$13
  #228 = Utf8               x$26
  #229 = Utf8               _1
  #230 = NameAndType        #229:#197     // _1:()Ljava/lang/Object;
  #231 = Methodref          #187.#230     // scala/Tuple2._1:()Ljava/lang/Object;
  #232 = Utf8               isAccessible
  #233 = Utf8               (Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Z
  #234 = NameAndType        #232:#233     // isAccessible:(Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Z
  #235 = InterfaceMethodref #58.#234      // shapeless/CaseClassMacros.isAccessible:(Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Z
  #236 = Utf8               $anonfun$unapply$15
  #237 = Utf8               (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
  #238 = Utf8               returnTpe
  #239 = Utf8               rootMirror
  #240 = Utf8               ()Lscala/reflect/api/Mirror;
  #241 = NameAndType        #239:#240     // rootMirror:()Lscala/reflect/api/Mirror;
  #242 = Methodref          #173.#241     // scala/reflect/macros/Universe.rootMirror:()Lscala/reflect/api/Mirror;
  #243 = Utf8               ()Lscala/reflect/api/TypeTags$TypeTag$;
  #244 = NameAndType        #45:#243      // TypeTag:()Lscala/reflect/api/TypeTags$TypeTag$;
  #245 = Methodref          #173.#244     // scala/reflect/macros/Universe.TypeTag:()Lscala/reflect/api/TypeTags$TypeTag$;
  #246 = Utf8               (Lshapeless/CaseClassMacros$HasUnapply$;)V
  #247 = NameAndType        #188:#246     // "<init>":(Lshapeless/CaseClassMacros$HasUnapply$;)V
  #248 = Methodref          #64.#247      // shapeless/CaseClassMacros$HasUnapply$$typecreator2$1."<init>":(Lshapeless/CaseClassMacros$HasUnapply$;)V
  #249 = Utf8               (Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
  #250 = NameAndType        #92:#249      // apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
  #251 = Methodref          #47.#250      // scala/reflect/api/TypeTags$TypeTag$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
  #252 = Utf8               typeOf
  #253 = Utf8               (Lscala/reflect/api/TypeTags$TypeTag;)Lscala/reflect/api/Types$TypeApi;
  #254 = NameAndType        #252:#253     // typeOf:(Lscala/reflect/api/TypeTags$TypeTag;)Lscala/reflect/api/Types$TypeApi;
  #255 = Methodref          #173.#254     // scala/reflect/macros/Universe.typeOf:(Lscala/reflect/api/TypeTags$TypeTag;)Lscala/reflect/api/Types$TypeApi;
  #256 = Utf8               $less$colon$less
  #257 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Z
  #258 = NameAndType        #256:#257     // $less$colon$less:(Lscala/reflect/api/Types$TypeApi;)Z
  #259 = Methodref          #53.#258      // scala/reflect/api/Types$TypeApi.$less$colon$less:(Lscala/reflect/api/Types$TypeApi;)Z
  #260 = Utf8               typeArgs
  #261 = Utf8               ()Lscala/collection/immutable/List;
  #262 = NameAndType        #260:#261     // typeArgs:()Lscala/collection/immutable/List;
  #263 = Methodref          #53.#262      // scala/reflect/api/Types$TypeApi.typeArgs:()Lscala/collection/immutable/List;
  #264 = Utf8               scala/collection/immutable/$colon$colon
  #265 = Class              #264          // scala/collection/immutable/$colon$colon
  #266 = Utf8               scala/collection/immutable/Nil$
  #267 = Class              #266          // scala/collection/immutable/Nil$
  #268 = Utf8               Lscala/collection/immutable/Nil$;
  #269 = NameAndType        #74:#268      // MODULE$:Lscala/collection/immutable/Nil$;
  #270 = Fieldref           #267.#269     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #271 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #272 = NameAndType        #188:#271     // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #273 = Methodref          #265.#272     // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #274 = Utf8               scala/collection/immutable/List
  #275 = Class              #274          // scala/collection/immutable/List
  #276 = Utf8               $u
  #277 = Utf8               Lscala/reflect/macros/Universe;
  #278 = Utf8               $m
  #279 = Utf8               Lscala/reflect/api/Mirror;
  #280 = Utf8               scala/reflect/api/Mirror
  #281 = Class              #280          // scala/reflect/api/Mirror
  #282 = Utf8               x$27
  #283 = Utf8               asMethod
  #284 = Utf8               ()Lscala/reflect/api/Symbols$MethodSymbolApi;
  #285 = NameAndType        #283:#284     // asMethod:()Lscala/reflect/api/Symbols$MethodSymbolApi;
  #286 = InterfaceMethodref #33.#285      // scala/reflect/api/Symbols$SymbolApi.asMethod:()Lscala/reflect/api/Symbols$MethodSymbolApi;
  #287 = Utf8               typeSignatureIn
  #288 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #289 = NameAndType        #287:#288     // typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #290 = InterfaceMethodref #28.#289      // scala/reflect/api/Symbols$MethodSymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #291 = Utf8               finalResultType
  #292 = NameAndType        #291:#89      // finalResultType:()Lscala/reflect/api/Types$TypeApi;
  #293 = Methodref          #53.#292      // scala/reflect/api/Types$TypeApi.finalResultType:()Lscala/reflect/api/Types$TypeApi;
  #294 = Methodref          #61.#247      // shapeless/CaseClassMacros$HasUnapply$$typecreator1$13."<init>":(Lshapeless/CaseClassMacros$HasUnapply$;)V
  #295 = Utf8               symbolOf
  #296 = Utf8               (Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Symbols$TypeSymbolApi;
  #297 = NameAndType        #295:#296     // symbolOf:(Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Symbols$TypeSymbolApi;
  #298 = Methodref          #173.#297     // scala/reflect/macros/Universe.symbolOf:(Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Symbols$TypeSymbolApi;
  #299 = Utf8               baseType
  #300 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Types$TypeApi;
  #301 = NameAndType        #299:#300     // baseType:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Types$TypeApi;
  #302 = Methodref          #53.#301      // scala/reflect/api/Types$TypeApi.baseType:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Types$TypeApi;
  #303 = Utf8               headOption
  #304 = Utf8               ()Lscala/Option;
  #305 = NameAndType        #303:#304     // headOption:()Lscala/Option;
  #306 = Methodref          #275.#305     // scala/collection/immutable/List.headOption:()Lscala/Option;
  #307 = NameAndType        #236:#237     // $anonfun$unapply$15:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
  #308 = Methodref          #2.#307       // shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$15:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
  #309 = MethodHandle       6:#308        // REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$15:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
  #310 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
  #311 = MethodType         #310          //  (Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
  #312 = InvokeDynamic      #5:#115       // #5:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
  #313 = Utf8               (Lshapeless/CaseClassMacros;)V
  #314 = Utf8               ()V
  #315 = NameAndType        #188:#314     // "<init>":()V
  #316 = Methodref          #4.#315       // java/lang/Object."<init>":()V
  #317 = NameAndType        #193:#194     // $anonfun$unapply$11:(Lscala/Tuple2;)Z
  #318 = Methodref          #2.#317       // shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$11:(Lscala/Tuple2;)Z
  #319 = Utf8               scala/runtime/BoxesRunTime
  #320 = Class              #319          // scala/runtime/BoxesRunTime
  #321 = Utf8               boxToBoolean
  #322 = Utf8               (Z)Ljava/lang/Boolean;
  #323 = NameAndType        #321:#322     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #324 = Methodref          #320.#323     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #325 = NameAndType        #217:#218     // $anonfun$unapply$12:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Z
  #326 = Methodref          #2.#325       // shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$12:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Z
  #327 = NameAndType        #227:#218     // $anonfun$unapply$13:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Z
  #328 = Methodref          #2.#327       // shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$13:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Z
  #329 = Utf8               $deserializeLambda$
  #330 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #331 = Utf8               scala/runtime/LambdaDeserialize
  #332 = Class              #331          // scala/runtime/LambdaDeserialize
  #333 = Utf8               bootstrap
  #334 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #335 = NameAndType        #333:#334     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #336 = Methodref          #332.#335     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #337 = MethodHandle       6:#336        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #338 = Utf8               lambdaDeserialize
  #339 = NameAndType        #338:#330     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #340 = InvokeDynamic      #6:#339       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #341 = Utf8               Code
  #342 = Utf8               LineNumberTable
  #343 = Utf8               LocalVariableTable
  #344 = Utf8               Signature
  #345 = Utf8               MethodParameters
  #346 = Utf8               StackMapTable
  #347 = Utf8               InnerClasses
  #348 = Utf8               SourceFile
  #349 = Utf8               BootstrapMethods
  #350 = Utf8               ScalaInlineInfo
  #351 = Utf8               Scala
{
  private final shapeless.CaseClassMacros $outer;
    descriptor: Lshapeless/CaseClassMacros;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public scala.Option<scala.collection.immutable.List<scala.reflect.api.Types$TypeApi>> unapply(scala.reflect.api.Types$TypeApi);
    descriptor: (Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #77                 // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
         7: aload_1
         8: invokevirtual #83                 // Method scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
        11: invokeinterface #87,  2           // InterfaceMethod shapeless/CaseClassMacros.patchedCompanionSymbolOf:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Symbols$SymbolApi;
        16: invokeinterface #91,  1           // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.typeSignature:()Lscala/reflect/api/Types$TypeApi;
        21: invokevirtual #95                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        24: aload_0
        25: invokedynamic #116,  0            // InvokeDynamic #0:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
        30: invokevirtual #120                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        33: invokedynamic #129,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        38: invokevirtual #133                // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        41: aload_0
        42: invokedynamic #139,  0            // InvokeDynamic #2:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
        47: invokevirtual #140                // Method scala/Option$WithFilter.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        50: aload_0
        51: invokedynamic #145,  0            // InvokeDynamic #3:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
        56: invokevirtual #140                // Method scala/Option$WithFilter.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        59: aload_0
        60: invokedynamic #153,  0            // InvokeDynamic #4:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
        65: invokevirtual #156                // Method scala/Option$WithFilter.flatMap:(Lscala/Function1;)Lscala/Option;
        68: areturn
      LineNumberTable:
        line 832: 0
        line 834: 33
        line 832: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      69     0  this   Lshapeless/CaseClassMacros$HasUnapply$;
            0      69     1   tpe   Lscala/reflect/api/Types$TypeApi;
    Signature: #70                          // (Lscala/reflect/api/Types$TypeApi;)Lscala/Option<Lscala/collection/immutable/List<Lscala/reflect/api/Types$TypeApi;>;>;
    MethodParameters:
      Name                           Flags
      tpe                            final

  public static final scala.Tuple2 $anonfun$unapply$10(shapeless.CaseClassMacros$HasUnapply$, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
         5: invokeinterface #165,  1          // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        10: invokeinterface #171,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        15: invokevirtual #177                // Method scala/reflect/macros/Universe.TermName:()Lscala/reflect/api/Names$TermNameExtractor;
        18: ldc           #178                // String unapply
        20: invokevirtual #181                // Method scala/reflect/api/Names$TermNameExtractor.apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
        23: checkcast     #17                 // class scala/reflect/api/Names$NameApi
        26: invokevirtual #185                // Method scala/reflect/api/Types$TypeApi.member:(Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Symbols$SymbolApi;
        29: astore_2
        30: new           #187                // class scala/Tuple2
        33: dup
        34: aload_1
        35: aload_2
        36: invokespecial #191                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        39: areturn
      LineNumberTable:
        line 833: 0
        line 832: 30
        line 833: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      10     2 unapply   Lscala/reflect/api/Symbols$SymbolApi;
            0      40     0 $this   Lshapeless/CaseClassMacros$HasUnapply$;
            0      40     1 companion   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      companion                      final

  public static final boolean $anonfun$unapply$11(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        46
         6: aload_2
         7: invokevirtual #199                // Method scala/Tuple2._2:()Ljava/lang/Object;
        10: checkcast     #33                 // class scala/reflect/api/Symbols$SymbolApi
        13: astore_3
        14: aload_3
        15: invokeinterface #203,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.isTerm:()Z
        20: ifeq          41
        23: aload_3
        24: invokeinterface #207,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.asTerm:()Lscala/reflect/api/Symbols$TermSymbolApi;
        29: invokeinterface #210,  1          // InterfaceMethod scala/reflect/api/Symbols$TermSymbolApi.isOverloaded:()Z
        34: ifne          41
        37: iconst_1
        38: goto          42
        41: iconst_0
        42: istore_1
        43: goto          58
        46: goto          49
        49: new           #212                // class scala/MatchError
        52: dup
        53: aload_2
        54: invokespecial #215                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        57: athrow
        58: iload_1
        59: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 41
          locals = [ top, class scala/Tuple2, class scala/reflect/api/Symbols$SymbolApi ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, int, class scala/Tuple2, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 834: 0
        line 832: 2
        line 833: 6
        line 834: 14
        line 832: 46
        line 834: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      33     3 unapply   Lscala/reflect/api/Symbols$SymbolApi;
            0      60     0  x$24   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$24                           final

  public static final boolean $anonfun$unapply$12(shapeless.CaseClassMacros$HasUnapply$, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        48
         6: aload_3
         7: invokevirtual #199                // Method scala/Tuple2._2:()Ljava/lang/Object;
        10: checkcast     #33                 // class scala/reflect/api/Symbols$SymbolApi
        13: astore        4
        15: aload         4
        17: invokeinterface #222,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.isMethod:()Z
        22: ifeq          43
        25: aload_0
        26: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
        29: aload         4
        31: invokeinterface #226,  2          // InterfaceMethod shapeless/CaseClassMacros.isNonGeneric:(Lscala/reflect/api/Symbols$SymbolApi;)Z
        36: ifne          43
        39: iconst_1
        40: goto          44
        43: iconst_0
        44: istore_2
        45: goto          60
        48: goto          51
        51: new           #212                // class scala/MatchError
        54: dup
        55: aload_3
        56: invokespecial #215                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        59: athrow
        60: iload_2
        61: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ top, class scala/Tuple2, class scala/reflect/api/Symbols$SymbolApi ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class shapeless/CaseClassMacros$HasUnapply$, class scala/Tuple2, int, class scala/Tuple2, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 834: 0
        line 832: 2
        line 833: 6
        line 835: 15
        line 832: 48
        line 834: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      35     4 unapply   Lscala/reflect/api/Symbols$SymbolApi;
            0      62     0 $this   Lshapeless/CaseClassMacros$HasUnapply$;
            0      62     1  x$25   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$25                           final

  public static final boolean $anonfun$unapply$13(shapeless.CaseClassMacros$HasUnapply$, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        41
         6: aload_3
         7: invokevirtual #231                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #53                 // class scala/reflect/api/Types$TypeApi
        13: astore        4
        15: aload_3
        16: invokevirtual #199                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #33                 // class scala/reflect/api/Symbols$SymbolApi
        22: astore        5
        24: aload_0
        25: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
        28: aload         4
        30: aload         5
        32: invokeinterface #235,  3          // InterfaceMethod shapeless/CaseClassMacros.isAccessible:(Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Z
        37: istore_2
        38: goto          53
        41: goto          44
        44: new           #212                // class scala/MatchError
        47: dup
        48: aload_3
        49: invokespecial #215                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        52: athrow
        53: iload_2
        54: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class shapeless/CaseClassMacros$HasUnapply$, class scala/Tuple2, int, class scala/Tuple2, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 834: 0
        line 832: 2
        line 833: 15
        line 836: 24
        line 832: 41
        line 834: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      28     4 companion   Lscala/reflect/api/Types$TypeApi;
           22      19     5 unapply   Lscala/reflect/api/Symbols$SymbolApi;
            0      55     0 $this   Lshapeless/CaseClassMacros$HasUnapply$;
            0      55     1  x$26   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$26                           final

  public static final scala.collection.immutable.List $anonfun$unapply$15(shapeless.CaseClassMacros$HasUnapply$, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=4, args_size=2
         0: aload_1
         1: aload_0
         2: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
         5: invokeinterface #165,  1          // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        10: invokeinterface #171,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        15: aload_0
        16: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
        19: invokeinterface #165,  1          // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        24: invokeinterface #171,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        29: astore_2
        30: aload_0
        31: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
        34: invokeinterface #165,  1          // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        39: invokeinterface #171,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        44: invokevirtual #242                // Method scala/reflect/macros/Universe.rootMirror:()Lscala/reflect/api/Mirror;
        47: astore_3
        48: aload_2
        49: invokevirtual #245                // Method scala/reflect/macros/Universe.TypeTag:()Lscala/reflect/api/TypeTags$TypeTag$;
        52: aload_3
        53: new           #64                 // class shapeless/CaseClassMacros$HasUnapply$$typecreator2$1
        56: dup
        57: aconst_null
        58: invokespecial #248                // Method shapeless/CaseClassMacros$HasUnapply$$typecreator2$1."<init>":(Lshapeless/CaseClassMacros$HasUnapply$;)V
        61: invokevirtual #251                // Method scala/reflect/api/TypeTags$TypeTag$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
        64: invokevirtual #255                // Method scala/reflect/macros/Universe.typeOf:(Lscala/reflect/api/TypeTags$TypeTag;)Lscala/reflect/api/Types$TypeApi;
        67: invokevirtual #259                // Method scala/reflect/api/Types$TypeApi.$less$colon$less:(Lscala/reflect/api/Types$TypeApi;)Z
        70: ifeq          80
        73: aload_1
        74: invokevirtual #263                // Method scala/reflect/api/Types$TypeApi.typeArgs:()Lscala/collection/immutable/List;
        77: goto          94
        80: new           #265                // class scala/collection/immutable/$colon$colon
        83: dup
        84: aload_1
        85: getstatic     #270                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        88: invokespecial #273                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
        91: checkcast     #275                // class scala/collection/immutable/List
        94: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 80
          locals = [ class scala/reflect/macros/Universe, class scala/reflect/api/Mirror ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/List ]
      LineNumberTable:
        line 839: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      35     2    $u   Lscala/reflect/macros/Universe;
           47      17     3    $m   Lscala/reflect/api/Mirror;
            0      95     0 $this   Lshapeless/CaseClassMacros$HasUnapply$;
            0      95     1 returnTpe   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      returnTpe                      final

  public static final scala.Option $anonfun$unapply$14(shapeless.CaseClassMacros$HasUnapply$, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=8, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        133
         6: aload_3
         7: invokevirtual #231                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #53                 // class scala/reflect/api/Types$TypeApi
        13: astore        4
        15: aload_3
        16: invokevirtual #199                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #33                 // class scala/reflect/api/Symbols$SymbolApi
        22: astore        5
        24: aload         5
        26: invokeinterface #286,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.asMethod:()Lscala/reflect/api/Symbols$MethodSymbolApi;
        31: aload         4
        33: invokeinterface #290,  2          // InterfaceMethod scala/reflect/api/Symbols$MethodSymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
        38: invokevirtual #293                // Method scala/reflect/api/Types$TypeApi.finalResultType:()Lscala/reflect/api/Types$TypeApi;
        41: aload_0
        42: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
        45: invokeinterface #165,  1          // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        50: invokeinterface #171,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        55: aload_0
        56: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
        59: invokeinterface #165,  1          // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        64: invokeinterface #171,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        69: astore        6
        71: aload_0
        72: getfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
        75: invokeinterface #165,  1          // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        80: invokeinterface #171,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        85: invokevirtual #242                // Method scala/reflect/macros/Universe.rootMirror:()Lscala/reflect/api/Mirror;
        88: astore        7
        90: aload         6
        92: invokevirtual #245                // Method scala/reflect/macros/Universe.TypeTag:()Lscala/reflect/api/TypeTags$TypeTag$;
        95: aload         7
        97: new           #61                 // class shapeless/CaseClassMacros$HasUnapply$$typecreator1$13
       100: dup
       101: aconst_null
       102: invokespecial #294                // Method shapeless/CaseClassMacros$HasUnapply$$typecreator1$13."<init>":(Lshapeless/CaseClassMacros$HasUnapply$;)V
       105: invokevirtual #251                // Method scala/reflect/api/TypeTags$TypeTag$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
       108: invokevirtual #298                // Method scala/reflect/macros/Universe.symbolOf:(Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Symbols$TypeSymbolApi;
       111: invokevirtual #302                // Method scala/reflect/api/Types$TypeApi.baseType:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/reflect/api/Types$TypeApi;
       114: invokevirtual #263                // Method scala/reflect/api/Types$TypeApi.typeArgs:()Lscala/collection/immutable/List;
       117: invokevirtual #306                // Method scala/collection/immutable/List.headOption:()Lscala/Option;
       120: aload_0
       121: invokedynamic #312,  0            // InvokeDynamic #5:apply:(Lshapeless/CaseClassMacros$HasUnapply$;)Lscala/Function1;
       126: invokevirtual #120                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       129: astore_2
       130: goto          145
       133: goto          136
       136: new           #212                // class scala/MatchError
       139: dup
       140: aload_3
       141: invokespecial #215                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       144: athrow
       145: aload_2
       146: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 133
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class shapeless/CaseClassMacros$HasUnapply$, class scala/Tuple2, class scala/Option, class scala/Tuple2, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Symbols$SymbolApi, class scala/reflect/macros/Universe, class scala/reflect/api/Mirror ]
          stack = []
      LineNumberTable:
        line 832: 0
        line 833: 15
        line 837: 24
        line 838: 41
        line 837: 120
        line 832: 133
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           69      39     6    $u   Lscala/reflect/macros/Universe;
           88      20     7    $m   Lscala/reflect/api/Mirror;
           13     120     4 companion   Lscala/reflect/api/Types$TypeApi;
           22     111     5 unapply   Lscala/reflect/api/Symbols$SymbolApi;
            0     147     0 $this   Lshapeless/CaseClassMacros$HasUnapply$;
            0     147     1  x$27   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$27                           final

  public shapeless.CaseClassMacros$HasUnapply$(shapeless.CaseClassMacros);
    descriptor: (Lshapeless/CaseClassMacros;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #79                 // Field $outer:Lshapeless/CaseClassMacros;
        11: aload_0
        12: invokespecial #316                // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 830: 0
        line 842: 11
        line 830: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lshapeless/CaseClassMacros$HasUnapply$;
            0      16     1 $outer   Lshapeless/CaseClassMacros;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic

  public static final java.lang.Object $anonfun$unapply$11$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #318                // Method $anonfun$unapply$11:(Lscala/Tuple2;)Z
         4: invokestatic  #324                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 834: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$24   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$24                           final

  public static final java.lang.Object $anonfun$unapply$12$adapted(shapeless.CaseClassMacros$HasUnapply$, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #326                // Method $anonfun$unapply$12:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Z
         5: invokestatic  #324                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 834: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lshapeless/CaseClassMacros$HasUnapply$;
            0       9     1  x$25   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$25                           final

  public static final java.lang.Object $anonfun$unapply$13$adapted(shapeless.CaseClassMacros$HasUnapply$, scala.Tuple2);
    descriptor: (Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #328                // Method $anonfun$unapply$13:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Z
         5: invokestatic  #324                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 834: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lshapeless/CaseClassMacros$HasUnapply$;
            0       9     1  x$26   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$26                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #340,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // WithFilter=class scala/Option$WithFilter of class scala/Option
  public abstract #20= #17 of #19;        // NameApi=class scala/reflect/api/Names$NameApi of class scala/reflect/api/Names
  public #23= #22 of #19;                 // TermNameApi=class scala/reflect/api/Names$TermNameApi of class scala/reflect/api/Names
  public abstract #26= #25 of #19;        // TermNameExtractor=class scala/reflect/api/Names$TermNameExtractor of class scala/reflect/api/Names
  public #31= #28 of #30;                 // MethodSymbolApi=class scala/reflect/api/Symbols$MethodSymbolApi of class scala/reflect/api/Symbols
  public #34= #33 of #30;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public #37= #36 of #30;                 // TermSymbolApi=class scala/reflect/api/Symbols$TermSymbolApi of class scala/reflect/api/Symbols
  public #40= #39 of #30;                 // TypeSymbolApi=class scala/reflect/api/Symbols$TypeSymbolApi of class scala/reflect/api/Symbols
  public #45= #42 of #44;                 // TypeTag=class scala/reflect/api/TypeTags$TypeTag of class scala/reflect/api/TypeTags
  public #48= #47 of #44;                 // TypeTag$=class scala/reflect/api/TypeTags$TypeTag$ of class scala/reflect/api/TypeTags
  public #51= #50 of #44;                 // WeakTypeTag=class scala/reflect/api/TypeTags$WeakTypeTag of class scala/reflect/api/TypeTags
  public abstract #56= #53 of #55;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public #59= #2 of #58;                  // HasUnapply$=class shapeless/CaseClassMacros$HasUnapply$ of class shapeless/CaseClassMacros
  public final #62= #61;                  // $typecreator1$13=class shapeless/CaseClassMacros$HasUnapply$$typecreator1$13
  public final #65= #64;                  // $typecreator2$1=class shapeless/CaseClassMacros$HasUnapply$$typecreator2$1
SourceFile: "generic.scala"
BootstrapMethods:
  0: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #97 (Ljava/lang/Object;)Ljava/lang/Object;
      #102 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$10:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
      #104 (Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
      #105 5
      #106 1
      #104 (Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
  1: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #97 (Ljava/lang/Object;)Ljava/lang/Object;
      #125 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$11$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #126 (Lscala/Tuple2;)Ljava/lang/Object;
      #105 5
      #106 1
      #126 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #97 (Ljava/lang/Object;)Ljava/lang/Object;
      #138 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$12$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
      #126 (Lscala/Tuple2;)Ljava/lang/Object;
      #105 5
      #106 1
      #126 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #97 (Ljava/lang/Object;)Ljava/lang/Object;
      #144 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$13$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
      #126 (Lscala/Tuple2;)Ljava/lang/Object;
      #105 5
      #106 1
      #126 (Lscala/Tuple2;)Ljava/lang/Object;
  4: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #97 (Ljava/lang/Object;)Ljava/lang/Object;
      #150 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$14:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Lscala/Option;
      #152 (Lscala/Tuple2;)Lscala/Option;
      #105 5
      #106 1
      #152 (Lscala/Tuple2;)Lscala/Option;
  5: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #97 (Ljava/lang/Object;)Ljava/lang/Object;
      #309 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$15:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
      #311 (Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
      #105 5
      #106 1
      #311 (Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
  6: #337 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #102 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$10:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/Tuple2;
      #125 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$11$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #138 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$12$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
      #144 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$13$adapted:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Ljava/lang/Object;
      #150 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$14:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/Tuple2;)Lscala/Option;
      #309 REF_invokeStatic shapeless/CaseClassMacros$HasUnapply$.$anonfun$unapply$15:(Lshapeless/CaseClassMacros$HasUnapply$;Lscala/reflect/api/Types$TypeApi;)Lscala/collection/immutable/List;
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 01 00 0B 00 62 00 63 01 00 79 00 7A 01 00 C1
   00 C2 01 00 86 00 87 01 00 D9 00 DA 01 00 8D 00
   87 01 00 E3 00 DA 01 00 92 00 93 01 00 EC 00 ED
   01 00 BC 01 39 01 00 44 00 45 01
  Scala: length = 0x0 (unknown attribute)

