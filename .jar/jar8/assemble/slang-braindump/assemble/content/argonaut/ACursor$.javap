Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/ACursor$.class
  Last modified May 29, 2022; size 2370 bytes
  SHA-256 checksum cf97891bb87a552d5bb8a67e0705831a959ae0089dcc50390c067440ead482d7
  Compiled from "ACursor.scala"
public final class argonaut.ACursor$ implements argonaut.ACursors,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/ACursor$
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 1, methods: 9, attributes: 3
Constant pool:
    #1 = Utf8               argonaut/ACursor$
    #2 = Class              #1            // argonaut/ACursor$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               argonaut/ACursors
    #6 = Class              #5            // argonaut/ACursors
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               ACursor.scala
   #10 = Utf8               MODULE$
   #11 = Utf8               Largonaut/ACursor$;
   #12 = Utf8               <clinit>
   #13 = Utf8               ()V
   #14 = Utf8               <init>
   #15 = NameAndType        #14:#13       // "<init>":()V
   #16 = Methodref          #2.#15        // argonaut/ACursor$."<init>":()V
   #17 = NameAndType        #10:#11       // MODULE$:Largonaut/ACursor$;
   #18 = Fieldref           #2.#17        // argonaut/ACursor$.MODULE$:Largonaut/ACursor$;
   #19 = Utf8               $init$
   #20 = Utf8               (Largonaut/ACursors;)V
   #21 = NameAndType        #19:#20       // $init$:(Largonaut/ACursors;)V
   #22 = InterfaceMethodref #6.#21        // argonaut/ACursors.$init$:(Largonaut/ACursors;)V
   #23 = Utf8               okACursor
   #24 = Utf8               (Largonaut/HCursor;)Largonaut/ACursor;
   #25 = Utf8               cursor
   #26 = Utf8               okACursor$
   #27 = Utf8               (Largonaut/ACursors;Largonaut/HCursor;)Largonaut/ACursor;
   #28 = NameAndType        #26:#27       // okACursor$:(Largonaut/ACursors;Largonaut/HCursor;)Largonaut/ACursor;
   #29 = InterfaceMethodref #6.#28        // argonaut/ACursors.okACursor$:(Largonaut/ACursors;Largonaut/HCursor;)Largonaut/ACursor;
   #30 = Utf8               this
   #31 = Utf8               Largonaut/HCursor;
   #32 = Utf8               failACursor
   #33 = Utf8               failACursor$
   #34 = NameAndType        #33:#27       // failACursor$:(Largonaut/ACursors;Largonaut/HCursor;)Largonaut/ACursor;
   #35 = InterfaceMethodref #6.#34        // argonaut/ACursors.failACursor$:(Largonaut/ACursors;Largonaut/HCursor;)Largonaut/ACursor;
   #36 = Utf8               ok
   #37 = Utf8               argonaut/ACursor
   #38 = Class              #37           // argonaut/ACursor
   #39 = Utf8               scala/package$
   #40 = Class              #39           // scala/package$
   #41 = Utf8               Lscala/package$;
   #42 = NameAndType        #10:#41       // MODULE$:Lscala/package$;
   #43 = Fieldref           #40.#42       // scala/package$.MODULE$:Lscala/package$;
   #44 = Utf8               Right
   #45 = Utf8               ()Lscala/util/Right$;
   #46 = NameAndType        #44:#45       // Right:()Lscala/util/Right$;
   #47 = Methodref          #40.#46       // scala/package$.Right:()Lscala/util/Right$;
   #48 = Utf8               scala/util/Right$
   #49 = Class              #48           // scala/util/Right$
   #50 = Utf8               apply
   #51 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
   #52 = NameAndType        #50:#51       // apply:(Ljava/lang/Object;)Lscala/util/Right;
   #53 = Methodref          #49.#52       // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
   #54 = Utf8               (Lscala/util/Either;)V
   #55 = NameAndType        #14:#54       // "<init>":(Lscala/util/Either;)V
   #56 = Methodref          #38.#55       // argonaut/ACursor."<init>":(Lscala/util/Either;)V
   #57 = Utf8               fail
   #58 = Utf8               Left
   #59 = Utf8               ()Lscala/util/Left$;
   #60 = NameAndType        #58:#59       // Left:()Lscala/util/Left$;
   #61 = Methodref          #40.#60       // scala/package$.Left:()Lscala/util/Left$;
   #62 = Utf8               scala/util/Left$
   #63 = Class              #62           // scala/util/Left$
   #64 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
   #65 = NameAndType        #50:#64       // apply:(Ljava/lang/Object;)Lscala/util/Left;
   #66 = Methodref          #63.#65       // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
   #67 = Utf8               (Lscala/util/Either;)Largonaut/ACursor;
   #68 = Utf8               (Lscala/util/Either<Largonaut/HCursor;Largonaut/HCursor;>;)Largonaut/ACursor;
   #69 = Utf8               either
   #70 = Utf8               Lscala/util/Either;
   #71 = Utf8               unapply
   #72 = Utf8               (Largonaut/ACursor;)Lscala/Option;
   #73 = Utf8               (Largonaut/ACursor;)Lscala/Option<Lscala/util/Either<Largonaut/HCursor;Largonaut/HCursor;>;>;
   #74 = Utf8               x$0
   #75 = Utf8               scala/None$
   #76 = Class              #75           // scala/None$
   #77 = Utf8               Lscala/None$;
   #78 = NameAndType        #10:#77       // MODULE$:Lscala/None$;
   #79 = Fieldref           #76.#78       // scala/None$.MODULE$:Lscala/None$;
   #80 = Utf8               scala/Some
   #81 = Class              #80           // scala/Some
   #82 = Utf8               ()Lscala/util/Either;
   #83 = NameAndType        #69:#82       // either:()Lscala/util/Either;
   #84 = Methodref          #38.#83       // argonaut/ACursor.either:()Lscala/util/Either;
   #85 = Utf8               (Ljava/lang/Object;)V
   #86 = NameAndType        #14:#85       // "<init>":(Ljava/lang/Object;)V
   #87 = Methodref          #81.#86       // scala/Some."<init>":(Ljava/lang/Object;)V
   #88 = Utf8               Largonaut/ACursor;
   #89 = Utf8               scala/Option
   #90 = Class              #89           // scala/Option
   #91 = Utf8               writeReplace
   #92 = Utf8               ()Ljava/lang/Object;
   #93 = Utf8               scala/runtime/ModuleSerializationProxy
   #94 = Class              #93           // scala/runtime/ModuleSerializationProxy
   #95 = Utf8               (Ljava/lang/Class;)V
   #96 = NameAndType        #14:#95       // "<init>":(Ljava/lang/Class;)V
   #97 = Methodref          #94.#96       // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
   #98 = Methodref          #4.#15        // java/lang/Object."<init>":()V
   #99 = Utf8               Code
  #100 = Utf8               LineNumberTable
  #101 = Utf8               LocalVariableTable
  #102 = Utf8               MethodParameters
  #103 = Utf8               Signature
  #104 = Utf8               StackMapTable
  #105 = Utf8               SourceFile
  #106 = Utf8               ScalaInlineInfo
  #107 = Utf8               Scala
{
  public static final argonaut.ACursor$ MODULE$;
    descriptor: Largonaut/ACursor$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class argonaut/ACursor$
         3: dup
         4: invokespecial #16                 // Method "<init>":()V
         7: putstatic     #18                 // Field MODULE$:Largonaut/ACursor$;
        10: getstatic     #18                 // Field MODULE$:Largonaut/ACursor$;
        13: invokestatic  #22                 // InterfaceMethod argonaut/ACursors.$init$:(Largonaut/ACursors;)V
        16: return
      LineNumberTable:
        line 257: 0

  public argonaut.ACursor okACursor(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/ACursor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #29                 // InterfaceMethod argonaut/ACursors.okACursor$:(Largonaut/ACursors;Largonaut/HCursor;)Largonaut/ACursor;
         5: areturn
      LineNumberTable:
        line 257: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/ACursor$;
            0       6     1 cursor   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      cursor                         final

  public argonaut.ACursor failACursor(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/ACursor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #35                 // InterfaceMethod argonaut/ACursors.failACursor$:(Largonaut/ACursors;Largonaut/HCursor;)Largonaut/ACursor;
         5: areturn
      LineNumberTable:
        line 257: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Largonaut/ACursor$;
            0       6     1 cursor   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      cursor                         final

  public argonaut.ACursor ok(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/ACursor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #38                 // class argonaut/ACursor
         3: dup
         4: getstatic     #43                 // Field scala/package$.MODULE$:Lscala/package$;
         7: invokevirtual #47                 // Method scala/package$.Right:()Lscala/util/Right$;
        10: aload_1
        11: invokevirtual #53                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        14: invokespecial #56                 // Method argonaut/ACursor."<init>":(Lscala/util/Either;)V
        17: areturn
      LineNumberTable:
        line 259: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Largonaut/ACursor$;
            0      18     1 cursor   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      cursor                         final

  public argonaut.ACursor fail(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/ACursor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #38                 // class argonaut/ACursor
         3: dup
         4: getstatic     #43                 // Field scala/package$.MODULE$:Lscala/package$;
         7: invokevirtual #61                 // Method scala/package$.Left:()Lscala/util/Left$;
        10: aload_1
        11: invokevirtual #66                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        14: invokespecial #56                 // Method argonaut/ACursor."<init>":(Lscala/util/Either;)V
        17: areturn
      LineNumberTable:
        line 262: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Largonaut/ACursor$;
            0      18     1 cursor   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      cursor                         final

  public argonaut.ACursor apply(scala.util.Either<argonaut.HCursor, argonaut.HCursor>);
    descriptor: (Lscala/util/Either;)Largonaut/ACursor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #38                 // class argonaut/ACursor
         3: dup
         4: aload_1
         5: invokespecial #56                 // Method argonaut/ACursor."<init>":(Lscala/util/Either;)V
         8: areturn
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Largonaut/ACursor$;
            0       9     1 either   Lscala/util/Either;
    Signature: #68                          // (Lscala/util/Either<Largonaut/HCursor;Largonaut/HCursor;>;)Largonaut/ACursor;
    MethodParameters:
      Name                           Flags
      either                         final

  public scala.Option<scala.util.Either<argonaut.HCursor, argonaut.HCursor>> unapply(argonaut.ACursor);
    descriptor: (Largonaut/ACursor;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     10
         4: getstatic     #79                 // Field scala/None$.MODULE$:Lscala/None$;
         7: goto          21
        10: new           #81                 // class scala/Some
        13: dup
        14: aload_1
        15: invokevirtual #84                 // Method argonaut/ACursor.either:()Lscala/util/Either;
        18: invokespecial #87                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Largonaut/ACursor$;
            0      22     1   x$0   Largonaut/ACursor;
    Signature: #73                          // (Largonaut/ACursor;)Lscala/Option<Lscala/util/Either<Largonaut/HCursor;Largonaut/HCursor;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #94                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class argonaut/ACursor$
         6: invokespecial #97                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 257: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/ACursor$;

  private argonaut.ACursor$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #98                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 257: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/ACursor$;
}
SourceFile: "ACursor.scala"
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 01 00 08 00 0E 00 0D 01 00 32 00 43 01 00 39
   00 18 01 00 20 00 18 01 00 24 00 18 01 00 17 00
   18 01 00 47 00 48 01 00 5B 00 5C 01
  Scala: length = 0x0 (unknown attribute)

