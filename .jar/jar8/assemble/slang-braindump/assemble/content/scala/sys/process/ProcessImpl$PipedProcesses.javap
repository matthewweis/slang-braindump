Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/sys/process/ProcessImpl$PipedProcesses.class
  Last modified May 29, 2022; size 10854 bytes
  SHA-256 checksum a3cceba3702c1941f9a9b2428ebe14e5ed0632d1dc6fa6dec88c8a7b0ff9216d
  Compiled from "ProcessImpl.scala"
public class scala.sys.process.ProcessImpl$PipedProcesses extends scala.sys.process.ProcessImpl$CompoundProcess
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/sys/process/ProcessImpl$PipedProcesses
  super_class: #4                         // scala/sys/process/ProcessImpl$CompoundProcess
  interfaces: 0, fields: 4, methods: 22, attributes: 5
Constant pool:
    #1 = Utf8               scala/sys/process/ProcessImpl$PipedProcesses
    #2 = Class              #1            // scala/sys/process/ProcessImpl$PipedProcesses
    #3 = Utf8               scala/sys/process/ProcessImpl$CompoundProcess
    #4 = Class              #3            // scala/sys/process/ProcessImpl$CompoundProcess
    #5 = Utf8               ProcessImpl.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/sys/process/ProcessImpl
   #12 = Class              #11           // scala/sys/process/ProcessImpl
   #13 = Utf8               CompoundProcess
   #14 = Utf8               scala/sys/process/ProcessImpl$PipeSink
   #15 = Class              #14           // scala/sys/process/ProcessImpl$PipeSink
   #16 = Utf8               PipeSink
   #17 = Utf8               scala/sys/process/ProcessImpl$PipeSource
   #18 = Class              #17           // scala/sys/process/ProcessImpl$PipeSource
   #19 = Utf8               PipeSource
   #20 = Utf8               PipedProcesses
   #21 = Utf8               scala/sys/process/processInternal$$anonfun$onError$1
   #22 = Class              #21           // scala/sys/process/processInternal$$anonfun$onError$1
   #23 = Utf8               a
   #24 = Utf8               Lscala/sys/process/ProcessBuilder;
   #25 = Utf8               b
   #26 = Utf8               defaultIO
   #27 = Utf8               Lscala/sys/process/ProcessIO;
   #28 = Utf8               toError
   #29 = Utf8               Z
   #30 = Utf8               newSource
   #31 = Utf8               ()Lscala/sys/process/ProcessImpl$PipeSource;
   #32 = Utf8               scala$sys$process$ProcessImpl$PipedProcesses$$$outer
   #33 = Utf8               ()Lscala/sys/process/Process$;
   #34 = NameAndType        #32:#33       // scala$sys$process$ProcessImpl$PipedProcesses$$$outer:()Lscala/sys/process/Process$;
   #35 = Methodref          #2.#34        // scala/sys/process/ProcessImpl$PipedProcesses.scala$sys$process$ProcessImpl$PipedProcesses$$$outer:()Lscala/sys/process/Process$;
   #36 = Utf8               ()Ljava/lang/Object;
   #37 = MethodType         #36           //  ()Ljava/lang/Object;
   #38 = Utf8               $anonfun$newSource$1
   #39 = Utf8               (Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
   #40 = NameAndType        #38:#39       // $anonfun$newSource$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
   #41 = Methodref          #2.#40        // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$newSource$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
   #42 = MethodHandle       6:#41         // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$newSource$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
   #43 = Utf8               ()Ljava/lang/String;
   #44 = MethodType         #43           //  ()Ljava/lang/String;
   #45 = Integer            5
   #46 = Integer            1
   #47 = Utf8               java/lang/invoke/LambdaMetafactory
   #48 = Class              #47           // java/lang/invoke/LambdaMetafactory
   #49 = Utf8               altMetafactory
   #50 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #51 = NameAndType        #49:#50       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #52 = Methodref          #48.#51       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #53 = MethodHandle       6:#52         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #54 = Utf8               apply
   #55 = Utf8               (Lscala/sys/process/ProcessImpl$PipedProcesses;)Lscala/Function0;
   #56 = NameAndType        #54:#55       // apply:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Lscala/Function0;
   #57 = InvokeDynamic      #0:#56        // #0:apply:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Lscala/Function0;
   #58 = Utf8               <init>
   #59 = Utf8               (Lscala/sys/process/Process$;Lscala/Function0;)V
   #60 = NameAndType        #58:#59       // "<init>":(Lscala/sys/process/Process$;Lscala/Function0;)V
   #61 = Methodref          #18.#60       // scala/sys/process/ProcessImpl$PipeSource."<init>":(Lscala/sys/process/Process$;Lscala/Function0;)V
   #62 = Utf8               this
   #63 = Utf8               Lscala/sys/process/ProcessImpl$PipedProcesses;
   #64 = Utf8               newSink
   #65 = Utf8               ()Lscala/sys/process/ProcessImpl$PipeSink;
   #66 = Utf8               $anonfun$newSink$1
   #67 = NameAndType        #66:#39       // $anonfun$newSink$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
   #68 = Methodref          #2.#67        // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$newSink$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
   #69 = MethodHandle       6:#68         // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$newSink$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
   #70 = InvokeDynamic      #1:#56        // #1:apply:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Lscala/Function0;
   #71 = Methodref          #15.#60       // scala/sys/process/ProcessImpl$PipeSink."<init>":(Lscala/sys/process/Process$;Lscala/Function0;)V
   #72 = Utf8               runAndExitValue
   #73 = Utf8               ()Lscala/Option;
   #74 = Utf8               ()Lscala/Option<Ljava/lang/Object;>;
   #75 = NameAndType        #30:#31       // newSource:()Lscala/sys/process/ProcessImpl$PipeSource;
   #76 = Methodref          #2.#75        // scala/sys/process/ProcessImpl$PipedProcesses.newSource:()Lscala/sys/process/ProcessImpl$PipeSource;
   #77 = NameAndType        #64:#65       // newSink:()Lscala/sys/process/ProcessImpl$PipeSink;
   #78 = Methodref          #2.#77        // scala/sys/process/ProcessImpl$PipedProcesses.newSink:()Lscala/sys/process/ProcessImpl$PipeSink;
   #79 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Option;
   #80 = NameAndType        #72:#79       // runAndExitValue:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Option;
   #81 = Methodref          #2.#80        // scala/sys/process/ProcessImpl$PipedProcesses.runAndExitValue:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Option;
   #82 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Option<Ljava/lang/Object;>;
   #83 = Utf8               source
   #84 = Utf8               sink
   #85 = Utf8               java/lang/Throwable
   #86 = Class              #85           // java/lang/Throwable
   #87 = Utf8               connectOut
   #88 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSink;)V
   #89 = NameAndType        #87:#88       // connectOut:(Lscala/sys/process/ProcessImpl$PipeSink;)V
   #90 = Methodref          #18.#89       // scala/sys/process/ProcessImpl$PipeSource.connectOut:(Lscala/sys/process/ProcessImpl$PipeSink;)V
   #91 = Utf8               start
   #92 = Utf8               ()V
   #93 = NameAndType        #91:#92       // start:()V
   #94 = Methodref          #18.#93       // scala/sys/process/ProcessImpl$PipeSource.start:()V
   #95 = Methodref          #15.#93       // scala/sys/process/ProcessImpl$PipeSink.start:()V
   #96 = NameAndType        #28:#29       // toError:Z
   #97 = Fieldref           #2.#96        // scala/sys/process/ProcessImpl$PipedProcesses.toError:Z
   #98 = NameAndType        #26:#27       // defaultIO:Lscala/sys/process/ProcessIO;
   #99 = Fieldref           #2.#98        // scala/sys/process/ProcessImpl$PipedProcesses.defaultIO:Lscala/sys/process/ProcessIO;
  #100 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #101 = MethodType         #100          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #102 = Utf8               $anonfun$runAndExitValue$7$adapted
  #103 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
  #104 = NameAndType        #102:#103     // $anonfun$runAndExitValue$7$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
  #105 = Methodref          #2.#104       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$7$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
  #106 = MethodHandle       6:#105        // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$7$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
  #107 = Utf8               (Ljava/io/InputStream;)Ljava/lang/Object;
  #108 = MethodType         #107          //  (Ljava/io/InputStream;)Ljava/lang/Object;
  #109 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;)Lscala/Function1;
  #110 = NameAndType        #54:#109      // apply:(Lscala/sys/process/ProcessImpl$PipeSource;)Lscala/Function1;
  #111 = InvokeDynamic      #2:#110       // #2:apply:(Lscala/sys/process/ProcessImpl$PipeSource;)Lscala/Function1;
  #112 = Utf8               scala/sys/process/ProcessIO
  #113 = Class              #112          // scala/sys/process/ProcessIO
  #114 = Utf8               writeInput
  #115 = Utf8               ()Lscala/Function1;
  #116 = NameAndType        #114:#115     // writeInput:()Lscala/Function1;
  #117 = Methodref          #113.#116     // scala/sys/process/ProcessIO.writeInput:()Lscala/Function1;
  #118 = Utf8               processOutput
  #119 = NameAndType        #118:#115     // processOutput:()Lscala/Function1;
  #120 = Methodref          #113.#119     // scala/sys/process/ProcessIO.processOutput:()Lscala/Function1;
  #121 = Utf8               daemonizeThreads
  #122 = Utf8               ()Z
  #123 = NameAndType        #121:#122     // daemonizeThreads:()Z
  #124 = Methodref          #113.#123     // scala/sys/process/ProcessIO.daemonizeThreads:()Z
  #125 = Utf8               (Lscala/Function1;Lscala/Function1;Lscala/Function1;Z)V
  #126 = NameAndType        #58:#125      // "<init>":(Lscala/Function1;Lscala/Function1;Lscala/Function1;Z)V
  #127 = Methodref          #113.#126     // scala/sys/process/ProcessIO."<init>":(Lscala/Function1;Lscala/Function1;Lscala/Function1;Z)V
  #128 = Utf8               $anonfun$runAndExitValue$8$adapted
  #129 = NameAndType        #128:#103     // $anonfun$runAndExitValue$8$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
  #130 = Methodref          #2.#129       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$8$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
  #131 = MethodHandle       6:#130        // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$8$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
  #132 = InvokeDynamic      #3:#110       // #3:apply:(Lscala/sys/process/ProcessImpl$PipeSource;)Lscala/Function1;
  #133 = Utf8               processError
  #134 = NameAndType        #133:#115     // processError:()Lscala/Function1;
  #135 = Methodref          #113.#134     // scala/sys/process/ProcessIO.processError:()Lscala/Function1;
  #136 = Utf8               $anonfun$runAndExitValue$9$adapted
  #137 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)Ljava/lang/Object;
  #138 = NameAndType        #136:#137     // $anonfun$runAndExitValue$9$adapted:(Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)Ljava/lang/Object;
  #139 = Methodref          #2.#138       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$9$adapted:(Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)Ljava/lang/Object;
  #140 = MethodHandle       6:#139        // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$9$adapted:(Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)Ljava/lang/Object;
  #141 = Utf8               (Ljava/io/OutputStream;)Ljava/lang/Object;
  #142 = MethodType         #141          //  (Ljava/io/OutputStream;)Ljava/lang/Object;
  #143 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Function1;
  #144 = NameAndType        #54:#143      // apply:(Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Function1;
  #145 = InvokeDynamic      #4:#144       // #4:apply:(Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Function1;
  #146 = NameAndType        #25:#24       // b:Lscala/sys/process/ProcessBuilder;
  #147 = Fieldref           #2.#146       // scala/sys/process/ProcessImpl$PipedProcesses.b:Lscala/sys/process/ProcessBuilder;
  #148 = Utf8               scala/sys/process/ProcessBuilder
  #149 = Class              #148          // scala/sys/process/ProcessBuilder
  #150 = Utf8               run
  #151 = Utf8               (Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
  #152 = NameAndType        #150:#151     // run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
  #153 = InterfaceMethodref #149.#152     // scala/sys/process/ProcessBuilder.run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
  #154 = Utf8               scala/sys/process/processInternal$
  #155 = Class              #154          // scala/sys/process/processInternal$
  #156 = Utf8               MODULE$
  #157 = Utf8               Lscala/sys/process/processInternal$;
  #158 = NameAndType        #156:#157     // MODULE$:Lscala/sys/process/processInternal$;
  #159 = Fieldref           #155.#158     // scala/sys/process/processInternal$.MODULE$:Lscala/sys/process/processInternal$;
  #160 = Utf8               $anonfun$runAndExitValue$10
  #161 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #162 = NameAndType        #160:#161     // $anonfun$runAndExitValue$10:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #163 = Methodref          #2.#162       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$10:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #164 = MethodHandle       6:#163        // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$10:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #165 = Utf8               (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #166 = MethodType         #165          //  (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #167 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Function1;
  #168 = NameAndType        #54:#167      // apply:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Function1;
  #169 = InvokeDynamic      #5:#168       // #5:apply:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Function1;
  #170 = Utf8               (Lscala/Function1;)V
  #171 = NameAndType        #58:#170      // "<init>":(Lscala/Function1;)V
  #172 = Methodref          #22.#171      // scala/sys/process/processInternal$$anonfun$onError$1."<init>":(Lscala/Function1;)V
  #173 = Utf8               isDefinedAt
  #174 = Utf8               (Ljava/lang/Throwable;)Z
  #175 = NameAndType        #173:#174     // isDefinedAt:(Ljava/lang/Throwable;)Z
  #176 = Methodref          #22.#175      // scala/sys/process/processInternal$$anonfun$onError$1.isDefinedAt:(Ljava/lang/Throwable;)Z
  #177 = Utf8               scala/PartialFunction
  #178 = Class              #177          // scala/PartialFunction
  #179 = NameAndType        #54:#100      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #180 = InterfaceMethodref #178.#179     // scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #181 = Utf8               scala/sys/process/Process
  #182 = Class              #181          // scala/sys/process/Process
  #183 = NameAndType        #23:#24       // a:Lscala/sys/process/ProcessBuilder;
  #184 = Fieldref           #2.#183       // scala/sys/process/ProcessImpl$PipedProcesses.a:Lscala/sys/process/ProcessBuilder;
  #185 = Utf8               $anonfun$runAndExitValue$11
  #186 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #187 = NameAndType        #185:#186     // $anonfun$runAndExitValue$11:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #188 = Methodref          #2.#187       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$11:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #189 = MethodHandle       6:#188        // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$11:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  #190 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;)Lscala/Function1;
  #191 = NameAndType        #54:#190      // apply:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;)Lscala/Function1;
  #192 = InvokeDynamic      #6:#191       // #6:apply:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;)Lscala/Function1;
  #193 = Utf8               ()I
  #194 = MethodType         #193          //  ()I
  #195 = Utf8               $anonfun$runAndExitValue$12
  #196 = Utf8               (Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)I
  #197 = NameAndType        #195:#196     // $anonfun$runAndExitValue$12:(Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)I
  #198 = Methodref          #2.#197       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$12:(Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)I
  #199 = MethodHandle       6:#198        // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$12:(Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)I
  #200 = Utf8               apply$mcI$sp
  #201 = Utf8               (Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/runtime/java8/JFunction0$mcI$sp;
  #202 = NameAndType        #200:#201     // apply$mcI$sp:(Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/runtime/java8/JFunction0$mcI$sp;
  #203 = InvokeDynamic      #7:#202       // #7:apply$mcI$sp:(Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/runtime/java8/JFunction0$mcI$sp;
  #204 = MethodType         #92           //  ()V
  #205 = Utf8               $anonfun$runAndExitValue$13
  #206 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)V
  #207 = NameAndType        #205:#206     // $anonfun$runAndExitValue$13:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)V
  #208 = Methodref          #2.#207       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$13:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)V
  #209 = MethodHandle       6:#208        // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$13:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)V
  #210 = Utf8               apply$mcV$sp
  #211 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #212 = NameAndType        #210:#211     // apply$mcV$sp:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #213 = InvokeDynamic      #8:#212       // #8:apply$mcV$sp:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #214 = Utf8               runInterruptible
  #215 = Utf8               (Lscala/Function0;Lscala/Function0;)Lscala/Option;
  #216 = NameAndType        #214:#215     // runInterruptible:(Lscala/Function0;Lscala/Function0;)Lscala/Option;
  #217 = Methodref          #2.#216       // scala/sys/process/ProcessImpl$PipedProcesses.runInterruptible:(Lscala/Function0;Lscala/Function0;)Lscala/Option;
  #218 = Utf8               catchExpr$2
  #219 = Utf8               Lscala/PartialFunction;
  #220 = Utf8               x$10
  #221 = Utf8               Ljava/lang/Throwable;
  #222 = Utf8               catchExpr$3
  #223 = Utf8               x$11
  #224 = Utf8               firstIO
  #225 = Utf8               secondIO
  #226 = Utf8               second
  #227 = Utf8               Lscala/sys/process/Process;
  #228 = Utf8               first
  #229 = Utf8               Lscala/sys/process/ProcessImpl$PipeSource;
  #230 = Utf8               Lscala/sys/process/ProcessImpl$PipeSink;
  #231 = Utf8               withError_this
  #232 = Utf8               withError_process
  #233 = Utf8               Lscala/Function1;
  #234 = Utf8               withOutput_this
  #235 = Utf8               withOutput_process
  #236 = Utf8               withInput_this
  #237 = Utf8               withInput_write
  #238 = Utf8               onError_handler
  #239 = Utf8               scala/Function1
  #240 = Class              #239          // scala/Function1
  #241 = Utf8               $outer
  #242 = Utf8               Lscala/sys/process/Process$;
  #243 = NameAndType        #241:#242     // $outer:Lscala/sys/process/Process$;
  #244 = Fieldref           #2.#243       // scala/sys/process/ProcessImpl$PipedProcesses.$outer:Lscala/sys/process/Process$;
  #245 = Utf8               $this
  #246 = Utf8               java/lang/Object
  #247 = Class              #246          // java/lang/Object
  #248 = Utf8               toString
  #249 = NameAndType        #248:#43      // toString:()Ljava/lang/String;
  #250 = Methodref          #247.#249     // java/lang/Object.toString:()Ljava/lang/String;
  #251 = Utf8               $anonfun$runAndExitValue$6
  #252 = Utf8               (Lscala/sys/process/Process;)V
  #253 = Utf8               x$5
  #254 = Utf8               destroy
  #255 = NameAndType        #254:#92      // destroy:()V
  #256 = InterfaceMethodref #182.#255     // scala/sys/process/Process.destroy:()V
  #257 = Utf8               releaseResources$1
  #258 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/collection/immutable/Seq;)V
  #259 = Utf8               so
  #260 = Utf8               sk
  #261 = Utf8               ps
  #262 = Utf8               release
  #263 = NameAndType        #262:#92      // release:()V
  #264 = Methodref          #18.#263      // scala/sys/process/ProcessImpl$PipeSource.release:()V
  #265 = Methodref          #15.#263      // scala/sys/process/ProcessImpl$PipeSink.release:()V
  #266 = Utf8               $anonfun$runAndExitValue$6$adapted
  #267 = Utf8               (Lscala/sys/process/Process;)Ljava/lang/Object;
  #268 = NameAndType        #266:#267     // $anonfun$runAndExitValue$6$adapted:(Lscala/sys/process/Process;)Ljava/lang/Object;
  #269 = Methodref          #2.#268       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$6$adapted:(Lscala/sys/process/Process;)Ljava/lang/Object;
  #270 = MethodHandle       6:#269        // REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$6$adapted:(Lscala/sys/process/Process;)Ljava/lang/Object;
  #271 = MethodType         #267          //  (Lscala/sys/process/Process;)Ljava/lang/Object;
  #272 = NameAndType        #54:#115      // apply:()Lscala/Function1;
  #273 = InvokeDynamic      #9:#272       // #9:apply:()Lscala/Function1;
  #274 = Utf8               scala/collection/immutable/Seq
  #275 = Class              #274          // scala/collection/immutable/Seq
  #276 = Utf8               foreach
  #277 = NameAndType        #276:#170     // foreach:(Lscala/Function1;)V
  #278 = InterfaceMethodref #275.#277     // scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
  #279 = Utf8               Lscala/collection/immutable/Seq;
  #280 = Utf8               $anonfun$runAndExitValue$7
  #281 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)V
  #282 = Utf8               source$1
  #283 = Utf8               in
  #284 = Utf8               connectIn
  #285 = Utf8               (Ljava/io/InputStream;)V
  #286 = NameAndType        #284:#285     // connectIn:(Ljava/io/InputStream;)V
  #287 = Methodref          #18.#286      // scala/sys/process/ProcessImpl$PipeSource.connectIn:(Ljava/io/InputStream;)V
  #288 = Utf8               Ljava/io/InputStream;
  #289 = Utf8               $anonfun$runAndExitValue$8
  #290 = Utf8               $anonfun$runAndExitValue$9
  #291 = Utf8               (Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)V
  #292 = Utf8               sink$1
  #293 = Utf8               out
  #294 = Utf8               (Ljava/io/OutputStream;)V
  #295 = NameAndType        #87:#294      // connectOut:(Ljava/io/OutputStream;)V
  #296 = Methodref          #15.#295      // scala/sys/process/ProcessImpl$PipeSink.connectOut:(Ljava/io/OutputStream;)V
  #297 = Utf8               Ljava/io/OutputStream;
  #298 = Utf8               err
  #299 = Utf8               scala/collection/immutable/Nil$
  #300 = Class              #299          // scala/collection/immutable/Nil$
  #301 = Utf8               Lscala/collection/immutable/Nil$;
  #302 = NameAndType        #156:#301     // MODULE$:Lscala/collection/immutable/Nil$;
  #303 = Fieldref           #300.#302     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #304 = NameAndType        #257:#258     // releaseResources$1:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/collection/immutable/Seq;)V
  #305 = Methodref          #2.#304       // scala/sys/process/ProcessImpl$PipedProcesses.releaseResources$1:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/collection/immutable/Seq;)V
  #306 = Utf8               second$2
  #307 = Utf8               scala/runtime/ScalaRunTime$
  #308 = Class              #307          // scala/runtime/ScalaRunTime$
  #309 = Utf8               Lscala/runtime/ScalaRunTime$;
  #310 = NameAndType        #156:#309     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #311 = Fieldref           #308.#310     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #312 = Utf8               wrapRefArray
  #313 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #314 = NameAndType        #312:#313     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #315 = Methodref          #308.#314     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #316 = Utf8               first$2
  #317 = Utf8               exitValue
  #318 = NameAndType        #317:#193     // exitValue:()I
  #319 = InterfaceMethodref #182.#318     // scala/sys/process/Process.exitValue:()I
  #320 = Utf8               done
  #321 = NameAndType        #320:#92      // done:()V
  #322 = Methodref          #18.#321      // scala/sys/process/ProcessImpl$PipeSource.done:()V
  #323 = Utf8               join
  #324 = NameAndType        #323:#92      // join:()V
  #325 = Methodref          #18.#324      // scala/sys/process/ProcessImpl$PipeSource.join:()V
  #326 = Methodref          #15.#321      // scala/sys/process/ProcessImpl$PipeSink.done:()V
  #327 = Utf8               hasExitValue
  #328 = NameAndType        #327:#122     // hasExitValue:()Z
  #329 = InterfaceMethodref #149.#328     // scala/sys/process/ProcessBuilder.hasExitValue:()Z
  #330 = Utf8               exit1
  #331 = Utf8               I
  #332 = Utf8               exit2
  #333 = Utf8               (Lscala/sys/process/Process$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessIO;Z)V
  #334 = Utf8               (Lscala/sys/process/Process$;)V
  #335 = NameAndType        #58:#334      // "<init>":(Lscala/sys/process/Process$;)V
  #336 = Methodref          #4.#335       // scala/sys/process/ProcessImpl$CompoundProcess."<init>":(Lscala/sys/process/Process$;)V
  #337 = NameAndType        #280:#281     // $anonfun$runAndExitValue$7:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)V
  #338 = Methodref          #2.#337       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$7:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)V
  #339 = Utf8               scala/runtime/BoxedUnit
  #340 = Class              #339          // scala/runtime/BoxedUnit
  #341 = Utf8               UNIT
  #342 = Utf8               Lscala/runtime/BoxedUnit;
  #343 = NameAndType        #341:#342     // UNIT:Lscala/runtime/BoxedUnit;
  #344 = Fieldref           #340.#343     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #345 = NameAndType        #289:#281     // $anonfun$runAndExitValue$8:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)V
  #346 = Methodref          #2.#345       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$8:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)V
  #347 = NameAndType        #290:#291     // $anonfun$runAndExitValue$9:(Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)V
  #348 = Methodref          #2.#347       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$9:(Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)V
  #349 = NameAndType        #251:#252     // $anonfun$runAndExitValue$6:(Lscala/sys/process/Process;)V
  #350 = Methodref          #2.#349       // scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$6:(Lscala/sys/process/Process;)V
  #351 = Utf8               $deserializeLambda$
  #352 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #353 = Utf8               scala/runtime/LambdaDeserialize
  #354 = Class              #353          // scala/runtime/LambdaDeserialize
  #355 = Utf8               bootstrap
  #356 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #357 = NameAndType        #355:#356     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #358 = Methodref          #354.#357     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #359 = MethodHandle       6:#358        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #360 = Utf8               lambdaDeserialize
  #361 = NameAndType        #360:#352     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #362 = InvokeDynamic      #10:#361      // #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #363 = Utf8               Code
  #364 = Utf8               LineNumberTable
  #365 = Utf8               LocalVariableTable
  #366 = Utf8               Signature
  #367 = Utf8               StackMapTable
  #368 = Utf8               MethodParameters
  #369 = Utf8               InnerClasses
  #370 = Utf8               SourceFile
  #371 = Utf8               BootstrapMethods
  #372 = Utf8               ScalaInlineInfo
  #373 = Utf8               Scala
{
  private final scala.sys.process.ProcessBuilder a;
    descriptor: Lscala/sys/process/ProcessBuilder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.sys.process.ProcessBuilder b;
    descriptor: Lscala/sys/process/ProcessBuilder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.sys.process.ProcessIO defaultIO;
    descriptor: Lscala/sys/process/ProcessIO;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean toError;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.sys.process.ProcessImpl$PipeSource newSource();
    descriptor: ()Lscala/sys/process/ProcessImpl$PipeSource;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #18                 // class scala/sys/process/ProcessImpl$PipeSource
         3: dup
         4: aload_0
         5: invokevirtual #35                 // Method scala$sys$process$ProcessImpl$PipedProcesses$$$outer:()Lscala/sys/process/Process$;
         8: aload_0
         9: invokedynamic #57,  0             // InvokeDynamic #0:apply:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Lscala/Function0;
        14: invokespecial #61                 // Method scala/sys/process/ProcessImpl$PipeSource."<init>":(Lscala/sys/process/Process$;Lscala/Function0;)V
        17: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/sys/process/ProcessImpl$PipedProcesses;

  public scala.sys.process.ProcessImpl$PipeSink newSink();
    descriptor: ()Lscala/sys/process/ProcessImpl$PipeSink;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #15                 // class scala/sys/process/ProcessImpl$PipeSink
         3: dup
         4: aload_0
         5: invokevirtual #35                 // Method scala$sys$process$ProcessImpl$PipedProcesses$$$outer:()Lscala/sys/process/Process$;
         8: aload_0
         9: invokedynamic #70,  0             // InvokeDynamic #1:apply:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Lscala/Function0;
        14: invokespecial #71                 // Method scala/sys/process/ProcessImpl$PipeSink."<init>":(Lscala/sys/process/Process$;Lscala/Function0;)V
        17: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/sys/process/ProcessImpl$PipedProcesses;

  public scala.Option<java.lang.Object> runAndExitValue();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokevirtual #76                 // Method newSource:()Lscala/sys/process/ProcessImpl$PipeSource;
         5: aload_0
         6: invokevirtual #78                 // Method newSink:()Lscala/sys/process/ProcessImpl$PipeSink;
         9: invokevirtual #81                 // Method runAndExitValue:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/sys/process/ProcessImpl$PipedProcesses;
    Signature: #74                          // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Option<java.lang.Object> runAndExitValue(scala.sys.process.ProcessImpl$PipeSource, scala.sys.process.ProcessImpl$PipeSink);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=21, args_size=3
         0: aload_1
         1: aload_2
         2: invokevirtual #90                 // Method scala/sys/process/ProcessImpl$PipeSource.connectOut:(Lscala/sys/process/ProcessImpl$PipeSink;)V
         5: aload_1
         6: invokevirtual #94                 // Method scala/sys/process/ProcessImpl$PipeSource.start:()V
         9: aload_2
        10: invokevirtual #95                 // Method scala/sys/process/ProcessImpl$PipeSink.start:()V
        13: aload_0
        14: getfield      #97                 // Field toError:Z
        17: ifeq          73
        20: aload_0
        21: getfield      #99                 // Field defaultIO:Lscala/sys/process/ProcessIO;
        24: aload_1
        25: invokedynamic #111,  0            // InvokeDynamic #2:apply:(Lscala/sys/process/ProcessImpl$PipeSource;)Lscala/Function1;
        30: astore        12
        32: dup
        33: ifnonnull     38
        36: aconst_null
        37: athrow
        38: astore        11
        40: new           #113                // class scala/sys/process/ProcessIO
        43: dup
        44: aload         11
        46: invokevirtual #117                // Method scala/sys/process/ProcessIO.writeInput:()Lscala/Function1;
        49: aload         11
        51: invokevirtual #120                // Method scala/sys/process/ProcessIO.processOutput:()Lscala/Function1;
        54: aload         12
        56: aload         11
        58: invokevirtual #124                // Method scala/sys/process/ProcessIO.daemonizeThreads:()Z
        61: invokespecial #127                // Method scala/sys/process/ProcessIO."<init>":(Lscala/Function1;Lscala/Function1;Lscala/Function1;Z)V
        64: aconst_null
        65: astore        11
        67: aconst_null
        68: astore        12
        70: goto          130
        73: aload_0
        74: getfield      #99                 // Field defaultIO:Lscala/sys/process/ProcessIO;
        77: aload_1
        78: invokedynamic #132,  0            // InvokeDynamic #3:apply:(Lscala/sys/process/ProcessImpl$PipeSource;)Lscala/Function1;
        83: astore        14
        85: dup
        86: ifnonnull     91
        89: aconst_null
        90: athrow
        91: astore        13
        93: new           #113                // class scala/sys/process/ProcessIO
        96: dup
        97: aload         13
        99: invokevirtual #117                // Method scala/sys/process/ProcessIO.writeInput:()Lscala/Function1;
       102: aload         14
       104: aload         13
       106: invokevirtual #135                // Method scala/sys/process/ProcessIO.processError:()Lscala/Function1;
       109: aload         13
       111: invokevirtual #124                // Method scala/sys/process/ProcessIO.daemonizeThreads:()Z
       114: invokespecial #127                // Method scala/sys/process/ProcessIO."<init>":(Lscala/Function1;Lscala/Function1;Lscala/Function1;Z)V
       117: astore        15
       119: aload         15
       121: aconst_null
       122: astore        13
       124: aconst_null
       125: astore        14
       127: aconst_null
       128: astore        15
       130: astore_3
       131: aload_0
       132: getfield      #99                 // Field defaultIO:Lscala/sys/process/ProcessIO;
       135: aload_2
       136: invokedynamic #145,  0            // InvokeDynamic #4:apply:(Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Function1;
       141: astore        17
       143: dup
       144: ifnonnull     149
       147: aconst_null
       148: athrow
       149: astore        16
       151: new           #113                // class scala/sys/process/ProcessIO
       154: dup
       155: aload         17
       157: aload         16
       159: invokevirtual #120                // Method scala/sys/process/ProcessIO.processOutput:()Lscala/Function1;
       162: aload         16
       164: invokevirtual #135                // Method scala/sys/process/ProcessIO.processError:()Lscala/Function1;
       167: aload         16
       169: invokevirtual #124                // Method scala/sys/process/ProcessIO.daemonizeThreads:()Z
       172: invokespecial #127                // Method scala/sys/process/ProcessIO."<init>":(Lscala/Function1;Lscala/Function1;Lscala/Function1;Z)V
       175: astore        18
       177: aload         18
       179: aconst_null
       180: astore        16
       182: aconst_null
       183: astore        17
       185: aconst_null
       186: astore        18
       188: astore        4
       190: aload_0
       191: getfield      #147                // Field b:Lscala/sys/process/ProcessBuilder;
       194: aload         4
       196: invokeinterface #153,  2          // InterfaceMethod scala/sys/process/ProcessBuilder.run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
       201: goto          261
       204: astore        6
       206: getstatic     #159                // Field scala/sys/process/processInternal$.MODULE$:Lscala/sys/process/processInternal$;
       209: pop
       210: aload_1
       211: aload_2
       212: invokedynamic #169,  0            // InvokeDynamic #5:apply:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Function1;
       217: astore        19
       219: new           #22                 // class scala/sys/process/processInternal$$anonfun$onError$1
       222: dup
       223: aload         19
       225: invokespecial #172                // Method scala/sys/process/processInternal$$anonfun$onError$1."<init>":(Lscala/Function1;)V
       228: aconst_null
       229: astore        19
       231: astore        7
       233: aload         7
       235: aload         6
       237: invokevirtual #176                // Method scala/sys/process/processInternal$$anonfun$onError$1.isDefinedAt:(Ljava/lang/Throwable;)Z
       240: ifeq          258
       243: aload         7
       245: aload         6
       247: invokeinterface #180,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       252: checkcast     #182                // class scala/sys/process/Process
       255: goto          261
       258: aload         6
       260: athrow
       261: astore        5
       263: aload_0
       264: getfield      #184                // Field a:Lscala/sys/process/ProcessBuilder;
       267: aload_3
       268: invokeinterface #153,  2          // InterfaceMethod scala/sys/process/ProcessBuilder.run:(Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
       273: goto          335
       276: astore        9
       278: getstatic     #159                // Field scala/sys/process/processInternal$.MODULE$:Lscala/sys/process/processInternal$;
       281: pop
       282: aload_1
       283: aload_2
       284: aload         5
       286: invokedynamic #192,  0            // InvokeDynamic #6:apply:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;)Lscala/Function1;
       291: astore        20
       293: new           #22                 // class scala/sys/process/processInternal$$anonfun$onError$1
       296: dup
       297: aload         20
       299: invokespecial #172                // Method scala/sys/process/processInternal$$anonfun$onError$1."<init>":(Lscala/Function1;)V
       302: aconst_null
       303: astore        20
       305: astore        10
       307: aload         10
       309: aload         9
       311: invokevirtual #176                // Method scala/sys/process/processInternal$$anonfun$onError$1.isDefinedAt:(Ljava/lang/Throwable;)Z
       314: ifeq          332
       317: aload         10
       319: aload         9
       321: invokeinterface #180,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       326: checkcast     #182                // class scala/sys/process/Process
       329: goto          335
       332: aload         9
       334: athrow
       335: astore        8
       337: aload_0
       338: aload_0
       339: aload         8
       341: aload_1
       342: aload         5
       344: aload_2
       345: invokedynamic #203,  0            // InvokeDynamic #7:apply$mcI$sp:(Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/runtime/java8/JFunction0$mcI$sp;
       350: aload_1
       351: aload_2
       352: aload         8
       354: aload         5
       356: invokedynamic #213,  0            // InvokeDynamic #8:apply$mcV$sp:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
       361: invokevirtual #217                // Method runInterruptible:(Lscala/Function0;Lscala/Function0;)Lscala/Option;
       364: areturn
      Exception table:
         from    to  target type
           190   201   204   Class java/lang/Throwable
           263   273   276   Class java/lang/Throwable
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink, top, top, top, top, top, top, top, top, top, class scala/Function1 ]
          stack = [ class scala/sys/process/ProcessIO ]
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink, top, top, top, top, top, top, top, top, top, top, top, class scala/Function1 ]
          stack = [ class scala/sys/process/ProcessIO ]
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink ]
          stack = [ class scala/sys/process/ProcessIO ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink, class scala/sys/process/ProcessIO, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Function1 ]
          stack = [ class scala/sys/process/ProcessIO ]
        frame_type = 255 /* full_frame */
          offset_delta = 54
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink, class scala/sys/process/ProcessIO, class scala/sys/process/ProcessIO, top, top, top, top, top, top, top, top, top, top, top, null, null, null ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink, class scala/sys/process/ProcessIO, class scala/sys/process/ProcessIO, top, class java/lang/Throwable, class scala/sys/process/processInternal$$anonfun$onError$1, top, top, top, top, top, top, top, top, null, null, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink, class scala/sys/process/ProcessIO, class scala/sys/process/ProcessIO, top, top, top, top, top, top, top, top, top, top, top, null, null, null ]
          stack = [ class scala/sys/process/Process ]
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink, class scala/sys/process/ProcessIO, class scala/sys/process/ProcessIO, class scala/sys/process/Process, top, top, top, top, top, top, top, top, top, top, null, null, null ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink, class scala/sys/process/ProcessIO, class scala/sys/process/ProcessIO, class scala/sys/process/Process, top, top, top, class java/lang/Throwable, class scala/sys/process/processInternal$$anonfun$onError$1, top, top, top, top, top, null, null, null, top, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/sys/process/ProcessImpl$PipedProcesses, class scala/sys/process/ProcessImpl$PipeSource, class scala/sys/process/ProcessImpl$PipeSink, class scala/sys/process/ProcessIO, class scala/sys/process/ProcessIO, class scala/sys/process/Process, top, top, top, top, top, top, top, top, top, top, null, null, null ]
          stack = [ class scala/sys/process/Process ]
      LineNumberTable:
        line 136: 0
        line 137: 5
        line 138: 9
        line 151: 13
        line 152: 73
        line 153: 131
        line 156: 190
        line 157: 206
        line 162: 263
        line 163: 278
        line 167: 337
        line 177: 350
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          233      28     7 catchExpr$2   Lscala/PartialFunction;
          204      57     6  x$10   Ljava/lang/Throwable;
          307      28    10 catchExpr$3   Lscala/PartialFunction;
          276      59     9  x$11   Ljava/lang/Throwable;
          131     233     3 firstIO   Lscala/sys/process/ProcessIO;
          190     174     4 secondIO   Lscala/sys/process/ProcessIO;
          263     101     5 second   Lscala/sys/process/Process;
          337      27     8 first   Lscala/sys/process/Process;
            0     365     0  this   Lscala/sys/process/ProcessImpl$PipedProcesses;
            0     365     1 source   Lscala/sys/process/ProcessImpl$PipeSource;
            0     365     2  sink   Lscala/sys/process/ProcessImpl$PipeSink;
           40      24    11 withError_this   Lscala/sys/process/ProcessIO;
           40      24    12 withError_process   Lscala/Function1;
           93      26    13 withOutput_this   Lscala/sys/process/ProcessIO;
           93      26    14 withOutput_process   Lscala/Function1;
          151      26    16 withInput_this   Lscala/sys/process/ProcessIO;
          151      26    17 withInput_write   Lscala/Function1;
          219       9    19 onError_handler   Lscala/Function1;
          293       9    20 onError_handler   Lscala/Function1;
    Signature: #82                          // (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      source                         final
      sink                           final

  public scala.sys.process.Process$ scala$sys$process$ProcessImpl$PipedProcesses$$$outer();
    descriptor: ()Lscala/sys/process/Process$;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #244                // Field $outer:Lscala/sys/process/Process$;
         4: areturn
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/sys/process/ProcessImpl$PipedProcesses;

  public static final java.lang.String $anonfun$newSource$1(scala.sys.process.ProcessImpl$PipedProcesses);
    descriptor: (Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #184                // Field a:Lscala/sys/process/ProcessBuilder;
         4: invokevirtual #250                // Method java/lang/Object.toString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/sys/process/ProcessImpl$PipedProcesses;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$newSink$1(scala.sys.process.ProcessImpl$PipedProcesses);
    descriptor: (Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #147                // Field b:Lscala/sys/process/ProcessBuilder;
         4: invokevirtual #250                // Method java/lang/Object.toString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/sys/process/ProcessImpl$PipedProcesses;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final void $anonfun$runAndExitValue$6(scala.sys.process.Process);
    descriptor: (Lscala/sys/process/Process;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #256,  1          // InterfaceMethod scala/sys/process/Process.destroy:()V
         6: return
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0   x$5   Lscala/sys/process/Process;
    MethodParameters:
      Name                           Flags
      x$5                            final

  private static final void releaseResources$1(scala.sys.process.ProcessImpl$PipeSource, scala.sys.process.ProcessImpl$PipeSink, scala.collection.immutable.Seq);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/collection/immutable/Seq;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #264                // Method scala/sys/process/ProcessImpl$PipeSource.release:()V
         4: aload_1
         5: invokevirtual #265                // Method scala/sys/process/ProcessImpl$PipeSink.release:()V
         8: aload_2
         9: invokedynamic #273,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
        14: invokeinterface #278,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
        19: return
      LineNumberTable:
        line 145: 0
        line 146: 4
        line 147: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0    so   Lscala/sys/process/ProcessImpl$PipeSource;
            0      20     1    sk   Lscala/sys/process/ProcessImpl$PipeSink;
            0      20     2    ps   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      so                             final
      sk                             final
      ps                             final

  public static final void $anonfun$runAndExitValue$7(scala.sys.process.ProcessImpl$PipeSource, java.io.InputStream);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #287                // Method scala/sys/process/ProcessImpl$PipeSource.connectIn:(Ljava/io/InputStream;)V
         5: return
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 source$1   Lscala/sys/process/ProcessImpl$PipeSource;
            0       6     1    in   Ljava/io/InputStream;
    MethodParameters:
      Name                           Flags
      source$1                       final
      in                             final

  public static final void $anonfun$runAndExitValue$8(scala.sys.process.ProcessImpl$PipeSource, java.io.InputStream);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #287                // Method scala/sys/process/ProcessImpl$PipeSource.connectIn:(Ljava/io/InputStream;)V
         5: return
      LineNumberTable:
        line 152: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 source$1   Lscala/sys/process/ProcessImpl$PipeSource;
            0       6     1    in   Ljava/io/InputStream;
    MethodParameters:
      Name                           Flags
      source$1                       final
      in                             final

  public static final void $anonfun$runAndExitValue$9(scala.sys.process.ProcessImpl$PipeSink, java.io.OutputStream);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #296                // Method scala/sys/process/ProcessImpl$PipeSink.connectOut:(Ljava/io/OutputStream;)V
         5: return
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 sink$1   Lscala/sys/process/ProcessImpl$PipeSink;
            0       6     1   out   Ljava/io/OutputStream;
    MethodParameters:
      Name                           Flags
      sink$1                         final
      out                            final

  public static final scala.runtime.Nothing$ $anonfun$runAndExitValue$10(scala.sys.process.ProcessImpl$PipeSource, scala.sys.process.ProcessImpl$PipeSink, java.lang.Throwable);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #303                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         5: invokestatic  #305                // Method releaseResources$1:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/collection/immutable/Seq;)V
         8: aload_2
         9: athrow
      LineNumberTable:
        line 158: 0
        line 159: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 source$1   Lscala/sys/process/ProcessImpl$PipeSource;
            0      10     1 sink$1   Lscala/sys/process/ProcessImpl$PipeSink;
            0      10     2   err   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      source$1                       final
      sink$1                         final
      err                            final

  public static final scala.runtime.Nothing$ $anonfun$runAndExitValue$11(scala.sys.process.ProcessImpl$PipeSource, scala.sys.process.ProcessImpl$PipeSink, scala.sys.process.Process, java.lang.Throwable);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: getstatic     #311                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         5: iconst_1
         6: anewarray     #182                // class scala/sys/process/Process
         9: dup
        10: iconst_0
        11: aload_2
        12: aastore
        13: invokevirtual #315                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        16: invokestatic  #305                // Method releaseResources$1:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/collection/immutable/Seq;)V
        19: aload_3
        20: athrow
      LineNumberTable:
        line 164: 0
        line 165: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 source$1   Lscala/sys/process/ProcessImpl$PipeSource;
            0      21     1 sink$1   Lscala/sys/process/ProcessImpl$PipeSink;
            0      21     2 second$2   Lscala/sys/process/Process;
            0      21     3   err   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      source$1                       final
      sink$1                         final
      second$2                       final
      err                            final

  public static final int $anonfun$runAndExitValue$12(scala.sys.process.ProcessImpl$PipedProcesses, scala.sys.process.Process, scala.sys.process.ProcessImpl$PipeSource, scala.sys.process.Process, scala.sys.process.ProcessImpl$PipeSink);
    descriptor: (Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=7, args_size=5
         0: aload_1
         1: invokeinterface #319,  1          // InterfaceMethod scala/sys/process/Process.exitValue:()I
         6: istore        5
         8: aload_2
         9: invokevirtual #322                // Method scala/sys/process/ProcessImpl$PipeSource.done:()V
        12: aload_2
        13: invokevirtual #325                // Method scala/sys/process/ProcessImpl$PipeSource.join:()V
        16: aload_3
        17: invokeinterface #319,  1          // InterfaceMethod scala/sys/process/Process.exitValue:()I
        22: istore        6
        24: aload         4
        26: invokevirtual #326                // Method scala/sys/process/ProcessImpl$PipeSink.done:()V
        29: aload_0
        30: getfield      #147                // Field b:Lscala/sys/process/ProcessBuilder;
        33: invokeinterface #329,  1          // InterfaceMethod scala/sys/process/ProcessBuilder.hasExitValue:()Z
        38: ifeq          44
        41: iload         6
        43: ireturn
        44: iload         5
        46: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ int, int ]
      LineNumberTable:
        line 168: 0
        line 169: 8
        line 170: 12
        line 171: 16
        line 172: 24
        line 175: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      38     5 exit1   I
           24      22     6 exit2   I
            0      47     0 $this   Lscala/sys/process/ProcessImpl$PipedProcesses;
            0      47     1 first$2   Lscala/sys/process/Process;
            0      47     2 source$1   Lscala/sys/process/ProcessImpl$PipeSource;
            0      47     3 second$2   Lscala/sys/process/Process;
            0      47     4 sink$1   Lscala/sys/process/ProcessImpl$PipeSink;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      first$2                        final
      source$1                       final
      second$2                       final
      sink$1                         final

  public static final void $anonfun$runAndExitValue$13(scala.sys.process.ProcessImpl$PipeSource, scala.sys.process.ProcessImpl$PipeSink, scala.sys.process.Process, scala.sys.process.Process);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: getstatic     #311                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         5: iconst_2
         6: anewarray     #182                // class scala/sys/process/Process
         9: dup
        10: iconst_0
        11: aload_2
        12: aastore
        13: dup
        14: iconst_1
        15: aload_3
        16: aastore
        17: invokevirtual #315                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        20: invokestatic  #305                // Method releaseResources$1:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/collection/immutable/Seq;)V
        23: return
      LineNumberTable:
        line 177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0 source$1   Lscala/sys/process/ProcessImpl$PipeSource;
            0      24     1 sink$1   Lscala/sys/process/ProcessImpl$PipeSink;
            0      24     2 first$2   Lscala/sys/process/Process;
            0      24     3 second$2   Lscala/sys/process/Process;
    MethodParameters:
      Name                           Flags
      source$1                       final
      sink$1                         final
      first$2                        final
      second$2                       final

  public scala.sys.process.ProcessImpl$PipedProcesses(scala.sys.process.Process$, scala.sys.process.ProcessBuilder, scala.sys.process.ProcessBuilder, scala.sys.process.ProcessIO, boolean);
    descriptor: (Lscala/sys/process/Process$;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessBuilder;Lscala/sys/process/ProcessIO;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: aload_0
         1: aload_2
         2: putfield      #184                // Field a:Lscala/sys/process/ProcessBuilder;
         5: aload_0
         6: aload_3
         7: putfield      #147                // Field b:Lscala/sys/process/ProcessBuilder;
        10: aload_0
        11: aload         4
        13: putfield      #99                 // Field defaultIO:Lscala/sys/process/ProcessIO;
        16: aload_0
        17: iload         5
        19: putfield      #97                 // Field toError:Z
        22: aload_0
        23: aload_1
        24: invokespecial #336                // Method scala/sys/process/ProcessImpl$CompoundProcess."<init>":(Lscala/sys/process/Process$;)V
        27: return
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/sys/process/ProcessImpl$PipedProcesses;
            0      28     1 $outer   Lscala/sys/process/Process$;
            0      28     2     a   Lscala/sys/process/ProcessBuilder;
            0      28     3     b   Lscala/sys/process/ProcessBuilder;
            0      28     4 defaultIO   Lscala/sys/process/ProcessIO;
            0      28     5 toError   Z
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      a                              final
      b                              final
      defaultIO                      final
      toError                        final

  public static final java.lang.Object $anonfun$runAndExitValue$7$adapted(scala.sys.process.ProcessImpl$PipeSource, java.io.InputStream);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #338                // Method $anonfun$runAndExitValue$7:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)V
         5: getstatic     #344                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 source$1   Lscala/sys/process/ProcessImpl$PipeSource;
            0       9     1    in   Ljava/io/InputStream;
    MethodParameters:
      Name                           Flags
      source$1                       final
      in                             final

  public static final java.lang.Object $anonfun$runAndExitValue$8$adapted(scala.sys.process.ProcessImpl$PipeSource, java.io.InputStream);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #346                // Method $anonfun$runAndExitValue$8:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)V
         5: getstatic     #344                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 152: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 source$1   Lscala/sys/process/ProcessImpl$PipeSource;
            0       9     1    in   Ljava/io/InputStream;
    MethodParameters:
      Name                           Flags
      source$1                       final
      in                             final

  public static final java.lang.Object $anonfun$runAndExitValue$9$adapted(scala.sys.process.ProcessImpl$PipeSink, java.io.OutputStream);
    descriptor: (Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #348                // Method $anonfun$runAndExitValue$9:(Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)V
         5: getstatic     #344                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 sink$1   Lscala/sys/process/ProcessImpl$PipeSink;
            0       9     1   out   Ljava/io/OutputStream;
    MethodParameters:
      Name                           Flags
      sink$1                         final
      out                            final

  public static final java.lang.Object $anonfun$runAndExitValue$6$adapted(scala.sys.process.Process);
    descriptor: (Lscala/sys/process/Process;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #350                // Method $anonfun$runAndExitValue$6:(Lscala/sys/process/Process;)V
         4: getstatic     #344                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$5   Lscala/sys/process/Process;
    MethodParameters:
      Name                           Flags
      x$5                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #362,  0            // InvokeDynamic #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public abstract #13= #4 of #12;         // CompoundProcess=class scala/sys/process/ProcessImpl$CompoundProcess of class scala/sys/process/ProcessImpl
  public #16= #15 of #12;                 // PipeSink=class scala/sys/process/ProcessImpl$PipeSink of class scala/sys/process/ProcessImpl
  public #19= #18 of #12;                 // PipeSource=class scala/sys/process/ProcessImpl$PipeSource of class scala/sys/process/ProcessImpl
  public #20= #2 of #12;                  // PipedProcesses=class scala/sys/process/ProcessImpl$PipedProcesses of class scala/sys/process/ProcessImpl
  public final #22;                       // class scala/sys/process/processInternal$$anonfun$onError$1
SourceFile: "ProcessImpl.scala"
BootstrapMethods:
  0: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #37 ()Ljava/lang/Object;
      #42 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$newSource$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
      #44 ()Ljava/lang/String;
      #45 5
      #46 1
      #44 ()Ljava/lang/String;
  1: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #37 ()Ljava/lang/Object;
      #69 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$newSink$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
      #44 ()Ljava/lang/String;
      #45 5
      #46 1
      #44 ()Ljava/lang/String;
  2: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 (Ljava/lang/Object;)Ljava/lang/Object;
      #106 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$7$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
      #108 (Ljava/io/InputStream;)Ljava/lang/Object;
      #45 5
      #46 1
      #108 (Ljava/io/InputStream;)Ljava/lang/Object;
  3: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 (Ljava/lang/Object;)Ljava/lang/Object;
      #131 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$8$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
      #108 (Ljava/io/InputStream;)Ljava/lang/Object;
      #45 5
      #46 1
      #108 (Ljava/io/InputStream;)Ljava/lang/Object;
  4: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 (Ljava/lang/Object;)Ljava/lang/Object;
      #140 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$9$adapted:(Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)Ljava/lang/Object;
      #142 (Ljava/io/OutputStream;)Ljava/lang/Object;
      #45 5
      #46 1
      #142 (Ljava/io/OutputStream;)Ljava/lang/Object;
  5: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 (Ljava/lang/Object;)Ljava/lang/Object;
      #164 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$10:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #166 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #45 5
      #46 1
      #166 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  6: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 (Ljava/lang/Object;)Ljava/lang/Object;
      #189 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$11:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #166 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #45 5
      #46 1
      #166 (Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
  7: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #194 ()I
      #199 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$12:(Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)I
      #194 ()I
      #46 1
  8: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #204 ()V
      #209 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$13:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)V
      #204 ()V
      #46 1
  9: #53 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #101 (Ljava/lang/Object;)Ljava/lang/Object;
      #270 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$6$adapted:(Lscala/sys/process/Process;)Ljava/lang/Object;
      #271 (Lscala/sys/process/Process;)Ljava/lang/Object;
      #45 5
      #46 1
      #271 (Lscala/sys/process/Process;)Ljava/lang/Object;
  10: #359 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$newSink$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
      #42 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$newSource$1:(Lscala/sys/process/ProcessImpl$PipedProcesses;)Ljava/lang/String;
      #164 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$10:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #189 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$11:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Ljava/lang/Throwable;)Lscala/runtime/Nothing$;
      #199 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$12:(Lscala/sys/process/ProcessImpl$PipedProcesses;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/Process;Lscala/sys/process/ProcessImpl$PipeSink;)I
      #209 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$13:(Lscala/sys/process/ProcessImpl$PipeSource;Lscala/sys/process/ProcessImpl$PipeSink;Lscala/sys/process/Process;Lscala/sys/process/Process;)V
      #270 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$6$adapted:(Lscala/sys/process/Process;)Ljava/lang/Object;
      #106 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$7$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
      #131 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$8$adapted:(Lscala/sys/process/ProcessImpl$PipeSource;Ljava/io/InputStream;)Ljava/lang/Object;
      #140 REF_invokeStatic scala/sys/process/ProcessImpl$PipedProcesses.$anonfun$runAndExitValue$9$adapted:(Lscala/sys/process/ProcessImpl$PipeSink;Ljava/io/OutputStream;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x6D (unknown attribute)
   01 00 00 15 00 42 00 27 01 00 26 00 27 01 00 A0
   00 A1 01 00 B9 00 BA 01 00 C3 00 C4 01 00 CD 00
   CE 01 00 FB 00 FC 01 01 0A 01 0B 01 01 18 01 19
   01 00 66 00 67 01 01 21 01 19 01 00 80 00 67 01
   01 22 01 23 01 00 88 00 89 01 00 3A 01 4D 00 00
   40 00 41 00 00 1E 00 1F 00 01 01 01 02 01 00 48
   00 49 00 00 48 00 4F 00 00 20 00 21 00
  Scala: length = 0x0 (unknown attribute)

