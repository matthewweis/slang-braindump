Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/VersionInterval.class
  Last modified May 29, 2022; size 17463 bytes
  SHA-256 checksum 05154ed81f8684025f8bec687b7102358fe2f10b0dbb1aa177d6b88f437ff32b
  Compiled from "VersionInterval.scala"
public final class coursier.core.VersionInterval implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/core/VersionInterval
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 4, methods: 44, attributes: 6
Constant pool:
    #1 = Utf8               coursier/core/VersionInterval
    #2 = Class              #1            // coursier/core/VersionInterval
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               VersionInterval.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005ud\u0001B\u0012%\u0005%B\u0001b\u0010\u0001\u0003\u0006\u0004%\t\u0001\u0011\u0005\t\u0011\u0002\u0011\t\u0011)A\u0005\u0003\"A\u0011\n\u0001BC\u0002\u0013\u0005\u0001\t\u0003\u0005K\u0001\t\u0005\t\u0015!\u0003B\u0011!Y\u0005A!b\u0001\n\u0003a\u0005\u0002\u0003)\u0001\u0005\u0003\u0005\u000b\u0011B\'\t\u0011E\u0003!Q1A\u0005\u00021C\u0001B\u0015\u0001\u0003\u0002\u0003\u0006I!\u0014\u0005\u0006\'\u0002!\t\u0001\u0016\u0005\u00065\u0002!\t\u0001\u0014\u0005\u00067\u0002!\t\u0001\u0018\u0005\u0006?\u0002!\t\u0001\u0019\u0005\u0006I\u0002!\t!\u001a\u0005\u0006S\u0002!\tA\u001b\u0005\u0006g\u0002!\t\u0001\u001e\u0005\u0006m\u0002!\ta\u001e\u0005\u0006s\u0002!\tA\u001f\u0005\u0006y\u0002!\t! \u0005\u0007\u007f\u0002!\t%!\u0001\t\u000f\u0005E\u0001\u0001\"\u0011\u0002\u0014!9\u0011q\u0004\u0001\u0005B\u0005\u0005\u0002bBA\u0013\u0001\u0011\u0005\u0013q\u0005\u0005\b\u0003_\u0001A\u0011BA\u0019\u0011\u001d\tI\u0004\u0001C!\u0003wAq!!\u0010\u0001\t\u0003\ny\u0004C\u0004\u0002B\u0001!\t%a\u0011\t\u000f\u0005%\u0003\u0001\"\u0011\u0002L\u001d9\u0011q\n\u0013\t\u0002\u0005EcAB\u0012%\u0011\u0003\t\u0019\u0006\u0003\u0004T;\u0011\u0005\u0011q\f\u0005\n\u0003Cj\"\u0019!C\u0001\u0003GBq!!\u001a\u001eA\u0003%Q\u000bC\u0004\u0002hu!\t!!\u001b\t\u0013\u0005MT$!A\u0005\n\u0005U$a\u0004,feNLwN\\%oi\u0016\u0014h/\u00197\u000b\u0005\u00152\u0013\u0001B2pe\u0016T\u0011aJ\u0001\tG>,(o]5fe\u000e\u00011\u0003\u0002\u0001+aM\u0002\"a\u000b\u0018\u000e\u00031R\u0011!L\u0001\u0006g\u000e\fG.Y\u0005\u0003_1\u0012a!\u00118z%\u00164\u0007CA\u00162\u0013\t\u0011DFA\u0004Qe>$Wo\u0019;\u0011\u0005QbdBA\u001b;\u001d\t1\u0014(D\u00018\u0015\tA\u0004&\u0001\u0004=e>|GOP\u0005\u0002[%\u00111\bL\u0001\ba\u0006\u001c7.Y4f\u0013\tidH\u0001\u0007TKJL\u0017\r\\5{C\ndWM\u0003\u0002<Y\u0005!aM]8n+\u0005\t\u0005cA\u0016C\t&\u00111\t\f\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0005\u00153U\"\u0001\u0013\n\u0005\u001d##a\u0002,feNLwN\\\u0001\u0006MJ|W\u000eI\u0001\u0003i>\f1\u0001^8!\u000311\'o\\7J]\u000edW\u000fZ3e+\u0005i\u0005CA\u0016O\u0013\tyEFA\u0004C_>dW-\u00198\u0002\u001b\u0019\u0014x.\\%oG2,H-\u001a3!\u0003)!x.\u00138dYV$W\rZ\u0001\fi>Len\u00197vI\u0016$\u0007%\u0001\u0004=S:LGO\u0010\u000b\u0006+Z;\u0006,\u0017\t\u0003\u000b\u0002AQaP\u0005A\u0002\u0005CQ!S\u0005A\u0002\u0005CQaS\u0005A\u00025CQ!U\u0005A\u00025\u000bq![:WC2LG-\u0001\u0005d_:$\u0018-\u001b8t)\tiU\fC\u0003_\u0017\u0001\u0007A)A\u0004wKJ\u001c\u0018n\u001c8\u0002\u000b5,\'oZ3\u0015\u0005\u0005\u0014\u0007cA\u0016C+\")1\r\u0004a\u0001+\u0006)q\u000e\u001e5fe\u0006Q1m\u001c8tiJ\f\u0017N\u001c;\u0016\u0003\u0019\u0004\"!R4\n\u0005!$#!\u0005,feNLwN\\\"p]N$(/Y5oi\u0006!!/\u001a9s+\u0005Y\u0007C\u00017q\u001d\tig\u000e\u0005\u00027Y%\u0011q\u000eL\u0001\u0007!J,G-\u001a4\n\u0005E\u0014(AB*ue&twM\u0003\u0002pY\u0005Aq/\u001b;i\rJ|W\u000e\u0006\u0002Vk\")qh\u0004a\u0001\u0003\u00061q/\u001b;i)>$\"!\u0016=\t\u000b%\u0003\u0002\u0019A!\u0002!]LG\u000f\u001b$s_6Len\u00197vI\u0016$GCA+|\u0011\u0015Y\u0015\u00031\u0001N\u000399\u0018\u000e\u001e5U_&s7\r\\;eK\u0012$\"!\u0016@\t\u000bE\u0013\u0002\u0019A\'\u0002\u0011Q|7\u000b\u001e:j]\u001e$\"!a\u0001\u0011\t\u0005\u0015\u0011qB\u0007\u0003\u0003\u000fQA!!\u0003\u0002\f\u0005!A.\u00198h\u0015\t\ti!\u0001\u0003kCZ\f\u0017bA9\u0002\b\u0005A1-\u00198FcV\fG\u000eF\u0002N\u0003+Aq!a\u0006\u0015\u0001\u0004\tI\"A\u0002pE*\u00042aKA\u000e\u0013\r\ti\u0002\f\u0002\u0004\u0003:L\u0018AB3rk\u0006d7\u000fF\u0002N\u0003GAq!a\u0006\u0016\u0001\u0004\tI\"\u0001\u0005iCND7i\u001c3f)\t\tI\u0003E\u0002,\u0003WI1!!\f-\u0005\rIe\u000e^\u0001\u0006iV\u0004H.Z\u000b\u0003\u0003g\u0001raKA\u001b\u0003\u0006kU*C\u0002\u000281\u0012a\u0001V;qY\u0016$\u0014!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070\u0006\u0002\u0002\u0004\u0005a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011\u0011F\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\u0011\tI\"!\u0012\t\u000f\u0005\u001d#\u00041\u0001\u0002*\u0005\ta.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,G\u0003BA\u0002\u0003\u001bBq!a\u0012\u001c\u0001\u0004\tI#A\bWKJ\u001c\u0018n\u001c8J]R,\'O^1m!\t)Ud\u0005\u0003\u001eU\u0005U\u0003\u0003BA,\u0003;j!!!\u0017\u000b\t\u0005m\u00131B\u0001\u0003S>L1!PA-)\t\t\t&\u0001\u0003{KJ|W#A+\u0002\u000bi,\'o\u001c\u0011\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u0013U\u000bY\'!\u001c\u0002p\u0005E\u0004\"B \"\u0001\u0004\t\u0005\"B%\"\u0001\u0004\t\u0005\"B&\"\u0001\u0004i\u0005\"B)\"\u0001\u0004i\u0015\u0001D<sSR,\'+\u001a9mC\u000e,GCAA<!\u0011\t)!!\u001f\n\t\u0005m\u0014q\u0001\u0002\u0007\u001f\nTWm\u0019;
   #13 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #14 = Class              #13           // java/lang/invoke/MethodHandles$Lookup
   #15 = Utf8               java/lang/invoke/MethodHandles
   #16 = Class              #15           // java/lang/invoke/MethodHandles
   #17 = Utf8               Lookup
   #18 = Utf8               from
   #19 = Utf8               Lscala/Option;
   #20 = Utf8               Lscala/Option<Lcoursier/core/Version;>;
   #21 = Utf8               to
   #22 = Utf8               fromIncluded
   #23 = Utf8               Z
   #24 = Utf8               toIncluded
   #25 = Utf8               apply
   #26 = Utf8               (Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
   #27 = Utf8               (Lscala/Option<Lcoursier/core/Version;>;Lscala/Option<Lcoursier/core/Version;>;ZZ)Lcoursier/core/VersionInterval;
   #28 = Utf8               coursier/core/VersionInterval$
   #29 = Class              #28           // coursier/core/VersionInterval$
   #30 = Utf8               MODULE$
   #31 = Utf8               Lcoursier/core/VersionInterval$;
   #32 = NameAndType        #30:#31       // MODULE$:Lcoursier/core/VersionInterval$;
   #33 = Fieldref           #29.#32       // coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
   #34 = NameAndType        #25:#26       // apply:(Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
   #35 = Methodref          #29.#34       // coursier/core/VersionInterval$.apply:(Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
   #36 = Utf8               zero
   #37 = Utf8               ()Lcoursier/core/VersionInterval;
   #38 = NameAndType        #36:#37       // zero:()Lcoursier/core/VersionInterval;
   #39 = Methodref          #29.#38       // coursier/core/VersionInterval$.zero:()Lcoursier/core/VersionInterval;
   #40 = Utf8               productIterator
   #41 = Utf8               ()Lscala/collection/Iterator;
   #42 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #43 = Utf8               productIterator$
   #44 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #45 = NameAndType        #43:#44       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #46 = InterfaceMethodref #6.#45        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #47 = Utf8               this
   #48 = Utf8               Lcoursier/core/VersionInterval;
   #49 = Utf8               productElementNames
   #50 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #51 = Utf8               productElementNames$
   #52 = NameAndType        #51:#44       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #53 = InterfaceMethodref #6.#52        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #54 = Utf8               ()Lscala/Option;
   #55 = Utf8               ()Lscala/Option<Lcoursier/core/Version;>;
   #56 = NameAndType        #18:#19       // from:Lscala/Option;
   #57 = Fieldref           #2.#56        // coursier/core/VersionInterval.from:Lscala/Option;
   #58 = NameAndType        #21:#19       // to:Lscala/Option;
   #59 = Fieldref           #2.#58        // coursier/core/VersionInterval.to:Lscala/Option;
   #60 = Utf8               ()Z
   #61 = NameAndType        #22:#23       // fromIncluded:Z
   #62 = Fieldref           #2.#61        // coursier/core/VersionInterval.fromIncluded:Z
   #63 = NameAndType        #24:#23       // toIncluded:Z
   #64 = Fieldref           #2.#63        // coursier/core/VersionInterval.toIncluded:Z
   #65 = Utf8               isValid
   #66 = NameAndType        #18:#54       // from:()Lscala/Option;
   #67 = Methodref          #2.#66        // coursier/core/VersionInterval.from:()Lscala/Option;
   #68 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #69 = MethodType         #68           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #70 = Utf8               $anonfun$isValid$1
   #71 = Utf8               (Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Option;
   #72 = NameAndType        #70:#71       // $anonfun$isValid$1:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Option;
   #73 = Methodref          #2.#72        // coursier/core/VersionInterval.$anonfun$isValid$1:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Option;
   #74 = MethodHandle       6:#73         // REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$1:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Option;
   #75 = Utf8               (Lcoursier/core/Version;)Lscala/Option;
   #76 = MethodType         #75           //  (Lcoursier/core/Version;)Lscala/Option;
   #77 = Integer            5
   #78 = Integer            1
   #79 = Utf8               java/lang/invoke/LambdaMetafactory
   #80 = Class              #79           // java/lang/invoke/LambdaMetafactory
   #81 = Utf8               altMetafactory
   #82 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #83 = NameAndType        #81:#82       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #84 = Methodref          #80.#83       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #85 = MethodHandle       6:#84         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #86 = Utf8               (Lcoursier/core/VersionInterval;)Lscala/Function1;
   #87 = NameAndType        #25:#86       // apply:(Lcoursier/core/VersionInterval;)Lscala/Function1;
   #88 = InvokeDynamic      #0:#87        // #0:apply:(Lcoursier/core/VersionInterval;)Lscala/Function1;
   #89 = Utf8               scala/Option
   #90 = Class              #89           // scala/Option
   #91 = Utf8               flatMap
   #92 = Utf8               (Lscala/Function1;)Lscala/Option;
   #93 = NameAndType        #91:#92       // flatMap:(Lscala/Function1;)Lscala/Option;
   #94 = Methodref          #90.#93       // scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
   #95 = Utf8               $anonfun$isValid$4$adapted
   #96 = NameAndType        #95:#68       // $anonfun$isValid$4$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #97 = Methodref          #2.#96        // coursier/core/VersionInterval.$anonfun$isValid$4$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #98 = MethodHandle       6:#97         // REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$4$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #99 = Utf8               ()Lscala/Function1;
  #100 = NameAndType        #25:#99       // apply:()Lscala/Function1;
  #101 = InvokeDynamic      #1:#100       // #1:apply:()Lscala/Function1;
  #102 = Utf8               forall
  #103 = Utf8               (Lscala/Function1;)Z
  #104 = NameAndType        #102:#103     // forall:(Lscala/Function1;)Z
  #105 = Methodref          #90.#104      // scala/Option.forall:(Lscala/Function1;)Z
  #106 = Utf8               nonEmpty
  #107 = NameAndType        #106:#60      // nonEmpty:()Z
  #108 = Methodref          #90.#107      // scala/Option.nonEmpty:()Z
  #109 = NameAndType        #22:#60       // fromIncluded:()Z
  #110 = Methodref          #2.#109       // coursier/core/VersionInterval.fromIncluded:()Z
  #111 = NameAndType        #21:#54       // to:()Lscala/Option;
  #112 = Methodref          #2.#111       // coursier/core/VersionInterval.to:()Lscala/Option;
  #113 = NameAndType        #24:#60       // toIncluded:()Z
  #114 = Methodref          #2.#113       // coursier/core/VersionInterval.toIncluded:()Z
  #115 = Utf8               fromToOrder
  #116 = Utf8               contains
  #117 = Utf8               (Lcoursier/core/Version;)Z
  #118 = Utf8               version
  #119 = Utf8               scala/runtime/LazyBoolean
  #120 = Class              #119          // scala/runtime/LazyBoolean
  #121 = Utf8               <init>
  #122 = Utf8               ()V
  #123 = NameAndType        #121:#122     // "<init>":()V
  #124 = Methodref          #120.#123     // scala/runtime/LazyBoolean."<init>":()V
  #125 = Utf8               $anonfun$contains$1$adapted
  #126 = Utf8               (Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #127 = NameAndType        #125:#126     // $anonfun$contains$1$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #128 = Methodref          #2.#127       // coursier/core/VersionInterval.$anonfun$contains$1$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #129 = MethodHandle       6:#128        // REF_invokeStatic coursier/core/VersionInterval.$anonfun$contains$1$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #130 = Utf8               (Lcoursier/core/Version;)Ljava/lang/Object;
  #131 = MethodType         #130          //  (Lcoursier/core/Version;)Ljava/lang/Object;
  #132 = Utf8               (Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Function1;
  #133 = NameAndType        #25:#132      // apply:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Function1;
  #134 = InvokeDynamic      #2:#133       // #2:apply:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Function1;
  #135 = Utf8               toCond$1
  #136 = Utf8               (Lscala/runtime/LazyBoolean;Lcoursier/core/Version;)Z
  #137 = NameAndType        #135:#136     // toCond$1:(Lscala/runtime/LazyBoolean;Lcoursier/core/Version;)Z
  #138 = Methodref          #2.#137       // coursier/core/VersionInterval.toCond$1:(Lscala/runtime/LazyBoolean;Lcoursier/core/Version;)Z
  #139 = Utf8               toCond$lzy
  #140 = Utf8               Lscala/runtime/LazyBoolean;
  #141 = Utf8               fromCond
  #142 = Utf8               Lcoursier/core/Version;
  #143 = Utf8               merge
  #144 = Utf8               (Lcoursier/core/VersionInterval;)Lscala/Option;
  #145 = Utf8               (Lcoursier/core/VersionInterval;)Lscala/Option<Lcoursier/core/VersionInterval;>;
  #146 = Utf8               other
  #147 = Utf8               scala/Tuple2
  #148 = Class              #147          // scala/Tuple2
  #149 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #150 = NameAndType        #121:#149     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #151 = Methodref          #148.#150     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #152 = Utf8               _1
  #153 = Utf8               ()Ljava/lang/Object;
  #154 = NameAndType        #152:#153     // _1:()Ljava/lang/Object;
  #155 = Methodref          #148.#154     // scala/Tuple2._1:()Ljava/lang/Object;
  #156 = Utf8               _2
  #157 = NameAndType        #156:#153     // _2:()Ljava/lang/Object;
  #158 = Methodref          #148.#157     // scala/Tuple2._2:()Ljava/lang/Object;
  #159 = Utf8               scala/Some
  #160 = Class              #159          // scala/Some
  #161 = Utf8               value
  #162 = NameAndType        #161:#153     // value:()Ljava/lang/Object;
  #163 = Methodref          #160.#162     // scala/Some.value:()Ljava/lang/Object;
  #164 = Utf8               coursier/core/Version
  #165 = Class              #164          // coursier/core/Version
  #166 = Utf8               compare
  #167 = Utf8               (Lcoursier/core/Version;)I
  #168 = NameAndType        #166:#167     // compare:(Lcoursier/core/Version;)I
  #169 = Methodref          #165.#168     // coursier/core/Version.compare:(Lcoursier/core/Version;)I
  #170 = Utf8               (Ljava/lang/Object;)V
  #171 = NameAndType        #121:#170     // "<init>":(Ljava/lang/Object;)V
  #172 = Methodref          #160.#171     // scala/Some."<init>":(Ljava/lang/Object;)V
  #173 = Utf8               scala/runtime/BoxesRunTime
  #174 = Class              #173          // scala/runtime/BoxesRunTime
  #175 = Utf8               boxToBoolean
  #176 = Utf8               (Z)Ljava/lang/Boolean;
  #177 = NameAndType        #175:#176     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #178 = Methodref          #174.#177     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #179 = Utf8               scala/None$
  #180 = Class              #179          // scala/None$
  #181 = Utf8               Lscala/None$;
  #182 = NameAndType        #30:#181      // MODULE$:Lscala/None$;
  #183 = Fieldref           #180.#182     // scala/None$.MODULE$:Lscala/None$;
  #184 = Utf8               equals
  #185 = Utf8               (Ljava/lang/Object;)Z
  #186 = NameAndType        #184:#185     // equals:(Ljava/lang/Object;)Z
  #187 = Methodref          #4.#186       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #188 = Utf8               scala/MatchError
  #189 = Class              #188          // scala/MatchError
  #190 = Methodref          #189.#171     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #191 = Utf8               _2$mcZ$sp
  #192 = NameAndType        #191:#60      // _2$mcZ$sp:()Z
  #193 = Methodref          #148.#192     // scala/Tuple2._2$mcZ$sp:()Z
  #194 = Utf8               $anonfun$merge$1$adapted
  #195 = Utf8               (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #196 = NameAndType        #194:#195     // $anonfun$merge$1$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #197 = Methodref          #2.#196       // coursier/core/VersionInterval.$anonfun$merge$1$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #198 = MethodHandle       6:#197        // REF_invokeStatic coursier/core/VersionInterval.$anonfun$merge$1$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #199 = MethodType         #195          //  (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #200 = InvokeDynamic      #3:#100       // #3:apply:()Lscala/Function1;
  #201 = Utf8               filter
  #202 = NameAndType        #201:#92      // filter:(Lscala/Function1;)Lscala/Option;
  #203 = Methodref          #160.#202     // scala/Some.filter:(Lscala/Function1;)Lscala/Option;
  #204 = Utf8               cmp
  #205 = Utf8               I
  #206 = Utf8               b
  #207 = Utf8               a
  #208 = Utf8               newFrom
  #209 = Utf8               newFromIncluded
  #210 = Utf8               newTo
  #211 = Utf8               newToIncluded
  #212 = Utf8               constraint
  #213 = Utf8               ()Lcoursier/core/VersionConstraint;
  #214 = Utf8               coursier/core/VersionConstraint$
  #215 = Class              #214          // coursier/core/VersionConstraint$
  #216 = Utf8               Lcoursier/core/VersionConstraint$;
  #217 = NameAndType        #30:#216      // MODULE$:Lcoursier/core/VersionConstraint$;
  #218 = Fieldref           #215.#217     // coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
  #219 = Utf8               all
  #220 = NameAndType        #219:#213     // all:()Lcoursier/core/VersionConstraint;
  #221 = Methodref          #215.#220     // coursier/core/VersionConstraint$.all:()Lcoursier/core/VersionConstraint;
  #222 = Utf8               scala/Tuple4
  #223 = Class              #222          // scala/Tuple4
  #224 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #225 = NameAndType        #121:#224     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #226 = Methodref          #223.#225     // scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #227 = Methodref          #223.#154     // scala/Tuple4._1:()Ljava/lang/Object;
  #228 = Methodref          #223.#157     // scala/Tuple4._2:()Ljava/lang/Object;
  #229 = Utf8               _3
  #230 = NameAndType        #229:#153     // _3:()Ljava/lang/Object;
  #231 = Methodref          #223.#230     // scala/Tuple4._3:()Ljava/lang/Object;
  #232 = Utf8               unboxToBoolean
  #233 = NameAndType        #232:#185     // unboxToBoolean:(Ljava/lang/Object;)Z
  #234 = Methodref          #174.#233     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #235 = Utf8               _4
  #236 = NameAndType        #235:#153     // _4:()Ljava/lang/Object;
  #237 = Methodref          #223.#236     // scala/Tuple4._4:()Ljava/lang/Object;
  #238 = Utf8               preferred
  #239 = Utf8               (Lcoursier/core/Version;)Lcoursier/core/VersionConstraint;
  #240 = NameAndType        #238:#239     // preferred:(Lcoursier/core/Version;)Lcoursier/core/VersionConstraint;
  #241 = Methodref          #215.#240     // coursier/core/VersionConstraint$.preferred:(Lcoursier/core/Version;)Lcoursier/core/VersionConstraint;
  #242 = Utf8               interval
  #243 = Utf8               (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #244 = NameAndType        #242:#243     // interval:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #245 = Methodref          #215.#244     // coursier/core/VersionConstraint$.interval:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #246 = Utf8               coursier/core/VersionConstraint
  #247 = Class              #246          // coursier/core/VersionConstraint
  #248 = Utf8               repr
  #249 = Utf8               ()Ljava/lang/String;
  #250 = Utf8               scala/collection/immutable/$colon$colon
  #251 = Class              #250          // scala/collection/immutable/$colon$colon
  #252 = Utf8               [
  #253 = String             #252          // [
  #254 = Utf8               (
  #255 = String             #254          // (
  #256 = Utf8               java/lang/String
  #257 = Class              #256          // java/lang/String
  #258 = Utf8               scala/Option$
  #259 = Class              #258          // scala/Option$
  #260 = Utf8               Lscala/Option$;
  #261 = NameAndType        #30:#260      // MODULE$:Lscala/Option$;
  #262 = Fieldref           #259.#261     // scala/Option$.MODULE$:Lscala/Option$;
  #263 = Utf8               $anonfun$repr$1
  #264 = Utf8               (Lcoursier/core/Version;)Ljava/lang/String;
  #265 = NameAndType        #263:#264     // $anonfun$repr$1:(Lcoursier/core/Version;)Ljava/lang/String;
  #266 = Methodref          #2.#265       // coursier/core/VersionInterval.$anonfun$repr$1:(Lcoursier/core/Version;)Ljava/lang/String;
  #267 = MethodHandle       6:#266        // REF_invokeStatic coursier/core/VersionInterval.$anonfun$repr$1:(Lcoursier/core/Version;)Ljava/lang/String;
  #268 = MethodType         #264          //  (Lcoursier/core/Version;)Ljava/lang/String;
  #269 = InvokeDynamic      #4:#100       // #4:apply:()Lscala/Function1;
  #270 = Utf8               map
  #271 = NameAndType        #270:#92      // map:(Lscala/Function1;)Lscala/Option;
  #272 = Methodref          #90.#271      // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #273 = Utf8               option2Iterable
  #274 = Utf8               (Lscala/Option;)Lscala/collection/Iterable;
  #275 = NameAndType        #273:#274     // option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #276 = Methodref          #259.#275     // scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #277 = Utf8               scala/collection/Iterable
  #278 = Class              #277          // scala/collection/Iterable
  #279 = Utf8               mkString
  #280 = NameAndType        #279:#249     // mkString:()Ljava/lang/String;
  #281 = InterfaceMethodref #278.#280     // scala/collection/Iterable.mkString:()Ljava/lang/String;
  #282 = Utf8               ,
  #283 = String             #282          // ,
  #284 = Utf8               $anonfun$repr$2
  #285 = NameAndType        #284:#264     // $anonfun$repr$2:(Lcoursier/core/Version;)Ljava/lang/String;
  #286 = Methodref          #2.#285       // coursier/core/VersionInterval.$anonfun$repr$2:(Lcoursier/core/Version;)Ljava/lang/String;
  #287 = MethodHandle       6:#286        // REF_invokeStatic coursier/core/VersionInterval.$anonfun$repr$2:(Lcoursier/core/Version;)Ljava/lang/String;
  #288 = InvokeDynamic      #5:#100       // #5:apply:()Lscala/Function1;
  #289 = Utf8               ]
  #290 = String             #289          // ]
  #291 = Utf8               )
  #292 = String             #291          // )
  #293 = Utf8               scala/collection/immutable/Nil$
  #294 = Class              #293          // scala/collection/immutable/Nil$
  #295 = Utf8               Lscala/collection/immutable/Nil$;
  #296 = NameAndType        #30:#295      // MODULE$:Lscala/collection/immutable/Nil$;
  #297 = Fieldref           #294.#296     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #298 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #299 = NameAndType        #121:#298     // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #300 = Methodref          #251.#299     // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #301 = Methodref          #251.#280     // scala/collection/immutable/$colon$colon.mkString:()Ljava/lang/String;
  #302 = Utf8               withFrom
  #303 = Utf8               (Lscala/Option;)Lcoursier/core/VersionInterval;
  #304 = Utf8               (Lscala/Option<Lcoursier/core/Version;>;)Lcoursier/core/VersionInterval;
  #305 = Utf8               (Lscala/Option;Lscala/Option;ZZ)V
  #306 = NameAndType        #121:#305     // "<init>":(Lscala/Option;Lscala/Option;ZZ)V
  #307 = Methodref          #2.#306       // coursier/core/VersionInterval."<init>":(Lscala/Option;Lscala/Option;ZZ)V
  #308 = Utf8               withTo
  #309 = Utf8               withFromIncluded
  #310 = Utf8               (Z)Lcoursier/core/VersionInterval;
  #311 = Utf8               withToIncluded
  #312 = Utf8               toString
  #313 = Utf8               java/lang/StringBuilder
  #314 = Class              #313          // java/lang/StringBuilder
  #315 = Utf8               VersionInterval(
  #316 = String             #315          // VersionInterval(
  #317 = Utf8               (Ljava/lang/String;)V
  #318 = NameAndType        #121:#317     // "<init>":(Ljava/lang/String;)V
  #319 = Methodref          #314.#318     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #320 = Utf8               valueOf
  #321 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #322 = NameAndType        #320:#321     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #323 = Methodref          #257.#322     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #324 = Utf8               append
  #325 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #326 = NameAndType        #324:#325     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #327 = Methodref          #314.#326     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #328 = Utf8               ,
  #329 = String             #328          // ,
  #330 = Utf8               (Z)Ljava/lang/String;
  #331 = NameAndType        #320:#330     // valueOf:(Z)Ljava/lang/String;
  #332 = Methodref          #257.#331     // java/lang/String.valueOf:(Z)Ljava/lang/String;
  #333 = NameAndType        #312:#249     // toString:()Ljava/lang/String;
  #334 = Methodref          #314.#333     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #335 = Utf8               Ljava/lang/StringBuilder;
  #336 = Utf8               canEqual
  #337 = Utf8               obj
  #338 = Utf8               Ljava/lang/Object;
  #339 = NameAndType        #336:#185     // canEqual:(Ljava/lang/Object;)Z
  #340 = Methodref          #2.#339       // coursier/core/VersionInterval.canEqual:(Ljava/lang/Object;)Z
  #341 = Utf8               hashCode
  #342 = Utf8               ()I
  #343 = Utf8               VersionInterval
  #344 = String             #343          // VersionInterval
  #345 = Utf8               scala/runtime/Statics
  #346 = Class              #345          // scala/runtime/Statics
  #347 = Utf8               anyHash
  #348 = Utf8               (Ljava/lang/Object;)I
  #349 = NameAndType        #347:#348     // anyHash:(Ljava/lang/Object;)I
  #350 = Methodref          #346.#349     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #351 = Utf8               code
  #352 = Utf8               tuple
  #353 = Utf8               ()Lscala/Tuple4;
  #354 = Utf8               ()Lscala/Tuple4<Lscala/Option<Lcoursier/core/Version;>;Lscala/Option<Lcoursier/core/Version;>;Ljava/lang/Object;Ljava/lang/Object;>;
  #355 = Utf8               productPrefix
  #356 = Utf8               productArity
  #357 = Utf8               productElement
  #358 = Utf8               (I)Ljava/lang/Object;
  #359 = Utf8               n
  #360 = Utf8               java/lang/IndexOutOfBoundsException
  #361 = Class              #360          // java/lang/IndexOutOfBoundsException
  #362 = Utf8               boxToInteger
  #363 = Utf8               (I)Ljava/lang/Integer;
  #364 = NameAndType        #362:#363     // boxToInteger:(I)Ljava/lang/Integer;
  #365 = Methodref          #174.#364     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #366 = Methodref          #4.#333       // java/lang/Object.toString:()Ljava/lang/String;
  #367 = Methodref          #361.#318     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #368 = Utf8               productElementName
  #369 = Utf8               (I)Ljava/lang/String;
  #370 = String             #18           // from
  #371 = String             #21           // to
  #372 = String             #22           // fromIncluded
  #373 = String             #24           // toIncluded
  #374 = Utf8               $anonfun$isValid$2
  #375 = Utf8               (Lcoursier/core/Version;Lcoursier/core/Version;)Lscala/Tuple2;
  #376 = Utf8               f$1
  #377 = Utf8               t
  #378 = Utf8               cmd
  #379 = Utf8               $anonfun$isValid$3
  #380 = Utf8               (Lcoursier/core/VersionInterval;Lscala/Tuple2;)Z
  #381 = Utf8               $this
  #382 = Utf8               x$1
  #383 = Utf8               _2$mcI$sp
  #384 = NameAndType        #383:#342     // _2$mcI$sp:()I
  #385 = Methodref          #148.#384     // scala/Tuple2._2$mcI$sp:()I
  #386 = Utf8               Lscala/Tuple2;
  #387 = Utf8               f
  #388 = NameAndType        #374:#375     // $anonfun$isValid$2:(Lcoursier/core/Version;Lcoursier/core/Version;)Lscala/Tuple2;
  #389 = Methodref          #2.#388       // coursier/core/VersionInterval.$anonfun$isValid$2:(Lcoursier/core/Version;Lcoursier/core/Version;)Lscala/Tuple2;
  #390 = MethodHandle       6:#389        // REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$2:(Lcoursier/core/Version;Lcoursier/core/Version;)Lscala/Tuple2;
  #391 = Utf8               (Lcoursier/core/Version;)Lscala/Tuple2;
  #392 = MethodType         #391          //  (Lcoursier/core/Version;)Lscala/Tuple2;
  #393 = Utf8               (Lcoursier/core/Version;)Lscala/Function1;
  #394 = NameAndType        #25:#393      // apply:(Lcoursier/core/Version;)Lscala/Function1;
  #395 = InvokeDynamic      #6:#394       // #6:apply:(Lcoursier/core/Version;)Lscala/Function1;
  #396 = Utf8               $anonfun$isValid$3$adapted
  #397 = Utf8               (Lcoursier/core/VersionInterval;Lscala/Tuple2;)Ljava/lang/Object;
  #398 = NameAndType        #396:#397     // $anonfun$isValid$3$adapted:(Lcoursier/core/VersionInterval;Lscala/Tuple2;)Ljava/lang/Object;
  #399 = Methodref          #2.#398       // coursier/core/VersionInterval.$anonfun$isValid$3$adapted:(Lcoursier/core/VersionInterval;Lscala/Tuple2;)Ljava/lang/Object;
  #400 = MethodHandle       6:#399        // REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$3$adapted:(Lcoursier/core/VersionInterval;Lscala/Tuple2;)Ljava/lang/Object;
  #401 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #402 = MethodType         #401          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #403 = InvokeDynamic      #7:#87        // #7:apply:(Lcoursier/core/VersionInterval;)Lscala/Function1;
  #404 = Utf8               $anonfun$isValid$4
  #405 = Utf8               (Z)Z
  #406 = Utf8               x
  #407 = Utf8               $anonfun$contains$1
  #408 = Utf8               (Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #409 = Utf8               version$1
  #410 = Utf8               from0
  #411 = Utf8               $anonfun$contains$2
  #412 = Utf8               to0
  #413 = Utf8               toCond$lzycompute$1
  #414 = Utf8               toCond$lzy$1
  #415 = Utf8               initialized
  #416 = NameAndType        #415:#60      // initialized:()Z
  #417 = Methodref          #120.#416     // scala/runtime/LazyBoolean.initialized:()Z
  #418 = NameAndType        #161:#60      // value:()Z
  #419 = Methodref          #120.#418     // scala/runtime/LazyBoolean.value:()Z
  #420 = Utf8               $anonfun$contains$2$adapted
  #421 = NameAndType        #420:#126     // $anonfun$contains$2$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #422 = Methodref          #2.#421       // coursier/core/VersionInterval.$anonfun$contains$2$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #423 = MethodHandle       6:#422        // REF_invokeStatic coursier/core/VersionInterval.$anonfun$contains$2$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #424 = InvokeDynamic      #8:#133       // #8:apply:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Function1;
  #425 = Utf8               initialize
  #426 = NameAndType        #425:#405     // initialize:(Z)Z
  #427 = Methodref          #120.#426     // scala/runtime/LazyBoolean.initialize:(Z)Z
  #428 = Utf8               java/lang/Throwable
  #429 = Class              #428          // java/lang/Throwable
  #430 = NameAndType        #413:#136     // toCond$lzycompute$1:(Lscala/runtime/LazyBoolean;Lcoursier/core/Version;)Z
  #431 = Methodref          #2.#430       // coursier/core/VersionInterval.toCond$lzycompute$1:(Lscala/runtime/LazyBoolean;Lcoursier/core/Version;)Z
  #432 = Utf8               $anonfun$merge$1
  #433 = Utf8               (Lcoursier/core/VersionInterval;)Z
  #434 = Utf8               x$4
  #435 = NameAndType        #65:#60       // isValid:()Z
  #436 = Methodref          #2.#435       // coursier/core/VersionInterval.isValid:()Z
  #437 = Utf8               x$5
  #438 = NameAndType        #248:#249     // repr:()Ljava/lang/String;
  #439 = Methodref          #165.#438     // coursier/core/Version.repr:()Ljava/lang/String;
  #440 = Utf8               x$6
  #441 = Utf8               (Lscala/Option<Lcoursier/core/Version;>;Lscala/Option<Lcoursier/core/Version;>;ZZ)V
  #442 = Methodref          #4.#123       // java/lang/Object."<init>":()V
  #443 = Utf8               $init$
  #444 = Utf8               (Lscala/Product;)V
  #445 = NameAndType        #443:#444     // $init$:(Lscala/Product;)V
  #446 = InterfaceMethodref #6.#445       // scala/Product.$init$:(Lscala/Product;)V
  #447 = NameAndType        #404:#405     // $anonfun$isValid$4:(Z)Z
  #448 = Methodref          #2.#447       // coursier/core/VersionInterval.$anonfun$isValid$4:(Z)Z
  #449 = NameAndType        #407:#408     // $anonfun$contains$1:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #450 = Methodref          #2.#449       // coursier/core/VersionInterval.$anonfun$contains$1:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #451 = NameAndType        #432:#433     // $anonfun$merge$1:(Lcoursier/core/VersionInterval;)Z
  #452 = Methodref          #2.#451       // coursier/core/VersionInterval.$anonfun$merge$1:(Lcoursier/core/VersionInterval;)Z
  #453 = NameAndType        #379:#380     // $anonfun$isValid$3:(Lcoursier/core/VersionInterval;Lscala/Tuple2;)Z
  #454 = Methodref          #2.#453       // coursier/core/VersionInterval.$anonfun$isValid$3:(Lcoursier/core/VersionInterval;Lscala/Tuple2;)Z
  #455 = NameAndType        #411:#408     // $anonfun$contains$2:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #456 = Methodref          #2.#455       // coursier/core/VersionInterval.$anonfun$contains$2:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #457 = Utf8               $deserializeLambda$
  #458 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #459 = Utf8               scala/runtime/LambdaDeserialize
  #460 = Class              #459          // scala/runtime/LambdaDeserialize
  #461 = Utf8               bootstrap
  #462 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #463 = NameAndType        #461:#462     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #464 = Methodref          #460.#463     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #465 = MethodHandle       6:#464        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #466 = Utf8               lambdaDeserialize
  #467 = NameAndType        #466:#458     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #468 = InvokeDynamic      #9:#467       // #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #469 = Utf8               Signature
  #470 = Utf8               Code
  #471 = Utf8               MethodParameters
  #472 = Utf8               LineNumberTable
  #473 = Utf8               LocalVariableTable
  #474 = Utf8               StackMapTable
  #475 = Utf8               InnerClasses
  #476 = Utf8               SourceFile
  #477 = Utf8               RuntimeVisibleAnnotations
  #478 = Utf8               BootstrapMethods
  #479 = Utf8               ScalaInlineInfo
  #480 = Utf8               ScalaSig
{
  private final scala.Option<coursier.core.Version> from;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lscala/Option<Lcoursier/core/Version;>;

  private final scala.Option<coursier.core.Version> to;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lscala/Option<Lcoursier/core/Version;>;

  private final boolean fromIncluded;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean toIncluded;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static coursier.core.VersionInterval apply(scala.Option<coursier.core.Version>, scala.Option<coursier.core.Version>, boolean, boolean);
    descriptor: (Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #33                 // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
         3: aload_0
         4: aload_1
         5: iload_2
         6: iload_3
         7: invokevirtual #35                 // Method coursier/core/VersionInterval$.apply:(Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
        10: areturn
    Signature: #27                          // (Lscala/Option<Lcoursier/core/Version;>;Lscala/Option<Lcoursier/core/Version;>;ZZ)Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      from                           final
      to                             final
      fromIncluded                   final
      toIncluded                     final

  public static coursier.core.VersionInterval zero();
    descriptor: ()Lcoursier/core/VersionInterval;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #33                 // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
         3: invokevirtual #39                 // Method coursier/core/VersionInterval$.zero:()Lcoursier/core/VersionInterval;
         6: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #46                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionInterval;
    Signature: #42                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionInterval;
    Signature: #50                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public scala.Option<coursier.core.Version> from();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #57                 // Field from:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionInterval;
    Signature: #55                          // ()Lscala/Option<Lcoursier/core/Version;>;

  public scala.Option<coursier.core.Version> to();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #59                 // Field to:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionInterval;
    Signature: #55                          // ()Lscala/Option<Lcoursier/core/Version;>;

  public boolean fromIncluded();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #62                 // Field fromIncluded:Z
         4: ireturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionInterval;

  public boolean toIncluded();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #64                 // Field toIncluded:Z
         4: ireturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionInterval;

  public boolean isValid();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #67                 // Method from:()Lscala/Option;
         4: aload_0
         5: invokedynamic #88,  0             // InvokeDynamic #0:apply:(Lcoursier/core/VersionInterval;)Lscala/Function1;
        10: invokevirtual #94                 // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: astore_1
        14: aload_1
        15: invokedynamic #101,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        20: invokevirtual #105                // Method scala/Option.forall:(Lscala/Function1;)Z
        23: ifeq          64
        26: aload_0
        27: invokevirtual #67                 // Method from:()Lscala/Option;
        30: invokevirtual #108                // Method scala/Option.nonEmpty:()Z
        33: ifne          43
        36: aload_0
        37: invokevirtual #110                // Method fromIncluded:()Z
        40: ifne          64
        43: aload_0
        44: invokevirtual #112                // Method to:()Lscala/Option;
        47: invokevirtual #108                // Method scala/Option.nonEmpty:()Z
        50: ifne          60
        53: aload_0
        54: invokevirtual #114                // Method toIncluded:()Z
        57: ifne          64
        60: iconst_1
        61: goto          65
        64: iconst_0
        65: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 43
          locals = [ class scala/Option ]
        frame_type = 16 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 15: 0
        line 20: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      51     1 fromToOrder   Lscala/Option;
            0      66     0  this   Lcoursier/core/VersionInterval;

  public boolean contains(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: new           #120                // class scala/runtime/LazyBoolean
         3: dup
         4: invokespecial #124                // Method scala/runtime/LazyBoolean."<init>":()V
         7: astore_2
         8: aload_0
         9: invokevirtual #67                 // Method from:()Lscala/Option;
        12: aload_0
        13: aload_1
        14: invokedynamic #134,  0            // InvokeDynamic #2:apply:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Function1;
        19: invokevirtual #105                // Method scala/Option.forall:(Lscala/Function1;)Z
        22: istore_3
        23: iload_3
        24: ifeq          40
        27: aload_0
        28: aload_2
        29: aload_1
        30: invokespecial #138                // Method toCond$1:(Lscala/runtime/LazyBoolean;Lcoursier/core/Version;)Z
        33: ifeq          40
        36: iconst_1
        37: goto          41
        40: iconst_0
        41: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 40
          locals = [ class scala/runtime/LazyBoolean, int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 29: 0
        line 25: 8
        line 35: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      33     2 toCond$lzy   Lscala/runtime/LazyBoolean;
           23      18     3 fromCond   Z
            0      42     0  this   Lcoursier/core/VersionInterval;
            0      42     1 version   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      version                        final

  public scala.Option<coursier.core.VersionInterval> merge(coursier.core.VersionInterval);
    descriptor: (Lcoursier/core/VersionInterval;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=54, args_size=2
         0: new           #148                // class scala/Tuple2
         3: dup
         4: aload_0
         5: invokevirtual #67                 // Method from:()Lscala/Option;
         8: aload_1
         9: invokevirtual #67                 // Method from:()Lscala/Option;
        12: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        15: astore        8
        17: aload         8
        19: ifnull        214
        22: aload         8
        24: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
        27: checkcast     #90                 // class scala/Option
        30: astore        9
        32: aload         8
        34: invokevirtual #158                // Method scala/Tuple2._2:()Ljava/lang/Object;
        37: checkcast     #90                 // class scala/Option
        40: astore        10
        42: aload         9
        44: instanceof    #160                // class scala/Some
        47: ifeq          211
        50: aload         9
        52: checkcast     #160                // class scala/Some
        55: astore        11
        57: aload         11
        59: invokevirtual #163                // Method scala/Some.value:()Ljava/lang/Object;
        62: checkcast     #165                // class coursier/core/Version
        65: astore        12
        67: aload         10
        69: instanceof    #160                // class scala/Some
        72: ifeq          208
        75: aload         10
        77: checkcast     #160                // class scala/Some
        80: astore        13
        82: aload         13
        84: invokevirtual #163                // Method scala/Some.value:()Ljava/lang/Object;
        87: checkcast     #165                // class coursier/core/Version
        90: astore        14
        92: aload         12
        94: aload         14
        96: invokevirtual #169                // Method coursier/core/Version.compare:(Lcoursier/core/Version;)I
        99: istore        15
       101: iload         15
       103: iconst_0
       104: if_icmpge     133
       107: new           #148                // class scala/Tuple2
       110: dup
       111: new           #160                // class scala/Some
       114: dup
       115: aload         14
       117: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       120: aload_1
       121: invokevirtual #110                // Method fromIncluded:()Z
       124: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       127: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       130: goto          203
       133: iload         15
       135: iconst_0
       136: if_icmple     165
       139: new           #148                // class scala/Tuple2
       142: dup
       143: new           #160                // class scala/Some
       146: dup
       147: aload         12
       149: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       152: aload_0
       153: invokevirtual #110                // Method fromIncluded:()Z
       156: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       159: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       162: goto          203
       165: new           #148                // class scala/Tuple2
       168: dup
       169: new           #160                // class scala/Some
       172: dup
       173: aload         12
       175: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       178: aload_0
       179: invokevirtual #110                // Method fromIncluded:()Z
       182: ifeq          196
       185: aload_1
       186: invokevirtual #110                // Method fromIncluded:()Z
       189: ifeq          196
       192: iconst_1
       193: goto          197
       196: iconst_0
       197: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       200: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       203: astore        5
       205: goto          492
       208: goto          217
       211: goto          217
       214: goto          217
       217: aload         8
       219: ifnull        312
       222: aload         8
       224: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
       227: checkcast     #90                 // class scala/Option
       230: astore        16
       232: aload         8
       234: invokevirtual #158                // Method scala/Tuple2._2:()Ljava/lang/Object;
       237: checkcast     #90                 // class scala/Option
       240: astore        17
       242: aload         16
       244: instanceof    #160                // class scala/Some
       247: ifeq          309
       250: aload         16
       252: checkcast     #160                // class scala/Some
       255: astore        18
       257: aload         18
       259: invokevirtual #163                // Method scala/Some.value:()Ljava/lang/Object;
       262: checkcast     #165                // class coursier/core/Version
       265: astore        19
       267: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
       270: aload         17
       272: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       275: ifeq          306
       278: new           #148                // class scala/Tuple2
       281: dup
       282: new           #160                // class scala/Some
       285: dup
       286: aload         19
       288: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       291: aload_0
       292: invokevirtual #110                // Method fromIncluded:()Z
       295: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       298: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       301: astore        5
       303: goto          492
       306: goto          315
       309: goto          315
       312: goto          315
       315: aload         8
       317: ifnull        407
       320: aload         8
       322: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
       325: checkcast     #90                 // class scala/Option
       328: astore        20
       330: aload         8
       332: invokevirtual #158                // Method scala/Tuple2._2:()Ljava/lang/Object;
       335: checkcast     #90                 // class scala/Option
       338: astore        21
       340: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
       343: aload         20
       345: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       348: ifeq          404
       351: aload         21
       353: instanceof    #160                // class scala/Some
       356: ifeq          404
       359: aload         21
       361: checkcast     #160                // class scala/Some
       364: astore        22
       366: aload         22
       368: invokevirtual #163                // Method scala/Some.value:()Ljava/lang/Object;
       371: checkcast     #165                // class coursier/core/Version
       374: astore        23
       376: new           #148                // class scala/Tuple2
       379: dup
       380: new           #160                // class scala/Some
       383: dup
       384: aload         23
       386: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       389: aload_1
       390: invokevirtual #110                // Method fromIncluded:()Z
       393: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       396: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       399: astore        5
       401: goto          492
       404: goto          410
       407: goto          410
       410: aload         8
       412: ifnull        479
       415: aload         8
       417: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
       420: checkcast     #90                 // class scala/Option
       423: astore        24
       425: aload         8
       427: invokevirtual #158                // Method scala/Tuple2._2:()Ljava/lang/Object;
       430: checkcast     #90                 // class scala/Option
       433: astore        25
       435: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
       438: aload         24
       440: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       443: ifeq          476
       446: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
       449: aload         25
       451: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       454: ifeq          476
       457: new           #148                // class scala/Tuple2
       460: dup
       461: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
       464: iconst_0
       465: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       468: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       471: astore        5
       473: goto          492
       476: goto          482
       479: goto          482
       482: new           #189                // class scala/MatchError
       485: dup
       486: aload         8
       488: invokespecial #190                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       491: athrow
       492: aload         5
       494: astore        7
       496: aload         7
       498: ifnull        537
       501: aload         7
       503: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
       506: checkcast     #90                 // class scala/Option
       509: astore        26
       511: aload         7
       513: invokevirtual #193                // Method scala/Tuple2._2$mcZ$sp:()Z
       516: istore        27
       518: new           #148                // class scala/Tuple2
       521: dup
       522: aload         26
       524: iload         27
       526: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       529: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       532: astore        4
       534: goto          550
       537: goto          540
       540: new           #189                // class scala/MatchError
       543: dup
       544: aload         7
       546: invokespecial #190                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       549: athrow
       550: aload         4
       552: astore        6
       554: aload         6
       556: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
       559: checkcast     #90                 // class scala/Option
       562: astore        28
       564: aload         6
       566: invokevirtual #193                // Method scala/Tuple2._2$mcZ$sp:()Z
       569: istore        29
       571: new           #148                // class scala/Tuple2
       574: dup
       575: aload_0
       576: invokevirtual #112                // Method to:()Lscala/Option;
       579: aload_1
       580: invokevirtual #112                // Method to:()Lscala/Option;
       583: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       586: astore        32
       588: aload         32
       590: ifnull        784
       593: aload         32
       595: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
       598: checkcast     #90                 // class scala/Option
       601: astore        33
       603: aload         32
       605: invokevirtual #158                // Method scala/Tuple2._2:()Ljava/lang/Object;
       608: checkcast     #90                 // class scala/Option
       611: astore        34
       613: aload         33
       615: instanceof    #160                // class scala/Some
       618: ifeq          781
       621: aload         33
       623: checkcast     #160                // class scala/Some
       626: astore        35
       628: aload         35
       630: invokevirtual #163                // Method scala/Some.value:()Ljava/lang/Object;
       633: checkcast     #165                // class coursier/core/Version
       636: astore        36
       638: aload         34
       640: instanceof    #160                // class scala/Some
       643: ifeq          778
       646: aload         34
       648: checkcast     #160                // class scala/Some
       651: astore        37
       653: aload         37
       655: invokevirtual #163                // Method scala/Some.value:()Ljava/lang/Object;
       658: checkcast     #165                // class coursier/core/Version
       661: astore        38
       663: aload         36
       665: aload         38
       667: invokevirtual #169                // Method coursier/core/Version.compare:(Lcoursier/core/Version;)I
       670: istore        39
       672: iload         39
       674: iconst_0
       675: if_icmpge     704
       678: new           #148                // class scala/Tuple2
       681: dup
       682: new           #160                // class scala/Some
       685: dup
       686: aload         36
       688: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       691: aload_0
       692: invokevirtual #114                // Method toIncluded:()Z
       695: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       698: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       701: goto          774
       704: iload         39
       706: iconst_0
       707: if_icmple     736
       710: new           #148                // class scala/Tuple2
       713: dup
       714: new           #160                // class scala/Some
       717: dup
       718: aload         38
       720: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       723: aload_1
       724: invokevirtual #114                // Method toIncluded:()Z
       727: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       730: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       733: goto          774
       736: new           #148                // class scala/Tuple2
       739: dup
       740: new           #160                // class scala/Some
       743: dup
       744: aload         36
       746: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       749: aload_0
       750: invokevirtual #114                // Method toIncluded:()Z
       753: ifeq          767
       756: aload_1
       757: invokevirtual #114                // Method toIncluded:()Z
       760: ifeq          767
       763: iconst_1
       764: goto          768
       767: iconst_0
       768: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       771: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       774: astore_3
       775: goto          1059
       778: goto          787
       781: goto          787
       784: goto          787
       787: aload         32
       789: ifnull        881
       792: aload         32
       794: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
       797: checkcast     #90                 // class scala/Option
       800: astore        40
       802: aload         32
       804: invokevirtual #158                // Method scala/Tuple2._2:()Ljava/lang/Object;
       807: checkcast     #90                 // class scala/Option
       810: astore        41
       812: aload         40
       814: instanceof    #160                // class scala/Some
       817: ifeq          878
       820: aload         40
       822: checkcast     #160                // class scala/Some
       825: astore        42
       827: aload         42
       829: invokevirtual #163                // Method scala/Some.value:()Ljava/lang/Object;
       832: checkcast     #165                // class coursier/core/Version
       835: astore        43
       837: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
       840: aload         41
       842: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       845: ifeq          875
       848: new           #148                // class scala/Tuple2
       851: dup
       852: new           #160                // class scala/Some
       855: dup
       856: aload         43
       858: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       861: aload_0
       862: invokevirtual #114                // Method toIncluded:()Z
       865: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       868: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       871: astore_3
       872: goto          1059
       875: goto          884
       878: goto          884
       881: goto          884
       884: aload         32
       886: ifnull        975
       889: aload         32
       891: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
       894: checkcast     #90                 // class scala/Option
       897: astore        44
       899: aload         32
       901: invokevirtual #158                // Method scala/Tuple2._2:()Ljava/lang/Object;
       904: checkcast     #90                 // class scala/Option
       907: astore        45
       909: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
       912: aload         44
       914: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       917: ifeq          972
       920: aload         45
       922: instanceof    #160                // class scala/Some
       925: ifeq          972
       928: aload         45
       930: checkcast     #160                // class scala/Some
       933: astore        46
       935: aload         46
       937: invokevirtual #163                // Method scala/Some.value:()Ljava/lang/Object;
       940: checkcast     #165                // class coursier/core/Version
       943: astore        47
       945: new           #148                // class scala/Tuple2
       948: dup
       949: new           #160                // class scala/Some
       952: dup
       953: aload         47
       955: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       958: aload_1
       959: invokevirtual #114                // Method toIncluded:()Z
       962: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       965: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       968: astore_3
       969: goto          1059
       972: goto          978
       975: goto          978
       978: aload         32
       980: ifnull        1046
       983: aload         32
       985: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
       988: checkcast     #90                 // class scala/Option
       991: astore        48
       993: aload         32
       995: invokevirtual #158                // Method scala/Tuple2._2:()Ljava/lang/Object;
       998: checkcast     #90                 // class scala/Option
      1001: astore        49
      1003: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
      1006: aload         48
      1008: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      1011: ifeq          1043
      1014: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
      1017: aload         49
      1019: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      1022: ifeq          1043
      1025: new           #148                // class scala/Tuple2
      1028: dup
      1029: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
      1032: iconst_0
      1033: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      1036: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      1039: astore_3
      1040: goto          1059
      1043: goto          1049
      1046: goto          1049
      1049: new           #189                // class scala/MatchError
      1052: dup
      1053: aload         32
      1055: invokespecial #190                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      1058: athrow
      1059: aload_3
      1060: astore        31
      1062: aload         31
      1064: ifnull        1102
      1067: aload         31
      1069: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
      1072: checkcast     #90                 // class scala/Option
      1075: astore        50
      1077: aload         31
      1079: invokevirtual #193                // Method scala/Tuple2._2$mcZ$sp:()Z
      1082: istore        51
      1084: new           #148                // class scala/Tuple2
      1087: dup
      1088: aload         50
      1090: iload         51
      1092: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      1095: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      1098: astore_2
      1099: goto          1115
      1102: goto          1105
      1105: new           #189                // class scala/MatchError
      1108: dup
      1109: aload         31
      1111: invokespecial #190                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      1114: athrow
      1115: aload_2
      1116: astore        30
      1118: aload         30
      1120: invokevirtual #155                // Method scala/Tuple2._1:()Ljava/lang/Object;
      1123: checkcast     #90                 // class scala/Option
      1126: astore        52
      1128: aload         30
      1130: invokevirtual #193                // Method scala/Tuple2._2$mcZ$sp:()Z
      1133: istore        53
      1135: new           #160                // class scala/Some
      1138: dup
      1139: getstatic     #33                 // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
      1142: aload         28
      1144: aload         52
      1146: iload         29
      1148: iload         53
      1150: invokevirtual #35                 // Method coursier/core/VersionInterval$.apply:(Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
      1153: invokespecial #172                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      1156: invokedynamic #200,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      1161: invokevirtual #203                // Method scala/Some.filter:(Lscala/Function1;)Lscala/Option;
      1164: areturn
      StackMapTable: number_of_entries = 46
        frame_type = 255 /* full_frame */
          offset_delta = 133
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, top, top, top, class scala/Tuple2, class scala/Option, class scala/Option, class scala/Some, class coursier/core/Version, class scala/Some, class coursier/core/Version, int ]
          stack = []
        frame_type = 31 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, top, top, top, class scala/Tuple2, class scala/Option, class scala/Option, class scala/Some, class coursier/core/Version, class scala/Some, class coursier/core/Version, int ]
          stack = [ uninitialized 165, uninitialized 165, class scala/Some ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, top, top, top, class scala/Tuple2, class scala/Option, class scala/Option, class scala/Some, class coursier/core/Version, class scala/Some, class coursier/core/Version, int ]
          stack = [ uninitialized 165, uninitialized 165, class scala/Some, int ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
        frame_type = 248 /* chop */
          offset_delta = 4
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 88
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, top, top, top, class scala/Tuple2, top, top, top, top, top, top, top, class scala/Option, class scala/Option, class scala/Some, class coursier/core/Version ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 88
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, top, top, top, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 65
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, top, top, top, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, class scala/Tuple2, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, top, class scala/Tuple2, top, class scala/Tuple2, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, top, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 153
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2, class scala/Option, class scala/Option, class scala/Some, class coursier/core/Version, class scala/Some, class coursier/core/Version, int ]
          stack = []
        frame_type = 31 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2, class scala/Option, class scala/Option, class scala/Some, class coursier/core/Version, class scala/Some, class coursier/core/Version, int ]
          stack = [ uninitialized 736, uninitialized 736, class scala/Some ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2, class scala/Option, class scala/Option, class scala/Some, class coursier/core/Version, class scala/Some, class coursier/core/Version, int ]
          stack = [ uninitialized 736, uninitialized 736, class scala/Some, int ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 87
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2, top, top, top, top, top, top, top, class scala/Option, class scala/Option, class scala/Some, class coursier/core/Version ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 87
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, top, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, class scala/Tuple2, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionInterval, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int, class scala/Option, int, top, class scala/Tuple2, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, int ]
          stack = []
      LineNumberTable:
        line 40: 0
        line 41: 17
        line 42: 92
        line 43: 101
        line 44: 133
        line 45: 165
        line 41: 208
        line 47: 217
        line 48: 315
        line 49: 410
        line 40: 482
        line 39: 496
        line 40: 540
        line 39: 554
        line 53: 571
        line 54: 588
        line 55: 663
        line 56: 672
        line 57: 704
        line 58: 736
        line 54: 778
        line 60: 787
        line 61: 884
        line 62: 978
        line 53: 1049
        line 52: 1062
        line 53: 1105
        line 52: 1118
        line 65: 1135
        line 66: 1156
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          101     102    15   cmp   I
           92     116    14     b   Lcoursier/core/Version;
           67     144    12     a   Lcoursier/core/Version;
          267      42    19     a   Lcoursier/core/Version;
          376      28    23     b   Lcoursier/core/Version;
          511      26    26 newFrom   Lscala/Option;
          518      19    27 newFromIncluded   Z
          672     102    39   cmp   I
          663     115    38     b   Lcoursier/core/Version;
          638     143    36     a   Lcoursier/core/Version;
          837      41    43     a   Lcoursier/core/Version;
          945      27    47     b   Lcoursier/core/Version;
         1077      25    50 newTo   Lscala/Option;
         1084      18    51 newToIncluded   Z
          564     600    28 newFrom   Lscala/Option;
          571     593    29 newFromIncluded   Z
         1128      36    52 newTo   Lscala/Option;
         1135      29    53 newToIncluded   Z
            0    1165     0  this   Lcoursier/core/VersionInterval;
            0    1165     1 other   Lcoursier/core/VersionInterval;
    Signature: #145                         // (Lcoursier/core/VersionInterval;)Lscala/Option<Lcoursier/core/VersionInterval;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public coursier.core.VersionConstraint constraint();
    descriptor: ()Lcoursier/core/VersionConstraint;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=12, args_size=1
         0: aload_0
         1: astore_3
         2: getstatic     #33                 // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
         5: invokevirtual #39                 // Method coursier/core/VersionInterval$.zero:()Lcoursier/core/VersionInterval;
         8: aload_3
         9: astore        4
        11: dup
        12: ifnonnull     24
        15: pop
        16: aload         4
        18: ifnull        32
        21: goto          42
        24: aload         4
        26: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        29: ifeq          42
        32: getstatic     #218                // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
        35: invokevirtual #221                // Method coursier/core/VersionConstraint$.all:()Lcoursier/core/VersionConstraint;
        38: astore_1
        39: goto          206
        42: goto          45
        45: new           #223                // class scala/Tuple4
        48: dup
        49: aload_3
        50: invokevirtual #67                 // Method from:()Lscala/Option;
        53: aload_3
        54: invokevirtual #112                // Method to:()Lscala/Option;
        57: aload_3
        58: invokevirtual #110                // Method fromIncluded:()Z
        61: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        64: aload_3
        65: invokevirtual #114                // Method toIncluded:()Z
        68: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        71: invokespecial #226                // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        74: astore        5
        76: aload         5
        78: ifnull        187
        81: aload         5
        83: invokevirtual #227                // Method scala/Tuple4._1:()Ljava/lang/Object;
        86: checkcast     #90                 // class scala/Option
        89: astore        6
        91: aload         5
        93: invokevirtual #228                // Method scala/Tuple4._2:()Ljava/lang/Object;
        96: checkcast     #90                 // class scala/Option
        99: astore        7
       101: aload         5
       103: invokevirtual #231                // Method scala/Tuple4._3:()Ljava/lang/Object;
       106: invokestatic  #234                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       109: istore        8
       111: aload         5
       113: invokevirtual #237                // Method scala/Tuple4._4:()Ljava/lang/Object;
       116: invokestatic  #234                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       119: istore        9
       121: aload         6
       123: instanceof    #160                // class scala/Some
       126: ifeq          184
       129: aload         6
       131: checkcast     #160                // class scala/Some
       134: astore        10
       136: aload         10
       138: invokevirtual #163                // Method scala/Some.value:()Ljava/lang/Object;
       141: checkcast     #165                // class coursier/core/Version
       144: astore        11
       146: getstatic     #183                // Field scala/None$.MODULE$:Lscala/None$;
       149: aload         7
       151: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       154: ifeq          181
       157: iconst_1
       158: iload         8
       160: if_icmpne     181
       163: iconst_0
       164: iload         9
       166: if_icmpne     181
       169: getstatic     #218                // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
       172: aload         11
       174: invokevirtual #241                // Method coursier/core/VersionConstraint$.preferred:(Lcoursier/core/Version;)Lcoursier/core/VersionConstraint;
       177: astore_2
       178: goto          201
       181: goto          190
       184: goto          190
       187: goto          190
       190: getstatic     #218                // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
       193: aload_3
       194: invokevirtual #245                // Method coursier/core/VersionConstraint$.interval:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
       197: astore_2
       198: goto          201
       201: aload_2
       202: astore_1
       203: goto          206
       206: aload_1
       207: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ class coursier/core/VersionInterval, top, top, class coursier/core/VersionInterval, class coursier/core/VersionInterval ]
          stack = [ class coursier/core/VersionInterval ]
        frame_type = 7 /* same */
        frame_type = 9 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 135
          locals = [ class coursier/core/VersionInterval, top, top, class coursier/core/VersionInterval, class coursier/core/VersionInterval, class scala/Tuple4, class scala/Option, class scala/Option, int, int, class scala/Some, class coursier/core/Version ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, top, top, class coursier/core/VersionInterval, class coursier/core/VersionInterval, class scala/Tuple4 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class coursier/core/VersionInterval, top, class coursier/core/VersionConstraint, class coursier/core/VersionInterval, class coursier/core/VersionInterval, class scala/Tuple4 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/core/VersionInterval, class coursier/core/VersionConstraint, top, class coursier/core/VersionInterval, class coursier/core/VersionInterval ]
          stack = []
      LineNumberTable:
        line 70: 0
        line 71: 2
        line 73: 45
        line 74: 76
        line 75: 169
        line 74: 181
        line 77: 190
        line 73: 201
        line 70: 206
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          146      38    11 version   Lcoursier/core/Version;
            0     208     0  this   Lcoursier/core/VersionInterval;

  public java.lang.String repr();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=1, args_size=1
         0: new           #251                // class scala/collection/immutable/$colon$colon
         3: dup
         4: aload_0
         5: invokevirtual #110                // Method fromIncluded:()Z
         8: ifeq          16
        11: ldc           #253                // String [
        13: goto          18
        16: ldc           #255                // String (
        18: new           #251                // class scala/collection/immutable/$colon$colon
        21: dup
        22: getstatic     #262                // Field scala/Option$.MODULE$:Lscala/Option$;
        25: aload_0
        26: invokevirtual #67                 // Method from:()Lscala/Option;
        29: invokedynamic #269,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        34: invokevirtual #272                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        37: invokevirtual #276                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
        40: invokeinterface #281,  1          // InterfaceMethod scala/collection/Iterable.mkString:()Ljava/lang/String;
        45: new           #251                // class scala/collection/immutable/$colon$colon
        48: dup
        49: ldc_w         #283                // String ,
        52: new           #251                // class scala/collection/immutable/$colon$colon
        55: dup
        56: getstatic     #262                // Field scala/Option$.MODULE$:Lscala/Option$;
        59: aload_0
        60: invokevirtual #112                // Method to:()Lscala/Option;
        63: invokedynamic #288,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        68: invokevirtual #272                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        71: invokevirtual #276                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
        74: invokeinterface #281,  1          // InterfaceMethod scala/collection/Iterable.mkString:()Ljava/lang/String;
        79: new           #251                // class scala/collection/immutable/$colon$colon
        82: dup
        83: aload_0
        84: invokevirtual #114                // Method toIncluded:()Z
        87: ifeq          96
        90: ldc_w         #290                // String ]
        93: goto          99
        96: ldc_w         #292                // String )
        99: getstatic     #297                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       102: invokespecial #300                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       105: invokespecial #300                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       108: invokespecial #300                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       111: invokespecial #300                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       114: invokespecial #300                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       117: invokevirtual #301                // Method scala/collection/immutable/$colon$colon.mkString:()Ljava/lang/String;
       120: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class coursier/core/VersionInterval ]
          stack = [ uninitialized 0, uninitialized 0 ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class coursier/core/VersionInterval ]
          stack = [ uninitialized 0, uninitialized 0, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 77
          locals = [ class coursier/core/VersionInterval ]
          stack = [ uninitialized 0, uninitialized 0, class java/lang/String, uninitialized 18, uninitialized 18, class java/lang/String, uninitialized 45, uninitialized 45, class java/lang/String, uninitialized 52, uninitialized 52, class java/lang/String, uninitialized 79, uninitialized 79 ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval ]
          stack = [ uninitialized 0, uninitialized 0, class java/lang/String, uninitialized 18, uninitialized 18, class java/lang/String, uninitialized 45, uninitialized 45, class java/lang/String, uninitialized 52, uninitialized 52, class java/lang/String, uninitialized 79, uninitialized 79, class java/lang/String ]
      LineNumberTable:
        line 81: 0
        line 82: 4
        line 81: 18
        line 83: 22
        line 81: 45
        line 84: 49
        line 81: 52
        line 85: 56
        line 81: 79
        line 86: 83
        line 81: 99
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     121     0  this   Lcoursier/core/VersionInterval;

  public coursier.core.VersionInterval withFrom(scala.Option<coursier.core.Version>);
    descriptor: (Lscala/Option;)Lcoursier/core/VersionInterval;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #2                  // class coursier/core/VersionInterval
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #112                // Method to:()Lscala/Option;
         9: aload_0
        10: invokevirtual #110                // Method fromIncluded:()Z
        13: aload_0
        14: invokevirtual #114                // Method toIncluded:()Z
        17: invokespecial #307                // Method "<init>":(Lscala/Option;Lscala/Option;ZZ)V
        20: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/core/VersionInterval;
            0      21     1  from   Lscala/Option;
    Signature: #304                         // (Lscala/Option<Lcoursier/core/Version;>;)Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      from                           final

  public coursier.core.VersionInterval withTo(scala.Option<coursier.core.Version>);
    descriptor: (Lscala/Option;)Lcoursier/core/VersionInterval;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #2                  // class coursier/core/VersionInterval
         3: dup
         4: aload_0
         5: invokevirtual #67                 // Method from:()Lscala/Option;
         8: aload_1
         9: aload_0
        10: invokevirtual #110                // Method fromIncluded:()Z
        13: aload_0
        14: invokevirtual #114                // Method toIncluded:()Z
        17: invokespecial #307                // Method "<init>":(Lscala/Option;Lscala/Option;ZZ)V
        20: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/core/VersionInterval;
            0      21     1    to   Lscala/Option;
    Signature: #304                         // (Lscala/Option<Lcoursier/core/Version;>;)Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      to                             final

  public coursier.core.VersionInterval withFromIncluded(boolean);
    descriptor: (Z)Lcoursier/core/VersionInterval;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #2                  // class coursier/core/VersionInterval
         3: dup
         4: aload_0
         5: invokevirtual #67                 // Method from:()Lscala/Option;
         8: aload_0
         9: invokevirtual #112                // Method to:()Lscala/Option;
        12: iload_1
        13: aload_0
        14: invokevirtual #114                // Method toIncluded:()Z
        17: invokespecial #307                // Method "<init>":(Lscala/Option;Lscala/Option;ZZ)V
        20: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/core/VersionInterval;
            0      21     1 fromIncluded   Z
    MethodParameters:
      Name                           Flags
      fromIncluded                   final

  public coursier.core.VersionInterval withToIncluded(boolean);
    descriptor: (Z)Lcoursier/core/VersionInterval;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #2                  // class coursier/core/VersionInterval
         3: dup
         4: aload_0
         5: invokevirtual #67                 // Method from:()Lscala/Option;
         8: aload_0
         9: invokevirtual #112                // Method to:()Lscala/Option;
        12: aload_0
        13: invokevirtual #110                // Method fromIncluded:()Z
        16: iload_1
        17: invokespecial #307                // Method "<init>":(Lscala/Option;Lscala/Option;ZZ)V
        20: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/core/VersionInterval;
            0      21     1 toIncluded   Z
    MethodParameters:
      Name                           Flags
      toIncluded                     final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #314                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #316                // String VersionInterval(
         7: invokespecial #319                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #67                 // Method from:()Lscala/Option;
        16: invokestatic  #323                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #327                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #329                // String ,
        27: invokevirtual #327                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: aload_0
        33: invokevirtual #112                // Method to:()Lscala/Option;
        36: invokestatic  #323                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        39: invokevirtual #327                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: pop
        43: aload_1
        44: ldc_w         #329                // String ,
        47: invokevirtual #327                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #110                // Method fromIncluded:()Z
        56: invokestatic  #332                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
        59: invokevirtual #327                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: pop
        63: aload_1
        64: ldc_w         #329                // String ,
        67: invokevirtual #327                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: pop
        71: aload_1
        72: aload_0
        73: invokevirtual #114                // Method toIncluded:()Z
        76: invokestatic  #332                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
        79: invokevirtual #327                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        82: pop
        83: aload_1
        84: ldc_w         #292                // String )
        87: invokevirtual #327                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: pop
        91: aload_1
        92: invokevirtual #334                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        95: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      84     1     b   Ljava/lang/StringBuilder;
            0      96     0  this   Lcoursier/core/VersionInterval;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/core/VersionInterval
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/core/VersionInterval;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     111
         5: aload_0
         6: aload_1
         7: invokevirtual #340                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          115
        13: aload_1
        14: checkcast     #2                  // class coursier/core/VersionInterval
        17: astore_2
        18: iconst_1
        19: ifeq          107
        22: aload_0
        23: invokevirtual #67                 // Method from:()Lscala/Option;
        26: aload_2
        27: invokevirtual #67                 // Method from:()Lscala/Option;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          107
        43: aload_3
        44: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          107
        50: aload_0
        51: invokevirtual #112                // Method to:()Lscala/Option;
        54: aload_2
        55: invokevirtual #112                // Method to:()Lscala/Option;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          107
        73: aload         4
        75: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          107
        81: aload_0
        82: invokevirtual #110                // Method fromIncluded:()Z
        85: aload_2
        86: invokevirtual #110                // Method fromIncluded:()Z
        89: if_icmpne     107
        92: aload_0
        93: invokevirtual #114                // Method toIncluded:()Z
        96: aload_2
        97: invokevirtual #114                // Method toIncluded:()Z
       100: if_icmpne     107
       103: iconst_1
       104: goto          108
       107: iconst_0
       108: ifeq          115
       111: iconst_1
       112: goto          116
       115: iconst_0
       116: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/core/VersionInterval, class java/lang/Object, class coursier/core/VersionInterval, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/core/VersionInterval, class java/lang/Object, class coursier/core/VersionInterval, class scala/Option, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 25
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      90     2 other   Lcoursier/core/VersionInterval;
            0     117     0  this   Lcoursier/core/VersionInterval;
            0     117     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #344                // String VersionInterval
         5: invokestatic  #350                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #67                 // Method from:()Lscala/Option;
        18: invokestatic  #350                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: aload_0
        28: invokevirtual #112                // Method to:()Lscala/Option;
        31: invokestatic  #350                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        34: iadd
        35: istore_1
        36: bipush        37
        38: iload_1
        39: imul
        40: aload_0
        41: invokevirtual #110                // Method fromIncluded:()Z
        44: ifeq          53
        47: sipush        1231
        50: goto          56
        53: sipush        1237
        56: iadd
        57: istore_1
        58: bipush        37
        60: iload_1
        61: imul
        62: aload_0
        63: invokevirtual #114                // Method toIncluded:()Z
        66: ifeq          75
        69: sipush        1231
        72: goto          78
        75: sipush        1237
        78: iadd
        79: istore_1
        80: bipush        37
        82: iload_1
        83: imul
        84: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class coursier/core/VersionInterval, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, int ]
          stack = [ int, int ]
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      74     1  code   I
            0      85     0  this   Lcoursier/core/VersionInterval;

  private scala.Tuple4<scala.Option<coursier.core.Version>, scala.Option<coursier.core.Version>, java.lang.Object, java.lang.Object> tuple();
    descriptor: ()Lscala/Tuple4;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=1, args_size=1
         0: new           #223                // class scala/Tuple4
         3: dup
         4: aload_0
         5: invokevirtual #67                 // Method from:()Lscala/Option;
         8: aload_0
         9: invokevirtual #112                // Method to:()Lscala/Option;
        12: aload_0
        13: invokevirtual #110                // Method fromIncluded:()Z
        16: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        19: aload_0
        20: invokevirtual #114                // Method toIncluded:()Z
        23: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        26: invokespecial #226                // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        29: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lcoursier/core/VersionInterval;
    Signature: #354                         // ()Lscala/Tuple4<Lscala/Option<Lcoursier/core/Version;>;Lscala/Option<Lcoursier/core/Version;>;Ljava/lang/Object;Ljava/lang/Object;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #344                // String VersionInterval
         3: areturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/core/VersionInterval;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_4
         1: ireturn
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/VersionInterval;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 3
                       0: 32
                       1: 39
                       2: 46
                       3: 56
                 default: 66
            }
        32: aload_0
        33: invokevirtual #67                 // Method from:()Lscala/Option;
        36: goto          81
        39: aload_0
        40: invokevirtual #112                // Method to:()Lscala/Option;
        43: goto          81
        46: aload_0
        47: invokevirtual #110                // Method fromIncluded:()Z
        50: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        53: goto          81
        56: aload_0
        57: invokevirtual #114                // Method toIncluded:()Z
        60: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        63: goto          81
        66: new           #361                // class java/lang/IndexOutOfBoundsException
        69: dup
        70: iload_2
        71: invokestatic  #365                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        74: invokevirtual #366                // Method java/lang/Object.toString:()Ljava/lang/String;
        77: invokespecial #367                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        80: athrow
        81: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      82     0  this   Lcoursier/core/VersionInterval;
            0      82     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 3
                       0: 32
                       1: 38
                       2: 44
                       3: 50
                 default: 56
            }
        32: ldc_w         #370                // String from
        35: goto          71
        38: ldc_w         #371                // String to
        41: goto          71
        44: ldc_w         #372                // String fromIncluded
        47: goto          71
        50: ldc_w         #373                // String toIncluded
        53: goto          71
        56: new           #361                // class java/lang/IndexOutOfBoundsException
        59: dup
        60: iload_2
        61: invokestatic  #365                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        64: invokevirtual #366                // Method java/lang/Object.toString:()Ljava/lang/String;
        67: invokespecial #367                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        70: athrow
        71: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 5: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      72     0  this   Lcoursier/core/VersionInterval;
            0      72     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.Tuple2 $anonfun$isValid$2(coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/Version;Lcoursier/core/Version;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #169                // Method coursier/core/Version.compare:(Lcoursier/core/Version;)I
         5: istore_2
         6: new           #148                // class scala/Tuple2
         9: dup
        10: aload_1
        11: iload_2
        12: invokestatic  #365                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        15: invokespecial #151                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        18: areturn
      LineNumberTable:
        line 17: 0
        line 16: 6
        line 17: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      12     2   cmd   I
            0      19     0   f$1   Lcoursier/core/Version;
            0      19     1     t   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      f$1                            final
      t                              final

  public static final boolean $anonfun$isValid$3(coursier.core.VersionInterval, scala.Tuple2);
    descriptor: (Lcoursier/core/VersionInterval;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        47
         6: aload_3
         7: invokevirtual #385                // Method scala/Tuple2._2$mcI$sp:()I
        10: istore        4
        12: iload         4
        14: iconst_0
        15: if_icmplt     38
        18: iload         4
        20: iconst_0
        21: if_icmpne     42
        24: aload_0
        25: invokevirtual #110                // Method fromIncluded:()Z
        28: ifeq          42
        31: aload_0
        32: invokevirtual #114                // Method toIncluded:()Z
        35: ifeq          42
        38: iconst_1
        39: goto          43
        42: iconst_0
        43: istore_2
        44: goto          59
        47: goto          50
        50: new           #189                // class scala/MatchError
        53: dup
        54: aload_3
        55: invokespecial #190                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        58: athrow
        59: iload_2
        60: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 254 /* append */
          offset_delta = 38
          locals = [ top, class scala/Tuple2, int ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/core/VersionInterval, class scala/Tuple2, int, class scala/Tuple2, int ]
          stack = []
      LineNumberTable:
        line 16: 0
        line 17: 6
        line 18: 12
        line 16: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      35     4   cmd   I
            0      61     0 $this   Lcoursier/core/VersionInterval;
            0      61     1   x$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$1                            final

  public static final scala.Option $anonfun$isValid$1(coursier.core.VersionInterval, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #112                // Method to:()Lscala/Option;
         4: aload_1
         5: invokedynamic #395,  0            // InvokeDynamic #6:apply:(Lcoursier/core/Version;)Lscala/Function1;
        10: invokevirtual #272                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        13: aload_0
        14: invokedynamic #403,  0            // InvokeDynamic #7:apply:(Lcoursier/core/VersionInterval;)Lscala/Function1;
        19: invokevirtual #272                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        22: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0 $this   Lcoursier/core/VersionInterval;
            0      23     1     f   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public static final boolean $anonfun$isValid$4(boolean);
    descriptor: (Z)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0     x   Z
    MethodParameters:
      Name                           Flags
      x                              final

  public static final boolean $anonfun$contains$1(coursier.core.VersionInterval, coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=4, args_size=3
         0: aload_2
         1: aload_1
         2: invokevirtual #169                // Method coursier/core/Version.compare:(Lcoursier/core/Version;)I
         5: istore_3
         6: iload_3
         7: iconst_0
         8: if_icmplt     23
        11: iload_3
        12: iconst_0
        13: if_icmpne     27
        16: aload_0
        17: invokevirtual #110                // Method fromIncluded:()Z
        20: ifeq          27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ int ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 26: 0
        line 27: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      22     3   cmp   I
            0      29     0 $this   Lcoursier/core/VersionInterval;
            0      29     1 version$1   Lcoursier/core/Version;
            0      29     2 from0   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      version$1                      final
      from0                          final

  public static final boolean $anonfun$contains$2(coursier.core.VersionInterval, coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=4, args_size=3
         0: aload_1
         1: aload_2
         2: invokevirtual #169                // Method coursier/core/Version.compare:(Lcoursier/core/Version;)I
         5: istore_3
         6: iload_3
         7: iconst_0
         8: if_icmplt     23
        11: iload_3
        12: iconst_0
        13: if_icmpne     27
        16: aload_0
        17: invokevirtual #114                // Method toIncluded:()Z
        20: ifeq          27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ int ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 31: 0
        line 32: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      22     3   cmp   I
            0      29     0 $this   Lcoursier/core/VersionInterval;
            0      29     1 version$1   Lcoursier/core/Version;
            0      29     2   to0   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      version$1                      final
      to0                            final

  private final boolean toCond$lzycompute$1(scala.runtime.LazyBoolean, coursier.core.Version);
    descriptor: (Lscala/runtime/LazyBoolean;Lcoursier/core/Version;)Z
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=3
         0: aload_1
         1: dup
         2: astore_3
         3: monitorenter
         4: aload_1
         5: invokevirtual #417                // Method scala/runtime/LazyBoolean.initialized:()Z
         8: ifeq          18
        11: aload_1
        12: invokevirtual #419                // Method scala/runtime/LazyBoolean.value:()Z
        15: goto          36
        18: aload_1
        19: aload_0
        20: invokevirtual #112                // Method to:()Lscala/Option;
        23: aload_0
        24: aload_2
        25: invokedynamic #424,  0            // InvokeDynamic #8:apply:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Function1;
        30: invokevirtual #105                // Method scala/Option.forall:(Lscala/Function1;)Z
        33: invokevirtual #427                // Method scala/runtime/LazyBoolean.initialize:(Z)Z
        36: istore        4
        38: aload_3
        39: monitorexit
        40: iload         4
        42: goto          48
        45: aload_3
        46: monitorexit
        47: athrow
        48: ireturn
      Exception table:
         from    to  target type
             4    38    45   any
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ class scala/runtime/LazyBoolean ]
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/core/VersionInterval, class scala/runtime/LazyBoolean, class coursier/core/Version, class scala/runtime/LazyBoolean, int ]
          stack = [ int ]
      LineNumberTable:
        line 29: 0
        line 30: 19
        line 29: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lcoursier/core/VersionInterval;
            0      49     1 toCond$lzy$1   Lscala/runtime/LazyBoolean;
            0      49     2 version$1   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      toCond$lzy$1                   final
      version$1                      final

  private final boolean toCond$1(scala.runtime.LazyBoolean, coursier.core.Version);
    descriptor: (Lscala/runtime/LazyBoolean;Lcoursier/core/Version;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_1
         1: invokevirtual #417                // Method scala/runtime/LazyBoolean.initialized:()Z
         4: ifeq          14
         7: aload_1
         8: invokevirtual #419                // Method scala/runtime/LazyBoolean.value:()Z
        11: goto          20
        14: aload_0
        15: aload_1
        16: aload_2
        17: invokespecial #431                // Method toCond$lzycompute$1:(Lscala/runtime/LazyBoolean;Lcoursier/core/Version;)Z
        20: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/core/VersionInterval;
            0      21     1 toCond$lzy$1   Lscala/runtime/LazyBoolean;
            0      21     2 version$1   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      toCond$lzy$1                   final
      version$1                      final

  public static final boolean $anonfun$merge$1(coursier.core.VersionInterval);
    descriptor: (Lcoursier/core/VersionInterval;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #436                // Method isValid:()Z
         4: ireturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$4   Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final java.lang.String $anonfun$repr$1(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #439                // Method coursier/core/Version.repr:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$5   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final java.lang.String $anonfun$repr$2(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #439                // Method coursier/core/Version.repr:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$6   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public coursier.core.VersionInterval(scala.Option<coursier.core.Version>, scala.Option<coursier.core.Version>, boolean, boolean);
    descriptor: (Lscala/Option;Lscala/Option;ZZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: putfield      #57                 // Field from:Lscala/Option;
         5: aload_0
         6: aload_2
         7: putfield      #59                 // Field to:Lscala/Option;
        10: aload_0
        11: iload_3
        12: putfield      #62                 // Field fromIncluded:Z
        15: aload_0
        16: iload         4
        18: putfield      #64                 // Field toIncluded:Z
        21: aload_0
        22: invokespecial #442                // Method java/lang/Object."<init>":()V
        25: aload_0
        26: invokestatic  #446                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        29: return
      LineNumberTable:
        line 5: 0
        line 90: 21
        line 5: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lcoursier/core/VersionInterval;
            0      30     1  from   Lscala/Option;
            0      30     2    to   Lscala/Option;
            0      30     3 fromIncluded   Z
            0      30     4 toIncluded   Z
    Signature: #441                         // (Lscala/Option<Lcoursier/core/Version;>;Lscala/Option<Lcoursier/core/Version;>;ZZ)V
    MethodParameters:
      Name                           Flags
      from                           final
      to                             final
      fromIncluded                   final
      toIncluded                     final

  public static final java.lang.Object $anonfun$isValid$4$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #234                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         4: invokestatic  #448                // Method $anonfun$isValid$4:(Z)Z
         7: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public static final java.lang.Object $anonfun$contains$1$adapted(coursier.core.VersionInterval, coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #450                // Method $anonfun$contains$1:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Z
         6: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 25: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lcoursier/core/VersionInterval;
            0      10     1 version$1   Lcoursier/core/Version;
            0      10     2 from0   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final
      version$1                      final
      from0                          final

  public static final java.lang.Object $anonfun$merge$1$adapted(coursier.core.VersionInterval);
    descriptor: (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #452                // Method $anonfun$merge$1:(Lcoursier/core/VersionInterval;)Z
         4: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$4   Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final java.lang.Object $anonfun$isValid$3$adapted(coursier.core.VersionInterval, scala.Tuple2);
    descriptor: (Lcoursier/core/VersionInterval;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #454                // Method $anonfun$isValid$3:(Lcoursier/core/VersionInterval;Lscala/Tuple2;)Z
         5: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lcoursier/core/VersionInterval;
            0       9     1   x$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public static final java.lang.Object $anonfun$contains$2$adapted(coursier.core.VersionInterval, coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #456                // Method $anonfun$contains$2:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Z
         6: invokestatic  #178                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lcoursier/core/VersionInterval;
            0      10     1 version$1   Lcoursier/core/Version;
            0      10     2   to0   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final
      version$1                      final
      to0                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #468,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #17= #14 of #16;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "VersionInterval.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005ud\u0001B\u0012%\u0005%B\u0001b\u0010\u0001\u0003\u0006\u0004%\t\u0001\u0011\u0005\t\u0011\u0002\u0011\t\u0011)A\u0005\u0003\"A\u0011\n\u0001BC\u0002\u0013\u0005\u0001\t\u0003\u0005K\u0001\t\u0005\t\u0015!\u0003B\u0011!Y\u0005A!b\u0001\n\u0003a\u0005\u0002\u0003)\u0001\u0005\u0003\u0005\u000b\u0011B\'\t\u0011E\u0003!Q1A\u0005\u00021C\u0001B\u0015\u0001\u0003\u0002\u0003\u0006I!\u0014\u0005\u0006\'\u0002!\t\u0001\u0016\u0005\u00065\u0002!\t\u0001\u0014\u0005\u00067\u0002!\t\u0001\u0018\u0005\u0006?\u0002!\t\u0001\u0019\u0005\u0006I\u0002!\t!\u001a\u0005\u0006S\u0002!\tA\u001b\u0005\u0006g\u0002!\t\u0001\u001e\u0005\u0006m\u0002!\ta\u001e\u0005\u0006s\u0002!\tA\u001f\u0005\u0006y\u0002!\t! \u0005\u0007\u007f\u0002!\t%!\u0001\t\u000f\u0005E\u0001\u0001\"\u0011\u0002\u0014!9\u0011q\u0004\u0001\u0005B\u0005\u0005\u0002bBA\u0013\u0001\u0011\u0005\u0013q\u0005\u0005\b\u0003_\u0001A\u0011BA\u0019\u0011\u001d\tI\u0004\u0001C!\u0003wAq!!\u0010\u0001\t\u0003\ny\u0004C\u0004\u0002B\u0001!\t%a\u0011\t\u000f\u0005%\u0003\u0001\"\u0011\u0002L\u001d9\u0011q\n\u0013\t\u0002\u0005EcAB\u0012%\u0011\u0003\t\u0019\u0006\u0003\u0004T;\u0011\u0005\u0011q\f\u0005\n\u0003Cj\"\u0019!C\u0001\u0003GBq!!\u001a\u001eA\u0003%Q\u000bC\u0004\u0002hu!\t!!\u001b\t\u0013\u0005MT$!A\u0005\n\u0005U$a\u0004,feNLwN\\%oi\u0016\u0014h/\u00197\u000b\u0005\u00152\u0013\u0001B2pe\u0016T\u0011aJ\u0001\tG>,(o]5fe\u000e\u00011\u0003\u0002\u0001+aM\u0002\"a\u000b\u0018\u000e\u00031R\u0011!L\u0001\u0006g\u000e\fG.Y\u0005\u0003_1\u0012a!\u00118z%\u00164\u0007CA\u00162\u0013\t\u0011DFA\u0004Qe>$Wo\u0019;\u0011\u0005QbdBA\u001b;\u001d\t1\u0014(D\u00018\u0015\tA\u0004&\u0001\u0004=e>|GOP\u0005\u0002[%\u00111\bL\u0001\ba\u0006\u001c7.Y4f\u0013\tidH\u0001\u0007TKJL\u0017\r\\5{C\ndWM\u0003\u0002<Y\u0005!aM]8n+\u0005\t\u0005cA\u0016C\t&\u00111\t\f\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0005\u00153U\"\u0001\u0013\n\u0005\u001d##a\u0002,feNLwN\\\u0001\u0006MJ|W\u000eI\u0001\u0003i>\f1\u0001^8!\u000311\'o\\7J]\u000edW\u000fZ3e+\u0005i\u0005CA\u0016O\u0013\tyEFA\u0004C_>dW-\u00198\u0002\u001b\u0019\u0014x.\\%oG2,H-\u001a3!\u0003)!x.\u00138dYV$W\rZ\u0001\fi>Len\u00197vI\u0016$\u0007%\u0001\u0004=S:LGO\u0010\u000b\u0006+Z;\u0006,\u0017\t\u0003\u000b\u0002AQaP\u0005A\u0002\u0005CQ!S\u0005A\u0002\u0005CQaS\u0005A\u00025CQ!U\u0005A\u00025\u000bq![:WC2LG-\u0001\u0005d_:$\u0018-\u001b8t)\tiU\fC\u0003_\u0017\u0001\u0007A)A\u0004wKJ\u001c\u0018n\u001c8\u0002\u000b5,\'oZ3\u0015\u0005\u0005\u0014\u0007cA\u0016C+\")1\r\u0004a\u0001+\u0006)q\u000e\u001e5fe\u0006Q1m\u001c8tiJ\f\u0017N\u001c;\u0016\u0003\u0019\u0004\"!R4\n\u0005!$#!\u0005,feNLwN\\\"p]N$(/Y5oi\u0006!!/\u001a9s+\u0005Y\u0007C\u00017q\u001d\tig\u000e\u0005\u00027Y%\u0011q\u000eL\u0001\u0007!J,G-\u001a4\n\u0005E\u0014(AB*ue&twM\u0003\u0002pY\u0005Aq/\u001b;i\rJ|W\u000e\u0006\u0002Vk\")qh\u0004a\u0001\u0003\u00061q/\u001b;i)>$\"!\u0016=\t\u000b%\u0003\u0002\u0019A!\u0002!]LG\u000f\u001b$s_6Len\u00197vI\u0016$GCA+|\u0011\u0015Y\u0015\u00031\u0001N\u000399\u0018\u000e\u001e5U_&s7\r\\;eK\u0012$\"!\u0016@\t\u000bE\u0013\u0002\u0019A\'\u0002\u0011Q|7\u000b\u001e:j]\u001e$\"!a\u0001\u0011\t\u0005\u0015\u0011qB\u0007\u0003\u0003\u000fQA!!\u0003\u0002\f\u0005!A.\u00198h\u0015\t\ti!\u0001\u0003kCZ\f\u0017bA9\u0002\b\u0005A1-\u00198FcV\fG\u000eF\u0002N\u0003+Aq!a\u0006\u0015\u0001\u0004\tI\"A\u0002pE*\u00042aKA\u000e\u0013\r\ti\u0002\f\u0002\u0004\u0003:L\u0018AB3rk\u0006d7\u000fF\u0002N\u0003GAq!a\u0006\u0016\u0001\u0004\tI\"\u0001\u0005iCND7i\u001c3f)\t\tI\u0003E\u0002,\u0003WI1!!\f-\u0005\rIe\u000e^\u0001\u0006iV\u0004H.Z\u000b\u0003\u0003g\u0001raKA\u001b\u0003\u0006kU*C\u0002\u000281\u0012a\u0001V;qY\u0016$\u0014!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070\u0006\u0002\u0002\u0004\u0005a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011\u0011F\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\u0011\tI\"!\u0012\t\u000f\u0005\u001d#\u00041\u0001\u0002*\u0005\ta.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,G\u0003BA\u0002\u0003\u001bBq!a\u0012\u001c\u0001\u0004\tI#A\bWKJ\u001c\u0018n\u001c8J]R,\'O^1m!\t)Ud\u0005\u0003\u001eU\u0005U\u0003\u0003BA,\u0003;j!!!\u0017\u000b\t\u0005m\u00131B\u0001\u0003S>L1!PA-)\t\t\t&\u0001\u0003{KJ|W#A+\u0002\u000bi,\'o\u001c\u0011\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u0013U\u000bY\'!\u001c\u0002p\u0005E\u0004\"B \"\u0001\u0004\t\u0005\"B%\"\u0001\u0004\t\u0005\"B&\"\u0001\u0004i\u0005\"B)\"\u0001\u0004i\u0015\u0001D<sSR,\'+\u001a9mC\u000e,GCAA<!\u0011\t)!!\u001f\n\t\u0005m\u0014q\u0001\u0002\u0007\u001f\nTWm\u0019;"
    )
BootstrapMethods:
  0: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #74 REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$1:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Option;
      #76 (Lcoursier/core/Version;)Lscala/Option;
      #77 5
      #78 1
      #76 (Lcoursier/core/Version;)Lscala/Option;
  1: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #98 REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$4$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #78 1
  2: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #129 REF_invokeStatic coursier/core/VersionInterval.$anonfun$contains$1$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #131 (Lcoursier/core/Version;)Ljava/lang/Object;
      #77 5
      #78 1
      #131 (Lcoursier/core/Version;)Ljava/lang/Object;
  3: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #198 REF_invokeStatic coursier/core/VersionInterval.$anonfun$merge$1$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
      #199 (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
      #77 5
      #78 1
      #199 (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  4: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #267 REF_invokeStatic coursier/core/VersionInterval.$anonfun$repr$1:(Lcoursier/core/Version;)Ljava/lang/String;
      #268 (Lcoursier/core/Version;)Ljava/lang/String;
      #77 5
      #78 1
      #268 (Lcoursier/core/Version;)Ljava/lang/String;
  5: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #287 REF_invokeStatic coursier/core/VersionInterval.$anonfun$repr$2:(Lcoursier/core/Version;)Ljava/lang/String;
      #268 (Lcoursier/core/Version;)Ljava/lang/String;
      #77 5
      #78 1
      #268 (Lcoursier/core/Version;)Ljava/lang/String;
  6: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #390 REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$2:(Lcoursier/core/Version;Lcoursier/core/Version;)Lscala/Tuple2;
      #392 (Lcoursier/core/Version;)Lscala/Tuple2;
      #77 5
      #78 1
      #392 (Lcoursier/core/Version;)Lscala/Tuple2;
  7: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #400 REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$3$adapted:(Lcoursier/core/VersionInterval;Lscala/Tuple2;)Ljava/lang/Object;
      #402 (Lscala/Tuple2;)Ljava/lang/Object;
      #77 5
      #78 1
      #402 (Lscala/Tuple2;)Ljava/lang/Object;
  8: #85 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #69 (Ljava/lang/Object;)Ljava/lang/Object;
      #423 REF_invokeStatic coursier/core/VersionInterval.$anonfun$contains$2$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #131 (Lcoursier/core/Version;)Ljava/lang/Object;
      #77 5
      #78 1
      #131 (Lcoursier/core/Version;)Ljava/lang/Object;
  9: #465 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #129 REF_invokeStatic coursier/core/VersionInterval.$anonfun$contains$1$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #423 REF_invokeStatic coursier/core/VersionInterval.$anonfun$contains$2$adapted:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #74 REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$1:(Lcoursier/core/VersionInterval;Lcoursier/core/Version;)Lscala/Option;
      #390 REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$2:(Lcoursier/core/Version;Lcoursier/core/Version;)Lscala/Tuple2;
      #400 REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$3$adapted:(Lcoursier/core/VersionInterval;Lscala/Tuple2;)Ljava/lang/Object;
      #98 REF_invokeStatic coursier/core/VersionInterval.$anonfun$isValid$4$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #198 REF_invokeStatic coursier/core/VersionInterval.$anonfun$merge$1$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
      #267 REF_invokeStatic coursier/core/VersionInterval.$anonfun$repr$1:(Lcoursier/core/Version;)Ljava/lang/String;
      #287 REF_invokeStatic coursier/core/VersionInterval.$anonfun$repr$2:(Lcoursier/core/Version;)Ljava/lang/String;
  ScalaInlineInfo: length = 0xD1 (unknown attribute)
   01 01 00 29 01 97 01 98 01 00 7D 00 7E 01 01 9B
   01 98 01 01 A4 00 7E 01 00 46 00 47 01 01 76 01
   77 01 01 7B 01 7C 01 01 8C 01 8D 01 01 94 01 95
   01 00 5F 00 44 01 01 B0 01 B1 01 00 C2 00 C3 01
   01 05 01 06 01 01 1A 01 06 01 00 79 01 31 01 01
   50 00 B9 01 00 D4 00 D5 01 00 74 00 75 01 00 B8
   00 B9 01 00 12 00 36 01 00 16 00 3C 01 01 55 01
   56 01 00 41 00 3C 01 00 8F 00 90 01 01 64 01 56
   01 01 65 01 66 01 01 70 01 71 01 00 31 00 29 01
   00 28 00 29 01 01 63 00 F9 01 00 F8 00 F9 01 00
   15 00 36 01 00 87 00 88 01 01 9D 00 88 01 00 18
   00 3C 01 01 38 00 F9 01 01 60 01 61 01 01 2E 01
   2F 01 01 35 01 36 01 01 34 01 2F 01 01 37 01 36
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
