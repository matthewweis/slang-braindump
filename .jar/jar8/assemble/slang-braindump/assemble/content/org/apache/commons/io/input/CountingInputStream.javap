Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/CountingInputStream.class
  Last modified May 29, 2022; size 1712 bytes
  SHA-256 checksum 129ee85d9c302739b6eac4150b836421b614258873fe0e32da1b676027f6cfe5
  Compiled from "CountingInputStream.java"
public class org.apache.commons.io.input.CountingInputStream extends org.apache.commons.io.input.ProxyInputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #19                         // org/apache/commons/io/input/CountingInputStream
  super_class: #20                        // org/apache/commons/io/input/ProxyInputStream
  interfaces: 0, fields: 1, methods: 7, attributes: 1
Constant pool:
   #1 = Class              #52            // org/apache/commons/io/IOUtils
   #2 = Methodref          #20.#53        // org/apache/commons/io/input/ProxyInputStream."<init>":(Ljava/io/InputStream;)V
   #3 = Methodref          #20.#54        // org/apache/commons/io/input/ProxyInputStream.skip:(J)J
   #4 = Fieldref           #19.#55        // org/apache/commons/io/input/CountingInputStream.count:J
   #5 = Methodref          #19.#56        // org/apache/commons/io/input/CountingInputStream.getByteCount:()J
   #6 = Class              #57            // java/lang/Integer
   #7 = Long               2147483647l
   #9 = Class              #58            // java/lang/ArithmeticException
  #10 = Class              #59            // java/lang/StringBuilder
  #11 = Methodref          #10.#60        // java/lang/StringBuilder."<init>":()V
  #12 = String             #61            // The byte count
  #13 = Methodref          #10.#62        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #14 = Methodref          #10.#63        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
  #15 = String             #64            //  is too large to be converted to an int
  #16 = Methodref          #10.#65        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #17 = Methodref          #9.#66         // java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
  #18 = Methodref          #19.#67        // org/apache/commons/io/input/CountingInputStream.resetByteCount:()J
  #19 = Class              #68            // org/apache/commons/io/input/CountingInputStream
  #20 = Class              #69            // org/apache/commons/io/input/ProxyInputStream
  #21 = Utf8               count
  #22 = Utf8               J
  #23 = Utf8               <init>
  #24 = Utf8               (Ljava/io/InputStream;)V
  #25 = Utf8               Code
  #26 = Utf8               LineNumberTable
  #27 = Utf8               LocalVariableTable
  #28 = Utf8               this
  #29 = Utf8               Lorg/apache/commons/io/input/CountingInputStream;
  #30 = Utf8               in
  #31 = Utf8               Ljava/io/InputStream;
  #32 = Utf8               skip
  #33 = Utf8               (J)J
  #34 = Utf8               length
  #35 = Utf8               Exceptions
  #36 = Class              #70            // java/io/IOException
  #37 = Utf8               afterRead
  #38 = Utf8               (I)V
  #39 = Utf8               n
  #40 = Utf8               I
  #41 = Utf8               StackMapTable
  #42 = Utf8               getCount
  #43 = Utf8               ()I
  #44 = Utf8               result
  #45 = Utf8               resetCount
  #46 = Utf8               getByteCount
  #47 = Utf8               ()J
  #48 = Utf8               resetByteCount
  #49 = Utf8               tmp
  #50 = Utf8               SourceFile
  #51 = Utf8               CountingInputStream.java
  #52 = Utf8               org/apache/commons/io/IOUtils
  #53 = NameAndType        #23:#24        // "<init>":(Ljava/io/InputStream;)V
  #54 = NameAndType        #32:#33        // skip:(J)J
  #55 = NameAndType        #21:#22        // count:J
  #56 = NameAndType        #46:#47        // getByteCount:()J
  #57 = Utf8               java/lang/Integer
  #58 = Utf8               java/lang/ArithmeticException
  #59 = Utf8               java/lang/StringBuilder
  #60 = NameAndType        #23:#71        // "<init>":()V
  #61 = Utf8               The byte count
  #62 = NameAndType        #72:#73        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #63 = NameAndType        #72:#74        // append:(J)Ljava/lang/StringBuilder;
  #64 = Utf8                is too large to be converted to an int
  #65 = NameAndType        #75:#76        // toString:()Ljava/lang/String;
  #66 = NameAndType        #23:#77        // "<init>":(Ljava/lang/String;)V
  #67 = NameAndType        #48:#47        // resetByteCount:()J
  #68 = Utf8               org/apache/commons/io/input/CountingInputStream
  #69 = Utf8               org/apache/commons/io/input/ProxyInputStream
  #70 = Utf8               java/io/IOException
  #71 = Utf8               ()V
  #72 = Utf8               append
  #73 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #74 = Utf8               (J)Ljava/lang/StringBuilder;
  #75 = Utf8               toString
  #76 = Utf8               ()Ljava/lang/String;
  #77 = Utf8               (Ljava/lang/String;)V
{
  private long count;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  public org.apache.commons.io.input.CountingInputStream(java.io.InputStream);
    descriptor: (Ljava/io/InputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #2                  // Method org/apache/commons/io/input/ProxyInputStream."<init>":(Ljava/io/InputStream;)V
         5: return
      LineNumberTable:
        line 43: 0
        line 44: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/io/input/CountingInputStream;
            0       6     1    in   Ljava/io/InputStream;

  public synchronized long skip(long) throws java.io.IOException;
    descriptor: (J)J
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=5, locals=5, args_size=2
         0: aload_0
         1: lload_1
         2: invokespecial #3                  // Method org/apache/commons/io/input/ProxyInputStream.skip:(J)J
         5: lstore_3
         6: aload_0
         7: dup
         8: getfield      #4                  // Field count:J
        11: lload_3
        12: ladd
        13: putfield      #4                  // Field count:J
        16: lload_3
        17: lreturn
      LineNumberTable:
        line 59: 0
        line 60: 6
        line 61: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/apache/commons/io/input/CountingInputStream;
            0      18     1 length   J
            6      12     3  skip   J
    Exceptions:
      throws java.io.IOException

  protected synchronized void afterRead(int);
    descriptor: (I)V
    flags: (0x0024) ACC_PROTECTED, ACC_SYNCHRONIZED
    Code:
      stack=5, locals=2, args_size=2
         0: iload_1
         1: iconst_m1
         2: if_icmpeq     16
         5: aload_0
         6: dup
         7: getfield      #4                  // Field count:J
        10: iload_1
        11: i2l
        12: ladd
        13: putfield      #4                  // Field count:J
        16: return
      LineNumberTable:
        line 72: 0
        line 73: 5
        line 75: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/apache/commons/io/input/CountingInputStream;
            0      17     1     n   I
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */

  public int getCount();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #5                  // Method getByteCount:()J
         4: lstore_1
         5: lload_1
         6: ldc2_w        #7                  // long 2147483647l
         9: lcmp
        10: ifle          45
        13: new           #9                  // class java/lang/ArithmeticException
        16: dup
        17: new           #10                 // class java/lang/StringBuilder
        20: dup
        21: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
        24: ldc           #12                 // String The byte count
        26: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: lload_1
        30: invokevirtual #14                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        33: ldc           #15                 // String  is too large to be converted to an int
        35: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        41: invokespecial #17                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        44: athrow
        45: lload_1
        46: l2i
        47: ireturn
      LineNumberTable:
        line 89: 0
        line 90: 5
        line 91: 13
        line 93: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/apache/commons/io/input/CountingInputStream;
            5      43     1 result   J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ long ]

  public int resetCount();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #18                 // Method resetByteCount:()J
         4: lstore_1
         5: lload_1
         6: ldc2_w        #7                  // long 2147483647l
         9: lcmp
        10: ifle          45
        13: new           #9                  // class java/lang/ArithmeticException
        16: dup
        17: new           #10                 // class java/lang/StringBuilder
        20: dup
        21: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
        24: ldc           #12                 // String The byte count
        26: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: lload_1
        30: invokevirtual #14                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        33: ldc           #15                 // String  is too large to be converted to an int
        35: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        41: invokespecial #17                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        44: athrow
        45: lload_1
        46: l2i
        47: ireturn
      LineNumberTable:
        line 107: 0
        line 108: 5
        line 109: 13
        line 111: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/apache/commons/io/input/CountingInputStream;
            5      43     1 result   J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ long ]

  public synchronized long getByteCount();
    descriptor: ()J
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field count:J
         4: lreturn
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/input/CountingInputStream;

  public synchronized long resetByteCount();
    descriptor: ()J
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: getfield      #4                  // Field count:J
         4: lstore_1
         5: aload_0
         6: lconst_0
         7: putfield      #4                  // Field count:J
        10: lload_1
        11: lreturn
      LineNumberTable:
        line 139: 0
        line 140: 5
        line 141: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/apache/commons/io/input/CountingInputStream;
            5       7     1   tmp   J
}
SourceFile: "CountingInputStream.java"
