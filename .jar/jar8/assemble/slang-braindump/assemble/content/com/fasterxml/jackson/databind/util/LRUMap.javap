Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/util/LRUMap.class
  Last modified May 29, 2022; size 2825 bytes
  SHA-256 checksum 2ac4fe6017e3036939a3c2c8eab0abee2e341d834ab1e64f73adfb3a48169b9c
  Compiled from "LRUMap.java"
public class com.fasterxml.jackson.databind.util.LRUMap<K extends java.lang.Object, V extends java.lang.Object> extends java.lang.Object implements com.fasterxml.jackson.databind.util.LookupCache<K, V>, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #16                         // com/fasterxml/jackson/databind/util/LRUMap
  super_class: #18                        // java/lang/Object
  interfaces: 2, fields: 4, methods: 9, attributes: 2
Constant pool:
    #1 = Methodref          #18.#78       // java/lang/Object."<init>":()V
    #2 = Class              #79           // java/util/concurrent/ConcurrentHashMap
    #3 = Float              0.8f
    #4 = Methodref          #2.#80        // java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
    #5 = Fieldref           #16.#81       // com/fasterxml/jackson/databind/util/LRUMap._map:Ljava/util/concurrent/ConcurrentHashMap;
    #6 = Fieldref           #16.#82       // com/fasterxml/jackson/databind/util/LRUMap._maxEntries:I
    #7 = Methodref          #2.#83        // java/util/concurrent/ConcurrentHashMap.size:()I
    #8 = Methodref          #16.#84       // com/fasterxml/jackson/databind/util/LRUMap.clear:()V
    #9 = Methodref          #2.#85        // java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #10 = Methodref          #2.#86        // java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #11 = Methodref          #2.#87        // java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #12 = Methodref          #2.#84        // java/util/concurrent/ConcurrentHashMap.clear:()V
   #13 = Methodref          #88.#89       // java/io/ObjectInputStream.readInt:()I
   #14 = Fieldref           #16.#90       // com/fasterxml/jackson/databind/util/LRUMap._jdkSerializeMaxEntries:I
   #15 = Methodref          #91.#92       // java/io/ObjectOutputStream.writeInt:(I)V
   #16 = Class              #93           // com/fasterxml/jackson/databind/util/LRUMap
   #17 = Methodref          #16.#94       // com/fasterxml/jackson/databind/util/LRUMap."<init>":(II)V
   #18 = Class              #95           // java/lang/Object
   #19 = Class              #96           // com/fasterxml/jackson/databind/util/LookupCache
   #20 = Class              #97           // java/io/Serializable
   #21 = Utf8               serialVersionUID
   #22 = Utf8               J
   #23 = Utf8               ConstantValue
   #24 = Long               1l
   #26 = Utf8               _maxEntries
   #27 = Utf8               I
   #28 = Utf8               _map
   #29 = Utf8               Ljava/util/concurrent/ConcurrentHashMap;
   #30 = Utf8               Signature
   #31 = Utf8               Ljava/util/concurrent/ConcurrentHashMap<TK;TV;>;
   #32 = Utf8               _jdkSerializeMaxEntries
   #33 = Utf8               <init>
   #34 = Utf8               (II)V
   #35 = Utf8               Code
   #36 = Utf8               LineNumberTable
   #37 = Utf8               LocalVariableTable
   #38 = Utf8               this
   #39 = Utf8               Lcom/fasterxml/jackson/databind/util/LRUMap;
   #40 = Utf8               initialEntries
   #41 = Utf8               maxEntries
   #42 = Utf8               LocalVariableTypeTable
   #43 = Utf8               Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;
   #44 = Utf8               put
   #45 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #46 = Utf8               key
   #47 = Utf8               Ljava/lang/Object;
   #48 = Utf8               value
   #49 = Utf8               TK;
   #50 = Utf8               TV;
   #51 = Utf8               StackMapTable
   #52 = Class              #95           // java/lang/Object
   #53 = Class              #98           // java/lang/Throwable
   #54 = Utf8               (TK;TV;)TV;
   #55 = Utf8               putIfAbsent
   #56 = Utf8               get
   #57 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #58 = Utf8               (Ljava/lang/Object;)TV;
   #59 = Utf8               clear
   #60 = Utf8               ()V
   #61 = Utf8               size
   #62 = Utf8               ()I
   #63 = Utf8               readObject
   #64 = Utf8               (Ljava/io/ObjectInputStream;)V
   #65 = Utf8               in
   #66 = Utf8               Ljava/io/ObjectInputStream;
   #67 = Utf8               Exceptions
   #68 = Class              #99           // java/io/IOException
   #69 = Utf8               writeObject
   #70 = Utf8               (Ljava/io/ObjectOutputStream;)V
   #71 = Utf8               out
   #72 = Utf8               Ljava/io/ObjectOutputStream;
   #73 = Utf8               readResolve
   #74 = Utf8               ()Ljava/lang/Object;
   #75 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Lcom/fasterxml/jackson/databind/util/LookupCache<TK;TV;>;Ljava/io/Serializable;
   #76 = Utf8               SourceFile
   #77 = Utf8               LRUMap.java
   #78 = NameAndType        #33:#60       // "<init>":()V
   #79 = Utf8               java/util/concurrent/ConcurrentHashMap
   #80 = NameAndType        #33:#100      // "<init>":(IFI)V
   #81 = NameAndType        #28:#29       // _map:Ljava/util/concurrent/ConcurrentHashMap;
   #82 = NameAndType        #26:#27       // _maxEntries:I
   #83 = NameAndType        #61:#62       // size:()I
   #84 = NameAndType        #59:#60       // clear:()V
   #85 = NameAndType        #44:#45       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #86 = NameAndType        #55:#45       // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #87 = NameAndType        #56:#57       // get:(Ljava/lang/Object;)Ljava/lang/Object;
   #88 = Class              #101          // java/io/ObjectInputStream
   #89 = NameAndType        #102:#62      // readInt:()I
   #90 = NameAndType        #32:#27       // _jdkSerializeMaxEntries:I
   #91 = Class              #103          // java/io/ObjectOutputStream
   #92 = NameAndType        #104:#105     // writeInt:(I)V
   #93 = Utf8               com/fasterxml/jackson/databind/util/LRUMap
   #94 = NameAndType        #33:#34       // "<init>":(II)V
   #95 = Utf8               java/lang/Object
   #96 = Utf8               com/fasterxml/jackson/databind/util/LookupCache
   #97 = Utf8               java/io/Serializable
   #98 = Utf8               java/lang/Throwable
   #99 = Utf8               java/io/IOException
  #100 = Utf8               (IFI)V
  #101 = Utf8               java/io/ObjectInputStream
  #102 = Utf8               readInt
  #103 = Utf8               java/io/ObjectOutputStream
  #104 = Utf8               writeInt
  #105 = Utf8               (I)V
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 1l

  protected final transient int _maxEntries;
    descriptor: I
    flags: (0x0094) ACC_PROTECTED, ACC_FINAL, ACC_TRANSIENT

  protected final transient java.util.concurrent.ConcurrentHashMap<K, V> _map;
    descriptor: Ljava/util/concurrent/ConcurrentHashMap;
    flags: (0x0094) ACC_PROTECTED, ACC_FINAL, ACC_TRANSIENT
    Signature: #31                          // Ljava/util/concurrent/ConcurrentHashMap<TK;TV;>;

  protected transient int _jdkSerializeMaxEntries;
    descriptor: I
    flags: (0x0084) ACC_PROTECTED, ACC_TRANSIENT

  public com.fasterxml.jackson.databind.util.LRUMap(int, int);
    descriptor: (II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
         8: dup
         9: iload_1
        10: ldc           #3                  // float 0.8f
        12: iconst_4
        13: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
        16: putfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
        19: aload_0
        20: iload_2
        21: putfield      #6                  // Field _maxEntries:I
        24: return
      LineNumberTable:
        line 35: 0
        line 37: 4
        line 38: 19
        line 39: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap;
            0      25     1 initialEntries   I
            0      25     2 maxEntries   I
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;

  public V put(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_0
         1: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
         4: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.size:()I
         7: aload_0
         8: getfield      #6                  // Field _maxEntries:I
        11: if_icmplt     48
        14: aload_0
        15: dup
        16: astore_3
        17: monitorenter
        18: aload_0
        19: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
        22: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.size:()I
        25: aload_0
        26: getfield      #6                  // Field _maxEntries:I
        29: if_icmplt     36
        32: aload_0
        33: invokevirtual #8                  // Method clear:()V
        36: aload_3
        37: monitorexit
        38: goto          48
        41: astore        4
        43: aload_3
        44: monitorexit
        45: aload         4
        47: athrow
        48: aload_0
        49: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
        52: aload_1
        53: aload_2
        54: invokevirtual #9                  // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        57: areturn
      Exception table:
         from    to  target type
            18    38    41   any
            41    45    41   any
      LineNumberTable:
        line 43: 0
        line 45: 14
        line 46: 18
        line 47: 32
        line 49: 36
        line 51: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap;
            0      58     1   key   Ljava/lang/Object;
            0      58     2 value   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;
            0      58     1   key   TK;
            0      58     2 value   TV;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ class java/lang/Object ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 6
    Signature: #54                          // (TK;TV;)TV;

  public V putIfAbsent(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_0
         1: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
         4: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.size:()I
         7: aload_0
         8: getfield      #6                  // Field _maxEntries:I
        11: if_icmplt     48
        14: aload_0
        15: dup
        16: astore_3
        17: monitorenter
        18: aload_0
        19: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
        22: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.size:()I
        25: aload_0
        26: getfield      #6                  // Field _maxEntries:I
        29: if_icmplt     36
        32: aload_0
        33: invokevirtual #8                  // Method clear:()V
        36: aload_3
        37: monitorexit
        38: goto          48
        41: astore        4
        43: aload_3
        44: monitorexit
        45: aload         4
        47: athrow
        48: aload_0
        49: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
        52: aload_1
        53: aload_2
        54: invokevirtual #10                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        57: areturn
      Exception table:
         from    to  target type
            18    38    41   any
            41    45    41   any
      LineNumberTable:
        line 61: 0
        line 62: 14
        line 63: 18
        line 64: 32
        line 66: 36
        line 68: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap;
            0      58     1   key   Ljava/lang/Object;
            0      58     2 value   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;
            0      58     1   key   TK;
            0      58     2 value   TV;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ class java/lang/Object ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 6
    Signature: #54                          // (TK;TV;)TV;

  public V get(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
         4: aload_1
         5: invokevirtual #11                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
         8: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap;
            0       9     1   key   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;
    Signature: #58                          // (Ljava/lang/Object;)TV;

  public void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
         4: invokevirtual #12                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
         7: return
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field _map:Ljava/util/concurrent/ConcurrentHashMap;
         4: invokevirtual #7                  // Method java/util/concurrent/ConcurrentHashMap.size:()I
         7: ireturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException;
    descriptor: (Ljava/io/ObjectInputStream;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #13                 // Method java/io/ObjectInputStream.readInt:()I
         5: putfield      #14                 // Field _jdkSerializeMaxEntries:I
         8: return
      LineNumberTable:
        line 96: 0
        line 97: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap;
            0       9     1    in   Ljava/io/ObjectInputStream;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;
    Exceptions:
      throws java.io.IOException

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    descriptor: (Ljava/io/ObjectOutputStream;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: getfield      #14                 // Field _jdkSerializeMaxEntries:I
         5: invokevirtual #15                 // Method java/io/ObjectOutputStream.writeInt:(I)V
         8: return
      LineNumberTable:
        line 100: 0
        line 101: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap;
            0       9     1   out   Ljava/io/ObjectOutputStream;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;
    Exceptions:
      throws java.io.IOException

  protected java.lang.Object readResolve();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=1, args_size=1
         0: new           #16                 // class com/fasterxml/jackson/databind/util/LRUMap
         3: dup
         4: aload_0
         5: getfield      #14                 // Field _jdkSerializeMaxEntries:I
         8: aload_0
         9: getfield      #14                 // Field _jdkSerializeMaxEntries:I
        12: invokespecial #17                 // Method "<init>":(II)V
        15: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/fasterxml/jackson/databind/util/LRUMap<TK;TV;>;
}
Signature: #75                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Lcom/fasterxml/jackson/databind/util/LookupCache<TK;TV;>;Ljava/io/Serializable;
SourceFile: "LRUMap.java"
