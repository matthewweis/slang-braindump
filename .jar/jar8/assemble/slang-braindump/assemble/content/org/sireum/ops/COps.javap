Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/ops/COps.class
  Last modified May 29, 2022; size 12664 bytes
  SHA-256 checksum 10d9bcc93ece871fb1dd70426b3f669e203f7f308dd2b80044bae931968fc97b
  Compiled from "COps.scala"
public final class org.sireum.ops.COps implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/ops/COps
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 4, methods: 35, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/ops/COps
    #2 = Class              #1            // org/sireum/ops/COps
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/DatatypeSig
    #6 = Class              #5            // org/sireum/DatatypeSig
    #7 = Utf8               COps.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\u0005\u0015d\u0001B\r\u001b\u0005\u0005B\u0001\u0002\f\u0001\u0003\u0002\u0003\u0006I!\f\u0005\u0006a\u0001!\t!\r\u0005\u0007k\u0001\u0001\u000b\u0011B\u0017\t\u000bY\u0002A\u0011A\u001c\t\u000ba\u0002A\u0011A\u001c\t\u000be\u0002A\u0011\t\u001e\t\u000b\r\u0003A\u0011\t#\t\u0011\u001d\u0003\u0001R1A\u0005B!CQ\u0001\u0014\u0001\u0005B5CQA\u0016\u0001\u0005\u0002]Cq!\u0017\u0001\u0012\u0002\u0013\u0005!\f\u0003\u0005f\u0001!\u0015\r\u0011\"\u0011g\u0011\u00151\b\u0001\"\u0001x\u0011\u0015y\b\u0001\"\u00018\u0011\u0019\t\u0019\u0001\u0001C\u0001o!1\u0011q\u0001\u0001\u0005\u0002\u0011;q!a\u0005\u001b\u0011\u0003\t)B\u0002\u0004\u001a5!\u0005\u0011q\u0003\u0005\u0007aI!\t!!\u0007\t\u000f\u0005m!\u0003\"\u0001\u0002\u001e!9\u0011\u0011\u0006\n\u0005\u0002\u0005-\u0002bBA\u0019%\u0011\u0005\u00111\u0007\u0005\u0007-J!\t!!\u0016\t\u000f\u0005e#\u0003\"\u0001\u0002\\\t!1i\u00149t\u0015\tYB$A\u0002paNT!!\b\u0010\u0002\rML\'/Z;n\u0015\u0005y\u0012aA8sO\u000e\u00011c\u0001\u0001#QA\u00111EJ\u0007\u0002I)\tQ%A\u0003tG\u0006d\u0017-\u0003\u0002(I\t1\u0011I\\=SK\u001a\u0004\"!\u000b\u0016\u000e\u0003qI!a\u000b\u000f\u0003\u0017\u0011\u000bG/\u0019;za\u0016\u001c\u0016nZ\u0001\u0004?~\u001b\u0007CA\u0015/\u0013\tyCDA\u0001D\u0003\u0019a\u0014N\\5u}Q\u0011!\u0007\u000e\t\u0003g\u0001i\u0011A\u0007\u0005\u0006Y\t\u0001\r!L\u0001\u0003?\u000e\f\u0011aY\u000b\u0002[\u0005!q-\u001a;D\u0003!!xn\u0015;sS:<G#A\u001e\u0011\u0005q\nU\"A\u001f\u000b\u0005yz\u0014\u0001\u00027b]\u001eT\u0011\u0001Q\u0001\u0005U\u00064\u0018-\u0003\u0002C{\t11\u000b\u001e:j]\u001e\faa\u001d;sS:<W#A#\u0011\u0005%2\u0015B\u0001\"\u001d\u0003!A\u0017m\u001d5D_\u0012,W#A%\u0011\u0005\rR\u0015BA&%\u0005\rIe\u000e^\u0001\u0007KF,\u0018\r\\:\u0015\u00059\u000b\u0006CA\u0012P\u0013\t\u0001FEA\u0004C_>dW-\u00198\t\u000bIK\u0001\u0019A*\u0002\u0003=\u0004\"a\t+\n\u0005U##aA!os\u0006)\u0011\r\u001d9msR\u0011!\u0007\u0017\u0005\bm)\u0001\n\u00111\u0001.\u0003=\t\u0007\u000f\u001d7zI\u0011,g-Y;mi\u0012\nT#A.+\u00055b6&A/\u0011\u0005y\u001bW\"A0\u000b\u0005\u0001\f\u0017!C;oG\",7m[3e\u0015\t\u0011G%\u0001\u0006b]:|G/\u0019;j_:L!\u0001Z0\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-\u0001\u0005%G>tG/\u001a8u+\u00059\u0007c\u00015qg:\u0011\u0011N\u001c\b\u0003U6l\u0011a\u001b\u0006\u0003Y\u0002\na\u0001\u0010:p_Rt\u0014\"A\u0013\n\u0005=$\u0013a\u00029bG.\fw-Z\u0005\u0003cJ\u00141aU3r\u0015\tyG\u0005\u0005\u0003$in\u001a\u0016BA;%\u0005\u0019!V\u000f\u001d7fe\u0005aAo\\+oS\u000e|G-\u001a%fqV\t\u0001\u0010\u0005\u0004$s6jS&L\u0005\u0003u\u0012\u0012a\u0001V;qY\u0016$\u0004FA\u0007}!\tIS0\u0003\u0002\u007f9\t!\u0001/\u001e:f\u0003\u001d!x.\u00169qKJD#A\u0004?\u0002\u000fQ|Gj\\<fe\"\u0012q\u0002`\u0001\rKN\u001c\u0017\r]3TiJLgn\u001a\u0015\u0003!qD3\u0001AA\u0007!\rI\u0013qB\u0005\u0004\u0003#a\"\u0001\u00033bi\u0006$\u0018\u0010]3\u0002\t\r{\u0005o\u001d\t\u0003gI\u0019\"A\u0005\u0012\u0015\u0005\u0005U\u0011!B23Q\u0016DH\u0003BA\u0010\u0003K\u0001B!KA\u0011[%\u0019\u00111\u0005\u000f\u0003\r=\u0003H/[8o\u0011\u00151D\u00031\u0001.Q\t!B0A\u0003iKb\u00144\rF\u0002.\u0003[AQAN\u000bA\u00025B#!\u0006?\u0002\u001d\u0019\u0014x.\\+oS\u000e|G-\u001a%fqR!\u0011qDA\u001b\u0011\u001d\t9D\u0006a\u0001\u0003s\t1\u0001[3y!\u0015\tY$a\u0012.\u001d\u0011\ti$!\u0012\u000f\t\u0005}\u00121\t\b\u0004U\u0006\u0005\u0013\"A\u0010\n\u0005uq\u0012BA8\u001d\u0013\u0011\tI%a\u0013\u0003\u0007%\u001b&,\u0003\u0003\u0002N\u0005=#\u0001\u0004)bG.\fw-\u001a+sC&$(bAA)9\u0005IA%\u001b8uKJt\u0017\r\u001c\u0015\u0003-q$2AMA,\u0011\u00151t\u00031\u0001.\u0003\u001d)h.\u00199qYf$B!!\u0018\u0002dA!1%a\u0018.\u0013\r\t\t\u0007\n\u0002\u0005\'>lW\rC\u0003S1\u0001\u0007!\u0007
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               hashCode
   #17 = Utf8               I
   #18 = Utf8               $content
   #19 = Utf8               Lscala/collection/immutable/Seq;
   #20 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #21 = Utf8               _c
   #22 = Utf8               bitmap$0
   #23 = Utf8               B
   #24 = Utf8               unapply
   #25 = Utf8               (Lorg/sireum/ops/COps;)Lscala/Some;
   #26 = Utf8               (Lorg/sireum/ops/COps;)Lscala/Some<Lorg/sireum/C;>;
   #27 = Utf8               o
   #28 = Utf8               org/sireum/ops/COps$
   #29 = Class              #28           // org/sireum/ops/COps$
   #30 = Utf8               MODULE$
   #31 = Utf8               Lorg/sireum/ops/COps$;
   #32 = NameAndType        #30:#31       // MODULE$:Lorg/sireum/ops/COps$;
   #33 = Fieldref           #29.#32       // org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
   #34 = NameAndType        #24:#25       // unapply:(Lorg/sireum/ops/COps;)Lscala/Some;
   #35 = Methodref          #29.#34       // org/sireum/ops/COps$.unapply:(Lorg/sireum/ops/COps;)Lscala/Some;
   #36 = Utf8               Lorg/sireum/ops/COps;
   #37 = Utf8               fromUnicodeHex
   #38 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Option;
   #39 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/C;>;)Lorg/sireum/Option<Lorg/sireum/C;>;
   #40 = Utf8               hex
   #41 = NameAndType        #37:#38       // fromUnicodeHex:(Lorg/sireum/IS;)Lorg/sireum/Option;
   #42 = Methodref          #29.#41       // org/sireum/ops/COps$.fromUnicodeHex:(Lorg/sireum/IS;)Lorg/sireum/Option;
   #43 = Utf8               Lorg/sireum/IS;
   #44 = Utf8               hex2c
   #45 = Utf8               (I)I
   #46 = Utf8               c
   #47 = NameAndType        #44:#45       // hex2c:(I)I
   #48 = Methodref          #29.#47       // org/sireum/ops/COps$.hex2c:(I)I
   #49 = Utf8               c2hex
   #50 = Utf8               (I)Lorg/sireum/Option;
   #51 = Utf8               (I)Lorg/sireum/Option<Lorg/sireum/C;>;
   #52 = NameAndType        #49:#50       // c2hex:(I)Lorg/sireum/Option;
   #53 = Methodref          #29.#52       // org/sireum/ops/COps$.c2hex:(I)Lorg/sireum/Option;
   #54 = Utf8               hash
   #55 = Utf8               ()Lorg/sireum/Z;
   #56 = Utf8               hash$
   #57 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #58 = NameAndType        #56:#57       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #59 = InterfaceMethodref #6.#58        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #60 = Utf8               this
   #61 = Utf8               $cannotMixImmutableAndMutable
   #62 = Utf8               ()Lscala/runtime/Nothing$;
   #63 = Utf8               org/sireum/Immutable
   #64 = Class              #63           // org/sireum/Immutable
   #65 = Utf8               $cannotMixImmutableAndMutable$
   #66 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #67 = NameAndType        #65:#66       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #68 = InterfaceMethodref #64.#67       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #69 = Utf8               $hasEquals
   #70 = Utf8               ()Z
   #71 = Utf8               $hasEquals$
   #72 = Utf8               (Lorg/sireum/Immutable;)Z
   #73 = NameAndType        #71:#72       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #74 = InterfaceMethodref #64.#73       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #75 = Utf8               $hasString
   #76 = Utf8               $hasString$
   #77 = NameAndType        #76:#72       // $hasString$:(Lorg/sireum/Immutable;)Z
   #78 = InterfaceMethodref #64.#77       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #79 = Utf8               $clone
   #80 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #81 = Utf8               org/sireum/$internal/ImmutableMarker
   #82 = Class              #81           // org/sireum/$internal/ImmutableMarker
   #83 = Utf8               $clone$
   #84 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #85 = NameAndType        #83:#84       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #86 = InterfaceMethodref #82.#85       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #87 = Utf8               ()I
   #88 = NameAndType        #21:#17       // _c:I
   #89 = Fieldref           #2.#88        // org/sireum/ops/COps._c:I
   #90 = Utf8               getC
   #91 = Utf8               toString
   #92 = Utf8               ()Ljava/lang/String;
   #93 = NameAndType        #75:#70       // $hasString:()Z
   #94 = Methodref          #2.#93        // org/sireum/ops/COps.$hasString:()Z
   #95 = Utf8               string$
   #96 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #97 = NameAndType        #95:#96       // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #98 = InterfaceMethodref #6.#97        // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #99 = Utf8               java/lang/StringBuilder
  #100 = Class              #99           // java/lang/StringBuilder
  #101 = Utf8               <init>
  #102 = Utf8               ()V
  #103 = NameAndType        #101:#102     // "<init>":()V
  #104 = Methodref          #100.#103     // java/lang/StringBuilder."<init>":()V
  #105 = Utf8               COps
  #106 = String             #105          // COps
  #107 = Utf8               append
  #108 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #109 = NameAndType        #107:#108     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #110 = Methodref          #100.#109     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #111 = Utf8               (C)Ljava/lang/StringBuilder;
  #112 = NameAndType        #107:#111     // append:(C)Ljava/lang/StringBuilder;
  #113 = Methodref          #100.#112     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #114 = Utf8               org/sireum/String$
  #115 = Class              #114          // org/sireum/String$
  #116 = Utf8               Lorg/sireum/String$;
  #117 = NameAndType        #30:#116      // MODULE$:Lorg/sireum/String$;
  #118 = Fieldref           #115.#117     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #119 = Utf8               org/sireum/C
  #120 = Class              #119          // org/sireum/C
  #121 = NameAndType        #46:#87       // c:()I
  #122 = Methodref          #2.#121       // org/sireum/ops/COps.c:()I
  #123 = Utf8               (I)V
  #124 = NameAndType        #101:#123     // "<init>":(I)V
  #125 = Methodref          #120.#124     // org/sireum/C."<init>":(I)V
  #126 = Utf8               escape
  #127 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #128 = NameAndType        #126:#127     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #129 = Methodref          #115.#128     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #130 = NameAndType        #91:#92       // toString:()Ljava/lang/String;
  #131 = Methodref          #100.#130     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #132 = Utf8               sb
  #133 = Utf8               Ljava/lang/StringBuilder;
  #134 = Utf8               java/lang/String
  #135 = Class              #134          // java/lang/String
  #136 = Utf8               string
  #137 = Methodref          #2.#130       // org/sireum/ops/COps.toString:()Ljava/lang/String;
  #138 = Utf8               apply
  #139 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #140 = NameAndType        #138:#139     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #141 = Methodref          #115.#140     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #142 = Utf8               hashCode$lzycompute
  #143 = NameAndType        #22:#23       // bitmap$0:B
  #144 = Fieldref           #2.#143       // org/sireum/ops/COps.bitmap$0:B
  #145 = NameAndType        #69:#70       // $hasEquals:()Z
  #146 = Methodref          #2.#145       // org/sireum/ops/COps.$hasEquals:()Z
  #147 = NameAndType        #16:#87       // hashCode:()I
  #148 = Methodref          #4.#147       // java/lang/Object.hashCode:()I
  #149 = Utf8               scala/package$
  #150 = Class              #149          // scala/package$
  #151 = Utf8               Lscala/package$;
  #152 = NameAndType        #30:#151      // MODULE$:Lscala/package$;
  #153 = Fieldref           #150.#152     // scala/package$.MODULE$:Lscala/package$;
  #154 = Utf8               Seq
  #155 = Utf8               ()Lscala/collection/immutable/Seq$;
  #156 = NameAndType        #154:#155     // Seq:()Lscala/collection/immutable/Seq$;
  #157 = Methodref          #150.#156     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #158 = Utf8               scala/runtime/ScalaRunTime$
  #159 = Class              #158          // scala/runtime/ScalaRunTime$
  #160 = Utf8               Lscala/runtime/ScalaRunTime$;
  #161 = NameAndType        #30:#160      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #162 = Fieldref           #159.#161     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #163 = Utf8               getClass
  #164 = Utf8               ()Ljava/lang/Class;
  #165 = NameAndType        #163:#164     // getClass:()Ljava/lang/Class;
  #166 = Methodref          #2.#165       // org/sireum/ops/COps.getClass:()Ljava/lang/Class;
  #167 = Utf8               java/lang/Class
  #168 = Class              #167          // java/lang/Class
  #169 = Utf8               getName
  #170 = NameAndType        #169:#92      // getName:()Ljava/lang/String;
  #171 = Methodref          #168.#170     // java/lang/Class.getName:()Ljava/lang/String;
  #172 = Utf8               genericWrapArray
  #173 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #174 = NameAndType        #172:#173     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #175 = Methodref          #159.#174     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #176 = Utf8               scala/collection/immutable/Seq$
  #177 = Class              #176          // scala/collection/immutable/Seq$
  #178 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #179 = NameAndType        #138:#178     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #180 = Methodref          #177.#179     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #181 = Utf8               scala/collection/Seq
  #182 = Class              #181          // scala/collection/Seq
  #183 = InterfaceMethodref #182.#147     // scala/collection/Seq.hashCode:()I
  #184 = NameAndType        #16:#17       // hashCode:I
  #185 = Fieldref           #2.#184       // org/sireum/ops/COps.hashCode:I
  #186 = Utf8               java/lang/Throwable
  #187 = Class              #186          // java/lang/Throwable
  #188 = NameAndType        #142:#87      // hashCode$lzycompute:()I
  #189 = Methodref          #2.#188       // org/sireum/ops/COps.hashCode$lzycompute:()I
  #190 = Utf8               equals
  #191 = Utf8               (Ljava/lang/Object;)Z
  #192 = NameAndType        #190:#191     // equals:(Ljava/lang/Object;)Z
  #193 = Methodref          #4.#192       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #194 = Methodref          #2.#147       // org/sireum/ops/COps.hashCode:()I
  #195 = Utf8               Ljava/lang/Object;
  #196 = Utf8               (I)Lorg/sireum/ops/COps;
  #197 = Methodref          #2.#124       // org/sireum/ops/COps."<init>":(I)V
  #198 = Utf8               apply$default$1
  #199 = Utf8               $content$lzycompute
  #200 = Utf8               ()Lscala/collection/immutable/Seq;
  #201 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #202 = Utf8               scala/Tuple2
  #203 = Class              #202          // scala/Tuple2
  #204 = Utf8               type
  #205 = String             #204          // type
  #206 = Utf8               List
  #207 = Utf8               ()Lscala/collection/immutable/List$;
  #208 = NameAndType        #206:#207     // List:()Lscala/collection/immutable/List$;
  #209 = Methodref          #150.#208     // scala/package$.List:()Lscala/collection/immutable/List$;
  #210 = Utf8               org
  #211 = String             #210          // org
  #212 = Utf8               sireum
  #213 = String             #212          // sireum
  #214 = Utf8               ops
  #215 = String             #214          // ops
  #216 = Utf8               [Ljava/lang/Object;
  #217 = Class              #216          // "[Ljava/lang/Object;"
  #218 = Utf8               wrapRefArray
  #219 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #220 = NameAndType        #218:#219     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #221 = Methodref          #159.#220     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #222 = Utf8               scala/collection/immutable/List$
  #223 = Class              #222          // scala/collection/immutable/List$
  #224 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #225 = NameAndType        #138:#224     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #226 = Methodref          #223.#225     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #227 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #228 = NameAndType        #101:#227     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #229 = Methodref          #203.#228     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #230 = String             #46           // c
  #231 = Utf8               scala/collection/immutable/Seq
  #232 = Class              #231          // scala/collection/immutable/Seq
  #233 = NameAndType        #18:#19       // $content:Lscala/collection/immutable/Seq;
  #234 = Fieldref           #2.#233       // org/sireum/ops/COps.$content:Lscala/collection/immutable/Seq;
  #235 = NameAndType        #199:#200     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #236 = Methodref          #2.#235       // org/sireum/ops/COps.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #237 = Utf8               toUnicodeHex
  #238 = Utf8               ()Lscala/Tuple4;
  #239 = Utf8               ()Lscala/Tuple4<Lorg/sireum/C;Lorg/sireum/C;Lorg/sireum/C;Lorg/sireum/C;>;
  #240 = Utf8               scala/Tuple4
  #241 = Class              #240          // scala/Tuple4
  #242 = Utf8               org/sireum/C$
  #243 = Class              #242          // org/sireum/C$
  #244 = Utf8               Lorg/sireum/C$;
  #245 = NameAndType        #30:#244      // MODULE$:Lorg/sireum/C$;
  #246 = Fieldref           #243.#245     // org/sireum/C$.MODULE$:Lorg/sireum/C$;
  #247 = Utf8               (C)I
  #248 = NameAndType        #138:#247     // apply:(C)I
  #249 = Methodref          #243.#248     // org/sireum/C$.apply:(C)I
  #250 = Utf8               $greater$greater$greater$extension
  #251 = Utf8               (II)I
  #252 = NameAndType        #250:#251     // $greater$greater$greater$extension:(II)I
  #253 = Methodref          #243.#252     // org/sireum/C$.$greater$greater$greater$extension:(II)I
  #254 = Utf8               $amp$extension
  #255 = NameAndType        #254:#251     // $amp$extension:(II)I
  #256 = Methodref          #243.#255     // org/sireum/C$.$amp$extension:(II)I
  #257 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #258 = NameAndType        #101:#257     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #259 = Methodref          #241.#258     // scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #260 = Utf8               toUpper
  #261 = Utf8               org/sireum/B$
  #262 = Class              #261          // org/sireum/B$
  #263 = Utf8               Lorg/sireum/B$;
  #264 = NameAndType        #30:#263      // MODULE$:Lorg/sireum/B$;
  #265 = Fieldref           #262.#264     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #266 = Utf8               $less$eq$extension
  #267 = Utf8               (II)Z
  #268 = NameAndType        #266:#267     // $less$eq$extension:(II)Z
  #269 = Methodref          #243.#268     // org/sireum/C$.$less$eq$extension:(II)Z
  #270 = Utf8               ()Ljava/lang/Object;
  #271 = MethodType         #270          //  ()Ljava/lang/Object;
  #272 = Utf8               $anonfun$toUpper$1$adapted
  #273 = Utf8               (Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #274 = NameAndType        #272:#273     // $anonfun$toUpper$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #275 = Methodref          #2.#274       // org/sireum/ops/COps.$anonfun$toUpper$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #276 = MethodHandle       6:#275        // REF_invokeStatic org/sireum/ops/COps.$anonfun$toUpper$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #277 = Integer            1
  #278 = Utf8               java/lang/invoke/LambdaMetafactory
  #279 = Class              #278          // java/lang/invoke/LambdaMetafactory
  #280 = Utf8               altMetafactory
  #281 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #282 = NameAndType        #280:#281     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #283 = Methodref          #279.#282     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #284 = MethodHandle       6:#283        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #285 = Utf8               (Lorg/sireum/ops/COps;)Lscala/Function0;
  #286 = NameAndType        #138:#285     // apply:(Lorg/sireum/ops/COps;)Lscala/Function0;
  #287 = InvokeDynamic      #0:#286       // #0:apply:(Lorg/sireum/ops/COps;)Lscala/Function0;
  #288 = Utf8               $amp$amp$extension
  #289 = Utf8               (ZLscala/Function0;)Z
  #290 = NameAndType        #288:#289     // $amp$amp$extension:(ZLscala/Function0;)Z
  #291 = Methodref          #262.#290     // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
  #292 = Utf8               $4B
  #293 = Utf8               (Z)Z
  #294 = NameAndType        #292:#293     // $4B:(Z)Z
  #295 = Methodref          #262.#294     // org/sireum/B$.$4B:(Z)Z
  #296 = Utf8               $minus$extension
  #297 = NameAndType        #296:#251     // $minus$extension:(II)I
  #298 = Methodref          #243.#297     // org/sireum/C$.$minus$extension:(II)I
  #299 = Utf8               toLower
  #300 = Utf8               $anonfun$toLower$1$adapted
  #301 = NameAndType        #300:#273     // $anonfun$toLower$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #302 = Methodref          #2.#301       // org/sireum/ops/COps.$anonfun$toLower$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #303 = MethodHandle       6:#302        // REF_invokeStatic org/sireum/ops/COps.$anonfun$toLower$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #304 = InvokeDynamic      #1:#286       // #1:apply:(Lorg/sireum/ops/COps;)Lscala/Function0;
  #305 = Utf8               $plus$extension
  #306 = NameAndType        #305:#251     // $plus$extension:(II)I
  #307 = Methodref          #243.#306     // org/sireum/C$.$plus$extension:(II)I
  #308 = Utf8               escapeString
  #309 = Utf8               (I)Lscala/Some;
  #310 = NameAndType        #24:#309      // unapply:(I)Lscala/Some;
  #311 = Methodref          #243.#310     // org/sireum/C$.unapply:(I)Lscala/Some;
  #312 = Utf8               scala/Some
  #313 = Class              #312          // scala/Some
  #314 = Utf8               isEmpty
  #315 = NameAndType        #314:#70      // isEmpty:()Z
  #316 = Methodref          #313.#315     // scala/Some.isEmpty:()Z
  #317 = Utf8               get
  #318 = NameAndType        #317:#270     // get:()Ljava/lang/Object;
  #319 = Methodref          #313.#318     // scala/Some.get:()Ljava/lang/Object;
  #320 = Utf8               scala/runtime/BoxesRunTime
  #321 = Class              #320          // scala/runtime/BoxesRunTime
  #322 = Utf8               unboxToInt
  #323 = Utf8               (Ljava/lang/Object;)I
  #324 = NameAndType        #322:#323     // unboxToInt:(Ljava/lang/Object;)I
  #325 = Methodref          #321.#324     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #326 = Utf8               \\b
  #327 = String             #326          // \\b
  #328 = Utf8               \\t
  #329 = String             #328          // \\t
  #330 = Utf8               \\n
  #331 = String             #330          // \\n
  #332 = Utf8               \\f
  #333 = String             #332          // \\f
  #334 = Utf8               \\r
  #335 = String             #334          // \\r
  #336 = Utf8               \\\"
  #337 = String             #336          // \\\"
  #338 = Utf8               \\\'
  #339 = String             #338          // \\\'
  #340 = Utf8               \\\\
  #341 = String             #340          // \\\\
  #342 = Utf8               scala/runtime/BoxedUnit
  #343 = Class              #342          // scala/runtime/BoxedUnit
  #344 = Utf8               UNIT
  #345 = Utf8               Lscala/runtime/BoxedUnit;
  #346 = NameAndType        #344:#345     // UNIT:Lscala/runtime/BoxedUnit;
  #347 = Fieldref           #343.#346     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #348 = Utf8               $anonfun$escapeString$1$adapted
  #349 = NameAndType        #348:#273     // $anonfun$escapeString$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #350 = Methodref          #2.#349       // org/sireum/ops/COps.$anonfun$escapeString$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #351 = MethodHandle       6:#350        // REF_invokeStatic org/sireum/ops/COps.$anonfun$escapeString$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  #352 = InvokeDynamic      #2:#286       // #2:apply:(Lorg/sireum/ops/COps;)Lscala/Function0;
  #353 = Utf8               string$extension
  #354 = Utf8               (I)Ljava/lang/String;
  #355 = NameAndType        #353:#354     // string$extension:(I)Ljava/lang/String;
  #356 = Methodref          #243.#355     // org/sireum/C$.string$extension:(I)Ljava/lang/String;
  #357 = Integer            65535
  #358 = Utf8               $greater$extension
  #359 = NameAndType        #358:#267     // $greater$extension:(II)Z
  #360 = Methodref          #243.#359     // org/sireum/C$.$greater$extension:(II)Z
  #361 = Utf8
  #362 = String             #361          //
  #363 = Utf8               scala/runtime/ObjectRef
  #364 = Class              #363          // scala/runtime/ObjectRef
  #365 = Utf8               create
  #366 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #367 = NameAndType        #365:#366     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #368 = Methodref          #364.#367     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #369 = Utf8               org/sireum/conversions/C$
  #370 = Class              #369          // org/sireum/conversions/C$
  #371 = Utf8               Lorg/sireum/conversions/C$;
  #372 = NameAndType        #30:#371      // MODULE$:Lorg/sireum/conversions/C$;
  #373 = Fieldref           #370.#372     // org/sireum/conversions/C$.MODULE$:Lorg/sireum/conversions/C$;
  #374 = Utf8               toCodePoints
  #375 = Utf8               (I)Lorg/sireum/IS;
  #376 = NameAndType        #374:#375     // toCodePoints:(I)Lorg/sireum/IS;
  #377 = Methodref          #370.#376     // org/sireum/conversions/C$.toCodePoints:(I)Lorg/sireum/IS;
  #378 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #379 = MethodType         #378          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #380 = Utf8               $anonfun$escapeString$2$adapted
  #381 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #382 = NameAndType        #380:#381     // $anonfun$escapeString$2$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #383 = Methodref          #2.#382       // org/sireum/ops/COps.$anonfun$escapeString$2$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #384 = MethodHandle       6:#383        // REF_invokeStatic org/sireum/ops/COps.$anonfun$escapeString$2$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #385 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
  #386 = NameAndType        #138:#385     // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #387 = InvokeDynamic      #3:#386       // #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #388 = Utf8               org/sireum/IS
  #389 = Class              #388          // org/sireum/IS
  #390 = Utf8               foreach
  #391 = Utf8               (Lscala/Function1;)V
  #392 = NameAndType        #390:#391     // foreach:(Lscala/Function1;)V
  #393 = Methodref          #389.#392     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #394 = Utf8               elem
  #395 = NameAndType        #394:#195     // elem:Ljava/lang/Object;
  #396 = Fieldref           #364.#395     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #397 = NameAndType        #237:#238     // toUnicodeHex:()Lscala/Tuple4;
  #398 = Methodref          #2.#397       // org/sireum/ops/COps.toUnicodeHex:()Lscala/Tuple4;
  #399 = Utf8               org/sireum/helper$
  #400 = Class              #399          // org/sireum/helper$
  #401 = Utf8               Lorg/sireum/helper$;
  #402 = NameAndType        #30:#401      // MODULE$:Lorg/sireum/helper$;
  #403 = Fieldref           #400.#402     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #404 = Utf8               _1
  #405 = NameAndType        #404:#270     // _1:()Ljava/lang/Object;
  #406 = Methodref          #241.#405     // scala/Tuple4._1:()Ljava/lang/Object;
  #407 = Utf8               assign
  #408 = NameAndType        #407:#378     // assign:(Ljava/lang/Object;)Ljava/lang/Object;
  #409 = Methodref          #400.#408     // org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
  #410 = Utf8               _2
  #411 = NameAndType        #410:#270     // _2:()Ljava/lang/Object;
  #412 = Methodref          #241.#411     // scala/Tuple4._2:()Ljava/lang/Object;
  #413 = Utf8               _3
  #414 = NameAndType        #413:#270     // _3:()Ljava/lang/Object;
  #415 = Methodref          #241.#414     // scala/Tuple4._3:()Ljava/lang/Object;
  #416 = Utf8               _4
  #417 = NameAndType        #416:#270     // _4:()Ljava/lang/Object;
  #418 = Methodref          #241.#417     // scala/Tuple4._4:()Ljava/lang/Object;
  #419 = Integer            2
  #420 = Methodref          #100.#124     // java/lang/StringBuilder."<init>":(I)V
  #421 = Utf8               \\u
  #422 = String             #421          // \\u
  #423 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #424 = NameAndType        #107:#423     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #425 = Methodref          #100.#424     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #426 = Utf8               r
  #427 = Utf8               Lscala/runtime/ObjectRef;
  #428 = Utf8               x
  #429 = Utf8               Lscala/Tuple4;
  #430 = Utf8               q
  #431 = NameAndType        #79:#80       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #432 = Methodref          #2.#431       // org/sireum/ops/COps.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #433 = Utf8               $anonfun$toUpper$1
  #434 = Utf8               (Lorg/sireum/ops/COps;)Z
  #435 = Utf8               $this
  #436 = Utf8               $anonfun$toLower$1
  #437 = Utf8               $anonfun$escapeString$1
  #438 = Utf8               $anonfun$escapeString$2
  #439 = Utf8               (Lscala/runtime/ObjectRef;I)V
  #440 = Utf8               r$1
  #441 = Utf8               cpc
  #442 = Integer            0
  #443 = Utf8               org/sireum/String
  #444 = Class              #443          // org/sireum/String
  #445 = Utf8               (Ljava/lang/String;)V
  #446 = NameAndType        #101:#445     // "<init>":(Ljava/lang/String;)V
  #447 = Methodref          #444.#446     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #448 = NameAndType        #138:#196     // apply:(I)Lorg/sireum/ops/COps;
  #449 = Methodref          #29.#448      // org/sireum/ops/COps$.apply:(I)Lorg/sireum/ops/COps;
  #450 = NameAndType        #308:#92      // escapeString:()Ljava/lang/String;
  #451 = Methodref          #2.#450       // org/sireum/ops/COps.escapeString:()Ljava/lang/String;
  #452 = Utf8               __c
  #453 = Methodref          #4.#103       // java/lang/Object."<init>":()V
  #454 = Utf8               $init$
  #455 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #456 = NameAndType        #454:#455     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #457 = InterfaceMethodref #82.#456      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #458 = Utf8               (Lorg/sireum/Immutable;)V
  #459 = NameAndType        #454:#458     // $init$:(Lorg/sireum/Immutable;)V
  #460 = InterfaceMethodref #64.#459      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #461 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #462 = NameAndType        #454:#461     // $init$:(Lorg/sireum/DatatypeSig;)V
  #463 = InterfaceMethodref #6.#462       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #464 = Utf8               org/sireum/B
  #465 = Class              #464          // org/sireum/B
  #466 = NameAndType        #433:#434     // $anonfun$toUpper$1:(Lorg/sireum/ops/COps;)Z
  #467 = Methodref          #2.#466       // org/sireum/ops/COps.$anonfun$toUpper$1:(Lorg/sireum/ops/COps;)Z
  #468 = Utf8               (Z)V
  #469 = NameAndType        #101:#468     // "<init>":(Z)V
  #470 = Methodref          #465.#469     // org/sireum/B."<init>":(Z)V
  #471 = NameAndType        #436:#434     // $anonfun$toLower$1:(Lorg/sireum/ops/COps;)Z
  #472 = Methodref          #2.#471       // org/sireum/ops/COps.$anonfun$toLower$1:(Lorg/sireum/ops/COps;)Z
  #473 = NameAndType        #437:#434     // $anonfun$escapeString$1:(Lorg/sireum/ops/COps;)Z
  #474 = Methodref          #2.#473       // org/sireum/ops/COps.$anonfun$escapeString$1:(Lorg/sireum/ops/COps;)Z
  #475 = Utf8               value
  #476 = NameAndType        #475:#87      // value:()I
  #477 = Methodref          #120.#476     // org/sireum/C.value:()I
  #478 = NameAndType        #438:#439     // $anonfun$escapeString$2:(Lscala/runtime/ObjectRef;I)V
  #479 = Methodref          #2.#478       // org/sireum/ops/COps.$anonfun$escapeString$2:(Lscala/runtime/ObjectRef;I)V
  #480 = Utf8               $deserializeLambda$
  #481 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #482 = Utf8               scala/runtime/LambdaDeserialize
  #483 = Class              #482          // scala/runtime/LambdaDeserialize
  #484 = Utf8               bootstrap
  #485 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #486 = NameAndType        #484:#485     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #487 = Methodref          #483.#486     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #488 = MethodHandle       6:#487        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #489 = Utf8               lambdaDeserialize
  #490 = NameAndType        #489:#481     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #491 = InvokeDynamic      #4:#490       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #492 = Utf8               Signature
  #493 = Utf8               Code
  #494 = Utf8               LocalVariableTable
  #495 = Utf8               MethodParameters
  #496 = Utf8               LineNumberTable
  #497 = Utf8               StackMapTable
  #498 = Utf8               InnerClasses
  #499 = Utf8               SourceFile
  #500 = Utf8               RuntimeVisibleAnnotations
  #501 = Utf8               BootstrapMethods
  #502 = Utf8               ScalaInlineInfo
  #503 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #20                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final int _c;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static scala.Some<org.sireum.C> unapply(org.sireum.ops.COps);
    descriptor: (Lorg/sireum/ops/COps;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #33                 // Field org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
         3: aload_0
         4: invokevirtual #35                 // Method org/sireum/ops/COps$.unapply:(Lorg/sireum/ops/COps;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/ops/COps;
    Signature: #26                          // (Lorg/sireum/ops/COps;)Lscala/Some<Lorg/sireum/C;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static org.sireum.Option<org.sireum.C> fromUnicodeHex(org.sireum.IS<org.sireum.Z, org.sireum.C>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #33                 // Field org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
         3: aload_0
         4: invokevirtual #42                 // Method org/sireum/ops/COps$.fromUnicodeHex:(Lorg/sireum/IS;)Lorg/sireum/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   hex   Lorg/sireum/IS;
    Signature: #39                          // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/C;>;)Lorg/sireum/Option<Lorg/sireum/C;>;
    MethodParameters:
      Name                           Flags
      hex                            final

  public static int hex2c(int);
    descriptor: (I)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #33                 // Field org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
         3: iload_0
         4: invokevirtual #48                 // Method org/sireum/ops/COps$.hex2c:(I)I
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   I
    MethodParameters:
      Name                           Flags
      c                              final

  public static org.sireum.Option<org.sireum.C> c2hex(int);
    descriptor: (I)Lorg/sireum/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #33                 // Field org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
         3: iload_0
         4: invokevirtual #53                 // Method org/sireum/ops/COps$.c2hex:(I)Lorg/sireum/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   I
    Signature: #51                          // (I)Lorg/sireum/Option<Lorg/sireum/C;>;
    MethodParameters:
      Name                           Flags
      c                              final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #59                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/COps;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/COps;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/COps;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #78                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/COps;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #86                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/COps;

  public int c();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #89                 // Field _c:I
         4: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/COps;

  public int getC();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #89                 // Field _c:I
         4: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/COps;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #94                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #98                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          69
        14: new           #100                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #106                // String COps
        25: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #113                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #120                // class org/sireum/C
        43: dup
        44: aload_0
        45: invokevirtual #122                // Method c:()I
        48: invokespecial #125                // Method org/sireum/C."<init>":(I)V
        51: invokevirtual #129                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: bipush        41
        61: invokevirtual #113                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        64: pop
        65: aload_1
        66: invokevirtual #131                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        69: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 118 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      47     1    sb   Ljava/lang/StringBuilder;
            0      70     0  this   Lorg/sireum/ops/COps;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #94                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #98                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #137                // Method toString:()Ljava/lang/String;
        21: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/ops/COps;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #144                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     95
        15: aload_0
        16: aload_0
        17: invokevirtual #146                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #148                // Method java/lang/Object.hashCode:()I
        27: goto          81
        30: getstatic     #153                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #157                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #162                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_2
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #166                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #171                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: new           #120                // class org/sireum/C
        58: dup
        59: aload_0
        60: invokevirtual #122                // Method c:()I
        63: invokespecial #125                // Method org/sireum/C."<init>":(I)V
        66: aastore
        67: invokevirtual #175                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        70: invokevirtual #180                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        73: checkcast     #182                // class scala/collection/Seq
        76: invokeinterface #183,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        81: putfield      #185                // Field hashCode:I
        84: aload_0
        85: aload_0
        86: getfield      #144                // Field bitmap$0:B
        89: iconst_1
        90: ior
        91: i2b
        92: putfield      #144                // Field bitmap$0:B
        95: aload_1
        96: monitorexit
        97: goto          103
       100: aload_1
       101: monitorexit
       102: athrow
       103: aload_0
       104: getfield      #185                // Field hashCode:I
       107: ireturn
      Exception table:
         from    to  target type
             4    95   100   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/ops/COps, class org/sireum/ops/COps ]
          stack = [ class org/sireum/ops/COps ]
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class org/sireum/ops/COps, class org/sireum/ops/COps ]
          stack = [ class org/sireum/ops/COps, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     108     0  this   Lorg/sireum/ops/COps;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #144                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #189                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #185                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/ops/COps;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: invokevirtual #146                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #193                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          85
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          85
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/ops/COps
        30: ifeq          76
        33: aload_3
        34: checkcast     #2                  // class org/sireum/ops/COps
        37: astore        4
        39: aload_0
        40: invokevirtual #194                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #194                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          72
        55: aload_0
        56: invokevirtual #122                // Method c:()I
        59: aload         4
        61: invokevirtual #122                // Method c:()I
        64: if_icmpne     71
        67: iconst_1
        68: goto          72
        71: iconst_0
        72: istore_2
        73: goto          84
        76: goto          79
        79: iconst_0
        80: istore_2
        81: goto          84
        84: iload_2
        85: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/ops/COps ]
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/ops/COps, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ops/COps, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      86     0  this   Lorg/sireum/ops/COps;
            0      86     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.ops.COps apply(int);
    descriptor: (I)Lorg/sireum/ops/COps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/sireum/ops/COps
         3: dup
         4: iload_1
         5: invokespecial #197                // Method "<init>":(I)V
         8: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/ops/COps;
            0       9     1     c   I
    MethodParameters:
      Name                           Flags
      c                              final

  public int apply$default$1();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #122                // Method c:()I
         4: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/COps;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #144                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     132
        15: aload_0
        16: getstatic     #153                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #157                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #162                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_2
        26: anewarray     #203                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #203                // class scala/Tuple2
        34: dup
        35: ldc           #205                // String type
        37: getstatic     #153                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #209                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #162                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_4
        47: anewarray     #135                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #211                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #213                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #215                // String ops
        64: aastore
        65: dup
        66: iconst_3
        67: ldc           #106                // String COps
        69: aastore
        70: checkcast     #217                // class "[Ljava/lang/Object;"
        73: invokevirtual #221                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        76: invokevirtual #226                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        79: invokespecial #229                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        82: aastore
        83: dup
        84: iconst_1
        85: new           #203                // class scala/Tuple2
        88: dup
        89: ldc           #230                // String c
        91: new           #120                // class org/sireum/C
        94: dup
        95: aload_0
        96: invokevirtual #122                // Method c:()I
        99: invokespecial #125                // Method org/sireum/C."<init>":(I)V
       102: invokespecial #229                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       105: aastore
       106: checkcast     #217                // class "[Ljava/lang/Object;"
       109: invokevirtual #221                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       112: invokevirtual #180                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       115: checkcast     #232                // class scala/collection/immutable/Seq
       118: putfield      #234                // Field $content:Lscala/collection/immutable/Seq;
       121: aload_0
       122: aload_0
       123: getfield      #144                // Field bitmap$0:B
       126: iconst_2
       127: ior
       128: i2b
       129: putfield      #144                // Field bitmap$0:B
       132: aload_1
       133: monitorexit
       134: goto          140
       137: aload_1
       138: monitorexit
       139: athrow
       140: aload_0
       141: getfield      #234                // Field $content:Lscala/collection/immutable/Seq;
       144: areturn
      Exception table:
         from    to  target type
             4   132   137   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 132
          locals = [ class org/sireum/ops/COps ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     145     0  this   Lorg/sireum/ops/COps;
    Signature: #201                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #144                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #236                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #234                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/ops/COps;
    Signature: #201                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.Tuple4<org.sireum.C, org.sireum.C, org.sireum.C, org.sireum.C> toUnicodeHex();
    descriptor: ()Lscala/Tuple4;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=1, args_size=1
         0: new           #241                // class scala/Tuple4
         3: dup
         4: new           #120                // class org/sireum/C
         7: dup
         8: getstatic     #33                 // Field org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
        11: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        14: aload_0
        15: invokevirtual #122                // Method c:()I
        18: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        21: bipush        12
        23: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        26: invokevirtual #253                // Method org/sireum/C$.$greater$greater$greater$extension:(II)I
        29: invokevirtual #48                 // Method org/sireum/ops/COps$.hex2c:(I)I
        32: invokespecial #125                // Method org/sireum/C."<init>":(I)V
        35: new           #120                // class org/sireum/C
        38: dup
        39: getstatic     #33                 // Field org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
        42: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        45: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        48: aload_0
        49: invokevirtual #122                // Method c:()I
        52: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        55: bipush        8
        57: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        60: invokevirtual #253                // Method org/sireum/C$.$greater$greater$greater$extension:(II)I
        63: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        66: bipush        15
        68: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        71: invokevirtual #256                // Method org/sireum/C$.$amp$extension:(II)I
        74: invokevirtual #48                 // Method org/sireum/ops/COps$.hex2c:(I)I
        77: invokespecial #125                // Method org/sireum/C."<init>":(I)V
        80: new           #120                // class org/sireum/C
        83: dup
        84: getstatic     #33                 // Field org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
        87: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        90: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        93: aload_0
        94: invokevirtual #122                // Method c:()I
        97: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       100: iconst_4
       101: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
       104: invokevirtual #253                // Method org/sireum/C$.$greater$greater$greater$extension:(II)I
       107: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       110: bipush        15
       112: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
       115: invokevirtual #256                // Method org/sireum/C$.$amp$extension:(II)I
       118: invokevirtual #48                 // Method org/sireum/ops/COps$.hex2c:(I)I
       121: invokespecial #125                // Method org/sireum/C."<init>":(I)V
       124: new           #120                // class org/sireum/C
       127: dup
       128: getstatic     #33                 // Field org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
       131: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       134: aload_0
       135: invokevirtual #122                // Method c:()I
       138: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       141: bipush        15
       143: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
       146: invokevirtual #256                // Method org/sireum/C$.$amp$extension:(II)I
       149: invokevirtual #48                 // Method org/sireum/ops/COps$.hex2c:(I)I
       152: invokespecial #125                // Method org/sireum/C."<init>":(I)V
       155: invokespecial #259                // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       158: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     159     0  this   Lorg/sireum/ops/COps;
    Signature: #239                         // ()Lscala/Tuple4<Lorg/sireum/C;Lorg/sireum/C;Lorg/sireum/C;Lorg/sireum/C;>;

  public int toUpper();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: getstatic     #265                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #265                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
         9: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        12: bipush        97
        14: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        17: aload_0
        18: invokevirtual #122                // Method c:()I
        21: invokevirtual #269                // Method org/sireum/C$.$less$eq$extension:(II)Z
        24: aload_0
        25: invokedynamic #287,  0            // InvokeDynamic #0:apply:(Lorg/sireum/ops/COps;)Lscala/Function0;
        30: invokevirtual #291                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
        33: invokevirtual #295                // Method org/sireum/B$.$4B:(Z)Z
        36: ifeq          58
        39: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        42: aload_0
        43: invokevirtual #122                // Method c:()I
        46: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        49: bipush        32
        51: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        54: invokevirtual #298                // Method org/sireum/C$.$minus$extension:(II)I
        57: ireturn
        58: aload_0
        59: invokevirtual #122                // Method c:()I
        62: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 58 /* same */
      LineNumberTable:
        line 38: 0
        line 39: 39
        line 41: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lorg/sireum/ops/COps;

  public int toLower();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: getstatic     #265                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #265                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
         9: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        12: bipush        65
        14: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        17: aload_0
        18: invokevirtual #122                // Method c:()I
        21: invokevirtual #269                // Method org/sireum/C$.$less$eq$extension:(II)Z
        24: aload_0
        25: invokedynamic #304,  0            // InvokeDynamic #1:apply:(Lorg/sireum/ops/COps;)Lscala/Function0;
        30: invokevirtual #291                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
        33: invokevirtual #295                // Method org/sireum/B$.$4B:(Z)Z
        36: ifeq          58
        39: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        42: aload_0
        43: invokevirtual #122                // Method c:()I
        46: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        49: bipush        32
        51: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        54: invokevirtual #307                // Method org/sireum/C$.$plus$extension:(II)I
        57: ireturn
        58: aload_0
        59: invokevirtual #122                // Method c:()I
        62: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 58 /* same */
      LineNumberTable:
        line 46: 0
        line 47: 39
        line 49: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lorg/sireum/ops/COps;

  public java.lang.String escapeString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=22, args_size=1
         0: aload_0
         1: invokevirtual #122                // Method c:()I
         4: istore_2
         5: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
         8: iload_2
         9: invokevirtual #311                // Method org/sireum/C$.unapply:(I)Lscala/Some;
        12: astore_3
        13: aload_3
        14: invokevirtual #316                // Method scala/Some.isEmpty:()Z
        17: ifne          49
        20: aload_3
        21: invokevirtual #319                // Method scala/Some.get:()Ljava/lang/Object;
        24: invokestatic  #325                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        27: istore        4
        29: bipush        8
        31: iload         4
        33: if_icmpne     46
        36: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        39: ldc_w         #327                // String \\b
        42: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        45: areturn
        46: goto          52
        49: goto          52
        52: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        55: iload_2
        56: invokevirtual #311                // Method org/sireum/C$.unapply:(I)Lscala/Some;
        59: astore        5
        61: aload         5
        63: invokevirtual #316                // Method scala/Some.isEmpty:()Z
        66: ifne          99
        69: aload         5
        71: invokevirtual #319                // Method scala/Some.get:()Ljava/lang/Object;
        74: invokestatic  #325                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        77: istore        6
        79: bipush        9
        81: iload         6
        83: if_icmpne     96
        86: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        89: ldc_w         #329                // String \\t
        92: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        95: areturn
        96: goto          102
        99: goto          102
       102: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       105: iload_2
       106: invokevirtual #311                // Method org/sireum/C$.unapply:(I)Lscala/Some;
       109: astore        7
       111: aload         7
       113: invokevirtual #316                // Method scala/Some.isEmpty:()Z
       116: ifne          149
       119: aload         7
       121: invokevirtual #319                // Method scala/Some.get:()Ljava/lang/Object;
       124: invokestatic  #325                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       127: istore        8
       129: bipush        10
       131: iload         8
       133: if_icmpne     146
       136: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       139: ldc_w         #331                // String \\n
       142: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       145: areturn
       146: goto          152
       149: goto          152
       152: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       155: iload_2
       156: invokevirtual #311                // Method org/sireum/C$.unapply:(I)Lscala/Some;
       159: astore        9
       161: aload         9
       163: invokevirtual #316                // Method scala/Some.isEmpty:()Z
       166: ifne          199
       169: aload         9
       171: invokevirtual #319                // Method scala/Some.get:()Ljava/lang/Object;
       174: invokestatic  #325                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       177: istore        10
       179: bipush        12
       181: iload         10
       183: if_icmpne     196
       186: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       189: ldc_w         #333                // String \\f
       192: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       195: areturn
       196: goto          202
       199: goto          202
       202: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       205: iload_2
       206: invokevirtual #311                // Method org/sireum/C$.unapply:(I)Lscala/Some;
       209: astore        11
       211: aload         11
       213: invokevirtual #316                // Method scala/Some.isEmpty:()Z
       216: ifne          249
       219: aload         11
       221: invokevirtual #319                // Method scala/Some.get:()Ljava/lang/Object;
       224: invokestatic  #325                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       227: istore        12
       229: bipush        13
       231: iload         12
       233: if_icmpne     246
       236: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       239: ldc_w         #335                // String \\r
       242: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       245: areturn
       246: goto          252
       249: goto          252
       252: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       255: iload_2
       256: invokevirtual #311                // Method org/sireum/C$.unapply:(I)Lscala/Some;
       259: astore        13
       261: aload         13
       263: invokevirtual #316                // Method scala/Some.isEmpty:()Z
       266: ifne          299
       269: aload         13
       271: invokevirtual #319                // Method scala/Some.get:()Ljava/lang/Object;
       274: invokestatic  #325                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       277: istore        14
       279: bipush        34
       281: iload         14
       283: if_icmpne     296
       286: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       289: ldc_w         #337                // String \\\"
       292: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       295: areturn
       296: goto          302
       299: goto          302
       302: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       305: iload_2
       306: invokevirtual #311                // Method org/sireum/C$.unapply:(I)Lscala/Some;
       309: astore        15
       311: aload         15
       313: invokevirtual #316                // Method scala/Some.isEmpty:()Z
       316: ifne          349
       319: aload         15
       321: invokevirtual #319                // Method scala/Some.get:()Ljava/lang/Object;
       324: invokestatic  #325                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       327: istore        16
       329: bipush        39
       331: iload         16
       333: if_icmpne     346
       336: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       339: ldc_w         #339                // String \\\'
       342: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       345: areturn
       346: goto          352
       349: goto          352
       352: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       355: iload_2
       356: invokevirtual #311                // Method org/sireum/C$.unapply:(I)Lscala/Some;
       359: astore        17
       361: aload         17
       363: invokevirtual #316                // Method scala/Some.isEmpty:()Z
       366: ifne          399
       369: aload         17
       371: invokevirtual #319                // Method scala/Some.get:()Ljava/lang/Object;
       374: invokestatic  #325                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       377: istore        18
       379: bipush        92
       381: iload         18
       383: if_icmpne     396
       386: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       389: ldc_w         #341                // String \\\\
       392: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       395: areturn
       396: goto          402
       399: goto          402
       402: getstatic     #347                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       405: astore_1
       406: goto          409
       409: getstatic     #265                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       412: getstatic     #265                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       415: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       418: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       421: bipush        32
       423: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
       426: aload_0
       427: invokevirtual #122                // Method c:()I
       430: invokevirtual #269                // Method org/sireum/C$.$less$eq$extension:(II)Z
       433: aload_0
       434: invokedynamic #352,  0            // InvokeDynamic #2:apply:(Lorg/sireum/ops/COps;)Lscala/Function0;
       439: invokevirtual #291                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       442: invokevirtual #295                // Method org/sireum/B$.$4B:(Z)Z
       445: ifeq          459
       448: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       451: aload_0
       452: invokevirtual #122                // Method c:()I
       455: invokevirtual #356                // Method org/sireum/C$.string$extension:(I)Ljava/lang/String;
       458: areturn
       459: getstatic     #265                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       462: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       465: aload_0
       466: invokevirtual #122                // Method c:()I
       469: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       472: ldc_w         #357                // int 65535
       475: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
       478: invokevirtual #360                // Method org/sireum/C$.$greater$extension:(II)Z
       481: invokevirtual #295                // Method org/sireum/B$.$4B:(Z)Z
       484: ifeq          530
       487: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       490: ldc_w         #362                // String
       493: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       496: invokestatic  #368                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       499: astore        19
       501: getstatic     #373                // Field org/sireum/conversions/C$.MODULE$:Lorg/sireum/conversions/C$;
       504: aload_0
       505: invokevirtual #122                // Method c:()I
       508: invokevirtual #377                // Method org/sireum/conversions/C$.toCodePoints:(I)Lorg/sireum/IS;
       511: aload         19
       513: invokedynamic #387,  0            // InvokeDynamic #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
       518: invokevirtual #393                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       521: aload         19
       523: getfield      #396                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       526: checkcast     #135                // class java/lang/String
       529: areturn
       530: aload_0
       531: invokevirtual #398                // Method toUnicodeHex:()Lscala/Tuple4;
       534: astore        21
       536: new           #241                // class scala/Tuple4
       539: dup
       540: getstatic     #403                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       543: aload         21
       545: invokevirtual #406                // Method scala/Tuple4._1:()Ljava/lang/Object;
       548: invokevirtual #409                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       551: getstatic     #403                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       554: aload         21
       556: invokevirtual #412                // Method scala/Tuple4._2:()Ljava/lang/Object;
       559: invokevirtual #409                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       562: getstatic     #403                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       565: aload         21
       567: invokevirtual #415                // Method scala/Tuple4._3:()Ljava/lang/Object;
       570: invokevirtual #409                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       573: getstatic     #403                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       576: aload         21
       578: invokevirtual #418                // Method scala/Tuple4._4:()Ljava/lang/Object;
       581: invokevirtual #409                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       584: invokespecial #259                // Method scala/Tuple4."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       587: astore        20
       589: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       592: new           #100                // class java/lang/StringBuilder
       595: dup
       596: ldc_w         #419                // int 2
       599: invokespecial #420                // Method java/lang/StringBuilder."<init>":(I)V
       602: ldc_w         #422                // String \\u
       605: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       608: aload         20
       610: invokevirtual #406                // Method scala/Tuple4._1:()Ljava/lang/Object;
       613: invokevirtual #425                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       616: aload         20
       618: invokevirtual #412                // Method scala/Tuple4._2:()Ljava/lang/Object;
       621: invokevirtual #425                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       624: aload         20
       626: invokevirtual #415                // Method scala/Tuple4._3:()Ljava/lang/Object;
       629: invokevirtual #425                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       632: aload         20
       634: invokevirtual #418                // Method scala/Tuple4._4:()Ljava/lang/Object;
       637: invokevirtual #425                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       640: invokevirtual #131                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       643: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       646: areturn
      StackMapTable: number_of_entries = 27
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class org/sireum/ops/COps, top, int, class scala/Some, int ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ top, class scala/Some, int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ top, class scala/Some, int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ top, class scala/Some, int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ top, class scala/Some, int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ top, class scala/Some, int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ top, class scala/Some, int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ top, class scala/Some, int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/ops/COps, class scala/runtime/BoxedUnit, int, class scala/Some, top, class scala/Some, top, class scala/Some, top, class scala/Some, top, class scala/Some, top, class scala/Some, top, class scala/Some, top, class scala/Some ]
          stack = []
        frame_type = 49 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 70
      LineNumberTable:
        line 54: 0
        line 55: 5
        line 54: 20
        line 55: 29
        line 56: 52
        line 54: 69
        line 56: 79
        line 57: 102
        line 54: 119
        line 57: 129
        line 58: 152
        line 54: 169
        line 58: 179
        line 59: 202
        line 54: 219
        line 59: 229
        line 60: 252
        line 54: 269
        line 60: 279
        line 61: 302
        line 54: 319
        line 61: 329
        line 62: 352
        line 54: 369
        line 62: 379
        line 63: 402
        line 65: 409
        line 66: 448
        line 67: 459
        line 68: 487
        line 69: 501
        line 72: 521
        line 74: 530
        line 75: 589
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          501      29    19     r   Lscala/runtime/ObjectRef;
          536      51    21     x   Lscala/Tuple4;
          589      58    20     q   Lscala/Tuple4;
            0     647     0  this   Lorg/sireum/ops/COps;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #432                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/COps;

  public static final boolean $anonfun$toUpper$1(org.sireum.ops.COps);
    descriptor: (Lorg/sireum/ops/COps;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
         3: aload_0
         4: invokevirtual #122                // Method c:()I
         7: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        10: bipush        122
        12: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        15: invokevirtual #269                // Method org/sireum/C$.$less$eq$extension:(II)Z
        18: ireturn
      LineNumberTable:
        line 38: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 $this   Lorg/sireum/ops/COps;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final boolean $anonfun$toLower$1(org.sireum.ops.COps);
    descriptor: (Lorg/sireum/ops/COps;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
         3: aload_0
         4: invokevirtual #122                // Method c:()I
         7: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        10: bipush        90
        12: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        15: invokevirtual #269                // Method org/sireum/C$.$less$eq$extension:(II)Z
        18: ireturn
      LineNumberTable:
        line 46: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 $this   Lorg/sireum/ops/COps;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final boolean $anonfun$escapeString$1(org.sireum.ops.COps);
    descriptor: (Lorg/sireum/ops/COps;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
         3: aload_0
         4: invokevirtual #122                // Method c:()I
         7: getstatic     #246                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        10: bipush        126
        12: invokevirtual #249                // Method org/sireum/C$.apply:(C)I
        15: invokevirtual #269                // Method org/sireum/C$.$less$eq$extension:(II)Z
        18: ireturn
      LineNumberTable:
        line 65: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 $this   Lorg/sireum/ops/COps;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final void $anonfun$escapeString$2(scala.runtime.ObjectRef, int);
    descriptor: (Lscala/runtime/ObjectRef;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=2, args_size=2
         0: aload_0
         1: getstatic     #118                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         4: new           #100                // class java/lang/StringBuilder
         7: dup
         8: ldc_w         #442                // int 0
        11: invokespecial #420                // Method java/lang/StringBuilder."<init>":(I)V
        14: new           #444                // class org/sireum/String
        17: dup
        18: aload_0
        19: getfield      #396                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        22: checkcast     #135                // class java/lang/String
        25: invokespecial #447                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        28: invokevirtual #425                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        31: new           #444                // class org/sireum/String
        34: dup
        35: getstatic     #33                 // Field org/sireum/ops/COps$.MODULE$:Lorg/sireum/ops/COps$;
        38: iload_1
        39: invokevirtual #449                // Method org/sireum/ops/COps$.apply:(I)Lorg/sireum/ops/COps;
        42: invokevirtual #451                // Method escapeString:()Ljava/lang/String;
        45: invokespecial #447                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        48: invokevirtual #425                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        51: invokevirtual #131                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        54: invokevirtual #141                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        57: putfield      #396                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        60: return
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0   r$1   Lscala/runtime/ObjectRef;
            0      61     1   cpc   I
    MethodParameters:
      Name                           Flags
      r$1                            final
      cpc                            final

  public org.sireum.ops.COps(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #453                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #457                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #460                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #463                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: iload_1
        18: putfield      #89                 // Field _c:I
        21: return
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/ops/COps;
            0      22     1   __c   I
    MethodParameters:
      Name                           Flags
      __c                            final

  public static final java.lang.Object $anonfun$toUpper$1$adapted(org.sireum.ops.COps);
    descriptor: (Lorg/sireum/ops/COps;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #465                // class org/sireum/B
         3: dup
         4: aload_0
         5: invokestatic  #467                // Method $anonfun$toUpper$1:(Lorg/sireum/ops/COps;)Z
         8: invokespecial #470                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/ops/COps;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$toLower$1$adapted(org.sireum.ops.COps);
    descriptor: (Lorg/sireum/ops/COps;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #465                // class org/sireum/B
         3: dup
         4: aload_0
         5: invokestatic  #472                // Method $anonfun$toLower$1:(Lorg/sireum/ops/COps;)Z
         8: invokespecial #470                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/ops/COps;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$escapeString$1$adapted(org.sireum.ops.COps);
    descriptor: (Lorg/sireum/ops/COps;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #465                // class org/sireum/B
         3: dup
         4: aload_0
         5: invokestatic  #474                // Method $anonfun$escapeString$1:(Lorg/sireum/ops/COps;)Z
         8: invokespecial #470                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 $this   Lorg/sireum/ops/COps;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static final java.lang.Object $anonfun$escapeString$2$adapted(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #120                // class org/sireum/C
         5: invokevirtual #477                // Method org/sireum/C.value:()I
         8: invokestatic  #479                // Method $anonfun$escapeString$2:(Lscala/runtime/ObjectRef;I)V
        11: getstatic     #347                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        14: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0   r$1   Lscala/runtime/ObjectRef;
            0      15     1   cpc   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$1                            final
      cpc                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #491,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "COps.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u0015d\u0001B\r\u001b\u0005\u0005B\u0001\u0002\f\u0001\u0003\u0002\u0003\u0006I!\f\u0005\u0006a\u0001!\t!\r\u0005\u0007k\u0001\u0001\u000b\u0011B\u0017\t\u000bY\u0002A\u0011A\u001c\t\u000ba\u0002A\u0011A\u001c\t\u000be\u0002A\u0011\t\u001e\t\u000b\r\u0003A\u0011\t#\t\u0011\u001d\u0003\u0001R1A\u0005B!CQ\u0001\u0014\u0001\u0005B5CQA\u0016\u0001\u0005\u0002]Cq!\u0017\u0001\u0012\u0002\u0013\u0005!\f\u0003\u0005f\u0001!\u0015\r\u0011\"\u0011g\u0011\u00151\b\u0001\"\u0001x\u0011\u0015y\b\u0001\"\u00018\u0011\u0019\t\u0019\u0001\u0001C\u0001o!1\u0011q\u0001\u0001\u0005\u0002\u0011;q!a\u0005\u001b\u0011\u0003\t)B\u0002\u0004\u001a5!\u0005\u0011q\u0003\u0005\u0007aI!\t!!\u0007\t\u000f\u0005m!\u0003\"\u0001\u0002\u001e!9\u0011\u0011\u0006\n\u0005\u0002\u0005-\u0002bBA\u0019%\u0011\u0005\u00111\u0007\u0005\u0007-J!\t!!\u0016\t\u000f\u0005e#\u0003\"\u0001\u0002\\\t!1i\u00149t\u0015\tYB$A\u0002paNT!!\b\u0010\u0002\rML\'/Z;n\u0015\u0005y\u0012aA8sO\u000e\u00011c\u0001\u0001#QA\u00111EJ\u0007\u0002I)\tQ%A\u0003tG\u0006d\u0017-\u0003\u0002(I\t1\u0011I\\=SK\u001a\u0004\"!\u000b\u0016\u000e\u0003qI!a\u000b\u000f\u0003\u0017\u0011\u000bG/\u0019;za\u0016\u001c\u0016nZ\u0001\u0004?~\u001b\u0007CA\u0015/\u0013\tyCDA\u0001D\u0003\u0019a\u0014N\\5u}Q\u0011!\u0007\u000e\t\u0003g\u0001i\u0011A\u0007\u0005\u0006Y\t\u0001\r!L\u0001\u0003?\u000e\f\u0011aY\u000b\u0002[\u0005!q-\u001a;D\u0003!!xn\u0015;sS:<G#A\u001e\u0011\u0005q\nU\"A\u001f\u000b\u0005yz\u0014\u0001\u00027b]\u001eT\u0011\u0001Q\u0001\u0005U\u00064\u0018-\u0003\u0002C{\t11\u000b\u001e:j]\u001e\faa\u001d;sS:<W#A#\u0011\u0005%2\u0015B\u0001\"\u001d\u0003!A\u0017m\u001d5D_\u0012,W#A%\u0011\u0005\rR\u0015BA&%\u0005\rIe\u000e^\u0001\u0007KF,\u0018\r\\:\u0015\u00059\u000b\u0006CA\u0012P\u0013\t\u0001FEA\u0004C_>dW-\u00198\t\u000bIK\u0001\u0019A*\u0002\u0003=\u0004\"a\t+\n\u0005U##aA!os\u0006)\u0011\r\u001d9msR\u0011!\u0007\u0017\u0005\bm)\u0001\n\u00111\u0001.\u0003=\t\u0007\u000f\u001d7zI\u0011,g-Y;mi\u0012\nT#A.+\u00055b6&A/\u0011\u0005y\u001bW\"A0\u000b\u0005\u0001\f\u0017!C;oG\",7m[3e\u0015\t\u0011G%\u0001\u0006b]:|G/\u0019;j_:L!\u0001Z0\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-\u0001\u0005%G>tG/\u001a8u+\u00059\u0007c\u00015qg:\u0011\u0011N\u001c\b\u0003U6l\u0011a\u001b\u0006\u0003Y\u0002\na\u0001\u0010:p_Rt\u0014\"A\u0013\n\u0005=$\u0013a\u00029bG.\fw-Z\u0005\u0003cJ\u00141aU3r\u0015\tyG\u0005\u0005\u0003$in\u001a\u0016BA;%\u0005\u0019!V\u000f\u001d7fe\u0005aAo\\+oS\u000e|G-\u001a%fqV\t\u0001\u0010\u0005\u0004$s6jS&L\u0005\u0003u\u0012\u0012a\u0001V;qY\u0016$\u0004FA\u0007}!\tIS0\u0003\u0002\u007f9\t!\u0001/\u001e:f\u0003\u001d!x.\u00169qKJD#A\u0004?\u0002\u000fQ|Gj\\<fe\"\u0012q\u0002`\u0001\rKN\u001c\u0017\r]3TiJLgn\u001a\u0015\u0003!qD3\u0001AA\u0007!\rI\u0013qB\u0005\u0004\u0003#a\"\u0001\u00033bi\u0006$\u0018\u0010]3\u0002\t\r{\u0005o\u001d\t\u0003gI\u0019\"A\u0005\u0012\u0015\u0005\u0005U\u0011!B23Q\u0016DH\u0003BA\u0010\u0003K\u0001B!KA\u0011[%\u0019\u00111\u0005\u000f\u0003\r=\u0003H/[8o\u0011\u00151D\u00031\u0001.Q\t!B0A\u0003iKb\u00144\rF\u0002.\u0003[AQAN\u000bA\u00025B#!\u0006?\u0002\u001d\u0019\u0014x.\\+oS\u000e|G-\u001a%fqR!\u0011qDA\u001b\u0011\u001d\t9D\u0006a\u0001\u0003s\t1\u0001[3y!\u0015\tY$a\u0012.\u001d\u0011\ti$!\u0012\u000f\t\u0005}\u00121\t\b\u0004U\u0006\u0005\u0013\"A\u0010\n\u0005uq\u0012BA8\u001d\u0013\u0011\tI%a\u0013\u0003\u0007%\u001b&,\u0003\u0003\u0002N\u0005=#\u0001\u0004)bG.\fw-\u001a+sC&$(bAA)9\u0005IA%\u001b8uKJt\u0017\r\u001c\u0015\u0003-q$2AMA,\u0011\u00151t\u00031\u0001.\u0003\u001d)h.\u00199qYf$B!!\u0018\u0002dA!1%a\u0018.\u0013\r\t\t\u0007\n\u0002\u0005\'>lW\rC\u0003S1\u0001\u0007!\u0007"
    )
BootstrapMethods:
  0: #284 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #271 ()Ljava/lang/Object;
      #276 REF_invokeStatic org/sireum/ops/COps.$anonfun$toUpper$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
      #271 ()Ljava/lang/Object;
      #277 1
  1: #284 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #271 ()Ljava/lang/Object;
      #303 REF_invokeStatic org/sireum/ops/COps.$anonfun$toLower$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
      #271 ()Ljava/lang/Object;
      #277 1
  2: #284 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #271 ()Ljava/lang/Object;
      #351 REF_invokeStatic org/sireum/ops/COps.$anonfun$escapeString$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
      #271 ()Ljava/lang/Object;
      #277 1
  3: #284 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #379 (Ljava/lang/Object;)Ljava/lang/Object;
      #384 REF_invokeStatic org/sireum/ops/COps.$anonfun$escapeString$2$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #379 (Ljava/lang/Object;)Ljava/lang/Object;
      #277 1
  4: #488 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #351 REF_invokeStatic org/sireum/ops/COps.$anonfun$escapeString$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
      #384 REF_invokeStatic org/sireum/ops/COps.$anonfun$escapeString$2$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #303 REF_invokeStatic org/sireum/ops/COps.$anonfun$toLower$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
      #276 REF_invokeStatic org/sireum/ops/COps.$anonfun$toUpper$1$adapted:(Lorg/sireum/ops/COps;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x9A (unknown attribute)
   01 01 00 1E 01 B5 01 B2 01 01 5C 01 11 01 01 B6
   01 B7 01 01 7C 01 7D 01 01 B4 01 B2 01 01 2C 01
   11 01 01 B1 01 B2 01 01 10 01 11 01 00 3D 00 3E
   01 00 4F 01 0E 01 00 4F 00 50 01 00 12 00 C8 01
   00 C7 00 C8 01 00 45 00 46 01 00 4B 00 46 01 00
   65 00 7B 01 00 8A 00 C4 01 00 C6 00 57 01 00 2E
   00 57 01 00 BE 00 BF 01 01 34 00 5C 01 00 5A 00
   57 01 00 36 00 37 01 00 10 00 57 01 00 8E 00 57
   01 00 88 00 5C 01 01 2B 00 57 01 00 5B 00 5C 01
   00 ED 00 EE 01 01 04 00 57 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
