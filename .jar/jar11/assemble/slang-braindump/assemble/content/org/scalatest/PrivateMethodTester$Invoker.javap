Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/PrivateMethodTester$Invoker.class
  Last modified May 29, 2022; size 11825 bytes
  SHA-256 checksum dfd3c1a69d941826e4c0c61dab9c037d77ae3f4719f369bb381803c846ac18ee
  Compiled from "PrivateMethodTester.scala"
public final class org.scalatest.PrivateMethodTester$Invoker
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/PrivateMethodTester$Invoker
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 18, attributes: 5
Constant pool:
    #1 = Utf8               org/scalatest/PrivateMethodTester$Invoker
    #2 = Class              #1            // org/scalatest/PrivateMethodTester$Invoker
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               PrivateMethodTester.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/scalactic/Requirements$RequirementsHelper
   #12 = Class              #11           // org/scalactic/Requirements$RequirementsHelper
   #13 = Utf8               org/scalactic/Requirements
   #14 = Class              #13           // org/scalactic/Requirements
   #15 = Utf8               RequirementsHelper
   #16 = Utf8               org/scalatest/PrivateMethodTester$Invocation
   #17 = Class              #16           // org/scalatest/PrivateMethodTester$Invocation
   #18 = Utf8               org/scalatest/PrivateMethodTester
   #19 = Class              #18           // org/scalatest/PrivateMethodTester
   #20 = Utf8               Invocation
   #21 = Utf8               Invoker
   #22 = Utf8               scala/collection/ArrayOps$WithFilter
   #23 = Class              #22           // scala/collection/ArrayOps$WithFilter
   #24 = Utf8               scala/collection/ArrayOps
   #25 = Class              #24           // scala/collection/ArrayOps
   #26 = Utf8               WithFilter
   #27 = Utf8               scala/collection/mutable/ArraySeq$ofRef
   #28 = Class              #27           // scala/collection/mutable/ArraySeq$ofRef
   #29 = Utf8               scala/collection/mutable/ArraySeq
   #30 = Class              #29           // scala/collection/mutable/ArraySeq
   #31 = Utf8               ofRef
   #32 = Utf8               target
   #33 = Utf8               Ljava/lang/Object;
   #34 = Utf8               invokePrivate
   #35 = Utf8               (Lorg/scalatest/PrivateMethodTester$Invocation;)Ljava/lang/Object;
   #36 = Utf8               <T:Ljava/lang/Object;>(Lorg/scalatest/PrivateMethodTester$Invocation<TT;>;)TT;
   #37 = Utf8               invocation
   #38 = Utf8               java/lang/reflect/InvocationTargetException
   #39 = Class              #38           // java/lang/reflect/InvocationTargetException
   #40 = Utf8               methodName
   #41 = Utf8               ()Lscala/Symbol;
   #42 = NameAndType        #40:#41       // methodName:()Lscala/Symbol;
   #43 = Methodref          #17.#42       // org/scalatest/PrivateMethodTester$Invocation.methodName:()Lscala/Symbol;
   #44 = Utf8               scala/Symbol
   #45 = Class              #44           // scala/Symbol
   #46 = Utf8               name
   #47 = Utf8               ()Ljava/lang/String;
   #48 = NameAndType        #46:#47       // name:()Ljava/lang/String;
   #49 = Methodref          #45.#48       // scala/Symbol.name:()Ljava/lang/String;
   #50 = Utf8               scala/collection/ArrayOps$
   #51 = Class              #50           // scala/collection/ArrayOps$
   #52 = Utf8               MODULE$
   #53 = Utf8               Lscala/collection/ArrayOps$;
   #54 = NameAndType        #52:#53       // MODULE$:Lscala/collection/ArrayOps$;
   #55 = Fieldref           #51.#54       // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
   #56 = Utf8               scala/Predef$
   #57 = Class              #56           // scala/Predef$
   #58 = Utf8               Lscala/Predef$;
   #59 = NameAndType        #52:#58       // MODULE$:Lscala/Predef$;
   #60 = Fieldref           #57.#59       // scala/Predef$.MODULE$:Lscala/Predef$;
   #61 = NameAndType        #32:#33       // target:Ljava/lang/Object;
   #62 = Fieldref           #2.#61        // org/scalatest/PrivateMethodTester$Invoker.target:Ljava/lang/Object;
   #63 = Utf8               getClass
   #64 = Utf8               ()Ljava/lang/Class;
   #65 = NameAndType        #63:#64       // getClass:()Ljava/lang/Class;
   #66 = Methodref          #4.#65        // java/lang/Object.getClass:()Ljava/lang/Class;
   #67 = Utf8               java/lang/Class
   #68 = Class              #67           // java/lang/Class
   #69 = Utf8               getDeclaredMethods
   #70 = Utf8               ()[Ljava/lang/reflect/Method;
   #71 = NameAndType        #69:#70       // getDeclaredMethods:()[Ljava/lang/reflect/Method;
   #72 = Methodref          #68.#71       // java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
   #73 = Utf8               [Ljava/lang/Object;
   #74 = Class              #73           // "[Ljava/lang/Object;"
   #75 = Utf8               refArrayOps
   #76 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
   #77 = NameAndType        #75:#76       // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
   #78 = Methodref          #57.#77       // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
   #79 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #80 = MethodType         #79           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #81 = Utf8               $anonfun$invokePrivate$6$adapted
   #82 = Utf8               (Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Ljava/lang/Object;
   #83 = NameAndType        #81:#82       // $anonfun$invokePrivate$6$adapted:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Ljava/lang/Object;
   #84 = Methodref          #2.#83        // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$6$adapted:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Ljava/lang/Object;
   #85 = MethodHandle       6:#84         // REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$6$adapted:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Ljava/lang/Object;
   #86 = Utf8               (Ljava/lang/reflect/Method;)Ljava/lang/Object;
   #87 = MethodType         #86           //  (Ljava/lang/reflect/Method;)Ljava/lang/Object;
   #88 = Integer            5
   #89 = Integer            1
   #90 = Utf8               java/lang/invoke/LambdaMetafactory
   #91 = Class              #90           // java/lang/invoke/LambdaMetafactory
   #92 = Utf8               altMetafactory
   #93 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #94 = NameAndType        #92:#93       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #95 = Methodref          #91.#94       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #96 = MethodHandle       6:#95         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #97 = Utf8               apply
   #98 = Utf8               (Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;)Lscala/Function1;
   #99 = NameAndType        #97:#98       // apply:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;)Lscala/Function1;
  #100 = InvokeDynamic      #0:#99        // #0:apply:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;)Lscala/Function1;
  #101 = Utf8               withFilter$extension
  #102 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Lscala/collection/ArrayOps$WithFilter;
  #103 = NameAndType        #101:#102     // withFilter$extension:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/ArrayOps$WithFilter;
  #104 = Methodref          #51.#103      // scala/collection/ArrayOps$.withFilter$extension:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/ArrayOps$WithFilter;
  #105 = Utf8               $anonfun$invokePrivate$7
  #106 = Utf8               (Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
  #107 = NameAndType        #105:#106     // $anonfun$invokePrivate$7:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
  #108 = Methodref          #2.#107       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$7:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
  #109 = MethodHandle       6:#108        // REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$7:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
  #110 = MethodType         #106          //  (Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
  #111 = Utf8               ()Lscala/Function1;
  #112 = NameAndType        #97:#111      // apply:()Lscala/Function1;
  #113 = InvokeDynamic      #1:#112       // #1:apply:()Lscala/Function1;
  #114 = Utf8               scala/reflect/ClassTag$
  #115 = Class              #114          // scala/reflect/ClassTag$
  #116 = Utf8               Lscala/reflect/ClassTag$;
  #117 = NameAndType        #52:#116      // MODULE$:Lscala/reflect/ClassTag$;
  #118 = Fieldref           #115.#117     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #119 = Utf8               java/lang/reflect/Method
  #120 = Class              #119          // java/lang/reflect/Method
  #121 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #122 = NameAndType        #97:#121      // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #123 = Methodref          #115.#122     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #124 = Utf8               map
  #125 = Utf8               (Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #126 = NameAndType        #124:#125     // map:(Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #127 = Methodref          #23.#126      // scala/collection/ArrayOps$WithFilter.map:(Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #128 = Utf8               [Ljava/lang/reflect/Method;
  #129 = Class              #128          // "[Ljava/lang/reflect/Method;"
  #130 = Utf8               java/lang/IllegalArgumentException
  #131 = Class              #130          // java/lang/IllegalArgumentException
  #132 = Utf8               java/lang/StringBuilder
  #133 = Class              #132          // java/lang/StringBuilder
  #134 = Integer            35
  #135 = Utf8               <init>
  #136 = Utf8               (I)V
  #137 = NameAndType        #135:#136     // "<init>":(I)V
  #138 = Methodref          #133.#137     // java/lang/StringBuilder."<init>":(I)V
  #139 = Utf8               Can\'t find a private method named:
  #140 = String             #139          // Can\'t find a private method named:
  #141 = Utf8               append
  #142 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #143 = NameAndType        #141:#142     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #144 = Methodref          #133.#143     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #145 = Utf8               toString
  #146 = NameAndType        #145:#47      // toString:()Ljava/lang/String;
  #147 = Methodref          #133.#146     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #148 = Utf8               (Ljava/lang/String;)V
  #149 = NameAndType        #135:#148     // "<init>":(Ljava/lang/String;)V
  #150 = Methodref          #131.#149     // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #151 = Utf8               Found two methods
  #152 = String             #151          // Found two methods
  #153 = Utf8               args
  #154 = Utf8               ()Lscala/collection/immutable/Seq;
  #155 = NameAndType        #153:#154     // args:()Lscala/collection/immutable/Seq;
  #156 = Methodref          #17.#155      // org/scalatest/PrivateMethodTester$Invocation.args:()Lscala/collection/immutable/Seq;
  #157 = Utf8               $anonfun$invokePrivate$8
  #158 = NameAndType        #157:#79      // $anonfun$invokePrivate$8:(Ljava/lang/Object;)Ljava/lang/Object;
  #159 = Methodref          #2.#158       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$8:(Ljava/lang/Object;)Ljava/lang/Object;
  #160 = MethodHandle       6:#159        // REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$8:(Ljava/lang/Object;)Ljava/lang/Object;
  #161 = InvokeDynamic      #2:#112       // #2:apply:()Lscala/Function1;
  #162 = Utf8               scala/collection/immutable/Seq
  #163 = Class              #162          // scala/collection/immutable/Seq
  #164 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #165 = NameAndType        #124:#164     // map:(Lscala/Function1;)Ljava/lang/Object;
  #166 = InterfaceMethodref #163.#165     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #167 = Utf8               setAccessible
  #168 = Utf8               (Z)V
  #169 = NameAndType        #167:#168     // setAccessible:(Z)V
  #170 = Methodref          #120.#169     // java/lang/reflect/Method.setAccessible:(Z)V
  #171 = Utf8               AnyRef
  #172 = Utf8               ()Lscala/reflect/ClassTag;
  #173 = NameAndType        #171:#172     // AnyRef:()Lscala/reflect/ClassTag;
  #174 = Methodref          #115.#173     // scala/reflect/ClassTag$.AnyRef:()Lscala/reflect/ClassTag;
  #175 = Utf8               toArray
  #176 = Utf8               (Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #177 = NameAndType        #175:#176     // toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #178 = InterfaceMethodref #163.#177     // scala/collection/immutable/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #179 = Utf8               invoke
  #180 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  #181 = NameAndType        #179:#180     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  #182 = Methodref          #120.#181     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  #183 = Utf8               getCause
  #184 = Utf8               ()Ljava/lang/Throwable;
  #185 = NameAndType        #183:#184     // getCause:()Ljava/lang/Throwable;
  #186 = Methodref          #39.#185      // java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
  #187 = Utf8               cause
  #188 = Utf8               Ljava/lang/Throwable;
  #189 = Utf8               e
  #190 = Utf8               Ljava/lang/reflect/InvocationTargetException;
  #191 = Utf8               anyRefArgs
  #192 = Utf8               Lscala/collection/immutable/Seq;
  #193 = Utf8               privateMethodToInvoke
  #194 = Utf8               Ljava/lang/reflect/Method;
  #195 = Utf8               methodNameToInvoke
  #196 = Utf8               Ljava/lang/String;
  #197 = Utf8               methodArray
  #198 = Utf8               this
  #199 = Utf8               Lorg/scalatest/PrivateMethodTester$Invoker;
  #200 = Utf8               Lorg/scalatest/PrivateMethodTester$Invocation;
  #201 = Utf8               java/lang/String
  #202 = Class              #201          // java/lang/String
  #203 = Utf8               java/lang/Throwable
  #204 = Class              #203          // java/lang/Throwable
  #205 = Utf8               $anonfun$invokePrivate$1
  #206 = Utf8               ()Z
  #207 = Utf8               $anonfun$invokePrivate$2
  #208 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)Z
  #209 = Utf8               paramType$1
  #210 = Utf8               anyRefArg
  #211 = Utf8               java/lang/Long
  #212 = Class              #211          // java/lang/Long
  #213 = Utf8               TYPE
  #214 = Utf8               Ljava/lang/Class;
  #215 = NameAndType        #213:#214     // TYPE:Ljava/lang/Class;
  #216 = Fieldref           #212.#215     // java/lang/Long.TYPE:Ljava/lang/Class;
  #217 = Utf8               equals
  #218 = Utf8               (Ljava/lang/Object;)Z
  #219 = NameAndType        #217:#218     // equals:(Ljava/lang/Object;)Z
  #220 = Methodref          #4.#219       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #221 = Utf8               java/lang/Integer
  #222 = Class              #221          // java/lang/Integer
  #223 = Fieldref           #222.#215     // java/lang/Integer.TYPE:Ljava/lang/Class;
  #224 = Utf8               java/lang/Short
  #225 = Class              #224          // java/lang/Short
  #226 = Fieldref           #225.#215     // java/lang/Short.TYPE:Ljava/lang/Class;
  #227 = Utf8               java/lang/Byte
  #228 = Class              #227          // java/lang/Byte
  #229 = Fieldref           #228.#215     // java/lang/Byte.TYPE:Ljava/lang/Class;
  #230 = Utf8               java/lang/Character
  #231 = Class              #230          // java/lang/Character
  #232 = Fieldref           #231.#215     // java/lang/Character.TYPE:Ljava/lang/Class;
  #233 = Utf8               java/lang/Double
  #234 = Class              #233          // java/lang/Double
  #235 = Fieldref           #234.#215     // java/lang/Double.TYPE:Ljava/lang/Class;
  #236 = Utf8               java/lang/Float
  #237 = Class              #236          // java/lang/Float
  #238 = Fieldref           #237.#215     // java/lang/Float.TYPE:Ljava/lang/Class;
  #239 = Utf8               java/lang/Boolean
  #240 = Class              #239          // java/lang/Boolean
  #241 = Fieldref           #240.#215     // java/lang/Boolean.TYPE:Ljava/lang/Class;
  #242 = Utf8               isAssignableFrom
  #243 = Utf8               (Ljava/lang/Class;)Z
  #244 = NameAndType        #242:#243     // isAssignableFrom:(Ljava/lang/Class;)Z
  #245 = Methodref          #68.#244      // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
  #246 = Utf8               argMatchesParamType$1
  #247 = Utf8               (Ljava/lang/Object;Ljava/lang/Class;)Z
  #248 = Utf8               arg
  #249 = Utf8               paramType
  #250 = Utf8               scala/Option$
  #251 = Class              #250          // scala/Option$
  #252 = Utf8               Lscala/Option$;
  #253 = NameAndType        #52:#252      // MODULE$:Lscala/Option$;
  #254 = Fieldref           #251.#253     // scala/Option$.MODULE$:Lscala/Option$;
  #255 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #256 = NameAndType        #97:#255      // apply:(Ljava/lang/Object;)Lscala/Option;
  #257 = Methodref          #251.#256     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #258 = MethodType         #206          //  ()Z
  #259 = NameAndType        #205:#206     // $anonfun$invokePrivate$1:()Z
  #260 = Methodref          #2.#259       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$1:()Z
  #261 = MethodHandle       6:#260        // REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$1:()Z
  #262 = Utf8               apply$mcZ$sp
  #263 = Utf8               ()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #264 = NameAndType        #262:#263     // apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #265 = InvokeDynamic      #3:#264       // #3:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #266 = Utf8               $anonfun$invokePrivate$2$adapted
  #267 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
  #268 = NameAndType        #266:#267     // $anonfun$invokePrivate$2$adapted:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
  #269 = Methodref          #2.#268       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$2$adapted:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
  #270 = MethodHandle       6:#269        // REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$2$adapted:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
  #271 = Utf8               (Ljava/lang/Class;)Lscala/Function1;
  #272 = NameAndType        #97:#271      // apply:(Ljava/lang/Class;)Lscala/Function1;
  #273 = InvokeDynamic      #4:#272       // #4:apply:(Ljava/lang/Class;)Lscala/Function1;
  #274 = Utf8               scala/Option
  #275 = Class              #274          // scala/Option
  #276 = Utf8               fold
  #277 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #278 = NameAndType        #276:#277     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #279 = Methodref          #275.#278     // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #280 = Utf8               scala/runtime/BoxesRunTime
  #281 = Class              #280          // scala/runtime/BoxesRunTime
  #282 = Utf8               unboxToBoolean
  #283 = NameAndType        #282:#218     // unboxToBoolean:(Ljava/lang/Object;)Z
  #284 = Methodref          #281.#283     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #285 = Utf8               $anonfun$invokePrivate$3
  #286 = Utf8               (Lscala/Tuple2;)Z
  #287 = Utf8               check$ifrefutable$1
  #288 = Utf8               Lscala/Tuple2;
  #289 = Utf8               scala/Tuple2
  #290 = Class              #289          // scala/Tuple2
  #291 = Utf8               $anonfun$invokePrivate$4
  #292 = Utf8               x$1
  #293 = Utf8               _1
  #294 = Utf8               ()Ljava/lang/Object;
  #295 = NameAndType        #293:#294     // _1:()Ljava/lang/Object;
  #296 = Methodref          #290.#295     // scala/Tuple2._1:()Ljava/lang/Object;
  #297 = Utf8               _2
  #298 = NameAndType        #297:#294     // _2:()Ljava/lang/Object;
  #299 = Methodref          #290.#298     // scala/Tuple2._2:()Ljava/lang/Object;
  #300 = NameAndType        #246:#247     // argMatchesParamType$1:(Ljava/lang/Object;Ljava/lang/Class;)Z
  #301 = Methodref          #2.#300       // org/scalatest/PrivateMethodTester$Invoker.argMatchesParamType$1:(Ljava/lang/Object;Ljava/lang/Class;)Z
  #302 = Utf8               scala/MatchError
  #303 = Class              #302          // scala/MatchError
  #304 = Utf8               (Ljava/lang/Object;)V
  #305 = NameAndType        #135:#304     // "<init>":(Ljava/lang/Object;)V
  #306 = Methodref          #303.#305     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #307 = Utf8               $anonfun$invokePrivate$5
  #308 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #309 = Utf8               x$2
  #310 = Utf8               argsHaveValidTypes$1
  #311 = Utf8               (Lorg/scalatest/PrivateMethodTester$Invocation;[Ljava/lang/Class;)Z
  #312 = Utf8               invocation$1
  #313 = Utf8               paramTypes$1
  #314 = Utf8               length
  #315 = Utf8               ()I
  #316 = NameAndType        #314:#315     // length:()I
  #317 = InterfaceMethodref #163.#316     // scala/collection/immutable/Seq.length:()I
  #318 = Utf8               toList
  #319 = Utf8               ()Lscala/collection/immutable/List;
  #320 = NameAndType        #318:#319     // toList:()Lscala/collection/immutable/List;
  #321 = InterfaceMethodref #163.#320     // scala/collection/immutable/Seq.toList:()Lscala/collection/immutable/List;
  #322 = Utf8               wrapRefArray
  #323 = Utf8               ([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #324 = NameAndType        #322:#323     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #325 = Methodref          #57.#324      // scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #326 = Methodref          #28.#320      // scala/collection/mutable/ArraySeq$ofRef.toList:()Lscala/collection/immutable/List;
  #327 = Utf8               scala/collection/immutable/List
  #328 = Class              #327          // scala/collection/immutable/List
  #329 = Utf8               zip
  #330 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #331 = NameAndType        #329:#330     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #332 = Methodref          #328.#331     // scala/collection/immutable/List.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #333 = Utf8               $anonfun$invokePrivate$3$adapted
  #334 = NameAndType        #333:#308     // $anonfun$invokePrivate$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #335 = Methodref          #2.#334       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #336 = MethodHandle       6:#335        // REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #337 = MethodType         #308          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #338 = InvokeDynamic      #5:#112       // #5:apply:()Lscala/Function1;
  #339 = Utf8               withFilter
  #340 = Utf8               (Lscala/Function1;)Lscala/collection/WithFilter;
  #341 = NameAndType        #339:#340     // withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #342 = Methodref          #328.#341     // scala/collection/immutable/List.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #343 = Utf8               $anonfun$invokePrivate$4$adapted
  #344 = NameAndType        #343:#308     // $anonfun$invokePrivate$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #345 = Methodref          #2.#344       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #346 = MethodHandle       6:#345        // REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #347 = InvokeDynamic      #6:#112       // #6:apply:()Lscala/Function1;
  #348 = Utf8               scala/collection/WithFilter
  #349 = Class              #348          // scala/collection/WithFilter
  #350 = Methodref          #349.#341     // scala/collection/WithFilter.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #351 = NameAndType        #307:#308     // $anonfun$invokePrivate$5:(Lscala/Tuple2;)Ljava/lang/Object;
  #352 = Methodref          #2.#351       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$5:(Lscala/Tuple2;)Ljava/lang/Object;
  #353 = MethodHandle       6:#352        // REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$5:(Lscala/Tuple2;)Ljava/lang/Object;
  #354 = InvokeDynamic      #7:#112       // #7:apply:()Lscala/Function1;
  #355 = Methodref          #349.#165     // scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
  #356 = Methodref          #328.#316     // scala/collection/immutable/List.length:()I
  #357 = Utf8               zipped
  #358 = Utf8               Lscala/collection/immutable/List;
  #359 = Utf8               invalidArgs
  #360 = Utf8               [Ljava/lang/Class;
  #361 = Utf8               isMethodToInvoke$1
  #362 = Utf8               (Ljava/lang/reflect/Method;Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;)Z
  #363 = Utf8               m
  #364 = Utf8               methodNameToInvoke$1
  #365 = Utf8               getModifiers
  #366 = NameAndType        #365:#315     // getModifiers:()I
  #367 = Methodref          #120.#366     // java/lang/reflect/Method.getModifiers:()I
  #368 = Utf8               java/lang/reflect/Modifier
  #369 = Class              #368          // java/lang/reflect/Modifier
  #370 = Utf8               isStatic
  #371 = Utf8               (I)Z
  #372 = NameAndType        #370:#371     // isStatic:(I)Z
  #373 = Methodref          #369.#372     // java/lang/reflect/Modifier.isStatic:(I)Z
  #374 = Utf8               getName
  #375 = NameAndType        #374:#47      // getName:()Ljava/lang/String;
  #376 = Methodref          #120.#375     // java/lang/reflect/Method.getName:()Ljava/lang/String;
  #377 = Utf8               getParameterTypes
  #378 = Utf8               ()[Ljava/lang/Class;
  #379 = NameAndType        #377:#378     // getParameterTypes:()[Ljava/lang/Class;
  #380 = Methodref          #120.#379     // java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
  #381 = Utf8               isPrivate
  #382 = NameAndType        #381:#371     // isPrivate:(I)Z
  #383 = Methodref          #369.#382     // java/lang/reflect/Modifier.isPrivate:(I)Z
  #384 = Integer            2
  #385 = Utf8               $$
  #386 = String             #385          // $$
  #387 = Utf8               endsWith
  #388 = Utf8               (Ljava/lang/String;)Z
  #389 = NameAndType        #387:#388     // endsWith:(Ljava/lang/String;)Z
  #390 = Methodref          #202.#389     // java/lang/String.endsWith:(Ljava/lang/String;)Z
  #391 = NameAndType        #310:#311     // argsHaveValidTypes$1:(Lorg/scalatest/PrivateMethodTester$Invocation;[Ljava/lang/Class;)Z
  #392 = Methodref          #2.#391       // org/scalatest/PrivateMethodTester$Invoker.argsHaveValidTypes$1:(Lorg/scalatest/PrivateMethodTester$Invocation;[Ljava/lang/Class;)Z
  #393 = Utf8               isInstanceMethod
  #394 = Utf8               Z
  #395 = Utf8               simpleName
  #396 = Utf8               paramTypes
  #397 = Class              #360          // "[Ljava/lang/Class;"
  #398 = Utf8               $anonfun$invokePrivate$6
  #399 = Utf8               (Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Z
  #400 = NameAndType        #361:#362     // isMethodToInvoke$1:(Ljava/lang/reflect/Method;Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;)Z
  #401 = Methodref          #2.#400       // org/scalatest/PrivateMethodTester$Invoker.isMethodToInvoke$1:(Ljava/lang/reflect/Method;Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;)Z
  #402 = Utf8               (Lorg/scalatest/PrivateMethodTester;Ljava/lang/Object;)V
  #403 = Utf8               $outer
  #404 = Utf8               ()V
  #405 = NameAndType        #135:#404     // "<init>":()V
  #406 = Methodref          #4.#405       // java/lang/Object."<init>":()V
  #407 = Utf8               org/scalactic/Requirements$
  #408 = Class              #407          // org/scalactic/Requirements$
  #409 = Utf8               Lorg/scalactic/Requirements$;
  #410 = NameAndType        #52:#409      // MODULE$:Lorg/scalactic/Requirements$;
  #411 = Fieldref           #408.#410     // org/scalactic/Requirements$.MODULE$:Lorg/scalactic/Requirements$;
  #412 = Utf8               requirementsHelper
  #413 = Utf8               ()Lorg/scalactic/Requirements$RequirementsHelper;
  #414 = NameAndType        #412:#413     // requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
  #415 = Methodref          #408.#414     // org/scalactic/Requirements$.requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
  #416 = Utf8               Invoker.this.target
  #417 = String             #416          // Invoker.this.target
  #418 = Utf8               [Ljava/lang/String;
  #419 = Class              #418          // "[Ljava/lang/String;"
  #420 = Utf8               org/scalactic/Prettifier$
  #421 = Class              #420          // org/scalactic/Prettifier$
  #422 = Utf8               Lorg/scalactic/Prettifier$;
  #423 = NameAndType        #52:#422      // MODULE$:Lorg/scalactic/Prettifier$;
  #424 = Fieldref           #421.#423     // org/scalactic/Prettifier$.MODULE$:Lorg/scalactic/Prettifier$;
  #425 = Utf8               default
  #426 = Utf8               ()Lorg/scalactic/Prettifier;
  #427 = NameAndType        #425:#426     // default:()Lorg/scalactic/Prettifier;
  #428 = Methodref          #421.#427     // org/scalactic/Prettifier$.default:()Lorg/scalactic/Prettifier;
  #429 = Utf8               org/scalactic/source/Position
  #430 = Class              #429          // org/scalactic/source/Position
  #431 = String             #5            // PrivateMethodTester.scala
  #432 = Utf8               Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
  #433 = String             #432          // Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
  #434 = Utf8               (Ljava/lang/String;Ljava/lang/String;I)V
  #435 = NameAndType        #135:#434     // "<init>":(Ljava/lang/String;Ljava/lang/String;I)V
  #436 = Methodref          #430.#435     // org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
  #437 = Utf8               macroRequireNonNull
  #438 = Utf8               ([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #439 = NameAndType        #437:#438     // macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #440 = Methodref          #12.#439      // org/scalactic/Requirements$RequirementsHelper.macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #441 = Utf8               Lorg/scalatest/PrivateMethodTester;
  #442 = NameAndType        #398:#399     // $anonfun$invokePrivate$6:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Z
  #443 = Methodref          #2.#442       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$6:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Z
  #444 = Utf8               boxToBoolean
  #445 = Utf8               (Z)Ljava/lang/Boolean;
  #446 = NameAndType        #444:#445     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #447 = Methodref          #281.#446     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #448 = NameAndType        #207:#208     // $anonfun$invokePrivate$2:(Ljava/lang/Class;Ljava/lang/Object;)Z
  #449 = Methodref          #2.#448       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$2:(Ljava/lang/Class;Ljava/lang/Object;)Z
  #450 = NameAndType        #285:#286     // $anonfun$invokePrivate$3:(Lscala/Tuple2;)Z
  #451 = Methodref          #2.#450       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$3:(Lscala/Tuple2;)Z
  #452 = NameAndType        #291:#286     // $anonfun$invokePrivate$4:(Lscala/Tuple2;)Z
  #453 = Methodref          #2.#452       // org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$4:(Lscala/Tuple2;)Z
  #454 = Utf8               $deserializeLambda$
  #455 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #456 = Utf8               scala/runtime/LambdaDeserialize
  #457 = Class              #456          // scala/runtime/LambdaDeserialize
  #458 = Utf8               bootstrap
  #459 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #460 = NameAndType        #458:#459     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #461 = Methodref          #457.#460     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #462 = MethodHandle       6:#461        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #463 = Utf8               lambdaDeserialize
  #464 = NameAndType        #463:#455     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #465 = InvokeDynamic      #8:#464       // #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #466 = Utf8               Code
  #467 = Utf8               StackMapTable
  #468 = Utf8               LineNumberTable
  #469 = Utf8               LocalVariableTable
  #470 = Utf8               Signature
  #471 = Utf8               MethodParameters
  #472 = Utf8               InnerClasses
  #473 = Utf8               SourceFile
  #474 = Utf8               BootstrapMethods
  #475 = Utf8               ScalaInlineInfo
  #476 = Utf8               Scala
{
  private final java.lang.Object target;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public <T extends java.lang.Object> T invokePrivate(org.scalatest.PrivateMethodTester$Invocation<T>);
    descriptor: (Lorg/scalatest/PrivateMethodTester$Invocation;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=8, args_size=2
         0: aload_1
         1: invokevirtual #43                 // Method org/scalatest/PrivateMethodTester$Invocation.methodName:()Lscala/Symbol;
         4: invokevirtual #49                 // Method scala/Symbol.name:()Ljava/lang/String;
         7: astore_2
         8: getstatic     #55                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        11: getstatic     #60                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        14: aload_0
        15: getfield      #62                 // Field target:Ljava/lang/Object;
        18: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        21: invokevirtual #72                 // Method java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
        24: checkcast     #74                 // class "[Ljava/lang/Object;"
        27: invokevirtual #78                 // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        30: aload_1
        31: aload_2
        32: invokedynamic #100,  0            // InvokeDynamic #0:apply:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;)Lscala/Function1;
        37: invokevirtual #104                // Method scala/collection/ArrayOps$.withFilter$extension:(Ljava/lang/Object;Lscala/Function1;)Lscala/collection/ArrayOps$WithFilter;
        40: invokedynamic #113,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        45: getstatic     #118                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        48: ldc           #120                // class java/lang/reflect/Method
        50: invokevirtual #123                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        53: invokevirtual #127                // Method scala/collection/ArrayOps$WithFilter.map:(Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        56: checkcast     #129                // class "[Ljava/lang/reflect/Method;"
        59: astore_3
        60: aload_3
        61: arraylength
        62: iconst_0
        63: if_icmpne     95
        66: new           #131                // class java/lang/IllegalArgumentException
        69: dup
        70: new           #133                // class java/lang/StringBuilder
        73: dup
        74: ldc           #134                // int 35
        76: invokespecial #138                // Method java/lang/StringBuilder."<init>":(I)V
        79: ldc           #140                // String Can\'t find a private method named:
        81: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        84: aload_2
        85: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        88: invokevirtual #147                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        91: invokespecial #150                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        94: athrow
        95: aload_3
        96: arraylength
        97: iconst_1
        98: if_icmple     111
       101: new           #131                // class java/lang/IllegalArgumentException
       104: dup
       105: ldc           #152                // String Found two methods
       107: invokespecial #150                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       110: athrow
       111: aload_1
       112: invokevirtual #156                // Method org/scalatest/PrivateMethodTester$Invocation.args:()Lscala/collection/immutable/Seq;
       115: invokedynamic #161,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       120: invokeinterface #166,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       125: checkcast     #163                // class scala/collection/immutable/Seq
       128: astore        4
       130: aload_3
       131: iconst_0
       132: aaload
       133: astore        5
       135: aload         5
       137: iconst_1
       138: invokevirtual #170                // Method java/lang/reflect/Method.setAccessible:(Z)V
       141: aload         5
       143: aload_0
       144: getfield      #62                 // Field target:Ljava/lang/Object;
       147: aload         4
       149: getstatic     #118                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       152: invokevirtual #174                // Method scala/reflect/ClassTag$.AnyRef:()Lscala/reflect/ClassTag;
       155: invokeinterface #178,  2          // InterfaceMethod scala/collection/immutable/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
       160: checkcast     #74                 // class "[Ljava/lang/Object;"
       163: invokevirtual #182                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
       166: goto          189
       169: astore        6
       171: aload         6
       173: invokevirtual #186                // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
       176: astore        7
       178: aload         7
       180: ifnull        186
       183: aload         7
       185: athrow
       186: aload         6
       188: athrow
       189: areturn
      Exception table:
         from    to  target type
           141   166   169   Class java/lang/reflect/InvocationTargetException
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 95
          locals = [ class java/lang/String, class "[Ljava/lang/reflect/Method;" ]
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class org/scalatest/PrivateMethodTester$Invoker, class org/scalatest/PrivateMethodTester$Invocation, class java/lang/String, class "[Ljava/lang/reflect/Method;", class scala/collection/immutable/Seq, class java/lang/reflect/Method ]
          stack = [ class java/lang/reflect/InvocationTargetException ]
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ class java/lang/reflect/InvocationTargetException, class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/PrivateMethodTester$Invoker, class org/scalatest/PrivateMethodTester$Invocation, class java/lang/String, class "[Ljava/lang/reflect/Method;", class scala/collection/immutable/Seq, class java/lang/reflect/Method ]
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 163: 0
        line 243: 8
        line 246: 60
        line 247: 66
        line 248: 95
        line 249: 101
        line 252: 111
        line 257: 130
        line 258: 135
        line 260: 141
        line 264: 171
        line 265: 178
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          178      11     7 cause   Ljava/lang/Throwable;
          169      20     6     e   Ljava/lang/reflect/InvocationTargetException;
          130      59     4 anyRefArgs   Lscala/collection/immutable/Seq;
          135      54     5 privateMethodToInvoke   Ljava/lang/reflect/Method;
            8     181     2 methodNameToInvoke   Ljava/lang/String;
           60     129     3 methodArray   [Ljava/lang/reflect/Method;
            0     190     0  this   Lorg/scalatest/PrivateMethodTester$Invoker;
            0     190     1 invocation   Lorg/scalatest/PrivateMethodTester$Invocation;
    Signature: #36                          // <T:Ljava/lang/Object;>(Lorg/scalatest/PrivateMethodTester$Invocation<TT;>;)TT;
    MethodParameters:
      Name                           Flags
      invocation                     final

  public static final boolean $anonfun$invokePrivate$1();
    descriptor: ()Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 185: 0

  public static final boolean $anonfun$invokePrivate$2(java.lang.Class, java.lang.Object);
    descriptor: (Ljava/lang/Class;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=20, args_size=2
         0: aload_0
         1: astore_3
         2: getstatic     #216                // Field java/lang/Long.TYPE:Ljava/lang/Class;
         5: aload_3
         6: astore        4
         8: dup
         9: ifnonnull     21
        12: pop
        13: aload         4
        15: ifnull        29
        18: goto          67
        21: aload         4
        23: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        26: ifeq          67
        29: aload_1
        30: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        33: ldc           #212                // class java/lang/Long
        35: astore        5
        37: dup
        38: ifnonnull     50
        41: pop
        42: aload         5
        44: ifnull        58
        47: goto          62
        50: aload         5
        52: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: istore_2
        64: goto          558
        67: goto          70
        70: getstatic     #223                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
        73: aload_3
        74: astore        6
        76: dup
        77: ifnonnull     89
        80: pop
        81: aload         6
        83: ifnull        97
        86: goto          135
        89: aload         6
        91: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        94: ifeq          135
        97: aload_1
        98: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       101: ldc           #222                // class java/lang/Integer
       103: astore        7
       105: dup
       106: ifnonnull     118
       109: pop
       110: aload         7
       112: ifnull        126
       115: goto          130
       118: aload         7
       120: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       123: ifeq          130
       126: iconst_1
       127: goto          131
       130: iconst_0
       131: istore_2
       132: goto          558
       135: goto          138
       138: getstatic     #226                // Field java/lang/Short.TYPE:Ljava/lang/Class;
       141: aload_3
       142: astore        8
       144: dup
       145: ifnonnull     157
       148: pop
       149: aload         8
       151: ifnull        165
       154: goto          203
       157: aload         8
       159: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       162: ifeq          203
       165: aload_1
       166: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       169: ldc           #225                // class java/lang/Short
       171: astore        9
       173: dup
       174: ifnonnull     186
       177: pop
       178: aload         9
       180: ifnull        194
       183: goto          198
       186: aload         9
       188: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       191: ifeq          198
       194: iconst_1
       195: goto          199
       198: iconst_0
       199: istore_2
       200: goto          558
       203: goto          206
       206: getstatic     #229                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
       209: aload_3
       210: astore        10
       212: dup
       213: ifnonnull     225
       216: pop
       217: aload         10
       219: ifnull        233
       222: goto          271
       225: aload         10
       227: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       230: ifeq          271
       233: aload_1
       234: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       237: ldc           #228                // class java/lang/Byte
       239: astore        11
       241: dup
       242: ifnonnull     254
       245: pop
       246: aload         11
       248: ifnull        262
       251: goto          266
       254: aload         11
       256: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       259: ifeq          266
       262: iconst_1
       263: goto          267
       266: iconst_0
       267: istore_2
       268: goto          558
       271: goto          274
       274: getstatic     #232                // Field java/lang/Character.TYPE:Ljava/lang/Class;
       277: aload_3
       278: astore        12
       280: dup
       281: ifnonnull     293
       284: pop
       285: aload         12
       287: ifnull        301
       290: goto          339
       293: aload         12
       295: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       298: ifeq          339
       301: aload_1
       302: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       305: ldc           #231                // class java/lang/Character
       307: astore        13
       309: dup
       310: ifnonnull     322
       313: pop
       314: aload         13
       316: ifnull        330
       319: goto          334
       322: aload         13
       324: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       327: ifeq          334
       330: iconst_1
       331: goto          335
       334: iconst_0
       335: istore_2
       336: goto          558
       339: goto          342
       342: getstatic     #235                // Field java/lang/Double.TYPE:Ljava/lang/Class;
       345: aload_3
       346: astore        14
       348: dup
       349: ifnonnull     361
       352: pop
       353: aload         14
       355: ifnull        369
       358: goto          407
       361: aload         14
       363: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       366: ifeq          407
       369: aload_1
       370: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       373: ldc           #234                // class java/lang/Double
       375: astore        15
       377: dup
       378: ifnonnull     390
       381: pop
       382: aload         15
       384: ifnull        398
       387: goto          402
       390: aload         15
       392: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       395: ifeq          402
       398: iconst_1
       399: goto          403
       402: iconst_0
       403: istore_2
       404: goto          558
       407: goto          410
       410: getstatic     #238                // Field java/lang/Float.TYPE:Ljava/lang/Class;
       413: aload_3
       414: astore        16
       416: dup
       417: ifnonnull     429
       420: pop
       421: aload         16
       423: ifnull        437
       426: goto          475
       429: aload         16
       431: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       434: ifeq          475
       437: aload_1
       438: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       441: ldc           #237                // class java/lang/Float
       443: astore        17
       445: dup
       446: ifnonnull     458
       449: pop
       450: aload         17
       452: ifnull        466
       455: goto          470
       458: aload         17
       460: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       463: ifeq          470
       466: iconst_1
       467: goto          471
       470: iconst_0
       471: istore_2
       472: goto          558
       475: goto          478
       478: getstatic     #241                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
       481: aload_3
       482: astore        18
       484: dup
       485: ifnonnull     497
       488: pop
       489: aload         18
       491: ifnull        505
       494: goto          543
       497: aload         18
       499: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       502: ifeq          543
       505: aload_1
       506: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       509: ldc           #240                // class java/lang/Boolean
       511: astore        19
       513: dup
       514: ifnonnull     526
       517: pop
       518: aload         19
       520: ifnull        534
       523: goto          538
       526: aload         19
       528: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       531: ifeq          538
       534: iconst_1
       535: goto          539
       538: iconst_0
       539: istore_2
       540: goto          558
       543: goto          546
       546: aload_0
       547: aload_1
       548: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       551: invokevirtual #245                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       554: istore_2
       555: goto          558
       558: iload_2
       559: ireturn
      StackMapTable: number_of_entries = 65
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/Class, class java/lang/Object, top, class java/lang/Class, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, top, class java/lang/Class, class java/lang/Class ]
          stack = [ class java/lang/Class ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class java/lang/Class, class java/lang/Object, int, class java/lang/Class, class java/lang/Class ]
          stack = []
      LineNumberTable:
        line 186: 0
        line 187: 2
        line 188: 70
        line 189: 138
        line 190: 206
        line 191: 274
        line 192: 342
        line 193: 410
        line 194: 478
        line 195: 546
        line 186: 558
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     560     0 paramType$1   Ljava/lang/Class;
            0     560     1 anyRefArg   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      paramType$1                    final
      anyRefArg                      final

  private static final boolean argMatchesParamType$1(java.lang.Object, java.lang.Class);
    descriptor: (Ljava/lang/Object;Ljava/lang/Class;)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #254                // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokevirtual #257                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
         7: invokedynamic #265,  0            // InvokeDynamic #3:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
        12: aload_1
        13: invokedynamic #273,  0            // InvokeDynamic #4:apply:(Ljava/lang/Class;)Lscala/Function1;
        18: invokevirtual #279                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        21: invokestatic  #284                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        24: ireturn
      LineNumberTable:
        line 185: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0   arg   Ljava/lang/Object;
            0      25     1 paramType   Ljava/lang/Class;
    MethodParameters:
      Name                           Flags
      arg                            final
      paramType                      final

  public static final boolean $anonfun$invokePrivate$3(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final boolean $anonfun$invokePrivate$4(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        38
         6: aload_2
         7: invokevirtual #296                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: astore_3
        11: aload_2
        12: invokevirtual #299                // Method scala/Tuple2._2:()Ljava/lang/Object;
        15: checkcast     #68                 // class java/lang/Class
        18: astore        4
        20: aload_3
        21: aload         4
        23: invokestatic  #301                // Method argMatchesParamType$1:(Ljava/lang/Object;Ljava/lang/Class;)Z
        26: ifne          33
        29: iconst_1
        30: goto          34
        33: iconst_0
        34: istore_1
        35: goto          50
        38: goto          41
        41: new           #303                // class scala/MatchError
        44: dup
        45: aload_2
        46: invokespecial #306                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        49: athrow
        50: iload_1
        51: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class scala/Tuple2, top, class scala/Tuple2, class java/lang/Object, class java/lang/Class ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, int, class scala/Tuple2, class java/lang/Object, class java/lang/Class ]
          stack = []
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      27     3   arg   Ljava/lang/Object;
           20      18     4 paramType   Ljava/lang/Class;
            0      52     0   x$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.Object $anonfun$invokePrivate$5(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        16
         6: aload_2
         7: invokevirtual #296                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: astore_3
        11: aload_3
        12: astore_1
        13: goto          28
        16: goto          19
        19: new           #303                // class scala/MatchError
        22: dup
        23: aload_2
        24: invokespecial #306                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        27: athrow
        28: aload_1
        29: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class java/lang/Object, class scala/Tuple2, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11       5     3   arg   Ljava/lang/Object;
            0      30     0   x$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$2                            final

  private static final boolean argsHaveValidTypes$1(org.scalatest.PrivateMethodTester$Invocation, java.lang.Class[]);
    descriptor: (Lorg/scalatest/PrivateMethodTester$Invocation;[Ljava/lang/Class;)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #156                // Method org/scalatest/PrivateMethodTester$Invocation.args:()Lscala/collection/immutable/Seq;
         4: invokeinterface #317,  1          // InterfaceMethod scala/collection/immutable/Seq.length:()I
         9: aload_1
        10: arraylength
        11: if_icmpne     88
        14: aload_0
        15: invokevirtual #156                // Method org/scalatest/PrivateMethodTester$Invocation.args:()Lscala/collection/immutable/Seq;
        18: invokeinterface #321,  1          // InterfaceMethod scala/collection/immutable/Seq.toList:()Lscala/collection/immutable/List;
        23: getstatic     #60                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        26: aload_1
        27: checkcast     #74                 // class "[Ljava/lang/Object;"
        30: invokevirtual #325                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
        33: invokevirtual #326                // Method scala/collection/mutable/ArraySeq$ofRef.toList:()Lscala/collection/immutable/List;
        36: invokevirtual #332                // Method scala/collection/immutable/List.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        39: checkcast     #328                // class scala/collection/immutable/List
        42: astore_2
        43: aload_2
        44: invokedynamic #338,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        49: invokevirtual #342                // Method scala/collection/immutable/List.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        52: invokedynamic #347,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
        57: invokevirtual #350                // Method scala/collection/WithFilter.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        60: invokedynamic #354,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        65: invokevirtual #355                // Method scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
        68: checkcast     #328                // class scala/collection/immutable/List
        71: astore_3
        72: aload_3
        73: invokevirtual #356                // Method scala/collection/immutable/List.length:()I
        76: iconst_0
        77: if_icmpne     84
        80: iconst_1
        81: goto          85
        84: iconst_0
        85: goto          89
        88: iconst_0
        89: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 84
          locals = [ class scala/collection/immutable/List, class scala/collection/immutable/List ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 178: 0
        line 179: 14
        line 203: 43
        line 204: 72
        line 206: 88
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           43      42     2 zipped   Lscala/collection/immutable/List;
           72      13     3 invalidArgs   Lscala/collection/immutable/List;
            0      90     0 invocation$1   Lorg/scalatest/PrivateMethodTester$Invocation;
            0      90     1 paramTypes$1   [Ljava/lang/Class;
    MethodParameters:
      Name                           Flags
      invocation$1                   final
      paramTypes$1                   final

  private static final boolean isMethodToInvoke$1(java.lang.reflect.Method, org.scalatest.PrivateMethodTester$Invocation, java.lang.String);
    descriptor: (Ljava/lang/reflect/Method;Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=8, args_size=3
         0: aload_0
         1: invokevirtual #367                // Method java/lang/reflect/Method.getModifiers:()I
         4: invokestatic  #373                // Method java/lang/reflect/Modifier.isStatic:(I)Z
         7: ifne          14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: istore_3
        16: aload_0
        17: invokevirtual #376                // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
        20: astore        4
        22: aload_0
        23: invokevirtual #380                // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
        26: astore        5
        28: aload_0
        29: invokevirtual #367                // Method java/lang/reflect/Method.getModifiers:()I
        32: invokestatic  #383                // Method java/lang/reflect/Modifier.isPrivate:(I)Z
        35: istore        6
        37: iload_3
        38: ifeq          111
        41: aload         4
        43: aload_2
        44: astore        7
        46: dup
        47: ifnonnull     59
        50: pop
        51: aload         7
        53: ifnull        98
        56: goto          67
        59: aload         7
        61: invokevirtual #220                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        64: ifne          98
        67: aload         4
        69: new           #133                // class java/lang/StringBuilder
        72: dup
        73: ldc_w         #384                // int 2
        76: invokespecial #138                // Method java/lang/StringBuilder."<init>":(I)V
        79: ldc_w         #386                // String $$
        82: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        85: aload_2
        86: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        89: invokevirtual #147                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        92: invokevirtual #390                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        95: ifeq          111
        98: aload_1
        99: aload         5
       101: invokestatic  #392                // Method argsHaveValidTypes$1:(Lorg/scalatest/PrivateMethodTester$Invocation;[Ljava/lang/Class;)Z
       104: ifeq          111
       107: iconst_1
       108: goto          112
       111: iconst_0
       112: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class java/lang/reflect/Method, class org/scalatest/PrivateMethodTester$Invocation, class java/lang/String, int, class java/lang/String, class "[Ljava/lang/Class;", int, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 30 /* same */
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 167: 0
        line 168: 16
        line 169: 22
        line 170: 28
        line 237: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      96     3 isInstanceMethod   Z
           22      90     4 simpleName   Ljava/lang/String;
           28      84     5 paramTypes   [Ljava/lang/Class;
           37      75     6 isPrivate   Z
            0     113     0     m   Ljava/lang/reflect/Method;
            0     113     1 invocation$1   Lorg/scalatest/PrivateMethodTester$Invocation;
            0     113     2 methodNameToInvoke$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      m                              final
      invocation$1                   final
      methodNameToInvoke$1           final

  public static final boolean $anonfun$invokePrivate$6(org.scalatest.PrivateMethodTester$Invocation, java.lang.String, java.lang.reflect.Method);
    descriptor: (Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_2
         1: aload_0
         2: aload_1
         3: invokestatic  #401                // Method isMethodToInvoke$1:(Ljava/lang/reflect/Method;Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;)Z
         6: ireturn
      LineNumberTable:
        line 243: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 invocation$1   Lorg/scalatest/PrivateMethodTester$Invocation;
            0       7     1 methodNameToInvoke$1   Ljava/lang/String;
            0       7     2     m   Ljava/lang/reflect/Method;
    MethodParameters:
      Name                           Flags
      invocation$1                   final
      methodNameToInvoke$1           final
      m                              final

  public static final java.lang.reflect.Method $anonfun$invokePrivate$7(java.lang.reflect.Method);
    descriptor: (Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 244: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0     m   Ljava/lang/reflect/Method;
    MethodParameters:
      Name                           Flags
      m                              final

  public static final java.lang.Object $anonfun$invokePrivate$8(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: instanceof    #4                  // class java/lang/Object
         6: ifeq          16
         9: aload_2
        10: astore_3
        11: aload_3
        12: astore_1
        13: goto          59
        16: goto          19
        19: aload_2
        20: instanceof    #4                  // class java/lang/Object
        23: ifeq          35
        26: aload_2
        27: astore        4
        29: aload         4
        31: astore_1
        32: goto          59
        35: goto          38
        38: aload_2
        39: ifnonnull     47
        42: aconst_null
        43: astore_1
        44: goto          59
        47: goto          50
        50: new           #303                // class scala/MatchError
        53: dup
        54: aload_2
        55: invokespecial #306                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        58: athrow
        59: aload_1
        60: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 15 /* same */
        frame_type = 2 /* same */
        frame_type = 8 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 252: 0
        line 253: 2
        line 254: 19
        line 255: 38
        line 252: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0   arg   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      arg                            final

  public org.scalatest.PrivateMethodTester$Invoker(org.scalatest.PrivateMethodTester, java.lang.Object);
    descriptor: (Lorg/scalatest/PrivateMethodTester;Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #62                 // Field target:Ljava/lang/Object;
         5: aload_0
         6: invokespecial #406                // Method java/lang/Object."<init>":()V
         9: getstatic     #411                // Field org/scalactic/Requirements$.MODULE$:Lorg/scalactic/Requirements$;
        12: invokevirtual #415                // Method org/scalactic/Requirements$.requirementsHelper:()Lorg/scalactic/Requirements$RequirementsHelper;
        15: iconst_1
        16: anewarray     #202                // class java/lang/String
        19: dup
        20: iconst_0
        21: ldc_w         #417                // String Invoker.this.target
        24: aastore
        25: checkcast     #74                 // class "[Ljava/lang/Object;"
        28: checkcast     #419                // class "[Ljava/lang/String;"
        31: iconst_1
        32: anewarray     #4                  // class java/lang/Object
        35: dup
        36: iconst_0
        37: aload_2
        38: aastore
        39: checkcast     #74                 // class "[Ljava/lang/Object;"
        42: getstatic     #424                // Field org/scalactic/Prettifier$.MODULE$:Lorg/scalactic/Prettifier$;
        45: invokevirtual #428                // Method org/scalactic/Prettifier$.default:()Lorg/scalactic/Prettifier;
        48: new           #430                // class org/scalactic/source/Position
        51: dup
        52: ldc_w         #431                // String PrivateMethodTester.scala
        55: ldc_w         #433                // String Please set the environment variable SCALACTIC_FILL_FILE_PATHNAMES to yes at compile time to enable this feature.
        58: sipush        145
        61: invokespecial #436                // Method org/scalactic/source/Position."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
        64: invokevirtual #440                // Method org/scalactic/Requirements$RequirementsHelper.macroRequireNonNull:([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
        67: return
      LineNumberTable:
        line 143: 0
        line 271: 5
        line 145: 9
        line 143: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lorg/scalatest/PrivateMethodTester$Invoker;
            0      68     1 $outer   Lorg/scalatest/PrivateMethodTester;
            0      68     2 target   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      target                         final

  public static final java.lang.Object $anonfun$invokePrivate$6$adapted(org.scalatest.PrivateMethodTester$Invocation, java.lang.String, java.lang.reflect.Method);
    descriptor: (Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #443                // Method $anonfun$invokePrivate$6:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Z
         6: invokestatic  #447                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 243: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 invocation$1   Lorg/scalatest/PrivateMethodTester$Invocation;
            0      10     1 methodNameToInvoke$1   Ljava/lang/String;
            0      10     2     m   Ljava/lang/reflect/Method;
    MethodParameters:
      Name                           Flags
      invocation$1                   final
      methodNameToInvoke$1           final
      m                              final

  public static final java.lang.Object $anonfun$invokePrivate$2$adapted(java.lang.Class, java.lang.Object);
    descriptor: (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #449                // Method $anonfun$invokePrivate$2:(Ljava/lang/Class;Ljava/lang/Object;)Z
         5: invokestatic  #447                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 185: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 paramType$1   Ljava/lang/Class;
            0       9     1 anyRefArg   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      paramType$1                    final
      anyRefArg                      final

  public static final java.lang.Object $anonfun$invokePrivate$3$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #451                // Method $anonfun$invokePrivate$3:(Lscala/Tuple2;)Z
         4: invokestatic  #447                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final java.lang.Object $anonfun$invokePrivate$4$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #453                // Method $anonfun$invokePrivate$4:(Lscala/Tuple2;)Z
         4: invokestatic  #447                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #465,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // RequirementsHelper=class org/scalactic/Requirements$RequirementsHelper of class org/scalactic/Requirements
  public final #20= #17 of #19;           // Invocation=class org/scalatest/PrivateMethodTester$Invocation of class org/scalatest/PrivateMethodTester
  public final #21= #2 of #19;            // Invoker=class org/scalatest/PrivateMethodTester$Invoker of class org/scalatest/PrivateMethodTester
  public static #26= #23 of #25;          // WithFilter=class scala/collection/ArrayOps$WithFilter of class scala/collection/ArrayOps
  public static final #31= #28 of #30;    // ofRef=class scala/collection/mutable/ArraySeq$ofRef of class scala/collection/mutable/ArraySeq
SourceFile: "PrivateMethodTester.scala"
BootstrapMethods:
  0: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #85 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$6$adapted:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Ljava/lang/Object;
      #87 (Ljava/lang/reflect/Method;)Ljava/lang/Object;
      #88 5
      #89 1
      #87 (Ljava/lang/reflect/Method;)Ljava/lang/Object;
  1: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #109 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$7:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      #110 (Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      #88 5
      #89 1
      #110 (Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
  2: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #160 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$8:(Ljava/lang/Object;)Ljava/lang/Object;
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #89 1
  3: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #258 ()Z
      #261 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$1:()Z
      #258 ()Z
      #89 1
  4: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #270 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$2$adapted:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #89 1
  5: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #336 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #337 (Lscala/Tuple2;)Ljava/lang/Object;
      #88 5
      #89 1
      #337 (Lscala/Tuple2;)Ljava/lang/Object;
  6: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #346 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #337 (Lscala/Tuple2;)Ljava/lang/Object;
      #88 5
      #89 1
      #337 (Lscala/Tuple2;)Ljava/lang/Object;
  7: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #80 (Ljava/lang/Object;)Ljava/lang/Object;
      #353 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$5:(Lscala/Tuple2;)Ljava/lang/Object;
      #337 (Lscala/Tuple2;)Ljava/lang/Object;
      #88 5
      #89 1
      #337 (Lscala/Tuple2;)Ljava/lang/Object;
  8: #462 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #261 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$1:()Z
      #270 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$2$adapted:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      #336 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #346 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #353 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$5:(Lscala/Tuple2;)Ljava/lang/Object;
      #85 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$6$adapted:(Lorg/scalatest/PrivateMethodTester$Invocation;Ljava/lang/String;Ljava/lang/reflect/Method;)Ljava/lang/Object;
      #109 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$7:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      #160 REF_invokeStatic org/scalatest/PrivateMethodTester$Invoker.$anonfun$invokePrivate$8:(Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 01 00 11 00 CD 00 CE 01 00 CF 00 D0 01 01 0A
   01 0B 01 01 1D 01 1E 01 01 4D 01 34 01 01 23 01
   1E 01 01 57 01 34 01 01 33 01 34 01 01 8E 01 8F
   01 00 51 00 52 01 00 69 00 6A 01 00 9D 00 4F 01
   00 87 01 92 01 00 F6 00 F7 01 01 36 01 37 01 00
   22 00 23 01 01 69 01 6A 01
  Scala: length = 0x0 (unknown attribute)

