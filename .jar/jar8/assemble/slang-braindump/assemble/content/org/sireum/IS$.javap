Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/IS$.class
  Last modified May 29, 2022; size 6662 bytes
  SHA-256 checksum 3f4a864d76b60a097ee1da2378c327f7eb6c5ca5cb45f5282953462a3a3b95ac
  Compiled from "IS.scala"
public final class org.sireum.IS$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/IS$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 12, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/IS$
    #2 = Class              #1            // org/sireum/IS$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               IS.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/Z$MP$
   #12 = Class              #11           // org/sireum/Z$MP$
   #13 = Utf8               org/sireum/Z
   #14 = Class              #13           // org/sireum/Z
   #15 = Utf8               MP$
   #16 = Utf8               MODULE$
   #17 = Utf8               Lorg/sireum/IS$;
   #18 = Utf8               <clinit>
   #19 = Utf8               ()V
   #20 = Utf8               <init>
   #21 = NameAndType        #20:#19       // "<init>":()V
   #22 = Methodref          #2.#21        // org/sireum/IS$."<init>":()V
   #23 = NameAndType        #16:#17       // MODULE$:Lorg/sireum/IS$;
   #24 = Fieldref           #2.#23        // org/sireum/IS$.MODULE$:Lorg/sireum/IS$;
   #25 = Utf8               checkSize
   #26 = Utf8               (Lorg/sireum/Z;Lorg/sireum/$ZCompanion;)V
   #27 = Utf8               <I:Ljava/lang/Object;>(Lorg/sireum/Z;Lorg/sireum/$ZCompanion<TI;>;)V
   #28 = Utf8               size
   #29 = Utf8               companion
   #30 = Utf8               scala/Predef$
   #31 = Class              #30           // scala/Predef$
   #32 = Utf8               Lscala/Predef$;
   #33 = NameAndType        #16:#32       // MODULE$:Lscala/Predef$;
   #34 = Fieldref           #31.#33       // scala/Predef$.MODULE$:Lscala/Predef$;
   #35 = Utf8               org/sireum/B$
   #36 = Class              #35           // org/sireum/B$
   #37 = Utf8               Lorg/sireum/B$;
   #38 = NameAndType        #16:#37       // MODULE$:Lorg/sireum/B$;
   #39 = Fieldref           #36.#38       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #40 = Utf8               Lorg/sireum/Z$MP$;
   #41 = NameAndType        #16:#40       // MODULE$:Lorg/sireum/Z$MP$;
   #42 = Fieldref           #12.#41       // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
   #43 = Utf8               zero
   #44 = Utf8               ()Lorg/sireum/Z;
   #45 = NameAndType        #43:#44       // zero:()Lorg/sireum/Z;
   #46 = Methodref          #12.#45       // org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
   #47 = Utf8               $less$eq
   #48 = Utf8               (Lorg/sireum/Z;)Z
   #49 = NameAndType        #47:#48       // $less$eq:(Lorg/sireum/Z;)Z
   #50 = InterfaceMethodref #14.#49       // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
   #51 = Utf8               $4B
   #52 = Utf8               (Z)Z
   #53 = NameAndType        #51:#52       // $4B:(Z)Z
   #54 = Methodref          #36.#53       // org/sireum/B$.$4B:(Z)Z
   #55 = Utf8               ()Ljava/lang/Object;
   #56 = MethodType         #55           //  ()Ljava/lang/Object;
   #57 = Utf8               $anonfun$checkSize$1
   #58 = Utf8               ()Ljava/lang/String;
   #59 = NameAndType        #57:#58       // $anonfun$checkSize$1:()Ljava/lang/String;
   #60 = Methodref          #2.#59        // org/sireum/IS$.$anonfun$checkSize$1:()Ljava/lang/String;
   #61 = MethodHandle       6:#60         // REF_invokeStatic org/sireum/IS$.$anonfun$checkSize$1:()Ljava/lang/String;
   #62 = MethodType         #58           //  ()Ljava/lang/String;
   #63 = Integer            5
   #64 = Integer            1
   #65 = Utf8               java/lang/invoke/LambdaMetafactory
   #66 = Class              #65           // java/lang/invoke/LambdaMetafactory
   #67 = Utf8               altMetafactory
   #68 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #69 = NameAndType        #67:#68       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #70 = Methodref          #66.#69       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #71 = MethodHandle       6:#70         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #72 = Utf8               apply
   #73 = Utf8               ()Lscala/Function0;
   #74 = NameAndType        #72:#73       // apply:()Lscala/Function0;
   #75 = InvokeDynamic      #0:#74        // #0:apply:()Lscala/Function0;
   #76 = Utf8               assert
   #77 = Utf8               (ZLscala/Function0;)V
   #78 = NameAndType        #76:#77       // assert:(ZLscala/Function0;)V
   #79 = Methodref          #31.#78       // scala/Predef$.assert:(ZLscala/Function0;)V
   #80 = Utf8               org/sireum/$ZCompanion
   #81 = Class              #80           // org/sireum/$ZCompanion
   #82 = Utf8               hasMax
   #83 = Utf8               ()Z
   #84 = NameAndType        #82:#83       // hasMax:()Z
   #85 = InterfaceMethodref #81.#84       // org/sireum/$ZCompanion.hasMax:()Z
   #86 = Utf8               Index
   #87 = NameAndType        #86:#55       // Index:()Ljava/lang/Object;
   #88 = InterfaceMethodref #81.#87       // org/sireum/$ZCompanion.Index:()Ljava/lang/Object;
   #89 = Utf8               org/sireum/ZLike
   #90 = Class              #89           // org/sireum/ZLike
   #91 = Utf8               toMP
   #92 = NameAndType        #91:#44       // toMP:()Lorg/sireum/Z;
   #93 = InterfaceMethodref #90.#92       // org/sireum/ZLike.toMP:()Lorg/sireum/Z;
   #94 = Utf8               $plus
   #95 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #96 = NameAndType        #94:#95       // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #97 = InterfaceMethodref #14.#96       // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #98 = Utf8               org/sireum/Z$
   #99 = Class              #98           // org/sireum/Z$
  #100 = Utf8               Lorg/sireum/Z$;
  #101 = NameAndType        #16:#100      // MODULE$:Lorg/sireum/Z$;
  #102 = Fieldref           #99.#101      // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #103 = Utf8               (I)Lorg/sireum/Z;
  #104 = NameAndType        #72:#103      // apply:(I)Lorg/sireum/Z;
  #105 = Methodref          #99.#104      // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #106 = Utf8               $minus
  #107 = NameAndType        #106:#95      // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #108 = InterfaceMethodref #14.#107      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #109 = Utf8               Max
  #110 = NameAndType        #109:#55      // Max:()Ljava/lang/Object;
  #111 = InterfaceMethodref #81.#110      // org/sireum/$ZCompanion.Max:()Ljava/lang/Object;
  #112 = Utf8               $anonfun$checkSize$2
  #113 = Utf8               (Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Ljava/lang/String;
  #114 = NameAndType        #112:#113     // $anonfun$checkSize$2:(Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Ljava/lang/String;
  #115 = Methodref          #2.#114       // org/sireum/IS$.$anonfun$checkSize$2:(Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Ljava/lang/String;
  #116 = MethodHandle       6:#115        // REF_invokeStatic org/sireum/IS$.$anonfun$checkSize$2:(Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Ljava/lang/String;
  #117 = Utf8               (Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Lscala/Function0;
  #118 = NameAndType        #72:#117      // apply:(Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Lscala/Function0;
  #119 = InvokeDynamic      #1:#118       // #1:apply:(Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Lscala/Function0;
  #120 = Utf8               this
  #121 = Utf8               Lorg/sireum/Z;
  #122 = Utf8               Lorg/sireum/$ZCompanion;
  #123 = Utf8               (Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #124 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<TV;>;Lorg/sireum/$ZCompanion<TI;>;)Lorg/sireum/IS<TI;TV;>;
  #125 = Utf8               args
  #126 = Utf8               scala/collection/immutable/Seq
  #127 = Class              #126          // scala/collection/immutable/Seq
  #128 = Utf8               length
  #129 = Utf8               ()I
  #130 = NameAndType        #128:#129     // length:()I
  #131 = InterfaceMethodref #127.#130     // scala/collection/immutable/Seq.length:()I
  #132 = Methodref          #12.#104      // org/sireum/Z$MP$.apply:(I)Lorg/sireum/Z;
  #133 = NameAndType        #25:#26       // checkSize:(Lorg/sireum/Z;Lorg/sireum/$ZCompanion;)V
  #134 = Methodref          #2.#133       // org/sireum/IS$.checkSize:(Lorg/sireum/Z;Lorg/sireum/$ZCompanion;)V
  #135 = Utf8               org/sireum/$internal/Boxer$
  #136 = Class              #135          // org/sireum/$internal/Boxer$
  #137 = Utf8               Lorg/sireum/$internal/Boxer$;
  #138 = NameAndType        #16:#137      // MODULE$:Lorg/sireum/$internal/Boxer$;
  #139 = Fieldref           #136.#138     // org/sireum/$internal/Boxer$.MODULE$:Lorg/sireum/$internal/Boxer$;
  #140 = Utf8               boxerSeq
  #141 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/$internal/Boxer;
  #142 = NameAndType        #140:#141     // boxerSeq:(Lscala/collection/immutable/Seq;)Lorg/sireum/$internal/Boxer;
  #143 = Methodref          #136.#142     // org/sireum/$internal/Boxer$.boxerSeq:(Lscala/collection/immutable/Seq;)Lorg/sireum/$internal/Boxer;
  #144 = Utf8               org/sireum/$internal/Boxer
  #145 = Class              #144          // org/sireum/$internal/Boxer
  #146 = Utf8               create
  #147 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #148 = NameAndType        #146:#147     // create:(Lorg/sireum/Z;)Ljava/lang/Object;
  #149 = InterfaceMethodref #145.#148     // org/sireum/$internal/Boxer.create:(Lorg/sireum/Z;)Ljava/lang/Object;
  #150 = Utf8               scala/runtime/ObjectRef
  #151 = Class              #150          // scala/runtime/ObjectRef
  #152 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #153 = NameAndType        #146:#152     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #154 = Methodref          #151.#153     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #155 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #156 = MethodType         #155          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #157 = Utf8               $anonfun$apply$1$adapted
  #158 = Utf8               (Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #159 = NameAndType        #157:#158     // $anonfun$apply$1$adapted:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #160 = Methodref          #2.#159       // org/sireum/IS$.$anonfun$apply$1$adapted:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #161 = MethodHandle       6:#160        // REF_invokeStatic org/sireum/IS$.$anonfun$apply$1$adapted:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #162 = Utf8               (Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #163 = NameAndType        #72:#162      // apply:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #164 = InvokeDynamic      #2:#163       // #2:apply:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #165 = Utf8               foreach
  #166 = Utf8               (Lscala/Function1;)V
  #167 = NameAndType        #165:#166     // foreach:(Lscala/Function1;)V
  #168 = InterfaceMethodref #127.#167     // scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
  #169 = Utf8               (Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)Lorg/sireum/IS;
  #170 = NameAndType        #72:#169      // apply:(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)Lorg/sireum/IS;
  #171 = Methodref          #2.#170       // org/sireum/IS$.apply:(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)Lorg/sireum/IS;
  #172 = Utf8               boxer
  #173 = Utf8               Lorg/sireum/$internal/Boxer;
  #174 = Utf8               a
  #175 = Utf8               Ljava/lang/Object;
  #176 = Utf8               i
  #177 = Utf8               Lscala/runtime/ObjectRef;
  #178 = Utf8               Lscala/collection/immutable/Seq;
  #179 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #180 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/Z;TV;Lorg/sireum/$ZCompanion<TI;>;)Lorg/sireum/IS<TI;TV;>;
  #181 = Utf8               default
  #182 = Utf8               (Ljava/lang/Object;)Lorg/sireum/$internal/Boxer;
  #183 = NameAndType        #172:#182     // boxer:(Ljava/lang/Object;)Lorg/sireum/$internal/Boxer;
  #184 = Methodref          #136.#183     // org/sireum/$internal/Boxer$.boxer:(Ljava/lang/Object;)Lorg/sireum/$internal/Boxer;
  #185 = Utf8               $less
  #186 = NameAndType        #185:#48      // $less:(Lorg/sireum/Z;)Z
  #187 = InterfaceMethodref #14.#186      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #188 = Utf8               store
  #189 = Utf8               (Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
  #190 = NameAndType        #188:#189     // store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
  #191 = InterfaceMethodref #145.#190     // org/sireum/$internal/Boxer.store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
  #192 = Utf8               increase
  #193 = NameAndType        #192:#44      // increase:()Lorg/sireum/Z;
  #194 = InterfaceMethodref #14.#193      // org/sireum/Z.increase:()Lorg/sireum/Z;
  #195 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/$ZCompanion<TI;>;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)Lorg/sireum/IS<TI;TV;>;
  #196 = Utf8               data
  #197 = Utf8               org/sireum/IS
  #198 = Class              #197          // org/sireum/IS
  #199 = Utf8               (Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
  #200 = NameAndType        #20:#199      // "<init>":(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
  #201 = Methodref          #198.#200     // org/sireum/IS."<init>":(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
  #202 = Utf8               unapplySeq
  #203 = Utf8               (Lorg/sireum/IS;)Lscala/Option;
  #204 = Utf8               <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TV;>;)Lscala/Option<Lscala/collection/immutable/Seq<TV;>;>;
  #205 = Utf8               o
  #206 = Utf8               scala/Some
  #207 = Class              #206          // scala/Some
  #208 = Utf8               elements
  #209 = Utf8               ()Lscala/collection/immutable/Seq;
  #210 = NameAndType        #208:#209     // elements:()Lscala/collection/immutable/Seq;
  #211 = Methodref          #198.#210     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #212 = Utf8               (Ljava/lang/Object;)V
  #213 = NameAndType        #20:#212      // "<init>":(Ljava/lang/Object;)V
  #214 = Methodref          #207.#213     // scala/Some."<init>":(Ljava/lang/Object;)V
  #215 = Utf8               Lorg/sireum/IS;
  #216 = Utf8               Slang IS requires a non-negative size.
  #217 = String             #216          // Slang IS requires a non-negative size.
  #218 = Utf8               companion$1
  #219 = Utf8               size$1
  #220 = Utf8               java/lang/StringBuilder
  #221 = Class              #220          // java/lang/StringBuilder
  #222 = Integer            87
  #223 = Utf8               (I)V
  #224 = NameAndType        #20:#223      // "<init>":(I)V
  #225 = Methodref          #221.#224     // java/lang/StringBuilder."<init>":(I)V
  #226 = Utf8               Slang IS requires its index (
  #227 = String             #226          // Slang IS requires its index (
  #228 = Utf8               append
  #229 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #230 = NameAndType        #228:#229     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #231 = Methodref          #221.#230     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #232 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #233 = NameAndType        #228:#232     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #234 = Methodref          #221.#233     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #235 = Utf8               ) plus its size (
  #236 = String             #235          // ) plus its size (
  #237 = Utf8               ) less than or equal to it max
  #238 = String             #237          // ) less than or equal to it max
  #239 = Utf8                plus one.
  #240 = String             #239          //  plus one.
  #241 = Utf8               toString
  #242 = NameAndType        #241:#58      // toString:()Ljava/lang/String;
  #243 = Methodref          #221.#242     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #244 = Utf8               $anonfun$apply$1
  #245 = Utf8               (Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #246 = Utf8               boxer$1
  #247 = Utf8               a$1
  #248 = Utf8               i$1
  #249 = Utf8               arg
  #250 = Utf8               elem
  #251 = NameAndType        #250:#175     // elem:Ljava/lang/Object;
  #252 = Fieldref           #151.#251     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #253 = Methodref          #4.#21        // java/lang/Object."<init>":()V
  #254 = NameAndType        #244:#245     // $anonfun$apply$1:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #255 = Methodref          #2.#254       // org/sireum/IS$.$anonfun$apply$1:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #256 = Utf8               scala/runtime/BoxedUnit
  #257 = Class              #256          // scala/runtime/BoxedUnit
  #258 = Utf8               UNIT
  #259 = Utf8               Lscala/runtime/BoxedUnit;
  #260 = NameAndType        #258:#259     // UNIT:Lscala/runtime/BoxedUnit;
  #261 = Fieldref           #257.#260     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #262 = Utf8               $deserializeLambda$
  #263 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #264 = Utf8               scala/runtime/LambdaDeserialize
  #265 = Class              #264          // scala/runtime/LambdaDeserialize
  #266 = Utf8               bootstrap
  #267 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #268 = NameAndType        #266:#267     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #269 = Methodref          #265.#268     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #270 = MethodHandle       6:#269        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #271 = Utf8               lambdaDeserialize
  #272 = NameAndType        #271:#263     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #273 = InvokeDynamic      #3:#272       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #274 = Utf8               Code
  #275 = Utf8               LineNumberTable
  #276 = Utf8               StackMapTable
  #277 = Utf8               LocalVariableTable
  #278 = Utf8               Signature
  #279 = Utf8               MethodParameters
  #280 = Utf8               InnerClasses
  #281 = Utf8               SourceFile
  #282 = Utf8               BootstrapMethods
  #283 = Utf8               ScalaInlineInfo
  #284 = Utf8               Scala
{
  public static final org.sireum.IS$ MODULE$;
    descriptor: Lorg/sireum/IS$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/IS$
         3: dup
         4: invokespecial #22                 // Method "<init>":()V
         7: putstatic     #24                 // Field MODULE$:Lorg/sireum/IS$;
        10: return
      LineNumberTable:
        line 30: 0

  public <I extends java.lang.Object> void checkSize(org.sireum.Z, org.sireum.$ZCompanion<I>);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/$ZCompanion;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: getstatic     #39                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: getstatic     #42                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
         9: invokevirtual #46                 // Method org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
        12: aload_1
        13: invokeinterface #50,  2           // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        18: invokevirtual #54                 // Method org/sireum/B$.$4B:(Z)Z
        21: invokedynamic #75,  0             // InvokeDynamic #0:apply:()Lscala/Function0;
        26: invokevirtual #79                 // Method scala/Predef$.assert:(ZLscala/Function0;)V
        29: getstatic     #34                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        32: aload_2
        33: invokeinterface #85,  1           // InterfaceMethod org/sireum/$ZCompanion.hasMax:()Z
        38: ifeq          101
        41: getstatic     #39                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        44: aload_2
        45: invokeinterface #88,  1           // InterfaceMethod org/sireum/$ZCompanion.Index:()Ljava/lang/Object;
        50: checkcast     #90                 // class org/sireum/ZLike
        53: invokeinterface #93,  1           // InterfaceMethod org/sireum/ZLike.toMP:()Lorg/sireum/Z;
        58: aload_1
        59: invokeinterface #97,  2           // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        64: getstatic     #102                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        67: iconst_1
        68: invokevirtual #105                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        71: invokeinterface #108,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        76: aload_2
        77: invokeinterface #111,  1          // InterfaceMethod org/sireum/$ZCompanion.Max:()Ljava/lang/Object;
        82: checkcast     #90                 // class org/sireum/ZLike
        85: invokeinterface #93,  1           // InterfaceMethod org/sireum/ZLike.toMP:()Lorg/sireum/Z;
        90: invokeinterface #50,  2           // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        95: invokevirtual #54                 // Method org/sireum/B$.$4B:(Z)Z
        98: ifeq          105
       101: iconst_1
       102: goto          106
       105: iconst_0
       106: aload_2
       107: aload_1
       108: invokedynamic #119,  0            // InvokeDynamic #1:apply:(Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Lscala/Function0;
       113: invokevirtual #79                 // Method scala/Predef$.assert:(ZLscala/Function0;)V
       116: return
      StackMapTable: number_of_entries = 3
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 101
          stack = [ class scala/Predef$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/IS$, class org/sireum/Z, class org/sireum/$ZCompanion ]
          stack = [ class scala/Predef$, int ]
      LineNumberTable:
        line 82: 0
        line 83: 29
        line 84: 32
        line 84: 76
        line 87: 106
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     117     0  this   Lorg/sireum/IS$;
            0     117     1  size   Lorg/sireum/Z;
            0     117     2 companion   Lorg/sireum/$ZCompanion;
    Signature: #27                          // <I:Ljava/lang/Object;>(Lorg/sireum/Z;Lorg/sireum/$ZCompanion<TI;>;)V
    MethodParameters:
      Name                           Flags
      size                           final
      companion                      final

  public <I extends java.lang.Object, V extends java.lang.Object> org.sireum.IS<I, V> apply(scala.collection.immutable.Seq<V>, org.sireum.$ZCompanion<I>);
    descriptor: (Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=3
         0: aload_0
         1: getstatic     #42                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
         4: aload_1
         5: invokeinterface #131,  1          // InterfaceMethod scala/collection/immutable/Seq.length:()I
        10: invokevirtual #132                // Method org/sireum/Z$MP$.apply:(I)Lorg/sireum/Z;
        13: aload_2
        14: invokevirtual #134                // Method checkSize:(Lorg/sireum/Z;Lorg/sireum/$ZCompanion;)V
        17: getstatic     #139                // Field org/sireum/$internal/Boxer$.MODULE$:Lorg/sireum/$internal/Boxer$;
        20: aload_1
        21: invokevirtual #143                // Method org/sireum/$internal/Boxer$.boxerSeq:(Lscala/collection/immutable/Seq;)Lorg/sireum/$internal/Boxer;
        24: astore_3
        25: getstatic     #42                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        28: aload_1
        29: invokeinterface #131,  1          // InterfaceMethod scala/collection/immutable/Seq.length:()I
        34: invokevirtual #132                // Method org/sireum/Z$MP$.apply:(I)Lorg/sireum/Z;
        37: astore        4
        39: aload_3
        40: aload         4
        42: invokeinterface #149,  2          // InterfaceMethod org/sireum/$internal/Boxer.create:(Lorg/sireum/Z;)Ljava/lang/Object;
        47: astore        5
        49: getstatic     #42                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        52: invokevirtual #46                 // Method org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
        55: invokestatic  #154                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        58: astore        6
        60: aload_1
        61: aload_3
        62: aload         5
        64: aload         6
        66: invokedynamic #164,  0            // InvokeDynamic #2:apply:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function1;
        71: invokeinterface #168,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
        76: aload_0
        77: aload_2
        78: aload         5
        80: aload         4
        82: aload_3
        83: invokevirtual #171                // Method apply:(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)Lorg/sireum/IS;
        86: areturn
      LineNumberTable:
        line 92: 0
        line 93: 17
        line 94: 25
        line 95: 39
        line 96: 49
        line 97: 60
        line 101: 76
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      61     3 boxer   Lorg/sireum/$internal/Boxer;
           39      47     4 length   Lorg/sireum/Z;
           49      37     5     a   Ljava/lang/Object;
           60      26     6     i   Lscala/runtime/ObjectRef;
            0      87     0  this   Lorg/sireum/IS$;
            0      87     1  args   Lscala/collection/immutable/Seq;
            0      87     2 companion   Lorg/sireum/$ZCompanion;
    Signature: #124                         // <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<TV;>;Lorg/sireum/$ZCompanion<TI;>;)Lorg/sireum/IS<TI;TV;>;
    MethodParameters:
      Name                           Flags
      args                           final
      companion                      final

  public <I extends java.lang.Object, V extends java.lang.Object> org.sireum.IS<I, V> create(org.sireum.Z, V, org.sireum.$ZCompanion<I>);
    descriptor: (Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=8, args_size=4
         0: aload_1
         1: astore        4
         3: aload_0
         4: aload         4
         6: aload_3
         7: invokevirtual #134                // Method checkSize:(Lorg/sireum/Z;Lorg/sireum/$ZCompanion;)V
        10: getstatic     #139                // Field org/sireum/$internal/Boxer$.MODULE$:Lorg/sireum/$internal/Boxer$;
        13: aload_2
        14: invokevirtual #184                // Method org/sireum/$internal/Boxer$.boxer:(Ljava/lang/Object;)Lorg/sireum/$internal/Boxer;
        17: astore        5
        19: aload         5
        21: aload         4
        23: invokeinterface #149,  2          // InterfaceMethod org/sireum/$internal/Boxer.create:(Lorg/sireum/Z;)Ljava/lang/Object;
        28: astore        6
        30: getstatic     #42                 // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        33: invokevirtual #46                 // Method org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
        36: astore        7
        38: getstatic     #39                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        41: aload         7
        43: aload         4
        45: invokeinterface #187,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        50: invokevirtual #54                 // Method org/sireum/B$.$4B:(Z)Z
        53: ifeq          80
        56: aload         5
        58: aload         6
        60: aload         7
        62: aload_2
        63: invokeinterface #191,  4          // InterfaceMethod org/sireum/$internal/Boxer.store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
        68: aload         7
        70: invokeinterface #194,  1          // InterfaceMethod org/sireum/Z.increase:()Lorg/sireum/Z;
        75: astore        7
        77: goto          38
        80: aload_0
        81: aload_3
        82: aload         6
        84: aload         4
        86: aload         5
        88: invokevirtual #171                // Method apply:(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)Lorg/sireum/IS;
        91: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class org/sireum/IS$, class org/sireum/Z, class java/lang/Object, class org/sireum/$ZCompanion, class org/sireum/Z, class org/sireum/$internal/Boxer, class java/lang/Object, class org/sireum/Z ]
          stack = []
        frame_type = 41 /* same */
      LineNumberTable:
        line 105: 0
        line 106: 3
        line 107: 10
        line 108: 19
        line 109: 30
        line 110: 38
        line 111: 56
        line 112: 68
        line 110: 77
        line 114: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      88     4 length   Lorg/sireum/Z;
           19      72     5 boxer   Lorg/sireum/$internal/Boxer;
           30      61     6     a   Ljava/lang/Object;
           38      53     7     i   Lorg/sireum/Z;
            0      92     0  this   Lorg/sireum/IS$;
            0      92     1  size   Lorg/sireum/Z;
            0      92     2 default   Ljava/lang/Object;
            0      92     3 companion   Lorg/sireum/$ZCompanion;
    Signature: #180                         // <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/Z;TV;Lorg/sireum/$ZCompanion<TI;>;)Lorg/sireum/IS<TI;TV;>;
    MethodParameters:
      Name                           Flags
      size                           final
      default                        final
      companion                      final

  public <I extends java.lang.Object, V extends java.lang.Object> org.sireum.IS<I, V> apply(org.sireum.$ZCompanion<I>, java.lang.Object, org.sireum.Z, org.sireum.$internal.Boxer);
    descriptor: (Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: new           #198                // class org/sireum/IS
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: invokespecial #201                // Method org/sireum/IS."<init>":(Lorg/sireum/$ZCompanion;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)V
        12: areturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/IS$;
            0      13     1 companion   Lorg/sireum/$ZCompanion;
            0      13     2  data   Ljava/lang/Object;
            0      13     3 length   Lorg/sireum/Z;
            0      13     4 boxer   Lorg/sireum/$internal/Boxer;
    Signature: #195                         // <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/$ZCompanion<TI;>;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/$internal/Boxer;)Lorg/sireum/IS<TI;TV;>;
    MethodParameters:
      Name                           Flags
      companion                      final
      data                           final
      length                         final
      boxer                          final

  public <I extends java.lang.Object, V extends java.lang.Object> scala.Option<scala.collection.immutable.Seq<V>> unapplySeq(org.sireum.IS<I, V>);
    descriptor: (Lorg/sireum/IS;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #207                // class scala/Some
         3: dup
         4: aload_1
         5: invokevirtual #211                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
         8: invokespecial #214                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/IS$;
            0      12     1     o   Lorg/sireum/IS;
    Signature: #204                         // <I:Ljava/lang/Object;V:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TV;>;)Lscala/Option<Lscala/collection/immutable/Seq<TV;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static final java.lang.String $anonfun$checkSize$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc           #217                // String Slang IS requires a non-negative size.
         2: areturn
      LineNumberTable:
        line 82: 0

  public static final java.lang.String $anonfun$checkSize$2(org.sireum.$ZCompanion, org.sireum.Z);
    descriptor: (Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #221                // class java/lang/StringBuilder
         3: dup
         4: ldc           #222                // int 87
         6: invokespecial #225                // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #227                // String Slang IS requires its index (
        11: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_0
        15: invokeinterface #88,  1           // InterfaceMethod org/sireum/$ZCompanion.Index:()Ljava/lang/Object;
        20: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        23: ldc           #236                // String ) plus its size (
        25: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: aload_1
        29: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        32: ldc           #238                // String ) less than or equal to it max
        34: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: aload_0
        38: invokeinterface #111,  1          // InterfaceMethod org/sireum/$ZCompanion.Max:()Ljava/lang/Object;
        43: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        46: ldc           #240                // String  plus one.
        48: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        51: invokevirtual #243                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        54: areturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0 companion$1   Lorg/sireum/$ZCompanion;
            0      55     1 size$1   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      companion$1                    final
      size$1                         final

  public static final void $anonfun$apply$1(org.sireum.$internal.Boxer, java.lang.Object, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: getfield      #252                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         6: checkcast     #14                 // class org/sireum/Z
         9: aload_3
        10: invokeinterface #191,  4          // InterfaceMethod org/sireum/$internal/Boxer.store:(Ljava/lang/Object;Lorg/sireum/Z;Ljava/lang/Object;)V
        15: aload_2
        16: aload_2
        17: getfield      #252                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        20: checkcast     #14                 // class org/sireum/Z
        23: invokeinterface #194,  1          // InterfaceMethod org/sireum/Z.increase:()Lorg/sireum/Z;
        28: putfield      #252                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        31: return
      LineNumberTable:
        line 98: 0
        line 99: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0 boxer$1   Lorg/sireum/$internal/Boxer;
            0      32     1   a$1   Ljava/lang/Object;
            0      32     2   i$1   Lscala/runtime/ObjectRef;
            0      32     3   arg   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      boxer$1                        final
      a$1                            final
      i$1                            final
      arg                            final

  private org.sireum.IS$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #253                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/IS$;

  public static final java.lang.Object $anonfun$apply$1$adapted(org.sireum.$internal.Boxer, java.lang.Object, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #255                // Method $anonfun$apply$1:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         7: getstatic     #261                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        10: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 boxer$1   Lorg/sireum/$internal/Boxer;
            0      11     1   a$1   Ljava/lang/Object;
            0      11     2   i$1   Lscala/runtime/ObjectRef;
            0      11     3   arg   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      boxer$1                        final
      a$1                            final
      i$1                            final
      arg                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #273,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
SourceFile: "IS.scala"
BootstrapMethods:
  0: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #56 ()Ljava/lang/Object;
      #61 REF_invokeStatic org/sireum/IS$.$anonfun$checkSize$1:()Ljava/lang/String;
      #62 ()Ljava/lang/String;
      #63 5
      #64 1
      #62 ()Ljava/lang/String;
  1: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #56 ()Ljava/lang/Object;
      #116 REF_invokeStatic org/sireum/IS$.$anonfun$checkSize$2:(Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Ljava/lang/String;
      #62 ()Ljava/lang/String;
      #63 5
      #64 1
      #62 ()Ljava/lang/String;
  2: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #156 (Ljava/lang/Object;)Ljava/lang/Object;
      #161 REF_invokeStatic org/sireum/IS$.$anonfun$apply$1$adapted:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #156 (Ljava/lang/Object;)Ljava/lang/Object;
      #64 1
  3: #270 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #161 REF_invokeStatic org/sireum/IS$.$anonfun$apply$1$adapted:(Lorg/sireum/$internal/Boxer;Ljava/lang/Object;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #61 REF_invokeStatic org/sireum/IS$.$anonfun$checkSize$1:()Ljava/lang/String;
      #116 REF_invokeStatic org/sireum/IS$.$anonfun$checkSize$2:(Lorg/sireum/$ZCompanion;Lorg/sireum/Z;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 01 00 0A 00 F4 00 F5 01 00 9D 00 9E 01 00 39
   00 3A 01 00 70 00 71 01 00 14 00 13 01 00 48 00
   A9 01 00 48 00 7B 01 00 19 00 1A 01 00 92 00 B3
   01 00 CA 00 CB 01
  Scala: length = 0x0 (unknown attribute)

