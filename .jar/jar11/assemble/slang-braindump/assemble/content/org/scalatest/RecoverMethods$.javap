Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/RecoverMethods$.class
  Last modified May 29, 2022; size 2468 bytes
  SHA-256 checksum b76f52632e7b23fe0f232ff16ca4b6cecc79e54c9c3be21744dfe0e70da36236
  Compiled from "RecoverMethods.scala"
public final class org.scalatest.RecoverMethods$ implements org.scalatest.RecoverMethods
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/RecoverMethods$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 5, attributes: 3
Constant pool:
   #1 = Utf8               org/scalatest/RecoverMethods$
   #2 = Class              #1             // org/scalatest/RecoverMethods$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               org/scalatest/RecoverMethods
   #6 = Class              #5             // org/scalatest/RecoverMethods
   #7 = Utf8               RecoverMethods.scala
   #8 = Utf8               MODULE$
   #9 = Utf8               Lorg/scalatest/RecoverMethods$;
  #10 = Utf8               <clinit>
  #11 = Utf8               ()V
  #12 = Utf8               <init>
  #13 = NameAndType        #12:#11        // "<init>":()V
  #14 = Methodref          #2.#13         // org/scalatest/RecoverMethods$."<init>":()V
  #15 = NameAndType        #8:#9          // MODULE$:Lorg/scalatest/RecoverMethods$;
  #16 = Fieldref           #2.#15         // org/scalatest/RecoverMethods$.MODULE$:Lorg/scalatest/RecoverMethods$;
  #17 = Utf8               $init$
  #18 = Utf8               (Lorg/scalatest/RecoverMethods;)V
  #19 = NameAndType        #17:#18        // $init$:(Lorg/scalatest/RecoverMethods;)V
  #20 = InterfaceMethodref #6.#19         // org/scalatest/RecoverMethods.$init$:(Lorg/scalatest/RecoverMethods;)V
  #21 = Utf8               recoverToExceptionIf
  #22 = Utf8               (Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
  #23 = Utf8               <T:Ljava/lang/Object;>(Lscala/concurrent/Future<Ljava/lang/Object;>;Lscala/reflect/ClassTag<TT;>;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future<TT;>;
  #24 = Utf8               future
  #25 = Utf8               classTag
  #26 = Utf8               exCtx
  #27 = Utf8               pos
  #28 = Utf8               recoverToExceptionIf$
  #29 = Utf8               (Lorg/scalatest/RecoverMethods;Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
  #30 = NameAndType        #28:#29        // recoverToExceptionIf$:(Lorg/scalatest/RecoverMethods;Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
  #31 = InterfaceMethodref #6.#30         // org/scalatest/RecoverMethods.recoverToExceptionIf$:(Lorg/scalatest/RecoverMethods;Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
  #32 = Utf8               this
  #33 = Utf8               Lscala/concurrent/Future;
  #34 = Utf8               Lscala/reflect/ClassTag;
  #35 = Utf8               Lscala/concurrent/ExecutionContext;
  #36 = Utf8               Lorg/scalactic/source/Position;
  #37 = Utf8               recoverToSucceededIf
  #38 = Utf8               <T:Ljava/lang/Object;>(Lscala/concurrent/Future<Ljava/lang/Object;>;Lscala/reflect/ClassTag<TT;>;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future<Lorg/scalatest/compatible/Assertion;>;
  #39 = Utf8               recoverToSucceededIf$
  #40 = NameAndType        #39:#29        // recoverToSucceededIf$:(Lorg/scalatest/RecoverMethods;Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
  #41 = InterfaceMethodref #6.#40         // org/scalatest/RecoverMethods.recoverToSucceededIf$:(Lorg/scalatest/RecoverMethods;Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
  #42 = Utf8               newAssertionFailedExceptionForRecover
  #43 = Utf8               (Lscala/Option;Lscala/Option;Lorg/scalactic/source/Position;)Ljava/lang/Throwable;
  #44 = Utf8               (Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/Throwable;>;Lorg/scalactic/source/Position;)Ljava/lang/Throwable;
  #45 = Utf8               optionalMessage
  #46 = Utf8               optionalCause
  #47 = Utf8               newAssertionFailedExceptionForRecover$
  #48 = Utf8               (Lorg/scalatest/RecoverMethods;Lscala/Option;Lscala/Option;Lorg/scalactic/source/Position;)Ljava/lang/Throwable;
  #49 = NameAndType        #47:#48        // newAssertionFailedExceptionForRecover$:(Lorg/scalatest/RecoverMethods;Lscala/Option;Lscala/Option;Lorg/scalactic/source/Position;)Ljava/lang/Throwable;
  #50 = InterfaceMethodref #6.#49         // org/scalatest/RecoverMethods.newAssertionFailedExceptionForRecover$:(Lorg/scalatest/RecoverMethods;Lscala/Option;Lscala/Option;Lorg/scalactic/source/Position;)Ljava/lang/Throwable;
  #51 = Utf8               Lscala/Option;
  #52 = Methodref          #4.#13         // java/lang/Object."<init>":()V
  #53 = Utf8               Code
  #54 = Utf8               LineNumberTable
  #55 = Utf8               LocalVariableTable
  #56 = Utf8               Signature
  #57 = Utf8               MethodParameters
  #58 = Utf8               SourceFile
  #59 = Utf8               ScalaInlineInfo
  #60 = Utf8               Scala
{
  public static final org.scalatest.RecoverMethods$ MODULE$;
    descriptor: Lorg/scalatest/RecoverMethods$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/scalatest/RecoverMethods$
         3: dup
         4: invokespecial #14                 // Method "<init>":()V
         7: putstatic     #16                 // Field MODULE$:Lorg/scalatest/RecoverMethods$;
        10: getstatic     #16                 // Field MODULE$:Lorg/scalatest/RecoverMethods$;
        13: invokestatic  #20                 // InterfaceMethod org/scalatest/RecoverMethods.$init$:(Lorg/scalatest/RecoverMethods;)V
        16: return
      LineNumberTable:
        line 222: 0

  public <T extends java.lang.Object> scala.concurrent.Future<T> recoverToExceptionIf(scala.concurrent.Future<java.lang.Object>, scala.reflect.ClassTag<T>, scala.concurrent.ExecutionContext, org.scalactic.source.Position);
    descriptor: (Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #31                 // InterfaceMethod org/scalatest/RecoverMethods.recoverToExceptionIf$:(Lorg/scalatest/RecoverMethods;Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
         9: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalatest/RecoverMethods$;
            0      10     1 future   Lscala/concurrent/Future;
            0      10     2 classTag   Lscala/reflect/ClassTag;
            0      10     3 exCtx   Lscala/concurrent/ExecutionContext;
            0      10     4   pos   Lorg/scalactic/source/Position;
    Signature: #23                          // <T:Ljava/lang/Object;>(Lscala/concurrent/Future<Ljava/lang/Object;>;Lscala/reflect/ClassTag<TT;>;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future<TT;>;
    MethodParameters:
      Name                           Flags
      future                         final
      classTag                       final
      exCtx                          final
      pos                            final

  public <T extends java.lang.Object> scala.concurrent.Future<org.scalatest.compatible.Assertion> recoverToSucceededIf(scala.concurrent.Future<java.lang.Object>, scala.reflect.ClassTag<T>, scala.concurrent.ExecutionContext, org.scalactic.source.Position);
    descriptor: (Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #41                 // InterfaceMethod org/scalatest/RecoverMethods.recoverToSucceededIf$:(Lorg/scalatest/RecoverMethods;Lscala/concurrent/Future;Lscala/reflect/ClassTag;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future;
         9: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalatest/RecoverMethods$;
            0      10     1 future   Lscala/concurrent/Future;
            0      10     2 classTag   Lscala/reflect/ClassTag;
            0      10     3 exCtx   Lscala/concurrent/ExecutionContext;
            0      10     4   pos   Lorg/scalactic/source/Position;
    Signature: #38                          // <T:Ljava/lang/Object;>(Lscala/concurrent/Future<Ljava/lang/Object;>;Lscala/reflect/ClassTag<TT;>;Lscala/concurrent/ExecutionContext;Lorg/scalactic/source/Position;)Lscala/concurrent/Future<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      future                         final
      classTag                       final
      exCtx                          final
      pos                            final

  public java.lang.Throwable newAssertionFailedExceptionForRecover(scala.Option<java.lang.String>, scala.Option<java.lang.Throwable>, org.scalactic.source.Position);
    descriptor: (Lscala/Option;Lscala/Option;Lorg/scalactic/source/Position;)Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #50                 // InterfaceMethod org/scalatest/RecoverMethods.newAssertionFailedExceptionForRecover$:(Lorg/scalatest/RecoverMethods;Lscala/Option;Lscala/Option;Lorg/scalactic/source/Position;)Ljava/lang/Throwable;
         7: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/RecoverMethods$;
            0       8     1 optionalMessage   Lscala/Option;
            0       8     2 optionalCause   Lscala/Option;
            0       8     3   pos   Lorg/scalactic/source/Position;
    Signature: #44                          // (Lscala/Option<Ljava/lang/String;>;Lscala/Option<Ljava/lang/Throwable;>;Lorg/scalactic/source/Position;)Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      optionalMessage                final
      optionalCause                  final
      pos                            final

  private org.scalatest.RecoverMethods$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #52                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/RecoverMethods$;
}
SourceFile: "RecoverMethods.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 01 00 04 00 0C 00 0B 01 00 2A 00 2B 01 00 15
   00 16 01 00 25 00 16 01
  Scala: length = 0x0 (unknown attribute)

