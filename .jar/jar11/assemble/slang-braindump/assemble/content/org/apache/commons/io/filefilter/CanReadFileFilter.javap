Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/filefilter/CanReadFileFilter.class
  Last modified May 29, 2022; size 1243 bytes
  SHA-256 checksum 33f24352661612a6c34a8c67a3f4257a065cab3b6b0ebf8bf745b9c1afac21cc
  Compiled from "CanReadFileFilter.java"
public class org.apache.commons.io.filefilter.CanReadFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #3                          // org/apache/commons/io/filefilter/CanReadFileFilter
  super_class: #13                        // org/apache/commons/io/filefilter/AbstractFileFilter
  interfaces: 1, fields: 4, methods: 3, attributes: 1
Constant pool:
   #1 = Methodref          #13.#38        // org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
   #2 = Methodref          #39.#40        // java/io/File.canRead:()Z
   #3 = Class              #41            // org/apache/commons/io/filefilter/CanReadFileFilter
   #4 = Methodref          #3.#38         // org/apache/commons/io/filefilter/CanReadFileFilter."<init>":()V
   #5 = Fieldref           #3.#42         // org/apache/commons/io/filefilter/CanReadFileFilter.CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;
   #6 = Class              #43            // org/apache/commons/io/filefilter/NotFileFilter
   #7 = Methodref          #6.#44         // org/apache/commons/io/filefilter/NotFileFilter."<init>":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V
   #8 = Fieldref           #3.#45         // org/apache/commons/io/filefilter/CanReadFileFilter.CANNOT_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;
   #9 = Class              #46            // org/apache/commons/io/filefilter/AndFileFilter
  #10 = Fieldref           #47.#48        // org/apache/commons/io/filefilter/CanWriteFileFilter.CANNOT_WRITE:Lorg/apache/commons/io/filefilter/IOFileFilter;
  #11 = Methodref          #9.#49         // org/apache/commons/io/filefilter/AndFileFilter."<init>":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V
  #12 = Fieldref           #3.#50         // org/apache/commons/io/filefilter/CanReadFileFilter.READ_ONLY:Lorg/apache/commons/io/filefilter/IOFileFilter;
  #13 = Class              #51            // org/apache/commons/io/filefilter/AbstractFileFilter
  #14 = Class              #52            // java/io/Serializable
  #15 = Utf8               serialVersionUID
  #16 = Utf8               J
  #17 = Utf8               ConstantValue
  #18 = Long               3179904805251622989l
  #20 = Utf8               CAN_READ
  #21 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;
  #22 = Utf8               CANNOT_READ
  #23 = Utf8               READ_ONLY
  #24 = Utf8               <init>
  #25 = Utf8               ()V
  #26 = Utf8               Code
  #27 = Utf8               LineNumberTable
  #28 = Utf8               LocalVariableTable
  #29 = Utf8               this
  #30 = Utf8               Lorg/apache/commons/io/filefilter/CanReadFileFilter;
  #31 = Utf8               accept
  #32 = Utf8               (Ljava/io/File;)Z
  #33 = Utf8               file
  #34 = Utf8               Ljava/io/File;
  #35 = Utf8               <clinit>
  #36 = Utf8               SourceFile
  #37 = Utf8               CanReadFileFilter.java
  #38 = NameAndType        #24:#25        // "<init>":()V
  #39 = Class              #53            // java/io/File
  #40 = NameAndType        #54:#55        // canRead:()Z
  #41 = Utf8               org/apache/commons/io/filefilter/CanReadFileFilter
  #42 = NameAndType        #20:#21        // CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;
  #43 = Utf8               org/apache/commons/io/filefilter/NotFileFilter
  #44 = NameAndType        #24:#56        // "<init>":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V
  #45 = NameAndType        #22:#21        // CANNOT_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;
  #46 = Utf8               org/apache/commons/io/filefilter/AndFileFilter
  #47 = Class              #57            // org/apache/commons/io/filefilter/CanWriteFileFilter
  #48 = NameAndType        #58:#21        // CANNOT_WRITE:Lorg/apache/commons/io/filefilter/IOFileFilter;
  #49 = NameAndType        #24:#59        // "<init>":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V
  #50 = NameAndType        #23:#21        // READ_ONLY:Lorg/apache/commons/io/filefilter/IOFileFilter;
  #51 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter
  #52 = Utf8               java/io/Serializable
  #53 = Utf8               java/io/File
  #54 = Utf8               canRead
  #55 = Utf8               ()Z
  #56 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V
  #57 = Utf8               org/apache/commons/io/filefilter/CanWriteFileFilter
  #58 = Utf8               CANNOT_WRITE
  #59 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 3179904805251622989l

  public static final org.apache.commons.io.filefilter.IOFileFilter CAN_READ;
    descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.io.filefilter.IOFileFilter CANNOT_READ;
    descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.io.filefilter.IOFileFilter READ_ONLY;
    descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  protected org.apache.commons.io.filefilter.CanReadFileFilter();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
         4: return
      LineNumberTable:
        line 80: 0
        line 81: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/filefilter/CanReadFileFilter;

  public boolean accept(java.io.File);
    descriptor: (Ljava/io/File;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #2                  // Method java/io/File.canRead:()Z
         4: ireturn
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/filefilter/CanReadFileFilter;
            0       5     1  file   Ljava/io/File;

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: new           #3                  // class org/apache/commons/io/filefilter/CanReadFileFilter
         3: dup
         4: invokespecial #4                  // Method "<init>":()V
         7: putstatic     #5                  // Field CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;
        10: new           #6                  // class org/apache/commons/io/filefilter/NotFileFilter
        13: dup
        14: getstatic     #5                  // Field CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;
        17: invokespecial #7                  // Method org/apache/commons/io/filefilter/NotFileFilter."<init>":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V
        20: putstatic     #8                  // Field CANNOT_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;
        23: new           #9                  // class org/apache/commons/io/filefilter/AndFileFilter
        26: dup
        27: getstatic     #5                  // Field CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;
        30: getstatic     #10                 // Field org/apache/commons/io/filefilter/CanWriteFileFilter.CANNOT_WRITE:Lorg/apache/commons/io/filefilter/IOFileFilter;
        33: invokespecial #11                 // Method org/apache/commons/io/filefilter/AndFileFilter."<init>":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V
        36: putstatic     #12                 // Field READ_ONLY:Lorg/apache/commons/io/filefilter/IOFileFilter;
        39: return
      LineNumberTable:
        line 68: 0
        line 71: 10
        line 74: 23
}
SourceFile: "CanReadFileFilter.java"
