Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/math/Ordering$OptionOrdering.class
  Last modified May 29, 2022; size 2335 bytes
  SHA-256 checksum ecc76a5b613fa8462eee1bd03eac8793afce8c7f973bfcbaa9b6b0f471db5642
  Compiled from "Ordering.scala"
public interface scala.math.Ordering$OptionOrdering<T extends java.lang.Object> extends scala.math.Ordering<scala.Option<T>>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/math/Ordering$OptionOrdering
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 8, attributes: 5
Constant pool:
   #1 = Utf8               scala/math/Ordering$OptionOrdering
   #2 = Class              #1             // scala/math/Ordering$OptionOrdering
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Ordering<Lscala/Option<TT;>;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               scala/math/Ordering
   #7 = Class              #6             // scala/math/Ordering
   #8 = Utf8               Ordering.scala
   #9 = Utf8               OptionOrdering
  #10 = Utf8               optionOrdering
  #11 = Utf8               ()Lscala/math/Ordering;
  #12 = Utf8               ()Lscala/math/Ordering<TT;>;
  #13 = Utf8               compare$
  #14 = Utf8               (Lscala/math/Ordering$OptionOrdering;Lscala/Option;Lscala/Option;)I
  #15 = Utf8               $this
  #16 = Utf8               x
  #17 = Utf8               y
  #18 = Utf8               compare
  #19 = Utf8               (Lscala/Option;Lscala/Option;)I
  #20 = NameAndType        #18:#19        // compare:(Lscala/Option;Lscala/Option;)I
  #21 = InterfaceMethodref #2.#20         // scala/math/Ordering$OptionOrdering.compare:(Lscala/Option;Lscala/Option;)I
  #22 = Utf8               Lscala/math/Ordering$OptionOrdering;
  #23 = Utf8               Lscala/Option;
  #24 = Utf8               (Lscala/Option<TT;>;Lscala/Option<TT;>;)I
  #25 = Utf8               scala/Tuple2
  #26 = Class              #25            // scala/Tuple2
  #27 = Utf8               <init>
  #28 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #29 = NameAndType        #27:#28        // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #30 = Methodref          #26.#29        // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #31 = Utf8               scala/None$
  #32 = Class              #31            // scala/None$
  #33 = Utf8               MODULE$
  #34 = Utf8               Lscala/None$;
  #35 = NameAndType        #33:#34        // MODULE$:Lscala/None$;
  #36 = Fieldref           #32.#35        // scala/None$.MODULE$:Lscala/None$;
  #37 = Utf8               equals
  #38 = Utf8               (Ljava/lang/Object;)Z
  #39 = NameAndType        #37:#38        // equals:(Ljava/lang/Object;)Z
  #40 = Methodref          #5.#39         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #41 = Utf8               scala/Some
  #42 = Class              #41            // scala/Some
  #43 = Utf8               value
  #44 = Utf8               ()Ljava/lang/Object;
  #45 = NameAndType        #43:#44        // value:()Ljava/lang/Object;
  #46 = Methodref          #42.#45        // scala/Some.value:()Ljava/lang/Object;
  #47 = NameAndType        #10:#11        // optionOrdering:()Lscala/math/Ordering;
  #48 = InterfaceMethodref #2.#47         // scala/math/Ordering$OptionOrdering.optionOrdering:()Lscala/math/Ordering;
  #49 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I
  #50 = NameAndType        #18:#49        // compare:(Ljava/lang/Object;Ljava/lang/Object;)I
  #51 = InterfaceMethodref #7.#50         // scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
  #52 = Utf8               scala/MatchError
  #53 = Class              #52            // scala/MatchError
  #54 = Utf8               (Ljava/lang/Object;)V
  #55 = NameAndType        #27:#54        // "<init>":(Ljava/lang/Object;)V
  #56 = Methodref          #53.#55        // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #57 = Utf8               Ljava/lang/Object;
  #58 = Utf8               this
  #59 = Utf8               scala/Option
  #60 = Class              #59            // scala/Option
  #61 = Utf8               equals$
  #62 = Utf8               (Lscala/math/Ordering$OptionOrdering;Ljava/lang/Object;)Z
  #63 = Utf8               obj
  #64 = InterfaceMethodref #2.#39         // scala/math/Ordering$OptionOrdering.equals:(Ljava/lang/Object;)Z
  #65 = Utf8               hashCode$
  #66 = Utf8               (Lscala/math/Ordering$OptionOrdering;)I
  #67 = Utf8               hashCode
  #68 = Utf8               ()I
  #69 = NameAndType        #67:#68        // hashCode:()I
  #70 = InterfaceMethodref #2.#69         // scala/math/Ordering$OptionOrdering.hashCode:()I
  #71 = Methodref          #5.#69         // java/lang/Object.hashCode:()I
  #72 = Utf8               $init$
  #73 = Utf8               (Lscala/math/Ordering$OptionOrdering;)V
  #74 = Utf8               Signature
  #75 = Utf8               Code
  #76 = Utf8               LineNumberTable
  #77 = Utf8               LocalVariableTable
  #78 = Utf8               MethodParameters
  #79 = Utf8               StackMapTable
  #80 = Utf8               InnerClasses
  #81 = Utf8               SourceFile
  #82 = Utf8               ScalaInlineInfo
  #83 = Utf8               Scala
{
  public abstract scala.math.Ordering<T> optionOrdering();
    descriptor: ()Lscala/math/Ordering;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #12                          // ()Lscala/math/Ordering<TT;>;

  public static int compare$(scala.math.Ordering$OptionOrdering, scala.Option, scala.Option);
    descriptor: (Lscala/math/Ordering$OptionOrdering;Lscala/Option;Lscala/Option;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #21                 // InterfaceMethod compare:(Lscala/Option;Lscala/Option;)I
         6: ireturn
      LineNumberTable:
        line 586: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/Ordering$OptionOrdering;
            0       7     1     x   Lscala/Option;
            0       7     2     y   Lscala/Option;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final
      y                              final

  public default int compare(scala.Option<T>, scala.Option<T>);
    descriptor: (Lscala/Option;Lscala/Option;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=3
         0: new           #26                 // class scala/Tuple2
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #30                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: astore        4
        11: getstatic     #36                 // Field scala/None$.MODULE$:Lscala/None$;
        14: aload_1
        15: invokevirtual #40                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        18: ifeq          36
        21: getstatic     #36                 // Field scala/None$.MODULE$:Lscala/None$;
        24: aload_2
        25: invokevirtual #40                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        28: ifeq          36
        31: iconst_0
        32: istore_3
        33: goto          127
        36: getstatic     #36                 // Field scala/None$.MODULE$:Lscala/None$;
        39: aload_1
        40: invokevirtual #40                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        43: ifeq          51
        46: iconst_m1
        47: istore_3
        48: goto          127
        51: getstatic     #36                 // Field scala/None$.MODULE$:Lscala/None$;
        54: aload_2
        55: invokevirtual #40                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        58: ifeq          66
        61: iconst_1
        62: istore_3
        63: goto          127
        66: aload_1
        67: instanceof    #42                 // class scala/Some
        70: ifeq          117
        73: aload_1
        74: checkcast     #42                 // class scala/Some
        77: invokevirtual #46                 // Method scala/Some.value:()Ljava/lang/Object;
        80: astore        5
        82: aload_2
        83: instanceof    #42                 // class scala/Some
        86: ifeq          117
        89: aload_2
        90: checkcast     #42                 // class scala/Some
        93: invokevirtual #46                 // Method scala/Some.value:()Ljava/lang/Object;
        96: astore        6
        98: aload_0
        99: invokeinterface #48,  1           // InterfaceMethod optionOrdering:()Lscala/math/Ordering;
       104: aload         5
       106: aload         6
       108: invokeinterface #51,  3           // InterfaceMethod scala/math/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
       113: istore_3
       114: goto          127
       117: new           #53                 // class scala/MatchError
       120: dup
       121: aload         4
       123: invokespecial #56                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       126: athrow
       127: iload_3
       128: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ top, class scala/Tuple2 ]
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 50 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/math/Ordering$OptionOrdering, class scala/Option, class scala/Option, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 586: 0
        line 587: 11
        line 588: 36
        line 589: 51
        line 590: 66
        line 586: 117
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           98      19     6     y   Ljava/lang/Object;
           82      35     5     x   Ljava/lang/Object;
            0     129     0  this   Lscala/math/Ordering$OptionOrdering;
            0     129     1     x   Lscala/Option;
            0     129     2     y   Lscala/Option;
    Signature: #24                          // (Lscala/Option<TT;>;Lscala/Option<TT;>;)I
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public static boolean equals$(scala.math.Ordering$OptionOrdering, java.lang.Object);
    descriptor: (Lscala/math/Ordering$OptionOrdering;Ljava/lang/Object;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #64                 // InterfaceMethod equals:(Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 593: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/Ordering$OptionOrdering;
            0       6     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      obj                            final

  public default boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: instanceof    #5                  // class java/lang/Object
         4: ifeq          17
         7: aload_0
         8: aload_1
         9: if_acmpne     17
        12: iconst_1
        13: istore_2
        14: goto          75
        17: aload_1
        18: instanceof    #2                  // class scala/math/Ordering$OptionOrdering
        21: ifeq          73
        24: aload_1
        25: checkcast     #2                  // class scala/math/Ordering$OptionOrdering
        28: astore_3
        29: aload_0
        30: invokeinterface #48,  1           // InterfaceMethod optionOrdering:()Lscala/math/Ordering;
        35: aload_3
        36: invokeinterface #48,  1           // InterfaceMethod optionOrdering:()Lscala/math/Ordering;
        41: astore        4
        43: dup
        44: ifnonnull     56
        47: pop
        48: aload         4
        50: ifnull        64
        53: goto          68
        56: aload         4
        58: invokevirtual #40                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        61: ifeq          68
        64: iconst_1
        65: goto          69
        68: iconst_0
        69: istore_2
        70: goto          75
        73: iconst_0
        74: istore_2
        75: iload_2
        76: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class scala/math/Ordering$OptionOrdering, class java/lang/Object, top, class scala/math/Ordering$OptionOrdering, class scala/math/Ordering ]
          stack = [ class scala/math/Ordering ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 594: 0
        line 595: 17
        line 596: 73
        line 593: 75
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lscala/math/Ordering$OptionOrdering;
            0      77     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public static int hashCode$(scala.math.Ordering$OptionOrdering);
    descriptor: (Lscala/math/Ordering$OptionOrdering;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #70                 // InterfaceMethod hashCode:()I
         4: ireturn
      LineNumberTable:
        line 598: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/math/Ordering$OptionOrdering;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #48,  1           // InterfaceMethod optionOrdering:()Lscala/math/Ordering;
         6: invokevirtual #71                 // Method java/lang/Object.hashCode:()I
         9: bipush        43
        11: imul
        12: ireturn
      LineNumberTable:
        line 598: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Ordering$OptionOrdering;

  public static void $init$(scala.math.Ordering$OptionOrdering);
    descriptor: (Lscala/math/Ordering$OptionOrdering;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/math/Ordering$OptionOrdering;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public static #9= #2 of #7;             // OptionOrdering=class scala/math/Ordering$OptionOrdering of class scala/math/Ordering
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Ordering<Lscala/Option<TT;>;>;
SourceFile: "Ordering.scala"
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 00 00 08 00 48 00 49 01 00 12 00 13 00 00 0D
   00 0E 01 00 25 00 26 00 00 3D 00 3E 01 00 43 00
   44 00 00 41 00 42 01 00 0A 00 0B 00
  Scala: length = 0x0 (unknown attribute)

