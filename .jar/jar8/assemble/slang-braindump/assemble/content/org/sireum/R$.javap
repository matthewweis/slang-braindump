Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/R$.class
  Last modified May 29, 2022; size 6175 bytes
  SHA-256 checksum 1824626cb0eb12dfe2133b9d3de26be7b97c3f890c6c665f97606553d32dbc50
  Compiled from "R.scala"
public final class org.sireum.R$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/R$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 25, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/R$
    #2 = Class              #1            // org/sireum/R$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               R.scala
    #6 = Utf8               org/sireum/R$$String$
    #7 = Class              #6            // org/sireum/R$$String$
    #8 = Utf8               org/sireum/R
    #9 = Class              #8            // org/sireum/R
   #10 = Utf8               $String$
   #11 = Utf8               org/sireum/R$Boxer$
   #12 = Class              #11           // org/sireum/R$Boxer$
   #13 = Utf8               Boxer$
   #14 = Utf8               org/sireum/Z$MP$
   #15 = Class              #14           // org/sireum/Z$MP$
   #16 = Utf8               org/sireum/Z
   #17 = Class              #16           // org/sireum/Z
   #18 = Utf8               MP$
   #19 = Utf8               MODULE$
   #20 = Utf8               Lorg/sireum/R$;
   #21 = Utf8               <clinit>
   #22 = Utf8               ()V
   #23 = Utf8               <init>
   #24 = NameAndType        #23:#22       // "<init>":()V
   #25 = Methodref          #2.#24        // org/sireum/R$."<init>":()V
   #26 = NameAndType        #19:#20       // MODULE$:Lorg/sireum/R$;
   #27 = Fieldref           #2.#26        // org/sireum/R$.MODULE$:Lorg/sireum/R$;
   #28 = Utf8               unapply
   #29 = Utf8               (Lscala/math/BigDecimal;)Lscala/Option;
   #30 = Utf8               (Lscala/math/BigDecimal;)Lscala/Option<Ljava/lang/String;>;
   #31 = Utf8               r
   #32 = Utf8               scala/Some
   #33 = Class              #32           // scala/Some
   #34 = Utf8               toString$extension
   #35 = Utf8               (Lscala/math/BigDecimal;)Ljava/lang/String;
   #36 = NameAndType        #34:#35       // toString$extension:(Lscala/math/BigDecimal;)Ljava/lang/String;
   #37 = Methodref          #2.#36        // org/sireum/R$.toString$extension:(Lscala/math/BigDecimal;)Ljava/lang/String;
   #38 = Utf8               (Ljava/lang/Object;)V
   #39 = NameAndType        #23:#38       // "<init>":(Ljava/lang/Object;)V
   #40 = Methodref          #33.#39       // scala/Some."<init>":(Ljava/lang/Object;)V
   #41 = Utf8               this
   #42 = Utf8               Lscala/math/BigDecimal;
   #43 = Utf8               apply
   #44 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option;
   #45 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/R;>;
   #46 = Utf8               s
   #47 = Utf8               java/lang/Throwable
   #48 = Class              #47           // java/lang/Throwable
   #49 = Utf8               org/sireum/Some$
   #50 = Class              #49           // org/sireum/Some$
   #51 = Utf8               Lorg/sireum/Some$;
   #52 = NameAndType        #19:#51       // MODULE$:Lorg/sireum/Some$;
   #53 = Fieldref           #50.#52       // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
   #54 = Utf8               Lorg/sireum/R$$String$;
   #55 = NameAndType        #19:#54       // MODULE$:Lorg/sireum/R$$String$;
   #56 = Fieldref           #7.#55        // org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
   #57 = Utf8               (Ljava/lang/String;)Lscala/math/BigDecimal;
   #58 = NameAndType        #43:#57       // apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
   #59 = Methodref          #7.#58        // org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
   #60 = Utf8               (Lscala/math/BigDecimal;)V
   #61 = NameAndType        #23:#60       // "<init>":(Lscala/math/BigDecimal;)V
   #62 = Methodref          #9.#61        // org/sireum/R."<init>":(Lscala/math/BigDecimal;)V
   #63 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
   #64 = NameAndType        #43:#63       // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
   #65 = Methodref          #50.#64       // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
   #66 = Utf8               org/sireum/None$
   #67 = Class              #66           // org/sireum/None$
   #68 = Utf8               Lorg/sireum/None$;
   #69 = NameAndType        #19:#68       // MODULE$:Lorg/sireum/None$;
   #70 = Fieldref           #67.#69       // org/sireum/None$.MODULE$:Lorg/sireum/None$;
   #71 = Utf8               ()Lorg/sireum/None;
   #72 = NameAndType        #43:#71       // apply:()Lorg/sireum/None;
   #73 = Methodref          #67.#72       // org/sireum/None$.apply:()Lorg/sireum/None;
   #74 = Utf8               Ljava/lang/String;
   #75 = Utf8               (F)Lscala/math/BigDecimal;
   #76 = Utf8               f
   #77 = Utf8               scala/package$
   #78 = Class              #77           // scala/package$
   #79 = Utf8               Lscala/package$;
   #80 = NameAndType        #19:#79       // MODULE$:Lscala/package$;
   #81 = Fieldref           #78.#80       // scala/package$.MODULE$:Lscala/package$;
   #82 = Utf8               BigDecimal
   #83 = Utf8               ()Lscala/math/BigDecimal$;
   #84 = NameAndType        #82:#83       // BigDecimal:()Lscala/math/BigDecimal$;
   #85 = Methodref          #78.#84       // scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
   #86 = Utf8               scala/math/BigDecimal$
   #87 = Class              #86           // scala/math/BigDecimal$
   #88 = Utf8               (D)Lscala/math/BigDecimal;
   #89 = NameAndType        #43:#88       // apply:(D)Lscala/math/BigDecimal;
   #90 = Methodref          #87.#89       // scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
   #91 = Utf8               (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   #92 = NameAndType        #43:#91       // apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   #93 = Methodref          #2.#92        // org/sireum/R$.apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   #94 = Utf8               F
   #95 = Utf8               d
   #96 = Utf8               D
   #97 = Utf8               (Lorg/sireum/Z;)Lscala/math/BigDecimal;
   #98 = Utf8               n
   #99 = Utf8               toBigInt
  #100 = Utf8               ()Lscala/math/BigInt;
  #101 = NameAndType        #99:#100      // toBigInt:()Lscala/math/BigInt;
  #102 = InterfaceMethodref #17.#101      // org/sireum/Z.toBigInt:()Lscala/math/BigInt;
  #103 = Utf8               (Lscala/math/BigInt;)Lscala/math/BigDecimal;
  #104 = NameAndType        #43:#103      // apply:(Lscala/math/BigInt;)Lscala/math/BigDecimal;
  #105 = Methodref          #87.#104      // scala/math/BigDecimal$.apply:(Lscala/math/BigInt;)Lscala/math/BigDecimal;
  #106 = Utf8               Lorg/sireum/Z;
  #107 = Utf8               random
  #108 = Utf8               ()Lscala/math/BigDecimal;
  #109 = Utf8               org/sireum/Z$
  #110 = Class              #109          // org/sireum/Z$
  #111 = Utf8               Lorg/sireum/Z$;
  #112 = NameAndType        #19:#111      // MODULE$:Lorg/sireum/Z$;
  #113 = Fieldref           #110.#112     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #114 = Utf8               ()Lorg/sireum/Z;
  #115 = NameAndType        #107:#114     // random:()Lorg/sireum/Z;
  #116 = Methodref          #110.#115     // org/sireum/Z$.random:()Lorg/sireum/Z;
  #117 = NameAndType        #43:#97       // apply:(Lorg/sireum/Z;)Lscala/math/BigDecimal;
  #118 = Methodref          #2.#117       // org/sireum/R$.apply:(Lorg/sireum/Z;)Lscala/math/BigDecimal;
  #119 = Utf8               scala/runtime/BoxesRunTime
  #120 = Class              #119          // scala/runtime/BoxesRunTime
  #121 = Utf8               boxToInteger
  #122 = Utf8               (I)Ljava/lang/Integer;
  #123 = NameAndType        #121:#122     // boxToInteger:(I)Ljava/lang/Integer;
  #124 = Methodref          #120.#123     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #125 = Utf8               equals
  #126 = Utf8               (Ljava/lang/Object;)Z
  #127 = NameAndType        #125:#126     // equals:(Ljava/lang/Object;)Z
  #128 = Methodref          #4.#127       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #129 = Utf8               Lorg/sireum/Z$MP$;
  #130 = NameAndType        #19:#129      // MODULE$:Lorg/sireum/Z$MP$;
  #131 = Fieldref           #15.#130      // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
  #132 = Utf8               one
  #133 = NameAndType        #132:#114     // one:()Lorg/sireum/Z;
  #134 = Methodref          #15.#133      // org/sireum/Z$MP$.one:()Lorg/sireum/Z;
  #135 = Utf8               $div$extension
  #136 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #137 = NameAndType        #135:#136     // $div$extension:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #138 = Methodref          #2.#137       // org/sireum/R$.$div$extension:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #139 = Utf8               java/lang/Integer
  #140 = Class              #139          // java/lang/Integer
  #141 = Utf8               scala/math/BigDecimal
  #142 = Class              #141          // scala/math/BigDecimal
  #143 = Utf8               unary_$minus$extension
  #144 = Utf8               $this
  #145 = Utf8               unary_$minus
  #146 = NameAndType        #145:#108     // unary_$minus:()Lscala/math/BigDecimal;
  #147 = Methodref          #142.#146     // scala/math/BigDecimal.unary_$minus:()Lscala/math/BigDecimal;
  #148 = Utf8               $less$extension
  #149 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
  #150 = Utf8               other
  #151 = Utf8               org/sireum/B$
  #152 = Class              #151          // org/sireum/B$
  #153 = Utf8               Lorg/sireum/B$;
  #154 = NameAndType        #19:#153      // MODULE$:Lorg/sireum/B$;
  #155 = Fieldref           #152.#154     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #156 = Utf8               compare
  #157 = Utf8               (Lscala/math/BigDecimal;)I
  #158 = NameAndType        #156:#157     // compare:(Lscala/math/BigDecimal;)I
  #159 = Methodref          #142.#158     // scala/math/BigDecimal.compare:(Lscala/math/BigDecimal;)I
  #160 = Utf8               (Z)Z
  #161 = NameAndType        #43:#160      // apply:(Z)Z
  #162 = Methodref          #152.#161     // org/sireum/B$.apply:(Z)Z
  #163 = Utf8               $less$eq$extension
  #164 = Utf8               $greater$extension
  #165 = Utf8               $greater$eq$extension
  #166 = Utf8               $eq$eq$eq$extension
  #167 = Utf8               $eq$bang$eq$extension
  #168 = Utf8               $plus$extension
  #169 = Utf8               $plus
  #170 = NameAndType        #169:#91      // $plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #171 = Methodref          #142.#170     // scala/math/BigDecimal.$plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #172 = Utf8               $minus$extension
  #173 = Utf8               $minus
  #174 = NameAndType        #173:#91      // $minus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #175 = Methodref          #142.#174     // scala/math/BigDecimal.$minus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #176 = Utf8               $times$extension
  #177 = Utf8               $times
  #178 = NameAndType        #177:#91      // $times:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #179 = Methodref          #142.#178     // scala/math/BigDecimal.$times:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #180 = Utf8               $div
  #181 = NameAndType        #180:#91      // $div:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #182 = Methodref          #142.#181     // scala/math/BigDecimal.$div:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #183 = Utf8               string$extension
  #184 = Utf8               org/sireum/String$
  #185 = Class              #184          // org/sireum/String$
  #186 = Utf8               Lorg/sireum/String$;
  #187 = NameAndType        #19:#186      // MODULE$:Lorg/sireum/String$;
  #188 = Fieldref           #185.#187     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #189 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #190 = NameAndType        #43:#189      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #191 = Methodref          #185.#190     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #192 = Utf8               toString
  #193 = Utf8               ()Ljava/lang/String;
  #194 = NameAndType        #192:#193     // toString:()Ljava/lang/String;
  #195 = Methodref          #142.#194     // scala/math/BigDecimal.toString:()Ljava/lang/String;
  #196 = Utf8               boxer$extension
  #197 = Utf8               (Lscala/math/BigDecimal;)Lorg/sireum/$internal/Boxer;
  #198 = Utf8               Lorg/sireum/R$Boxer$;
  #199 = NameAndType        #19:#198      // MODULE$:Lorg/sireum/R$Boxer$;
  #200 = Fieldref           #12.#199      // org/sireum/R$Boxer$.MODULE$:Lorg/sireum/R$Boxer$;
  #201 = Utf8               hashCode$extension
  #202 = Utf8               hashCode
  #203 = Utf8               ()I
  #204 = NameAndType        #202:#203     // hashCode:()I
  #205 = Methodref          #142.#204     // scala/math/BigDecimal.hashCode:()I
  #206 = Utf8               equals$extension
  #207 = Utf8               (Lscala/math/BigDecimal;Ljava/lang/Object;)Z
  #208 = Utf8               x$1
  #209 = Utf8               value
  #210 = NameAndType        #209:#108     // value:()Lscala/math/BigDecimal;
  #211 = Methodref          #9.#210       // org/sireum/R.value:()Lscala/math/BigDecimal;
  #212 = Utf8               Ljava/lang/Object;
  #213 = Methodref          #4.#24        // java/lang/Object."<init>":()V
  #214 = Utf8               Code
  #215 = Utf8               LineNumberTable
  #216 = Utf8               LocalVariableTable
  #217 = Utf8               Signature
  #218 = Utf8               MethodParameters
  #219 = Utf8               StackMapTable
  #220 = Utf8               InnerClasses
  #221 = Utf8               SourceFile
  #222 = Utf8               ScalaInlineInfo
  #223 = Utf8               Scala
{
  public static final org.sireum.R$ MODULE$;
    descriptor: Lorg/sireum/R$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/R$
         3: dup
         4: invokespecial #25                 // Method "<init>":()V
         7: putstatic     #27                 // Field MODULE$:Lorg/sireum/R$;
        10: return
      LineNumberTable:
        line 28: 0

  public scala.Option<java.lang.String> unapply(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #33                 // class scala/Some
         3: dup
         4: aload_0
         5: aload_1
         6: invokevirtual #37                 // Method toString$extension:(Lscala/math/BigDecimal;)Ljava/lang/String;
         9: invokespecial #40                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        12: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/R$;
            0      13     1     r   Lscala/math/BigDecimal;
    Signature: #30                          // (Lscala/math/BigDecimal;)Lscala/Option<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      r                              final

  public org.sireum.Option<org.sireum.R> apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: getstatic     #53                 // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
         3: new           #9                  // class org/sireum/R
         6: dup
         7: getstatic     #56                 // Field org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
        10: aload_1
        11: invokevirtual #59                 // Method org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
        14: invokespecial #62                 // Method org/sireum/R."<init>":(Lscala/math/BigDecimal;)V
        17: invokevirtual #65                 // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        20: goto          33
        23: pop
        24: getstatic     #70                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        27: invokevirtual #73                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        30: goto          33
        33: areturn
      Exception table:
         from    to  target type
             0    20    23   Class java/lang/Throwable
      StackMapTable: number_of_entries = 2
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 45: 0
        line 46: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/R$;
            0      34     1     s   Ljava/lang/String;
    Signature: #45                          // (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/R;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.math.BigDecimal apply(float);
    descriptor: (F)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: getstatic     #81                 // Field scala/package$.MODULE$:Lscala/package$;
         4: invokevirtual #85                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
         7: fload_1
         8: f2d
         9: invokevirtual #90                 // Method scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
        12: invokevirtual #93                 // Method apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
        15: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/sireum/R$;
            0      16     1     f   F
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.math.BigDecimal apply(double);
    descriptor: (D)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: getstatic     #81                 // Field scala/package$.MODULE$:Lscala/package$;
         4: invokevirtual #85                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
         7: dload_1
         8: invokevirtual #90                 // Method scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
        11: invokevirtual #93                 // Method apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
        14: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/R$;
            0      15     1     d   D
    MethodParameters:
      Name                           Flags
      d                              final

  public scala.math.BigDecimal apply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #81                 // Field scala/package$.MODULE$:Lscala/package$;
         4: invokevirtual #85                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
         7: aload_1
         8: invokeinterface #102,  1          // InterfaceMethod org/sireum/Z.toBigInt:()Lscala/math/BigInt;
        13: invokevirtual #105                // Method scala/math/BigDecimal$.apply:(Lscala/math/BigInt;)Lscala/math/BigDecimal;
        16: invokevirtual #93                 // Method apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
        19: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/sireum/R$;
            0      20     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.math.BigDecimal random();
    descriptor: ()Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=1
         0: getstatic     #113                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: invokevirtual #116                // Method org/sireum/Z$.random:()Lorg/sireum/Z;
         6: astore_1
         7: aload_0
         8: aload_0
         9: getstatic     #113                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        12: invokevirtual #116                // Method org/sireum/Z$.random:()Lorg/sireum/Z;
        15: invokevirtual #118                // Method apply:(Lorg/sireum/Z;)Lscala/math/BigDecimal;
        18: aload_1
        19: iconst_0
        20: invokestatic  #124                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        23: astore_2
        24: dup
        25: ifnonnull     36
        28: pop
        29: aload_2
        30: ifnull        43
        33: goto          56
        36: aload_2
        37: invokevirtual #128                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        40: ifeq          56
        43: aload_0
        44: getstatic     #131                // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        47: invokevirtual #134                // Method org/sireum/Z$MP$.one:()Lorg/sireum/Z;
        50: invokevirtual #118                // Method apply:(Lorg/sireum/Z;)Lscala/math/BigDecimal;
        53: goto          61
        56: aload_0
        57: aload_1
        58: invokevirtual #118                // Method apply:(Lorg/sireum/Z;)Lscala/math/BigDecimal;
        61: invokevirtual #138                // Method $div$extension:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
        64: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class org/sireum/R$, class org/sireum/Z, class java/lang/Integer ]
          stack = [ class org/sireum/R$, class scala/math/BigDecimal, class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/R$, class org/sireum/Z, class java/lang/Integer ]
          stack = [ class org/sireum/R$, class scala/math/BigDecimal ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class org/sireum/R$, class org/sireum/Z, class java/lang/Integer ]
          stack = [ class org/sireum/R$, class scala/math/BigDecimal ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/R$, class org/sireum/Z, class java/lang/Integer ]
          stack = [ class org/sireum/R$, class scala/math/BigDecimal, class scala/math/BigDecimal ]
      LineNumberTable:
        line 60: 0
        line 61: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      57     1     d   Lorg/sireum/Z;
            0      65     0  this   Lorg/sireum/R$;

  public scala.math.BigDecimal apply(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/R$;
            0       2     1     r   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      r                              final

  public final scala.math.BigDecimal unary_$minus$extension(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #147                // Method scala/math/BigDecimal.unary_$minus:()Lscala/math/BigDecimal;
         5: invokevirtual #93                 // Method apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         8: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/R$;
            0       9     1 $this   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean $less$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #155                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: aload_2
         5: invokevirtual #159                // Method scala/math/BigDecimal.compare:(Lscala/math/BigDecimal;)I
         8: iconst_0
         9: if_icmpge     16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: invokevirtual #162                // Method org/sireum/B$.apply:(Z)Z
        20: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/R$;
            0      21     1 $this   Lscala/math/BigDecimal;
            0      21     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $less$eq$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #155                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: aload_2
         5: invokevirtual #159                // Method scala/math/BigDecimal.compare:(Lscala/math/BigDecimal;)I
         8: iconst_0
         9: if_icmpgt     16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: invokevirtual #162                // Method org/sireum/B$.apply:(Z)Z
        20: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/R$;
            0      21     1 $this   Lscala/math/BigDecimal;
            0      21     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $greater$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #155                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: aload_2
         5: invokevirtual #159                // Method scala/math/BigDecimal.compare:(Lscala/math/BigDecimal;)I
         8: iconst_0
         9: if_icmple     16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: invokevirtual #162                // Method org/sireum/B$.apply:(Z)Z
        20: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/R$;
            0      21     1 $this   Lscala/math/BigDecimal;
            0      21     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $greater$eq$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #155                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: aload_2
         5: invokevirtual #159                // Method scala/math/BigDecimal.compare:(Lscala/math/BigDecimal;)I
         8: iconst_0
         9: if_icmplt     16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: invokevirtual #162                // Method org/sireum/B$.apply:(Z)Z
        20: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/R$;
            0      21     1 $this   Lscala/math/BigDecimal;
            0      21     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $eq$eq$eq$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=4, args_size=3
         0: getstatic     #155                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: aload_2
         5: astore_3
         6: dup
         7: ifnonnull     18
        10: pop
        11: aload_3
        12: ifnull        25
        15: goto          29
        18: aload_3
        19: invokevirtual #128                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        22: ifeq          29
        25: iconst_1
        26: goto          30
        29: iconst_0
        30: invokevirtual #162                // Method org/sireum/B$.apply:(Z)Z
        33: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, class scala/math/BigDecimal ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/R$;
            0      34     1 $this   Lscala/math/BigDecimal;
            0      34     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $eq$bang$eq$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=4, args_size=3
         0: getstatic     #155                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: aload_2
         5: astore_3
         6: dup
         7: ifnonnull     18
        10: pop
        11: aload_3
        12: ifnull        29
        15: goto          25
        18: aload_3
        19: invokevirtual #128                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        22: ifne          29
        25: iconst_1
        26: goto          30
        29: iconst_0
        30: invokevirtual #162                // Method org/sireum/B$.apply:(Z)Z
        33: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, class scala/math/BigDecimal ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/R$;
            0      34     1 $this   Lscala/math/BigDecimal;
            0      34     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final scala.math.BigDecimal $plus$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #171                // Method scala/math/BigDecimal.$plus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         6: invokevirtual #93                 // Method apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         9: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/R$;
            0      10     1 $this   Lscala/math/BigDecimal;
            0      10     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final scala.math.BigDecimal $minus$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #175                // Method scala/math/BigDecimal.$minus:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         6: invokevirtual #93                 // Method apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         9: areturn
      LineNumberTable:
        line 88: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/R$;
            0      10     1 $this   Lscala/math/BigDecimal;
            0      10     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final scala.math.BigDecimal $times$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #179                // Method scala/math/BigDecimal.$times:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         6: invokevirtual #93                 // Method apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         9: areturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/R$;
            0      10     1 $this   Lscala/math/BigDecimal;
            0      10     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final scala.math.BigDecimal $div$extension(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #182                // Method scala/math/BigDecimal.$div:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         6: invokevirtual #93                 // Method apply:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         9: areturn
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/R$;
            0      10     1 $this   Lscala/math/BigDecimal;
            0      10     2 other   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final java.lang.String string$extension(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #188                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         3: aload_0
         4: aload_1
         5: invokevirtual #37                 // Method toString$extension:(Lscala/math/BigDecimal;)Ljava/lang/String;
         8: invokevirtual #191                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        11: areturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/R$;
            0      12     1 $this   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final java.lang.String toString$extension(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #195                // Method scala/math/BigDecimal.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/R$;
            0       5     1 $this   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final org.sireum.$internal.Boxer boxer$extension(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lorg/sireum/$internal/Boxer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #200                // Field org/sireum/R$Boxer$.MODULE$:Lorg/sireum/R$Boxer$;
         3: areturn
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/R$;
            0       4     1 $this   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int hashCode$extension(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #205                // Method scala/math/BigDecimal.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/R$;
            0       5     1 $this   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean equals$extension(scala.math.BigDecimal, java.lang.Object);
    descriptor: (Lscala/math/BigDecimal;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #9                  // class org/sireum/R
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          83
        28: aload_2
        29: ifnonnull     36
        32: aconst_null
        33: goto          43
        36: aload_2
        37: checkcast     #9                  // class org/sireum/R
        40: invokevirtual #211                // Method org/sireum/R.value:()Lscala/math/BigDecimal;
        43: astore        5
        45: aload_1
        46: aload         5
        48: astore        6
        50: dup
        51: ifnonnull     63
        54: pop
        55: aload         6
        57: ifnull        71
        60: goto          75
        63: aload         6
        65: invokevirtual #128                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        68: ifeq          75
        71: iconst_1
        72: goto          76
        75: iconst_0
        76: ifeq          83
        79: iconst_1
        80: goto          84
        83: iconst_0
        84: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class scala/math/BigDecimal ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class org/sireum/R$, class scala/math/BigDecimal, class java/lang/Object, int, class java/lang/Object, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class scala/math/BigDecimal ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      85     0  this   Lorg/sireum/R$;
            0      85     1 $this   Lscala/math/BigDecimal;
            0      85     2   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  private org.sireum.R$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #213                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/R$;
}
InnerClasses:
  public static #10= #7 of #9;            // $String$=class org/sireum/R$$String$ of class org/sireum/R
  public static #13= #12 of #9;           // Boxer$=class org/sireum/R$Boxer$ of class org/sireum/R
  public static #18= #15 of #17;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
SourceFile: "R.scala"
  ScalaInlineInfo: length = 0x7C (unknown attribute)
   01 01 00 18 00 87 00 88 05 00 A7 00 95 05 00 A6
   00 95 05 00 A5 00 95 05 00 A4 00 95 05 00 A3 00
   95 05 00 94 00 95 05 00 AC 00 88 05 00 A8 00 88
   05 00 B0 00 88 05 00 17 00 16 01 00 2B 00 58 01
   00 2B 00 4B 01 00 2B 00 2C 01 00 2B 00 61 01 00
   2B 00 5B 01 00 C4 00 C5 01 00 CE 00 CF 01 00 C9
   00 9D 01 00 6B 00 6C 01 00 B7 00 23 05 00 22 00
   23 05 00 1C 00 1D 01 00 8F 00 5B 05
  Scala: length = 0x0 (unknown attribute)

