Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7.class
  Last modified May 29, 2022; size 2180 bytes
  SHA-256 checksum 48b152078ce9d3c6ec3f72de6eeff601ea1241839e437c49f4fa913c69511292
  Compiled from "StreamExtensions.scala"
public final class scala.collection.convert.StreamExtensions$StreamUnboxer$$anon$7 extends java.lang.Object implements scala.collection.convert.StreamExtensions$StreamUnboxer<java.lang.Object, java.util.stream.DoubleStream>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 5, attributes: 7
Constant pool:
   #1 = Utf8               scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7
   #2 = Class              #1             // scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7
   #3 = Utf8               Ljava/lang/Object;Lscala/collection/convert/StreamExtensions$StreamUnboxer<Ljava/lang/Object;Ljava/util/stream/DoubleStream;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               scala/collection/convert/StreamExtensions$StreamUnboxer
   #7 = Class              #6             // scala/collection/convert/StreamExtensions$StreamUnboxer
   #8 = Utf8               StreamExtensions.scala
   #9 = Utf8               scala/collection/convert/StreamExtensions$StreamUnboxer$
  #10 = Class              #9             // scala/collection/convert/StreamExtensions$StreamUnboxer$
  #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #12 = Class              #11            // java/lang/invoke/MethodHandles$Lookup
  #13 = Utf8               java/lang/invoke/MethodHandles
  #14 = Class              #13            // java/lang/invoke/MethodHandles
  #15 = Utf8               Lookup
  #16 = Utf8               scala/collection/convert/StreamExtensions
  #17 = Class              #16            // scala/collection/convert/StreamExtensions
  #18 = Utf8               StreamUnboxer
  #19 = Utf8               StreamUnboxer$
  #20 = Utf8               apply
  #21 = Utf8               (Ljava/util/stream/Stream;)Ljava/util/stream/DoubleStream;
  #22 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Ljava/util/stream/DoubleStream;
  #23 = Utf8               s
  #24 = Utf8               (Ljava/lang/Object;)D
  #25 = MethodType         #24            //  (Ljava/lang/Object;)D
  #26 = Utf8               $anonfun$apply$3$adapted
  #27 = NameAndType        #26:#24        // $anonfun$apply$3$adapted:(Ljava/lang/Object;)D
  #28 = Methodref          #2.#27         // scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7.$anonfun$apply$3$adapted:(Ljava/lang/Object;)D
  #29 = MethodHandle       6:#28          // REF_invokeStatic scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7.$anonfun$apply$3$adapted:(Ljava/lang/Object;)D
  #30 = Integer            0
  #31 = Utf8               java/lang/invoke/LambdaMetafactory
  #32 = Class              #31            // java/lang/invoke/LambdaMetafactory
  #33 = Utf8               altMetafactory
  #34 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #35 = NameAndType        #33:#34        // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #36 = Methodref          #32.#35        // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #37 = MethodHandle       6:#36          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #38 = Utf8               applyAsDouble
  #39 = Utf8               ()Ljava/util/function/ToDoubleFunction;
  #40 = NameAndType        #38:#39        // applyAsDouble:()Ljava/util/function/ToDoubleFunction;
  #41 = InvokeDynamic      #0:#40         // #0:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
  #42 = Utf8               java/util/stream/Stream
  #43 = Class              #42            // java/util/stream/Stream
  #44 = Utf8               mapToDouble
  #45 = Utf8               (Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/DoubleStream;
  #46 = NameAndType        #44:#45        // mapToDouble:(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/DoubleStream;
  #47 = InterfaceMethodref #43.#46        // java/util/stream/Stream.mapToDouble:(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/DoubleStream;
  #48 = Utf8               this
  #49 = Utf8               Lscala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7;
  #50 = Utf8               Ljava/util/stream/Stream;
  #51 = Utf8               (Ljava/util/stream/Stream;)Ljava/lang/Object;
  #52 = NameAndType        #20:#21        // apply:(Ljava/util/stream/Stream;)Ljava/util/stream/DoubleStream;
  #53 = Methodref          #2.#52         // scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7.apply:(Ljava/util/stream/Stream;)Ljava/util/stream/DoubleStream;
  #54 = Utf8               $anonfun$apply$3
  #55 = Utf8               (D)D
  #56 = Utf8               x
  #57 = Utf8               D
  #58 = Utf8               <init>
  #59 = Utf8               ()V
  #60 = NameAndType        #58:#59        // "<init>":()V
  #61 = Methodref          #5.#60         // java/lang/Object."<init>":()V
  #62 = Utf8               scala/runtime/BoxesRunTime
  #63 = Class              #62            // scala/runtime/BoxesRunTime
  #64 = Utf8               unboxToDouble
  #65 = NameAndType        #64:#24        // unboxToDouble:(Ljava/lang/Object;)D
  #66 = Methodref          #63.#65        // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #67 = NameAndType        #54:#55        // $anonfun$apply$3:(D)D
  #68 = Methodref          #2.#67         // scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7.$anonfun$apply$3:(D)D
  #69 = Utf8               Ljava/lang/Object;
  #70 = Utf8               Code
  #71 = Utf8               LineNumberTable
  #72 = Utf8               LocalVariableTable
  #73 = Utf8               Signature
  #74 = Utf8               MethodParameters
  #75 = Utf8               InnerClasses
  #76 = Utf8               EnclosingMethod
  #77 = Utf8               SourceFile
  #78 = Utf8               BootstrapMethods
  #79 = Utf8               ScalaInlineInfo
  #80 = Utf8               Scala
{
  public java.util.stream.DoubleStream apply(java.util.stream.Stream<java.lang.Object>);
    descriptor: (Ljava/util/stream/Stream;)Ljava/util/stream/DoubleStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokedynamic #41,  0             // InvokeDynamic #0:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
         6: invokeinterface #47,  2           // InterfaceMethod java/util/stream/Stream.mapToDouble:(Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/DoubleStream;
        11: areturn
      LineNumberTable:
        line 434: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7;
            0      12     1     s   Ljava/util/stream/Stream;
    Signature: #22                          // (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Ljava/util/stream/DoubleStream;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.Object apply(java.util.stream.Stream);
    descriptor: (Ljava/util/stream/Stream;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #53                 // Method apply:(Ljava/util/stream/Stream;)Ljava/util/stream/DoubleStream;
         5: areturn
      LineNumberTable:
        line 433: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7;
            0       6     1     s   Ljava/util/stream/Stream;
    MethodParameters:
      Name                           Flags
      s                              final

  public static final double $anonfun$apply$3(double);
    descriptor: (D)D
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=1
         0: dload_0
         1: dreturn
      LineNumberTable:
        line 434: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0     x   D
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.collection.convert.StreamExtensions$StreamUnboxer$$anon$7();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #61                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 433: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7;

  public static final double $anonfun$apply$3$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)D
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #66                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
         4: invokestatic  #68                 // Method $anonfun$apply$3:(D)D
         7: dreturn
      LineNumberTable:
        line 434: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #18= #7 of #17;           // StreamUnboxer=class scala/collection/convert/StreamExtensions$StreamUnboxer of class scala/collection/convert/StreamExtensions
  public static #19= #10 of #17;          // StreamUnboxer$=class scala/collection/convert/StreamExtensions$StreamUnboxer$ of class scala/collection/convert/StreamExtensions
  public final #2;                        // class scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7
EnclosingMethod: #10.#0                 // scala.collection.convert.StreamExtensions$StreamUnboxer$
Signature: #3                           // Ljava/lang/Object;Lscala/collection/convert/StreamExtensions$StreamUnboxer<Ljava/lang/Object;Ljava/util/stream/DoubleStream;>;
SourceFile: "StreamExtensions.scala"
BootstrapMethods:
  0: #37 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 (Ljava/lang/Object;)D
      #29 REF_invokeStatic scala/collection/convert/StreamExtensions$StreamUnboxer$$anon$7.$anonfun$apply$3$adapted:(Ljava/lang/Object;)D
      #25 (Ljava/lang/Object;)D
      #30 0
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 36 00 37 01 00 1A 00 18 01 00 3A
   00 3B 01 00 14 00 33 01 00 14 00 15 01
  Scala: length = 0x0 (unknown attribute)

