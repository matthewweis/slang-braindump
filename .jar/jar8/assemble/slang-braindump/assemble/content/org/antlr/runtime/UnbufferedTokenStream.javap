Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/antlr/runtime/UnbufferedTokenStream.class
  Last modified May 29, 2022; size 2384 bytes
  SHA-256 checksum 923ea03e6870a26cb566681db6fc35b71a671f1507e3bd314e79a6983323f63f
  Compiled from "UnbufferedTokenStream.java"
public class org.antlr.runtime.UnbufferedTokenStream extends org.antlr.runtime.misc.LookaheadStream<org.antlr.runtime.Token> implements org.antlr.runtime.TokenStream
  minor version: 0
  major version: 49
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #18                         // org/antlr/runtime/UnbufferedTokenStream
  super_class: #19                        // org/antlr/runtime/misc/LookaheadStream
  interfaces: 1, fields: 3, methods: 12, attributes: 2
Constant pool:
   #1 = Methodref          #19.#63        // org/antlr/runtime/misc/LookaheadStream."<init>":()V
   #2 = Fieldref           #18.#64        // org/antlr/runtime/UnbufferedTokenStream.tokenIndex:I
   #3 = Fieldref           #18.#65        // org/antlr/runtime/UnbufferedTokenStream.channel:I
   #4 = Fieldref           #18.#66        // org/antlr/runtime/UnbufferedTokenStream.tokenSource:Lorg/antlr/runtime/TokenSource;
   #5 = InterfaceMethodref #67.#68        // org/antlr/runtime/TokenSource.nextToken:()Lorg/antlr/runtime/Token;
   #6 = InterfaceMethodref #10.#69        // org/antlr/runtime/Token.setTokenIndex:(I)V
   #7 = InterfaceMethodref #10.#70        // org/antlr/runtime/Token.getType:()I
   #8 = String             #71            // n/a
   #9 = Methodref          #18.#72        // org/antlr/runtime/UnbufferedTokenStream.LT:(I)Ljava/lang/Object;
  #10 = Class              #73            // org/antlr/runtime/Token
  #11 = Class              #74            // java/lang/UnsupportedOperationException
  #12 = String             #75            // Absolute token indexes are meaningless in an unbuffered stream
  #13 = Methodref          #11.#76        // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
  #14 = InterfaceMethodref #67.#77        // org/antlr/runtime/TokenSource.getSourceName:()Ljava/lang/String;
  #15 = Methodref          #18.#78        // org/antlr/runtime/UnbufferedTokenStream.isEOF:(Lorg/antlr/runtime/Token;)Z
  #16 = Methodref          #18.#79        // org/antlr/runtime/UnbufferedTokenStream.nextElement:()Lorg/antlr/runtime/Token;
  #17 = Methodref          #19.#72        // org/antlr/runtime/misc/LookaheadStream.LT:(I)Ljava/lang/Object;
  #18 = Class              #80            // org/antlr/runtime/UnbufferedTokenStream
  #19 = Class              #81            // org/antlr/runtime/misc/LookaheadStream
  #20 = Class              #82            // org/antlr/runtime/TokenStream
  #21 = Utf8               tokenSource
  #22 = Utf8               Lorg/antlr/runtime/TokenSource;
  #23 = Utf8               tokenIndex
  #24 = Utf8               I
  #25 = Utf8               channel
  #26 = Utf8               <init>
  #27 = Utf8               (Lorg/antlr/runtime/TokenSource;)V
  #28 = Utf8               Code
  #29 = Utf8               LineNumberTable
  #30 = Utf8               LocalVariableTable
  #31 = Utf8               this
  #32 = Utf8               Lorg/antlr/runtime/UnbufferedTokenStream;
  #33 = Utf8               nextElement
  #34 = Utf8               ()Lorg/antlr/runtime/Token;
  #35 = Utf8               t
  #36 = Utf8               Lorg/antlr/runtime/Token;
  #37 = Utf8               isEOF
  #38 = Utf8               (Lorg/antlr/runtime/Token;)Z
  #39 = Utf8               o
  #40 = Utf8               getTokenSource
  #41 = Utf8               ()Lorg/antlr/runtime/TokenSource;
  #42 = Utf8               toString
  #43 = Utf8               (II)Ljava/lang/String;
  #44 = Utf8               start
  #45 = Utf8               stop
  #46 = Utf8               (Lorg/antlr/runtime/Token;Lorg/antlr/runtime/Token;)Ljava/lang/String;
  #47 = Utf8               LA
  #48 = Utf8               (I)I
  #49 = Utf8               i
  #50 = Utf8               get
  #51 = Utf8               (I)Lorg/antlr/runtime/Token;
  #52 = Utf8               getSourceName
  #53 = Utf8               ()Ljava/lang/String;
  #54 = Utf8               (Ljava/lang/Object;)Z
  #55 = Utf8               x0
  #56 = Utf8               Ljava/lang/Object;
  #57 = Utf8               ()Ljava/lang/Object;
  #58 = Utf8               LT
  #59 = Utf8               Signature
  #60 = Utf8               Lorg/antlr/runtime/misc/LookaheadStream<Lorg/antlr/runtime/Token;>;Lorg/antlr/runtime/TokenStream;
  #61 = Utf8               SourceFile
  #62 = Utf8               UnbufferedTokenStream.java
  #63 = NameAndType        #26:#83        // "<init>":()V
  #64 = NameAndType        #23:#24        // tokenIndex:I
  #65 = NameAndType        #25:#24        // channel:I
  #66 = NameAndType        #21:#22        // tokenSource:Lorg/antlr/runtime/TokenSource;
  #67 = Class              #84            // org/antlr/runtime/TokenSource
  #68 = NameAndType        #85:#34        // nextToken:()Lorg/antlr/runtime/Token;
  #69 = NameAndType        #86:#87        // setTokenIndex:(I)V
  #70 = NameAndType        #88:#89        // getType:()I
  #71 = Utf8               n/a
  #72 = NameAndType        #58:#90        // LT:(I)Ljava/lang/Object;
  #73 = Utf8               org/antlr/runtime/Token
  #74 = Utf8               java/lang/UnsupportedOperationException
  #75 = Utf8               Absolute token indexes are meaningless in an unbuffered stream
  #76 = NameAndType        #26:#91        // "<init>":(Ljava/lang/String;)V
  #77 = NameAndType        #52:#53        // getSourceName:()Ljava/lang/String;
  #78 = NameAndType        #37:#38        // isEOF:(Lorg/antlr/runtime/Token;)Z
  #79 = NameAndType        #33:#34        // nextElement:()Lorg/antlr/runtime/Token;
  #80 = Utf8               org/antlr/runtime/UnbufferedTokenStream
  #81 = Utf8               org/antlr/runtime/misc/LookaheadStream
  #82 = Utf8               org/antlr/runtime/TokenStream
  #83 = Utf8               ()V
  #84 = Utf8               org/antlr/runtime/TokenSource
  #85 = Utf8               nextToken
  #86 = Utf8               setTokenIndex
  #87 = Utf8               (I)V
  #88 = Utf8               getType
  #89 = Utf8               ()I
  #90 = Utf8               (I)Ljava/lang/Object;
  #91 = Utf8               (Ljava/lang/String;)V
{
  protected org.antlr.runtime.TokenSource tokenSource;
    descriptor: Lorg/antlr/runtime/TokenSource;
    flags: (0x0004) ACC_PROTECTED

  protected int tokenIndex;
    descriptor: I
    flags: (0x0004) ACC_PROTECTED

  protected int channel;
    descriptor: I
    flags: (0x0004) ACC_PROTECTED

  public org.antlr.runtime.UnbufferedTokenStream(org.antlr.runtime.TokenSource);
    descriptor: (Lorg/antlr/runtime/TokenSource;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method org/antlr/runtime/misc/LookaheadStream."<init>":()V
         4: aload_0
         5: iconst_0
         6: putfield      #2                  // Field tokenIndex:I
         9: aload_0
        10: iconst_0
        11: putfield      #3                  // Field channel:I
        14: aload_0
        15: aload_1
        16: putfield      #4                  // Field tokenSource:Lorg/antlr/runtime/TokenSource;
        19: return
      LineNumberTable:
        line 54: 0
        line 49: 4
        line 52: 9
        line 55: 14
        line 56: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;
            0      20     1 tokenSource   Lorg/antlr/runtime/TokenSource;

  public org.antlr.runtime.Token nextElement();
    descriptor: ()Lorg/antlr/runtime/Token;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: getfield      #4                  // Field tokenSource:Lorg/antlr/runtime/TokenSource;
         4: invokeinterface #5,  1            // InterfaceMethod org/antlr/runtime/TokenSource.nextToken:()Lorg/antlr/runtime/Token;
         9: astore_1
        10: aload_1
        11: aload_0
        12: dup
        13: getfield      #2                  // Field tokenIndex:I
        16: dup_x1
        17: iconst_1
        18: iadd
        19: putfield      #2                  // Field tokenIndex:I
        22: invokeinterface #6,  2            // InterfaceMethod org/antlr/runtime/Token.setTokenIndex:(I)V
        27: aload_1
        28: areturn
      LineNumberTable:
        line 60: 0
        line 61: 10
        line 62: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;
           10      19     1     t   Lorg/antlr/runtime/Token;

  public boolean isEOF(org.antlr.runtime.Token);
    descriptor: (Lorg/antlr/runtime/Token;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokeinterface #7,  1            // InterfaceMethod org/antlr/runtime/Token.getType:()I
         6: iconst_m1
         7: if_icmpne     14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: ireturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;
            0      16     1     o   Lorg/antlr/runtime/Token;

  public org.antlr.runtime.TokenSource getTokenSource();
    descriptor: ()Lorg/antlr/runtime/TokenSource;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field tokenSource:Lorg/antlr/runtime/TokenSource;
         4: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;

  public java.lang.String toString(int, int);
    descriptor: (II)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=3
         0: ldc           #8                  // String n/a
         2: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;
            0       3     1 start   I
            0       3     2  stop   I

  public java.lang.String toString(org.antlr.runtime.Token, org.antlr.runtime.Token);
    descriptor: (Lorg/antlr/runtime/Token;Lorg/antlr/runtime/Token;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=3
         0: ldc           #8                  // String n/a
         2: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;
            0       3     1 start   Lorg/antlr/runtime/Token;
            0       3     2  stop   Lorg/antlr/runtime/Token;

  public int LA(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #9                  // Method LT:(I)Ljava/lang/Object;
         5: checkcast     #10                 // class org/antlr/runtime/Token
         8: invokeinterface #7,  1            // InterfaceMethod org/antlr/runtime/Token.getType:()I
        13: ireturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;
            0      14     1     i   I

  public org.antlr.runtime.Token get(int);
    descriptor: (I)Lorg/antlr/runtime/Token;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #11                 // class java/lang/UnsupportedOperationException
         3: dup
         4: ldc           #12                 // String Absolute token indexes are meaningless in an unbuffered stream
         6: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;
            0      10     1     i   I

  public java.lang.String getSourceName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field tokenSource:Lorg/antlr/runtime/TokenSource;
         4: invokeinterface #14,  1           // InterfaceMethod org/antlr/runtime/TokenSource.getSourceName:()Ljava/lang/String;
         9: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;

  public boolean isEOF(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #10                 // class org/antlr/runtime/Token
         5: invokevirtual #15                 // Method isEOF:(Lorg/antlr/runtime/Token;)Z
         8: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;
            0       9     1    x0   Ljava/lang/Object;

  public java.lang.Object nextElement();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #16                 // Method nextElement:()Lorg/antlr/runtime/Token;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;

  public org.antlr.runtime.Token LT(int);
    descriptor: (I)Lorg/antlr/runtime/Token;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #17                 // Method org/antlr/runtime/misc/LookaheadStream.LT:(I)Ljava/lang/Object;
         5: checkcast     #10                 // class org/antlr/runtime/Token
         8: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/antlr/runtime/UnbufferedTokenStream;
            0       9     1    x0   I
}
Signature: #60                          // Lorg/antlr/runtime/misc/LookaheadStream<Lorg/antlr/runtime/Token;>;Lorg/antlr/runtime/TokenStream;
SourceFile: "UnbufferedTokenStream.java"
