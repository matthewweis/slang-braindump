Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/ref/SoftReferenceWithWrapper.class
  Last modified May 29, 2022; size 1976 bytes
  SHA-256 checksum 891e278c3eb49a8c0333f0c7dff0065d40446d55b8d986240c3cf8e064f63fa4
  Compiled from "SoftReference.scala"
public class scala.ref.SoftReferenceWithWrapper<T extends java.lang.Object> extends java.lang.ref.SoftReference<T> implements scala.ref.ReferenceWithWrapper<T>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/ref/SoftReferenceWithWrapper
  super_class: #5                         // java/lang/ref/SoftReference
  interfaces: 1, fields: 1, methods: 3, attributes: 5
Constant pool:
   #1 = Utf8               scala/ref/SoftReferenceWithWrapper
   #2 = Class              #1             // scala/ref/SoftReferenceWithWrapper
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/ref/SoftReference<TT;>;Lscala/ref/ReferenceWithWrapper<TT;>;
   #4 = Utf8               java/lang/ref/SoftReference
   #5 = Class              #4             // java/lang/ref/SoftReference
   #6 = Utf8               scala/ref/ReferenceWithWrapper
   #7 = Class              #6             // scala/ref/ReferenceWithWrapper
   #8 = Utf8               SoftReference.scala
   #9 = Utf8               Lscala/reflect/ScalaSignature;
  #10 = Utf8               bytes
  #11 = Utf8               \u0006\u0005]2AAB\u0004\u0005\u0019!Aq\u0005\u0001B\u0001B\u0003%q\u0003\u0003\u0005)\u0001\t\u0005\t\u0015!\u0003*\u0011!a\u0003A!b\u0001\n\u0003i\u0003\u0002\u0003\u0019\u0001\u0005\u0003\u0005\u000b\u0011\u0002\u0018\t\u000bE\u0002A\u0011\u0001\u001a\u00031M{g\r\u001e*fM\u0016\u0014XM\\2f/&$\bn\u0016:baB,\'O\u0003\u0002\t\u0013\u0005\u0019!/\u001a4\u000b\u0003)\tQa]2bY\u0006\u001c\u0001!\u0006\u0002\u000e3M\u0019\u0001AD\u0012\u0011\u0007=)r#D\u0001\u0011\u0015\tA\u0011C\u0003\u0002\u0013\'\u0005!A.\u00198h\u0015\u0005!\u0012\u0001\u00026bm\u0006L!A\u0006\t\u0003\u001bM{g\r\u001e*fM\u0016\u0014XM\\2f!\tA\u0012\u0004\u0004\u0001\u0005\u000bi\u0001!\u0019A\u000e\u0003\u0003Q\u000b\"\u0001\b\u0011\u0011\u0005uqR\"A\u0005\n\u0005}I!a\u0002(pi\"Lgn\u001a\t\u0003;\u0005J!AI\u0005\u0003\r\u0005s\u0017PU3g!\r!SeF\u0007\u0002\u000f%\u0011ae\u0002\u0002\u0015%\u00164WM]3oG\u0016<\u0016\u000e\u001e5Xe\u0006\u0004\b/\u001a:\u0002\u000bY\fG.^3\u0002\u000bE,X-^3\u0011\u0007\u0011Rs#\u0003\u0002,\u000f\tq!+\u001a4fe\u0016t7-Z)vKV,\u0017aB<sCB\u0004XM]\u000b\u0002]A\u0019AeL\f\n\u0005Y9\u0011\u0001C<sCB\u0004XM\u001d\u0011\u0002\rqJg.\u001b;?)\u0011\u0019D\'\u000e\u001c\u0011\u0007\u0011\u0002q\u0003C\u0003(\u000b\u0001\u0007q\u0003C\u0003)\u000b\u0001\u0007\u0011\u0006C\u0003-\u000b\u0001\u0007a\u0006
  #12 = Utf8               wrapper
  #13 = Utf8               Lscala/ref/SoftReference;
  #14 = Utf8               Lscala/ref/SoftReference<TT;>;
  #15 = Utf8               ()Lscala/ref/SoftReference;
  #16 = Utf8               ()Lscala/ref/SoftReference<TT;>;
  #17 = NameAndType        #12:#13        // wrapper:Lscala/ref/SoftReference;
  #18 = Fieldref           #2.#17         // scala/ref/SoftReferenceWithWrapper.wrapper:Lscala/ref/SoftReference;
  #19 = Utf8               this
  #20 = Utf8               Lscala/ref/SoftReferenceWithWrapper;
  #21 = Utf8               ()Lscala/ref/ReferenceWrapper;
  #22 = NameAndType        #12:#15        // wrapper:()Lscala/ref/SoftReference;
  #23 = Methodref          #2.#22         // scala/ref/SoftReferenceWithWrapper.wrapper:()Lscala/ref/SoftReference;
  #24 = Utf8               <init>
  #25 = Utf8               (Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/SoftReference;)V
  #26 = Utf8               (TT;Lscala/ref/ReferenceQueue<TT;>;Lscala/ref/SoftReference<TT;>;)V
  #27 = Utf8               value
  #28 = Utf8               queue
  #29 = Utf8               scala/ref/ReferenceQueue
  #30 = Class              #29            // scala/ref/ReferenceQueue
  #31 = Utf8               underlying
  #32 = Utf8               ()Ljava/lang/ref/ReferenceQueue;
  #33 = NameAndType        #31:#32        // underlying:()Ljava/lang/ref/ReferenceQueue;
  #34 = Methodref          #30.#33        // scala/ref/ReferenceQueue.underlying:()Ljava/lang/ref/ReferenceQueue;
  #35 = Utf8               (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
  #36 = NameAndType        #24:#35        // "<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
  #37 = Methodref          #5.#36         // java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
  #38 = Utf8               Ljava/lang/Object;
  #39 = Utf8               Lscala/ref/ReferenceQueue;
  #40 = Utf8               java/lang/Object
  #41 = Class              #40            // java/lang/Object
  #42 = Utf8               scala/ref/SoftReference
  #43 = Class              #42            // scala/ref/SoftReference
  #44 = Utf8               java/lang/ref/ReferenceQueue
  #45 = Class              #44            // java/lang/ref/ReferenceQueue
  #46 = Utf8               Signature
  #47 = Utf8               Code
  #48 = Utf8               LineNumberTable
  #49 = Utf8               LocalVariableTable
  #50 = Utf8               StackMapTable
  #51 = Utf8               MethodParameters
  #52 = Utf8               SourceFile
  #53 = Utf8               RuntimeVisibleAnnotations
  #54 = Utf8               ScalaInlineInfo
  #55 = Utf8               ScalaSig
{
  private final scala.ref.SoftReference<T> wrapper;
    descriptor: Lscala/ref/SoftReference;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/ref/SoftReference<TT;>;

  public scala.ref.SoftReference<T> wrapper();
    descriptor: ()Lscala/ref/SoftReference;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #18                 // Field wrapper:Lscala/ref/SoftReference;
         4: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/SoftReferenceWithWrapper;
    Signature: #16                          // ()Lscala/ref/SoftReference<TT;>;

  public scala.ref.ReferenceWrapper wrapper();
    descriptor: ()Lscala/ref/ReferenceWrapper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #23                 // Method wrapper:()Lscala/ref/SoftReference;
         4: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/ref/SoftReferenceWithWrapper;

  public scala.ref.SoftReferenceWithWrapper(T, scala.ref.ReferenceQueue<T>, scala.ref.SoftReference<T>);
    descriptor: (Ljava/lang/Object;Lscala/ref/ReferenceQueue;Lscala/ref/SoftReference;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: aload_3
         2: putfield      #18                 // Field wrapper:Lscala/ref/SoftReference;
         5: aload_0
         6: aload_1
         7: aload_2
         8: ifnonnull     15
        11: aconst_null
        12: goto          19
        15: aload_2
        16: invokevirtual #34                 // Method scala/ref/ReferenceQueue.underlying:()Ljava/lang/ref/ReferenceQueue;
        19: invokespecial #37                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
        22: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ this, class java/lang/Object, class scala/ref/ReferenceQueue, class scala/ref/SoftReference ]
          stack = [ this, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ this, class java/lang/Object, class scala/ref/ReferenceQueue, class scala/ref/SoftReference ]
          stack = [ this, class java/lang/Object, class java/lang/ref/ReferenceQueue ]
      LineNumberTable:
        line 34: 0
        line 35: 5
        line 34: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lscala/ref/SoftReferenceWithWrapper;
            0      23     1 value   Ljava/lang/Object;
            0      23     2 queue   Lscala/ref/ReferenceQueue;
            0      23     3 wrapper   Lscala/ref/SoftReference;
    Signature: #26                          // (TT;Lscala/ref/ReferenceQueue<TT;>;Lscala/ref/SoftReference<TT;>;)V
    MethodParameters:
      Name                           Flags
      value                          final
      queue                          final
      wrapper                        final
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/ref/SoftReference<TT;>;Lscala/ref/ReferenceWithWrapper<TT;>;
SourceFile: "SoftReference.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005]2AAB\u0004\u0005\u0019!Aq\u0005\u0001B\u0001B\u0003%q\u0003\u0003\u0005)\u0001\t\u0005\t\u0015!\u0003*\u0011!a\u0003A!b\u0001\n\u0003i\u0003\u0002\u0003\u0019\u0001\u0005\u0003\u0005\u000b\u0011\u0002\u0018\t\u000bE\u0002A\u0011\u0001\u001a\u00031M{g\r\u001e*fM\u0016\u0014XM\\2f/&$\bn\u0016:baB,\'O\u0003\u0002\t\u0013\u0005\u0019!/\u001a4\u000b\u0003)\tQa]2bY\u0006\u001c\u0001!\u0006\u0002\u000e3M\u0019\u0001AD\u0012\u0011\u0007=)r#D\u0001\u0011\u0015\tA\u0011C\u0003\u0002\u0013\'\u0005!A.\u00198h\u0015\u0005!\u0012\u0001\u00026bm\u0006L!A\u0006\t\u0003\u001bM{g\r\u001e*fM\u0016\u0014XM\\2f!\tA\u0012\u0004\u0004\u0001\u0005\u000bi\u0001!\u0019A\u000e\u0003\u0003Q\u000b\"\u0001\b\u0011\u0011\u0005uqR\"A\u0005\n\u0005}I!a\u0002(pi\"Lgn\u001a\t\u0003;\u0005J!AI\u0005\u0003\r\u0005s\u0017PU3g!\r!SeF\u0007\u0002\u000f%\u0011ae\u0002\u0002\u0015%\u00164WM]3oG\u0016<\u0016\u000e\u001e5Xe\u0006\u0004\b/\u001a:\u0002\u000bY\fG.^3\u0002\u000bE,X-^3\u0011\u0007\u0011Rs#\u0003\u0002,\u000f\tq!+\u001a4fe\u0016t7-Z)vKV,\u0017aB<sCB\u0004XM]\u000b\u0002]A\u0019AeL\f\n\u0005Y9\u0011\u0001C<sCB\u0004XM\u001d\u0011\u0002\rqJg.\u001b;?)\u0011\u0019D\'\u000e\u001c\u0011\u0007\u0011\u0002q\u0003C\u0003(\u000b\u0001\u0007q\u0003C\u0003)\u000b\u0001\u0007\u0011\u0006C\u0003-\u000b\u0001\u0007a\u0006"
    )
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 00 00 03 00 18 00 19 00 00 0C 00 15 00 00 0C
   00 0F 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
