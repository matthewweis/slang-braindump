Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/truncate$.class
  Last modified May 29, 2022; size 1147 bytes
  SHA-256 checksum 1b27b7e94ffa8989a37da25d8f76e52efae1bdc6d05447dbfaa9e12f0ec7b90d
  Compiled from "ReadWriteOps.scala"
public final class os.truncate$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // os/truncate$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 3
Constant pool:
   #1 = Utf8               os/truncate$
   #2 = Class              #1             // os/truncate$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               ReadWriteOps.scala
   #6 = Utf8               MODULE$
   #7 = Utf8               Los/truncate$;
   #8 = Utf8               <clinit>
   #9 = Utf8               ()V
  #10 = Utf8               <init>
  #11 = NameAndType        #10:#9         // "<init>":()V
  #12 = Methodref          #2.#11         // os/truncate$."<init>":()V
  #13 = NameAndType        #6:#7          // MODULE$:Los/truncate$;
  #14 = Fieldref           #2.#13         // os/truncate$.MODULE$:Los/truncate$;
  #15 = Utf8               apply
  #16 = Utf8               (Los/Path;J)V
  #17 = Utf8               p
  #18 = Utf8               size
  #19 = Utf8               os/Path
  #20 = Class              #19            // os/Path
  #21 = Utf8               toNIO
  #22 = Utf8               ()Ljava/nio/file/Path;
  #23 = NameAndType        #21:#22        // toNIO:()Ljava/nio/file/Path;
  #24 = Methodref          #20.#23        // os/Path.toNIO:()Ljava/nio/file/Path;
  #25 = Utf8               java/nio/file/OpenOption
  #26 = Class              #25            // java/nio/file/OpenOption
  #27 = Utf8               java/nio/file/StandardOpenOption
  #28 = Class              #27            // java/nio/file/StandardOpenOption
  #29 = Utf8               WRITE
  #30 = Utf8               Ljava/nio/file/StandardOpenOption;
  #31 = NameAndType        #29:#30        // WRITE:Ljava/nio/file/StandardOpenOption;
  #32 = Fieldref           #28.#31        // java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
  #33 = Utf8               java/nio/channels/FileChannel
  #34 = Class              #33            // java/nio/channels/FileChannel
  #35 = Utf8               open
  #36 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
  #37 = NameAndType        #35:#36        // open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
  #38 = Methodref          #34.#37        // java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
  #39 = Utf8               truncate
  #40 = Utf8               (J)Ljava/nio/channels/FileChannel;
  #41 = NameAndType        #39:#40        // truncate:(J)Ljava/nio/channels/FileChannel;
  #42 = Methodref          #34.#41        // java/nio/channels/FileChannel.truncate:(J)Ljava/nio/channels/FileChannel;
  #43 = Utf8               close
  #44 = NameAndType        #43:#9         // close:()V
  #45 = Methodref          #34.#44        // java/nio/channels/FileChannel.close:()V
  #46 = Utf8               channel
  #47 = Utf8               Ljava/nio/channels/FileChannel;
  #48 = Utf8               this
  #49 = Utf8               Los/Path;
  #50 = Utf8               J
  #51 = Utf8               java/lang/Throwable
  #52 = Class              #51            // java/lang/Throwable
  #53 = Methodref          #4.#11         // java/lang/Object."<init>":()V
  #54 = Utf8               Code
  #55 = Utf8               LineNumberTable
  #56 = Utf8               StackMapTable
  #57 = Utf8               LocalVariableTable
  #58 = Utf8               MethodParameters
  #59 = Utf8               SourceFile
  #60 = Utf8               ScalaInlineInfo
  #61 = Utf8               Scala
{
  public static final os.truncate$ MODULE$;
    descriptor: Los/truncate$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/truncate$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Los/truncate$;
        10: return
      LineNumberTable:
        line 199: 0

  public void apply(os.Path, long);
    descriptor: (Los/Path;J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=3
         0: aload_1
         1: invokevirtual #24                 // Method os/Path.toNIO:()Ljava/nio/file/Path;
         4: iconst_1
         5: anewarray     #26                 // class java/nio/file/OpenOption
         8: dup
         9: iconst_0
        10: getstatic     #32                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
        13: aastore
        14: invokestatic  #38                 // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
        17: astore        4
        19: aload         4
        21: lload_2
        22: invokevirtual #42                 // Method java/nio/channels/FileChannel.truncate:(J)Ljava/nio/channels/FileChannel;
        25: pop
        26: goto          39
        29: astore        5
        31: aload         4
        33: invokevirtual #45                 // Method java/nio/channels/FileChannel.close:()V
        36: aload         5
        38: athrow
        39: aload         4
        41: invokevirtual #45                 // Method java/nio/channels/FileChannel.close:()V
        44: return
      Exception table:
         from    to  target type
            19    29    29   any
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class os/truncate$, class os/Path, long, class java/nio/channels/FileChannel ]
          stack = [ class java/lang/Throwable ]
        frame_type = 9 /* same */
      LineNumberTable:
        line 201: 0
        line 202: 19
        line 203: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      25     4 channel   Ljava/nio/channels/FileChannel;
            0      45     0  this   Los/truncate$;
            0      45     1     p   Los/Path;
            0      45     2  size   J
    MethodParameters:
      Name                           Flags
      p                              final
      size                           final

  private os.truncate$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #53                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 213: 0
        line 199: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/truncate$;
}
SourceFile: "ReadWriteOps.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 01 00 02 00 0A 00 09 01 00 0F 00 10 01
  Scala: length = 0x0 (unknown attribute)

