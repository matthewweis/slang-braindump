Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/CaseClassMacros$HasCtorUnapply$.class
  Last modified May 29, 2022; size 3922 bytes
  SHA-256 checksum 8440c7124f685c18ddc2f6256f99619534b8d3c9926b192f9d5a40dc399b5a5f
  Compiled from "generic.scala"
public class shapeless.CaseClassMacros$HasCtorUnapply$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // shapeless/CaseClassMacros$HasCtorUnapply$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 5, attributes: 5
Constant pool:
    #1 = Utf8               shapeless/CaseClassMacros$HasCtorUnapply$
    #2 = Class              #1            // shapeless/CaseClassMacros$HasCtorUnapply$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               generic.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/reflect/api/Names$TermNameApi
   #12 = Class              #11           // scala/reflect/api/Names$TermNameApi
   #13 = Utf8               scala/reflect/api/Names
   #14 = Class              #13           // scala/reflect/api/Names
   #15 = Utf8               TermNameApi
   #16 = Utf8               scala/reflect/api/Types$TypeApi
   #17 = Class              #16           // scala/reflect/api/Types$TypeApi
   #18 = Utf8               scala/reflect/api/Types
   #19 = Class              #18           // scala/reflect/api/Types
   #20 = Utf8               TypeApi
   #21 = Utf8               shapeless/CaseClassMacros
   #22 = Class              #21           // shapeless/CaseClassMacros
   #23 = Utf8               HasCtorUnapply$
   #24 = Utf8               shapeless/CaseClassMacros$HasUnapply$
   #25 = Class              #24           // shapeless/CaseClassMacros$HasUnapply$
   #26 = Utf8               HasUnapply$
   #27 = Utf8               shapeless/CaseClassMacros$HasUniqueCtor$
   #28 = Class              #27           // shapeless/CaseClassMacros$HasUniqueCtor$
   #29 = Utf8               HasUniqueCtor$
   #30 = Utf8               $outer
   #31 = Utf8               Lshapeless/CaseClassMacros;
   #32 = Utf8               apply
   #33 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Z
   #34 = Utf8               tpe
   #35 = Utf8               unapply
   #36 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #37 = NameAndType        #35:#36       // unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #38 = Methodref          #2.#37        // shapeless/CaseClassMacros$HasCtorUnapply$.unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #39 = Utf8               scala/Option
   #40 = Class              #39           // scala/Option
   #41 = Utf8               isDefined
   #42 = Utf8               ()Z
   #43 = NameAndType        #41:#42       // isDefined:()Z
   #44 = Methodref          #40.#43       // scala/Option.isDefined:()Z
   #45 = Utf8               this
   #46 = Utf8               Lshapeless/CaseClassMacros$HasCtorUnapply$;
   #47 = Utf8               Lscala/reflect/api/Types$TypeApi;
   #48 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Lscala/reflect/api/Names$TermNameApi;Lscala/reflect/api/Types$TypeApi;>;>;>;
   #49 = Utf8               scala/Tuple2
   #50 = Class              #49           // scala/Tuple2
   #51 = Utf8               <init>
   #52 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #53 = NameAndType        #51:#52       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #54 = Methodref          #50.#53       // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #55 = Utf8               _1
   #56 = Utf8               ()Ljava/lang/Object;
   #57 = NameAndType        #55:#56       // _1:()Ljava/lang/Object;
   #58 = Methodref          #50.#57       // scala/Tuple2._1:()Ljava/lang/Object;
   #59 = Utf8               _2
   #60 = NameAndType        #59:#56       // _2:()Ljava/lang/Object;
   #61 = Methodref          #50.#60       // scala/Tuple2._2:()Ljava/lang/Object;
   #62 = NameAndType        #30:#31       // $outer:Lshapeless/CaseClassMacros;
   #63 = Fieldref           #2.#62        // shapeless/CaseClassMacros$HasCtorUnapply$.$outer:Lshapeless/CaseClassMacros;
   #64 = Utf8               c
   #65 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #66 = NameAndType        #64:#65       // c:()Lscala/reflect/macros/whitebox/Context;
   #67 = InterfaceMethodref #22.#66       // shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
   #68 = Utf8               scala/reflect/macros/whitebox/Context
   #69 = Class              #68           // scala/reflect/macros/whitebox/Context
   #70 = Utf8               universe
   #71 = Utf8               ()Lscala/reflect/macros/Universe;
   #72 = NameAndType        #70:#71       // universe:()Lscala/reflect/macros/Universe;
   #73 = InterfaceMethodref #69.#72       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
   #74 = Utf8               scala/reflect/macros/Universe
   #75 = Class              #74           // scala/reflect/macros/Universe
   #76 = Utf8               TypeTagg
   #77 = Utf8               ()Lscala/reflect/ClassTag;
   #78 = NameAndType        #76:#77       // TypeTagg:()Lscala/reflect/ClassTag;
   #79 = Methodref          #75.#78       // scala/reflect/macros/Universe.TypeTagg:()Lscala/reflect/ClassTag;
   #80 = Utf8               scala/reflect/ClassTag
   #81 = Class              #80           // scala/reflect/ClassTag
   #82 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #83 = NameAndType        #35:#82       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #84 = InterfaceMethodref #81.#83       // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
   #85 = Utf8               isEmpty
   #86 = NameAndType        #85:#42       // isEmpty:()Z
   #87 = Methodref          #40.#86       // scala/Option.isEmpty:()Z
   #88 = Utf8               get
   #89 = NameAndType        #88:#56       // get:()Ljava/lang/Object;
   #90 = Methodref          #40.#89       // scala/Option.get:()Ljava/lang/Object;
   #91 = Utf8               HasUniqueCtor
   #92 = Utf8               ()Lshapeless/CaseClassMacros$HasUniqueCtor$;
   #93 = NameAndType        #91:#92       // HasUniqueCtor:()Lshapeless/CaseClassMacros$HasUniqueCtor$;
   #94 = InterfaceMethodref #22.#93       // shapeless/CaseClassMacros.HasUniqueCtor:()Lshapeless/CaseClassMacros$HasUniqueCtor$;
   #95 = Methodref          #28.#37       // shapeless/CaseClassMacros$HasUniqueCtor$.unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #96 = Utf8               scala/collection/immutable/List
   #97 = Class              #96           // scala/collection/immutable/List
   #98 = Utf8               HasUnapply
   #99 = Utf8               ()Lshapeless/CaseClassMacros$HasUnapply$;
  #100 = NameAndType        #98:#99       // HasUnapply:()Lshapeless/CaseClassMacros$HasUnapply$;
  #101 = InterfaceMethodref #22.#100      // shapeless/CaseClassMacros.HasUnapply:()Lshapeless/CaseClassMacros$HasUnapply$;
  #102 = Methodref          #25.#37       // shapeless/CaseClassMacros$HasUnapply$.unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
  #103 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #104 = MethodType         #103          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #105 = Utf8               $anonfun$unapply$23
  #106 = Utf8               (Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #107 = NameAndType        #105:#106     // $anonfun$unapply$23:(Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #108 = Methodref          #2.#107       // shapeless/CaseClassMacros$HasCtorUnapply$.$anonfun$unapply$23:(Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #109 = MethodHandle       6:#108        // REF_invokeStatic shapeless/CaseClassMacros$HasCtorUnapply$.$anonfun$unapply$23:(Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #110 = MethodType         #106          //  (Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #111 = Integer            5
  #112 = Integer            1
  #113 = Utf8               java/lang/invoke/LambdaMetafactory
  #114 = Class              #113          // java/lang/invoke/LambdaMetafactory
  #115 = Utf8               altMetafactory
  #116 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #117 = NameAndType        #115:#116     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #118 = Methodref          #114.#117     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #119 = MethodHandle       6:#118        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #120 = Utf8               ()Lscala/Function1;
  #121 = NameAndType        #32:#120      // apply:()Lscala/Function1;
  #122 = InvokeDynamic      #0:#121       // #0:apply:()Lscala/Function1;
  #123 = Utf8               map
  #124 = Utf8               (Lscala/Function1;)Lscala/collection/immutable/List;
  #125 = NameAndType        #123:#124     // map:(Lscala/Function1;)Lscala/collection/immutable/List;
  #126 = Methodref          #97.#125      // scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
  #127 = Utf8               equalTypes
  #128 = Utf8               (Lscala/collection/immutable/List;Lscala/collection/immutable/List;)Z
  #129 = NameAndType        #127:#128     // equalTypes:(Lscala/collection/immutable/List;Lscala/collection/immutable/List;)Z
  #130 = InterfaceMethodref #22.#129      // shapeless/CaseClassMacros.equalTypes:(Lscala/collection/immutable/List;Lscala/collection/immutable/List;)Z
  #131 = Utf8               scala/Some
  #132 = Class              #131          // scala/Some
  #133 = Utf8               (Ljava/lang/Object;)V
  #134 = NameAndType        #51:#133      // "<init>":(Ljava/lang/Object;)V
  #135 = Methodref          #132.#134     // scala/Some."<init>":(Ljava/lang/Object;)V
  #136 = Utf8               scala/None$
  #137 = Class              #136          // scala/None$
  #138 = Utf8               MODULE$
  #139 = Utf8               Lscala/None$;
  #140 = NameAndType        #138:#139     // MODULE$:Lscala/None$;
  #141 = Fieldref           #137.#140     // scala/None$.MODULE$:Lscala/None$;
  #142 = Utf8               bs
  #143 = Utf8               Lscala/collection/immutable/List;
  #144 = Utf8               as
  #145 = Utf8               x$30
  #146 = Utf8               Lscala/Tuple2;
  #147 = Utf8               (Lshapeless/CaseClassMacros;)V
  #148 = Utf8               ()V
  #149 = NameAndType        #51:#148      // "<init>":()V
  #150 = Methodref          #4.#149       // java/lang/Object."<init>":()V
  #151 = Utf8               $deserializeLambda$
  #152 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #153 = Utf8               scala/runtime/LambdaDeserialize
  #154 = Class              #153          // scala/runtime/LambdaDeserialize
  #155 = Utf8               bootstrap
  #156 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #157 = NameAndType        #155:#156     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #158 = Methodref          #154.#157     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #159 = MethodHandle       6:#158        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #160 = Utf8               lambdaDeserialize
  #161 = NameAndType        #160:#152     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #162 = InvokeDynamic      #1:#161       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #163 = Utf8               Code
  #164 = Utf8               LineNumberTable
  #165 = Utf8               LocalVariableTable
  #166 = Utf8               MethodParameters
  #167 = Utf8               StackMapTable
  #168 = Utf8               Signature
  #169 = Utf8               InnerClasses
  #170 = Utf8               SourceFile
  #171 = Utf8               BootstrapMethods
  #172 = Utf8               ScalaInlineInfo
  #173 = Utf8               Scala
{
  private final shapeless.CaseClassMacros $outer;
    descriptor: Lshapeless/CaseClassMacros;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public boolean apply(scala.reflect.api.Types$TypeApi);
    descriptor: (Lscala/reflect/api/Types$TypeApi;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #38                 // Method unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
         5: invokevirtual #44                 // Method scala/Option.isDefined:()Z
         8: ireturn
      LineNumberTable:
        line 862: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lshapeless/CaseClassMacros$HasCtorUnapply$;
            0       9     1   tpe   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      tpe                            final

  public scala.Option<scala.collection.immutable.List<scala.Tuple2<scala.reflect.api.Names$TermNameApi, scala.reflect.api.Types$TypeApi>>> unapply(scala.reflect.api.Types$TypeApi);
    descriptor: (Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=14, args_size=2
         0: new           #50                 // class scala/Tuple2
         3: dup
         4: aload_1
         5: aload_1
         6: invokespecial #54                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: astore_3
        10: aload_3
        11: ifnull        272
        14: aload_3
        15: invokevirtual #58                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        18: checkcast     #17                 // class scala/reflect/api/Types$TypeApi
        21: astore        4
        23: aload_3
        24: invokevirtual #61                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        27: checkcast     #17                 // class scala/reflect/api/Types$TypeApi
        30: astore        5
        32: aload         4
        34: ifnull        269
        37: aload_0
        38: getfield      #63                 // Field $outer:Lshapeless/CaseClassMacros;
        41: invokeinterface #67,  1           // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        46: invokeinterface #73,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        51: invokevirtual #79                 // Method scala/reflect/macros/Universe.TypeTagg:()Lscala/reflect/ClassTag;
        54: aload         4
        56: invokeinterface #84,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        61: astore        6
        63: aload         6
        65: invokevirtual #87                 // Method scala/Option.isEmpty:()Z
        68: ifne          266
        71: aload         6
        73: invokevirtual #90                 // Method scala/Option.get:()Ljava/lang/Object;
        76: checkcast     #17                 // class scala/reflect/api/Types$TypeApi
        79: astore        7
        81: aload         7
        83: ifnull        263
        86: aload_0
        87: getfield      #63                 // Field $outer:Lshapeless/CaseClassMacros;
        90: invokeinterface #94,  1           // InterfaceMethod shapeless/CaseClassMacros.HasUniqueCtor:()Lshapeless/CaseClassMacros$HasUniqueCtor$;
        95: aload         7
        97: invokevirtual #95                 // Method shapeless/CaseClassMacros$HasUniqueCtor$.unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
       100: astore        8
       102: aload         8
       104: invokevirtual #87                 // Method scala/Option.isEmpty:()Z
       107: ifne          260
       110: aload         8
       112: invokevirtual #90                 // Method scala/Option.get:()Ljava/lang/Object;
       115: checkcast     #97                 // class scala/collection/immutable/List
       118: astore        9
       120: aload         5
       122: ifnull        257
       125: aload_0
       126: getfield      #63                 // Field $outer:Lshapeless/CaseClassMacros;
       129: invokeinterface #67,  1           // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
       134: invokeinterface #73,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       139: invokevirtual #79                 // Method scala/reflect/macros/Universe.TypeTagg:()Lscala/reflect/ClassTag;
       142: aload         5
       144: invokeinterface #84,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       149: astore        10
       151: aload         10
       153: invokevirtual #87                 // Method scala/Option.isEmpty:()Z
       156: ifne          254
       159: aload         10
       161: invokevirtual #90                 // Method scala/Option.get:()Ljava/lang/Object;
       164: checkcast     #17                 // class scala/reflect/api/Types$TypeApi
       167: astore        11
       169: aload         11
       171: ifnull        251
       174: aload_0
       175: getfield      #63                 // Field $outer:Lshapeless/CaseClassMacros;
       178: invokeinterface #101,  1          // InterfaceMethod shapeless/CaseClassMacros.HasUnapply:()Lshapeless/CaseClassMacros$HasUnapply$;
       183: aload         11
       185: invokevirtual #102                // Method shapeless/CaseClassMacros$HasUnapply$.unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
       188: astore        12
       190: aload         12
       192: invokevirtual #87                 // Method scala/Option.isEmpty:()Z
       195: ifne          248
       198: aload         12
       200: invokevirtual #90                 // Method scala/Option.get:()Ljava/lang/Object;
       203: checkcast     #97                 // class scala/collection/immutable/List
       206: astore        13
       208: aload_0
       209: getfield      #63                 // Field $outer:Lshapeless/CaseClassMacros;
       212: aload         9
       214: invokedynamic #122,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       219: invokevirtual #126                // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
       222: aload         13
       224: invokeinterface #130,  3          // InterfaceMethod shapeless/CaseClassMacros.equalTypes:(Lscala/collection/immutable/List;Lscala/collection/immutable/List;)Z
       229: ifeq          245
       232: new           #132                // class scala/Some
       235: dup
       236: aload         9
       238: invokespecial #135                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       241: astore_2
       242: goto          282
       245: goto          275
       248: goto          275
       251: goto          275
       254: goto          275
       257: goto          275
       260: goto          275
       263: goto          275
       266: goto          275
       269: goto          275
       272: goto          275
       275: getstatic     #141                // Field scala/None$.MODULE$:Lscala/None$;
       278: astore_2
       279: goto          282
       282: aload_2
       283: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 245
          locals = [ class shapeless/CaseClassMacros$HasCtorUnapply$, class scala/reflect/api/Types$TypeApi, top, class scala/Tuple2, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Types$TypeApi, class scala/Option, class scala/reflect/api/Types$TypeApi, class scala/Option, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Types$TypeApi, class scala/Option, class scala/collection/immutable/List ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class shapeless/CaseClassMacros$HasCtorUnapply$, class scala/reflect/api/Types$TypeApi, class scala/Option, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 864: 0
        line 865: 10
        line 864: 71
        line 865: 81
        line 864: 110
        line 865: 120
        line 864: 159
        line 865: 169
        line 864: 198
        line 865: 208
        line 866: 275
        line 864: 282
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          206      42    13    bs   Lscala/collection/immutable/List;
          118     142     9    as   Lscala/collection/immutable/List;
            0     284     0  this   Lshapeless/CaseClassMacros$HasCtorUnapply$;
            0     284     1   tpe   Lscala/reflect/api/Types$TypeApi;
    Signature: #48                          // (Lscala/reflect/api/Types$TypeApi;)Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Lscala/reflect/api/Names$TermNameApi;Lscala/reflect/api/Types$TypeApi;>;>;>;
    MethodParameters:
      Name                           Flags
      tpe                            final

  public static final scala.reflect.api.Types$TypeApi $anonfun$unapply$23(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #61                 // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: checkcast     #17                 // class scala/reflect/api/Types$TypeApi
         7: areturn
      LineNumberTable:
        line 865: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$30   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$30                           final

  public shapeless.CaseClassMacros$HasCtorUnapply$(shapeless.CaseClassMacros);
    descriptor: (Lshapeless/CaseClassMacros;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #63                 // Field $outer:Lshapeless/CaseClassMacros;
        11: aload_0
        12: invokespecial #150                // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 861: 0
        line 870: 11
        line 861: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lshapeless/CaseClassMacros$HasCtorUnapply$;
            0      16     1 $outer   Lshapeless/CaseClassMacros;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #162,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // TermNameApi=class scala/reflect/api/Names$TermNameApi of class scala/reflect/api/Names
  public abstract #20= #17 of #19;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public #23= #2 of #22;                  // HasCtorUnapply$=class shapeless/CaseClassMacros$HasCtorUnapply$ of class shapeless/CaseClassMacros
  public #26= #25 of #22;                 // HasUnapply$=class shapeless/CaseClassMacros$HasUnapply$ of class shapeless/CaseClassMacros
  public #29= #28 of #22;                 // HasUniqueCtor$=class shapeless/CaseClassMacros$HasUniqueCtor$ of class shapeless/CaseClassMacros
SourceFile: "generic.scala"
BootstrapMethods:
  0: #119 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #104 (Ljava/lang/Object;)Ljava/lang/Object;
      #109 REF_invokeStatic shapeless/CaseClassMacros$HasCtorUnapply$.$anonfun$unapply$23:(Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
      #110 (Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
      #111 5
      #112 1
      #110 (Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  1: #159 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #109 REF_invokeStatic shapeless/CaseClassMacros$HasCtorUnapply$.$anonfun$unapply$23:(Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 01 00 04 00 69 00 6A 01 00 33 00 93 01 00 20
   00 21 01 00 23 00 24 01
  Scala: length = 0x0 (unknown attribute)

