Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/ShellImpl.class
  Last modified May 29, 2022; size 12750 bytes
  SHA-256 checksum 386b6e0fd725abe3812a12c0456dd5f94928cb2664be5f8d9b55b24c4f6dd2bf
  Compiled from "Shell.scala"
public final class org.scalatest.ShellImpl implements org.scalatest.Shell,scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/ShellImpl
  super_class: #4                         // java/lang/Object
  interfaces: 3, fields: 15, methods: 57, attributes: 4
Constant pool:
    #1 = Utf8               org/scalatest/ShellImpl
    #2 = Class              #1            // org/scalatest/ShellImpl
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/scalatest/Shell
    #6 = Class              #5            // org/scalatest/Shell
    #7 = Utf8               scala/Product
    #8 = Class              #7            // scala/Product
    #9 = Utf8               java/io/Serializable
   #10 = Class              #9            // java/io/Serializable
   #11 = Utf8               Shell.scala
   #12 = Utf8               Lscala/reflect/ScalaSignature;
   #13 = Utf8               bytes
   #14 = Utf8               \u0006\u0005\t=a!\u0002\u001d:\u0005fj\u0004\u0002\u0003-\u0001\u0005+\u0007I\u0011A-\t\u0011u\u0003!\u0011#Q\u0001\niC\u0001B\u0018\u0001\u0003\u0016\u0004%\t!\u0017\u0005\t?\u0002\u0011\t\u0012)A\u00055\"A\u0001\r\u0001BK\u0002\u0013\u0005\u0011\f\u0003\u0005b\u0001\tE\t\u0015!\u0003[\u0011!\u0011\u0007A!f\u0001\n\u0003I\u0006\u0002C2\u0001\u0005#\u0005\u000b\u0011\u0002.\t\u0011\u0011\u0004!Q3A\u0005\u0002eC\u0001\"\u001a\u0001\u0003\u0012\u0003\u0006IA\u0017\u0005\u0006M\u0002!\ta\u001a\u0005\t]\u0002A)\u0019!C\u0001_\"A\u0001\u000f\u0001EC\u0002\u0013\u0005q\u000e\u0003\u0005r\u0001!\u0015\r\u0011\"\u0001p\u0011!\u0011\b\u0001#b\u0001\n\u0003y\u0007\u0002C:\u0001\u0011\u000b\u0007I\u0011A8\t\u0011Q\u0004\u0001R1A\u0005\u0002=D\u0001\"\u001e\u0001\t\u0006\u0004%\ta\u001c\u0005\tm\u0002A)\u0019!C\u0001_\"Aq\u000f\u0001EC\u0002\u0013\u0005q\u000eC\u0003y\u0001\u0011\u0005\u0011\u0010C\u0005\u0002$\u0001\t\n\u0011\"\u0001\u0002&!I\u00111\b\u0001\u0012\u0002\u0013\u0005\u0011Q\b\u0005\n\u0003\u0003\u0002\u0011\u0011!C\u0001\u0003\u0007B\u0011\"a\u0014\u0001#\u0003%\t!!\u0015\t\u0013\u0005U\u0003!%A\u0005\u0002\u0005E\u0003\"CA,\u0001E\u0005I\u0011AA)\u0011%\tI\u0006AI\u0001\n\u0003\t\t\u0006C\u0005\u0002\\\u0001\t\n\u0011\"\u0001\u0002R!I\u0011Q\f\u0001\u0002\u0002\u0013\u0005\u0013q\f\u0005\n\u0003_\u0002\u0011\u0011!C\u0001\u0003cB\u0011\"!\u001f\u0001\u0003\u0003%\t!a\u001f\t\u0013\u0005\u001d\u0005!!A\u0005B\u0005%\u0005\"CAL\u0001\u0005\u0005I\u0011AAM\u0011%\ti\nAA\u0001\n\u0003\ny\nC\u0005\u0002$\u0002\t\t\u0011\"\u0011\u0002&\"I\u0011q\u0015\u0001\u0002\u0002\u0013\u0005\u0013\u0011\u0016\u0005\n\u0003W\u0003\u0011\u0011!C!\u0003[;!\"!-:\u0003\u0003E\t!OAZ\r%A\u0014(!A\t\u0002e\n)\f\u0003\u0004gQ\u0011\u0005\u0011Q\u001a\u0005\n\u0003OC\u0013\u0011!C#\u0003SC\u0011\"a4)\u0003\u0003%\t)!5\t\u0013\u0005u\u0007&%A\u0005\u0002\u0005E\u0003\"CApQE\u0005I\u0011AA)\u0011%\t\t\u000fKI\u0001\n\u0003\t\t\u0006C\u0005\u0002d\"\n\n\u0011\"\u0001\u0002R!I\u0011Q\u001d\u0015\u0012\u0002\u0013\u0005\u0011\u0011\u000b\u0005\n\u0003OD\u0013\u0011!CA\u0003SD\u0011\"a?)#\u0003%\t!!\u0015\t\u0013\u0005u\b&%A\u0005\u0002\u0005E\u0003\"CA\u0000QE\u0005I\u0011AA)\u0011%\u0011\t\u0001KI\u0001\n\u0003\t\t\u0006C\u0005\u0003\u0004!\n\n\u0011\"\u0001\u0002R!I!Q\u0001\u0015\u0002\u0002\u0013%!q\u0001\u0002\n\'\",G\u000e\\%na2T!AO\u001e\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\u001f\u0002\u0007=\u0014xmE\u0003\u0001}\u0011C5\n\u0005\u0002@\u00056\t\u0001IC\u0001B\u0003\u0015\u00198-\u00197b\u0013\t\u0019\u0005I\u0001\u0004B]f\u0014VM\u001a\t\u0003\u000b\u001ak\u0011!O\u0005\u0003\u000ff\u0012Qa\u00155fY2\u0004\"aP%\n\u0005)\u0003%a\u0002)s_\u0012,8\r\u001e\t\u0003\u0019Vs!!T*\u000f\u00059\u0013V\"A(\u000b\u0005A\u000b\u0016A\u0002\u001fs_>$hh\u0001\u0001\n\u0003\u0005K!\u0001\u0016!\u0002\u000fA\f7m[1hK&\u0011ak\u0016\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0003)\u0002\u000b1bY8m_J\u0004\u0016m]:fIV\t!\f\u0005\u0002@7&\u0011A\f\u0011\u0002\b\u0005>|G.Z1o\u00031\u0019w\u000e\\8s!\u0006\u001c8/\u001a3!\u0003=!WO]1uS>t7\u000fU1tg\u0016$\u0017\u0001\u00053ve\u0006$\u0018n\u001c8t!\u0006\u001c8/\u001a3!\u0003E\u0019\bn\u001c:ugR\f7m[:QCN\u001cX\rZ\u0001\u0013g\"|\'\u000f^:uC\u000e\\7\u000fU1tg\u0016$\u0007%\u0001\tgk2d7\u000f^1dWN\u0004\u0016m]:fI\u0006\tb-\u001e7mgR\f7m[:QCN\u001cX\r\u001a\u0011\u0002\u0017M$\u0018\r^:QCN\u001cX\rZ\u0001\rgR\fGo\u001d)bgN,G\rI\u0001\u0007y%t\u0017\u000e\u001e \u0015\r!L\'n\u001b7n!\t)\u0005\u0001C\u0004Y\u0017A\u0005\t\u0019\u0001.\t\u000fy[\u0001\u0013!a\u00015\"9\u0001m\u0003I\u0001\u0002\u0004Q\u0006b\u00022\f!\u0003\u0005\rA\u0017\u0005\bI.\u0001\n\u00111\u0001[\u0003\u0015\u0019w\u000e\\8s+\u0005!\u0015!\u00033ve\u0006$\u0018n\u001c8t\u0003-\u0019\bn\u001c:ugR\f7m[:\u0002\u0015\u0019,H\u000e\\:uC\u000e\\7/A\u0003ti\u0006$8/A\u0004o_\u000e|Gn\u001c:\u0002\u00179|G-\u001e:bi&|gn]\u0001\t]>\u001cH/Y2lg\u00069an\\:uCR\u001c\u0018a\u0001:v]R1!0`A\u0003\u00033\u0001\"aP>\n\u0005q\u0004%\u0001B+oSRDQA`\u000bA\u0002}\fQa];ji\u0016\u00042!RA\u0001\u0013\r\t\u0019!\u000f\u0002\u0006\'VLG/\u001a\u0005\n\u0003\u000f)\u0002\u0013!a\u0001\u0003\u0013\t\u0001\u0002^3ti:\u000bW.\u001a\t\u0005\u0003\u0017\t\u0019B\u0004\u0003\u0002\u000e\u0005=\u0001C\u0001(A\u0013\r\t\t\u0002Q\u0001\u0007!J,G-\u001a4\n\t\u0005U\u0011q\u0003\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0007\u0005E\u0001\tC\u0005\u0002\u001cU\u0001\n\u00111\u0001\u0002\u001e\u0005I1m\u001c8gS\u001el\u0015\r\u001d\t\u0004\u000b\u0006}\u0011bAA\u0011s\tI1i\u001c8gS\u001el\u0015\r]\u0001\u000eeVtG\u0005Z3gCVdG\u000f\n\u001a\u0016\u0005\u0005\u001d\"\u0006BA\u0005\u0003SY#!a\u000b\u0011\t\u00055\u0012qG\u0007\u0003\u0003_QA!!\r\u00024\u0005IQO\\2iK\u000e\\W\r\u001a\u0006\u0004\u0003k\u0001\u0015AC1o]>$\u0018\r^5p]&!\u0011\u0011HA\u0018\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u000eeVtG\u0005Z3gCVdG\u000fJ\u001a\u0016\u0005\u0005}\"\u0006BA\u000f\u0003S\tAaY8qsRY\u0001.!\u0012\u0002H\u0005%\u00131JA\'\u0011\u001dA\u0006\u0004%AA\u0002iCqA\u0018\r\u0011\u0002\u0003\u0007!\fC\u0004a1A\u0005\t\u0019\u0001.\t\u000f\tD\u0002\u0013!a\u00015\"9A\r\u0007I\u0001\u0002\u0004Q\u0016AD2paf$C-\u001a4bk2$H%M\u000b\u0003\u0003\'R3AWA\u0015\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII\nabY8qs\u0012\"WMZ1vYR$3\'\u0001\bd_BLH\u0005Z3gCVdG\u000f\n\u001b\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%k\u0005i\u0001O]8ek\u000e$\bK]3gSb,\"!!\u0019\u0011\t\u0005\r\u0014QN\u0007\u0003\u0003KRA!a\u001a\u0002j\u0005!A.\u00198h\u0015\t\tY\'\u0001\u0003kCZ\f\u0017\u0002BA\u000b\u0003K\nA\u0002\u001d:pIV\u001cG/\u0011:jif,\"!a\u001d\u0011\u0007}\n)(C\u0002\u0002x\u0001\u00131!\u00138u\u00039\u0001(o\u001c3vGR,E.Z7f]R$B!! \u0002\u0004B\u0019q(a \n\u0007\u0005\u0005\u0005IA\u0002B]fD\u0011\"!\"!\u0003\u0003\u0005\r!a\u001d\u0002\u0007a$\u0013\'A\bqe>$Wo\u0019;Ji\u0016\u0014\u0018\r^8s+\t\tY\t\u0005\u0004\u0002\u000e\u0006M\u0015QP\u0007\u0003\u0003\u001fS1!!%A\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0005\u0003+\u000byI\u0001\u0005Ji\u0016\u0014\u0018\r^8s\u0003!\u0019\u0017M\\#rk\u0006dGc\u0001.\u0002\u001c\"I\u0011Q\u0011\u0012\u0002\u0002\u0003\u0007\u0011QP\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\r\u0006\u0003\u0002b\u0005\u0005\u0006\"CACG\u0005\u0005\t\u0019AA:\u0003!A\u0017m\u001d5D_\u0012,GCAA:\u0003!!xn\u0015;sS:<GCAA1\u0003\u0019)\u0017/^1mgR\u0019!,a,\t\u0013\u0005\u0015e%!AA\u0002\u0005u\u0014!C*iK2d\u0017*\u001c9m!\t)\u0005fE\u0003)\u0003o\u000b\u0019\r\u0005\u0006\u0002:\u0006}&L\u0017.[5\"l!!a/\u000b\u0007\u0005u\u0006)A\u0004sk:$\u0018.\\3\n\t\u0005\u0005\u00171\u0018\u0002\u0012\u0003\n\u001cHO]1di\u001a+hn\u0019;j_:,\u0004\u0003BAc\u0003\u0017l!!a2\u000b\t\u0005%\u0017\u0011N\u0001\u0003S>L1AVAd)\t\t\u0019,A\u0003baBd\u0017\u0010F\u0006i\u0003\'\f).a6\u0002Z\u0006m\u0007b\u0002-,!\u0003\u0005\rA\u0017\u0005\b=.\u0002\n\u00111\u0001[\u0011\u001d\u00017\u0006%AA\u0002iCqAY\u0016\u0011\u0002\u0003\u0007!\fC\u0004eWA\u0005\t\u0019\u0001.\u0002\u001f\u0005\u0004\b\u000f\\=%I\u00164\u0017-\u001e7uIE\nq\"\u00199qYf$C-\u001a4bk2$HEM\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%g\u0005y\u0011\r\u001d9ms\u0012\"WMZ1vYR$C\'A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00136\u0003\u001d)h.\u00199qYf$B!a;\u0002xB)q(!<\u0002r&\u0019\u0011q\u001e!\u0003\r=\u0003H/[8o!!y\u00141\u001f.[5jS\u0016bAA{\u0001\n1A+\u001e9mKVB\u0001\"!?2\u0003\u0003\u0005\r\u0001[\u0001\u0004q\u0012\u0002\u0014a\u0007\u0013mKN\u001c\u0018N\\5uI\u001d\u0014X-\u0019;fe\u0012\"WMZ1vYR$\u0013\'A\u000e%Y\u0016\u001c8/\u001b8ji\u0012:\'/Z1uKJ$C-\u001a4bk2$HEM\u0001\u001cI1,7o]5oSR$sM]3bi\u0016\u0014H\u0005Z3gCVdG\u000fJ\u001a\u00027\u0011bWm]:j]&$He\u001a:fCR,\'\u000f\n3fM\u0006,H\u000e\u001e\u00135\u0003m!C.Z:tS:LG\u000fJ4sK\u0006$XM\u001d\u0013eK\u001a\fW\u000f\u001c;%k\u0005aqO]5uKJ+\u0007\u000f\\1dKR\u0011!\u0011\u0002\t\u0005\u0003G\u0012Y!\u0003\u0003\u0003\u000e\u0005\u0015$AB(cU\u0016\u001cG\u000f
   #15 = Utf8               color
   #16 = Utf8               Lorg/scalatest/Shell;
   #17 = Utf8               durations
   #18 = Utf8               shortstacks
   #19 = Utf8               fullstacks
   #20 = Utf8               stats
   #21 = Utf8               nocolor
   #22 = Utf8               nodurations
   #23 = Utf8               nostacks
   #24 = Utf8               nostats
   #25 = Utf8               colorPassed
   #26 = Utf8               Z
   #27 = Utf8               durationsPassed
   #28 = Utf8               shortstacksPassed
   #29 = Utf8               fullstacksPassed
   #30 = Utf8               statsPassed
   #31 = Utf8               bitmap$0
   #32 = Utf8               I
   #33 = Utf8               $lessinit$greater$default$5
   #34 = Utf8               ()Z
   #35 = Utf8               org/scalatest/ShellImpl$
   #36 = Class              #35           // org/scalatest/ShellImpl$
   #37 = Utf8               MODULE$
   #38 = Utf8               Lorg/scalatest/ShellImpl$;
   #39 = NameAndType        #37:#38       // MODULE$:Lorg/scalatest/ShellImpl$;
   #40 = Fieldref           #36.#39       // org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
   #41 = NameAndType        #33:#34       // $lessinit$greater$default$5:()Z
   #42 = Methodref          #36.#41       // org/scalatest/ShellImpl$.$lessinit$greater$default$5:()Z
   #43 = Utf8               $lessinit$greater$default$4
   #44 = NameAndType        #43:#34       // $lessinit$greater$default$4:()Z
   #45 = Methodref          #36.#44       // org/scalatest/ShellImpl$.$lessinit$greater$default$4:()Z
   #46 = Utf8               $lessinit$greater$default$3
   #47 = NameAndType        #46:#34       // $lessinit$greater$default$3:()Z
   #48 = Methodref          #36.#47       // org/scalatest/ShellImpl$.$lessinit$greater$default$3:()Z
   #49 = Utf8               $lessinit$greater$default$2
   #50 = NameAndType        #49:#34       // $lessinit$greater$default$2:()Z
   #51 = Methodref          #36.#50       // org/scalatest/ShellImpl$.$lessinit$greater$default$2:()Z
   #52 = Utf8               $lessinit$greater$default$1
   #53 = NameAndType        #52:#34       // $lessinit$greater$default$1:()Z
   #54 = Methodref          #36.#53       // org/scalatest/ShellImpl$.$lessinit$greater$default$1:()Z
   #55 = Utf8               unapply
   #56 = Utf8               (Lorg/scalatest/ShellImpl;)Lscala/Option;
   #57 = Utf8               (Lorg/scalatest/ShellImpl;)Lscala/Option<Lscala/Tuple5<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;>;
   #58 = Utf8               x$0
   #59 = NameAndType        #55:#56       // unapply:(Lorg/scalatest/ShellImpl;)Lscala/Option;
   #60 = Methodref          #36.#59       // org/scalatest/ShellImpl$.unapply:(Lorg/scalatest/ShellImpl;)Lscala/Option;
   #61 = Utf8               Lorg/scalatest/ShellImpl;
   #62 = Utf8               apply$default$5
   #63 = NameAndType        #62:#34       // apply$default$5:()Z
   #64 = Methodref          #36.#63       // org/scalatest/ShellImpl$.apply$default$5:()Z
   #65 = Utf8               apply$default$4
   #66 = NameAndType        #65:#34       // apply$default$4:()Z
   #67 = Methodref          #36.#66       // org/scalatest/ShellImpl$.apply$default$4:()Z
   #68 = Utf8               apply$default$3
   #69 = NameAndType        #68:#34       // apply$default$3:()Z
   #70 = Methodref          #36.#69       // org/scalatest/ShellImpl$.apply$default$3:()Z
   #71 = Utf8               apply$default$2
   #72 = NameAndType        #71:#34       // apply$default$2:()Z
   #73 = Methodref          #36.#72       // org/scalatest/ShellImpl$.apply$default$2:()Z
   #74 = Utf8               apply$default$1
   #75 = NameAndType        #74:#34       // apply$default$1:()Z
   #76 = Methodref          #36.#75       // org/scalatest/ShellImpl$.apply$default$1:()Z
   #77 = Utf8               apply
   #78 = Utf8               (ZZZZZ)Lorg/scalatest/ShellImpl;
   #79 = NameAndType        #77:#78       // apply:(ZZZZZ)Lorg/scalatest/ShellImpl;
   #80 = Methodref          #36.#79       // org/scalatest/ShellImpl$.apply:(ZZZZZ)Lorg/scalatest/ShellImpl;
   #81 = Utf8               tupled
   #82 = Utf8               ()Lscala/Function1;
   #83 = Utf8               ()Lscala/Function1<Lscala/Tuple5<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;Lorg/scalatest/ShellImpl;>;
   #84 = NameAndType        #81:#82       // tupled:()Lscala/Function1;
   #85 = Methodref          #36.#84       // org/scalatest/ShellImpl$.tupled:()Lscala/Function1;
   #86 = Utf8               curried
   #87 = Utf8               ()Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/ShellImpl;>;>;>;>;>;
   #88 = NameAndType        #86:#82       // curried:()Lscala/Function1;
   #89 = Methodref          #36.#88       // org/scalatest/ShellImpl$.curried:()Lscala/Function1;
   #90 = Utf8               productElementNames
   #91 = Utf8               ()Lscala/collection/Iterator;
   #92 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #93 = Utf8               productElementNames$
   #94 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #95 = NameAndType        #93:#94       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #96 = InterfaceMethodref #8.#95        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #97 = Utf8               this
   #98 = NameAndType        #25:#26       // colorPassed:Z
   #99 = Fieldref           #2.#98        // org/scalatest/ShellImpl.colorPassed:Z
  #100 = NameAndType        #27:#26       // durationsPassed:Z
  #101 = Fieldref           #2.#100       // org/scalatest/ShellImpl.durationsPassed:Z
  #102 = NameAndType        #28:#26       // shortstacksPassed:Z
  #103 = Fieldref           #2.#102       // org/scalatest/ShellImpl.shortstacksPassed:Z
  #104 = NameAndType        #29:#26       // fullstacksPassed:Z
  #105 = Fieldref           #2.#104       // org/scalatest/ShellImpl.fullstacksPassed:Z
  #106 = NameAndType        #30:#26       // statsPassed:Z
  #107 = Fieldref           #2.#106       // org/scalatest/ShellImpl.statsPassed:Z
  #108 = Utf8               color$lzycompute
  #109 = Utf8               ()Lorg/scalatest/Shell;
  #110 = NameAndType        #31:#32       // bitmap$0:I
  #111 = Fieldref           #2.#110       // org/scalatest/ShellImpl.bitmap$0:I
  #112 = Utf8               copy$default$2
  #113 = NameAndType        #112:#34      // copy$default$2:()Z
  #114 = Methodref          #2.#113       // org/scalatest/ShellImpl.copy$default$2:()Z
  #115 = Utf8               copy$default$3
  #116 = NameAndType        #115:#34      // copy$default$3:()Z
  #117 = Methodref          #2.#116       // org/scalatest/ShellImpl.copy$default$3:()Z
  #118 = Utf8               copy$default$4
  #119 = NameAndType        #118:#34      // copy$default$4:()Z
  #120 = Methodref          #2.#119       // org/scalatest/ShellImpl.copy$default$4:()Z
  #121 = Utf8               copy$default$5
  #122 = NameAndType        #121:#34      // copy$default$5:()Z
  #123 = Methodref          #2.#122       // org/scalatest/ShellImpl.copy$default$5:()Z
  #124 = Utf8               copy
  #125 = NameAndType        #124:#78      // copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
  #126 = Methodref          #2.#125       // org/scalatest/ShellImpl.copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
  #127 = NameAndType        #15:#16       // color:Lorg/scalatest/Shell;
  #128 = Fieldref           #2.#127       // org/scalatest/ShellImpl.color:Lorg/scalatest/Shell;
  #129 = Utf8               java/lang/Throwable
  #130 = Class              #129          // java/lang/Throwable
  #131 = NameAndType        #108:#109     // color$lzycompute:()Lorg/scalatest/Shell;
  #132 = Methodref          #2.#131       // org/scalatest/ShellImpl.color$lzycompute:()Lorg/scalatest/Shell;
  #133 = Utf8               durations$lzycompute
  #134 = Utf8               copy$default$1
  #135 = NameAndType        #134:#34      // copy$default$1:()Z
  #136 = Methodref          #2.#135       // org/scalatest/ShellImpl.copy$default$1:()Z
  #137 = NameAndType        #17:#16       // durations:Lorg/scalatest/Shell;
  #138 = Fieldref           #2.#137       // org/scalatest/ShellImpl.durations:Lorg/scalatest/Shell;
  #139 = Utf8               x$1
  #140 = Utf8               x$2
  #141 = Utf8               x$3
  #142 = Utf8               x$4
  #143 = Utf8               x$5
  #144 = NameAndType        #133:#109     // durations$lzycompute:()Lorg/scalatest/Shell;
  #145 = Methodref          #2.#144       // org/scalatest/ShellImpl.durations$lzycompute:()Lorg/scalatest/Shell;
  #146 = Utf8               shortstacks$lzycompute
  #147 = NameAndType        #18:#16       // shortstacks:Lorg/scalatest/Shell;
  #148 = Fieldref           #2.#147       // org/scalatest/ShellImpl.shortstacks:Lorg/scalatest/Shell;
  #149 = NameAndType        #146:#109     // shortstacks$lzycompute:()Lorg/scalatest/Shell;
  #150 = Methodref          #2.#149       // org/scalatest/ShellImpl.shortstacks$lzycompute:()Lorg/scalatest/Shell;
  #151 = Utf8               fullstacks$lzycompute
  #152 = NameAndType        #19:#16       // fullstacks:Lorg/scalatest/Shell;
  #153 = Fieldref           #2.#152       // org/scalatest/ShellImpl.fullstacks:Lorg/scalatest/Shell;
  #154 = NameAndType        #151:#109     // fullstacks$lzycompute:()Lorg/scalatest/Shell;
  #155 = Methodref          #2.#154       // org/scalatest/ShellImpl.fullstacks$lzycompute:()Lorg/scalatest/Shell;
  #156 = Utf8               stats$lzycompute
  #157 = NameAndType        #20:#16       // stats:Lorg/scalatest/Shell;
  #158 = Fieldref           #2.#157       // org/scalatest/ShellImpl.stats:Lorg/scalatest/Shell;
  #159 = NameAndType        #156:#109     // stats$lzycompute:()Lorg/scalatest/Shell;
  #160 = Methodref          #2.#159       // org/scalatest/ShellImpl.stats$lzycompute:()Lorg/scalatest/Shell;
  #161 = Utf8               nocolor$lzycompute
  #162 = NameAndType        #21:#16       // nocolor:Lorg/scalatest/Shell;
  #163 = Fieldref           #2.#162       // org/scalatest/ShellImpl.nocolor:Lorg/scalatest/Shell;
  #164 = NameAndType        #161:#109     // nocolor$lzycompute:()Lorg/scalatest/Shell;
  #165 = Methodref          #2.#164       // org/scalatest/ShellImpl.nocolor$lzycompute:()Lorg/scalatest/Shell;
  #166 = Utf8               nodurations$lzycompute
  #167 = NameAndType        #22:#16       // nodurations:Lorg/scalatest/Shell;
  #168 = Fieldref           #2.#167       // org/scalatest/ShellImpl.nodurations:Lorg/scalatest/Shell;
  #169 = NameAndType        #166:#109     // nodurations$lzycompute:()Lorg/scalatest/Shell;
  #170 = Methodref          #2.#169       // org/scalatest/ShellImpl.nodurations$lzycompute:()Lorg/scalatest/Shell;
  #171 = Utf8               nostacks$lzycompute
  #172 = NameAndType        #23:#16       // nostacks:Lorg/scalatest/Shell;
  #173 = Fieldref           #2.#172       // org/scalatest/ShellImpl.nostacks:Lorg/scalatest/Shell;
  #174 = NameAndType        #171:#109     // nostacks$lzycompute:()Lorg/scalatest/Shell;
  #175 = Methodref          #2.#174       // org/scalatest/ShellImpl.nostacks$lzycompute:()Lorg/scalatest/Shell;
  #176 = Utf8               nostats$lzycompute
  #177 = NameAndType        #24:#16       // nostats:Lorg/scalatest/Shell;
  #178 = Fieldref           #2.#177       // org/scalatest/ShellImpl.nostats:Lorg/scalatest/Shell;
  #179 = NameAndType        #176:#109     // nostats$lzycompute:()Lorg/scalatest/Shell;
  #180 = Methodref          #2.#179       // org/scalatest/ShellImpl.nostats$lzycompute:()Lorg/scalatest/Shell;
  #181 = Utf8               run
  #182 = Utf8               (Lorg/scalatest/Suite;Ljava/lang/String;Lorg/scalatest/ConfigMap;)V
  #183 = Utf8               suite
  #184 = Utf8               testName
  #185 = Utf8               configMap
  #186 = NameAndType        #25:#34       // colorPassed:()Z
  #187 = Methodref          #2.#186       // org/scalatest/ShellImpl.colorPassed:()Z
  #188 = NameAndType        #27:#34       // durationsPassed:()Z
  #189 = Methodref          #2.#188       // org/scalatest/ShellImpl.durationsPassed:()Z
  #190 = NameAndType        #28:#34       // shortstacksPassed:()Z
  #191 = Methodref          #2.#190       // org/scalatest/ShellImpl.shortstacksPassed:()Z
  #192 = NameAndType        #29:#34       // fullstacksPassed:()Z
  #193 = Methodref          #2.#192       // org/scalatest/ShellImpl.fullstacksPassed:()Z
  #194 = NameAndType        #30:#34       // statsPassed:()Z
  #195 = Methodref          #2.#194       // org/scalatest/ShellImpl.statsPassed:()Z
  #196 = Utf8               org/scalatest/Suite
  #197 = Class              #196          // org/scalatest/Suite
  #198 = Utf8               execute
  #199 = Utf8               (Ljava/lang/String;Lorg/scalatest/ConfigMap;ZZZZZ)V
  #200 = NameAndType        #198:#199     // execute:(Ljava/lang/String;Lorg/scalatest/ConfigMap;ZZZZZ)V
  #201 = InterfaceMethodref #197.#200     // org/scalatest/Suite.execute:(Ljava/lang/String;Lorg/scalatest/ConfigMap;ZZZZZ)V
  #202 = Utf8               Lorg/scalatest/Suite;
  #203 = Utf8               Ljava/lang/String;
  #204 = Utf8               Lorg/scalatest/ConfigMap;
  #205 = Utf8               run$default$2
  #206 = Utf8               ()Ljava/lang/String;
  #207 = Utf8               run$default$3
  #208 = Utf8               ()Lorg/scalatest/ConfigMap;
  #209 = Utf8               org/scalatest/ConfigMap$
  #210 = Class              #209          // org/scalatest/ConfigMap$
  #211 = Utf8               Lorg/scalatest/ConfigMap$;
  #212 = NameAndType        #37:#211      // MODULE$:Lorg/scalatest/ConfigMap$;
  #213 = Fieldref           #210.#212     // org/scalatest/ConfigMap$.MODULE$:Lorg/scalatest/ConfigMap$;
  #214 = Utf8               empty
  #215 = NameAndType        #214:#208     // empty:()Lorg/scalatest/ConfigMap;
  #216 = Methodref          #210.#215     // org/scalatest/ConfigMap$.empty:()Lorg/scalatest/ConfigMap;
  #217 = Utf8               <init>
  #218 = Utf8               (ZZZZZ)V
  #219 = NameAndType        #217:#218     // "<init>":(ZZZZZ)V
  #220 = Methodref          #2.#219       // org/scalatest/ShellImpl."<init>":(ZZZZZ)V
  #221 = Utf8               productPrefix
  #222 = Utf8               ShellImpl
  #223 = String             #222          // ShellImpl
  #224 = Utf8               productArity
  #225 = Utf8               ()I
  #226 = Utf8               productElement
  #227 = Utf8               (I)Ljava/lang/Object;
  #228 = Utf8               scala/runtime/BoxesRunTime
  #229 = Class              #228          // scala/runtime/BoxesRunTime
  #230 = Utf8               boxToBoolean
  #231 = Utf8               (Z)Ljava/lang/Boolean;
  #232 = NameAndType        #230:#231     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #233 = Methodref          #229.#232     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #234 = Utf8               scala/runtime/Statics
  #235 = Class              #234          // scala/runtime/Statics
  #236 = Utf8               ioobe
  #237 = NameAndType        #236:#227     // ioobe:(I)Ljava/lang/Object;
  #238 = Methodref          #235.#237     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #239 = Utf8               productIterator
  #240 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #241 = Utf8               scala/runtime/ScalaRunTime$
  #242 = Class              #241          // scala/runtime/ScalaRunTime$
  #243 = Utf8               Lscala/runtime/ScalaRunTime$;
  #244 = NameAndType        #37:#243      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #245 = Fieldref           #242.#244     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #246 = Utf8               typedProductIterator
  #247 = NameAndType        #246:#94      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #248 = Methodref          #242.#247     // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #249 = Utf8               canEqual
  #250 = Utf8               (Ljava/lang/Object;)Z
  #251 = Utf8               Ljava/lang/Object;
  #252 = Utf8               productElementName
  #253 = Utf8               (I)Ljava/lang/String;
  #254 = String             #25           // colorPassed
  #255 = String             #27           // durationsPassed
  #256 = String             #28           // shortstacksPassed
  #257 = String             #29           // fullstacksPassed
  #258 = String             #30           // statsPassed
  #259 = Utf8               java/lang/String
  #260 = Class              #259          // java/lang/String
  #261 = Utf8               hashCode
  #262 = Integer            -889275714
  #263 = NameAndType        #221:#206     // productPrefix:()Ljava/lang/String;
  #264 = Methodref          #2.#263       // org/scalatest/ShellImpl.productPrefix:()Ljava/lang/String;
  #265 = NameAndType        #261:#225     // hashCode:()I
  #266 = Methodref          #260.#265     // java/lang/String.hashCode:()I
  #267 = Utf8               mix
  #268 = Utf8               (II)I
  #269 = NameAndType        #267:#268     // mix:(II)I
  #270 = Methodref          #235.#269     // scala/runtime/Statics.mix:(II)I
  #271 = Utf8               finalizeHash
  #272 = NameAndType        #271:#268     // finalizeHash:(II)I
  #273 = Methodref          #235.#272     // scala/runtime/Statics.finalizeHash:(II)I
  #274 = Utf8               toString
  #275 = Utf8               _toString
  #276 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #277 = NameAndType        #275:#276     // _toString:(Lscala/Product;)Ljava/lang/String;
  #278 = Methodref          #242.#277     // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #279 = Utf8               equals
  #280 = Utf8               ()V
  #281 = NameAndType        #217:#280     // "<init>":()V
  #282 = Methodref          #4.#281       // java/lang/Object."<init>":()V
  #283 = Utf8               $init$
  #284 = Utf8               (Lscala/Product;)V
  #285 = NameAndType        #283:#284     // $init$:(Lscala/Product;)V
  #286 = InterfaceMethodref #8.#285       // scala/Product.$init$:(Lscala/Product;)V
  #287 = Utf8               Code
  #288 = Utf8               LocalVariableTable
  #289 = Utf8               Signature
  #290 = Utf8               MethodParameters
  #291 = Utf8               LineNumberTable
  #292 = Utf8               StackMapTable
  #293 = Utf8               SourceFile
  #294 = Utf8               RuntimeVisibleAnnotations
  #295 = Utf8               ScalaInlineInfo
  #296 = Utf8               ScalaSig
{
  private org.scalatest.Shell color;
    descriptor: Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE

  private org.scalatest.Shell durations;
    descriptor: Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE

  private org.scalatest.Shell shortstacks;
    descriptor: Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE

  private org.scalatest.Shell fullstacks;
    descriptor: Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE

  private org.scalatest.Shell stats;
    descriptor: Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE

  private org.scalatest.Shell nocolor;
    descriptor: Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE

  private org.scalatest.Shell nodurations;
    descriptor: Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE

  private org.scalatest.Shell nostacks;
    descriptor: Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE

  private org.scalatest.Shell nostats;
    descriptor: Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE

  private final boolean colorPassed;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean durationsPassed;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean shortstacksPassed;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean fullstacksPassed;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean statsPassed;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile int bitmap$0;
    descriptor: I
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static boolean $lessinit$greater$default$5();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #42                 // Method org/scalatest/ShellImpl$.$lessinit$greater$default$5:()Z
         6: ireturn

  public static boolean $lessinit$greater$default$4();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #45                 // Method org/scalatest/ShellImpl$.$lessinit$greater$default$4:()Z
         6: ireturn

  public static boolean $lessinit$greater$default$3();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #48                 // Method org/scalatest/ShellImpl$.$lessinit$greater$default$3:()Z
         6: ireturn

  public static boolean $lessinit$greater$default$2();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #51                 // Method org/scalatest/ShellImpl$.$lessinit$greater$default$2:()Z
         6: ireturn

  public static boolean $lessinit$greater$default$1();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #54                 // Method org/scalatest/ShellImpl$.$lessinit$greater$default$1:()Z
         6: ireturn

  public static scala.Option<scala.Tuple5<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>> unapply(org.scalatest.ShellImpl);
    descriptor: (Lorg/scalatest/ShellImpl;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: aload_0
         4: invokevirtual #60                 // Method org/scalatest/ShellImpl$.unapply:(Lorg/scalatest/ShellImpl;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$0   Lorg/scalatest/ShellImpl;
    Signature: #57                          // (Lorg/scalatest/ShellImpl;)Lscala/Option<Lscala/Tuple5<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static boolean apply$default$5();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #64                 // Method org/scalatest/ShellImpl$.apply$default$5:()Z
         6: ireturn

  public static boolean apply$default$4();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #67                 // Method org/scalatest/ShellImpl$.apply$default$4:()Z
         6: ireturn

  public static boolean apply$default$3();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #70                 // Method org/scalatest/ShellImpl$.apply$default$3:()Z
         6: ireturn

  public static boolean apply$default$2();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #73                 // Method org/scalatest/ShellImpl$.apply$default$2:()Z
         6: ireturn

  public static boolean apply$default$1();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #76                 // Method org/scalatest/ShellImpl$.apply$default$1:()Z
         6: ireturn

  public static org.scalatest.ShellImpl apply(boolean, boolean, boolean, boolean, boolean);
    descriptor: (ZZZZZ)Lorg/scalatest/ShellImpl;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=5, args_size=5
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: iload_0
         4: iload_1
         5: iload_2
         6: iload_3
         7: iload         4
         9: invokevirtual #80                 // Method org/scalatest/ShellImpl$.apply:(ZZZZZ)Lorg/scalatest/ShellImpl;
        12: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 colorPassed   Z
            0      13     1 durationsPassed   Z
            0      13     2 shortstacksPassed   Z
            0      13     3 fullstacksPassed   Z
            0      13     4 statsPassed   Z
    MethodParameters:
      Name                           Flags
      colorPassed                    final
      durationsPassed                final
      shortstacksPassed              final
      fullstacksPassed               final
      statsPassed                    final

  public static scala.Function1<scala.Tuple5<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>, org.scalatest.ShellImpl> tupled();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #85                 // Method org/scalatest/ShellImpl$.tupled:()Lscala/Function1;
         6: areturn
    Signature: #83                          // ()Lscala/Function1<Lscala/Tuple5<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;Lorg/scalatest/ShellImpl;>;

  public static scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, org.scalatest.ShellImpl>>>>> curried();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #40                 // Field org/scalatest/ShellImpl$.MODULE$:Lorg/scalatest/ShellImpl$;
         3: invokevirtual #89                 // Method org/scalatest/ShellImpl$.curried:()Lscala/Function1;
         6: areturn
    Signature: #87                          // ()Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/ShellImpl;>;>;>;>;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #96                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;
    Signature: #92                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public boolean colorPassed();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #99                 // Field colorPassed:Z
         4: ireturn
      LineNumberTable:
        line 387: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  public boolean durationsPassed();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #101                // Field durationsPassed:Z
         4: ireturn
      LineNumberTable:
        line 388: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  public boolean shortstacksPassed();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #103                // Field shortstacksPassed:Z
         4: ireturn
      LineNumberTable:
        line 389: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  public boolean fullstacksPassed();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #105                // Field fullstacksPassed:Z
         4: ireturn
      LineNumberTable:
        line 390: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  public boolean statsPassed();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #107                // Field statsPassed:Z
         4: ireturn
      LineNumberTable:
        line 391: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  private org.scalatest.Shell color$lzycompute();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:I
         8: iconst_1
         9: iand
        10: iconst_0
        11: if_icmpne     49
        14: aload_0
        15: aload_0
        16: iconst_1
        17: aload_0
        18: invokevirtual #114                // Method copy$default$2:()Z
        21: aload_0
        22: invokevirtual #117                // Method copy$default$3:()Z
        25: aload_0
        26: invokevirtual #120                // Method copy$default$4:()Z
        29: aload_0
        30: invokevirtual #123                // Method copy$default$5:()Z
        33: invokevirtual #126                // Method copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
        36: putfield      #128                // Field color:Lorg/scalatest/Shell;
        39: aload_0
        40: aload_0
        41: getfield      #111                // Field bitmap$0:I
        44: iconst_1
        45: ior
        46: putfield      #111                // Field bitmap$0:I
        49: aload_1
        50: monitorexit
        51: goto          57
        54: aload_1
        55: monitorexit
        56: athrow
        57: aload_0
        58: getfield      #128                // Field color:Lorg/scalatest/Shell;
        61: areturn
      Exception table:
         from    to  target type
             4    49    54   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 49
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 394: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.Shell color();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:I
         4: iconst_1
         5: iand
         6: iconst_0
         7: if_icmpne     17
        10: aload_0
        11: invokespecial #132                // Method color$lzycompute:()Lorg/scalatest/Shell;
        14: goto          21
        17: aload_0
        18: getfield      #128                // Field color:Lorg/scalatest/Shell;
        21: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/scalatest/Shell ]
      LineNumberTable:
        line 394: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/scalatest/ShellImpl;

  private org.scalatest.Shell durations$lzycompute();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=7, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:I
         8: iconst_2
         9: iand
        10: iconst_0
        11: if_icmpne     65
        14: aload_0
        15: iconst_1
        16: istore_2
        17: aload_0
        18: invokevirtual #136                // Method copy$default$1:()Z
        21: istore_3
        22: aload_0
        23: invokevirtual #117                // Method copy$default$3:()Z
        26: istore        4
        28: aload_0
        29: invokevirtual #120                // Method copy$default$4:()Z
        32: istore        5
        34: aload_0
        35: invokevirtual #123                // Method copy$default$5:()Z
        38: istore        6
        40: aload_0
        41: iload_3
        42: iconst_1
        43: iload         4
        45: iload         5
        47: iload         6
        49: invokevirtual #126                // Method copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
        52: putfield      #138                // Field durations:Lorg/scalatest/Shell;
        55: aload_0
        56: aload_0
        57: getfield      #111                // Field bitmap$0:I
        60: iconst_2
        61: ior
        62: putfield      #111                // Field bitmap$0:I
        65: aload_1
        66: monitorexit
        67: goto          73
        70: aload_1
        71: monitorexit
        72: athrow
        73: aload_0
        74: getfield      #138                // Field durations:Lorg/scalatest/Shell;
        77: areturn
      Exception table:
         from    to  target type
             4    65    70   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 65
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 395: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      35     2   x$1   Z
           22      30     3   x$2   Z
           28      24     4   x$3   Z
           34      18     5   x$4   Z
           40      12     6   x$5   Z
            0      78     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.Shell durations();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:I
         4: iconst_2
         5: iand
         6: iconst_0
         7: if_icmpne     17
        10: aload_0
        11: invokespecial #145                // Method durations$lzycompute:()Lorg/scalatest/Shell;
        14: goto          21
        17: aload_0
        18: getfield      #138                // Field durations:Lorg/scalatest/Shell;
        21: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/scalatest/Shell ]
      LineNumberTable:
        line 395: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/scalatest/ShellImpl;

  private org.scalatest.Shell shortstacks$lzycompute();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=7, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:I
         8: iconst_4
         9: iand
        10: iconst_0
        11: if_icmpne     62
        14: aload_0
        15: iconst_1
        16: istore_2
        17: iconst_0
        18: istore_3
        19: aload_0
        20: invokevirtual #136                // Method copy$default$1:()Z
        23: istore        4
        25: aload_0
        26: invokevirtual #114                // Method copy$default$2:()Z
        29: istore        5
        31: aload_0
        32: invokevirtual #123                // Method copy$default$5:()Z
        35: istore        6
        37: aload_0
        38: iload         4
        40: iload         5
        42: iconst_1
        43: iconst_0
        44: iload         6
        46: invokevirtual #126                // Method copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
        49: putfield      #148                // Field shortstacks:Lorg/scalatest/Shell;
        52: aload_0
        53: aload_0
        54: getfield      #111                // Field bitmap$0:I
        57: iconst_4
        58: ior
        59: putfield      #111                // Field bitmap$0:I
        62: aload_1
        63: monitorexit
        64: goto          70
        67: aload_1
        68: monitorexit
        69: athrow
        70: aload_0
        71: getfield      #148                // Field shortstacks:Lorg/scalatest/Shell;
        74: areturn
      Exception table:
         from    to  target type
             4    62    67   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 62
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 396: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      32     2   x$1   Z
           19      30     3   x$2   Z
           25      24     4   x$3   Z
           31      18     5   x$4   Z
           37      12     6   x$5   Z
            0      75     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.Shell shortstacks();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:I
         4: iconst_4
         5: iand
         6: iconst_0
         7: if_icmpne     17
        10: aload_0
        11: invokespecial #150                // Method shortstacks$lzycompute:()Lorg/scalatest/Shell;
        14: goto          21
        17: aload_0
        18: getfield      #148                // Field shortstacks:Lorg/scalatest/Shell;
        21: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/scalatest/Shell ]
      LineNumberTable:
        line 396: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/scalatest/ShellImpl;

  private org.scalatest.Shell fullstacks$lzycompute();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=7, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:I
         8: bipush        8
        10: iand
        11: iconst_0
        12: if_icmpne     64
        15: aload_0
        16: iconst_1
        17: istore_2
        18: iconst_0
        19: istore_3
        20: aload_0
        21: invokevirtual #136                // Method copy$default$1:()Z
        24: istore        4
        26: aload_0
        27: invokevirtual #114                // Method copy$default$2:()Z
        30: istore        5
        32: aload_0
        33: invokevirtual #123                // Method copy$default$5:()Z
        36: istore        6
        38: aload_0
        39: iload         4
        41: iload         5
        43: iconst_0
        44: iconst_1
        45: iload         6
        47: invokevirtual #126                // Method copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
        50: putfield      #153                // Field fullstacks:Lorg/scalatest/Shell;
        53: aload_0
        54: aload_0
        55: getfield      #111                // Field bitmap$0:I
        58: bipush        8
        60: ior
        61: putfield      #111                // Field bitmap$0:I
        64: aload_1
        65: monitorexit
        66: goto          72
        69: aload_1
        70: monitorexit
        71: athrow
        72: aload_0
        73: getfield      #153                // Field fullstacks:Lorg/scalatest/Shell;
        76: areturn
      Exception table:
         from    to  target type
             4    64    69   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 64
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 397: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      32     2   x$1   Z
           20      30     3   x$2   Z
           26      24     4   x$3   Z
           32      18     5   x$4   Z
           38      12     6   x$5   Z
            0      77     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.Shell fullstacks();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:I
         4: bipush        8
         6: iand
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #155                // Method fullstacks$lzycompute:()Lorg/scalatest/Shell;
        15: goto          22
        18: aload_0
        19: getfield      #153                // Field fullstacks:Lorg/scalatest/Shell;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/scalatest/Shell ]
      LineNumberTable:
        line 397: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/scalatest/ShellImpl;

  private org.scalatest.Shell stats$lzycompute();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=7, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:I
         8: bipush        16
        10: iand
        11: iconst_0
        12: if_icmpne     67
        15: aload_0
        16: iconst_1
        17: istore_2
        18: aload_0
        19: invokevirtual #136                // Method copy$default$1:()Z
        22: istore_3
        23: aload_0
        24: invokevirtual #114                // Method copy$default$2:()Z
        27: istore        4
        29: aload_0
        30: invokevirtual #117                // Method copy$default$3:()Z
        33: istore        5
        35: aload_0
        36: invokevirtual #120                // Method copy$default$4:()Z
        39: istore        6
        41: aload_0
        42: iload_3
        43: iload         4
        45: iload         5
        47: iload         6
        49: iconst_1
        50: invokevirtual #126                // Method copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
        53: putfield      #158                // Field stats:Lorg/scalatest/Shell;
        56: aload_0
        57: aload_0
        58: getfield      #111                // Field bitmap$0:I
        61: bipush        16
        63: ior
        64: putfield      #111                // Field bitmap$0:I
        67: aload_1
        68: monitorexit
        69: goto          75
        72: aload_1
        73: monitorexit
        74: athrow
        75: aload_0
        76: getfield      #158                // Field stats:Lorg/scalatest/Shell;
        79: areturn
      Exception table:
         from    to  target type
             4    67    72   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 67
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 398: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      35     2   x$1   Z
           23      30     3   x$2   Z
           29      24     4   x$3   Z
           35      18     5   x$4   Z
           41      12     6   x$5   Z
            0      80     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.Shell stats();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:I
         4: bipush        16
         6: iand
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #160                // Method stats$lzycompute:()Lorg/scalatest/Shell;
        15: goto          22
        18: aload_0
        19: getfield      #158                // Field stats:Lorg/scalatest/Shell;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/scalatest/Shell ]
      LineNumberTable:
        line 398: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/scalatest/ShellImpl;

  private org.scalatest.Shell nocolor$lzycompute();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:I
         8: bipush        32
        10: iand
        11: iconst_0
        12: if_icmpne     51
        15: aload_0
        16: aload_0
        17: iconst_0
        18: aload_0
        19: invokevirtual #114                // Method copy$default$2:()Z
        22: aload_0
        23: invokevirtual #117                // Method copy$default$3:()Z
        26: aload_0
        27: invokevirtual #120                // Method copy$default$4:()Z
        30: aload_0
        31: invokevirtual #123                // Method copy$default$5:()Z
        34: invokevirtual #126                // Method copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
        37: putfield      #163                // Field nocolor:Lorg/scalatest/Shell;
        40: aload_0
        41: aload_0
        42: getfield      #111                // Field bitmap$0:I
        45: bipush        32
        47: ior
        48: putfield      #111                // Field bitmap$0:I
        51: aload_1
        52: monitorexit
        53: goto          59
        56: aload_1
        57: monitorexit
        58: athrow
        59: aload_0
        60: getfield      #163                // Field nocolor:Lorg/scalatest/Shell;
        63: areturn
      Exception table:
         from    to  target type
             4    51    56   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 51
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 399: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      64     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.Shell nocolor();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:I
         4: bipush        32
         6: iand
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #165                // Method nocolor$lzycompute:()Lorg/scalatest/Shell;
        15: goto          22
        18: aload_0
        19: getfield      #163                // Field nocolor:Lorg/scalatest/Shell;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/scalatest/Shell ]
      LineNumberTable:
        line 399: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/scalatest/ShellImpl;

  private org.scalatest.Shell nodurations$lzycompute();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=7, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:I
         8: bipush        64
        10: iand
        11: iconst_0
        12: if_icmpne     67
        15: aload_0
        16: iconst_0
        17: istore_2
        18: aload_0
        19: invokevirtual #136                // Method copy$default$1:()Z
        22: istore_3
        23: aload_0
        24: invokevirtual #117                // Method copy$default$3:()Z
        27: istore        4
        29: aload_0
        30: invokevirtual #120                // Method copy$default$4:()Z
        33: istore        5
        35: aload_0
        36: invokevirtual #123                // Method copy$default$5:()Z
        39: istore        6
        41: aload_0
        42: iload_3
        43: iconst_0
        44: iload         4
        46: iload         5
        48: iload         6
        50: invokevirtual #126                // Method copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
        53: putfield      #168                // Field nodurations:Lorg/scalatest/Shell;
        56: aload_0
        57: aload_0
        58: getfield      #111                // Field bitmap$0:I
        61: bipush        64
        63: ior
        64: putfield      #111                // Field bitmap$0:I
        67: aload_1
        68: monitorexit
        69: goto          75
        72: aload_1
        73: monitorexit
        74: athrow
        75: aload_0
        76: getfield      #168                // Field nodurations:Lorg/scalatest/Shell;
        79: areturn
      Exception table:
         from    to  target type
             4    67    72   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 67
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 400: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      35     2   x$1   Z
           23      30     3   x$2   Z
           29      24     4   x$3   Z
           35      18     5   x$4   Z
           41      12     6   x$5   Z
            0      80     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.Shell nodurations();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:I
         4: bipush        64
         6: iand
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #170                // Method nodurations$lzycompute:()Lorg/scalatest/Shell;
        15: goto          22
        18: aload_0
        19: getfield      #168                // Field nodurations:Lorg/scalatest/Shell;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/scalatest/Shell ]
      LineNumberTable:
        line 400: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/scalatest/ShellImpl;

  private org.scalatest.Shell nostacks$lzycompute();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=7, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:I
         8: sipush        128
        11: iand
        12: iconst_0
        13: if_icmpne     66
        16: aload_0
        17: iconst_0
        18: istore_2
        19: iconst_0
        20: istore_3
        21: aload_0
        22: invokevirtual #136                // Method copy$default$1:()Z
        25: istore        4
        27: aload_0
        28: invokevirtual #114                // Method copy$default$2:()Z
        31: istore        5
        33: aload_0
        34: invokevirtual #123                // Method copy$default$5:()Z
        37: istore        6
        39: aload_0
        40: iload         4
        42: iload         5
        44: iconst_0
        45: iconst_0
        46: iload         6
        48: invokevirtual #126                // Method copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
        51: putfield      #173                // Field nostacks:Lorg/scalatest/Shell;
        54: aload_0
        55: aload_0
        56: getfield      #111                // Field bitmap$0:I
        59: sipush        128
        62: ior
        63: putfield      #111                // Field bitmap$0:I
        66: aload_1
        67: monitorexit
        68: goto          74
        71: aload_1
        72: monitorexit
        73: athrow
        74: aload_0
        75: getfield      #173                // Field nostacks:Lorg/scalatest/Shell;
        78: areturn
      Exception table:
         from    to  target type
             4    66    71   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 66
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 401: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      32     2   x$1   Z
           21      30     3   x$2   Z
           27      24     4   x$3   Z
           33      18     5   x$4   Z
           39      12     6   x$5   Z
            0      79     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.Shell nostacks();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:I
         4: sipush        128
         7: iand
         8: iconst_0
         9: if_icmpne     19
        12: aload_0
        13: invokespecial #175                // Method nostacks$lzycompute:()Lorg/scalatest/Shell;
        16: goto          23
        19: aload_0
        20: getfield      #173                // Field nostacks:Lorg/scalatest/Shell;
        23: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 19 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/scalatest/Shell ]
      LineNumberTable:
        line 401: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/scalatest/ShellImpl;

  private org.scalatest.Shell nostats$lzycompute();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=7, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #111                // Field bitmap$0:I
         8: sipush        256
        11: iand
        12: iconst_0
        13: if_icmpne     69
        16: aload_0
        17: iconst_0
        18: istore_2
        19: aload_0
        20: invokevirtual #136                // Method copy$default$1:()Z
        23: istore_3
        24: aload_0
        25: invokevirtual #114                // Method copy$default$2:()Z
        28: istore        4
        30: aload_0
        31: invokevirtual #117                // Method copy$default$3:()Z
        34: istore        5
        36: aload_0
        37: invokevirtual #120                // Method copy$default$4:()Z
        40: istore        6
        42: aload_0
        43: iload_3
        44: iload         4
        46: iload         5
        48: iload         6
        50: iconst_0
        51: invokevirtual #126                // Method copy:(ZZZZZ)Lorg/scalatest/ShellImpl;
        54: putfield      #178                // Field nostats:Lorg/scalatest/Shell;
        57: aload_0
        58: aload_0
        59: getfield      #111                // Field bitmap$0:I
        62: sipush        256
        65: ior
        66: putfield      #111                // Field bitmap$0:I
        69: aload_1
        70: monitorexit
        71: goto          77
        74: aload_1
        75: monitorexit
        76: athrow
        77: aload_0
        78: getfield      #178                // Field nostats:Lorg/scalatest/Shell;
        81: areturn
      Exception table:
         from    to  target type
             4    69    74   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 69
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 402: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      35     2   x$1   Z
           24      30     3   x$2   Z
           30      24     4   x$3   Z
           36      18     5   x$4   Z
           42      12     6   x$5   Z
            0      82     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.Shell nostats();
    descriptor: ()Lorg/scalatest/Shell;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field bitmap$0:I
         4: sipush        256
         7: iand
         8: iconst_0
         9: if_icmpne     19
        12: aload_0
        13: invokespecial #180                // Method nostats$lzycompute:()Lorg/scalatest/Shell;
        16: goto          23
        19: aload_0
        20: getfield      #178                // Field nostats:Lorg/scalatest/Shell;
        23: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 19 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/scalatest/Shell ]
      LineNumberTable:
        line 402: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/scalatest/ShellImpl;

  public void run(org.scalatest.Suite, java.lang.String, org.scalatest.ConfigMap);
    descriptor: (Lorg/scalatest/Suite;Ljava/lang/String;Lorg/scalatest/ConfigMap;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=4, args_size=4
         0: aload_1
         1: aload_2
         2: aload_3
         3: aload_0
         4: invokevirtual #187                // Method colorPassed:()Z
         7: aload_0
         8: invokevirtual #189                // Method durationsPassed:()Z
        11: aload_0
        12: invokevirtual #191                // Method shortstacksPassed:()Z
        15: aload_0
        16: invokevirtual #193                // Method fullstacksPassed:()Z
        19: aload_0
        20: invokevirtual #195                // Method statsPassed:()Z
        23: invokeinterface #201,  8          // InterfaceMethod org/scalatest/Suite.execute:(Ljava/lang/String;Lorg/scalatest/ConfigMap;ZZZZZ)V
        28: return
      LineNumberTable:
        line 405: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/scalatest/ShellImpl;
            0      29     1 suite   Lorg/scalatest/Suite;
            0      29     2 testName   Ljava/lang/String;
            0      29     3 configMap   Lorg/scalatest/ConfigMap;
    MethodParameters:
      Name                           Flags
      suite                          final
      testName                       final
      configMap                      final

  public java.lang.String run$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 404: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.ConfigMap run$default$3();
    descriptor: ()Lorg/scalatest/ConfigMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #213                // Field org/scalatest/ConfigMap$.MODULE$:Lorg/scalatest/ConfigMap$;
         3: invokevirtual #216                // Method org/scalatest/ConfigMap$.empty:()Lorg/scalatest/ConfigMap;
         6: areturn
      LineNumberTable:
        line 404: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/scalatest/ShellImpl;

  public org.scalatest.ShellImpl copy(boolean, boolean, boolean, boolean, boolean);
    descriptor: (ZZZZZ)Lorg/scalatest/ShellImpl;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=6
         0: new           #2                  // class org/scalatest/ShellImpl
         3: dup
         4: iload_1
         5: iload_2
         6: iload_3
         7: iload         4
         9: iload         5
        11: invokespecial #220                // Method "<init>":(ZZZZZ)V
        14: areturn
      LineNumberTable:
        line 386: 0
        line 387: 4
        line 388: 5
        line 389: 6
        line 390: 7
        line 391: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/scalatest/ShellImpl;
            0      15     1 colorPassed   Z
            0      15     2 durationsPassed   Z
            0      15     3 shortstacksPassed   Z
            0      15     4 fullstacksPassed   Z
            0      15     5 statsPassed   Z
    MethodParameters:
      Name                           Flags
      colorPassed                    final
      durationsPassed                final
      shortstacksPassed              final
      fullstacksPassed               final
      statsPassed                    final

  public boolean copy$default$1();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #187                // Method colorPassed:()Z
         4: ireturn
      LineNumberTable:
        line 387: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  public boolean copy$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #189                // Method durationsPassed:()Z
         4: ireturn
      LineNumberTable:
        line 388: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  public boolean copy$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #191                // Method shortstacksPassed:()Z
         4: ireturn
      LineNumberTable:
        line 389: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  public boolean copy$default$4();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #193                // Method fullstacksPassed:()Z
         4: ireturn
      LineNumberTable:
        line 390: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  public boolean copy$default$5();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #195                // Method statsPassed:()Z
         4: ireturn
      LineNumberTable:
        line 391: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #223                // String ShellImpl
         2: areturn
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalatest/ShellImpl;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_5
         1: ireturn
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalatest/ShellImpl;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 4
                       0: 36
                       1: 46
                       2: 56
                       3: 66
                       4: 76
                 default: 86
            }
        36: aload_0
        37: invokevirtual #187                // Method colorPassed:()Z
        40: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        43: goto          93
        46: aload_0
        47: invokevirtual #189                // Method durationsPassed:()Z
        50: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        53: goto          93
        56: aload_0
        57: invokevirtual #191                // Method shortstacksPassed:()Z
        60: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        63: goto          93
        66: aload_0
        67: invokevirtual #193                // Method fullstacksPassed:()Z
        70: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        73: goto          93
        76: aload_0
        77: invokevirtual #195                // Method statsPassed:()Z
        80: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        83: goto          93
        86: iload_1
        87: invokestatic  #238                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        90: goto          93
        93: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ int ]
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/scalatest/ShellImpl;
            0      94     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #245                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #248                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/ShellImpl;
    Signature: #240                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/ShellImpl
         4: ireturn
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/ShellImpl;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 4
                       0: 36
                       1: 41
                       2: 46
                       3: 52
                       4: 58
                 default: 64
            }
        36: ldc           #254                // String colorPassed
        38: goto          74
        41: ldc           #255                // String durationsPassed
        43: goto          74
        46: ldc_w         #256                // String shortstacksPassed
        49: goto          74
        52: ldc_w         #257                // String fullstacksPassed
        55: goto          74
        58: ldc_w         #258                // String statsPassed
        61: goto          74
        64: iload_1
        65: invokestatic  #238                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        68: checkcast     #260                // class java/lang/String
        71: goto          74
        74: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      75     0  this   Lorg/scalatest/ShellImpl;
            0      75     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: ldc_w         #262                // int -889275714
         3: istore_1
         4: iload_1
         5: aload_0
         6: invokevirtual #264                // Method productPrefix:()Ljava/lang/String;
         9: invokevirtual #266                // Method java/lang/String.hashCode:()I
        12: invokestatic  #270                // Method scala/runtime/Statics.mix:(II)I
        15: istore_1
        16: iload_1
        17: aload_0
        18: invokevirtual #187                // Method colorPassed:()Z
        21: ifeq          30
        24: sipush        1231
        27: goto          33
        30: sipush        1237
        33: invokestatic  #270                // Method scala/runtime/Statics.mix:(II)I
        36: istore_1
        37: iload_1
        38: aload_0
        39: invokevirtual #189                // Method durationsPassed:()Z
        42: ifeq          51
        45: sipush        1231
        48: goto          54
        51: sipush        1237
        54: invokestatic  #270                // Method scala/runtime/Statics.mix:(II)I
        57: istore_1
        58: iload_1
        59: aload_0
        60: invokevirtual #191                // Method shortstacksPassed:()Z
        63: ifeq          72
        66: sipush        1231
        69: goto          75
        72: sipush        1237
        75: invokestatic  #270                // Method scala/runtime/Statics.mix:(II)I
        78: istore_1
        79: iload_1
        80: aload_0
        81: invokevirtual #193                // Method fullstacksPassed:()Z
        84: ifeq          93
        87: sipush        1231
        90: goto          96
        93: sipush        1237
        96: invokestatic  #270                // Method scala/runtime/Statics.mix:(II)I
        99: istore_1
       100: iload_1
       101: aload_0
       102: invokevirtual #195                // Method statsPassed:()Z
       105: ifeq          114
       108: sipush        1231
       111: goto          117
       114: sipush        1237
       117: invokestatic  #270                // Method scala/runtime/Statics.mix:(II)I
       120: istore_1
       121: iload_1
       122: iconst_5
       123: invokestatic  #273                // Method scala/runtime/Statics.finalizeHash:(II)I
       126: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/scalatest/ShellImpl, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/ShellImpl, int ]
          stack = [ int, int ]
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/ShellImpl, int ]
          stack = [ int, int ]
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/ShellImpl, int ]
          stack = [ int, int ]
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/ShellImpl, int ]
          stack = [ int, int ]
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/ShellImpl, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     127     0  this   Lorg/scalatest/ShellImpl;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #245                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #278                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/ShellImpl;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     105
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class org/scalatest/ShellImpl
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          109
        31: aload_1
        32: checkcast     #2                  // class org/scalatest/ShellImpl
        35: astore        4
        37: aload_0
        38: invokevirtual #187                // Method colorPassed:()Z
        41: aload         4
        43: invokevirtual #187                // Method colorPassed:()Z
        46: if_icmpne     101
        49: aload_0
        50: invokevirtual #189                // Method durationsPassed:()Z
        53: aload         4
        55: invokevirtual #189                // Method durationsPassed:()Z
        58: if_icmpne     101
        61: aload_0
        62: invokevirtual #191                // Method shortstacksPassed:()Z
        65: aload         4
        67: invokevirtual #191                // Method shortstacksPassed:()Z
        70: if_icmpne     101
        73: aload_0
        74: invokevirtual #193                // Method fullstacksPassed:()Z
        77: aload         4
        79: invokevirtual #193                // Method fullstacksPassed:()Z
        82: if_icmpne     101
        85: aload_0
        86: invokevirtual #195                // Method statsPassed:()Z
        89: aload         4
        91: invokevirtual #195                // Method statsPassed:()Z
        94: if_icmpne     101
        97: iconst_1
        98: goto          102
       101: iconst_0
       102: ifeq          109
       105: iconst_1
       106: goto          110
       109: iconst_0
       110: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/ShellImpl, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 73
          locals = [ class org/scalatest/ShellImpl ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/ShellImpl, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     111     0  this   Lorg/scalatest/ShellImpl;
            0     111     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.scalatest.ShellImpl(boolean, boolean, boolean, boolean, boolean);
    descriptor: (ZZZZZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: aload_0
         1: iload_1
         2: putfield      #99                 // Field colorPassed:Z
         5: aload_0
         6: iload_2
         7: putfield      #101                // Field durationsPassed:Z
        10: aload_0
        11: iload_3
        12: putfield      #103                // Field shortstacksPassed:Z
        15: aload_0
        16: iload         4
        18: putfield      #105                // Field fullstacksPassed:Z
        21: aload_0
        22: iload         5
        24: putfield      #107                // Field statsPassed:Z
        27: aload_0
        28: invokespecial #282                // Method java/lang/Object."<init>":()V
        31: aload_0
        32: invokestatic  #286                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        35: return
      LineNumberTable:
        line 387: 0
        line 388: 5
        line 389: 10
        line 390: 15
        line 391: 21
        line 392: 27
        line 386: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/scalatest/ShellImpl;
            0      36     1 colorPassed   Z
            0      36     2 durationsPassed   Z
            0      36     3 shortstacksPassed   Z
            0      36     4 fullstacksPassed   Z
            0      36     5 statsPassed   Z
    MethodParameters:
      Name                           Flags
      colorPassed                    final
      durationsPassed                final
      shortstacksPassed              final
      fullstacksPassed               final
      statsPassed                    final
}
SourceFile: "Shell.scala"
RuntimeVisibleAnnotations:
  0: #12(#13=s#14)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t=a!\u0002\u001d:\u0005fj\u0004\u0002\u0003-\u0001\u0005+\u0007I\u0011A-\t\u0011u\u0003!\u0011#Q\u0001\niC\u0001B\u0018\u0001\u0003\u0016\u0004%\t!\u0017\u0005\t?\u0002\u0011\t\u0012)A\u00055\"A\u0001\r\u0001BK\u0002\u0013\u0005\u0011\f\u0003\u0005b\u0001\tE\t\u0015!\u0003[\u0011!\u0011\u0007A!f\u0001\n\u0003I\u0006\u0002C2\u0001\u0005#\u0005\u000b\u0011\u0002.\t\u0011\u0011\u0004!Q3A\u0005\u0002eC\u0001\"\u001a\u0001\u0003\u0012\u0003\u0006IA\u0017\u0005\u0006M\u0002!\ta\u001a\u0005\t]\u0002A)\u0019!C\u0001_\"A\u0001\u000f\u0001EC\u0002\u0013\u0005q\u000e\u0003\u0005r\u0001!\u0015\r\u0011\"\u0001p\u0011!\u0011\b\u0001#b\u0001\n\u0003y\u0007\u0002C:\u0001\u0011\u000b\u0007I\u0011A8\t\u0011Q\u0004\u0001R1A\u0005\u0002=D\u0001\"\u001e\u0001\t\u0006\u0004%\ta\u001c\u0005\tm\u0002A)\u0019!C\u0001_\"Aq\u000f\u0001EC\u0002\u0013\u0005q\u000eC\u0003y\u0001\u0011\u0005\u0011\u0010C\u0005\u0002$\u0001\t\n\u0011\"\u0001\u0002&!I\u00111\b\u0001\u0012\u0002\u0013\u0005\u0011Q\b\u0005\n\u0003\u0003\u0002\u0011\u0011!C\u0001\u0003\u0007B\u0011\"a\u0014\u0001#\u0003%\t!!\u0015\t\u0013\u0005U\u0003!%A\u0005\u0002\u0005E\u0003\"CA,\u0001E\u0005I\u0011AA)\u0011%\tI\u0006AI\u0001\n\u0003\t\t\u0006C\u0005\u0002\\\u0001\t\n\u0011\"\u0001\u0002R!I\u0011Q\f\u0001\u0002\u0002\u0013\u0005\u0013q\f\u0005\n\u0003_\u0002\u0011\u0011!C\u0001\u0003cB\u0011\"!\u001f\u0001\u0003\u0003%\t!a\u001f\t\u0013\u0005\u001d\u0005!!A\u0005B\u0005%\u0005\"CAL\u0001\u0005\u0005I\u0011AAM\u0011%\ti\nAA\u0001\n\u0003\ny\nC\u0005\u0002$\u0002\t\t\u0011\"\u0011\u0002&\"I\u0011q\u0015\u0001\u0002\u0002\u0013\u0005\u0013\u0011\u0016\u0005\n\u0003W\u0003\u0011\u0011!C!\u0003[;!\"!-:\u0003\u0003E\t!OAZ\r%A\u0014(!A\t\u0002e\n)\f\u0003\u0004gQ\u0011\u0005\u0011Q\u001a\u0005\n\u0003OC\u0013\u0011!C#\u0003SC\u0011\"a4)\u0003\u0003%\t)!5\t\u0013\u0005u\u0007&%A\u0005\u0002\u0005E\u0003\"CApQE\u0005I\u0011AA)\u0011%\t\t\u000fKI\u0001\n\u0003\t\t\u0006C\u0005\u0002d\"\n\n\u0011\"\u0001\u0002R!I\u0011Q\u001d\u0015\u0012\u0002\u0013\u0005\u0011\u0011\u000b\u0005\n\u0003OD\u0013\u0011!CA\u0003SD\u0011\"a?)#\u0003%\t!!\u0015\t\u0013\u0005u\b&%A\u0005\u0002\u0005E\u0003\"CA\u0000QE\u0005I\u0011AA)\u0011%\u0011\t\u0001KI\u0001\n\u0003\t\t\u0006C\u0005\u0003\u0004!\n\n\u0011\"\u0001\u0002R!I!Q\u0001\u0015\u0002\u0002\u0013%!q\u0001\u0002\n\'\",G\u000e\\%na2T!AO\u001e\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\u001f\u0002\u0007=\u0014xmE\u0003\u0001}\u0011C5\n\u0005\u0002@\u00056\t\u0001IC\u0001B\u0003\u0015\u00198-\u00197b\u0013\t\u0019\u0005I\u0001\u0004B]f\u0014VM\u001a\t\u0003\u000b\u001ak\u0011!O\u0005\u0003\u000ff\u0012Qa\u00155fY2\u0004\"aP%\n\u0005)\u0003%a\u0002)s_\u0012,8\r\u001e\t\u0003\u0019Vs!!T*\u000f\u00059\u0013V\"A(\u000b\u0005A\u000b\u0016A\u0002\u001fs_>$hh\u0001\u0001\n\u0003\u0005K!\u0001\u0016!\u0002\u000fA\f7m[1hK&\u0011ak\u0016\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0003)\u0002\u000b1bY8m_J\u0004\u0016m]:fIV\t!\f\u0005\u0002@7&\u0011A\f\u0011\u0002\b\u0005>|G.Z1o\u00031\u0019w\u000e\\8s!\u0006\u001c8/\u001a3!\u0003=!WO]1uS>t7\u000fU1tg\u0016$\u0017\u0001\u00053ve\u0006$\u0018n\u001c8t!\u0006\u001c8/\u001a3!\u0003E\u0019\bn\u001c:ugR\f7m[:QCN\u001cX\rZ\u0001\u0013g\"|\'\u000f^:uC\u000e\\7\u000fU1tg\u0016$\u0007%\u0001\tgk2d7\u000f^1dWN\u0004\u0016m]:fI\u0006\tb-\u001e7mgR\f7m[:QCN\u001cX\r\u001a\u0011\u0002\u0017M$\u0018\r^:QCN\u001cX\rZ\u0001\rgR\fGo\u001d)bgN,G\rI\u0001\u0007y%t\u0017\u000e\u001e \u0015\r!L\'n\u001b7n!\t)\u0005\u0001C\u0004Y\u0017A\u0005\t\u0019\u0001.\t\u000fy[\u0001\u0013!a\u00015\"9\u0001m\u0003I\u0001\u0002\u0004Q\u0006b\u00022\f!\u0003\u0005\rA\u0017\u0005\bI.\u0001\n\u00111\u0001[\u0003\u0015\u0019w\u000e\\8s+\u0005!\u0015!\u00033ve\u0006$\u0018n\u001c8t\u0003-\u0019\bn\u001c:ugR\f7m[:\u0002\u0015\u0019,H\u000e\\:uC\u000e\\7/A\u0003ti\u0006$8/A\u0004o_\u000e|Gn\u001c:\u0002\u00179|G-\u001e:bi&|gn]\u0001\t]>\u001cH/Y2lg\u00069an\\:uCR\u001c\u0018a\u0001:v]R1!0`A\u0003\u00033\u0001\"aP>\n\u0005q\u0004%\u0001B+oSRDQA`\u000bA\u0002}\fQa];ji\u0016\u00042!RA\u0001\u0013\r\t\u0019!\u000f\u0002\u0006\'VLG/\u001a\u0005\n\u0003\u000f)\u0002\u0013!a\u0001\u0003\u0013\t\u0001\u0002^3ti:\u000bW.\u001a\t\u0005\u0003\u0017\t\u0019B\u0004\u0003\u0002\u000e\u0005=\u0001C\u0001(A\u0013\r\t\t\u0002Q\u0001\u0007!J,G-\u001a4\n\t\u0005U\u0011q\u0003\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0007\u0005E\u0001\tC\u0005\u0002\u001cU\u0001\n\u00111\u0001\u0002\u001e\u0005I1m\u001c8gS\u001el\u0015\r\u001d\t\u0004\u000b\u0006}\u0011bAA\u0011s\tI1i\u001c8gS\u001el\u0015\r]\u0001\u000eeVtG\u0005Z3gCVdG\u000f\n\u001a\u0016\u0005\u0005\u001d\"\u0006BA\u0005\u0003SY#!a\u000b\u0011\t\u00055\u0012qG\u0007\u0003\u0003_QA!!\r\u00024\u0005IQO\\2iK\u000e\\W\r\u001a\u0006\u0004\u0003k\u0001\u0015AC1o]>$\u0018\r^5p]&!\u0011\u0011HA\u0018\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u000eeVtG\u0005Z3gCVdG\u000fJ\u001a\u0016\u0005\u0005}\"\u0006BA\u000f\u0003S\tAaY8qsRY\u0001.!\u0012\u0002H\u0005%\u00131JA\'\u0011\u001dA\u0006\u0004%AA\u0002iCqA\u0018\r\u0011\u0002\u0003\u0007!\fC\u0004a1A\u0005\t\u0019\u0001.\t\u000f\tD\u0002\u0013!a\u00015\"9A\r\u0007I\u0001\u0002\u0004Q\u0016AD2paf$C-\u001a4bk2$H%M\u000b\u0003\u0003\'R3AWA\u0015\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII\nabY8qs\u0012\"WMZ1vYR$3\'\u0001\bd_BLH\u0005Z3gCVdG\u000f\n\u001b\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%k\u0005i\u0001O]8ek\u000e$\bK]3gSb,\"!!\u0019\u0011\t\u0005\r\u0014QN\u0007\u0003\u0003KRA!a\u001a\u0002j\u0005!A.\u00198h\u0015\t\tY\'\u0001\u0003kCZ\f\u0017\u0002BA\u000b\u0003K\nA\u0002\u001d:pIV\u001cG/\u0011:jif,\"!a\u001d\u0011\u0007}\n)(C\u0002\u0002x\u0001\u00131!\u00138u\u00039\u0001(o\u001c3vGR,E.Z7f]R$B!! \u0002\u0004B\u0019q(a \n\u0007\u0005\u0005\u0005IA\u0002B]fD\u0011\"!\"!\u0003\u0003\u0005\r!a\u001d\u0002\u0007a$\u0013\'A\bqe>$Wo\u0019;Ji\u0016\u0014\u0018\r^8s+\t\tY\t\u0005\u0004\u0002\u000e\u0006M\u0015QP\u0007\u0003\u0003\u001fS1!!%A\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0005\u0003+\u000byI\u0001\u0005Ji\u0016\u0014\u0018\r^8s\u0003!\u0019\u0017M\\#rk\u0006dGc\u0001.\u0002\u001c\"I\u0011Q\u0011\u0012\u0002\u0002\u0003\u0007\u0011QP\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\r\u0006\u0003\u0002b\u0005\u0005\u0006\"CACG\u0005\u0005\t\u0019AA:\u0003!A\u0017m\u001d5D_\u0012,GCAA:\u0003!!xn\u0015;sS:<GCAA1\u0003\u0019)\u0017/^1mgR\u0019!,a,\t\u0013\u0005\u0015e%!AA\u0002\u0005u\u0014!C*iK2d\u0017*\u001c9m!\t)\u0005fE\u0003)\u0003o\u000b\u0019\r\u0005\u0006\u0002:\u0006}&L\u0017.[5\"l!!a/\u000b\u0007\u0005u\u0006)A\u0004sk:$\u0018.\\3\n\t\u0005\u0005\u00171\u0018\u0002\u0012\u0003\n\u001cHO]1di\u001a+hn\u0019;j_:,\u0004\u0003BAc\u0003\u0017l!!a2\u000b\t\u0005%\u0017\u0011N\u0001\u0003S>L1AVAd)\t\t\u0019,A\u0003baBd\u0017\u0010F\u0006i\u0003\'\f).a6\u0002Z\u0006m\u0007b\u0002-,!\u0003\u0005\rA\u0017\u0005\b=.\u0002\n\u00111\u0001[\u0011\u001d\u00017\u0006%AA\u0002iCqAY\u0016\u0011\u0002\u0003\u0007!\fC\u0004eWA\u0005\t\u0019\u0001.\u0002\u001f\u0005\u0004\b\u000f\\=%I\u00164\u0017-\u001e7uIE\nq\"\u00199qYf$C-\u001a4bk2$HEM\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%g\u0005y\u0011\r\u001d9ms\u0012\"WMZ1vYR$C\'A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00136\u0003\u001d)h.\u00199qYf$B!a;\u0002xB)q(!<\u0002r&\u0019\u0011q\u001e!\u0003\r=\u0003H/[8o!!y\u00141\u001f.[5jS\u0016bAA{\u0001\n1A+\u001e9mKVB\u0001\"!?2\u0003\u0003\u0005\r\u0001[\u0001\u0004q\u0012\u0002\u0014a\u0007\u0013mKN\u001c\u0018N\\5uI\u001d\u0014X-\u0019;fe\u0012\"WMZ1vYR$\u0013\'A\u000e%Y\u0016\u001c8/\u001b8ji\u0012:\'/Z1uKJ$C-\u001a4bk2$HEM\u0001\u001cI1,7o]5oSR$sM]3bi\u0016\u0014H\u0005Z3gCVdG\u000fJ\u001a\u00027\u0011bWm]:j]&$He\u001a:fCR,\'\u000f\n3fM\u0006,H\u000e\u001e\u00135\u0003m!C.Z:tS:LG\u000fJ4sK\u0006$XM\u001d\u0013eK\u001a\fW\u000f\u001c;%k\u0005aqO]5uKJ+\u0007\u000f\\1dKR\u0011!\u0011\u0002\t\u0005\u0003G\u0012Y!\u0003\u0003\u0003\u000e\u0005\u0015$AB(cU\u0016\u001cG\u000f"
    )
  ScalaInlineInfo: length = 0xDB (unknown attribute)
   01 01 00 2B 00 D9 00 DA 01 00 F9 00 FA 01 00 0F
   00 6D 01 00 6C 00 6D 01 00 19 00 22 01 00 7C 00
   4E 01 00 86 00 22 01 00 70 00 22 01 00 73 00 22
   01 00 76 00 22 01 00 79 00 22 01 00 11 00 6D 01
   00 85 00 6D 01 00 1B 00 22 01 01 17 00 FA 01 00
   13 00 6D 01 00 97 00 6D 01 00 1D 00 22 01 01 05
   00 E1 01 00 15 00 6D 01 00 A1 00 6D 01 00 16 00
   6D 01 00 A6 00 6D 01 00 17 00 6D 01 00 AB 00 6D
   01 00 18 00 6D 01 00 B0 00 6D 01 00 E0 00 E1 01
   00 E2 00 E3 01 00 FC 00 FD 01 00 5A 00 5B 01 00
   EF 00 5B 01 00 DD 00 CE 01 00 B5 00 B6 01 00 CD
   00 CE 01 00 CF 00 D0 01 00 12 00 6D 01 00 92 00
   6D 01 00 1C 00 22 01 00 14 00 6D 01 00 9C 00 6D
   01 00 1E 00 22 01 01 12 00 CE 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
