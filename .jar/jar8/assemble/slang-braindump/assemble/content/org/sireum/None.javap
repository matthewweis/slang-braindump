Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/None.class
  Last modified May 29, 2022; size 8307 bytes
  SHA-256 checksum 444c10999c91a06eab5ccc84ce838b28eec2da34f159f7df85002bcdfa8adc83
  Compiled from "Option.scala"
public final class org.sireum.None<T extends java.lang.Object> extends java.lang.Object implements org.sireum.Option<T>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/None
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 26, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/None
    #2 = Class              #1            // org/sireum/None
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/Option<TT;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/Option
    #7 = Class              #6            // org/sireum/Option
    #8 = Utf8               Option.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u0005\rv!B\r\u001b\u0011\u0003yb!B\u0011\u001b\u0011\u0003\u0011\u0003\"B\u0015\u0002\t\u0003Q\u0003BB\u0016\u0002A\u0003%1\u0005C\u0003-\u0003\u0011\u0005Q\u0006C\u0004\u0002\u0012\u0006!\t!a%\u0007\t\u0005R\"\u0001\r\u0005\u0006S\u0019!\ta\u0011\u0005\u0006\u000b\u001a!\tE\u0012\u0005\u0006\u001f\u001a!\t\u0005\u0015\u0005\b\'\u001a\u0011\r\u0011\"\u0011U\u0011\u0019Af\u0001)A\u0005+\")\u0011L\u0002C!5\"A\u0001M\u0002EC\u0002\u0013\u0005\u0013\rC\u0003r\r\u0011\u0005#\u000fC\u0003{\r\u0011\u0005#\u000fC\u0003}\r\u0011\u0005S\u0010C\u0004\u0002\u0018\u0019!\t%!\u0007\t\u000f\u0005-b\u0001\"\u0011\u0002.!9\u0011q\u0007\u0004\u0005B\u0005e\u0002bBA \r\u0011\u0005\u0013\u0011\t\u0005\b\u0003\u001f2A\u0011IA)\u0011\u001d\t9F\u0002C!\u00033Bq!!\u0018\u0007\t\u0003\ny\u0006C\u0004\u0002p\u0019!\t%!\u001d\u0002\t9{g.\u001a\u0006\u00037q\taa]5sKVl\'\"A\u000f\u0002\u0007=\u0014xm\u0001\u0001\u0011\u0005\u0001\nQ\"\u0001\u000e\u0003\t9{g.Z\n\u0003\u0003\r\u0002\"\u0001J\u0014\u000e\u0003\u0015R\u0011AJ\u0001\u0006g\u000e\fG.Y\u0005\u0003Q\u0015\u0012a!\u00118z%\u00164\u0017A\u0002\u001fj]&$h\bF\u0001 \u0003\t!c/A\u0003baBd\u00170F\u0002/\u0003\u001f#\u0012a\f\t\u0005A\u0019\ti)\u0006\u00022oM!aa\t\u001aA!\r\u00013\'N\u0005\u0003ii\u0011aa\u00149uS>t\u0007C\u0001\u001c8\u0019\u0001!Q\u0001\u000f\u0004C\u0002e\u0012\u0011\u0001V\t\u0003uu\u0002\"\u0001J\u001e\n\u0005q*#a\u0002(pi\"Lgn\u001a\t\u0003IyJ!aP\u0013\u0003\u0007\u0005s\u0017\u0010\u0005\u0002!\u0003&\u0011!I\u0007\u0002\f\t\u0006$\u0018\r^=qKNKw\rF\u0001E!\r\u0001c!N\u0001\ti>\u001cFO]5oOR\tq\t\u0005\u0002I\u001b6\t\u0011J\u0003\u0002K\u0017\u0006!A.\u00198h\u0015\u0005a\u0015\u0001\u00026bm\u0006L!AT%\u0003\rM#(/\u001b8h\u0003\u0019\u0019HO]5oOV\t\u0011\u000b\u0005\u0002!%&\u0011aJG\u0001\tQ\u0006\u001c\bnQ8eKV\tQ\u000b\u0005\u0002%-&\u0011q+\n\u0002\u0004\u0013:$\u0018!\u00035bg\"\u001cu\u000eZ3!\u0003\u0019)\u0017/^1mgR\u00111L\u0018\t\u0003IqK!!X\u0013\u0003\u000f\t{w\u000e\\3b]\")q\f\u0004a\u0001{\u0005\tq.\u0001\u0005%G>tG/\u001a8u+\u0005\u0011\u0007cA2l]:\u0011A-\u001b\b\u0003K\"l\u0011A\u001a\u0006\u0003Oz\ta\u0001\u0010:p_Rt\u0014\"\u0001\u0014\n\u0005),\u0013a\u00029bG.\fw-Z\u0005\u0003Y6\u00141aU3r\u0015\tQW\u0005\u0005\u0003%_\u001ek\u0014B\u00019&\u0005\u0019!V\u000f\u001d7fe\u00059\u0011n]#naRLX#A:\u0011\u0005\u0001\"\u0018BA;\u001b\u0005\u0005\u0011\u0005F\u0001\bx!\t\u0001\u00030\u0003\u0002z5\t!\u0001/\u001e:f\u0003!qwN\\#naRL\bFA\bx\u0003\ri\u0017\r]\u000b\u0004}\u0006\rAcA@\u0002\bA!\u0001eMA\u0001!\r1\u00141\u0001\u0003\u0007\u0003\u000b\u0001\"\u0019A\u001d\u0003\u0005Q\u0013\u0004bBA\u0005!\u0001\u0007\u00111B\u0001\u0002MB1A%!\u00046\u0003#I1!a\u0004&\u0005%1UO\\2uS>t\u0017G\u000b\u0003\u0002\u0002\u0005M1&A<)\u0005A9\u0018a\u00024mCRl\u0015\r]\u000b\u0005\u00037\t\t\u0003\u0006\u0003\u0002\u001e\u0005\r\u0002\u0003\u0002\u00114\u0003?\u00012ANA\u0011\t\u0019\t)!\u0005b\u0001s!9\u0011\u0011B\tA\u0002\u0005\u0015\u0002C\u0002\u0013\u0002\u000eU\n9C\u000b\u0003\u0002\u001e\u0005M\u0001FA\tx\u0003\u00191wN]1mYR\u00191/a\f\t\u000f\u0005%!\u00031\u0001\u00022A1A%!\u00046\u0003gQ3a]A\nQ\t\u0011r/\u0001\u0004fq&\u001cHo\u001d\u000b\u0004g\u0006m\u0002bBA\u0005\'\u0001\u0007\u0011\u0011\u0007\u0015\u0003\']\f\u0011bZ3u\u001fJ,En]3\u0015\u0007U\n\u0019\u0005\u0003\u0005\u0002FQ!\t\u0019AA$\u0003\u001d!WMZ1vYR\u0004B\u0001JA%k%\u0019\u00111J\u0013\u0003\u0011q\u0012\u0017P\\1nKzB#\u0001F<\u0002\u001d\u001d,Go\u0014:FYN,W)Y4feR\u0019Q\'a\u0015\t\r\u0005\u0015S\u00031\u00016Q\t)r/A\u0002hKR,\u0012!\u000e\u0015\u0003-]\fA\u0001^8J\'V\u0011\u0011\u0011\r\t\u0007A\u0005\r\u0014qM\u001b\n\u0007\u0005\u0015$D\u0001\u0002J\'B\u0019\u0001%!\u001b\n\u0007\u0005-$DA\u0001[Q\t9r/A\u0004g_J,\u0017m\u00195\u0016\t\u0005M\u0014\u0011\u0011\u000b\u0005\u0003k\nY\bE\u0002%\u0003oJ1!!\u001f&\u0005\u0011)f.\u001b;\t\u000f\u0005%\u0001\u00041\u0001\u0002~A1A%!\u00046\u0003\u007f\u00022ANAA\t\u0019\t\u0019\t\u0007b\u0001s\t\ta\u000bK\u0002\u0007\u0003\u000f\u00032\u0001IAE\u0013\r\tYI\u0007\u0002\tI\u0006$\u0018\r^=qKB\u0019a\'a$\u0005\u000ba\"!\u0019A\u001d\u0002\u000fUt\u0017\r\u001d9msV!\u0011QSAQ)\u0011\t9*a\'\u0010\u0005\u0005e\u0015$A\u0001\t\r}+\u0001\u0019AAO!\u0011\u0001c!a(\u0011\u0007Y\n\t\u000bB\u00039\u000b\t\u0007\u0011\b
   #12 = Utf8               $content
   #13 = Utf8               Lscala/collection/immutable/Seq;
   #14 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #15 = Utf8               hashCode
   #16 = Utf8               I
   #17 = Utf8               bitmap$0
   #18 = Utf8               Z
   #19 = Utf8               unapply
   #20 = Utf8               (Lorg/sireum/None;)Z
   #21 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/None<TT;>;)Z
   #22 = Utf8               o
   #23 = Utf8               org/sireum/None$
   #24 = Class              #23           // org/sireum/None$
   #25 = Utf8               MODULE$
   #26 = Utf8               Lorg/sireum/None$;
   #27 = NameAndType        #25:#26       // MODULE$:Lorg/sireum/None$;
   #28 = Fieldref           #24.#27       // org/sireum/None$.MODULE$:Lorg/sireum/None$;
   #29 = NameAndType        #19:#20       // unapply:(Lorg/sireum/None;)Z
   #30 = Methodref          #24.#29       // org/sireum/None$.unapply:(Lorg/sireum/None;)Z
   #31 = Utf8               Lorg/sireum/None;
   #32 = Utf8               apply
   #33 = Utf8               ()Lorg/sireum/None;
   #34 = Utf8               <T:Ljava/lang/Object;>()Lorg/sireum/None<TT;>;
   #35 = NameAndType        #32:#33       // apply:()Lorg/sireum/None;
   #36 = Methodref          #24.#35       // org/sireum/None$.apply:()Lorg/sireum/None;
   #37 = Utf8               hash
   #38 = Utf8               ()Lorg/sireum/Z;
   #39 = Utf8               org/sireum/DatatypeSig
   #40 = Class              #39           // org/sireum/DatatypeSig
   #41 = Utf8               hash$
   #42 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #43 = NameAndType        #41:#42       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #44 = InterfaceMethodref #40.#43       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #45 = Utf8               this
   #46 = Utf8               $cannotMixImmutableAndMutable
   #47 = Utf8               ()Lscala/runtime/Nothing$;
   #48 = Utf8               org/sireum/Immutable
   #49 = Class              #48           // org/sireum/Immutable
   #50 = Utf8               $cannotMixImmutableAndMutable$
   #51 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #52 = NameAndType        #50:#51       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #53 = InterfaceMethodref #49.#52       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #54 = Utf8               $hasEquals
   #55 = Utf8               ()Z
   #56 = Utf8               $hasEquals$
   #57 = Utf8               (Lorg/sireum/Immutable;)Z
   #58 = NameAndType        #56:#57       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #59 = InterfaceMethodref #49.#58       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #60 = Utf8               $hasString
   #61 = Utf8               $hasString$
   #62 = NameAndType        #61:#57       // $hasString$:(Lorg/sireum/Immutable;)Z
   #63 = InterfaceMethodref #49.#62       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #64 = Utf8               $clone
   #65 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #66 = Utf8               org/sireum/$internal/ImmutableMarker
   #67 = Class              #66           // org/sireum/$internal/ImmutableMarker
   #68 = Utf8               $clone$
   #69 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #70 = NameAndType        #68:#69       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #71 = InterfaceMethodref #67.#70       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #72 = Utf8               toString
   #73 = Utf8               ()Ljava/lang/String;
   #74 = NameAndType        #60:#55       // $hasString:()Z
   #75 = Methodref          #2.#74        // org/sireum/None.$hasString:()Z
   #76 = Utf8               string$
   #77 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #78 = NameAndType        #76:#77       // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #79 = InterfaceMethodref #40.#78       // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #80 = Utf8               None()
   #81 = String             #80           // None()
   #82 = Utf8               java/lang/String
   #83 = Class              #82           // java/lang/String
   #84 = Utf8               string
   #85 = Utf8               org/sireum/String$
   #86 = Class              #85           // org/sireum/String$
   #87 = Utf8               Lorg/sireum/String$;
   #88 = NameAndType        #25:#87       // MODULE$:Lorg/sireum/String$;
   #89 = Fieldref           #86.#88       // org/sireum/String$.MODULE$:Lorg/sireum/String$;
   #90 = NameAndType        #72:#73       // toString:()Ljava/lang/String;
   #91 = Methodref          #2.#90        // org/sireum/None.toString:()Ljava/lang/String;
   #92 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #93 = NameAndType        #32:#92       // apply:(Ljava/lang/String;)Ljava/lang/String;
   #94 = Methodref          #86.#93       // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
   #95 = Utf8               ()I
   #96 = NameAndType        #15:#16       // hashCode:I
   #97 = Fieldref           #2.#96        // org/sireum/None.hashCode:I
   #98 = Utf8               equals
   #99 = Utf8               (Ljava/lang/Object;)Z
  #100 = NameAndType        #54:#55       // $hasEquals:()Z
  #101 = Methodref          #2.#100       // org/sireum/None.$hasEquals:()Z
  #102 = NameAndType        #98:#99       // equals:(Ljava/lang/Object;)Z
  #103 = Methodref          #5.#102       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #104 = Utf8               Ljava/lang/Object;
  #105 = Utf8               $content$lzycompute
  #106 = Utf8               ()Lscala/collection/immutable/Seq;
  #107 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #108 = NameAndType        #17:#18       // bitmap$0:Z
  #109 = Fieldref           #2.#108       // org/sireum/None.bitmap$0:Z
  #110 = Utf8               scala/package$
  #111 = Class              #110          // scala/package$
  #112 = Utf8               Lscala/package$;
  #113 = NameAndType        #25:#112      // MODULE$:Lscala/package$;
  #114 = Fieldref           #111.#113     // scala/package$.MODULE$:Lscala/package$;
  #115 = Utf8               Seq
  #116 = Utf8               ()Lscala/collection/immutable/Seq$;
  #117 = NameAndType        #115:#116     // Seq:()Lscala/collection/immutable/Seq$;
  #118 = Methodref          #111.#117     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #119 = Utf8               scala/runtime/ScalaRunTime$
  #120 = Class              #119          // scala/runtime/ScalaRunTime$
  #121 = Utf8               Lscala/runtime/ScalaRunTime$;
  #122 = NameAndType        #25:#121      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #123 = Fieldref           #120.#122     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #124 = Utf8               scala/Tuple2
  #125 = Class              #124          // scala/Tuple2
  #126 = Utf8               type
  #127 = String             #126          // type
  #128 = Utf8               List
  #129 = Utf8               ()Lscala/collection/immutable/List$;
  #130 = NameAndType        #128:#129     // List:()Lscala/collection/immutable/List$;
  #131 = Methodref          #111.#130     // scala/package$.List:()Lscala/collection/immutable/List$;
  #132 = Utf8               org
  #133 = String             #132          // org
  #134 = Utf8               sireum
  #135 = String             #134          // sireum
  #136 = Utf8               None
  #137 = String             #136          // None
  #138 = Utf8               [Ljava/lang/Object;
  #139 = Class              #138          // "[Ljava/lang/Object;"
  #140 = Utf8               wrapRefArray
  #141 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #142 = NameAndType        #140:#141     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #143 = Methodref          #120.#142     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #144 = Utf8               scala/collection/immutable/List$
  #145 = Class              #144          // scala/collection/immutable/List$
  #146 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #147 = NameAndType        #32:#146      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #148 = Methodref          #145.#147     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #149 = Utf8               <init>
  #150 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #151 = NameAndType        #149:#150     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #152 = Methodref          #125.#151     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #153 = Utf8               scala/collection/immutable/Seq$
  #154 = Class              #153          // scala/collection/immutable/Seq$
  #155 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #156 = NameAndType        #32:#155      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #157 = Methodref          #154.#156     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #158 = Utf8               scala/collection/immutable/Seq
  #159 = Class              #158          // scala/collection/immutable/Seq
  #160 = NameAndType        #12:#13       // $content:Lscala/collection/immutable/Seq;
  #161 = Fieldref           #2.#160       // org/sireum/None.$content:Lscala/collection/immutable/Seq;
  #162 = Utf8               java/lang/Throwable
  #163 = Class              #162          // java/lang/Throwable
  #164 = NameAndType        #105:#106     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #165 = Methodref          #2.#164       // org/sireum/None.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #166 = Utf8               isEmpty
  #167 = Utf8               scala/runtime/BoxedUnit
  #168 = Class              #167          // scala/runtime/BoxedUnit
  #169 = Utf8               UNIT
  #170 = Utf8               Lscala/runtime/BoxedUnit;
  #171 = NameAndType        #169:#170     // UNIT:Lscala/runtime/BoxedUnit;
  #172 = Fieldref           #168.#171     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #173 = Utf8               org/sireum/package$
  #174 = Class              #173          // org/sireum/package$
  #175 = Utf8               Lorg/sireum/package$;
  #176 = NameAndType        #25:#175      // MODULE$:Lorg/sireum/package$;
  #177 = Fieldref           #174.#176     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #178 = Utf8               T
  #179 = NameAndType        #178:#55      // T:()Z
  #180 = Methodref          #174.#179     // org/sireum/package$.T:()Z
  #181 = Utf8               nonEmpty
  #182 = Utf8               F
  #183 = NameAndType        #182:#55      // F:()Z
  #184 = Methodref          #174.#183     // org/sireum/package$.F:()Z
  #185 = Utf8               map
  #186 = Utf8               (Lscala/Function1;)Lorg/sireum/Option;
  #187 = Utf8               <T2:Ljava/lang/Object;>(Lscala/Function1<TT;TT2;>;)Lorg/sireum/Option<TT2;>;
  #188 = Utf8               f
  #189 = Utf8               Lscala/Function1;
  #190 = Utf8               flatMap
  #191 = Utf8               <T2:Ljava/lang/Object;>(Lscala/Function1<TT;Lorg/sireum/Option<TT2;>;>;)Lorg/sireum/Option<TT2;>;
  #192 = Utf8               forall
  #193 = Utf8               (Lscala/Function1;)Z
  #194 = Utf8               (Lscala/Function1<TT;Lorg/sireum/B;>;)Z
  #195 = Utf8               exists
  #196 = Utf8               getOrElse
  #197 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #198 = Utf8               (Lscala/Function0<TT;>;)TT;
  #199 = Utf8               default
  #200 = Utf8               scala/Function0
  #201 = Class              #200          // scala/Function0
  #202 = Utf8               ()Ljava/lang/Object;
  #203 = NameAndType        #32:#202      // apply:()Ljava/lang/Object;
  #204 = InterfaceMethodref #201.#203     // scala/Function0.apply:()Ljava/lang/Object;
  #205 = Utf8               Lscala/Function0;
  #206 = Utf8               getOrElseEager
  #207 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #208 = Utf8               (TT;)TT;
  #209 = Utf8               get
  #210 = Utf8               ()TT;
  #211 = Utf8               org/sireum/String
  #212 = Class              #211          // org/sireum/String
  #213 = Utf8               Invalid \'None\' operation \'get\'.
  #214 = String             #213          // Invalid \'None\' operation \'get\'.
  #215 = Utf8               (Ljava/lang/String;)V
  #216 = NameAndType        #149:#215     // "<init>":(Ljava/lang/String;)V
  #217 = Methodref          #212.#216     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #218 = Utf8               halt
  #219 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #220 = NameAndType        #218:#219     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #221 = Methodref          #174.#220     // org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #222 = Utf8               toIS
  #223 = Utf8               ()Lorg/sireum/IS;
  #224 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;
  #225 = Utf8               org/sireum/IS$
  #226 = Class              #225          // org/sireum/IS$
  #227 = Utf8               Lorg/sireum/IS$;
  #228 = NameAndType        #25:#227      // MODULE$:Lorg/sireum/IS$;
  #229 = Fieldref           #226.#228     // org/sireum/IS$.MODULE$:Lorg/sireum/IS$;
  #230 = Utf8               scala/collection/immutable/Nil$
  #231 = Class              #230          // scala/collection/immutable/Nil$
  #232 = Utf8               Lscala/collection/immutable/Nil$;
  #233 = NameAndType        #25:#232      // MODULE$:Lscala/collection/immutable/Nil$;
  #234 = Fieldref           #231.#233     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #235 = Utf8               $ZCompanion
  #236 = Utf8               ()Lorg/sireum/$ZCompanion;
  #237 = NameAndType        #235:#236     // $ZCompanion:()Lorg/sireum/$ZCompanion;
  #238 = Methodref          #174.#237     // org/sireum/package$.$ZCompanion:()Lorg/sireum/$ZCompanion;
  #239 = Utf8               (Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #240 = NameAndType        #32:#239      // apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #241 = Methodref          #226.#240     // org/sireum/IS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
  #242 = Utf8               foreach
  #243 = Utf8               (Lscala/Function1;)V
  #244 = Utf8               <V:Ljava/lang/Object;>(Lscala/Function1<TT;TV;>;)V
  #245 = NameAndType        #64:#65       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #246 = Methodref          #2.#245       // org/sireum/None.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #247 = Utf8               ()V
  #248 = NameAndType        #149:#247     // "<init>":()V
  #249 = Methodref          #5.#248       // java/lang/Object."<init>":()V
  #250 = Utf8               $init$
  #251 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #252 = NameAndType        #250:#251     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #253 = InterfaceMethodref #67.#252      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #254 = Utf8               (Lorg/sireum/Immutable;)V
  #255 = NameAndType        #250:#254     // $init$:(Lorg/sireum/Immutable;)V
  #256 = InterfaceMethodref #49.#255      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #257 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #258 = NameAndType        #250:#257     // $init$:(Lorg/sireum/DatatypeSig;)V
  #259 = InterfaceMethodref #40.#258      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #260 = Utf8               (Lorg/sireum/Option;)V
  #261 = NameAndType        #250:#260     // $init$:(Lorg/sireum/Option;)V
  #262 = InterfaceMethodref #7.#261       // org/sireum/Option.$init$:(Lorg/sireum/Option;)V
  #263 = NameAndType        #15:#95       // hashCode:()I
  #264 = Methodref          #5.#263       // java/lang/Object.hashCode:()I
  #265 = Utf8               getClass
  #266 = Utf8               ()Ljava/lang/Class;
  #267 = NameAndType        #265:#266     // getClass:()Ljava/lang/Class;
  #268 = Methodref          #2.#267       // org/sireum/None.getClass:()Ljava/lang/Class;
  #269 = Utf8               java/lang/Class
  #270 = Class              #269          // java/lang/Class
  #271 = Utf8               getName
  #272 = NameAndType        #271:#73      // getName:()Ljava/lang/String;
  #273 = Methodref          #270.#272     // java/lang/Class.getName:()Ljava/lang/String;
  #274 = Methodref          #83.#263      // java/lang/String.hashCode:()I
  #275 = Utf8               Signature
  #276 = Utf8               Code
  #277 = Utf8               LocalVariableTable
  #278 = Utf8               MethodParameters
  #279 = Utf8               LineNumberTable
  #280 = Utf8               StackMapTable
  #281 = Utf8               SourceFile
  #282 = Utf8               RuntimeVisibleAnnotations
  #283 = Utf8               ScalaInlineInfo
  #284 = Utf8               ScalaSig
{
  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #14                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final int hashCode;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static <T extends java.lang.Object> boolean unapply(org.sireum.None<T>);
    descriptor: (Lorg/sireum/None;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #28                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
         3: aload_0
         4: invokevirtual #30                 // Method org/sireum/None$.unapply:(Lorg/sireum/None;)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/None;
    Signature: #21                          // <T:Ljava/lang/Object;>(Lorg/sireum/None<TT;>;)Z
    MethodParameters:
      Name                           Flags
      o                              final

  public static <T extends java.lang.Object> org.sireum.None<T> apply();
    descriptor: ()Lorg/sireum/None;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #28                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
         3: invokevirtual #36                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
         6: areturn
    Signature: #34                          // <T:Ljava/lang/Object;>()Lorg/sireum/None<TT;>;

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #44                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/None;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/None;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #59                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/None;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #63                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/None;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/None;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #75                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #79                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          16
        14: ldc           #81                 // String None()
        16: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/None;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #75                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #79                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #89                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #91                 // Method toString:()Ljava/lang/String;
        21: invokevirtual #94                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/None;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #97                 // Field hashCode:I
         4: ireturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/None;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #101                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #103                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          47
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          47
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/None
        30: ifeq          38
        33: iconst_1
        34: istore_2
        35: goto          46
        38: goto          41
        41: iconst_0
        42: istore_2
        43: goto          46
        46: iload_2
        47: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 13
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/None, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/None, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/sireum/None;
            0      48     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #109                // Field bitmap$0:Z
         8: ifne          94
        11: aload_0
        12: getstatic     #114                // Field scala/package$.MODULE$:Lscala/package$;
        15: invokevirtual #118                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        18: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        21: iconst_1
        22: anewarray     #125                // class scala/Tuple2
        25: dup
        26: iconst_0
        27: new           #125                // class scala/Tuple2
        30: dup
        31: ldc           #127                // String type
        33: getstatic     #114                // Field scala/package$.MODULE$:Lscala/package$;
        36: invokevirtual #131                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        39: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        42: iconst_3
        43: anewarray     #83                 // class java/lang/String
        46: dup
        47: iconst_0
        48: ldc           #133                // String org
        50: aastore
        51: dup
        52: iconst_1
        53: ldc           #135                // String sireum
        55: aastore
        56: dup
        57: iconst_2
        58: ldc           #137                // String None
        60: aastore
        61: checkcast     #139                // class "[Ljava/lang/Object;"
        64: invokevirtual #143                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        67: invokevirtual #148                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        70: invokespecial #152                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        73: aastore
        74: checkcast     #139                // class "[Ljava/lang/Object;"
        77: invokevirtual #143                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        80: invokevirtual #157                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        83: checkcast     #159                // class scala/collection/immutable/Seq
        86: putfield      #161                // Field $content:Lscala/collection/immutable/Seq;
        89: aload_0
        90: iconst_1
        91: putfield      #109                // Field bitmap$0:Z
        94: aload_1
        95: monitorexit
        96: goto          102
        99: aload_1
       100: monitorexit
       101: athrow
       102: aload_0
       103: getfield      #161                // Field $content:Lscala/collection/immutable/Seq;
       106: areturn
      Exception table:
         from    to  target type
             4    94    99   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 94
          locals = [ class org/sireum/None ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     107     0  this   Lorg/sireum/None;
    Signature: #107                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #109                // Field bitmap$0:Z
         4: ifne          14
         7: aload_0
         8: invokespecial #165                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        11: goto          18
        14: aload_0
        15: getfield      #161                // Field $content:Lscala/collection/immutable/Seq;
        18: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/sireum/None;
    Signature: #107                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #180                // Method org/sireum/package$.T:()Z
        10: ireturn
      LineNumberTable:
        line 148: 0
        line 149: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/None;

  public boolean nonEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #184                // Method org/sireum/package$.F:()Z
        10: ireturn
      LineNumberTable:
        line 153: 0
        line 154: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/None;

  public <T2 extends java.lang.Object> org.sireum.Option<T2> map(scala.Function1<T, T2>);
    descriptor: (Lscala/Function1;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #28                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
         7: invokevirtual #36                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        10: areturn
      LineNumberTable:
        line 158: 0
        line 159: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/None;
            0      11     1     f   Lscala/Function1;
    Signature: #187                         // <T2:Ljava/lang/Object;>(Lscala/Function1<TT;TT2;>;)Lorg/sireum/Option<TT2;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public <T2 extends java.lang.Object> org.sireum.Option<T2> flatMap(scala.Function1<T, org.sireum.Option<T2>>);
    descriptor: (Lscala/Function1;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #28                 // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
         7: invokevirtual #36                 // Method org/sireum/None$.apply:()Lorg/sireum/None;
        10: areturn
      LineNumberTable:
        line 163: 0
        line 164: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/None;
            0      11     1     f   Lscala/Function1;
    Signature: #191                         // <T2:Ljava/lang/Object;>(Lscala/Function1<TT;Lorg/sireum/Option<TT2;>;>;)Lorg/sireum/Option<TT2;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public boolean forall(scala.Function1<T, org.sireum.B>);
    descriptor: (Lscala/Function1;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #180                // Method org/sireum/package$.T:()Z
        10: ireturn
      LineNumberTable:
        line 168: 0
        line 169: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/None;
            0      11     1     f   Lscala/Function1;
    Signature: #194                         // (Lscala/Function1<TT;Lorg/sireum/B;>;)Z
    MethodParameters:
      Name                           Flags
      f                              final

  public boolean exists(scala.Function1<T, org.sireum.B>);
    descriptor: (Lscala/Function1;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #184                // Method org/sireum/package$.F:()Z
        10: ireturn
      LineNumberTable:
        line 173: 0
        line 174: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/None;
            0      11     1     f   Lscala/Function1;
    Signature: #194                         // (Lscala/Function1<TT;Lorg/sireum/B;>;)Z
    MethodParameters:
      Name                           Flags
      f                              final

  public T getOrElse(scala.Function0<T>);
    descriptor: (Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_1
         5: invokeinterface #204,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 178: 0
        line 179: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/None;
            0      11     1 default   Lscala/Function0;
    Signature: #198                         // (Lscala/Function0<TT;>;)TT;
    MethodParameters:
      Name                           Flags
      default                        final

  public T getOrElseEager(T);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_1
         5: areturn
      LineNumberTable:
        line 183: 0
        line 184: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/None;
            0       6     1 default   Ljava/lang/Object;
    Signature: #208                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      default                        final

  public T get();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: new           #212                // class org/sireum/String
        10: dup
        11: getstatic     #89                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        14: ldc           #214                // String Invalid \'None\' operation \'get\'.
        16: invokevirtual #94                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        19: invokespecial #217                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        22: invokevirtual #221                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        25: athrow
      LineNumberTable:
        line 188: 0
        line 189: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/sireum/None;
    Signature: #210                         // ()TT;

  public org.sireum.IS<org.sireum.Z, T> toIS();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #229                // Field org/sireum/IS$.MODULE$:Lorg/sireum/IS$;
         7: getstatic     #234                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        10: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        13: invokevirtual #238                // Method org/sireum/package$.$ZCompanion:()Lorg/sireum/$ZCompanion;
        16: invokevirtual #241                // Method org/sireum/IS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/IS;
        19: areturn
      LineNumberTable:
        line 193: 0
        line 194: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/sireum/None;
    Signature: #224                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  public <V extends java.lang.Object> void foreach(scala.Function1<T, V>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/sireum/None;
            0       1     1     f   Lscala/Function1;
    Signature: #244                         // <V:Ljava/lang/Object;>(Lscala/Function1<TT;TV;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #246                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/None;

  public org.sireum.None();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #249                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #253                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #256                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #259                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: invokestatic  #262                // InterfaceMethod org/sireum/Option.$init$:(Lorg/sireum/Option;)V
        20: aload_0
        21: aload_0
        22: invokevirtual #101                // Method $hasEquals:()Z
        25: ifeq          35
        28: aload_0
        29: invokespecial #264                // Method java/lang/Object.hashCode:()I
        32: goto          45
        35: aload_0
        36: invokevirtual #268                // Method getClass:()Ljava/lang/Class;
        39: invokevirtual #273                // Method java/lang/Class.getName:()Ljava/lang/String;
        42: invokevirtual #274                // Method java/lang/String.hashCode:()I
        45: putfield      #97                 // Field hashCode:I
        48: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class org/sireum/None ]
          stack = [ class org/sireum/None ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/None ]
          stack = [ class org/sireum/None, int ]
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/sireum/None;
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/Option<TT;>;
SourceFile: "Option.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\rv!B\r\u001b\u0011\u0003yb!B\u0011\u001b\u0011\u0003\u0011\u0003\"B\u0015\u0002\t\u0003Q\u0003BB\u0016\u0002A\u0003%1\u0005C\u0003-\u0003\u0011\u0005Q\u0006C\u0004\u0002\u0012\u0006!\t!a%\u0007\t\u0005R\"\u0001\r\u0005\u0006S\u0019!\ta\u0011\u0005\u0006\u000b\u001a!\tE\u0012\u0005\u0006\u001f\u001a!\t\u0005\u0015\u0005\b\'\u001a\u0011\r\u0011\"\u0011U\u0011\u0019Af\u0001)A\u0005+\")\u0011L\u0002C!5\"A\u0001M\u0002EC\u0002\u0013\u0005\u0013\rC\u0003r\r\u0011\u0005#\u000fC\u0003{\r\u0011\u0005#\u000fC\u0003}\r\u0011\u0005S\u0010C\u0004\u0002\u0018\u0019!\t%!\u0007\t\u000f\u0005-b\u0001\"\u0011\u0002.!9\u0011q\u0007\u0004\u0005B\u0005e\u0002bBA \r\u0011\u0005\u0013\u0011\t\u0005\b\u0003\u001f2A\u0011IA)\u0011\u001d\t9F\u0002C!\u00033Bq!!\u0018\u0007\t\u0003\ny\u0006C\u0004\u0002p\u0019!\t%!\u001d\u0002\t9{g.\u001a\u0006\u00037q\taa]5sKVl\'\"A\u000f\u0002\u0007=\u0014xm\u0001\u0001\u0011\u0005\u0001\nQ\"\u0001\u000e\u0003\t9{g.Z\n\u0003\u0003\r\u0002\"\u0001J\u0014\u000e\u0003\u0015R\u0011AJ\u0001\u0006g\u000e\fG.Y\u0005\u0003Q\u0015\u0012a!\u00118z%\u00164\u0017A\u0002\u001fj]&$h\bF\u0001 \u0003\t!c/A\u0003baBd\u00170F\u0002/\u0003\u001f#\u0012a\f\t\u0005A\u0019\ti)\u0006\u00022oM!aa\t\u001aA!\r\u00013\'N\u0005\u0003ii\u0011aa\u00149uS>t\u0007C\u0001\u001c8\u0019\u0001!Q\u0001\u000f\u0004C\u0002e\u0012\u0011\u0001V\t\u0003uu\u0002\"\u0001J\u001e\n\u0005q*#a\u0002(pi\"Lgn\u001a\t\u0003IyJ!aP\u0013\u0003\u0007\u0005s\u0017\u0010\u0005\u0002!\u0003&\u0011!I\u0007\u0002\f\t\u0006$\u0018\r^=qKNKw\rF\u0001E!\r\u0001c!N\u0001\ti>\u001cFO]5oOR\tq\t\u0005\u0002I\u001b6\t\u0011J\u0003\u0002K\u0017\u0006!A.\u00198h\u0015\u0005a\u0015\u0001\u00026bm\u0006L!AT%\u0003\rM#(/\u001b8h\u0003\u0019\u0019HO]5oOV\t\u0011\u000b\u0005\u0002!%&\u0011aJG\u0001\tQ\u0006\u001c\bnQ8eKV\tQ\u000b\u0005\u0002%-&\u0011q+\n\u0002\u0004\u0013:$\u0018!\u00035bg\"\u001cu\u000eZ3!\u0003\u0019)\u0017/^1mgR\u00111L\u0018\t\u0003IqK!!X\u0013\u0003\u000f\t{w\u000e\\3b]\")q\f\u0004a\u0001{\u0005\tq.\u0001\u0005%G>tG/\u001a8u+\u0005\u0011\u0007cA2l]:\u0011A-\u001b\b\u0003K\"l\u0011A\u001a\u0006\u0003Oz\ta\u0001\u0010:p_Rt\u0014\"\u0001\u0014\n\u0005),\u0013a\u00029bG.\fw-Z\u0005\u0003Y6\u00141aU3r\u0015\tQW\u0005\u0005\u0003%_\u001ek\u0014B\u00019&\u0005\u0019!V\u000f\u001d7fe\u00059\u0011n]#naRLX#A:\u0011\u0005\u0001\"\u0018BA;\u001b\u0005\u0005\u0011\u0005F\u0001\bx!\t\u0001\u00030\u0003\u0002z5\t!\u0001/\u001e:f\u0003!qwN\\#naRL\bFA\bx\u0003\ri\u0017\r]\u000b\u0004}\u0006\rAcA@\u0002\bA!\u0001eMA\u0001!\r1\u00141\u0001\u0003\u0007\u0003\u000b\u0001\"\u0019A\u001d\u0003\u0005Q\u0013\u0004bBA\u0005!\u0001\u0007\u00111B\u0001\u0002MB1A%!\u00046\u0003#I1!a\u0004&\u0005%1UO\\2uS>t\u0017G\u000b\u0003\u0002\u0002\u0005M1&A<)\u0005A9\u0018a\u00024mCRl\u0015\r]\u000b\u0005\u00037\t\t\u0003\u0006\u0003\u0002\u001e\u0005\r\u0002\u0003\u0002\u00114\u0003?\u00012ANA\u0011\t\u0019\t)!\u0005b\u0001s!9\u0011\u0011B\tA\u0002\u0005\u0015\u0002C\u0002\u0013\u0002\u000eU\n9C\u000b\u0003\u0002\u001e\u0005M\u0001FA\tx\u0003\u00191wN]1mYR\u00191/a\f\t\u000f\u0005%!\u00031\u0001\u00022A1A%!\u00046\u0003gQ3a]A\nQ\t\u0011r/\u0001\u0004fq&\u001cHo\u001d\u000b\u0004g\u0006m\u0002bBA\u0005\'\u0001\u0007\u0011\u0011\u0007\u0015\u0003\']\f\u0011bZ3u\u001fJ,En]3\u0015\u0007U\n\u0019\u0005\u0003\u0005\u0002FQ!\t\u0019AA$\u0003\u001d!WMZ1vYR\u0004B\u0001JA%k%\u0019\u00111J\u0013\u0003\u0011q\u0012\u0017P\\1nKzB#\u0001F<\u0002\u001d\u001d,Go\u0014:FYN,W)Y4feR\u0019Q\'a\u0015\t\r\u0005\u0015S\u00031\u00016Q\t)r/A\u0002hKR,\u0012!\u000e\u0015\u0003-]\fA\u0001^8J\'V\u0011\u0011\u0011\r\t\u0007A\u0005\r\u0014qM\u001b\n\u0007\u0005\u0015$D\u0001\u0002J\'B\u0019\u0001%!\u001b\n\u0007\u0005-$DA\u0001[Q\t9r/A\u0004g_J,\u0017m\u00195\u0016\t\u0005M\u0014\u0011\u0011\u000b\u0005\u0003k\nY\bE\u0002%\u0003oJ1!!\u001f&\u0005\u0011)f.\u001b;\t\u000f\u0005%\u0001\u00041\u0001\u0002~A1A%!\u00046\u0003\u007f\u00022ANAA\t\u0019\t\u0019\t\u0007b\u0001s\t\ta\u000bK\u0002\u0007\u0003\u000f\u00032\u0001IAE\u0013\r\tYI\u0007\u0002\tI\u0006$\u0018\r^=qKB\u0019a\'a$\u0005\u000ba\"!\u0019A\u001d\u0002\u000fUt\u0017\r\u001d9msV!\u0011QSAQ)\u0011\t9*a\'\u0010\u0005\u0005e\u0015$A\u0001\t\r}+\u0001\u0019AAO!\u0011\u0001c!a(\u0011\u0007Y\n\t\u000bB\u00039\u000b\t\u0007\u0011\b"
    )
  ScalaInlineInfo: length = 0x7C (unknown attribute)
   01 01 00 18 00 2E 00 2F 01 00 40 00 CA 01 00 40
   00 41 01 00 0C 00 6A 01 00 69 00 6A 01 00 36 00
   37 01 00 3C 00 37 01 00 95 00 F7 01 00 62 00 63
   01 00 C3 00 C1 01 00 BE 00 BA 01 00 C0 00 C1 01
   00 F2 00 F3 01 00 D1 00 CA 01 00 C4 00 C5 01 00
   CE 00 CF 01 00 25 00 26 01 00 0F 00 5F 01 00 A6
   00 37 01 00 B9 00 BA 01 00 B5 00 37 01 00 54 00
   49 01 00 DE 00 DF 01 00 48 00 49 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
