Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/objectweb/asm/ClassVisitor.class
  Last modified May 29, 2022; size 4749 bytes
  SHA-256 checksum 50f202bd29ae170aa15a8a17e1dbab331223543b8aefa3f3f9717465df8f76e6
  Compiled from "ClassVisitor.java"
public abstract class org.objectweb.asm.ClassVisitor
  minor version: 0
  major version: 49
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // org/objectweb/asm/ClassVisitor
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 17, attributes: 1
Constant pool:
    #1 = Utf8               org/objectweb/asm/ClassVisitor
    #2 = Class              #1            // org/objectweb/asm/ClassVisitor
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               ClassVisitor.java
    #6 = Utf8               api
    #7 = Utf8               I
    #8 = Utf8               cv
    #9 = Utf8               Lorg/objectweb/asm/ClassVisitor;
   #10 = Utf8               <init>
   #11 = Utf8               (I)V
   #12 = Utf8               (ILorg/objectweb/asm/ClassVisitor;)V
   #13 = NameAndType        #10:#12       // "<init>":(ILorg/objectweb/asm/ClassVisitor;)V
   #14 = Methodref          #2.#13        // org/objectweb/asm/ClassVisitor."<init>":(ILorg/objectweb/asm/ClassVisitor;)V
   #15 = Utf8               this
   #16 = Utf8               ()V
   #17 = NameAndType        #10:#16       // "<init>":()V
   #18 = Methodref          #4.#17        // java/lang/Object."<init>":()V
   #19 = Integer            589824
   #20 = Integer            524288
   #21 = Integer            458752
   #22 = Integer            393216
   #23 = Integer            327680
   #24 = Integer            262144
   #25 = Integer            17432576
   #26 = Utf8               java/lang/IllegalArgumentException
   #27 = Class              #26           // java/lang/IllegalArgumentException
   #28 = Utf8               java/lang/StringBuilder
   #29 = Class              #28           // java/lang/StringBuilder
   #30 = Methodref          #29.#17       // java/lang/StringBuilder."<init>":()V
   #31 = Utf8               Unsupported api
   #32 = String             #31           // Unsupported api
   #33 = Utf8               append
   #34 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #35 = NameAndType        #33:#34       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #36 = Methodref          #29.#35       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #37 = Utf8               (I)Ljava/lang/StringBuilder;
   #38 = NameAndType        #33:#37       // append:(I)Ljava/lang/StringBuilder;
   #39 = Methodref          #29.#38       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #40 = Utf8               toString
   #41 = Utf8               ()Ljava/lang/String;
   #42 = NameAndType        #40:#41       // toString:()Ljava/lang/String;
   #43 = Methodref          #29.#42       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #44 = Utf8               (Ljava/lang/String;)V
   #45 = NameAndType        #10:#44       // "<init>":(Ljava/lang/String;)V
   #46 = Methodref          #27.#45       // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #47 = Utf8               org/objectweb/asm/Constants
   #48 = Class              #47           // org/objectweb/asm/Constants
   #49 = Utf8               checkAsmExperimental
   #50 = Utf8               (Ljava/lang/Object;)V
   #51 = NameAndType        #49:#50       // checkAsmExperimental:(Ljava/lang/Object;)V
   #52 = Methodref          #48.#51       // org/objectweb/asm/Constants.checkAsmExperimental:(Ljava/lang/Object;)V
   #53 = NameAndType        #6:#7         // api:I
   #54 = Fieldref           #2.#53        // org/objectweb/asm/ClassVisitor.api:I
   #55 = NameAndType        #8:#9         // cv:Lorg/objectweb/asm/ClassVisitor;
   #56 = Fieldref           #2.#55        // org/objectweb/asm/ClassVisitor.cv:Lorg/objectweb/asm/ClassVisitor;
   #57 = Utf8               classVisitor
   #58 = Utf8               visit
   #59 = Utf8               (IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
   #60 = Integer            65536
   #61 = Utf8               java/lang/UnsupportedOperationException
   #62 = Class              #61           // java/lang/UnsupportedOperationException
   #63 = Utf8               Records requires ASM8
   #64 = String             #63           // Records requires ASM8
   #65 = Methodref          #62.#45       // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
   #66 = NameAndType        #58:#59       // visit:(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
   #67 = Methodref          #2.#66        // org/objectweb/asm/ClassVisitor.visit:(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
   #68 = Utf8               version
   #69 = Utf8               access
   #70 = Utf8               name
   #71 = Utf8               Ljava/lang/String;
   #72 = Utf8               signature
   #73 = Utf8               superName
   #74 = Utf8               interfaces
   #75 = Utf8               [Ljava/lang/String;
   #76 = Utf8               visitSource
   #77 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
   #78 = NameAndType        #76:#77       // visitSource:(Ljava/lang/String;Ljava/lang/String;)V
   #79 = Methodref          #2.#78        // org/objectweb/asm/ClassVisitor.visitSource:(Ljava/lang/String;Ljava/lang/String;)V
   #80 = Utf8               source
   #81 = Utf8               debug
   #82 = Utf8               visitModule
   #83 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Lorg/objectweb/asm/ModuleVisitor;
   #84 = Utf8               Module requires ASM6
   #85 = String             #84           // Module requires ASM6
   #86 = NameAndType        #82:#83       // visitModule:(Ljava/lang/String;ILjava/lang/String;)Lorg/objectweb/asm/ModuleVisitor;
   #87 = Methodref          #2.#86        // org/objectweb/asm/ClassVisitor.visitModule:(Ljava/lang/String;ILjava/lang/String;)Lorg/objectweb/asm/ModuleVisitor;
   #88 = Utf8               visitNestHost
   #89 = Utf8               NestHost requires ASM7
   #90 = String             #89           // NestHost requires ASM7
   #91 = NameAndType        #88:#44       // visitNestHost:(Ljava/lang/String;)V
   #92 = Methodref          #2.#91        // org/objectweb/asm/ClassVisitor.visitNestHost:(Ljava/lang/String;)V
   #93 = Utf8               nestHost
   #94 = Utf8               visitOuterClass
   #95 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
   #96 = NameAndType        #94:#95       // visitOuterClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
   #97 = Methodref          #2.#96        // org/objectweb/asm/ClassVisitor.visitOuterClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
   #98 = Utf8               owner
   #99 = Utf8               descriptor
  #100 = Utf8               visitAnnotation
  #101 = Utf8               (Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
  #102 = NameAndType        #100:#101     // visitAnnotation:(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
  #103 = Methodref          #2.#102       // org/objectweb/asm/ClassVisitor.visitAnnotation:(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
  #104 = Utf8               visible
  #105 = Utf8               Z
  #106 = Utf8               visitTypeAnnotation
  #107 = Utf8               (ILorg/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
  #108 = Utf8               TypeAnnotation requires ASM5
  #109 = String             #108          // TypeAnnotation requires ASM5
  #110 = NameAndType        #106:#107     // visitTypeAnnotation:(ILorg/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
  #111 = Methodref          #2.#110       // org/objectweb/asm/ClassVisitor.visitTypeAnnotation:(ILorg/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
  #112 = Utf8               typeRef
  #113 = Utf8               typePath
  #114 = Utf8               Lorg/objectweb/asm/TypePath;
  #115 = Utf8               visitAttribute
  #116 = Utf8               (Lorg/objectweb/asm/Attribute;)V
  #117 = NameAndType        #115:#116     // visitAttribute:(Lorg/objectweb/asm/Attribute;)V
  #118 = Methodref          #2.#117       // org/objectweb/asm/ClassVisitor.visitAttribute:(Lorg/objectweb/asm/Attribute;)V
  #119 = Utf8               attribute
  #120 = Utf8               Lorg/objectweb/asm/Attribute;
  #121 = Utf8               visitNestMember
  #122 = Utf8               NestMember requires ASM7
  #123 = String             #122          // NestMember requires ASM7
  #124 = NameAndType        #121:#44      // visitNestMember:(Ljava/lang/String;)V
  #125 = Methodref          #2.#124       // org/objectweb/asm/ClassVisitor.visitNestMember:(Ljava/lang/String;)V
  #126 = Utf8               nestMember
  #127 = Utf8               visitPermittedSubclass
  #128 = Utf8               PermittedSubclasses requires ASM9
  #129 = String             #128          // PermittedSubclasses requires ASM9
  #130 = NameAndType        #127:#44      // visitPermittedSubclass:(Ljava/lang/String;)V
  #131 = Methodref          #2.#130       // org/objectweb/asm/ClassVisitor.visitPermittedSubclass:(Ljava/lang/String;)V
  #132 = Utf8               permittedSubclass
  #133 = Utf8               visitInnerClass
  #134 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
  #135 = NameAndType        #133:#134     // visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
  #136 = Methodref          #2.#135       // org/objectweb/asm/ClassVisitor.visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
  #137 = Utf8               outerName
  #138 = Utf8               innerName
  #139 = Utf8               visitRecordComponent
  #140 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/RecordComponentVisitor;
  #141 = Utf8               Record requires ASM8
  #142 = String             #141          // Record requires ASM8
  #143 = NameAndType        #139:#140     // visitRecordComponent:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/RecordComponentVisitor;
  #144 = Methodref          #2.#143       // org/objectweb/asm/ClassVisitor.visitRecordComponent:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/RecordComponentVisitor;
  #145 = Utf8               visitField
  #146 = Utf8               (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/objectweb/asm/FieldVisitor;
  #147 = NameAndType        #145:#146     // visitField:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/objectweb/asm/FieldVisitor;
  #148 = Methodref          #2.#147       // org/objectweb/asm/ClassVisitor.visitField:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/objectweb/asm/FieldVisitor;
  #149 = Utf8               value
  #150 = Utf8               Ljava/lang/Object;
  #151 = Utf8               visitMethod
  #152 = Utf8               (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/objectweb/asm/MethodVisitor;
  #153 = NameAndType        #151:#152     // visitMethod:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/objectweb/asm/MethodVisitor;
  #154 = Methodref          #2.#153       // org/objectweb/asm/ClassVisitor.visitMethod:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/objectweb/asm/MethodVisitor;
  #155 = Utf8               exceptions
  #156 = Utf8               visitEnd
  #157 = NameAndType        #156:#16      // visitEnd:()V
  #158 = Methodref          #2.#157       // org/objectweb/asm/ClassVisitor.visitEnd:()V
  #159 = Utf8               Code
  #160 = Utf8               LineNumberTable
  #161 = Utf8               LocalVariableTable
  #162 = Utf8               SourceFile
{
  protected final int api;
    descriptor: I
    flags: (0x0014) ACC_PROTECTED, ACC_FINAL

  protected org.objectweb.asm.ClassVisitor cv;
    descriptor: Lorg/objectweb/asm/ClassVisitor;
    flags: (0x0004) ACC_PROTECTED

  protected org.objectweb.asm.ClassVisitor(int);
    descriptor: (I)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: aconst_null
         3: invokespecial #14                 // Method "<init>":(ILorg/objectweb/asm/ClassVisitor;)V
         6: return
      LineNumberTable:
        line 58: 0
        line 59: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/objectweb/asm/ClassVisitor;
            0       7     1   api   I

  protected org.objectweb.asm.ClassVisitor(int, org.objectweb.asm.ClassVisitor);
    descriptor: (ILorg/objectweb/asm/ClassVisitor;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: invokespecial #18                 // Method java/lang/Object."<init>":()V
         4: iload_1
         5: ldc           #19                 // int 589824
         7: if_icmpeq     73
        10: iload_1
        11: ldc           #20                 // int 524288
        13: if_icmpeq     73
        16: iload_1
        17: ldc           #21                 // int 458752
        19: if_icmpeq     73
        22: iload_1
        23: ldc           #22                 // int 393216
        25: if_icmpeq     73
        28: iload_1
        29: ldc           #23                 // int 327680
        31: if_icmpeq     73
        34: iload_1
        35: ldc           #24                 // int 262144
        37: if_icmpeq     73
        40: iload_1
        41: ldc           #25                 // int 17432576
        43: if_icmpeq     73
        46: new           #27                 // class java/lang/IllegalArgumentException
        49: dup
        50: new           #29                 // class java/lang/StringBuilder
        53: dup
        54: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
        57: ldc           #32                 // String Unsupported api
        59: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: iload_1
        63: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        66: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        69: invokespecial #46                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        72: athrow
        73: iload_1
        74: ldc           #25                 // int 17432576
        76: if_icmpne     83
        79: aload_0
        80: invokestatic  #52                 // Method org/objectweb/asm/Constants.checkAsmExperimental:(Ljava/lang/Object;)V
        83: aload_0
        84: iload_1
        85: putfield      #54                 // Field api:I
        88: aload_0
        89: aload_2
        90: putfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        93: return
      LineNumberTable:
        line 69: 0
        line 70: 4
        line 77: 46
        line 79: 73
        line 80: 79
        line 82: 83
        line 83: 88
        line 84: 93
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      94     1   api   I
            0      94     2 classVisitor   Lorg/objectweb/asm/ClassVisitor;

  public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]);
    descriptor: (IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=7, args_size=7
         0: aload_0
         1: getfield      #54                 // Field api:I
         4: ldc           #20                 // int 524288
         6: if_icmpge     26
         9: iload_2
        10: ldc           #60                 // int 65536
        12: iand
        13: ifeq          26
        16: new           #62                 // class java/lang/UnsupportedOperationException
        19: dup
        20: ldc           #64                 // String Records requires ASM8
        22: invokespecial #65                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        25: athrow
        26: aload_0
        27: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        30: ifnull        49
        33: aload_0
        34: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        37: iload_1
        38: iload_2
        39: aload_3
        40: aload         4
        42: aload         5
        44: aload         6
        46: invokevirtual #67                 // Method visit:(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
        49: return
      LineNumberTable:
        line 110: 0
        line 111: 16
        line 113: 26
        line 114: 33
        line 116: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      50     1 version   I
            0      50     2 access   I
            0      50     3  name   Ljava/lang/String;
            0      50     4 signature   Ljava/lang/String;
            0      50     5 superName   Ljava/lang/String;
            0      50     6 interfaces   [Ljava/lang/String;

  public void visitSource(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
         4: ifnull        16
         7: aload_0
         8: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        11: aload_1
        12: aload_2
        13: invokevirtual #79                 // Method visitSource:(Ljava/lang/String;Ljava/lang/String;)V
        16: return
      LineNumberTable:
        line 127: 0
        line 128: 7
        line 130: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      17     1 source   Ljava/lang/String;
            0      17     2 debug   Ljava/lang/String;

  public org.objectweb.asm.ModuleVisitor visitModule(java.lang.String, int, java.lang.String);
    descriptor: (Ljava/lang/String;ILjava/lang/String;)Lorg/objectweb/asm/ModuleVisitor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #54                 // Field api:I
         4: ldc           #22                 // int 393216
         6: if_icmpge     19
         9: new           #62                 // class java/lang/UnsupportedOperationException
        12: dup
        13: ldc           #85                 // String Module requires ASM6
        15: invokespecial #65                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        18: athrow
        19: aload_0
        20: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        23: ifnull        37
        26: aload_0
        27: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        30: aload_1
        31: iload_2
        32: aload_3
        33: invokevirtual #87                 // Method visitModule:(Ljava/lang/String;ILjava/lang/String;)Lorg/objectweb/asm/ModuleVisitor;
        36: areturn
        37: aconst_null
        38: areturn
      LineNumberTable:
        line 143: 0
        line 144: 9
        line 146: 19
        line 147: 26
        line 149: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      39     1  name   Ljava/lang/String;
            0      39     2 access   I
            0      39     3 version   Ljava/lang/String;

  public void visitNestHost(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #54                 // Field api:I
         4: ldc           #21                 // int 458752
         6: if_icmpge     19
         9: new           #62                 // class java/lang/UnsupportedOperationException
        12: dup
        13: ldc           #90                 // String NestHost requires ASM7
        15: invokespecial #65                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        18: athrow
        19: aload_0
        20: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        23: ifnull        34
        26: aload_0
        27: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        30: aload_1
        31: invokevirtual #92                 // Method visitNestHost:(Ljava/lang/String;)V
        34: return
      LineNumberTable:
        line 163: 0
        line 164: 9
        line 166: 19
        line 167: 26
        line 169: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      35     1 nestHost   Ljava/lang/String;

  public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
         4: ifnull        17
         7: aload_0
         8: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        11: aload_1
        12: aload_2
        13: aload_3
        14: invokevirtual #97                 // Method visitOuterClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
        17: return
      LineNumberTable:
        line 182: 0
        line 183: 7
        line 185: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      18     1 owner   Ljava/lang/String;
            0      18     2  name   Ljava/lang/String;
            0      18     3 descriptor   Ljava/lang/String;

  public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
         4: ifnull        17
         7: aload_0
         8: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        11: aload_1
        12: iload_2
        13: invokevirtual #103                // Method visitAnnotation:(Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
        16: areturn
        17: aconst_null
        18: areturn
      LineNumberTable:
        line 196: 0
        line 197: 7
        line 199: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      19     1 descriptor   Ljava/lang/String;
            0      19     2 visible   Z

  public org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, org.objectweb.asm.TypePath, java.lang.String, boolean);
    descriptor: (ILorg/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: getfield      #54                 // Field api:I
         4: ldc           #23                 // int 327680
         6: if_icmpge     19
         9: new           #62                 // class java/lang/UnsupportedOperationException
        12: dup
        13: ldc           #109                // String TypeAnnotation requires ASM5
        15: invokespecial #65                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        18: athrow
        19: aload_0
        20: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        23: ifnull        39
        26: aload_0
        27: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        30: iload_1
        31: aload_2
        32: aload_3
        33: iload         4
        35: invokevirtual #111                // Method visitTypeAnnotation:(ILorg/objectweb/asm/TypePath;Ljava/lang/String;Z)Lorg/objectweb/asm/AnnotationVisitor;
        38: areturn
        39: aconst_null
        40: areturn
      LineNumberTable:
        line 219: 0
        line 220: 9
        line 222: 19
        line 223: 26
        line 225: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      41     1 typeRef   I
            0      41     2 typePath   Lorg/objectweb/asm/TypePath;
            0      41     3 descriptor   Ljava/lang/String;
            0      41     4 visible   Z

  public void visitAttribute(org.objectweb.asm.Attribute);
    descriptor: (Lorg/objectweb/asm/Attribute;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
         4: ifnull        15
         7: aload_0
         8: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        11: aload_1
        12: invokevirtual #118                // Method visitAttribute:(Lorg/objectweb/asm/Attribute;)V
        15: return
      LineNumberTable:
        line 234: 0
        line 235: 7
        line 237: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      16     1 attribute   Lorg/objectweb/asm/Attribute;

  public void visitNestMember(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #54                 // Field api:I
         4: ldc           #21                 // int 458752
         6: if_icmpge     19
         9: new           #62                 // class java/lang/UnsupportedOperationException
        12: dup
        13: ldc           #123                // String NestMember requires ASM7
        15: invokespecial #65                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        18: athrow
        19: aload_0
        20: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        23: ifnull        34
        26: aload_0
        27: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        30: aload_1
        31: invokevirtual #125                // Method visitNestMember:(Ljava/lang/String;)V
        34: return
      LineNumberTable:
        line 249: 0
        line 250: 9
        line 252: 19
        line 253: 26
        line 255: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      35     1 nestMember   Ljava/lang/String;

  public void visitPermittedSubclass(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #54                 // Field api:I
         4: ldc           #19                 // int 589824
         6: if_icmpge     19
         9: new           #62                 // class java/lang/UnsupportedOperationException
        12: dup
        13: ldc           #129                // String PermittedSubclasses requires ASM9
        15: invokespecial #65                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        18: athrow
        19: aload_0
        20: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        23: ifnull        34
        26: aload_0
        27: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        30: aload_1
        31: invokevirtual #131                // Method visitPermittedSubclass:(Ljava/lang/String;)V
        34: return
      LineNumberTable:
        line 264: 0
        line 265: 9
        line 267: 19
        line 268: 26
        line 270: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      35     1 permittedSubclass   Ljava/lang/String;

  public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
         4: ifnull        19
         7: aload_0
         8: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        11: aload_1
        12: aload_2
        13: aload_3
        14: iload         4
        16: invokevirtual #136                // Method visitInnerClass:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
        19: return
      LineNumberTable:
        line 286: 0
        line 287: 7
        line 289: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      20     1  name   Ljava/lang/String;
            0      20     2 outerName   Ljava/lang/String;
            0      20     3 innerName   Ljava/lang/String;
            0      20     4 access   I

  public org.objectweb.asm.RecordComponentVisitor visitRecordComponent(java.lang.String, java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/RecordComponentVisitor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #54                 // Field api:I
         4: ldc           #20                 // int 524288
         6: if_icmpge     19
         9: new           #62                 // class java/lang/UnsupportedOperationException
        12: dup
        13: ldc           #142                // String Record requires ASM8
        15: invokespecial #65                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        18: athrow
        19: aload_0
        20: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        23: ifnull        37
        26: aload_0
        27: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        30: aload_1
        31: aload_2
        32: aload_3
        33: invokevirtual #144                // Method visitRecordComponent:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/objectweb/asm/RecordComponentVisitor;
        36: areturn
        37: aconst_null
        38: areturn
      LineNumberTable:
        line 303: 0
        line 304: 9
        line 306: 19
        line 307: 26
        line 309: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      39     1  name   Ljava/lang/String;
            0      39     2 descriptor   Ljava/lang/String;
            0      39     3 signature   Ljava/lang/String;

  public org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    descriptor: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/objectweb/asm/FieldVisitor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
         4: ifnull        22
         7: aload_0
         8: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        11: iload_1
        12: aload_2
        13: aload_3
        14: aload         4
        16: aload         5
        18: invokevirtual #148                // Method visitField:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/objectweb/asm/FieldVisitor;
        21: areturn
        22: aconst_null
        23: areturn
      LineNumberTable:
        line 336: 0
        line 337: 7
        line 339: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      24     1 access   I
            0      24     2  name   Ljava/lang/String;
            0      24     3 descriptor   Ljava/lang/String;
            0      24     4 signature   Ljava/lang/String;
            0      24     5 value   Ljava/lang/Object;

  public org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]);
    descriptor: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/objectweb/asm/MethodVisitor;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
         4: ifnull        22
         7: aload_0
         8: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        11: iload_1
        12: aload_2
        13: aload_3
        14: aload         4
        16: aload         5
        18: invokevirtual #154                // Method visitMethod:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/objectweb/asm/MethodVisitor;
        21: areturn
        22: aconst_null
        23: areturn
      LineNumberTable:
        line 364: 0
        line 365: 7
        line 367: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/objectweb/asm/ClassVisitor;
            0      24     1 access   I
            0      24     2  name   Ljava/lang/String;
            0      24     3 descriptor   Ljava/lang/String;
            0      24     4 signature   Ljava/lang/String;
            0      24     5 exceptions   [Ljava/lang/String;

  public void visitEnd();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
         4: ifnull        14
         7: aload_0
         8: getfield      #56                 // Field cv:Lorg/objectweb/asm/ClassVisitor;
        11: invokevirtual #158                // Method visitEnd:()V
        14: return
      LineNumberTable:
        line 375: 0
        line 376: 7
        line 378: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/objectweb/asm/ClassVisitor;
}
SourceFile: "ClassVisitor.java"
