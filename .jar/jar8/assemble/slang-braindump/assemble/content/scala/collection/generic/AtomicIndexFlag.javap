Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/generic/AtomicIndexFlag.class
  Last modified May 29, 2022; size 2731 bytes
  SHA-256 checksum 3f10995677eed02e99afe7a35b81f5bf1dc361f01f1661a8c559cc6cb01204a1
  Compiled from "Signalling.scala"
public interface scala.collection.generic.AtomicIndexFlag extends scala.collection.generic.Signalling
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/collection/generic/AtomicIndexFlag
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 11, attributes: 4
Constant pool:
   #1 = Utf8               scala/collection/generic/AtomicIndexFlag
   #2 = Class              #1             // scala/collection/generic/AtomicIndexFlag
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               scala/collection/generic/Signalling
   #6 = Class              #5             // scala/collection/generic/Signalling
   #7 = Utf8               Signalling.scala
   #8 = Utf8               Lscala/reflect/ScalaSignature;
   #9 = Utf8               bytes
  #10 = Utf8               \u0006\u0005i2qa\u0002\u0005\u0011\u0002\u0007\u0005q\u0002C\u0003\u0019\u0001\u0011\u0005\u0011\u0004C\u0004\u001e\u0001\t\u0007I\u0011\u0002\u0010\t\r-\u0002\u0001\u0013\"\u0001-\u0011\u0019\u0001\u0004\u0001%C\u0001c!1A\u0007\u0001I\u0005\u0002UBaa\u000e\u0001\u0011\n\u0003A$aD!u_6L7-\u00138eKb4E.Y4\u000b\u0005%Q\u0011aB4f]\u0016\u0014\u0018n\u0019\u0006\u0003\u00171\t!bY8mY\u0016\u001cG/[8o\u0015\u0005i\u0011!B:dC2\f7\u0001A\n\u0004\u0001A!\u0002CA\t\u0013\u001b\u0005a\u0011BA\n\r\u0005\u0019\te.\u001f*fMB\u0011QCF\u0007\u0002\u0011%\u0011q\u0003\u0003\u0002\u000b\'&<g.\u00197mS:<\u0017A\u0002\u0013j]&$H\u0005F\u0001\u001b!\t\t2$\u0003\u0002\u001d\u0019\t!QK\\5u\u0003\u001dIg\u000e\u001e4mC\u001e,\u0012a\b\t\u0003A%j\u0011!\t\u0006\u0003E\r\na!\u0019;p[&\u001c\'B\u0001\u0013&\u0003)\u0019wN\\2veJ,g\u000e\u001e\u0006\u0003M\u001d\nA!\u001e;jY*\t\u0001&\u0001\u0003kCZ\f\u0017B\u0001\u0016\"\u00055\tEo\\7jG&sG/Z4fe\u0006I\u0011N\u001c3fq\u001ac\u0017mZ\u000b\u0002[A\u0011\u0011CL\u0005\u0003_1\u00111!\u00138u\u00031\u0019X\r^%oI\u0016Dh\t\\1h)\tQ\"\u0007C\u00034\t\u0001\u0007Q&A\u0001g\u0003U\u0019X\r^%oI\u0016Dh\t\\1h\u0013\u001a<%/Z1uKJ$\"A\u0007\u001c\t\u000bM*\u0001\u0019A\u0017\u0002)M,G/\u00138eKb4E.Y4JM2+7o]3s)\tQ\u0012\bC\u00034\r\u0001\u0007Q\u0006
  #11 = Utf8               scala$collection$generic$AtomicIndexFlag$_setter_$scala$collection$generic$AtomicIndexFlag$$intflag_$eq
  #12 = Utf8               (Ljava/util/concurrent/atomic/AtomicInteger;)V
  #13 = Utf8               x$1
  #14 = Utf8               scala$collection$generic$AtomicIndexFlag$$intflag
  #15 = Utf8               ()Ljava/util/concurrent/atomic/AtomicInteger;
  #16 = Utf8               indexFlag$
  #17 = Utf8               (Lscala/collection/generic/AtomicIndexFlag;)I
  #18 = Utf8               $this
  #19 = Utf8               indexFlag
  #20 = Utf8               ()I
  #21 = NameAndType        #19:#20        // indexFlag:()I
  #22 = InterfaceMethodref #2.#21         // scala/collection/generic/AtomicIndexFlag.indexFlag:()I
  #23 = Utf8               Lscala/collection/generic/AtomicIndexFlag;
  #24 = NameAndType        #14:#15        // scala$collection$generic$AtomicIndexFlag$$intflag:()Ljava/util/concurrent/atomic/AtomicInteger;
  #25 = InterfaceMethodref #2.#24         // scala/collection/generic/AtomicIndexFlag.scala$collection$generic$AtomicIndexFlag$$intflag:()Ljava/util/concurrent/atomic/AtomicInteger;
  #26 = Utf8               java/util/concurrent/atomic/AtomicInteger
  #27 = Class              #26            // java/util/concurrent/atomic/AtomicInteger
  #28 = Utf8               get
  #29 = NameAndType        #28:#20        // get:()I
  #30 = Methodref          #27.#29        // java/util/concurrent/atomic/AtomicInteger.get:()I
  #31 = Utf8               this
  #32 = Utf8               setIndexFlag$
  #33 = Utf8               (Lscala/collection/generic/AtomicIndexFlag;I)V
  #34 = Utf8               f
  #35 = Utf8               setIndexFlag
  #36 = Utf8               (I)V
  #37 = NameAndType        #35:#36        // setIndexFlag:(I)V
  #38 = InterfaceMethodref #2.#37         // scala/collection/generic/AtomicIndexFlag.setIndexFlag:(I)V
  #39 = Utf8               I
  #40 = Utf8               set
  #41 = NameAndType        #40:#36        // set:(I)V
  #42 = Methodref          #27.#41        // java/util/concurrent/atomic/AtomicInteger.set:(I)V
  #43 = Utf8               setIndexFlagIfGreater$
  #44 = Utf8               setIndexFlagIfGreater
  #45 = NameAndType        #44:#36        // setIndexFlagIfGreater:(I)V
  #46 = InterfaceMethodref #2.#45         // scala/collection/generic/AtomicIndexFlag.setIndexFlagIfGreater:(I)V
  #47 = Utf8               compareAndSet
  #48 = Utf8               (II)Z
  #49 = NameAndType        #47:#48        // compareAndSet:(II)Z
  #50 = Methodref          #27.#49        // java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
  #51 = Utf8               old
  #52 = Utf8               loop
  #53 = Utf8               Z
  #54 = Utf8               setIndexFlagIfLesser$
  #55 = Utf8               setIndexFlagIfLesser
  #56 = NameAndType        #55:#36        // setIndexFlagIfLesser:(I)V
  #57 = InterfaceMethodref #2.#56         // scala/collection/generic/AtomicIndexFlag.setIndexFlagIfLesser:(I)V
  #58 = Utf8               $init$
  #59 = Utf8               (Lscala/collection/generic/AtomicIndexFlag;)V
  #60 = Utf8               <init>
  #61 = NameAndType        #60:#36        // "<init>":(I)V
  #62 = Methodref          #27.#61        // java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
  #63 = NameAndType        #11:#12        // scala$collection$generic$AtomicIndexFlag$_setter_$scala$collection$generic$AtomicIndexFlag$$intflag_$eq:(Ljava/util/concurrent/atomic/AtomicInteger;)V
  #64 = InterfaceMethodref #2.#63         // scala/collection/generic/AtomicIndexFlag.scala$collection$generic$AtomicIndexFlag$_setter_$scala$collection$generic$AtomicIndexFlag$$intflag_$eq:(Ljava/util/concurrent/atomic/AtomicInteger;)V
  #65 = Utf8               MethodParameters
  #66 = Utf8               Code
  #67 = Utf8               LineNumberTable
  #68 = Utf8               LocalVariableTable
  #69 = Utf8               StackMapTable
  #70 = Utf8               SourceFile
  #71 = Utf8               RuntimeVisibleAnnotations
  #72 = Utf8               ScalaInlineInfo
  #73 = Utf8               ScalaSig
{
  public abstract void scala$collection$generic$AtomicIndexFlag$_setter_$scala$collection$generic$AtomicIndexFlag$$intflag_$eq(java.util.concurrent.atomic.AtomicInteger);
    descriptor: (Ljava/util/concurrent/atomic/AtomicInteger;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract java.util.concurrent.atomic.AtomicInteger scala$collection$generic$AtomicIndexFlag$$intflag();
    descriptor: ()Ljava/util/concurrent/atomic/AtomicInteger;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public static int indexFlag$(scala.collection.generic.AtomicIndexFlag);
    descriptor: (Lscala/collection/generic/AtomicIndexFlag;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #22                 // InterfaceMethod indexFlag:()I
         4: ireturn
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/generic/AtomicIndexFlag;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default int indexFlag();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #25,  1           // InterfaceMethod scala$collection$generic$AtomicIndexFlag$$intflag:()Ljava/util/concurrent/atomic/AtomicInteger;
         6: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
         9: ireturn
      LineNumberTable:
        line 130: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/generic/AtomicIndexFlag;

  public static void setIndexFlag$(scala.collection.generic.AtomicIndexFlag, int);
    descriptor: (Lscala/collection/generic/AtomicIndexFlag;I)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #38                 // InterfaceMethod setIndexFlag:(I)V
         5: return
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/generic/AtomicIndexFlag;
            0       6     1     f   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public default void setIndexFlag(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #25,  1           // InterfaceMethod scala$collection$generic$AtomicIndexFlag$$intflag:()Ljava/util/concurrent/atomic/AtomicInteger;
         6: iload_1
         7: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
        10: return
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/generic/AtomicIndexFlag;
            0      11     1     f   I
    MethodParameters:
      Name                           Flags
      f                              final

  public static void setIndexFlagIfGreater$(scala.collection.generic.AtomicIndexFlag, int);
    descriptor: (Lscala/collection/generic/AtomicIndexFlag;I)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #46                 // InterfaceMethod setIndexFlagIfGreater:(I)V
         5: return
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/generic/AtomicIndexFlag;
            0       6     1     f   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public default void setIndexFlagIfGreater(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: iconst_1
         1: istore_2
         2: iload_2
         3: ifeq          48
         6: aload_0
         7: invokeinterface #25,  1           // InterfaceMethod scala$collection$generic$AtomicIndexFlag$$intflag:()Ljava/util/concurrent/atomic/AtomicInteger;
        12: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
        15: istore_3
        16: iload_1
        17: iload_3
        18: if_icmpgt     26
        21: iconst_0
        22: istore_2
        23: goto          45
        26: aload_0
        27: invokeinterface #25,  1           // InterfaceMethod scala$collection$generic$AtomicIndexFlag$$intflag:()Ljava/util/concurrent/atomic/AtomicInteger;
        32: iload_3
        33: iload_1
        34: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
        37: ifeq          45
        40: iconst_0
        41: istore_2
        42: goto          45
        45: goto          2
        48: return
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ int ]
        frame_type = 18 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 133: 0
        line 134: 2
        line 135: 6
        line 136: 16
        line 137: 26
        line 134: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      29     3   old   I
            2      46     2  loop   Z
            0      49     0  this   Lscala/collection/generic/AtomicIndexFlag;
            0      49     1     f   I
    MethodParameters:
      Name                           Flags
      f                              final

  public static void setIndexFlagIfLesser$(scala.collection.generic.AtomicIndexFlag, int);
    descriptor: (Lscala/collection/generic/AtomicIndexFlag;I)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #57                 // InterfaceMethod setIndexFlagIfLesser:(I)V
         5: return
      LineNumberTable:
        line 140: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/generic/AtomicIndexFlag;
            0       6     1     f   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public default void setIndexFlagIfLesser(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: iconst_1
         1: istore_2
         2: iload_2
         3: ifeq          48
         6: aload_0
         7: invokeinterface #25,  1           // InterfaceMethod scala$collection$generic$AtomicIndexFlag$$intflag:()Ljava/util/concurrent/atomic/AtomicInteger;
        12: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
        15: istore_3
        16: iload_1
        17: iload_3
        18: if_icmplt     26
        21: iconst_0
        22: istore_2
        23: goto          45
        26: aload_0
        27: invokeinterface #25,  1           // InterfaceMethod scala$collection$generic$AtomicIndexFlag$$intflag:()Ljava/util/concurrent/atomic/AtomicInteger;
        32: iload_3
        33: iload_1
        34: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
        37: ifeq          45
        40: iconst_0
        41: istore_2
        42: goto          45
        45: goto          2
        48: return
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ int ]
        frame_type = 18 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 141: 0
        line 142: 2
        line 143: 6
        line 144: 16
        line 145: 26
        line 142: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      29     3   old   I
            2      46     2  loop   Z
            0      49     0  this   Lscala/collection/generic/AtomicIndexFlag;
            0      49     1     f   I
    MethodParameters:
      Name                           Flags
      f                              final

  public static void $init$(scala.collection.generic.AtomicIndexFlag);
    descriptor: (Lscala/collection/generic/AtomicIndexFlag;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: new           #27                 // class java/util/concurrent/atomic/AtomicInteger
         4: dup
         5: iconst_m1
         6: invokespecial #62                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
         9: invokeinterface #64,  2           // InterfaceMethod scala$collection$generic$AtomicIndexFlag$_setter_$scala$collection$generic$AtomicIndexFlag$$intflag_$eq:(Ljava/util/concurrent/atomic/AtomicInteger;)V
        14: return
      LineNumberTable:
        line 129: 0
        line 128: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   Lscala/collection/generic/AtomicIndexFlag;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
SourceFile: "Signalling.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005i2qa\u0002\u0005\u0011\u0002\u0007\u0005q\u0002C\u0003\u0019\u0001\u0011\u0005\u0011\u0004C\u0004\u001e\u0001\t\u0007I\u0011\u0002\u0010\t\r-\u0002\u0001\u0013\"\u0001-\u0011\u0019\u0001\u0004\u0001%C\u0001c!1A\u0007\u0001I\u0005\u0002UBaa\u000e\u0001\u0011\n\u0003A$aD!u_6L7-\u00138eKb4E.Y4\u000b\u0005%Q\u0011aB4f]\u0016\u0014\u0018n\u0019\u0006\u0003\u00171\t!bY8mY\u0016\u001cG/[8o\u0015\u0005i\u0011!B:dC2\f7\u0001A\n\u0004\u0001A!\u0002CA\t\u0013\u001b\u0005a\u0011BA\n\r\u0005\u0019\te.\u001f*fMB\u0011QCF\u0007\u0002\u0011%\u0011q\u0003\u0003\u0002\u000b\'&<g.\u00197mS:<\u0017A\u0002\u0013j]&$H\u0005F\u0001\u001b!\t\t2$\u0003\u0002\u001d\u0019\t!QK\\5u\u0003\u001dIg\u000e\u001e4mC\u001e,\u0012a\b\t\u0003A%j\u0011!\t\u0006\u0003E\r\na!\u0019;p[&\u001c\'B\u0001\u0013&\u0003)\u0019wN\\2veJ,g\u000e\u001e\u0006\u0003M\u001d\nA!\u001e;jY*\t\u0001&\u0001\u0003kCZ\f\u0017B\u0001\u0016\"\u00055\tEo\\7jG&sG/Z4fe\u0006I\u0011N\u001c3fq\u001ac\u0017mZ\u000b\u0002[A\u0011\u0011CL\u0005\u0003_1\u00111!\u00138u\u00031\u0019X\r^%oI\u0016Dh\t\\1h)\tQ\"\u0007C\u00034\t\u0001\u0007Q&A\u0001g\u0003U\u0019X\r^%oI\u0016Dh\t\\1h\u0013\u001a<%/Z1uKJ$\"A\u0007\u001c\t\u000bM*\u0001\u0019A\u0017\u0002)M,G/\u00138eKb4E.Y4JM2+7o]3s)\tQ\u0012\bC\u00034\r\u0001\u0007Q\u0006"
    )
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 00 00 0B 00 3A 00 3B 01 00 13 00 14 00 00 10
   00 11 01 00 0E 00 0F 00 00 0B 00 0C 00 00 23 00
   24 00 00 20 00 21 01 00 2C 00 24 00 00 2B 00 21
   01 00 37 00 24 00 00 36 00 21 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
