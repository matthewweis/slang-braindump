Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/runtime/Tuple2Zipped$.class
  Last modified May 29, 2022; size 8967 bytes
  SHA-256 checksum c7251c50a5d9a9660df75a70cc1d66c66092fe61252889901496e62f2953928d
  Compiled from "Tuple2Zipped.scala"
public final class scala.runtime.Tuple2Zipped$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/runtime/Tuple2Zipped$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 17, attributes: 4
Constant pool:
    #1 = Utf8               scala/runtime/Tuple2Zipped$
    #2 = Class              #1            // scala/runtime/Tuple2Zipped$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Tuple2Zipped.scala
    #6 = Utf8               MODULE$
    #7 = Utf8               Lscala/runtime/Tuple2Zipped$;
    #8 = Utf8               <clinit>
    #9 = Utf8               ()V
   #10 = Utf8               <init>
   #11 = NameAndType        #10:#9        // "<init>":()V
   #12 = Methodref          #2.#11        // scala/runtime/Tuple2Zipped$."<init>":()V
   #13 = NameAndType        #6:#7         // MODULE$:Lscala/runtime/Tuple2Zipped$;
   #14 = Fieldref           #2.#13        // scala/runtime/Tuple2Zipped$.MODULE$:Lscala/runtime/Tuple2Zipped$;
   #15 = Utf8               coll1$extension
   #16 = Utf8               (Lscala/Tuple2;)Lscala/collection/Iterable;
   #17 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)TIt1;
   #18 = Utf8               $this
   #19 = Utf8               scala/Tuple2
   #20 = Class              #19           // scala/Tuple2
   #21 = Utf8               _1
   #22 = Utf8               ()Ljava/lang/Object;
   #23 = NameAndType        #21:#22       // _1:()Ljava/lang/Object;
   #24 = Methodref          #20.#23       // scala/Tuple2._1:()Ljava/lang/Object;
   #25 = Utf8               scala/collection/Iterable
   #26 = Class              #25           // scala/collection/Iterable
   #27 = Utf8               this
   #28 = Utf8               Lscala/Tuple2;
   #29 = Utf8               coll2$extension
   #30 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)TIt2;
   #31 = Utf8               _2
   #32 = NameAndType        #31:#22       // _2:()Ljava/lang/Object;
   #33 = Methodref          #20.#32       // scala/Tuple2._2:()Ljava/lang/Object;
   #34 = Utf8               map$extension
   #35 = Utf8               (Lscala/Tuple2;Lscala/Function2;Lscala/collection/BuildFrom;)Ljava/lang/Object;
   #36 = Utf8               <B:Ljava/lang/Object;To:Ljava/lang/Object;El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;TB;>;Lscala/collection/BuildFrom<TIt1;TB;TTo;>;)TTo;
   #37 = Utf8               f
   #38 = Utf8               bf
   #39 = Utf8               scala/collection/BuildFrom
   #40 = Class              #39           // scala/collection/BuildFrom
   #41 = Utf8               newBuilder
   #42 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Builder;
   #43 = NameAndType        #41:#42       // newBuilder:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
   #44 = InterfaceMethodref #40.#43       // scala/collection/BuildFrom.newBuilder:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
   #45 = Utf8               scala/collection/mutable/Builder
   #46 = Class              #45           // scala/collection/mutable/Builder
   #47 = Utf8               sizeHint
   #48 = Utf8               (Lscala/collection/IterableOnce;I)V
   #49 = NameAndType        #47:#48       // sizeHint:(Lscala/collection/IterableOnce;I)V
   #50 = InterfaceMethodref #46.#49       // scala/collection/mutable/Builder.sizeHint:(Lscala/collection/IterableOnce;I)V
   #51 = Utf8               iterator
   #52 = Utf8               ()Lscala/collection/Iterator;
   #53 = NameAndType        #51:#52       // iterator:()Lscala/collection/Iterator;
   #54 = InterfaceMethodref #26.#53       // scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
   #55 = Utf8               scala/collection/Iterator
   #56 = Class              #55           // scala/collection/Iterator
   #57 = Utf8               hasNext
   #58 = Utf8               ()Z
   #59 = NameAndType        #57:#58       // hasNext:()Z
   #60 = InterfaceMethodref #56.#59       // scala/collection/Iterator.hasNext:()Z
   #61 = Utf8               next
   #62 = NameAndType        #61:#22       // next:()Ljava/lang/Object;
   #63 = InterfaceMethodref #56.#62       // scala/collection/Iterator.next:()Ljava/lang/Object;
   #64 = Utf8               scala/Function2
   #65 = Class              #64           // scala/Function2
   #66 = Utf8               apply
   #67 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #68 = NameAndType        #66:#67       // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #69 = InterfaceMethodref #65.#68       // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #70 = Utf8               scala/collection/mutable/Growable
   #71 = Class              #70           // scala/collection/mutable/Growable
   #72 = Utf8               addOne
   #73 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #74 = NameAndType        #72:#73       // addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #75 = InterfaceMethodref #71.#74       // scala/collection/mutable/Growable.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #76 = Utf8               result
   #77 = NameAndType        #76:#22       // result:()Ljava/lang/Object;
   #78 = InterfaceMethodref #46.#77       // scala/collection/mutable/Builder.result:()Ljava/lang/Object;
   #79 = Utf8               b
   #80 = Utf8               Lscala/collection/mutable/Builder;
   #81 = Utf8               elems1
   #82 = Utf8               Lscala/collection/Iterator;
   #83 = Utf8               elems2
   #84 = Utf8               Lscala/Function2;
   #85 = Utf8               Lscala/collection/BuildFrom;
   #86 = Utf8               $plus$eq_elem
   #87 = Utf8               Ljava/lang/Object;
   #88 = Utf8               flatMap$extension
   #89 = Utf8               <B:Ljava/lang/Object;To:Ljava/lang/Object;El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;Lscala/collection/IterableOnce<TB;>;>;Lscala/collection/BuildFrom<TIt1;TB;TTo;>;)TTo;
   #90 = Utf8               scala/collection/IterableOnce
   #91 = Class              #90           // scala/collection/IterableOnce
   #92 = Utf8               addAll
   #93 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
   #94 = NameAndType        #92:#93       // addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
   #95 = InterfaceMethodref #71.#94       // scala/collection/mutable/Growable.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
   #96 = Utf8               $plus$plus$eq_xs
   #97 = Utf8               Lscala/collection/IterableOnce;
   #98 = Utf8               filter$extension
   #99 = Utf8               (Lscala/Tuple2;Lscala/Function2;Lscala/collection/BuildFrom;Lscala/collection/BuildFrom;)Lscala/Tuple2;
  #100 = Utf8               <To1:Ljava/lang/Object;To2:Ljava/lang/Object;El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;Ljava/lang/Object;>;Lscala/collection/BuildFrom<TIt1;TEl1;TTo1;>;Lscala/collection/BuildFrom<TIt2;TEl2;TTo2;>;)Lscala/Tuple2<TTo1;TTo2;>;
  #101 = Utf8               bf1
  #102 = Utf8               bf2
  #103 = Utf8               scala/runtime/BoxesRunTime
  #104 = Class              #103          // scala/runtime/BoxesRunTime
  #105 = Utf8               unboxToBoolean
  #106 = Utf8               (Ljava/lang/Object;)Z
  #107 = NameAndType        #105:#106     // unboxToBoolean:(Ljava/lang/Object;)Z
  #108 = Methodref          #104.#107     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #109 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #110 = NameAndType        #10:#109      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #111 = Methodref          #20.#110      // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #112 = Utf8               el1
  #113 = Utf8               el2
  #114 = Utf8               b1
  #115 = Utf8               b2
  #116 = Utf8               exists$extension
  #117 = Utf8               (Lscala/Tuple2;Lscala/Function2;)Z
  #118 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;Ljava/lang/Object;>;)Z
  #119 = Utf8               p
  #120 = Utf8               forall$extension
  #121 = Utf8               exists$extension_elems1
  #122 = Utf8               exists$extension_elems2
  #123 = Utf8               iterator$extension
  #124 = Utf8               (Lscala/Tuple2;)Lscala/collection/Iterator;
  #125 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)Lscala/collection/Iterator<Lscala/Tuple2<TEl1;TEl2;>;>;
  #126 = Utf8               zip
  #127 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/Iterator;
  #128 = NameAndType        #126:#127     // zip:(Lscala/collection/IterableOnce;)Lscala/collection/Iterator;
  #129 = InterfaceMethodref #56.#128      // scala/collection/Iterator.zip:(Lscala/collection/IterableOnce;)Lscala/collection/Iterator;
  #130 = Utf8               isEmpty$extension
  #131 = Utf8               (Lscala/Tuple2;)Z
  #132 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)Z
  #133 = Utf8               isEmpty
  #134 = NameAndType        #133:#58      // isEmpty:()Z
  #135 = InterfaceMethodref #26.#134      // scala/collection/Iterable.isEmpty:()Z
  #136 = Utf8               foreach$extension
  #137 = Utf8               (Lscala/Tuple2;Lscala/Function2;)V
  #138 = Utf8               <U:Ljava/lang/Object;El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;TU;>;)V
  #139 = Utf8               toString$extension
  #140 = Utf8               (Lscala/Tuple2;)Ljava/lang/String;
  #141 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)Ljava/lang/String;
  #142 = Utf8               java/lang/StringBuilder
  #143 = Class              #142          // java/lang/StringBuilder
  #144 = Integer            11
  #145 = Utf8               (I)V
  #146 = NameAndType        #10:#145      // "<init>":(I)V
  #147 = Methodref          #143.#146     // java/lang/StringBuilder."<init>":(I)V
  #148 = Utf8               (
  #149 = String             #148          // (
  #150 = Utf8               append
  #151 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #152 = NameAndType        #150:#151     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #153 = Methodref          #143.#152     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #154 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #155 = NameAndType        #150:#154     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #156 = Methodref          #143.#155     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #157 = Utf8               ,
  #158 = String             #157          // ,
  #159 = Utf8               ).zipped
  #160 = String             #159          // ).zipped
  #161 = Utf8               toString
  #162 = Utf8               ()Ljava/lang/String;
  #163 = NameAndType        #161:#162     // toString:()Ljava/lang/String;
  #164 = Methodref          #143.#163     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #165 = Utf8               hashCode$extension
  #166 = Utf8               (Lscala/Tuple2;)I
  #167 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)I
  #168 = Utf8               hashCode
  #169 = Utf8               ()I
  #170 = NameAndType        #168:#169     // hashCode:()I
  #171 = Methodref          #20.#170      // scala/Tuple2.hashCode:()I
  #172 = Utf8               equals$extension
  #173 = Utf8               (Lscala/Tuple2;Ljava/lang/Object;)Z
  #174 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Ljava/lang/Object;)Z
  #175 = Utf8               x$1
  #176 = Utf8               scala/runtime/Tuple2Zipped
  #177 = Class              #176          // scala/runtime/Tuple2Zipped
  #178 = Utf8               scala$runtime$Tuple2Zipped$$colls
  #179 = Utf8               ()Lscala/Tuple2;
  #180 = NameAndType        #178:#179     // scala$runtime$Tuple2Zipped$$colls:()Lscala/Tuple2;
  #181 = Methodref          #177.#180     // scala/runtime/Tuple2Zipped.scala$runtime$Tuple2Zipped$$colls:()Lscala/Tuple2;
  #182 = Utf8               equals
  #183 = NameAndType        #182:#106     // equals:(Ljava/lang/Object;)Z
  #184 = Methodref          #4.#183       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #185 = Utf8               $anonfun$forall$1
  #186 = Utf8               (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
  #187 = Utf8               p$1
  #188 = Utf8               x
  #189 = Utf8               y
  #190 = Methodref          #4.#11        // java/lang/Object."<init>":()V
  #191 = Utf8               $anonfun$forall$1$adapted
  #192 = Utf8               (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #193 = NameAndType        #185:#186     // $anonfun$forall$1:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
  #194 = Methodref          #2.#193       // scala/runtime/Tuple2Zipped$.$anonfun$forall$1:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
  #195 = Utf8               boxToBoolean
  #196 = Utf8               (Z)Ljava/lang/Boolean;
  #197 = NameAndType        #195:#196     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #198 = Methodref          #104.#197     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #199 = Utf8               Code
  #200 = Utf8               LineNumberTable
  #201 = Utf8               LocalVariableTable
  #202 = Utf8               Signature
  #203 = Utf8               MethodParameters
  #204 = Utf8               StackMapTable
  #205 = Utf8               SourceFile
  #206 = Utf8               Deprecated
  #207 = Utf8               ScalaInlineInfo
  #208 = Utf8               Scala
{
  public static final scala.runtime.Tuple2Zipped$ MODULE$;
    descriptor: Lscala/runtime/Tuple2Zipped$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/runtime/Tuple2Zipped$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Lscala/runtime/Tuple2Zipped$;
        10: return
      LineNumberTable:
        line 121: 0

  public final <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> It1 coll1$extension(scala.Tuple2<It1, It2>);
    descriptor: (Lscala/Tuple2;)Lscala/collection/Iterable;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #26                 // class scala/collection/Iterable
         7: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/runtime/Tuple2Zipped$;
            0       8     1 $this   Lscala/Tuple2;
    Signature: #17                          // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)TIt1;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> It2 coll2$extension(scala.Tuple2<It1, It2>);
    descriptor: (Lscala/Tuple2;)Lscala/collection/Iterable;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: checkcast     #26                 // class scala/collection/Iterable
         7: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/runtime/Tuple2Zipped$;
            0       8     1 $this   Lscala/Tuple2;
    Signature: #30                          // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)TIt2;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <B extends java.lang.Object, To extends java.lang.Object, El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> To map$extension(scala.Tuple2<It1, It2>, scala.Function2<El1, El2, B>, scala.collection.BuildFrom<It1, B, To>);
    descriptor: (Lscala/Tuple2;Lscala/Function2;Lscala/collection/BuildFrom;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=8, args_size=4
         0: aload_3
         1: aload_1
         2: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         5: checkcast     #26                 // class scala/collection/Iterable
         8: invokeinterface #44,  2           // InterfaceMethod scala/collection/BuildFrom.newBuilder:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
        13: astore        4
        15: aload         4
        17: aload_1
        18: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        21: checkcast     #26                 // class scala/collection/Iterable
        24: iconst_0
        25: invokeinterface #50,  3           // InterfaceMethod scala/collection/mutable/Builder.sizeHint:(Lscala/collection/IterableOnce;I)V
        30: aload_1
        31: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        34: checkcast     #26                 // class scala/collection/Iterable
        37: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        42: astore        5
        44: aload_1
        45: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        48: checkcast     #26                 // class scala/collection/Iterable
        51: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        56: astore        6
        58: aload         5
        60: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        65: ifeq          116
        68: aload         6
        70: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        75: ifeq          116
        78: aload_2
        79: aload         5
        81: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        86: aload         6
        88: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        93: invokeinterface #69,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        98: astore        7
       100: aload         4
       102: aload         7
       104: invokeinterface #75,  2           // InterfaceMethod scala/collection/mutable/Growable.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       109: pop
       110: aconst_null
       111: astore        7
       113: goto          58
       116: aload         4
       118: invokeinterface #78,  1           // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
       123: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 58
          locals = [ class scala/collection/mutable/Builder, class scala/collection/Iterator, class scala/collection/Iterator ]
        frame_type = 57 /* same */
      LineNumberTable:
        line 49: 0
        line 45: 1
        line 49: 8
        line 50: 15
        line 45: 17
        line 50: 24
        line 45: 30
        line 51: 37
        line 46: 44
        line 52: 51
        line 54: 58
        line 55: 78
        line 58: 116
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15     108     4     b   Lscala/collection/mutable/Builder;
           44      79     5 elems1   Lscala/collection/Iterator;
           58      65     6 elems2   Lscala/collection/Iterator;
            0     124     0  this   Lscala/runtime/Tuple2Zipped$;
            0     124     1 $this   Lscala/Tuple2;
            0     124     2     f   Lscala/Function2;
            0     124     3    bf   Lscala/collection/BuildFrom;
          100      10     7 $plus$eq_elem   Ljava/lang/Object;
    Signature: #36                          // <B:Ljava/lang/Object;To:Ljava/lang/Object;El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;TB;>;Lscala/collection/BuildFrom<TIt1;TB;TTo;>;)TTo;
    MethodParameters:
      Name                           Flags
      $this                          final
      f                              final
      bf                             final

  public final <B extends java.lang.Object, To extends java.lang.Object, El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> To flatMap$extension(scala.Tuple2<It1, It2>, scala.Function2<El1, El2, scala.collection.IterableOnce<B>>, scala.collection.BuildFrom<It1, B, To>);
    descriptor: (Lscala/Tuple2;Lscala/Function2;Lscala/collection/BuildFrom;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=8, args_size=4
         0: aload_3
         1: aload_1
         2: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         5: checkcast     #26                 // class scala/collection/Iterable
         8: invokeinterface #44,  2           // InterfaceMethod scala/collection/BuildFrom.newBuilder:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
        13: astore        4
        15: aload_1
        16: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        19: checkcast     #26                 // class scala/collection/Iterable
        22: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        27: astore        5
        29: aload_1
        30: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        33: checkcast     #26                 // class scala/collection/Iterable
        36: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        41: astore        6
        43: aload         5
        45: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        50: ifeq          111
        53: aload         6
        55: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        60: ifeq          111
        63: aload         4
        65: aload_2
        66: aload         5
        68: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        73: aload         6
        75: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        80: invokeinterface #69,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        85: checkcast     #91                 // class scala/collection/IterableOnce
        88: astore        7
        90: ifnonnull     95
        93: aconst_null
        94: athrow
        95: aload         4
        97: aload         7
        99: invokeinterface #95,  2           // InterfaceMethod scala/collection/mutable/Growable.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
       104: pop
       105: aconst_null
       106: astore        7
       108: goto          43
       111: aload         4
       113: invokeinterface #78,  1           // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
       118: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 43
          locals = [ class scala/collection/mutable/Builder, class scala/collection/Iterator, class scala/collection/Iterator ]
        frame_type = 252 /* append */
          offset_delta = 51
          locals = [ class scala/collection/IterableOnce ]
        frame_type = 250 /* chop */
          offset_delta = 15
      LineNumberTable:
        line 62: 0
        line 45: 1
        line 62: 8
        line 45: 15
        line 63: 22
        line 46: 29
        line 64: 36
        line 66: 43
        line 67: 63
        line 70: 111
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15     103     4     b   Lscala/collection/mutable/Builder;
           29      89     5 elems1   Lscala/collection/Iterator;
           43      75     6 elems2   Lscala/collection/Iterator;
            0     119     0  this   Lscala/runtime/Tuple2Zipped$;
            0     119     1 $this   Lscala/Tuple2;
            0     119     2     f   Lscala/Function2;
            0     119     3    bf   Lscala/collection/BuildFrom;
           95      10     7 $plus$plus$eq_xs   Lscala/collection/IterableOnce;
    Signature: #89                          // <B:Ljava/lang/Object;To:Ljava/lang/Object;El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;Lscala/collection/IterableOnce<TB;>;>;Lscala/collection/BuildFrom<TIt1;TB;TTo;>;)TTo;
    MethodParameters:
      Name                           Flags
      $this                          final
      f                              final
      bf                             final

  public final <To1 extends java.lang.Object, To2 extends java.lang.Object, El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> scala.Tuple2<To1, To2> filter$extension(scala.Tuple2<It1, It2>, scala.Function2<El1, El2, java.lang.Object>, scala.collection.BuildFrom<It1, El1, To1>, scala.collection.BuildFrom<It2, El2, To2>);
    descriptor: (Lscala/Tuple2;Lscala/Function2;Lscala/collection/BuildFrom;Lscala/collection/BuildFrom;)Lscala/Tuple2;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=11, args_size=5
         0: aload_3
         1: aload_1
         2: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         5: checkcast     #26                 // class scala/collection/Iterable
         8: invokeinterface #44,  2           // InterfaceMethod scala/collection/BuildFrom.newBuilder:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
        13: astore        5
        15: aload         4
        17: aload_1
        18: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        21: checkcast     #26                 // class scala/collection/Iterable
        24: invokeinterface #44,  2           // InterfaceMethod scala/collection/BuildFrom.newBuilder:(Ljava/lang/Object;)Lscala/collection/mutable/Builder;
        29: astore        6
        31: aload_1
        32: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        35: checkcast     #26                 // class scala/collection/Iterable
        38: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        43: astore        7
        45: aload_1
        46: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        49: checkcast     #26                 // class scala/collection/Iterable
        52: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        57: astore        8
        59: aload         7
        61: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        66: ifeq          150
        69: aload         8
        71: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        76: ifeq          150
        79: aload         7
        81: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        86: astore        9
        88: aload         8
        90: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        95: astore        10
        97: aload_2
        98: aload         9
       100: aload         10
       102: invokeinterface #69,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       107: invokestatic  #108                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       110: ifeq          59
       113: aload         5
       115: ifnonnull     120
       118: aconst_null
       119: athrow
       120: aload         5
       122: aload         9
       124: invokeinterface #75,  2           // InterfaceMethod scala/collection/mutable/Growable.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       129: pop
       130: aload         6
       132: ifnonnull     137
       135: aconst_null
       136: athrow
       137: aload         6
       139: aload         10
       141: invokeinterface #75,  2           // InterfaceMethod scala/collection/mutable/Growable.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       146: pop
       147: goto          59
       150: new           #20                 // class scala/Tuple2
       153: dup
       154: aload         5
       156: invokeinterface #78,  1           // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
       161: aload         6
       163: invokeinterface #78,  1           // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
       168: invokespecial #111                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       171: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 59
          locals = [ class scala/runtime/Tuple2Zipped$, class scala/Tuple2, class scala/Function2, class scala/collection/BuildFrom, class scala/collection/BuildFrom, class scala/collection/mutable/Builder, class scala/collection/mutable/Builder, class scala/collection/Iterator, class scala/collection/Iterator ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 60
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 16 /* same */
        frame_type = 249 /* chop */
          offset_delta = 12
      LineNumberTable:
        line 74: 0
        line 45: 1
        line 74: 8
        line 75: 15
        line 46: 17
        line 75: 24
        line 45: 31
        line 76: 38
        line 46: 45
        line 77: 52
        line 79: 59
        line 80: 79
        line 81: 88
        line 82: 97
        line 83: 113
        line 84: 130
        line 88: 150
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           88      62     9   el1   Ljava/lang/Object;
           97      53    10   el2   Ljava/lang/Object;
           15     156     5    b1   Lscala/collection/mutable/Builder;
           31     140     6    b2   Lscala/collection/mutable/Builder;
           45     126     7 elems1   Lscala/collection/Iterator;
           59     112     8 elems2   Lscala/collection/Iterator;
            0     172     0  this   Lscala/runtime/Tuple2Zipped$;
            0     172     1 $this   Lscala/Tuple2;
            0     172     2     f   Lscala/Function2;
            0     172     3   bf1   Lscala/collection/BuildFrom;
            0     172     4   bf2   Lscala/collection/BuildFrom;
    Signature: #100                         // <To1:Ljava/lang/Object;To2:Ljava/lang/Object;El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;Ljava/lang/Object;>;Lscala/collection/BuildFrom<TIt1;TEl1;TTo1;>;Lscala/collection/BuildFrom<TIt2;TEl2;TTo2;>;)Lscala/Tuple2<TTo1;TTo2;>;
    MethodParameters:
      Name                           Flags
      $this                          final
      f                              final
      bf1                            final
      bf2                            final

  public final <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> boolean exists$extension(scala.Tuple2<It1, It2>, scala.Function2<El1, El2, java.lang.Object>);
    descriptor: (Lscala/Tuple2;Lscala/Function2;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #26                 // class scala/collection/Iterable
         7: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        12: astore_3
        13: aload_1
        14: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        17: checkcast     #26                 // class scala/collection/Iterable
        20: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        25: astore        4
        27: aload_3
        28: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        33: ifeq          73
        36: aload         4
        38: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        43: ifeq          73
        46: aload_2
        47: aload_3
        48: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        53: aload         4
        55: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        60: invokeinterface #69,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        65: invokestatic  #108                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        68: ifeq          27
        71: iconst_1
        72: ireturn
        73: iconst_0
        74: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [ class scala/collection/Iterator, class scala/collection/Iterator ]
        frame_type = 45 /* same */
      LineNumberTable:
        line 45: 0
        line 92: 7
        line 46: 13
        line 93: 20
        line 95: 27
        line 96: 46
        line 97: 71
        line 100: 73
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      61     3 elems1   Lscala/collection/Iterator;
           27      47     4 elems2   Lscala/collection/Iterator;
            0      75     0  this   Lscala/runtime/Tuple2Zipped$;
            0      75     1 $this   Lscala/Tuple2;
            0      75     2     p   Lscala/Function2;
    Signature: #118                         // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;Ljava/lang/Object;>;)Z
    MethodParameters:
      Name                           Flags
      $this                          final
      p                              final

  public final <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> boolean forall$extension(scala.Tuple2<It1, It2>, scala.Function2<El1, El2, java.lang.Object>);
    descriptor: (Lscala/Tuple2;Lscala/Function2;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=8, args_size=3
         0: aload_1
         1: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #26                 // class scala/collection/Iterable
         7: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        12: astore_3
        13: aload_1
        14: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        17: checkcast     #26                 // class scala/collection/Iterable
        20: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        25: astore        4
        27: aload_3
        28: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        33: ifeq          93
        36: aload         4
        38: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        43: ifeq          93
        46: aload_3
        47: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        52: aload         4
        54: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        59: astore        7
        61: astore        6
        63: aload_2
        64: aload         6
        66: aload         7
        68: invokeinterface #69,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        73: invokestatic  #108                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        76: ifne          83
        79: iconst_1
        80: goto          84
        83: iconst_0
        84: ifeq          27
        87: iconst_1
        88: istore        5
        90: goto          96
        93: iconst_0
        94: istore        5
        96: iload         5
        98: aconst_null
        99: astore_3
       100: aconst_null
       101: astore        4
       103: ifne          108
       106: iconst_1
       107: ireturn
       108: iconst_0
       109: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [ class scala/collection/Iterator, class scala/collection/Iterator ]
        frame_type = 254 /* append */
          offset_delta = 55
          locals = [ top, class java/lang/Object, class java/lang/Object ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 8
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/runtime/Tuple2Zipped$, class scala/Tuple2, class scala/Function2, null, null, int ]
          stack = []
      LineNumberTable:
        line 45: 0
        line 92: 7
        line 46: 13
        line 93: 20
        line 95: 27
        line 96: 46
        line 104: 63
        line 96: 84
        line 97: 87
        line 100: 93
        line 104: 96
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     110     0  this   Lscala/runtime/Tuple2Zipped$;
            0     110     1 $this   Lscala/Tuple2;
            0     110     2     p   Lscala/Function2;
           13      81     3 exists$extension_elems1   Lscala/collection/Iterator;
           27      67     4 exists$extension_elems2   Lscala/collection/Iterator;
    Signature: #118                         // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;Ljava/lang/Object;>;)Z
    MethodParameters:
      Name                           Flags
      $this                          final
      p                              final

  public final <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> scala.collection.Iterator<scala.Tuple2<El1, El2>> iterator$extension(scala.Tuple2<It1, It2>);
    descriptor: (Lscala/Tuple2;)Lscala/collection/Iterator;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #26                 // class scala/collection/Iterable
         7: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        12: aload_1
        13: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        16: checkcast     #26                 // class scala/collection/Iterable
        19: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        24: invokeinterface #129,  2          // InterfaceMethod scala/collection/Iterator.zip:(Lscala/collection/IterableOnce;)Lscala/collection/Iterator;
        29: areturn
      LineNumberTable:
        line 45: 0
        line 106: 7
        line 46: 12
        line 106: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/runtime/Tuple2Zipped$;
            0      30     1 $this   Lscala/Tuple2;
    Signature: #125                         // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)Lscala/collection/Iterator<Lscala/Tuple2<TEl1;TEl2;>;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> boolean isEmpty$extension(scala.Tuple2<It1, It2>);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #26                 // class scala/collection/Iterable
         7: invokeinterface #135,  1          // InterfaceMethod scala/collection/Iterable.isEmpty:()Z
        12: ifne          30
        15: aload_1
        16: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #26                 // class scala/collection/Iterable
        22: invokeinterface #135,  1          // InterfaceMethod scala/collection/Iterable.isEmpty:()Z
        27: ifeq          32
        30: iconst_1
        31: ireturn
        32: iconst_0
        33: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 30 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 45: 0
        line 107: 7
        line 46: 15
        line 107: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lscala/runtime/Tuple2Zipped$;
            0      34     1 $this   Lscala/Tuple2;
    Signature: #132                         // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)Z
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <U extends java.lang.Object, El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> void foreach$extension(scala.Tuple2<It1, It2>, scala.Function2<El1, El2, U>);
    descriptor: (Lscala/Tuple2;Lscala/Function2;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #26                 // class scala/collection/Iterable
         7: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        12: astore_3
        13: aload_1
        14: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        17: checkcast     #26                 // class scala/collection/Iterable
        20: invokeinterface #54,  1           // InterfaceMethod scala/collection/Iterable.iterator:()Lscala/collection/Iterator;
        25: astore        4
        27: aload_3
        28: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        33: ifeq          69
        36: aload         4
        38: invokeinterface #60,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        43: ifeq          69
        46: aload_2
        47: aload_3
        48: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        53: aload         4
        55: invokeinterface #63,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        60: invokeinterface #69,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        65: pop
        66: goto          27
        69: return
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [ class scala/collection/Iterator, class scala/collection/Iterator ]
        frame_type = 41 /* same */
      LineNumberTable:
        line 45: 0
        line 109: 7
        line 46: 13
        line 110: 20
        line 112: 27
        line 113: 46
        line 112: 69
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      56     3 elems1   Lscala/collection/Iterator;
           27      42     4 elems2   Lscala/collection/Iterator;
            0      70     0  this   Lscala/runtime/Tuple2Zipped$;
            0      70     1 $this   Lscala/Tuple2;
            0      70     2     f   Lscala/Function2;
    Signature: #138                         // <U:Ljava/lang/Object;El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Lscala/Function2<TEl1;TEl2;TU;>;)V
    MethodParameters:
      Name                           Flags
      $this                          final
      f                              final

  public final <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> java.lang.String toString$extension(scala.Tuple2<It1, It2>);
    descriptor: (Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: new           #143                // class java/lang/StringBuilder
         3: dup
         4: ldc           #144                // int 11
         6: invokespecial #147                // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #149                // String (
        11: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_1
        15: invokevirtual #24                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        18: checkcast     #26                 // class scala/collection/Iterable
        21: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        24: ldc           #158                // String ,
        26: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: aload_1
        30: invokevirtual #33                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        33: checkcast     #26                 // class scala/collection/Iterable
        36: invokevirtual #156                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        39: ldc           #160                // String ).zipped
        41: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        44: invokevirtual #164                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        47: areturn
      LineNumberTable:
        line 117: 0
        line 45: 14
        line 117: 21
        line 46: 29
        line 117: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lscala/runtime/Tuple2Zipped$;
            0      48     1 $this   Lscala/Tuple2;
    Signature: #141                         // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> int hashCode$extension(scala.Tuple2<It1, It2>);
    descriptor: (Lscala/Tuple2;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #171                // Method scala/Tuple2.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/Tuple2Zipped$;
            0       5     1 $this   Lscala/Tuple2;
    Signature: #167                         // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;)I
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>> boolean equals$extension(scala.Tuple2<It1, It2>, java.lang.Object);
    descriptor: (Lscala/Tuple2;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=5, args_size=3
         0: aload_2
         1: instanceof    #177                // class scala/runtime/Tuple2Zipped
         4: ifeq          12
         7: iconst_1
         8: istore_3
         9: goto          14
        12: iconst_0
        13: istore_3
        14: iload_3
        15: ifeq          67
        18: aload_2
        19: ifnonnull     26
        22: aconst_null
        23: goto          33
        26: aload_2
        27: checkcast     #177                // class scala/runtime/Tuple2Zipped
        30: invokevirtual #181                // Method scala/runtime/Tuple2Zipped.scala$runtime$Tuple2Zipped$$colls:()Lscala/Tuple2;
        33: astore        4
        35: aload_1
        36: dup
        37: ifnonnull     49
        40: pop
        41: aload         4
        43: ifnull        57
        46: goto          61
        49: aload         4
        51: invokevirtual #184                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        54: ifeq          61
        57: iconst_1
        58: goto          62
        61: iconst_0
        62: ifeq          67
        65: iconst_1
        66: ireturn
        67: iconst_0
        68: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 12 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class scala/runtime/Tuple2Zipped$, class scala/Tuple2, class java/lang/Object, int, class scala/Tuple2 ]
          stack = [ class scala/Tuple2 ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 4
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      69     0  this   Lscala/runtime/Tuple2Zipped$;
            0      69     1 $this   Lscala/Tuple2;
            0      69     2   x$1   Ljava/lang/Object;
    Signature: #174                         // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;>(Lscala/Tuple2<TIt1;TIt2;>;Ljava/lang/Object;)Z
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public static final boolean $anonfun$forall$1(scala.Function2, java.lang.Object, java.lang.Object);
    descriptor: (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokeinterface #69,  3           // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
         8: invokestatic  #108                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        11: ifne          16
        14: iconst_1
        15: ireturn
        16: iconst_0
        17: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0   p$1   Lscala/Function2;
            0      18     1     x   Ljava/lang/Object;
            0      18     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      p$1                            final
      x                              final
      y                              final

  private scala.runtime.Tuple2Zipped$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #190                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/Tuple2Zipped$;

  public static final java.lang.Object $anonfun$forall$1$adapted(scala.Function2, java.lang.Object, java.lang.Object);
    descriptor: (Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #194                // Method $anonfun$forall$1:(Lscala/Function2;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: invokestatic  #198                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   p$1   Lscala/Function2;
            0      10     1     x   Ljava/lang/Object;
            0      10     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      p$1                            final
      x                              final
      y                              final
}
SourceFile: "Tuple2Zipped.scala"
Deprecated: true
  ScalaInlineInfo: length = 0x54 (unknown attribute)
   01 01 00 10 00 B9 00 BA 01 00 BF 00 C0 01 00 0A
   00 09 01 00 0F 00 10 01 00 1D 00 10 01 00 AC 00
   AD 01 00 74 00 75 01 00 62 00 63 01 00 58 00 23
   01 00 78 00 75 01 00 88 00 89 01 00 A5 00 A6 01
   00 82 00 83 01 00 7B 00 7C 01 00 22 00 23 01 00
   8B 00 8C 01
  Scala: length = 0x0 (unknown attribute)

