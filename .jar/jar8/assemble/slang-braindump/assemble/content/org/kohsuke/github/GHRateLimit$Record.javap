Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/kohsuke/github/GHRateLimit$Record.class
  Last modified May 29, 2022; size 4946 bytes
  SHA-256 checksum 8fe7178f851ce900b02a89ba327fd99040bcaba1ae6f8384c3d6ba55a6f84821
  Compiled from "GHRateLimit.java"
public class org.kohsuke.github.GHRateLimit$Record
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #44                         // org/kohsuke/github/GHRateLimit$Record
  super_class: #46                        // java/lang/Object
  interfaces: 0, fields: 5, methods: 12, attributes: 2
Constant pool:
    #1 = Methodref          #44.#114      // org/kohsuke/github/GHRateLimit$Record."<init>":(IIJLorg/kohsuke/github/connector/GitHubConnectorResponse;)V
    #2 = Methodref          #46.#115      // java/lang/Object."<init>":()V
    #3 = Methodref          #116.#117     // java/lang/System.currentTimeMillis:()J
    #4 = Long               1000l
    #6 = Fieldref           #44.#118      // org/kohsuke/github/GHRateLimit$Record.createdAtEpochSeconds:J
    #7 = Fieldref           #44.#119      // org/kohsuke/github/GHRateLimit$Record.limit:I
    #8 = Fieldref           #44.#120      // org/kohsuke/github/GHRateLimit$Record.remaining:I
    #9 = Fieldref           #44.#121      // org/kohsuke/github/GHRateLimit$Record.resetEpochSeconds:J
   #10 = String             #122          // Date
   #11 = Methodref          #81.#123      // org/kohsuke/github/connector/GitHubConnectorResponse.header:(Ljava/lang/String;)Ljava/lang/String;
   #12 = Methodref          #44.#124      // org/kohsuke/github/GHRateLimit$Record.calculateResetDate:(Ljava/lang/String;)Ljava/util/Date;
   #13 = Fieldref           #44.#125      // org/kohsuke/github/GHRateLimit$Record.resetDate:Ljava/util/Date;
   #14 = Methodref          #44.#126      // org/kohsuke/github/GHRateLimit$Record.getResetEpochSeconds:()J
   #15 = Methodref          #44.#127      // org/kohsuke/github/GHRateLimit$Record.getRemaining:()I
   #16 = Class              #129          // org/kohsuke/github/GHRateLimit$UnknownLimitRecord
   #17 = Methodref          #44.#131      // org/kohsuke/github/GHRateLimit$Record.isExpired:()Z
   #18 = Methodref          #132.#133     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
   #19 = Fieldref           #134.#135     // java/time/format/DateTimeFormatter.RFC_1123_DATE_TIME:Ljava/time/format/DateTimeFormatter;
   #20 = Methodref          #136.#137     // java/time/ZonedDateTime.parse:(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;
   #21 = Methodref          #136.#138     // java/time/ZonedDateTime.toEpochSecond:()J
   #22 = Class              #139          // java/time/format/DateTimeParseException
   #23 = Methodref          #128.#140     // org/kohsuke/github/GHRateLimit.access$100:()Ljava/util/logging/Logger;
   #24 = Fieldref           #141.#142     // java/util/logging/Level.FINEST:Ljava/util/logging/Level;
   #25 = Methodref          #143.#144     // java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
   #26 = Class              #145          // java/lang/StringBuilder
   #27 = Methodref          #26.#115      // java/lang/StringBuilder."<init>":()V
   #28 = String             #146          // Malformed Date header value
   #29 = Methodref          #26.#147      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #30 = Methodref          #26.#148      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #31 = Methodref          #143.#149     // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
   #32 = Class              #150          // java/util/Date
   #33 = Methodref          #32.#151      // java/util/Date."<init>":(J)V
   #34 = Methodref          #44.#152      // org/kohsuke/github/GHRateLimit$Record.getResetDate:()Ljava/util/Date;
   #35 = Methodref          #32.#153      // java/util/Date.getTime:()J
   #36 = String             #154          // {remaining=
   #37 = Methodref          #26.#155      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #38 = String             #156          // , limit=
   #39 = Methodref          #44.#157      // org/kohsuke/github/GHRateLimit$Record.getLimit:()I
   #40 = String             #158          // , resetDate=
   #41 = Methodref          #26.#159      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #42 = Methodref          #26.#160      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #43 = Methodref          #46.#161      // java/lang/Object.getClass:()Ljava/lang/Class;
   #44 = Class              #162          // org/kohsuke/github/GHRateLimit$Record
   #45 = Methodref          #32.#163      // java/util/Date.equals:(Ljava/lang/Object;)Z
   #46 = Class              #164          // java/lang/Object
   #47 = Methodref          #165.#166     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #48 = Methodref          #167.#168     // java/lang/Long.valueOf:(J)Ljava/lang/Long;
   #49 = Methodref          #169.#170     // java/util/Objects.hash:([Ljava/lang/Object;)I
   #50 = Utf8               remaining
   #51 = Utf8               I
   #52 = Utf8               limit
   #53 = Utf8               resetEpochSeconds
   #54 = Utf8               J
   #55 = Utf8               createdAtEpochSeconds
   #56 = Utf8               resetDate
   #57 = Utf8               Ljava/util/Date;
   #58 = Utf8               RuntimeVisibleAnnotations
   #59 = Utf8               Ljavax/annotation/Nonnull;
   #60 = Utf8               <init>
   #61 = Utf8               (IIJ)V
   #62 = Utf8               Code
   #63 = Utf8               LineNumberTable
   #64 = Utf8               LocalVariableTable
   #65 = Utf8               this
   #66 = Utf8               Record
   #67 = Utf8               InnerClasses
   #68 = Utf8               Lorg/kohsuke/github/GHRateLimit$Record;
   #69 = Utf8               RuntimeVisibleParameterAnnotations
   #70 = Utf8               Lcom/fasterxml/jackson/annotation/JsonProperty;
   #71 = Utf8               value
   #72 = Utf8               required
   #73 = Integer            1
   #74 = Utf8               reset
   #75 = Utf8               (IIJLorg/kohsuke/github/connector/GitHubConnectorResponse;)V
   #76 = Utf8               connectorResponse
   #77 = Utf8               Lorg/kohsuke/github/connector/GitHubConnectorResponse;
   #78 = Utf8               updatedAt
   #79 = Utf8               Ljava/lang/String;
   #80 = Utf8               StackMapTable
   #81 = Class              #171          // org/kohsuke/github/connector/GitHubConnectorResponse
   #82 = Class              #172          // java/lang/String
   #83 = Utf8               Lcom/fasterxml/jackson/annotation/JsonCreator;
   #84 = Utf8               Lcom/fasterxml/jackson/annotation/JacksonInject;
   #85 = Utf8               Ljavax/annotation/CheckForNull;
   #86 = Utf8               currentOrUpdated
   #87 = Utf8               (Lorg/kohsuke/github/GHRateLimit$Record;)Lorg/kohsuke/github/GHRateLimit$Record;
   #88 = Utf8               other
   #89 = Utf8               calculateResetDate
   #90 = Utf8               (Ljava/lang/String;)Ljava/util/Date;
   #91 = Utf8               e
   #92 = Utf8               Ljava/time/format/DateTimeParseException;
   #93 = Utf8               updatedAtEpochSeconds
   #94 = Utf8               calculatedSecondsUntilReset
   #95 = Utf8               getRemaining
   #96 = Utf8               ()I
   #97 = Utf8               getLimit
   #98 = Utf8               getResetEpochSeconds
   #99 = Utf8               ()J
  #100 = Utf8               isExpired
  #101 = Utf8               ()Z
  #102 = Utf8               getResetDate
  #103 = Utf8               ()Ljava/util/Date;
  #104 = Utf8               toString
  #105 = Utf8               ()Ljava/lang/String;
  #106 = Utf8               equals
  #107 = Utf8               (Ljava/lang/Object;)Z
  #108 = Utf8               o
  #109 = Utf8               Ljava/lang/Object;
  #110 = Utf8               record
  #111 = Utf8               hashCode
  #112 = Utf8               SourceFile
  #113 = Utf8               GHRateLimit.java
  #114 = NameAndType        #60:#75       // "<init>":(IIJLorg/kohsuke/github/connector/GitHubConnectorResponse;)V
  #115 = NameAndType        #60:#173      // "<init>":()V
  #116 = Class              #174          // java/lang/System
  #117 = NameAndType        #175:#99      // currentTimeMillis:()J
  #118 = NameAndType        #55:#54       // createdAtEpochSeconds:J
  #119 = NameAndType        #52:#51       // limit:I
  #120 = NameAndType        #50:#51       // remaining:I
  #121 = NameAndType        #53:#54       // resetEpochSeconds:J
  #122 = Utf8               Date
  #123 = NameAndType        #176:#177     // header:(Ljava/lang/String;)Ljava/lang/String;
  #124 = NameAndType        #89:#90       // calculateResetDate:(Ljava/lang/String;)Ljava/util/Date;
  #125 = NameAndType        #56:#57       // resetDate:Ljava/util/Date;
  #126 = NameAndType        #98:#99       // getResetEpochSeconds:()J
  #127 = NameAndType        #95:#96       // getRemaining:()I
  #128 = Class              #178          // org/kohsuke/github/GHRateLimit
  #129 = Utf8               org/kohsuke/github/GHRateLimit$UnknownLimitRecord
  #130 = Utf8               UnknownLimitRecord
  #131 = NameAndType        #100:#101     // isExpired:()Z
  #132 = Class              #179          // org/apache/commons/lang3/StringUtils
  #133 = NameAndType        #180:#181     // isBlank:(Ljava/lang/CharSequence;)Z
  #134 = Class              #182          // java/time/format/DateTimeFormatter
  #135 = NameAndType        #183:#184     // RFC_1123_DATE_TIME:Ljava/time/format/DateTimeFormatter;
  #136 = Class              #185          // java/time/ZonedDateTime
  #137 = NameAndType        #186:#187     // parse:(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;
  #138 = NameAndType        #188:#99      // toEpochSecond:()J
  #139 = Utf8               java/time/format/DateTimeParseException
  #140 = NameAndType        #189:#190     // access$100:()Ljava/util/logging/Logger;
  #141 = Class              #191          // java/util/logging/Level
  #142 = NameAndType        #192:#193     // FINEST:Ljava/util/logging/Level;
  #143 = Class              #194          // java/util/logging/Logger
  #144 = NameAndType        #195:#196     // isLoggable:(Ljava/util/logging/Level;)Z
  #145 = Utf8               java/lang/StringBuilder
  #146 = Utf8               Malformed Date header value
  #147 = NameAndType        #197:#198     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #148 = NameAndType        #104:#105     // toString:()Ljava/lang/String;
  #149 = NameAndType        #199:#200     // log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
  #150 = Utf8               java/util/Date
  #151 = NameAndType        #60:#201      // "<init>":(J)V
  #152 = NameAndType        #102:#103     // getResetDate:()Ljava/util/Date;
  #153 = NameAndType        #202:#99      // getTime:()J
  #154 = Utf8               {remaining=
  #155 = NameAndType        #197:#203     // append:(I)Ljava/lang/StringBuilder;
  #156 = Utf8               , limit=
  #157 = NameAndType        #97:#96       // getLimit:()I
  #158 = Utf8               , resetDate=
  #159 = NameAndType        #197:#204     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #160 = NameAndType        #197:#205     // append:(C)Ljava/lang/StringBuilder;
  #161 = NameAndType        #206:#207     // getClass:()Ljava/lang/Class;
  #162 = Utf8               org/kohsuke/github/GHRateLimit$Record
  #163 = NameAndType        #106:#107     // equals:(Ljava/lang/Object;)Z
  #164 = Utf8               java/lang/Object
  #165 = Class              #208          // java/lang/Integer
  #166 = NameAndType        #209:#210     // valueOf:(I)Ljava/lang/Integer;
  #167 = Class              #211          // java/lang/Long
  #168 = NameAndType        #209:#212     // valueOf:(J)Ljava/lang/Long;
  #169 = Class              #213          // java/util/Objects
  #170 = NameAndType        #214:#215     // hash:([Ljava/lang/Object;)I
  #171 = Utf8               org/kohsuke/github/connector/GitHubConnectorResponse
  #172 = Utf8               java/lang/String
  #173 = Utf8               ()V
  #174 = Utf8               java/lang/System
  #175 = Utf8               currentTimeMillis
  #176 = Utf8               header
  #177 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #178 = Utf8               org/kohsuke/github/GHRateLimit
  #179 = Utf8               org/apache/commons/lang3/StringUtils
  #180 = Utf8               isBlank
  #181 = Utf8               (Ljava/lang/CharSequence;)Z
  #182 = Utf8               java/time/format/DateTimeFormatter
  #183 = Utf8               RFC_1123_DATE_TIME
  #184 = Utf8               Ljava/time/format/DateTimeFormatter;
  #185 = Utf8               java/time/ZonedDateTime
  #186 = Utf8               parse
  #187 = Utf8               (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;
  #188 = Utf8               toEpochSecond
  #189 = Utf8               access$100
  #190 = Utf8               ()Ljava/util/logging/Logger;
  #191 = Utf8               java/util/logging/Level
  #192 = Utf8               FINEST
  #193 = Utf8               Ljava/util/logging/Level;
  #194 = Utf8               java/util/logging/Logger
  #195 = Utf8               isLoggable
  #196 = Utf8               (Ljava/util/logging/Level;)Z
  #197 = Utf8               append
  #198 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #199 = Utf8               log
  #200 = Utf8               (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
  #201 = Utf8               (J)V
  #202 = Utf8               getTime
  #203 = Utf8               (I)Ljava/lang/StringBuilder;
  #204 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #205 = Utf8               (C)Ljava/lang/StringBuilder;
  #206 = Utf8               getClass
  #207 = Utf8               ()Ljava/lang/Class;
  #208 = Utf8               java/lang/Integer
  #209 = Utf8               valueOf
  #210 = Utf8               (I)Ljava/lang/Integer;
  #211 = Utf8               java/lang/Long
  #212 = Utf8               (J)Ljava/lang/Long;
  #213 = Utf8               java/util/Objects
  #214 = Utf8               hash
  #215 = Utf8               ([Ljava/lang/Object;)I
{
  private final int remaining;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int limit;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final long resetEpochSeconds;
    descriptor: J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final long createdAtEpochSeconds;
    descriptor: J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.util.Date resetDate;
    descriptor: Ljava/util/Date;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    RuntimeVisibleAnnotations:
      0: #59()
        javax.annotation.Nonnull

  public org.kohsuke.github.GHRateLimit$Record(int, int, long);
    descriptor: (IIJ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=4
         0: aload_0
         1: iload_1
         2: iload_2
         3: lload_3
         4: aconst_null
         5: invokespecial #1                  // Method "<init>":(IIJLorg/kohsuke/github/connector/GitHubConnectorResponse;)V
         8: return
      LineNumberTable:
        line 429: 0
        line 430: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/kohsuke/github/GHRateLimit$Record;
            0       9     1 limit   I
            0       9     2 remaining   I
            0       9     3 resetEpochSeconds   J
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #70(#71=s#52,#72=Z#73)
          com.fasterxml.jackson.annotation.JsonProperty(
            value="limit"
            required=true
          )
      parameter 1:
        0: #70(#71=s#50,#72=Z#73)
          com.fasterxml.jackson.annotation.JsonProperty(
            value="remaining"
            required=true
          )
      parameter 2:
        0: #70(#71=s#74,#72=Z#73)
          com.fasterxml.jackson.annotation.JsonProperty(
            value="reset"
            required=true
          )

  org.kohsuke.github.GHRateLimit$Record(int, int, long, org.kohsuke.github.connector.GitHubConnectorResponse);
    descriptor: (IIJLorg/kohsuke/github/connector/GitHubConnectorResponse;)V
    flags: (0x0000)
    Code:
      stack=5, locals=7, args_size=5
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
         8: ldc2_w        #4                  // long 1000l
        11: ldiv
        12: putfield      #6                  // Field createdAtEpochSeconds:J
        15: aload_0
        16: iload_1
        17: putfield      #7                  // Field limit:I
        20: aload_0
        21: iload_2
        22: putfield      #8                  // Field remaining:I
        25: aload_0
        26: lload_3
        27: putfield      #9                  // Field resetEpochSeconds:J
        30: aconst_null
        31: astore        6
        33: aload         5
        35: ifnull        47
        38: aload         5
        40: ldc           #10                 // String Date
        42: invokevirtual #11                 // Method org/kohsuke/github/connector/GitHubConnectorResponse.header:(Ljava/lang/String;)Ljava/lang/String;
        45: astore        6
        47: aload_0
        48: aload_0
        49: aload         6
        51: invokespecial #12                 // Method calculateResetDate:(Ljava/lang/String;)Ljava/util/Date;
        54: putfield      #13                 // Field resetDate:Ljava/util/Date;
        57: return
      LineNumberTable:
        line 448: 0
        line 404: 4
        line 449: 15
        line 450: 20
        line 451: 25
        line 452: 30
        line 453: 33
        line 454: 38
        line 456: 47
        line 457: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lorg/kohsuke/github/GHRateLimit$Record;
            0      58     1 limit   I
            0      58     2 remaining   I
            0      58     3 resetEpochSeconds   J
            0      58     5 connectorResponse   Lorg/kohsuke/github/connector/GitHubConnectorResponse;
           33      25     6 updatedAt   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class org/kohsuke/github/GHRateLimit$Record, int, int, long, class org/kohsuke/github/connector/GitHubConnectorResponse, class java/lang/String ]
          stack = []
    RuntimeVisibleAnnotations:
      0: #83()
        com.fasterxml.jackson.annotation.JsonCreator
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #70(#71=s#52,#72=Z#73)
          com.fasterxml.jackson.annotation.JsonProperty(
            value="limit"
            required=true
          )
      parameter 1:
        0: #70(#71=s#50,#72=Z#73)
          com.fasterxml.jackson.annotation.JsonProperty(
            value="remaining"
            required=true
          )
      parameter 2:
        0: #70(#71=s#74,#72=Z#73)
          com.fasterxml.jackson.annotation.JsonProperty(
            value="reset"
            required=true
          )
      parameter 3:
        0: #84()
          com.fasterxml.jackson.annotation.JacksonInject
        1: #85()
          javax.annotation.CheckForNull

  org.kohsuke.github.GHRateLimit$Record currentOrUpdated(org.kohsuke.github.GHRateLimit$Record);
    descriptor: (Lorg/kohsuke/github/GHRateLimit$Record;)Lorg/kohsuke/github/GHRateLimit$Record;
    flags: (0x0000)
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #14                 // Method getResetEpochSeconds:()J
         4: aload_1
         5: invokevirtual #14                 // Method getResetEpochSeconds:()J
         8: lcmp
         9: ifgt          35
        12: aload_0
        13: invokevirtual #14                 // Method getResetEpochSeconds:()J
        16: aload_1
        17: invokevirtual #14                 // Method getResetEpochSeconds:()J
        20: lcmp
        21: ifne          37
        24: aload_0
        25: invokevirtual #15                 // Method getRemaining:()I
        28: aload_1
        29: invokevirtual #15                 // Method getRemaining:()I
        32: if_icmpgt     37
        35: aload_0
        36: areturn
        37: aload_1
        38: instanceof    #16                 // class org/kohsuke/github/GHRateLimit$UnknownLimitRecord
        41: ifne          46
        44: aload_1
        45: areturn
        46: aload_0
        47: invokevirtual #17                 // Method isExpired:()Z
        50: ifeq          62
        53: aload_1
        54: invokevirtual #17                 // Method isExpired:()Z
        57: ifne          62
        60: aload_1
        61: areturn
        62: aload_0
        63: areturn
      LineNumberTable:
        line 483: 0
        line 484: 13
        line 485: 25
        line 489: 35
        line 490: 37
        line 494: 44
        line 495: 46
        line 498: 60
        line 502: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      64     0  this   Lorg/kohsuke/github/GHRateLimit$Record;
            0      64     1 other   Lorg/kohsuke/github/GHRateLimit$Record;
      StackMapTable: number_of_entries = 4
        frame_type = 35 /* same */
        frame_type = 1 /* same */
        frame_type = 8 /* same */
        frame_type = 15 /* same */
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #59()
          javax.annotation.Nonnull

  private java.util.Date calculateResetDate(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/util/Date;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=6, args_size=2
         0: aload_0
         1: getfield      #6                  // Field createdAtEpochSeconds:J
         4: lstore_2
         5: aload_1
         6: invokestatic  #18                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
         9: ifne          70
        12: aload_1
        13: getstatic     #19                 // Field java/time/format/DateTimeFormatter.RFC_1123_DATE_TIME:Ljava/time/format/DateTimeFormatter;
        16: invokestatic  #20                 // Method java/time/ZonedDateTime.parse:(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;
        19: invokevirtual #21                 // Method java/time/ZonedDateTime.toEpochSecond:()J
        22: lstore_2
        23: goto          70
        26: astore        4
        28: invokestatic  #23                 // Method org/kohsuke/github/GHRateLimit.access$100:()Ljava/util/logging/Logger;
        31: getstatic     #24                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
        34: invokevirtual #25                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
        37: ifeq          70
        40: invokestatic  #23                 // Method org/kohsuke/github/GHRateLimit.access$100:()Ljava/util/logging/Logger;
        43: getstatic     #24                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
        46: new           #26                 // class java/lang/StringBuilder
        49: dup
        50: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
        53: ldc           #28                 // String Malformed Date header value
        55: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: aload_1
        59: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        65: aload         4
        67: invokevirtual #31                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        70: aload_0
        71: getfield      #9                  // Field resetEpochSeconds:J
        74: lload_2
        75: lsub
        76: lstore        4
        78: new           #32                 // class java/util/Date
        81: dup
        82: aload_0
        83: getfield      #6                  // Field createdAtEpochSeconds:J
        86: lload         4
        88: ladd
        89: ldc2_w        #4                  // long 1000l
        92: lmul
        93: invokespecial #33                 // Method java/util/Date."<init>":(J)V
        96: areturn
      Exception table:
         from    to  target type
            12    23    26   Class java/time/format/DateTimeParseException
      LineNumberTable:
        line 534: 0
        line 535: 5
        line 538: 12
        line 539: 19
        line 544: 23
        line 540: 26
        line 541: 28
        line 542: 40
        line 549: 70
        line 550: 78
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           28      42     4     e   Ljava/time/format/DateTimeParseException;
            0      97     0  this   Lorg/kohsuke/github/GHRateLimit$Record;
            0      97     1 updatedAt   Ljava/lang/String;
            5      92     2 updatedAtEpochSeconds   J
           78      19     4 calculatedSecondsUntilReset   J
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class org/kohsuke/github/GHRateLimit$Record, class java/lang/String, long ]
          stack = [ class java/time/format/DateTimeParseException ]
        frame_type = 43 /* same */
    RuntimeVisibleAnnotations:
      0: #59()
        javax.annotation.Nonnull
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #85()
          javax.annotation.CheckForNull

  public int getRemaining();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #8                  // Field remaining:I
         4: ireturn
      LineNumberTable:
        line 559: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHRateLimit$Record;

  public int getLimit();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #7                  // Field limit:I
         4: ireturn
      LineNumberTable:
        line 568: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHRateLimit$Record;

  public long getResetEpochSeconds();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #9                  // Field resetEpochSeconds:J
         4: lreturn
      LineNumberTable:
        line 582: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHRateLimit$Record;

  public boolean isExpired();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #34                 // Method getResetDate:()Ljava/util/Date;
         4: invokevirtual #35                 // Method java/util/Date.getTime:()J
         7: invokestatic  #3                  // Method java/lang/System.currentTimeMillis:()J
        10: lcmp
        11: ifge          18
        14: iconst_1
        15: goto          19
        18: iconst_0
        19: ireturn
      LineNumberTable:
        line 593: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/kohsuke/github/GHRateLimit$Record;
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public java.util.Date getResetDate();
    descriptor: ()Ljava/util/Date;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #32                 // class java/util/Date
         3: dup
         4: aload_0
         5: getfield      #13                 // Field resetDate:Ljava/util/Date;
         8: invokevirtual #35                 // Method java/util/Date.getTime:()J
        11: invokespecial #33                 // Method java/util/Date."<init>":(J)V
        14: areturn
      LineNumberTable:
        line 606: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/kohsuke/github/GHRateLimit$Record;
    RuntimeVisibleAnnotations:
      0: #59()
        javax.annotation.Nonnull

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: new           #26                 // class java/lang/StringBuilder
         3: dup
         4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
         7: ldc           #36                 // String {remaining=
         9: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        12: aload_0
        13: invokevirtual #15                 // Method getRemaining:()I
        16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        19: ldc           #38                 // String , limit=
        21: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: aload_0
        25: invokevirtual #39                 // Method getLimit:()I
        28: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        31: ldc           #40                 // String , resetDate=
        33: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: aload_0
        37: invokevirtual #34                 // Method getResetDate:()Ljava/util/Date;
        40: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        43: bipush        125
        45: invokevirtual #42                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        48: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        51: areturn
      LineNumberTable:
        line 611: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lorg/kohsuke/github/GHRateLimit$Record;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_1
         8: ifnull        22
        11: aload_0
        12: invokevirtual #43                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        15: aload_1
        16: invokevirtual #43                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        19: if_acmpeq     24
        22: iconst_0
        23: ireturn
        24: aload_1
        25: checkcast     #44                 // class org/kohsuke/github/GHRateLimit$Record
        28: astore_2
        29: aload_0
        30: invokevirtual #15                 // Method getRemaining:()I
        33: aload_2
        34: invokevirtual #15                 // Method getRemaining:()I
        37: if_icmpne     81
        40: aload_0
        41: invokevirtual #39                 // Method getLimit:()I
        44: aload_2
        45: invokevirtual #39                 // Method getLimit:()I
        48: if_icmpne     81
        51: aload_0
        52: invokevirtual #14                 // Method getResetEpochSeconds:()J
        55: aload_2
        56: invokevirtual #14                 // Method getResetEpochSeconds:()J
        59: lcmp
        60: ifne          81
        63: aload_0
        64: invokevirtual #34                 // Method getResetDate:()Ljava/util/Date;
        67: aload_2
        68: invokevirtual #34                 // Method getResetDate:()Ljava/util/Date;
        71: invokevirtual #45                 // Method java/util/Date.equals:(Ljava/lang/Object;)Z
        74: ifeq          81
        77: iconst_1
        78: goto          82
        81: iconst_0
        82: ireturn
      LineNumberTable:
        line 617: 0
        line 618: 5
        line 620: 7
        line 621: 22
        line 623: 24
        line 624: 29
        line 625: 52
        line 626: 64
        line 624: 82
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Lorg/kohsuke/github/GHRateLimit$Record;
            0      83     1     o   Ljava/lang/Object;
           29      54     2 record   Lorg/kohsuke/github/GHRateLimit$Record;
      StackMapTable: number_of_entries = 5
        frame_type = 7 /* same */
        frame_type = 14 /* same */
        frame_type = 1 /* same */
        frame_type = 252 /* append */
          offset_delta = 56
          locals = [ class org/kohsuke/github/GHRateLimit$Record ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: iconst_4
         1: anewarray     #46                 // class java/lang/Object
         4: dup
         5: iconst_0
         6: aload_0
         7: invokevirtual #15                 // Method getRemaining:()I
        10: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        13: aastore
        14: dup
        15: iconst_1
        16: aload_0
        17: invokevirtual #39                 // Method getLimit:()I
        20: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        23: aastore
        24: dup
        25: iconst_2
        26: aload_0
        27: invokevirtual #14                 // Method getResetEpochSeconds:()J
        30: invokestatic  #48                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        33: aastore
        34: dup
        35: iconst_3
        36: aload_0
        37: invokevirtual #34                 // Method getResetDate:()Ljava/util/Date;
        40: aastore
        41: invokestatic  #49                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
        44: ireturn
      LineNumberTable:
        line 631: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/kohsuke/github/GHRateLimit$Record;
}
SourceFile: "GHRateLimit.java"
InnerClasses:
  public static #66= #44 of #128;         // Record=class org/kohsuke/github/GHRateLimit$Record of class org/kohsuke/github/GHRateLimit
  public static #130= #16 of #128;        // UnknownLimitRecord=class org/kohsuke/github/GHRateLimit$UnknownLimitRecord of class org/kohsuke/github/GHRateLimit
