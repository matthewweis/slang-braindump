Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/util/InMemoryRepository.class
  Last modified May 29, 2022; size 19747 bytes
  SHA-256 checksum 6cbee314b80d60b78c94044b33fe2a2a8e181da4e1c300f85be498313b5b774e
  Compiled from "InMemoryRepository.scala"
public final class coursier.util.InMemoryRepository implements coursier.core.Repository,scala.Product
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/util/InMemoryRepository
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 3, methods: 37, attributes: 6
Constant pool:
    #1 = Utf8               coursier/util/InMemoryRepository
    #2 = Class              #1            // coursier/util/InMemoryRepository
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               coursier/core/Repository
    #6 = Class              #5            // coursier/core/Repository
    #7 = Utf8               scala/Product
    #8 = Class              #7            // scala/Product
    #9 = Utf8               InMemoryRepository.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\tEs!\u0002\u0012$\u0011\u0003Ac!\u0002\u0016$\u0011\u0003Y\u0003\"\u0002\u001e\u0002\t\u0003Y\u0004\"\u0002\u001f\u0002\t\u0003i\u0004\"\u0002\u001f\u0002\t\u0003\u0019\u0006\"\u00023\u0002\t\u0003)\u0007\u0002\u0003B\r\u0003\u0011\u0005QEa\u0007\t\r\u0011\fA\u0011\u0001B\u0010\u0011!\u0011I\"\u0001C\u0001K\t\u001d\u0002B\u00023\u0002\t\u0003\u0011i\u0003\u0003\u0004e\u0003\u0011\u0005!q\b\u0005\n\u0005\u000f\n\u0011\u0011!C\u0005\u0005\u00132AAK\u0012\u0003O\"AA\u0010\u0004BC\u0002\u0013\u0005Q\u0010C\u0005\u0002\"1\u0011\t\u0011)A\u0005}\"I!\n\u0004BC\u0002\u0013\u0005\u00111\u0005\u0005\n\u0003Ka!\u0011!Q\u0001\nyB\u0011b\u0016\u0007\u0003\u0006\u0004%\t!a\n\t\u0013\u0005%BB!A!\u0002\u0013A\u0006B\u0002\u001e\r\t\u0003\tY\u0003C\u0004\u000241!\t!!\u000e\t\u000f\u0005%E\u0002\"\u0001\u0002\f\"9\u0011Q\u0018\u0007\u0005\u0002\u0005}\u0006bBAb\u0019\u0011\u0005\u0011Q\u0019\u0005\b\u0003\u0013dA\u0011AAf\u0011\u001d\ty\r\u0004C!\u0003#Dq!!8\r\t\u0003\ny\u000eC\u0004\u0002f2!\t%a:\t\u000f\u0005-H\u0002\"\u0011\u0002n\"9\u0011Q\u001f\u0007\u0005\n\u0005]\bbBA\u0000\u0019\u0011\u0005#\u0011\u0001\u0005\b\u0005\u0007aA\u0011\tB\u0003\u0011\u001d\u00119\u0001\u0004C!\u0005\u0013AqAa\u0004\r\t\u0003\u0012\t\"\u0001\nJ]6+Wn\u001c:z%\u0016\u0004xn]5u_JL(B\u0001\u0013&\u0003\u0011)H/\u001b7\u000b\u0003\u0019\n\u0001bY8veNLWM]\u0002\u0001!\tI\u0013!D\u0001$\u0005IIe.T3n_JL(+\u001a9pg&$xN]=\u0014\u0007\u0005a#\u0007\u0005\u0002.a5\taFC\u00010\u0003\u0015\u00198-\u00197b\u0013\t\tdF\u0001\u0004B]f\u0014VM\u001a\t\u0003gaj\u0011\u0001\u000e\u0006\u0003kY\n!![8\u000b\u0003]\nAA[1wC&\u0011\u0011\b\u000e\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.Z\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003!\na!\u001a=jgR\u001cHc\u0001 B\u0013B\u0011QfP\u0005\u0003\u0001:\u0012qAQ8pY\u0016\fg\u000eC\u0003C\u0007\u0001\u00071)A\u0002ve2\u0004\"\u0001R$\u000e\u0003\u0015S!A\u0012\u001c\u0002\u00079,G/\u0003\u0002I\u000b\n\u0019QK\u0015\'\t\u000b)\u001b\u0001\u0019\u0001 \u000291|7-\u00197BeRLg-Y2ugNCw.\u001e7e\u0005\u0016\u001c\u0015m\u00195fI\"\"1\u0001T(R!\tiS*\u0003\u0002O]\tQA-\u001a9sK\u000e\fG/\u001a3\"\u0003A\u000b!%V:fAQDW\rI8wKJ\u0014\u0018\u000eZ3!C\u000e\u001cW\r\u001d;j]\u001e\u0004\u0013\rI2bG\",\u0017%\u0001*\u0002\u0013Ir\u0003G\f\u0019.%\u000e\u001bD\u0003\u0002 U+ZCQA\u0011\u0003A\u0002\rCQA\u0013\u0003A\u0002yBQa\u0016\u0003A\u0002a\u000b\u0001bY1dQ\u0016|\u0005\u000f\u001e\t\u0004[e[\u0016B\u0001./\u0005\u0019y\u0005\u000f^5p]B\u0019AlX1\u000e\u0003uS!AX\u0013\u0002\u000b\r\f7\r[3\n\u0005\u0001l&!\u0003$jY\u0016\u001c\u0015m\u00195f!\ti#-\u0003\u0002d]\t9aj\u001c;iS:<\u0017!B1qa2LHc\u00014\u0003\u0016A\u0011\u0011\u0006D\n\u0006\u00191Bg.\u001d\t\u0003S2l\u0011A\u001b\u0006\u0003W\u0016\nAaY8sK&\u0011QN\u001b\u0002\u000b%\u0016\u0004xn]5u_JL\bCA\u0017p\u0013\t\u0001hFA\u0004Qe>$Wo\u0019;\u0011\u0005IThBA:y\u001d\t!x/D\u0001v\u0015\t1x%\u0001\u0004=e>|GOP\u0005\u0002_%\u0011\u0011PL\u0001\ba\u0006\u001c7.Y4f\u0013\tI4P\u0003\u0002z]\u0005Ia-\u00197mE\u0006\u001c7n]\u000b\u0002}B9q0a\u0002\u0002\u000e\u0005}a\u0002BA\u0001\u0003\u0007\u0001\"\u0001\u001e\u0018\n\u0007\u0005\u0015a&\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u0003\u0013\tYAA\u0002NCBT1!!\u0002/!\u001di\u0013qBA\n\u00033I1!!\u0005/\u0005\u0019!V\u000f\u001d7feA\u0019\u0011.!\u0006\n\u0007\u0005]!N\u0001\u0004N_\u0012,H.\u001a\t\u0004\u007f\u0006m\u0011\u0002BA\u000f\u0003\u0017\u0011aa\u0015;sS:<\u0007#B\u0017\u0002\u0010\rs\u0014A\u00034bY2\u0014\u0017mY6tAU\ta(A\u000fm_\u000e\fG.\u0011:uS\u001a\f7\r^:TQ>,H\u000e\u001a\"f\u0007\u0006\u001c\u0007.\u001a3!+\u0005A\u0016!C2bG\",w\n\u001d;!)\u001d1\u0017QFA\u0018\u0003cAQ\u0001`\nA\u0002yDQAS\nA\u0002yBQaV\nA\u0002a\u000bAAZ5oIV!\u0011qGA#)!\tI$a\u001c\u0002t\u0005]D\u0003BA\u001e\u0003K\u0002\u0012\"KA\u001f\u0003\u0003\nI\"a\u0016\n\u0007\u0005}2EA\u0004FSRDWM\u001d+\u0011\t\u0005\r\u0013Q\t\u0007\u0001\t\u001d\t9\u0005\u0006b\u0001\u0003\u0013\u0012\u0011AR\u000b\u0005\u0003\u0017\n\u0019&E\u0002b\u0003\u001b\u00022!LA(\u0013\r\t\tF\f\u0002\u0004\u0003:LH\u0001CA+\u0003\u000b\u0012\r!a\u0013\u0003\u0003}\u0003r!LA\b\u00033\ny\u0006E\u0002j\u00037J1!!\u0018k\u00059\t%\u000f^5gC\u000e$8k\\;sG\u0016\u00042![A1\u0013\r\t\u0019G\u001b\u0002\b!J|\'.Z2u\u0011\u001d\t9\u0007\u0006a\u0002\u0003S\n\u0011A\u0012\t\u0006S\u0005-\u0014\u0011I\u0005\u0004\u0003[\u001a#!B\'p]\u0006$\u0007bBA9)\u0001\u0007\u00111C\u0001\u0007[>$W\u000f\\3\t\u000f\u0005UD\u00031\u0001\u0002\u001a\u00059a/\u001a:tS>t\u0007bBA=)\u0001\u0007\u00111P\u0001\u0006M\u0016$8\r\u001b\t\u0007\u0003{\n\u0019)!\u0011\u000f\u0007%\fy(C\u0002\u0002\u0002*\f!BU3q_NLGo\u001c:z\u0013\u0011\t))a\"\u0003\u000b\u0019+Go\u00195\u000b\u0007\u0005\u0005%.A\u0005beRLg-Y2ugRA\u0011QRAQ\u0003W\u000by\u000bE\u0003s\u0003\u001f\u000b\u0019*C\u0002\u0002\u0012n\u00141aU3r!\u001di\u0013qBAK\u00037\u00032![AL\u0013\r\tIJ\u001b\u0002\f!V\u0014G.[2bi&|g\u000eE\u0002*\u0003;K1!a($\u0005!\t%\u000f^5gC\u000e$\bbBAR+\u0001\u0007\u0011QU\u0001\u000bI\u0016\u0004XM\u001c3f]\u000eL\bcA5\u0002(&\u0019\u0011\u0011\u00166\u0003\u0015\u0011+\u0007/\u001a8eK:\u001c\u0017\u0010C\u0004\u0002.V\u0001\r!a\u0018\u0002\u000fA\u0014xN[3di\"9\u0011\u0011W\u000bA\u0002\u0005M\u0016aE8wKJ\u0014\u0018\u000eZ3DY\u0006\u001c8/\u001b4jKJ\u001c\b\u0003B\u0017Z\u0003k\u0003RA]AH\u0003o\u00032![A]\u0013\r\tYL\u001b\u0002\u000b\u00072\f7o]5gS\u0016\u0014\u0018!D<ji\"4\u0015\r\u001c7cC\u000e\\7\u000fF\u0002g\u0003\u0003DQ\u0001 \fA\u0002y\f\u0001e^5uQ2{7-\u00197BeRLg-Y2ugNCw.\u001e7e\u0005\u0016\u001c\u0015m\u00195fIR\u0019a-a2\t\u000b);\u0002\u0019\u0001 \u0002\u0019]LG\u000f[\"bG\",w\n\u001d;\u0015\u0007\u0019\fi\rC\u0003X1\u0001\u0007\u0001,\u0001\u0005u_N#(/\u001b8h)\t\t\u0019\u000e\u0005\u0003\u0002V\u0006mWBAAl\u0015\r\tINN\u0001\u0005Y\u0006tw-\u0003\u0003\u0002\u001e\u0005]\u0017\u0001C2b]\u0016\u000bX/\u00197\u0015\u0007y\n\t\u000fC\u0004\u0002dj\u0001\r!!\u0014\u0002\u0007=\u0014\'.\u0001\u0004fcV\fGn\u001d\u000b\u0004}\u0005%\bbBAr7\u0001\u0007\u0011QJ\u0001\tQ\u0006\u001c\bnQ8eKR\u0011\u0011q\u001e\t\u0004[\u0005E\u0018bAAz]\t\u0019\u0011J\u001c;\u0002\u000bQ,\b\u000f\\3\u0016\u0005\u0005e\bCB\u0017\u0002|zt\u0004,C\u0002\u0002~:\u0012a\u0001V;qY\u0016\u001c\u0014!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070\u0006\u0002\u0002T\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011q^\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\u0011\tiEa\u0003\t\u000f\t5\u0001\u00051\u0001\u0002p\u0006\ta.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,G\u0003BAj\u0005\'AqA!\u0004\"\u0001\u0004\ty\u000fC\u0003}\u000b\u0001\u0007a\u0010\u000b\u0003\u0006\u0019>\u000b\u0016\u0001\u00049sSZ\fG/Z!qa2LHc\u00014\u0003\u001e!)AP\u0002a\u0001}R)aM!\t\u0003$!)Ap\u0002a\u0001}\")!j\u0002a\u0001}!\"q\u0001T(R)\u00151\'\u0011\u0006B\u0016\u0011\u0015a\b\u00021\u0001\u007f\u0011\u0015Q\u0005\u00021\u0001?+\u0011\u0011yC!\u000f\u0015\u000b\u0019\u0014\tDa\r\t\u000bqL\u0001\u0019\u0001@\t\ryK\u0001\u0019\u0001B\u001b!\u0011avLa\u000e\u0011\t\u0005\r#\u0011\b\u0003\b\u0003\u000fJ!\u0019\u0001B\u001e+\u0011\tYE!\u0010\u0005\u0011\u0005U#\u0011\bb\u0001\u0003\u0017\"rA\u001aB!\u0005\u0007\u0012)\u0005C\u0003}\u0015\u0001\u0007a\u0010C\u0003K\u0015\u0001\u0007a\bC\u0003X\u0015\u0001\u0007\u0001,\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0003LA!\u0011Q\u001bB\'\u0013\u0011\u0011y%a6\u0003\r=\u0013\'.Z2u\u0001
   #13 = Utf8               coursier/core/Repository$Complete
   #14 = Class              #13           // coursier/core/Repository$Complete
   #15 = Utf8               Complete
   #16 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #17 = Class              #16           // java/lang/invoke/MethodHandles$Lookup
   #18 = Utf8               java/lang/invoke/MethodHandles
   #19 = Class              #18           // java/lang/invoke/MethodHandles
   #20 = Utf8               Lookup
   #21 = Utf8               fallbacks
   #22 = Utf8               Lscala/collection/immutable/Map;
   #23 = Utf8               Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;
   #24 = Utf8               localArtifactsShouldBeCached
   #25 = Utf8               Z
   #26 = Utf8               cacheOpt
   #27 = Utf8               Lscala/Option;
   #28 = Utf8               Lscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;
   #29 = Utf8               apply
   #30 = Utf8               (Lscala/collection/immutable/Map;ZLscala/Option;)Lcoursier/util/InMemoryRepository;
   #31 = Utf8               (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Lcoursier/util/InMemoryRepository;
   #32 = Utf8               coursier/util/InMemoryRepository$
   #33 = Class              #32           // coursier/util/InMemoryRepository$
   #34 = Utf8               MODULE$
   #35 = Utf8               Lcoursier/util/InMemoryRepository$;
   #36 = NameAndType        #34:#35       // MODULE$:Lcoursier/util/InMemoryRepository$;
   #37 = Fieldref           #33.#36       // coursier/util/InMemoryRepository$.MODULE$:Lcoursier/util/InMemoryRepository$;
   #38 = NameAndType        #29:#30       // apply:(Lscala/collection/immutable/Map;ZLscala/Option;)Lcoursier/util/InMemoryRepository;
   #39 = Methodref          #33.#38       // coursier/util/InMemoryRepository$.apply:(Lscala/collection/immutable/Map;ZLscala/Option;)Lcoursier/util/InMemoryRepository;
   #40 = Utf8               (Lscala/collection/immutable/Map;Lcoursier/cache/FileCache;)Lcoursier/util/InMemoryRepository;
   #41 = Utf8               <F:Ljava/lang/Object;>(Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Lcoursier/cache/FileCache<TF;>;)Lcoursier/util/InMemoryRepository;
   #42 = Utf8               cache
   #43 = NameAndType        #29:#40       // apply:(Lscala/collection/immutable/Map;Lcoursier/cache/FileCache;)Lcoursier/util/InMemoryRepository;
   #44 = Methodref          #33.#43       // coursier/util/InMemoryRepository$.apply:(Lscala/collection/immutable/Map;Lcoursier/cache/FileCache;)Lcoursier/util/InMemoryRepository;
   #45 = Utf8               (Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
   #46 = Utf8               (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Z)Lcoursier/util/InMemoryRepository;
   #47 = NameAndType        #29:#45       // apply:(Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
   #48 = Methodref          #33.#47       // coursier/util/InMemoryRepository$.apply:(Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
   #49 = Utf8               (Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
   #50 = Utf8               (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;)Lcoursier/util/InMemoryRepository;
   #51 = NameAndType        #29:#49       // apply:(Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
   #52 = Methodref          #33.#51       // coursier/util/InMemoryRepository$.apply:(Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
   #53 = Utf8               exists
   #54 = Utf8               (Ljava/net/URL;ZLscala/Option;)Z
   #55 = Utf8               (Ljava/net/URL;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Z
   #56 = Utf8               url
   #57 = NameAndType        #53:#54       // exists:(Ljava/net/URL;ZLscala/Option;)Z
   #58 = Methodref          #33.#57       // coursier/util/InMemoryRepository$.exists:(Ljava/net/URL;ZLscala/Option;)Z
   #59 = Utf8               (Ljava/net/URL;Z)Z
   #60 = NameAndType        #53:#59       // exists:(Ljava/net/URL;Z)Z
   #61 = Methodref          #33.#60       // coursier/util/InMemoryRepository$.exists:(Ljava/net/URL;Z)Z
   #62 = Utf8               productIterator
   #63 = Utf8               ()Lscala/collection/Iterator;
   #64 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #65 = Utf8               productIterator$
   #66 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #67 = NameAndType        #65:#66       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #68 = InterfaceMethodref #8.#67        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #69 = Utf8               this
   #70 = Utf8               Lcoursier/util/InMemoryRepository;
   #71 = Utf8               productElementNames
   #72 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #73 = Utf8               productElementNames$
   #74 = NameAndType        #73:#66       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #75 = InterfaceMethodref #8.#74        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #76 = Utf8               repr
   #77 = Utf8               ()Ljava/lang/String;
   #78 = Utf8               repr$
   #79 = Utf8               (Lcoursier/core/Repository;)Ljava/lang/String;
   #80 = NameAndType        #78:#79       // repr$:(Lcoursier/core/Repository;)Ljava/lang/String;
   #81 = InterfaceMethodref #6.#80        // coursier/core/Repository.repr$:(Lcoursier/core/Repository;)Ljava/lang/String;
   #82 = Utf8               findMaybeInterval
   #83 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #84 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/ArtifactSource;Lcoursier/core/Project;>;>;
   #85 = Utf8               module
   #86 = Utf8               version
   #87 = Utf8               fetch
   #88 = Utf8               F
   #89 = Utf8               findMaybeInterval$
   #90 = Utf8               (Lcoursier/core/Repository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #91 = NameAndType        #89:#90       // findMaybeInterval$:(Lcoursier/core/Repository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #92 = InterfaceMethodref #6.#91        // coursier/core/Repository.findMaybeInterval$:(Lcoursier/core/Repository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #93 = Utf8               Lcoursier/core/Module;
   #94 = Utf8               Ljava/lang/String;
   #95 = Utf8               Lscala/Function1;
   #96 = Utf8               Lcoursier/util/Monad;
   #97 = Utf8               completeOpt
   #98 = Utf8               (Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
   #99 = Utf8               <F:Ljava/lang/Object;>(Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lscala/Option<Lcoursier/core/Repository$Complete<TF;>;>;
  #100 = Utf8               evidence$1
  #101 = Utf8               completeOpt$
  #102 = Utf8               (Lcoursier/core/Repository;Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #103 = NameAndType        #101:#102     // completeOpt$:(Lcoursier/core/Repository;Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #104 = InterfaceMethodref #6.#103       // coursier/core/Repository.completeOpt$:(Lcoursier/core/Repository;Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #105 = Utf8               versionsCheckHasModule
  #106 = Utf8               ()Z
  #107 = Utf8               versionsCheckHasModule$
  #108 = Utf8               (Lcoursier/core/Repository;)Z
  #109 = NameAndType        #107:#108     // versionsCheckHasModule$:(Lcoursier/core/Repository;)Z
  #110 = InterfaceMethodref #6.#109       // coursier/core/Repository.versionsCheckHasModule$:(Lcoursier/core/Repository;)Z
  #111 = Utf8               versions
  #112 = Utf8               (Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #113 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
  #114 = Utf8               versions$
  #115 = Utf8               (Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #116 = NameAndType        #114:#115     // versions$:(Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #117 = InterfaceMethodref #6.#116       // coursier/core/Repository.versions$:(Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #118 = Utf8               (Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
  #119 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;ZLcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
  #120 = Utf8               (Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
  #121 = NameAndType        #114:#120     // versions$:(Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
  #122 = InterfaceMethodref #6.#121       // coursier/core/Repository.versions$:(Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
  #123 = Utf8               fetchVersions
  #124 = Utf8               fetchVersions$
  #125 = NameAndType        #124:#115     // fetchVersions$:(Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #126 = InterfaceMethodref #6.#125       // coursier/core/Repository.fetchVersions$:(Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #127 = Utf8               ()Lscala/collection/immutable/Map;
  #128 = Utf8               ()Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;
  #129 = NameAndType        #21:#22       // fallbacks:Lscala/collection/immutable/Map;
  #130 = Fieldref           #2.#129       // coursier/util/InMemoryRepository.fallbacks:Lscala/collection/immutable/Map;
  #131 = NameAndType        #24:#25       // localArtifactsShouldBeCached:Z
  #132 = Fieldref           #2.#131       // coursier/util/InMemoryRepository.localArtifactsShouldBeCached:Z
  #133 = Utf8               ()Lscala/Option;
  #134 = Utf8               ()Lscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;
  #135 = NameAndType        #26:#27       // cacheOpt:Lscala/Option;
  #136 = Fieldref           #2.#135       // coursier/util/InMemoryRepository.cacheOpt:Lscala/Option;
  #137 = Utf8               find
  #138 = NameAndType        #21:#127      // fallbacks:()Lscala/collection/immutable/Map;
  #139 = Methodref          #2.#138       // coursier/util/InMemoryRepository.fallbacks:()Lscala/collection/immutable/Map;
  #140 = Utf8               scala/Tuple2
  #141 = Class              #140          // scala/Tuple2
  #142 = Utf8               <init>
  #143 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #144 = NameAndType        #142:#143     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #145 = Methodref          #141.#144     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #146 = Utf8               scala/collection/immutable/Map
  #147 = Class              #146          // scala/collection/immutable/Map
  #148 = Utf8               get
  #149 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #150 = NameAndType        #148:#149     // get:(Ljava/lang/Object;)Lscala/Option;
  #151 = InterfaceMethodref #147.#150     // scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
  #152 = Utf8               ()Ljava/lang/Object;
  #153 = MethodType         #152          //  ()Ljava/lang/Object;
  #154 = Utf8               $anonfun$find$1
  #155 = Utf8               ()Lscala/util/Left;
  #156 = NameAndType        #154:#155     // $anonfun$find$1:()Lscala/util/Left;
  #157 = Methodref          #2.#156       // coursier/util/InMemoryRepository.$anonfun$find$1:()Lscala/util/Left;
  #158 = MethodHandle       6:#157        // REF_invokeStatic coursier/util/InMemoryRepository.$anonfun$find$1:()Lscala/util/Left;
  #159 = MethodType         #155          //  ()Lscala/util/Left;
  #160 = Integer            5
  #161 = Integer            1
  #162 = Utf8               java/lang/invoke/LambdaMetafactory
  #163 = Class              #162          // java/lang/invoke/LambdaMetafactory
  #164 = Utf8               altMetafactory
  #165 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #166 = NameAndType        #164:#165     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #167 = Methodref          #163.#166     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #168 = MethodHandle       6:#167        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #169 = Utf8               ()Lscala/Function0;
  #170 = NameAndType        #29:#169      // apply:()Lscala/Function0;
  #171 = InvokeDynamic      #0:#170       // #0:apply:()Lscala/Function0;
  #172 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #173 = MethodType         #172          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #174 = Utf8               $anonfun$find$2
  #175 = Utf8               (Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  #176 = NameAndType        #174:#175     // $anonfun$find$2:(Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  #177 = Methodref          #2.#176       // coursier/util/InMemoryRepository.$anonfun$find$2:(Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  #178 = MethodHandle       6:#177        // REF_invokeStatic coursier/util/InMemoryRepository.$anonfun$find$2:(Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  #179 = Utf8               (Lscala/Tuple2;)Lscala/util/Either;
  #180 = MethodType         #179          //  (Lscala/Tuple2;)Lscala/util/Either;
  #181 = Utf8               (Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;)Lscala/Function1;
  #182 = NameAndType        #29:#181      // apply:(Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;)Lscala/Function1;
  #183 = InvokeDynamic      #1:#182       // #1:apply:(Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;)Lscala/Function1;
  #184 = Utf8               scala/Option
  #185 = Class              #184          // scala/Option
  #186 = Utf8               fold
  #187 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #188 = NameAndType        #186:#187     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #189 = Methodref          #185.#188     // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #190 = Utf8               scala/util/Either
  #191 = Class              #190          // scala/util/Either
  #192 = Utf8               coursier/util/EitherT
  #193 = Class              #192          // coursier/util/EitherT
  #194 = Utf8               coursier/util/Monad
  #195 = Class              #194          // coursier/util/Monad
  #196 = Utf8               point
  #197 = NameAndType        #196:#172     // point:(Ljava/lang/Object;)Ljava/lang/Object;
  #198 = InterfaceMethodref #195.#197     // coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
  #199 = Utf8               (Ljava/lang/Object;)V
  #200 = NameAndType        #142:#199     // "<init>":(Ljava/lang/Object;)V
  #201 = Methodref          #193.#200     // coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
  #202 = Utf8               res
  #203 = Utf8               Lscala/util/Either;
  #204 = Utf8               artifacts
  #205 = Utf8               (Lcoursier/core/Dependency;Lcoursier/core/Project;Lscala/Option;)Lscala/collection/immutable/Seq;
  #206 = Utf8               (Lcoursier/core/Dependency;Lcoursier/core/Project;Lscala/Option<Lscala/collection/immutable/Seq<Lcoursier/core/Classifier;>;>;)Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;
  #207 = Utf8               dependency
  #208 = Utf8               project
  #209 = Utf8               overrideClassifiers
  #210 = Utf8               scala/Option$
  #211 = Class              #210          // scala/Option$
  #212 = Utf8               Lscala/Option$;
  #213 = NameAndType        #34:#212      // MODULE$:Lscala/Option$;
  #214 = Fieldref           #211.#213     // scala/Option$.MODULE$:Lscala/Option$;
  #215 = Utf8               coursier/core/Dependency
  #216 = Class              #215          // coursier/core/Dependency
  #217 = Utf8               moduleVersion
  #218 = Utf8               ()Lscala/Tuple2;
  #219 = NameAndType        #217:#218     // moduleVersion:()Lscala/Tuple2;
  #220 = Methodref          #216.#219     // coursier/core/Dependency.moduleVersion:()Lscala/Tuple2;
  #221 = Utf8               option2Iterable
  #222 = Utf8               (Lscala/Option;)Lscala/collection/Iterable;
  #223 = NameAndType        #221:#222     // option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #224 = Methodref          #211.#223     // scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #225 = Utf8               scala/collection/Iterable
  #226 = Class              #225          // scala/collection/Iterable
  #227 = Utf8               toSeq
  #228 = Utf8               ()Lscala/collection/immutable/Seq;
  #229 = NameAndType        #227:#228     // toSeq:()Lscala/collection/immutable/Seq;
  #230 = InterfaceMethodref #226.#229     // scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
  #231 = Utf8               $anonfun$artifacts$1
  #232 = Utf8               (Lcoursier/core/Dependency;Lscala/Tuple2;)Lscala/Tuple2;
  #233 = NameAndType        #231:#232     // $anonfun$artifacts$1:(Lcoursier/core/Dependency;Lscala/Tuple2;)Lscala/Tuple2;
  #234 = Methodref          #2.#233       // coursier/util/InMemoryRepository.$anonfun$artifacts$1:(Lcoursier/core/Dependency;Lscala/Tuple2;)Lscala/Tuple2;
  #235 = MethodHandle       6:#234        // REF_invokeStatic coursier/util/InMemoryRepository.$anonfun$artifacts$1:(Lcoursier/core/Dependency;Lscala/Tuple2;)Lscala/Tuple2;
  #236 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
  #237 = MethodType         #236          //  (Lscala/Tuple2;)Lscala/Tuple2;
  #238 = Utf8               (Lcoursier/core/Dependency;)Lscala/Function1;
  #239 = NameAndType        #29:#238      // apply:(Lcoursier/core/Dependency;)Lscala/Function1;
  #240 = InvokeDynamic      #2:#239       // #2:apply:(Lcoursier/core/Dependency;)Lscala/Function1;
  #241 = Utf8               scala/collection/immutable/Seq
  #242 = Class              #241          // scala/collection/immutable/Seq
  #243 = Utf8               map
  #244 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #245 = NameAndType        #243:#244     // map:(Lscala/Function1;)Ljava/lang/Object;
  #246 = InterfaceMethodref #242.#245     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #247 = Utf8               Lcoursier/core/Dependency;
  #248 = Utf8               Lcoursier/core/Project;
  #249 = Utf8               withFallbacks
  #250 = NameAndType        #24:#106      // localArtifactsShouldBeCached:()Z
  #251 = Methodref          #2.#250       // coursier/util/InMemoryRepository.localArtifactsShouldBeCached:()Z
  #252 = NameAndType        #26:#133      // cacheOpt:()Lscala/Option;
  #253 = Methodref          #2.#252       // coursier/util/InMemoryRepository.cacheOpt:()Lscala/Option;
  #254 = Utf8               (Lscala/collection/immutable/Map;ZLscala/Option;)V
  #255 = NameAndType        #142:#254     // "<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
  #256 = Methodref          #2.#255       // coursier/util/InMemoryRepository."<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
  #257 = Utf8               withLocalArtifactsShouldBeCached
  #258 = Utf8               (Z)Lcoursier/util/InMemoryRepository;
  #259 = Utf8               withCacheOpt
  #260 = Utf8               (Lscala/Option;)Lcoursier/util/InMemoryRepository;
  #261 = Utf8               (Lscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Lcoursier/util/InMemoryRepository;
  #262 = Utf8               toString
  #263 = Utf8               java/lang/StringBuilder
  #264 = Class              #263          // java/lang/StringBuilder
  #265 = Utf8               InMemoryRepository(
  #266 = String             #265          // InMemoryRepository(
  #267 = Utf8               (Ljava/lang/String;)V
  #268 = NameAndType        #142:#267     // "<init>":(Ljava/lang/String;)V
  #269 = Methodref          #264.#268     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #270 = Utf8               java/lang/String
  #271 = Class              #270          // java/lang/String
  #272 = Utf8               valueOf
  #273 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #274 = NameAndType        #272:#273     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #275 = Methodref          #271.#274     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #276 = Utf8               append
  #277 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #278 = NameAndType        #276:#277     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #279 = Methodref          #264.#278     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #280 = Utf8               ,
  #281 = String             #280          // ,
  #282 = Utf8               (Z)Ljava/lang/String;
  #283 = NameAndType        #272:#282     // valueOf:(Z)Ljava/lang/String;
  #284 = Methodref          #271.#283     // java/lang/String.valueOf:(Z)Ljava/lang/String;
  #285 = Utf8               )
  #286 = String             #285          // )
  #287 = NameAndType        #262:#77      // toString:()Ljava/lang/String;
  #288 = Methodref          #264.#287     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #289 = Utf8               b
  #290 = Utf8               Ljava/lang/StringBuilder;
  #291 = Utf8               canEqual
  #292 = Utf8               (Ljava/lang/Object;)Z
  #293 = Utf8               obj
  #294 = Utf8               Ljava/lang/Object;
  #295 = Utf8               equals
  #296 = NameAndType        #291:#292     // canEqual:(Ljava/lang/Object;)Z
  #297 = Methodref          #2.#296       // coursier/util/InMemoryRepository.canEqual:(Ljava/lang/Object;)Z
  #298 = NameAndType        #295:#292     // equals:(Ljava/lang/Object;)Z
  #299 = Methodref          #4.#298       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #300 = Utf8               other
  #301 = Utf8               hashCode
  #302 = Utf8               ()I
  #303 = Utf8               InMemoryRepository
  #304 = String             #303          // InMemoryRepository
  #305 = Utf8               scala/runtime/Statics
  #306 = Class              #305          // scala/runtime/Statics
  #307 = Utf8               anyHash
  #308 = Utf8               (Ljava/lang/Object;)I
  #309 = NameAndType        #307:#308     // anyHash:(Ljava/lang/Object;)I
  #310 = Methodref          #306.#309     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #311 = Utf8               code
  #312 = Utf8               I
  #313 = Utf8               tuple
  #314 = Utf8               ()Lscala/Tuple3;
  #315 = Utf8               ()Lscala/Tuple3<Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Ljava/lang/Object;Lscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;>;
  #316 = Utf8               scala/Tuple3
  #317 = Class              #316          // scala/Tuple3
  #318 = Utf8               scala/runtime/BoxesRunTime
  #319 = Class              #318          // scala/runtime/BoxesRunTime
  #320 = Utf8               boxToBoolean
  #321 = Utf8               (Z)Ljava/lang/Boolean;
  #322 = NameAndType        #320:#321     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #323 = Methodref          #319.#322     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #324 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #325 = NameAndType        #142:#324     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #326 = Methodref          #317.#325     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #327 = Utf8               productPrefix
  #328 = Utf8               productArity
  #329 = Utf8               productElement
  #330 = Utf8               (I)Ljava/lang/Object;
  #331 = Utf8               n
  #332 = Utf8               java/lang/IndexOutOfBoundsException
  #333 = Class              #332          // java/lang/IndexOutOfBoundsException
  #334 = Utf8               boxToInteger
  #335 = Utf8               (I)Ljava/lang/Integer;
  #336 = NameAndType        #334:#335     // boxToInteger:(I)Ljava/lang/Integer;
  #337 = Methodref          #319.#336     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #338 = Methodref          #4.#287       // java/lang/Object.toString:()Ljava/lang/String;
  #339 = Methodref          #333.#268     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #340 = Utf8               productElementName
  #341 = Utf8               (I)Ljava/lang/String;
  #342 = String             #21           // fallbacks
  #343 = String             #24           // localArtifactsShouldBeCached
  #344 = String             #26           // cacheOpt
  #345 = Utf8               scala/package$
  #346 = Class              #345          // scala/package$
  #347 = Utf8               Lscala/package$;
  #348 = NameAndType        #34:#347      // MODULE$:Lscala/package$;
  #349 = Fieldref           #346.#348     // scala/package$.MODULE$:Lscala/package$;
  #350 = Utf8               Left
  #351 = Utf8               ()Lscala/util/Left$;
  #352 = NameAndType        #350:#351     // Left:()Lscala/util/Left$;
  #353 = Methodref          #346.#352     // scala/package$.Left:()Lscala/util/Left$;
  #354 = Utf8               No fallback URL found
  #355 = String             #354          // No fallback URL found
  #356 = Utf8               scala/util/Left$
  #357 = Class              #356          // scala/util/Left$
  #358 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #359 = NameAndType        #29:#358      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #360 = Methodref          #357.#359     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #361 = Utf8               $this
  #362 = Utf8               module$1
  #363 = Utf8               version$1
  #364 = Utf8               x0$1
  #365 = Utf8               _1
  #366 = NameAndType        #365:#152     // _1:()Ljava/lang/Object;
  #367 = Methodref          #141.#366     // scala/Tuple2._1:()Ljava/lang/Object;
  #368 = Utf8               java/net/URL
  #369 = Class              #368          // java/net/URL
  #370 = Utf8               toExternalForm
  #371 = NameAndType        #370:#77      // toExternalForm:()Ljava/lang/String;
  #372 = Methodref          #369.#371     // java/net/URL.toExternalForm:()Ljava/lang/String;
  #373 = Utf8               lastIndexOf
  #374 = Utf8               (I)I
  #375 = NameAndType        #373:#374     // lastIndexOf:(I)I
  #376 = Methodref          #271.#375     // java/lang/String.lastIndexOf:(I)I
  #377 = Utf8               /
  #378 = String             #377          // /
  #379 = Utf8               endsWith
  #380 = Utf8               (Ljava/lang/String;)Z
  #381 = NameAndType        #379:#380     // endsWith:(Ljava/lang/String;)Z
  #382 = Methodref          #271.#381     // java/lang/String.endsWith:(Ljava/lang/String;)Z
  #383 = Utf8               coursier/core/Module
  #384 = Class              #383          // coursier/core/Module
  #385 = Integer            24
  #386 = Utf8               (I)V
  #387 = NameAndType        #142:#386     // "<init>":(I)V
  #388 = Methodref          #264.#387     // java/lang/StringBuilder."<init>":(I)V
  #389 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #390 = NameAndType        #276:#389     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #391 = Methodref          #264.#390     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #392 = Utf8                doesn\'t point to a file
  #393 = String             #392          //  doesn\'t point to a file
  #394 = Utf8               scala/collection/StringOps$
  #395 = Class              #394          // scala/collection/StringOps$
  #396 = Utf8               Lscala/collection/StringOps$;
  #397 = NameAndType        #34:#396      // MODULE$:Lscala/collection/StringOps$;
  #398 = Fieldref           #395.#397     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #399 = Utf8               scala/Predef$
  #400 = Class              #399          // scala/Predef$
  #401 = Utf8               Lscala/Predef$;
  #402 = NameAndType        #34:#401      // MODULE$:Lscala/Predef$;
  #403 = Fieldref           #400.#402     // scala/Predef$.MODULE$:Lscala/Predef$;
  #404 = Utf8               augmentString
  #405 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #406 = NameAndType        #404:#405     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #407 = Methodref          #400.#406     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #408 = Utf8               splitAt$extension
  #409 = Utf8               (Ljava/lang/String;I)Lscala/Tuple2;
  #410 = NameAndType        #408:#409     // splitAt$extension:(Ljava/lang/String;I)Lscala/Tuple2;
  #411 = Methodref          #395.#410     // scala/collection/StringOps$.splitAt$extension:(Ljava/lang/String;I)Lscala/Tuple2;
  #412 = Utf8               _2
  #413 = NameAndType        #412:#152     // _2:()Ljava/lang/Object;
  #414 = Methodref          #141.#413     // scala/Tuple2._2:()Ljava/lang/Object;
  #415 = Utf8               scala/MatchError
  #416 = Class              #415          // scala/MatchError
  #417 = Methodref          #416.#200     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #418 = Utf8               coursier/core/Project$
  #419 = Class              #418          // coursier/core/Project$
  #420 = Utf8               Lcoursier/core/Project$;
  #421 = NameAndType        #34:#420      // MODULE$:Lcoursier/core/Project$;
  #422 = Fieldref           #419.#421     // coursier/core/Project$.MODULE$:Lcoursier/core/Project$;
  #423 = Utf8               scala/collection/immutable/Nil$
  #424 = Class              #423          // scala/collection/immutable/Nil$
  #425 = Utf8               Lscala/collection/immutable/Nil$;
  #426 = NameAndType        #34:#425      // MODULE$:Lscala/collection/immutable/Nil$;
  #427 = Fieldref           #424.#426     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #428 = Utf8               Map
  #429 = Utf8               ()Lscala/collection/immutable/Map$;
  #430 = NameAndType        #428:#429     // Map:()Lscala/collection/immutable/Map$;
  #431 = Methodref          #400.#430     // scala/Predef$.Map:()Lscala/collection/immutable/Map$;
  #432 = Utf8               scala/collection/immutable/Map$
  #433 = Class              #432          // scala/collection/immutable/Map$
  #434 = Utf8               empty
  #435 = NameAndType        #434:#127     // empty:()Lscala/collection/immutable/Map;
  #436 = Methodref          #433.#435     // scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
  #437 = Utf8               scala/None$
  #438 = Class              #437          // scala/None$
  #439 = Utf8               Lscala/None$;
  #440 = NameAndType        #34:#439      // MODULE$:Lscala/None$;
  #441 = Fieldref           #438.#440     // scala/None$.MODULE$:Lscala/None$;
  #442 = Utf8               coursier/core/Info$
  #443 = Class              #442          // coursier/core/Info$
  #444 = Utf8               Lcoursier/core/Info$;
  #445 = NameAndType        #34:#444      // MODULE$:Lcoursier/core/Info$;
  #446 = Fieldref           #443.#445     // coursier/core/Info$.MODULE$:Lcoursier/core/Info$;
  #447 = Utf8               ()Lcoursier/core/Info;
  #448 = NameAndType        #434:#447     // empty:()Lcoursier/core/Info;
  #449 = Methodref          #443.#448     // coursier/core/Info$.empty:()Lcoursier/core/Info;
  #450 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Lscala/Option;ZLscala/Option;Lscala/collection/immutable/Seq;Lcoursier/core/Info;)Lcoursier/core/Project;
  #451 = NameAndType        #29:#450      // apply:(Lcoursier/core/Module;Ljava/lang/String;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Lscala/Option;ZLscala/Option;Lscala/collection/immutable/Seq;Lcoursier/core/Info;)Lcoursier/core/Project;
  #452 = Methodref          #419.#451     // coursier/core/Project$.apply:(Lcoursier/core/Module;Ljava/lang/String;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Lscala/Option;ZLscala/Option;Lscala/collection/immutable/Seq;Lcoursier/core/Info;)Lcoursier/core/Project;
  #453 = Utf8               Right
  #454 = Utf8               ()Lscala/util/Right$;
  #455 = NameAndType        #453:#454     // Right:()Lscala/util/Right$;
  #456 = Methodref          #346.#455     // scala/package$.Right:()Lscala/util/Right$;
  #457 = Utf8               scala/util/Right$
  #458 = Class              #457          // scala/util/Right$
  #459 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #460 = NameAndType        #29:#459      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #461 = Methodref          #458.#460     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #462 = Integer            17
  #463 = Utf8                not found under
  #464 = String             #463          //  not found under
  #465 = Utf8               dirUrlStr
  #466 = Utf8               fileName
  #467 = Utf8               proj
  #468 = Utf8               urlStr
  #469 = Utf8               idx
  #470 = Utf8               Ljava/net/URL;
  #471 = Utf8               Lscala/Tuple2;
  #472 = Utf8               dependency$1
  #473 = Utf8               _2$mcZ$sp
  #474 = NameAndType        #473:#106     // _2$mcZ$sp:()Z
  #475 = Methodref          #141.#474     // scala/Tuple2._2$mcZ$sp:()Z
  #476 = Methodref          #369.#287     // java/net/URL.toString:()Ljava/lang/String;
  #477 = Utf8               substring
  #478 = NameAndType        #477:#341     // substring:(I)Ljava/lang/String;
  #479 = Methodref          #271.#478     // java/lang/String.substring:(I)Ljava/lang/String;
  #480 = Utf8               coursier/core/Publication$
  #481 = Class              #480          // coursier/core/Publication$
  #482 = Utf8               Lcoursier/core/Publication$;
  #483 = NameAndType        #34:#482      // MODULE$:Lcoursier/core/Publication$;
  #484 = Fieldref           #481.#483     // coursier/core/Publication$.MODULE$:Lcoursier/core/Publication$;
  #485 = Utf8               ()Lcoursier/core/Module;
  #486 = NameAndType        #85:#485      // module:()Lcoursier/core/Module;
  #487 = Methodref          #216.#486     // coursier/core/Dependency.module:()Lcoursier/core/Module;
  #488 = Utf8               name
  #489 = NameAndType        #488:#77      // name:()Ljava/lang/String;
  #490 = Methodref          #384.#489     // coursier/core/Module.name:()Ljava/lang/String;
  #491 = Utf8               coursier/core/Classifier$
  #492 = Class              #491          // coursier/core/Classifier$
  #493 = Utf8               Lcoursier/core/Classifier$;
  #494 = NameAndType        #34:#493      // MODULE$:Lcoursier/core/Classifier$;
  #495 = Fieldref           #492.#494     // coursier/core/Classifier$.MODULE$:Lcoursier/core/Classifier$;
  #496 = NameAndType        #434:#77      // empty:()Ljava/lang/String;
  #497 = Methodref          #492.#496     // coursier/core/Classifier$.empty:()Ljava/lang/String;
  #498 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
  #499 = NameAndType        #29:#498      // apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
  #500 = Methodref          #481.#499     // coursier/core/Publication$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
  #501 = Utf8               coursier/util/Artifact$
  #502 = Class              #501          // coursier/util/Artifact$
  #503 = Utf8               Lcoursier/util/Artifact$;
  #504 = NameAndType        #34:#503      // MODULE$:Lcoursier/util/Artifact$;
  #505 = Fieldref           #502.#504     // coursier/util/Artifact$.MODULE$:Lcoursier/util/Artifact$;
  #506 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;ZZLscala/Option;)Lcoursier/util/Artifact;
  #507 = NameAndType        #29:#506      // apply:(Ljava/lang/String;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;ZZLscala/Option;)Lcoursier/util/Artifact;
  #508 = Methodref          #502.#507     // coursier/util/Artifact$.apply:(Ljava/lang/String;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;ZZLscala/Option;)Lcoursier/util/Artifact;
  #509 = Utf8               coursier/core/Publication
  #510 = Class              #509          // coursier/core/Publication
  #511 = Utf8               url0
  #512 = Utf8               ext
  #513 = Utf8               pub
  #514 = Utf8               Lcoursier/core/Publication;
  #515 = Utf8               changing
  #516 = Utf8               (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)V
  #517 = Utf8               ()V
  #518 = NameAndType        #142:#517     // "<init>":()V
  #519 = Methodref          #4.#518       // java/lang/Object."<init>":()V
  #520 = Utf8               $init$
  #521 = Utf8               (Lcoursier/core/Repository;)V
  #522 = NameAndType        #520:#521     // $init$:(Lcoursier/core/Repository;)V
  #523 = InterfaceMethodref #6.#522       // coursier/core/Repository.$init$:(Lcoursier/core/Repository;)V
  #524 = Utf8               (Lscala/Product;)V
  #525 = NameAndType        #520:#524     // $init$:(Lscala/Product;)V
  #526 = InterfaceMethodref #8.#525       // scala/Product.$init$:(Lscala/Product;)V
  #527 = Utf8               $deserializeLambda$
  #528 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #529 = Utf8               scala/runtime/LambdaDeserialize
  #530 = Class              #529          // scala/runtime/LambdaDeserialize
  #531 = Utf8               bootstrap
  #532 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #533 = NameAndType        #531:#532     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #534 = Methodref          #530.#533     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #535 = MethodHandle       6:#534        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #536 = Utf8               lambdaDeserialize
  #537 = NameAndType        #536:#528     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #538 = InvokeDynamic      #3:#537       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #539 = Utf8               Signature
  #540 = Utf8               Code
  #541 = Utf8               MethodParameters
  #542 = Utf8               Deprecated
  #543 = Utf8               LineNumberTable
  #544 = Utf8               LocalVariableTable
  #545 = Utf8               StackMapTable
  #546 = Utf8               InnerClasses
  #547 = Utf8               SourceFile
  #548 = Utf8               RuntimeVisibleAnnotations
  #549 = Utf8               BootstrapMethods
  #550 = Utf8               ScalaInlineInfo
  #551 = Utf8               ScalaSig
{
  private final scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>> fallbacks;
    descriptor: Lscala/collection/immutable/Map;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #23                          // Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;

  private final boolean localArtifactsShouldBeCached;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Option<coursier.cache.FileCache<scala.runtime.Nothing$>> cacheOpt;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #28                          // Lscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;

  public static coursier.util.InMemoryRepository apply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>, boolean, scala.Option<coursier.cache.FileCache<scala.runtime.Nothing$>>);
    descriptor: (Lscala/collection/immutable/Map;ZLscala/Option;)Lcoursier/util/InMemoryRepository;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #37                 // Field coursier/util/InMemoryRepository$.MODULE$:Lcoursier/util/InMemoryRepository$;
         3: aload_0
         4: iload_1
         5: aload_2
         6: invokevirtual #39                 // Method coursier/util/InMemoryRepository$.apply:(Lscala/collection/immutable/Map;ZLscala/Option;)Lcoursier/util/InMemoryRepository;
         9: areturn
    Signature: #31                          // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Lcoursier/util/InMemoryRepository;
    MethodParameters:
      Name                           Flags
      fallbacks                      final
      localArtifactsShouldBeCached   final
      cacheOpt                       final

  public static <F extends java.lang.Object> coursier.util.InMemoryRepository apply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>, coursier.cache.FileCache<F>);
    descriptor: (Lscala/collection/immutable/Map;Lcoursier/cache/FileCache;)Lcoursier/util/InMemoryRepository;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #37                 // Field coursier/util/InMemoryRepository$.MODULE$:Lcoursier/util/InMemoryRepository$;
         3: aload_0
         4: aload_1
         5: invokevirtual #44                 // Method coursier/util/InMemoryRepository$.apply:(Lscala/collection/immutable/Map;Lcoursier/cache/FileCache;)Lcoursier/util/InMemoryRepository;
         8: areturn
    Signature: #41                          // <F:Ljava/lang/Object;>(Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Lcoursier/cache/FileCache<TF;>;)Lcoursier/util/InMemoryRepository;
    MethodParameters:
      Name                           Flags
      fallbacks                      final
      cache                          final

  public static coursier.util.InMemoryRepository apply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>, boolean);
    descriptor: (Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #37                 // Field coursier/util/InMemoryRepository$.MODULE$:Lcoursier/util/InMemoryRepository$;
         3: aload_0
         4: iload_1
         5: invokevirtual #48                 // Method coursier/util/InMemoryRepository$.apply:(Lscala/collection/immutable/Map;Z)Lcoursier/util/InMemoryRepository;
         8: areturn
    Signature: #46                          // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Z)Lcoursier/util/InMemoryRepository;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      fallbacks                      final
      localArtifactsShouldBeCached   final

  public static coursier.util.InMemoryRepository apply(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>);
    descriptor: (Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #37                 // Field coursier/util/InMemoryRepository$.MODULE$:Lcoursier/util/InMemoryRepository$;
         3: aload_0
         4: invokevirtual #52                 // Method coursier/util/InMemoryRepository$.apply:(Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
         7: areturn
    Signature: #50                          // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;)Lcoursier/util/InMemoryRepository;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      fallbacks                      final

  public static boolean exists(java.net.URL, boolean, scala.Option<coursier.cache.FileCache<scala.runtime.Nothing$>>);
    descriptor: (Ljava/net/URL;ZLscala/Option;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #37                 // Field coursier/util/InMemoryRepository$.MODULE$:Lcoursier/util/InMemoryRepository$;
         3: aload_0
         4: iload_1
         5: aload_2
         6: invokevirtual #58                 // Method coursier/util/InMemoryRepository$.exists:(Ljava/net/URL;ZLscala/Option;)Z
         9: ireturn
    Signature: #55                          // (Ljava/net/URL;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Z
    MethodParameters:
      Name                           Flags
      url                            final
      localArtifactsShouldBeCached   final
      cacheOpt                       final

  public static boolean exists(java.net.URL, boolean);
    descriptor: (Ljava/net/URL;Z)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #37                 // Field coursier/util/InMemoryRepository$.MODULE$:Lcoursier/util/InMemoryRepository$;
         3: aload_0
         4: iload_1
         5: invokevirtual #61                 // Method coursier/util/InMemoryRepository$.exists:(Ljava/net/URL;Z)Z
         8: ireturn
    Deprecated: true
    MethodParameters:
      Name                           Flags
      url                            final
      localArtifactsShouldBeCached   final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/InMemoryRepository;
    Signature: #64                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/InMemoryRepository;
    Signature: #72                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.lang.String repr();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #81                 // InterfaceMethod coursier/core/Repository.repr$:(Lcoursier/core/Repository;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/InMemoryRepository;

  public <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.ArtifactSource, coursier.core.Project>> findMaybeInterval(coursier.core.Module, java.lang.String, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #92                 // InterfaceMethod coursier/core/Repository.findMaybeInterval$:(Lcoursier/core/Repository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
         9: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/util/InMemoryRepository;
            0      10     1 module   Lcoursier/core/Module;
            0      10     2 version   Ljava/lang/String;
            0      10     3 fetch   Lscala/Function1;
            0      10     4     F   Lcoursier/util/Monad;
    Signature: #84                          // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/ArtifactSource;Lcoursier/core/Project;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      version                        final
      fetch                          final
      F                              final

  public <F extends java.lang.Object> scala.Option<coursier.core.Repository$Complete<F>> completeOpt(scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #104                // InterfaceMethod coursier/core/Repository.completeOpt$:(Lcoursier/core/Repository;Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
         6: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/util/InMemoryRepository;
            0       7     1 fetch   Lscala/Function1;
            0       7     2 evidence$1   Lcoursier/util/Monad;
    Signature: #99                          // <F:Ljava/lang/Object;>(Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lscala/Option<Lcoursier/core/Repository$Complete<TF;>;>;
    MethodParameters:
      Name                           Flags
      fetch                          final
      evidence$1                     final

  public boolean versionsCheckHasModule();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #110                // InterfaceMethod coursier/core/Repository.versionsCheckHasModule$:(Lcoursier/core/Repository;)Z
         4: ireturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/InMemoryRepository;

  public <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.Versions, java.lang.String>> versions(coursier.core.Module, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #117                // InterfaceMethod coursier/core/Repository.versions$:(Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
         7: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/util/InMemoryRepository;
            0       8     1 module   Lcoursier/core/Module;
            0       8     2 fetch   Lscala/Function1;
            0       8     3     F   Lcoursier/util/Monad;
    Signature: #113                         // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      fetch                          final
      F                              final

  public <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.Versions, java.lang.String>> versions(coursier.core.Module, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, boolean, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: iload_3
         4: aload         4
         6: invokestatic  #122                // InterfaceMethod coursier/core/Repository.versions$:(Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
         9: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/util/InMemoryRepository;
            0      10     1 module   Lcoursier/core/Module;
            0      10     2 fetch   Lscala/Function1;
            0      10     3 versionsCheckHasModule   Z
            0      10     4     F   Lcoursier/util/Monad;
    Signature: #119                         // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;ZLcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      fetch                          final
      versionsCheckHasModule         final
      F                              final

  public <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.Versions, java.lang.String>> fetchVersions(coursier.core.Module, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #126                // InterfaceMethod coursier/core/Repository.fetchVersions$:(Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
         7: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/util/InMemoryRepository;
            0       8     1 module   Lcoursier/core/Module;
            0       8     2 fetch   Lscala/Function1;
            0       8     3     F   Lcoursier/util/Monad;
    Signature: #113                         // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      fetch                          final
      F                              final

  public scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>> fallbacks();
    descriptor: ()Lscala/collection/immutable/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #130                // Field fallbacks:Lscala/collection/immutable/Map;
         4: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/InMemoryRepository;
    Signature: #128                         // ()Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;

  public boolean localArtifactsShouldBeCached();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #132                // Field localArtifactsShouldBeCached:Z
         4: ireturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/InMemoryRepository;

  public scala.Option<coursier.cache.FileCache<scala.runtime.Nothing$>> cacheOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #136                // Field cacheOpt:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/InMemoryRepository;
    Signature: #134                         // ()Lscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;

  public <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.ArtifactSource, coursier.core.Project>> find(coursier.core.Module, java.lang.String, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=5
         0: aload_0
         1: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
         4: new           #141                // class scala/Tuple2
         7: dup
         8: aload_1
         9: aload_2
        10: invokespecial #145                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        13: invokeinterface #151,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        18: invokedynamic #171,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        23: aload_0
        24: aload_1
        25: aload_2
        26: invokedynamic #183,  0            // InvokeDynamic #1:apply:(Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;)Lscala/Function1;
        31: invokevirtual #189                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        34: checkcast     #191                // class scala/util/Either
        37: astore        5
        39: new           #193                // class coursier/util/EitherT
        42: dup
        43: aload         4
        45: aload         5
        47: invokeinterface #198,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        52: invokespecial #201                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
        55: areturn
      LineNumberTable:
        line 147: 0
        line 148: 4
        line 149: 18
        line 185: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      16     5   res   Lscala/util/Either;
            0      56     0  this   Lcoursier/util/InMemoryRepository;
            0      56     1 module   Lcoursier/core/Module;
            0      56     2 version   Ljava/lang/String;
            0      56     3 fetch   Lscala/Function1;
            0      56     4     F   Lcoursier/util/Monad;
    Signature: #84                          // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/ArtifactSource;Lcoursier/core/Project;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      version                        final
      fetch                          final
      F                              final

  public scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Publication, coursier.util.Artifact>> artifacts(coursier.core.Dependency, coursier.core.Project, scala.Option<scala.collection.immutable.Seq<coursier.core.Classifier>>);
    descriptor: (Lcoursier/core/Dependency;Lcoursier/core/Project;Lscala/Option;)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: getstatic     #214                // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
         7: aload_1
         8: invokevirtual #220                // Method coursier/core/Dependency.moduleVersion:()Lscala/Tuple2;
        11: invokeinterface #151,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        16: invokevirtual #224                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
        19: invokeinterface #230,  1          // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
        24: aload_1
        25: invokedynamic #240,  0            // InvokeDynamic #2:apply:(Lcoursier/core/Dependency;)Lscala/Function1;
        30: invokeinterface #246,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        35: checkcast     #242                // class scala/collection/immutable/Seq
        38: areturn
      LineNumberTable:
        line 194: 0
        line 193: 3
        line 194: 7
        line 196: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lcoursier/util/InMemoryRepository;
            0      39     1 dependency   Lcoursier/core/Dependency;
            0      39     2 project   Lcoursier/core/Project;
            0      39     3 overrideClassifiers   Lscala/Option;
    Signature: #206                         // (Lcoursier/core/Dependency;Lcoursier/core/Project;Lscala/Option<Lscala/collection/immutable/Seq<Lcoursier/core/Classifier;>;>;)Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Publication;Lcoursier/util/Artifact;>;>;
    MethodParameters:
      Name                           Flags
      dependency                     final
      project                        final
      overrideClassifiers            final

  public coursier.util.InMemoryRepository withFallbacks(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>);
    descriptor: (Lscala/collection/immutable/Map;)Lcoursier/util/InMemoryRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/util/InMemoryRepository
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #251                // Method localArtifactsShouldBeCached:()Z
         9: aload_0
        10: invokevirtual #253                // Method cacheOpt:()Lscala/Option;
        13: invokespecial #256                // Method "<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
        16: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/util/InMemoryRepository;
            0      17     1 fallbacks   Lscala/collection/immutable/Map;
    Signature: #50                          // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;)Lcoursier/util/InMemoryRepository;
    MethodParameters:
      Name                           Flags
      fallbacks                      final

  public coursier.util.InMemoryRepository withLocalArtifactsShouldBeCached(boolean);
    descriptor: (Z)Lcoursier/util/InMemoryRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/util/InMemoryRepository
         3: dup
         4: aload_0
         5: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
         8: iload_1
         9: aload_0
        10: invokevirtual #253                // Method cacheOpt:()Lscala/Option;
        13: invokespecial #256                // Method "<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
        16: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/util/InMemoryRepository;
            0      17     1 localArtifactsShouldBeCached   Z
    MethodParameters:
      Name                           Flags
      localArtifactsShouldBeCached   final

  public coursier.util.InMemoryRepository withCacheOpt(scala.Option<coursier.cache.FileCache<scala.runtime.Nothing$>>);
    descriptor: (Lscala/Option;)Lcoursier/util/InMemoryRepository;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class coursier/util/InMemoryRepository
         3: dup
         4: aload_0
         5: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
         8: aload_0
         9: invokevirtual #251                // Method localArtifactsShouldBeCached:()Z
        12: aload_1
        13: invokespecial #256                // Method "<init>":(Lscala/collection/immutable/Map;ZLscala/Option;)V
        16: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/util/InMemoryRepository;
            0      17     1 cacheOpt   Lscala/Option;
    Signature: #261                         // (Lscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)Lcoursier/util/InMemoryRepository;
    MethodParameters:
      Name                           Flags
      cacheOpt                       final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #264                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #266                // String InMemoryRepository(
         7: invokespecial #269                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
        16: invokestatic  #275                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #281                // String ,
        27: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: aload_0
        33: invokevirtual #251                // Method localArtifactsShouldBeCached:()Z
        36: invokestatic  #284                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
        39: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: pop
        43: aload_1
        44: ldc_w         #281                // String ,
        47: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #253                // Method cacheOpt:()Lscala/Option;
        56: invokestatic  #275                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        59: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: pop
        63: aload_1
        64: ldc_w         #286                // String )
        67: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: pop
        71: aload_1
        72: invokevirtual #288                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        75: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      64     1     b   Ljava/lang/StringBuilder;
            0      76     0  this   Lcoursier/util/InMemoryRepository;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/util/InMemoryRepository
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/util/InMemoryRepository;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     100
         5: aload_0
         6: aload_1
         7: invokevirtual #297                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          104
        13: aload_1
        14: checkcast     #2                  // class coursier/util/InMemoryRepository
        17: astore_2
        18: iconst_1
        19: ifeq          96
        22: aload_0
        23: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
        26: aload_2
        27: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          96
        43: aload_3
        44: invokevirtual #299                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          96
        50: aload_0
        51: invokevirtual #251                // Method localArtifactsShouldBeCached:()Z
        54: aload_2
        55: invokevirtual #251                // Method localArtifactsShouldBeCached:()Z
        58: if_icmpne     96
        61: aload_0
        62: invokevirtual #253                // Method cacheOpt:()Lscala/Option;
        65: aload_2
        66: invokevirtual #253                // Method cacheOpt:()Lscala/Option;
        69: astore        4
        71: dup
        72: ifnonnull     84
        75: pop
        76: aload         4
        78: ifnull        92
        81: goto          96
        84: aload         4
        86: invokevirtual #299                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        89: ifeq          96
        92: iconst_1
        93: goto          97
        96: iconst_0
        97: ifeq          104
       100: iconst_1
       101: goto          105
       104: iconst_0
       105: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/util/InMemoryRepository, class java/lang/Object, class coursier/util/InMemoryRepository, class scala/collection/immutable/Map ]
          stack = [ class scala/collection/immutable/Map ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class coursier/util/InMemoryRepository, class java/lang/Object, class coursier/util/InMemoryRepository, class scala/collection/immutable/Map, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      79     2 other   Lcoursier/util/InMemoryRepository;
            0     106     0  this   Lcoursier/util/InMemoryRepository;
            0     106     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #304                // String InMemoryRepository
         5: invokestatic  #310                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
        18: invokestatic  #310                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: aload_0
        28: invokevirtual #251                // Method localArtifactsShouldBeCached:()Z
        31: ifeq          40
        34: sipush        1231
        37: goto          43
        40: sipush        1237
        43: iadd
        44: istore_1
        45: bipush        37
        47: iload_1
        48: imul
        49: aload_0
        50: invokevirtual #253                // Method cacheOpt:()Lscala/Option;
        53: invokestatic  #310                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        56: iadd
        57: istore_1
        58: bipush        37
        60: iload_1
        61: imul
        62: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ class coursier/util/InMemoryRepository, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/util/InMemoryRepository, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      52     1  code   I
            0      63     0  this   Lcoursier/util/InMemoryRepository;

  private scala.Tuple3<scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>, java.lang.Object, scala.Option<coursier.cache.FileCache<scala.runtime.Nothing$>>> tuple();
    descriptor: ()Lscala/Tuple3;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=1, args_size=1
         0: new           #317                // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
         8: aload_0
         9: invokevirtual #251                // Method localArtifactsShouldBeCached:()Z
        12: invokestatic  #323                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        15: aload_0
        16: invokevirtual #253                // Method cacheOpt:()Lscala/Option;
        19: invokespecial #326                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        22: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/util/InMemoryRepository;
    Signature: #315                         // ()Lscala/Tuple3<Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;Ljava/lang/Object;Lscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #304                // String InMemoryRepository
         3: areturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/util/InMemoryRepository;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_3
         1: ireturn
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/util/InMemoryRepository;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 35
                       2: 45
                 default: 52
            }
        28: aload_0
        29: invokevirtual #139                // Method fallbacks:()Lscala/collection/immutable/Map;
        32: goto          67
        35: aload_0
        36: invokevirtual #251                // Method localArtifactsShouldBeCached:()Z
        39: invokestatic  #323                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        42: goto          67
        45: aload_0
        46: invokevirtual #253                // Method cacheOpt:()Lscala/Option;
        49: goto          67
        52: new           #333                // class java/lang/IndexOutOfBoundsException
        55: dup
        56: iload_2
        57: invokestatic  #337                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        60: invokevirtual #338                // Method java/lang/Object.toString:()Ljava/lang/String;
        63: invokespecial #339                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        66: athrow
        67: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lcoursier/util/InMemoryRepository;
            0      68     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 2
                       0: 28
                       1: 34
                       2: 40
                 default: 46
            }
        28: ldc_w         #342                // String fallbacks
        31: goto          61
        34: ldc_w         #343                // String localArtifactsShouldBeCached
        37: goto          61
        40: ldc_w         #344                // String cacheOpt
        43: goto          61
        46: new           #333                // class java/lang/IndexOutOfBoundsException
        49: dup
        50: iload_2
        51: invokestatic  #337                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        54: invokevirtual #338                // Method java/lang/Object.toString:()Ljava/lang/String;
        57: invokespecial #339                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        60: athrow
        61: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 133: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lcoursier/util/InMemoryRepository;
            0      62     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.util.Left $anonfun$find$1();
    descriptor: ()Lscala/util/Left;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #349                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #353                // Method scala/package$.Left:()Lscala/util/Left$;
         6: ldc_w         #355                // String No fallback URL found
         9: invokevirtual #360                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        12: areturn
      LineNumberTable:
        line 149: 0

  public static final scala.util.Either $anonfun$find$2(coursier.util.InMemoryRepository, coursier.core.Module, java.lang.String, scala.Tuple2);
    descriptor: (Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=16, locals=17, args_size=4
         0: aload_3
         1: astore        6
         3: aload         6
         5: ifnull        325
         8: aload         6
        10: invokevirtual #367                // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #369                // class java/net/URL
        16: astore        7
        18: aload         7
        20: invokevirtual #372                // Method java/net/URL.toExternalForm:()Ljava/lang/String;
        23: astore        8
        25: aload         8
        27: bipush        47
        29: invokevirtual #376                // Method java/lang/String.lastIndexOf:(I)I
        32: istore        9
        34: iload         9
        36: iconst_0
        37: if_icmplt     51
        40: aload         8
        42: ldc_w         #378                // String /
        45: invokevirtual #382                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        48: ifeq          87
        51: getstatic     #349                // Field scala/package$.MODULE$:Lscala/package$;
        54: invokevirtual #353                // Method scala/package$.Left:()Lscala/util/Left$;
        57: new           #264                // class java/lang/StringBuilder
        60: dup
        61: ldc_w         #385                // int 24
        64: invokespecial #388                // Method java/lang/StringBuilder."<init>":(I)V
        67: aload         7
        69: invokevirtual #391                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        72: ldc_w         #393                // String  doesn\'t point to a file
        75: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        78: invokevirtual #288                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        81: invokevirtual #360                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        84: goto          320
        87: getstatic     #398                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        90: getstatic     #403                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        93: aload         8
        95: invokevirtual #407                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        98: iload         9
       100: iconst_1
       101: iadd
       102: invokevirtual #411                // Method scala/collection/StringOps$.splitAt$extension:(Ljava/lang/String;I)Lscala/Tuple2;
       105: astore        11
       107: aload         11
       109: ifnull        148
       112: aload         11
       114: invokevirtual #367                // Method scala/Tuple2._1:()Ljava/lang/Object;
       117: checkcast     #271                // class java/lang/String
       120: astore        12
       122: aload         11
       124: invokevirtual #414                // Method scala/Tuple2._2:()Ljava/lang/Object;
       127: checkcast     #271                // class java/lang/String
       130: astore        13
       132: new           #141                // class scala/Tuple2
       135: dup
       136: aload         12
       138: aload         13
       140: invokespecial #145                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       143: astore        5
       145: goto          161
       148: goto          151
       151: new           #416                // class scala/MatchError
       154: dup
       155: aload         11
       157: invokespecial #417                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       160: athrow
       161: aload         5
       163: astore        10
       165: aload         10
       167: invokevirtual #367                // Method scala/Tuple2._1:()Ljava/lang/Object;
       170: checkcast     #271                // class java/lang/String
       173: astore        14
       175: aload         10
       177: invokevirtual #414                // Method scala/Tuple2._2:()Ljava/lang/Object;
       180: checkcast     #271                // class java/lang/String
       183: astore        15
       185: getstatic     #37                 // Field coursier/util/InMemoryRepository$.MODULE$:Lcoursier/util/InMemoryRepository$;
       188: aload         7
       190: aload_0
       191: invokevirtual #251                // Method localArtifactsShouldBeCached:()Z
       194: aload_0
       195: invokevirtual #253                // Method cacheOpt:()Lscala/Option;
       198: invokevirtual #58                 // Method coursier/util/InMemoryRepository$.exists:(Ljava/net/URL;ZLscala/Option;)Z
       201: ifeq          282
       204: getstatic     #422                // Field coursier/core/Project$.MODULE$:Lcoursier/core/Project$;
       207: aload_1
       208: aload_2
       209: getstatic     #427                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       212: getstatic     #403                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       215: invokevirtual #431                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       218: invokevirtual #436                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
       221: getstatic     #441                // Field scala/None$.MODULE$:Lscala/None$;
       224: getstatic     #427                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       227: getstatic     #427                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       230: getstatic     #427                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       233: getstatic     #441                // Field scala/None$.MODULE$:Lscala/None$;
       236: getstatic     #441                // Field scala/None$.MODULE$:Lscala/None$;
       239: getstatic     #441                // Field scala/None$.MODULE$:Lscala/None$;
       242: iconst_0
       243: getstatic     #441                // Field scala/None$.MODULE$:Lscala/None$;
       246: getstatic     #427                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       249: getstatic     #446                // Field coursier/core/Info$.MODULE$:Lcoursier/core/Info$;
       252: invokevirtual #449                // Method coursier/core/Info$.empty:()Lcoursier/core/Info;
       255: invokevirtual #452                // Method coursier/core/Project$.apply:(Lcoursier/core/Module;Ljava/lang/String;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Map;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/Option;Lscala/Option;Lscala/Option;ZLscala/Option;Lscala/collection/immutable/Seq;Lcoursier/core/Info;)Lcoursier/core/Project;
       258: astore        16
       260: getstatic     #349                // Field scala/package$.MODULE$:Lscala/package$;
       263: invokevirtual #456                // Method scala/package$.Right:()Lscala/util/Right$;
       266: new           #141                // class scala/Tuple2
       269: dup
       270: aload_0
       271: aload         16
       273: invokespecial #145                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       276: invokevirtual #461                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       279: goto          320
       282: getstatic     #349                // Field scala/package$.MODULE$:Lscala/package$;
       285: invokevirtual #353                // Method scala/package$.Left:()Lscala/util/Left$;
       288: new           #264                // class java/lang/StringBuilder
       291: dup
       292: ldc_w         #462                // int 17
       295: invokespecial #388                // Method java/lang/StringBuilder."<init>":(I)V
       298: aload         15
       300: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       303: ldc_w         #464                // String  not found under
       306: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       309: aload         14
       311: invokevirtual #279                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       314: invokevirtual #288                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       317: invokevirtual #360                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       320: astore        4
       322: goto          338
       325: goto          328
       328: new           #416                // class scala/MatchError
       331: dup
       332: aload         6
       334: invokespecial #417                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       337: athrow
       338: aload         4
       340: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class coursier/util/InMemoryRepository, class coursier/core/Module, class java/lang/String, class scala/Tuple2, top, top, class scala/Tuple2, class java/net/URL, class java/lang/String, int ]
          stack = []
        frame_type = 35 /* same */
        frame_type = 253 /* append */
          offset_delta = 60
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/util/InMemoryRepository, class coursier/core/Module, class java/lang/String, class scala/Tuple2, top, class scala/Tuple2, class scala/Tuple2, class java/net/URL, class java/lang/String, int, top, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 120
          locals = [ class coursier/util/InMemoryRepository, class coursier/core/Module, class java/lang/String, class scala/Tuple2, top, class scala/Tuple2, class scala/Tuple2, class java/net/URL, class java/lang/String, int, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class coursier/util/InMemoryRepository, class coursier/core/Module, class java/lang/String, class scala/Tuple2, top, top, class scala/Tuple2, class java/net/URL, class java/lang/String, int ]
          stack = [ class scala/util/Either ]
        frame_type = 248 /* chop */
          offset_delta = 4
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/util/InMemoryRepository, class coursier/core/Module, class java/lang/String, class scala/Tuple2, class scala/util/Either, top, class scala/Tuple2, class java/net/URL, class java/lang/String, int ]
          stack = []
      LineNumberTable:
        line 149: 0
        line 150: 3
        line 152: 18
        line 153: 25
        line 155: 34
        line 156: 51
        line 158: 87
        line 160: 185
        line 161: 204
        line 162: 207
        line 163: 208
        line 164: 209
        line 165: 212
        line 166: 221
        line 167: 224
        line 168: 227
        line 169: 230
        line 170: 233
        line 171: 236
        line 172: 239
        line 173: 242
        line 174: 243
        line 175: 246
        line 176: 249
        line 179: 260
        line 181: 282
        line 150: 325
        line 149: 328
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          122      26    12 dirUrlStr   Ljava/lang/String;
          132      16    13 fileName   Ljava/lang/String;
          260      19    16  proj   Lcoursier/core/Project;
          175     145    14 dirUrlStr   Ljava/lang/String;
          185     135    15 fileName   Ljava/lang/String;
           25     295     8 urlStr   Ljava/lang/String;
           34     286     9   idx   I
           18     307     7   url   Ljava/net/URL;
            0     341     0 $this   Lcoursier/util/InMemoryRepository;
            0     341     1 module$1   Lcoursier/core/Module;
            0     341     2 version$1   Ljava/lang/String;
            0     341     3  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      module$1                       final
      version$1                      final
      x0$1                           final

  public static final scala.Tuple2 $anonfun$artifacts$1(coursier.core.Dependency, scala.Tuple2);
    descriptor: (Lcoursier/core/Dependency;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=10, locals=9, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        114
         6: aload_3
         7: invokevirtual #367                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #369                // class java/net/URL
        13: astore        4
        15: aload_3
        16: invokevirtual #475                // Method scala/Tuple2._2$mcZ$sp:()Z
        19: istore        5
        21: aload         4
        23: invokevirtual #476                // Method java/net/URL.toString:()Ljava/lang/String;
        26: astore        6
        28: aload         6
        30: aload         6
        32: bipush        46
        34: invokevirtual #376                // Method java/lang/String.lastIndexOf:(I)I
        37: iconst_1
        38: iadd
        39: invokevirtual #479                // Method java/lang/String.substring:(I)Ljava/lang/String;
        42: astore        7
        44: getstatic     #484                // Field coursier/core/Publication$.MODULE$:Lcoursier/core/Publication$;
        47: aload_0
        48: invokevirtual #487                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        51: invokevirtual #490                // Method coursier/core/Module.name:()Ljava/lang/String;
        54: aload         7
        56: aload         7
        58: getstatic     #495                // Field coursier/core/Classifier$.MODULE$:Lcoursier/core/Classifier$;
        61: invokevirtual #497                // Method coursier/core/Classifier$.empty:()Ljava/lang/String;
        64: invokevirtual #500                // Method coursier/core/Publication$.apply:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcoursier/core/Publication;
        67: astore        8
        69: new           #141                // class scala/Tuple2
        72: dup
        73: aload         8
        75: getstatic     #505                // Field coursier/util/Artifact$.MODULE$:Lcoursier/util/Artifact$;
        78: aload         6
        80: getstatic     #403                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        83: invokevirtual #431                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
        86: invokevirtual #436                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
        89: getstatic     #403                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        92: invokevirtual #431                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
        95: invokevirtual #436                // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
        98: iload         5
       100: iconst_0
       101: getstatic     #441                // Field scala/None$.MODULE$:Lscala/None$;
       104: invokevirtual #508                // Method coursier/util/Artifact$.apply:(Ljava/lang/String;Lscala/collection/immutable/Map;Lscala/collection/immutable/Map;ZZLscala/Option;)Lcoursier/util/Artifact;
       107: invokespecial #145                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       110: astore_2
       111: goto          126
       114: goto          117
       117: new           #416                // class scala/MatchError
       120: dup
       121: aload_3
       122: invokespecial #417                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       125: athrow
       126: aload_2
       127: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 114
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/core/Dependency, class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class java/net/URL, int, class java/lang/String, class java/lang/String, class coursier/core/Publication ]
          stack = []
      LineNumberTable:
        line 196: 0
        line 197: 2
        line 198: 21
        line 199: 28
        line 200: 44
        line 201: 47
        line 202: 54
        line 203: 56
        line 204: 58
        line 206: 69
        line 197: 114
        line 196: 117
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           28      82     6  url0   Ljava/lang/String;
           44      66     7   ext   Ljava/lang/String;
           69      41     8   pub   Lcoursier/core/Publication;
           15      99     4   url   Ljava/net/URL;
           21      93     5 changing   Z
            0     128     0 dependency$1   Lcoursier/core/Dependency;
            0     128     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      dependency$1                   final
      x0$1                           final

  public coursier.util.InMemoryRepository(scala.collection.immutable.Map<scala.Tuple2<coursier.core.Module, java.lang.String>, scala.Tuple2<java.net.URL, java.lang.Object>>, boolean, scala.Option<coursier.cache.FileCache<scala.runtime.Nothing$>>);
    descriptor: (Lscala/collection/immutable/Map;ZLscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #130                // Field fallbacks:Lscala/collection/immutable/Map;
         5: aload_0
         6: iload_2
         7: putfield      #132                // Field localArtifactsShouldBeCached:Z
        10: aload_0
        11: aload_3
        12: putfield      #136                // Field cacheOpt:Lscala/Option;
        15: aload_0
        16: invokespecial #519                // Method java/lang/Object."<init>":()V
        19: aload_0
        20: invokestatic  #523                // InterfaceMethod coursier/core/Repository.$init$:(Lcoursier/core/Repository;)V
        23: aload_0
        24: invokestatic  #526                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        27: return
      LineNumberTable:
        line 133: 0
        line 137: 15
        line 133: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/util/InMemoryRepository;
            0      28     1 fallbacks   Lscala/collection/immutable/Map;
            0      28     2 localArtifactsShouldBeCached   Z
            0      28     3 cacheOpt   Lscala/Option;
    Signature: #516                         // (Lscala/collection/immutable/Map<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;Lscala/Tuple2<Ljava/net/URL;Ljava/lang/Object;>;>;ZLscala/Option<Lcoursier/cache/FileCache<Lscala/runtime/Nothing$;>;>;)V
    MethodParameters:
      Name                           Flags
      fallbacks                      final
      localArtifactsShouldBeCached   final
      cacheOpt                       final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #538,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #15= #14 of #6;           // Complete=class coursier/core/Repository$Complete of class coursier/core/Repository
  public static final #20= #17 of #19;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "InMemoryRepository.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\tEs!\u0002\u0012$\u0011\u0003Ac!\u0002\u0016$\u0011\u0003Y\u0003\"\u0002\u001e\u0002\t\u0003Y\u0004\"\u0002\u001f\u0002\t\u0003i\u0004\"\u0002\u001f\u0002\t\u0003\u0019\u0006\"\u00023\u0002\t\u0003)\u0007\u0002\u0003B\r\u0003\u0011\u0005QEa\u0007\t\r\u0011\fA\u0011\u0001B\u0010\u0011!\u0011I\"\u0001C\u0001K\t\u001d\u0002B\u00023\u0002\t\u0003\u0011i\u0003\u0003\u0004e\u0003\u0011\u0005!q\b\u0005\n\u0005\u000f\n\u0011\u0011!C\u0005\u0005\u00132AAK\u0012\u0003O\"AA\u0010\u0004BC\u0002\u0013\u0005Q\u0010C\u0005\u0002\"1\u0011\t\u0011)A\u0005}\"I!\n\u0004BC\u0002\u0013\u0005\u00111\u0005\u0005\n\u0003Ka!\u0011!Q\u0001\nyB\u0011b\u0016\u0007\u0003\u0006\u0004%\t!a\n\t\u0013\u0005%BB!A!\u0002\u0013A\u0006B\u0002\u001e\r\t\u0003\tY\u0003C\u0004\u000241!\t!!\u000e\t\u000f\u0005%E\u0002\"\u0001\u0002\f\"9\u0011Q\u0018\u0007\u0005\u0002\u0005}\u0006bBAb\u0019\u0011\u0005\u0011Q\u0019\u0005\b\u0003\u0013dA\u0011AAf\u0011\u001d\ty\r\u0004C!\u0003#Dq!!8\r\t\u0003\ny\u000eC\u0004\u0002f2!\t%a:\t\u000f\u0005-H\u0002\"\u0011\u0002n\"9\u0011Q\u001f\u0007\u0005\n\u0005]\bbBA\u0000\u0019\u0011\u0005#\u0011\u0001\u0005\b\u0005\u0007aA\u0011\tB\u0003\u0011\u001d\u00119\u0001\u0004C!\u0005\u0013AqAa\u0004\r\t\u0003\u0012\t\"\u0001\nJ]6+Wn\u001c:z%\u0016\u0004xn]5u_JL(B\u0001\u0013&\u0003\u0011)H/\u001b7\u000b\u0003\u0019\n\u0001bY8veNLWM]\u0002\u0001!\tI\u0013!D\u0001$\u0005IIe.T3n_JL(+\u001a9pg&$xN]=\u0014\u0007\u0005a#\u0007\u0005\u0002.a5\taFC\u00010\u0003\u0015\u00198-\u00197b\u0013\t\tdF\u0001\u0004B]f\u0014VM\u001a\t\u0003gaj\u0011\u0001\u000e\u0006\u0003kY\n!![8\u000b\u0003]\nAA[1wC&\u0011\u0011\b\u000e\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.Z\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003!\na!\u001a=jgR\u001cHc\u0001 B\u0013B\u0011QfP\u0005\u0003\u0001:\u0012qAQ8pY\u0016\fg\u000eC\u0003C\u0007\u0001\u00071)A\u0002ve2\u0004\"\u0001R$\u000e\u0003\u0015S!A\u0012\u001c\u0002\u00079,G/\u0003\u0002I\u000b\n\u0019QK\u0015\'\t\u000b)\u001b\u0001\u0019\u0001 \u000291|7-\u00197BeRLg-Y2ugNCw.\u001e7e\u0005\u0016\u001c\u0015m\u00195fI\"\"1\u0001T(R!\tiS*\u0003\u0002O]\tQA-\u001a9sK\u000e\fG/\u001a3\"\u0003A\u000b!%V:fAQDW\rI8wKJ\u0014\u0018\u000eZ3!C\u000e\u001cW\r\u001d;j]\u001e\u0004\u0013\rI2bG\",\u0017%\u0001*\u0002\u0013Ir\u0003G\f\u0019.%\u000e\u001bD\u0003\u0002 U+ZCQA\u0011\u0003A\u0002\rCQA\u0013\u0003A\u0002yBQa\u0016\u0003A\u0002a\u000b\u0001bY1dQ\u0016|\u0005\u000f\u001e\t\u0004[e[\u0016B\u0001./\u0005\u0019y\u0005\u000f^5p]B\u0019AlX1\u000e\u0003uS!AX\u0013\u0002\u000b\r\f7\r[3\n\u0005\u0001l&!\u0003$jY\u0016\u001c\u0015m\u00195f!\ti#-\u0003\u0002d]\t9aj\u001c;iS:<\u0017!B1qa2LHc\u00014\u0003\u0016A\u0011\u0011\u0006D\n\u0006\u00191Bg.\u001d\t\u0003S2l\u0011A\u001b\u0006\u0003W\u0016\nAaY8sK&\u0011QN\u001b\u0002\u000b%\u0016\u0004xn]5u_JL\bCA\u0017p\u0013\t\u0001hFA\u0004Qe>$Wo\u0019;\u0011\u0005IThBA:y\u001d\t!x/D\u0001v\u0015\t1x%\u0001\u0004=e>|GOP\u0005\u0002_%\u0011\u0011PL\u0001\ba\u0006\u001c7.Y4f\u0013\tI4P\u0003\u0002z]\u0005Ia-\u00197mE\u0006\u001c7n]\u000b\u0002}B9q0a\u0002\u0002\u000e\u0005}a\u0002BA\u0001\u0003\u0007\u0001\"\u0001\u001e\u0018\n\u0007\u0005\u0015a&\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u0003\u0013\tYAA\u0002NCBT1!!\u0002/!\u001di\u0013qBA\n\u00033I1!!\u0005/\u0005\u0019!V\u000f\u001d7feA\u0019\u0011.!\u0006\n\u0007\u0005]!N\u0001\u0004N_\u0012,H.\u001a\t\u0004\u007f\u0006m\u0011\u0002BA\u000f\u0003\u0017\u0011aa\u0015;sS:<\u0007#B\u0017\u0002\u0010\rs\u0014A\u00034bY2\u0014\u0017mY6tAU\ta(A\u000fm_\u000e\fG.\u0011:uS\u001a\f7\r^:TQ>,H\u000e\u001a\"f\u0007\u0006\u001c\u0007.\u001a3!+\u0005A\u0016!C2bG\",w\n\u001d;!)\u001d1\u0017QFA\u0018\u0003cAQ\u0001`\nA\u0002yDQAS\nA\u0002yBQaV\nA\u0002a\u000bAAZ5oIV!\u0011qGA#)!\tI$a\u001c\u0002t\u0005]D\u0003BA\u001e\u0003K\u0002\u0012\"KA\u001f\u0003\u0003\nI\"a\u0016\n\u0007\u0005}2EA\u0004FSRDWM\u001d+\u0011\t\u0005\r\u0013Q\t\u0007\u0001\t\u001d\t9\u0005\u0006b\u0001\u0003\u0013\u0012\u0011AR\u000b\u0005\u0003\u0017\n\u0019&E\u0002b\u0003\u001b\u00022!LA(\u0013\r\t\tF\f\u0002\u0004\u0003:LH\u0001CA+\u0003\u000b\u0012\r!a\u0013\u0003\u0003}\u0003r!LA\b\u00033\ny\u0006E\u0002j\u00037J1!!\u0018k\u00059\t%\u000f^5gC\u000e$8k\\;sG\u0016\u00042![A1\u0013\r\t\u0019G\u001b\u0002\b!J|\'.Z2u\u0011\u001d\t9\u0007\u0006a\u0002\u0003S\n\u0011A\u0012\t\u0006S\u0005-\u0014\u0011I\u0005\u0004\u0003[\u001a#!B\'p]\u0006$\u0007bBA9)\u0001\u0007\u00111C\u0001\u0007[>$W\u000f\\3\t\u000f\u0005UD\u00031\u0001\u0002\u001a\u00059a/\u001a:tS>t\u0007bBA=)\u0001\u0007\u00111P\u0001\u0006M\u0016$8\r\u001b\t\u0007\u0003{\n\u0019)!\u0011\u000f\u0007%\fy(C\u0002\u0002\u0002*\f!BU3q_NLGo\u001c:z\u0013\u0011\t))a\"\u0003\u000b\u0019+Go\u00195\u000b\u0007\u0005\u0005%.A\u0005beRLg-Y2ugRA\u0011QRAQ\u0003W\u000by\u000bE\u0003s\u0003\u001f\u000b\u0019*C\u0002\u0002\u0012n\u00141aU3r!\u001di\u0013qBAK\u00037\u00032![AL\u0013\r\tIJ\u001b\u0002\f!V\u0014G.[2bi&|g\u000eE\u0002*\u0003;K1!a($\u0005!\t%\u000f^5gC\u000e$\bbBAR+\u0001\u0007\u0011QU\u0001\u000bI\u0016\u0004XM\u001c3f]\u000eL\bcA5\u0002(&\u0019\u0011\u0011\u00166\u0003\u0015\u0011+\u0007/\u001a8eK:\u001c\u0017\u0010C\u0004\u0002.V\u0001\r!a\u0018\u0002\u000fA\u0014xN[3di\"9\u0011\u0011W\u000bA\u0002\u0005M\u0016aE8wKJ\u0014\u0018\u000eZ3DY\u0006\u001c8/\u001b4jKJ\u001c\b\u0003B\u0017Z\u0003k\u0003RA]AH\u0003o\u00032![A]\u0013\r\tYL\u001b\u0002\u000b\u00072\f7o]5gS\u0016\u0014\u0018!D<ji\"4\u0015\r\u001c7cC\u000e\\7\u000fF\u0002g\u0003\u0003DQ\u0001 \fA\u0002y\f\u0001e^5uQ2{7-\u00197BeRLg-Y2ugNCw.\u001e7e\u0005\u0016\u001c\u0015m\u00195fIR\u0019a-a2\t\u000b);\u0002\u0019\u0001 \u0002\u0019]LG\u000f[\"bG\",w\n\u001d;\u0015\u0007\u0019\fi\rC\u0003X1\u0001\u0007\u0001,\u0001\u0005u_N#(/\u001b8h)\t\t\u0019\u000e\u0005\u0003\u0002V\u0006mWBAAl\u0015\r\tINN\u0001\u0005Y\u0006tw-\u0003\u0003\u0002\u001e\u0005]\u0017\u0001C2b]\u0016\u000bX/\u00197\u0015\u0007y\n\t\u000fC\u0004\u0002dj\u0001\r!!\u0014\u0002\u0007=\u0014\'.\u0001\u0004fcV\fGn\u001d\u000b\u0004}\u0005%\bbBAr7\u0001\u0007\u0011QJ\u0001\tQ\u0006\u001c\bnQ8eKR\u0011\u0011q\u001e\t\u0004[\u0005E\u0018bAAz]\t\u0019\u0011J\u001c;\u0002\u000bQ,\b\u000f\\3\u0016\u0005\u0005e\bCB\u0017\u0002|zt\u0004,C\u0002\u0002~:\u0012a\u0001V;qY\u0016\u001c\u0014!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070\u0006\u0002\u0002T\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011q^\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\u0011\tiEa\u0003\t\u000f\t5\u0001\u00051\u0001\u0002p\u0006\ta.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,G\u0003BAj\u0005\'AqA!\u0004\"\u0001\u0004\ty\u000fC\u0003}\u000b\u0001\u0007a\u0010\u000b\u0003\u0006\u0019>\u000b\u0016\u0001\u00049sSZ\fG/Z!qa2LHc\u00014\u0003\u001e!)AP\u0002a\u0001}R)aM!\t\u0003$!)Ap\u0002a\u0001}\")!j\u0002a\u0001}!\"q\u0001T(R)\u00151\'\u0011\u0006B\u0016\u0011\u0015a\b\u00021\u0001\u007f\u0011\u0015Q\u0005\u00021\u0001?+\u0011\u0011yC!\u000f\u0015\u000b\u0019\u0014\tDa\r\t\u000bqL\u0001\u0019\u0001@\t\ryK\u0001\u0019\u0001B\u001b!\u0011avLa\u000e\u0011\t\u0005\r#\u0011\b\u0003\b\u0003\u000fJ!\u0019\u0001B\u001e+\u0011\tYE!\u0010\u0005\u0011\u0005U#\u0011\bb\u0001\u0003\u0017\"rA\u001aB!\u0005\u0007\u0012)\u0005C\u0003}\u0015\u0001\u0007a\u0010C\u0003K\u0015\u0001\u0007a\bC\u0003X\u0015\u0001\u0007\u0001,\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0003LA!\u0011Q\u001bB\'\u0013\u0011\u0011y%a6\u0003\r=\u0013\'.Z2u\u0001"
    )
BootstrapMethods:
  0: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #153 ()Ljava/lang/Object;
      #158 REF_invokeStatic coursier/util/InMemoryRepository.$anonfun$find$1:()Lscala/util/Left;
      #159 ()Lscala/util/Left;
      #160 5
      #161 1
      #159 ()Lscala/util/Left;
  1: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 (Ljava/lang/Object;)Ljava/lang/Object;
      #178 REF_invokeStatic coursier/util/InMemoryRepository.$anonfun$find$2:(Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
      #180 (Lscala/Tuple2;)Lscala/util/Either;
      #160 5
      #161 1
      #180 (Lscala/Tuple2;)Lscala/util/Either;
  2: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 (Ljava/lang/Object;)Ljava/lang/Object;
      #235 REF_invokeStatic coursier/util/InMemoryRepository.$anonfun$artifacts$1:(Lcoursier/core/Dependency;Lscala/Tuple2;)Lscala/Tuple2;
      #237 (Lscala/Tuple2;)Lscala/Tuple2;
      #160 5
      #161 1
      #237 (Lscala/Tuple2;)Lscala/Tuple2;
  3: #535 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #235 REF_invokeStatic coursier/util/InMemoryRepository.$anonfun$artifacts$1:(Lcoursier/core/Dependency;Lscala/Tuple2;)Lscala/Tuple2;
      #158 REF_invokeStatic coursier/util/InMemoryRepository.$anonfun$find$1:()Lscala/util/Left;
      #178 REF_invokeStatic coursier/util/InMemoryRepository.$anonfun$find$2:(Lcoursier/util/InMemoryRepository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  ScalaInlineInfo: length = 0x9A (unknown attribute)
   01 01 00 1E 00 E7 00 E8 01 00 9A 00 9B 01 00 AE
   00 AF 01 00 8E 00 FE 01 00 CC 00 CD 01 00 1A 00
   85 01 01 23 01 24 01 00 61 00 62 01 01 27 01 24
   01 00 15 00 7F 01 00 7B 00 70 01 00 89 00 53 01
   00 52 00 53 01 01 2D 01 2E 01 00 18 00 6A 01 01
   48 01 2E 01 01 49 01 4A 01 01 54 01 55 01 00 47
   00 3F 01 00 3E 00 3F 01 01 47 00 4D 01 00 4C 00
   4D 01 01 06 00 4D 01 01 39 01 3A 01 00 6F 00 70
   01 00 6F 00 76 01 00 69 00 6A 01 01 03 01 04 01
   00 F9 00 31 01 01 01 01 02 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
