Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/output/CountingOutputStream.class
  Last modified May 29, 2022; size 1497 bytes
  SHA-256 checksum 2fdb793ecbc8432375a2ab211be0884cc7fc0c6f91db2355c782972100d94ebe
  Compiled from "CountingOutputStream.java"
public class org.apache.commons.io.output.CountingOutputStream extends org.apache.commons.io.output.ProxyOutputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #17                         // org/apache/commons/io/output/CountingOutputStream
  super_class: #18                        // org/apache/commons/io/output/ProxyOutputStream
  interfaces: 0, fields: 1, methods: 6, attributes: 1
Constant pool:
   #1 = Methodref          #18.#45        // org/apache/commons/io/output/ProxyOutputStream."<init>":(Ljava/io/OutputStream;)V
   #2 = Fieldref           #17.#46        // org/apache/commons/io/output/CountingOutputStream.count:J
   #3 = Methodref          #17.#47        // org/apache/commons/io/output/CountingOutputStream.getByteCount:()J
   #4 = Class              #48            // java/lang/Integer
   #5 = Long               2147483647l
   #7 = Class              #49            // java/lang/ArithmeticException
   #8 = Class              #50            // java/lang/StringBuilder
   #9 = Methodref          #8.#51         // java/lang/StringBuilder."<init>":()V
  #10 = String             #52            // The byte count
  #11 = Methodref          #8.#53         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #12 = Methodref          #8.#54         // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
  #13 = String             #55            //  is too large to be converted to an int
  #14 = Methodref          #8.#56         // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #15 = Methodref          #7.#57         // java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
  #16 = Methodref          #17.#58        // org/apache/commons/io/output/CountingOutputStream.resetByteCount:()J
  #17 = Class              #59            // org/apache/commons/io/output/CountingOutputStream
  #18 = Class              #60            // org/apache/commons/io/output/ProxyOutputStream
  #19 = Utf8               count
  #20 = Utf8               J
  #21 = Utf8               <init>
  #22 = Utf8               (Ljava/io/OutputStream;)V
  #23 = Utf8               Code
  #24 = Utf8               LineNumberTable
  #25 = Utf8               LocalVariableTable
  #26 = Utf8               this
  #27 = Utf8               Lorg/apache/commons/io/output/CountingOutputStream;
  #28 = Utf8               out
  #29 = Utf8               Ljava/io/OutputStream;
  #30 = Utf8               beforeWrite
  #31 = Utf8               (I)V
  #32 = Utf8               n
  #33 = Utf8               I
  #34 = Utf8               getCount
  #35 = Utf8               ()I
  #36 = Utf8               result
  #37 = Utf8               StackMapTable
  #38 = Utf8               resetCount
  #39 = Utf8               getByteCount
  #40 = Utf8               ()J
  #41 = Utf8               resetByteCount
  #42 = Utf8               tmp
  #43 = Utf8               SourceFile
  #44 = Utf8               CountingOutputStream.java
  #45 = NameAndType        #21:#22        // "<init>":(Ljava/io/OutputStream;)V
  #46 = NameAndType        #19:#20        // count:J
  #47 = NameAndType        #39:#40        // getByteCount:()J
  #48 = Utf8               java/lang/Integer
  #49 = Utf8               java/lang/ArithmeticException
  #50 = Utf8               java/lang/StringBuilder
  #51 = NameAndType        #21:#61        // "<init>":()V
  #52 = Utf8               The byte count
  #53 = NameAndType        #62:#63        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #54 = NameAndType        #62:#64        // append:(J)Ljava/lang/StringBuilder;
  #55 = Utf8                is too large to be converted to an int
  #56 = NameAndType        #65:#66        // toString:()Ljava/lang/String;
  #57 = NameAndType        #21:#67        // "<init>":(Ljava/lang/String;)V
  #58 = NameAndType        #41:#40        // resetByteCount:()J
  #59 = Utf8               org/apache/commons/io/output/CountingOutputStream
  #60 = Utf8               org/apache/commons/io/output/ProxyOutputStream
  #61 = Utf8               ()V
  #62 = Utf8               append
  #63 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #64 = Utf8               (J)Ljava/lang/StringBuilder;
  #65 = Utf8               toString
  #66 = Utf8               ()Ljava/lang/String;
  #67 = Utf8               (Ljava/lang/String;)V
{
  private long count;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  public org.apache.commons.io.output.CountingOutputStream(java.io.OutputStream);
    descriptor: (Ljava/io/OutputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #1                  // Method org/apache/commons/io/output/ProxyOutputStream."<init>":(Ljava/io/OutputStream;)V
         5: aload_0
         6: lconst_0
         7: putfield      #2                  // Field count:J
        10: return
      LineNumberTable:
        line 40: 0
        line 32: 5
        line 41: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/CountingOutputStream;
            0      11     1   out   Ljava/io/OutputStream;

  protected synchronized void beforeWrite(int);
    descriptor: (I)V
    flags: (0x0024) ACC_PROTECTED, ACC_SYNCHRONIZED
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: dup
         2: getfield      #2                  // Field count:J
         5: iload_1
         6: i2l
         7: ladd
         8: putfield      #2                  // Field count:J
        11: return
      LineNumberTable:
        line 53: 0
        line 54: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/apache/commons/io/output/CountingOutputStream;
            0      12     1     n   I

  public int getCount();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #3                  // Method getByteCount:()J
         4: lstore_1
         5: lload_1
         6: ldc2_w        #5                  // long 2147483647l
         9: lcmp
        10: ifle          45
        13: new           #7                  // class java/lang/ArithmeticException
        16: dup
        17: new           #8                  // class java/lang/StringBuilder
        20: dup
        21: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
        24: ldc           #10                 // String The byte count
        26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: lload_1
        30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        33: ldc           #13                 // String  is too large to be converted to an int
        35: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        41: invokespecial #15                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        44: athrow
        45: lload_1
        46: l2i
        47: ireturn
      LineNumberTable:
        line 68: 0
        line 69: 5
        line 70: 13
        line 72: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/apache/commons/io/output/CountingOutputStream;
            5      43     1 result   J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ long ]

  public int resetCount();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #16                 // Method resetByteCount:()J
         4: lstore_1
         5: lload_1
         6: ldc2_w        #5                  // long 2147483647l
         9: lcmp
        10: ifle          45
        13: new           #7                  // class java/lang/ArithmeticException
        16: dup
        17: new           #8                  // class java/lang/StringBuilder
        20: dup
        21: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
        24: ldc           #10                 // String The byte count
        26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: lload_1
        30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        33: ldc           #13                 // String  is too large to be converted to an int
        35: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        41: invokespecial #15                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        44: athrow
        45: lload_1
        46: l2i
        47: ireturn
      LineNumberTable:
        line 86: 0
        line 87: 5
        line 88: 13
        line 90: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/apache/commons/io/output/CountingOutputStream;
            5      43     1 result   J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ long ]

  public synchronized long getByteCount();
    descriptor: ()J
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field count:J
         4: lreturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/output/CountingOutputStream;

  public synchronized long resetByteCount();
    descriptor: ()J
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: getfield      #2                  // Field count:J
         4: lstore_1
         5: aload_0
         6: lconst_0
         7: putfield      #2                  // Field count:J
        10: lload_1
        11: lreturn
      LineNumberTable:
        line 118: 0
        line 119: 5
        line 120: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/apache/commons/io/output/CountingOutputStream;
            5       7     1   tmp   J
}
SourceFile: "CountingOutputStream.java"
