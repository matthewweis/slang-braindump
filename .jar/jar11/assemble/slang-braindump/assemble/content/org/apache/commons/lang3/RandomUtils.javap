Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/RandomUtils.class
  Last modified May 29, 2022; size 2113 bytes
  SHA-256 checksum ac9f4de8b26d3ffdbc9a5a417d6a29140cef2632a756f3ba428279268b132d45
  Compiled from "RandomUtils.java"
public class org.apache.commons.lang3.RandomUtils
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #29                         // org/apache/commons/lang3/RandomUtils
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 12, attributes: 1
Constant pool:
   #1 = Methodref          #5.#69         // java/lang/Object."<init>":()V
   #2 = Fieldref           #29.#70        // org/apache/commons/lang3/RandomUtils.RANDOM:Ljava/util/Random;
   #3 = Methodref          #27.#71        // java/util/Random.nextBoolean:()Z
   #4 = String             #72            // Count cannot be negative.
   #5 = Class              #73            // java/lang/Object
   #6 = Methodref          #74.#75        // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
   #7 = Methodref          #27.#76        // java/util/Random.nextBytes:([B)V
   #8 = String             #77            // Start value must be smaller or equal to end value.
   #9 = String             #78            // Both range values must be non-negative.
  #10 = Methodref          #27.#79        // java/util/Random.nextInt:(I)I
  #11 = Class              #80            // java/lang/Integer
  #12 = Integer            2147483647
  #13 = Methodref          #29.#81        // org/apache/commons/lang3/RandomUtils.nextInt:(II)I
  #14 = Methodref          #29.#82        // org/apache/commons/lang3/RandomUtils.nextDouble:(DD)D
  #15 = Class              #83            // java/lang/Long
  #16 = Long               9223372036854775807l
  #18 = Methodref          #29.#84        // org/apache/commons/lang3/RandomUtils.nextLong:(JJ)J
  #19 = Methodref          #27.#85        // java/util/Random.nextDouble:()D
  #20 = Class              #86            // java/lang/Double
  #21 = Double             1.7976931348623157E308d
  #23 = Methodref          #27.#87        // java/util/Random.nextFloat:()F
  #24 = Class              #88            // java/lang/Float
  #25 = Float              3.4028235E38f
  #26 = Methodref          #29.#89        // org/apache/commons/lang3/RandomUtils.nextFloat:(FF)F
  #27 = Class              #90            // java/util/Random
  #28 = Methodref          #27.#69        // java/util/Random."<init>":()V
  #29 = Class              #91            // org/apache/commons/lang3/RandomUtils
  #30 = Utf8               RANDOM
  #31 = Utf8               Ljava/util/Random;
  #32 = Utf8               <init>
  #33 = Utf8               ()V
  #34 = Utf8               Code
  #35 = Utf8               LineNumberTable
  #36 = Utf8               LocalVariableTable
  #37 = Utf8               this
  #38 = Utf8               Lorg/apache/commons/lang3/RandomUtils;
  #39 = Utf8               nextBoolean
  #40 = Utf8               ()Z
  #41 = Utf8               nextBytes
  #42 = Utf8               (I)[B
  #43 = Utf8               count
  #44 = Utf8               I
  #45 = Utf8               result
  #46 = Utf8               [B
  #47 = Utf8               StackMapTable
  #48 = Utf8               nextInt
  #49 = Utf8               (II)I
  #50 = Utf8               startInclusive
  #51 = Utf8               endExclusive
  #52 = Utf8               ()I
  #53 = Utf8               nextLong
  #54 = Utf8               (JJ)J
  #55 = Utf8               J
  #56 = Utf8               ()J
  #57 = Utf8               nextDouble
  #58 = Utf8               (DD)D
  #59 = Utf8               D
  #60 = Utf8               endInclusive
  #61 = Utf8               ()D
  #62 = Utf8               nextFloat
  #63 = Utf8               (FF)F
  #64 = Utf8               F
  #65 = Utf8               ()F
  #66 = Utf8               <clinit>
  #67 = Utf8               SourceFile
  #68 = Utf8               RandomUtils.java
  #69 = NameAndType        #32:#33        // "<init>":()V
  #70 = NameAndType        #30:#31        // RANDOM:Ljava/util/Random;
  #71 = NameAndType        #39:#40        // nextBoolean:()Z
  #72 = Utf8               Count cannot be negative.
  #73 = Utf8               java/lang/Object
  #74 = Class              #92            // org/apache/commons/lang3/Validate
  #75 = NameAndType        #93:#94        // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
  #76 = NameAndType        #41:#95        // nextBytes:([B)V
  #77 = Utf8               Start value must be smaller or equal to end value.
  #78 = Utf8               Both range values must be non-negative.
  #79 = NameAndType        #48:#96        // nextInt:(I)I
  #80 = Utf8               java/lang/Integer
  #81 = NameAndType        #48:#49        // nextInt:(II)I
  #82 = NameAndType        #57:#58        // nextDouble:(DD)D
  #83 = Utf8               java/lang/Long
  #84 = NameAndType        #53:#54        // nextLong:(JJ)J
  #85 = NameAndType        #57:#61        // nextDouble:()D
  #86 = Utf8               java/lang/Double
  #87 = NameAndType        #62:#65        // nextFloat:()F
  #88 = Utf8               java/lang/Float
  #89 = NameAndType        #62:#63        // nextFloat:(FF)F
  #90 = Utf8               java/util/Random
  #91 = Utf8               org/apache/commons/lang3/RandomUtils
  #92 = Utf8               org/apache/commons/lang3/Validate
  #93 = Utf8               isTrue
  #94 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V
  #95 = Utf8               ([B)V
  #96 = Utf8               (I)I
{
  private static final java.util.Random RANDOM;
    descriptor: Ljava/util/Random;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public org.apache.commons.lang3.RandomUtils();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 55: 0
        line 56: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/RandomUtils;

  public static boolean nextBoolean();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #2                  // Field RANDOM:Ljava/util/Random;
         3: invokevirtual #3                  // Method java/util/Random.nextBoolean:()Z
         6: ireturn
      LineNumberTable:
        line 67: 0

  public static byte[] nextBytes(int);
    descriptor: (I)[B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: iload_0
         1: iflt          8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ldc           #4                  // String Count cannot be negative.
        11: iconst_0
        12: anewarray     #5                  // class java/lang/Object
        15: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        18: iload_0
        19: newarray       byte
        21: astore_1
        22: getstatic     #2                  // Field RANDOM:Ljava/util/Random;
        25: aload_1
        26: invokevirtual #7                  // Method java/util/Random.nextBytes:([B)V
        29: aload_1
        30: areturn
      LineNumberTable:
        line 81: 0
        line 83: 18
        line 84: 22
        line 85: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0 count   I
           22       9     1 result   [B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static int nextInt(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=2
         0: iload_1
         1: iload_0
         2: if_icmplt     9
         5: iconst_1
         6: goto          10
         9: iconst_0
        10: ldc           #8                  // String Start value must be smaller or equal to end value.
        12: iconst_0
        13: anewarray     #5                  // class java/lang/Object
        16: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        19: iload_0
        20: iflt          27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: ldc           #9                  // String Both range values must be non-negative.
        30: iconst_0
        31: anewarray     #5                  // class java/lang/Object
        34: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        37: iload_0
        38: iload_1
        39: if_icmpne     44
        42: iload_0
        43: ireturn
        44: iload_0
        45: getstatic     #2                  // Field RANDOM:Ljava/util/Random;
        48: iload_1
        49: iload_0
        50: isub
        51: invokevirtual #10                 // Method java/util/Random.nextInt:(I)I
        54: iadd
        55: ireturn
      LineNumberTable:
        line 103: 0
        line 105: 19
        line 107: 37
        line 108: 42
        line 111: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0 startInclusive   I
            0      56     1 endExclusive   I
      StackMapTable: number_of_entries = 5
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 16 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 15 /* same */

  public static int nextInt();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: iconst_0
         1: ldc           #12                 // int 2147483647
         3: invokestatic  #13                 // Method nextInt:(II)I
         6: ireturn
      LineNumberTable:
        line 122: 0

  public static long nextLong(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=2
         0: lload_2
         1: lload_0
         2: lcmp
         3: iflt          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ldc           #8                  // String Start value must be smaller or equal to end value.
        13: iconst_0
        14: anewarray     #5                  // class java/lang/Object
        17: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        20: lload_0
        21: lconst_0
        22: lcmp
        23: iflt          30
        26: iconst_1
        27: goto          31
        30: iconst_0
        31: ldc           #9                  // String Both range values must be non-negative.
        33: iconst_0
        34: anewarray     #5                  // class java/lang/Object
        37: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        40: lload_0
        41: lload_2
        42: lcmp
        43: ifne          48
        46: lload_0
        47: lreturn
        48: lload_0
        49: l2d
        50: lload_2
        51: l2d
        52: invokestatic  #14                 // Method nextDouble:(DD)D
        55: d2l
        56: lreturn
      LineNumberTable:
        line 140: 0
        line 142: 20
        line 144: 40
        line 145: 46
        line 148: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0 startInclusive   J
            0      57     2 endExclusive   J
      StackMapTable: number_of_entries = 5
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 16 /* same */

  public static long nextLong();
    descriptor: ()J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: lconst_0
         1: ldc2_w        #16                 // long 9223372036854775807l
         4: invokestatic  #18                 // Method nextLong:(JJ)J
         7: lreturn
      LineNumberTable:
        line 159: 0

  public static double nextDouble(double, double);
    descriptor: (DD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=4, args_size=2
         0: dload_2
         1: dload_0
         2: dcmpl
         3: iflt          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ldc           #8                  // String Start value must be smaller or equal to end value.
        13: iconst_0
        14: anewarray     #5                  // class java/lang/Object
        17: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        20: dload_0
        21: dconst_0
        22: dcmpl
        23: iflt          30
        26: iconst_1
        27: goto          31
        30: iconst_0
        31: ldc           #9                  // String Both range values must be non-negative.
        33: iconst_0
        34: anewarray     #5                  // class java/lang/Object
        37: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        40: dload_0
        41: dload_2
        42: dcmpl
        43: ifne          48
        46: dload_0
        47: dreturn
        48: dload_0
        49: dload_2
        50: dload_0
        51: dsub
        52: getstatic     #2                  // Field RANDOM:Ljava/util/Random;
        55: invokevirtual #19                 // Method java/util/Random.nextDouble:()D
        58: dmul
        59: dadd
        60: dreturn
      LineNumberTable:
        line 177: 0
        line 179: 20
        line 181: 40
        line 182: 46
        line 185: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0 startInclusive   D
            0      61     2 endInclusive   D
      StackMapTable: number_of_entries = 5
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 16 /* same */

  public static double nextDouble();
    descriptor: ()D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: dconst_0
         1: ldc2_w        #21                 // double 1.7976931348623157E308d
         4: invokestatic  #14                 // Method nextDouble:(DD)D
         7: dreturn
      LineNumberTable:
        line 196: 0

  public static float nextFloat(float, float);
    descriptor: (FF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: fload_1
         1: fload_0
         2: fcmpl
         3: iflt          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ldc           #8                  // String Start value must be smaller or equal to end value.
        13: iconst_0
        14: anewarray     #5                  // class java/lang/Object
        17: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        20: fload_0
        21: fconst_0
        22: fcmpl
        23: iflt          30
        26: iconst_1
        27: goto          31
        30: iconst_0
        31: ldc           #9                  // String Both range values must be non-negative.
        33: iconst_0
        34: anewarray     #5                  // class java/lang/Object
        37: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        40: fload_0
        41: fload_1
        42: fcmpl
        43: ifne          48
        46: fload_0
        47: freturn
        48: fload_0
        49: fload_1
        50: fload_0
        51: fsub
        52: getstatic     #2                  // Field RANDOM:Ljava/util/Random;
        55: invokevirtual #23                 // Method java/util/Random.nextFloat:()F
        58: fmul
        59: fadd
        60: freturn
      LineNumberTable:
        line 214: 0
        line 216: 20
        line 218: 40
        line 219: 46
        line 222: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0 startInclusive   F
            0      61     1 endInclusive   F
      StackMapTable: number_of_entries = 5
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 16 /* same */

  public static float nextFloat();
    descriptor: ()F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: fconst_0
         1: ldc           #25                 // float 3.4028235E38f
         3: invokestatic  #26                 // Method nextFloat:(FF)F
         6: freturn
      LineNumberTable:
        line 233: 0

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #27                 // class java/util/Random
         3: dup
         4: invokespecial #28                 // Method java/util/Random."<init>":()V
         7: putstatic     #2                  // Field RANDOM:Ljava/util/Random;
        10: return
      LineNumberTable:
        line 40: 0
}
SourceFile: "RandomUtils.java"
