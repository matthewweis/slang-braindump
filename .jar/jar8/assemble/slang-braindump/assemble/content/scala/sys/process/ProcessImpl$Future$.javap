Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/sys/process/ProcessImpl$Future$.class
  Last modified May 29, 2022; size 4277 bytes
  SHA-256 checksum a150105e3f5e4c9d75fe6d14a47f2941e9b8b56fe3e1b40249f36e5cff6a2bf7
  Compiled from "ProcessImpl.scala"
public class scala.sys.process.ProcessImpl$Future$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/sys/process/ProcessImpl$Future$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 5
Constant pool:
    #1 = Utf8               scala/sys/process/ProcessImpl$Future$
    #2 = Class              #1            // scala/sys/process/ProcessImpl$Future$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               ProcessImpl.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/sys/process/ProcessImpl
   #12 = Class              #11           // scala/sys/process/ProcessImpl
   #13 = Utf8               Future$
   #14 = Utf8               scala/sys/process/ProcessImpl$Spawn$
   #15 = Class              #14           // scala/sys/process/ProcessImpl$Spawn$
   #16 = Utf8               Spawn$
   #17 = Utf8               scala/sys/process/ProcessImpl$Spawn$$anon$1
   #18 = Class              #17           // scala/sys/process/ProcessImpl$Spawn$$anon$1
   #19 = Utf8               $outer
   #20 = Utf8               Lscala/sys/process/Process$;
   #21 = Utf8               apply
   #22 = Utf8               (Lscala/Function0;)Lscala/Tuple2;
   #23 = Utf8               <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)Lscala/Tuple2<Ljava/lang/Thread;Lscala/Function0<TT;>;>;
   #24 = Utf8               f
   #25 = Utf8               java/util/concurrent/LinkedBlockingQueue
   #26 = Class              #25           // java/util/concurrent/LinkedBlockingQueue
   #27 = Utf8               <init>
   #28 = Utf8               (I)V
   #29 = NameAndType        #27:#28       // "<init>":(I)V
   #30 = Methodref          #26.#29       // java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
   #31 = NameAndType        #19:#20       // $outer:Lscala/sys/process/Process$;
   #32 = Fieldref           #2.#31        // scala/sys/process/ProcessImpl$Future$.$outer:Lscala/sys/process/Process$;
   #33 = Utf8               scala/sys/process/Process$
   #34 = Class              #33           // scala/sys/process/Process$
   #35 = Utf8               Spawn
   #36 = Utf8               ()Lscala/sys/process/ProcessImpl$Spawn$;
   #37 = NameAndType        #35:#36       // Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
   #38 = Methodref          #34.#37       // scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
   #39 = Utf8               Future
   #40 = String             #39           // Future
   #41 = Utf8               ()V
   #42 = MethodType         #41           //  ()V
   #43 = Utf8               $anonfun$apply$1
   #44 = Utf8               (Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
   #45 = NameAndType        #43:#44       // $anonfun$apply$1:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
   #46 = Methodref          #2.#45        // scala/sys/process/ProcessImpl$Future$.$anonfun$apply$1:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
   #47 = MethodHandle       6:#46         // REF_invokeStatic scala/sys/process/ProcessImpl$Future$.$anonfun$apply$1:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
   #48 = Integer            1
   #49 = Utf8               java/lang/invoke/LambdaMetafactory
   #50 = Class              #49           // java/lang/invoke/LambdaMetafactory
   #51 = Utf8               altMetafactory
   #52 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #53 = NameAndType        #51:#52       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #54 = Methodref          #50.#53       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #55 = MethodHandle       6:#54         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #56 = Utf8               apply$mcV$sp
   #57 = Utf8               (Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction0$mcV$sp;
   #58 = NameAndType        #56:#57       // apply$mcV$sp:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction0$mcV$sp;
   #59 = InvokeDynamic      #0:#58        // #0:apply$mcV$sp:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction0$mcV$sp;
   #60 = Utf8               (Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
   #61 = NameAndType        #27:#60       // "<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
   #62 = Methodref          #18.#61       // scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
   #63 = Utf8               java/lang/StringBuilder
   #64 = Class              #63           // java/lang/StringBuilder
   #65 = Integer            7
   #66 = Methodref          #64.#29       // java/lang/StringBuilder."<init>":(I)V
   #67 = Utf8               append
   #68 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #69 = NameAndType        #67:#68       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #70 = Methodref          #64.#69       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #71 = Utf8               -spawn-
   #72 = String             #71           // -spawn-
   #73 = Utf8               java/lang/Thread
   #74 = Class              #73           // java/lang/Thread
   #75 = Utf8               getName
   #76 = Utf8               ()Ljava/lang/String;
   #77 = NameAndType        #75:#76       // getName:()Ljava/lang/String;
   #78 = Methodref          #74.#77       // java/lang/Thread.getName:()Ljava/lang/String;
   #79 = Utf8               toString
   #80 = NameAndType        #79:#76       // toString:()Ljava/lang/String;
   #81 = Methodref          #64.#80       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #82 = Utf8               setName
   #83 = Utf8               (Ljava/lang/String;)V
   #84 = NameAndType        #82:#83       // setName:(Ljava/lang/String;)V
   #85 = Methodref          #74.#84       // java/lang/Thread.setName:(Ljava/lang/String;)V
   #86 = Utf8               setDaemon
   #87 = Utf8               (Z)V
   #88 = NameAndType        #86:#87       // setDaemon:(Z)V
   #89 = Methodref          #74.#88       // java/lang/Thread.setDaemon:(Z)V
   #90 = Utf8               start
   #91 = NameAndType        #90:#41       // start:()V
   #92 = Methodref          #74.#91       // java/lang/Thread.start:()V
   #93 = Utf8               scala/Tuple2
   #94 = Class              #93           // scala/Tuple2
   #95 = Utf8               ()Ljava/lang/Object;
   #96 = MethodType         #95           //  ()Ljava/lang/Object;
   #97 = Utf8               $anonfun$apply$2
   #98 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;)Ljava/lang/Object;
   #99 = NameAndType        #97:#98       // $anonfun$apply$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Ljava/lang/Object;
  #100 = Methodref          #2.#99        // scala/sys/process/ProcessImpl$Future$.$anonfun$apply$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Ljava/lang/Object;
  #101 = MethodHandle       6:#100        // REF_invokeStatic scala/sys/process/ProcessImpl$Future$.$anonfun$apply$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Ljava/lang/Object;
  #102 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function0;
  #103 = NameAndType        #21:#102      // apply:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function0;
  #104 = InvokeDynamic      #1:#103       // #1:apply:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function0;
  #105 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #106 = NameAndType        #27:#105      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #107 = Methodref          #94.#106      // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #108 = Utf8               result
  #109 = Utf8               Ljava/util/concurrent/LinkedBlockingQueue;
  #110 = Utf8               t
  #111 = Utf8               Ljava/lang/Thread;
  #112 = Utf8               this
  #113 = Utf8               Lscala/sys/process/ProcessImpl$Future$;
  #114 = Utf8               Lscala/Function0;
  #115 = Utf8               apply_thread
  #116 = Utf8               apply_prefix
  #117 = Utf8               Ljava/lang/String;
  #118 = Utf8               apply_f
  #119 = Utf8               scala/Function0
  #120 = Class              #119          // scala/Function0
  #121 = Utf8               java/lang/String
  #122 = Class              #121          // java/lang/String
  #123 = Utf8               scala/runtime/java8/JFunction0$mcV$sp
  #124 = Class              #123          // scala/runtime/java8/JFunction0$mcV$sp
  #125 = Utf8               run$1
  #126 = Utf8               f$2
  #127 = Utf8               result$1
  #128 = Utf8               java/lang/Exception
  #129 = Class              #128          // java/lang/Exception
  #130 = Utf8               scala/package$
  #131 = Class              #130          // scala/package$
  #132 = Utf8               MODULE$
  #133 = Utf8               Lscala/package$;
  #134 = NameAndType        #132:#133     // MODULE$:Lscala/package$;
  #135 = Fieldref           #131.#134     // scala/package$.MODULE$:Lscala/package$;
  #136 = Utf8               Right
  #137 = Utf8               ()Lscala/util/Right$;
  #138 = NameAndType        #136:#137     // Right:()Lscala/util/Right$;
  #139 = Methodref          #131.#138     // scala/package$.Right:()Lscala/util/Right$;
  #140 = NameAndType        #21:#95       // apply:()Ljava/lang/Object;
  #141 = InterfaceMethodref #120.#140     // scala/Function0.apply:()Ljava/lang/Object;
  #142 = Utf8               scala/util/Right
  #143 = Class              #142          // scala/util/Right
  #144 = Utf8               (Ljava/lang/Object;)V
  #145 = NameAndType        #27:#144      // "<init>":(Ljava/lang/Object;)V
  #146 = Methodref          #143.#145     // scala/util/Right."<init>":(Ljava/lang/Object;)V
  #147 = Utf8               Left
  #148 = Utf8               ()Lscala/util/Left$;
  #149 = NameAndType        #147:#148     // Left:()Lscala/util/Left$;
  #150 = Methodref          #131.#149     // scala/package$.Left:()Lscala/util/Left$;
  #151 = Utf8               scala/util/Left
  #152 = Class              #151          // scala/util/Left
  #153 = Methodref          #152.#145     // scala/util/Left."<init>":(Ljava/lang/Object;)V
  #154 = Utf8               put
  #155 = NameAndType        #154:#144     // put:(Ljava/lang/Object;)V
  #156 = Methodref          #26.#155      // java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
  #157 = Utf8               e
  #158 = Utf8               Ljava/lang/Exception;
  #159 = Utf8               value
  #160 = Utf8               Lscala/util/Either;
  #161 = Utf8               apply_value
  #162 = Utf8               Ljava/lang/Object;
  #163 = Utf8               scala/util/Either
  #164 = Class              #163          // scala/util/Either
  #165 = NameAndType        #125:#44      // run$1:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
  #166 = Methodref          #2.#165       // scala/sys/process/ProcessImpl$Future$.run$1:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
  #167 = Utf8               take
  #168 = NameAndType        #167:#95      // take:()Ljava/lang/Object;
  #169 = Methodref          #26.#168      // java/util/concurrent/LinkedBlockingQueue.take:()Ljava/lang/Object;
  #170 = NameAndType        #159:#95      // value:()Ljava/lang/Object;
  #171 = Methodref          #143.#170     // scala/util/Right.value:()Ljava/lang/Object;
  #172 = Methodref          #152.#170     // scala/util/Left.value:()Ljava/lang/Object;
  #173 = Utf8               java/lang/Throwable
  #174 = Class              #173          // java/lang/Throwable
  #175 = Utf8               scala/MatchError
  #176 = Class              #175          // scala/MatchError
  #177 = Methodref          #176.#145     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #178 = Utf8               (Lscala/sys/process/Process$;)V
  #179 = NameAndType        #27:#41       // "<init>":()V
  #180 = Methodref          #4.#179       // java/lang/Object."<init>":()V
  #181 = Utf8               $deserializeLambda$
  #182 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #183 = Utf8               scala/runtime/LambdaDeserialize
  #184 = Class              #183          // scala/runtime/LambdaDeserialize
  #185 = Utf8               bootstrap
  #186 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #187 = NameAndType        #185:#186     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #188 = Methodref          #184.#187     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #189 = MethodHandle       6:#188        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #190 = Utf8               lambdaDeserialize
  #191 = NameAndType        #190:#182     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #192 = InvokeDynamic      #2:#191       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #193 = Utf8               Code
  #194 = Utf8               StackMapTable
  #195 = Utf8               LineNumberTable
  #196 = Utf8               LocalVariableTable
  #197 = Utf8               Signature
  #198 = Utf8               MethodParameters
  #199 = Utf8               InnerClasses
  #200 = Utf8               SourceFile
  #201 = Utf8               BootstrapMethods
  #202 = Utf8               ScalaInlineInfo
  #203 = Utf8               Scala
{
  private final scala.sys.process.Process$ $outer;
    descriptor: Lscala/sys/process/Process$;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public <T extends java.lang.Object> scala.Tuple2<java.lang.Thread, scala.Function0<T>> apply(scala.Function0<T>);
    descriptor: (Lscala/Function0;)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=8, args_size=2
         0: new           #26                 // class java/util/concurrent/LinkedBlockingQueue
         3: dup
         4: iconst_1
         5: invokespecial #30                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
         8: astore_2
         9: aload_0
        10: getfield      #32                 // Field $outer:Lscala/sys/process/Process$;
        13: invokevirtual #38                 // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
        16: ldc           #40                 // String Future
        18: aload_0
        19: getfield      #32                 // Field $outer:Lscala/sys/process/Process$;
        22: invokevirtual #38                 // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
        25: ifnonnull     30
        28: aconst_null
        29: athrow
        30: iconst_0
        31: istore        7
        33: aload_1
        34: aload_2
        35: invokedynamic #59,  0             // InvokeDynamic #0:apply$mcV$sp:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction0$mcV$sp;
        40: astore        5
        42: astore        4
        44: ifnonnull     49
        47: aconst_null
        48: athrow
        49: new           #18                 // class scala/sys/process/ProcessImpl$Spawn$$anon$1
        52: dup
        53: aconst_null
        54: aload         5
        56: invokespecial #62                 // Method scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
        59: astore        6
        61: aload         6
        63: new           #64                 // class java/lang/StringBuilder
        66: dup
        67: ldc           #65                 // int 7
        69: invokespecial #66                 // Method java/lang/StringBuilder."<init>":(I)V
        72: aload         4
        74: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        77: ldc           #72                 // String -spawn-
        79: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        82: aload         6
        84: invokevirtual #78                 // Method java/lang/Thread.getName:()Ljava/lang/String;
        87: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        93: invokevirtual #85                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
        96: aload         6
        98: iload         7
       100: invokevirtual #89                 // Method java/lang/Thread.setDaemon:(Z)V
       103: aload         6
       105: invokevirtual #92                 // Method java/lang/Thread.start:()V
       108: aload         6
       110: aconst_null
       111: astore        4
       113: aconst_null
       114: astore        5
       116: aconst_null
       117: astore        6
       119: astore_3
       120: new           #94                 // class scala/Tuple2
       123: dup
       124: aload_3
       125: aload_2
       126: invokedynamic #104,  0            // InvokeDynamic #1:apply:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function0;
       131: invokespecial #107                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       134: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class scala/sys/process/ProcessImpl$Future$, class scala/Function0, class java/util/concurrent/LinkedBlockingQueue ]
          stack = [ class scala/sys/process/ProcessImpl$Spawn$, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/sys/process/ProcessImpl$Future$, class scala/Function0, class java/util/concurrent/LinkedBlockingQueue, top, class java/lang/String, class scala/runtime/java8/JFunction0$mcV$sp, top, int ]
          stack = []
      LineNumberTable:
        line 37: 0
        line 43: 9
        line 27: 30
        line 43: 33
        line 28: 49
        line 29: 61
        line 30: 96
        line 31: 103
        line 32: 108
        line 43: 108
        line 45: 120
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9     125     2 result   Ljava/util/concurrent/LinkedBlockingQueue;
          120      14     3     t   Ljava/lang/Thread;
            0     135     0  this   Lscala/sys/process/ProcessImpl$Future$;
            0     135     1     f   Lscala/Function0;
           61      47     6 apply_thread   Ljava/lang/Thread;
           49      59     4 apply_prefix   Ljava/lang/String;
           49      59     5 apply_f   Lscala/Function0;
    Signature: #23                          // <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)Lscala/Tuple2<Ljava/lang/Thread;Lscala/Function0<TT;>;>;
    MethodParameters:
      Name                           Flags
      f                              final

  private static final void run$1(scala.Function0, java.util.concurrent.LinkedBlockingQueue);
    descriptor: (Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=6, args_size=2
         0: getstatic     #135                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #139                // Method scala/package$.Right:()Lscala/util/Right$;
         6: aload_0
         7: invokeinterface #141,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        12: astore        4
        14: ifnonnull     19
        17: aconst_null
        18: athrow
        19: new           #143                // class scala/util/Right
        22: dup
        23: aload         4
        25: invokespecial #146                // Method scala/util/Right."<init>":(Ljava/lang/Object;)V
        28: aconst_null
        29: astore        4
        31: goto          61
        34: astore_3
        35: getstatic     #135                // Field scala/package$.MODULE$:Lscala/package$;
        38: invokevirtual #150                // Method scala/package$.Left:()Lscala/util/Left$;
        41: ifnonnull     46
        44: aconst_null
        45: athrow
        46: new           #152                // class scala/util/Left
        49: dup
        50: aload_3
        51: invokespecial #153                // Method scala/util/Left."<init>":(Ljava/lang/Object;)V
        54: astore        5
        56: aload         5
        58: aconst_null
        59: astore        5
        61: astore_2
        62: aload_1
        63: aload_2
        64: invokevirtual #156                // Method java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
        67: return
      Exception table:
         from    to  target type
             0    31    34   Class java/lang/Exception
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 19
          locals = [ top, top, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class scala/Function0, class java/util/concurrent/LinkedBlockingQueue ]
          stack = [ class java/lang/Exception ]
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class java/lang/Exception ]
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class scala/Function0, class java/util/concurrent/LinkedBlockingQueue ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 39: 0
        line 40: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           34      27     3     e   Ljava/lang/Exception;
           62       5     2 value   Lscala/util/Either;
            0      68     0   f$2   Lscala/Function0;
            0      68     1 result$1   Ljava/util/concurrent/LinkedBlockingQueue;
           19       9     4 apply_value   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      f$2                            final
      result$1                       final

  public static final void $anonfun$apply$1(scala.Function0, java.util.concurrent.LinkedBlockingQueue);
    descriptor: (Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #166                // Method run$1:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
         5: return
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   f$2   Lscala/Function0;
            0       6     1 result$1   Ljava/util/concurrent/LinkedBlockingQueue;
    MethodParameters:
      Name                           Flags
      f$2                            final
      result$1                       final

  public static final java.lang.Object $anonfun$apply$2(java.util.concurrent.LinkedBlockingQueue);
    descriptor: (Ljava/util/concurrent/LinkedBlockingQueue;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #169                // Method java/util/concurrent/LinkedBlockingQueue.take:()Ljava/lang/Object;
         4: checkcast     #164                // class scala/util/Either
         7: astore_1
         8: aload_1
         9: instanceof    #143                // class scala/util/Right
        12: ifeq          26
        15: aload_1
        16: checkcast     #143                // class scala/util/Right
        19: invokevirtual #171                // Method scala/util/Right.value:()Ljava/lang/Object;
        22: astore_2
        23: goto          53
        26: aload_1
        27: instanceof    #152                // class scala/util/Left
        30: ifeq          44
        33: aload_1
        34: checkcast     #152                // class scala/util/Left
        37: invokevirtual #172                // Method scala/util/Left.value:()Ljava/lang/Object;
        40: checkcast     #174                // class java/lang/Throwable
        43: athrow
        44: new           #176                // class scala/MatchError
        47: dup
        48: aload_1
        49: invokespecial #177                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        52: athrow
        53: aload_2
        54: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ class scala/util/Either ]
        frame_type = 17 /* same */
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object ]
      LineNumberTable:
        line 45: 0
        line 46: 8
        line 47: 26
        line 45: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23       3     2 value   Ljava/lang/Object;
            0      55     0 result$1   Ljava/util/concurrent/LinkedBlockingQueue;
    MethodParameters:
      Name                           Flags
      result$1                       final

  public scala.sys.process.ProcessImpl$Future$(scala.sys.process.Process$);
    descriptor: (Lscala/sys/process/Process$;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #32                 // Field $outer:Lscala/sys/process/Process$;
        11: aload_0
        12: invokespecial #180                // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/sys/process/ProcessImpl$Future$;
            0      16     1 $outer   Lscala/sys/process/Process$;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #192,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #13= #2 of #12;                  // Future$=class scala/sys/process/ProcessImpl$Future$ of class scala/sys/process/ProcessImpl
  public #16= #15 of #12;                 // Spawn$=class scala/sys/process/ProcessImpl$Spawn$ of class scala/sys/process/ProcessImpl
  public final #18;                       // class scala/sys/process/ProcessImpl$Spawn$$anon$1
SourceFile: "ProcessImpl.scala"
BootstrapMethods:
  0: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #42 ()V
      #47 REF_invokeStatic scala/sys/process/ProcessImpl$Future$.$anonfun$apply$1:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
      #42 ()V
      #48 1
  1: #55 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #96 ()Ljava/lang/Object;
      #101 REF_invokeStatic scala/sys/process/ProcessImpl$Future$.$anonfun$apply$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Ljava/lang/Object;
      #96 ()Ljava/lang/Object;
      #48 1
  2: #189 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #47 REF_invokeStatic scala/sys/process/ProcessImpl$Future$.$anonfun$apply$1:(Lscala/Function0;Ljava/util/concurrent/LinkedBlockingQueue;)V
      #101 REF_invokeStatic scala/sys/process/ProcessImpl$Future$.$anonfun$apply$2:(Ljava/util/concurrent/LinkedBlockingQueue;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 2B 00 2C 01 00 61 00 62 01 00 1B
   00 B2 01 00 15 00 16 01 00 7D 00 2C 01
  Scala: length = 0x0 (unknown attribute)

