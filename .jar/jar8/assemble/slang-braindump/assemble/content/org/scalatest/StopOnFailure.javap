Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/StopOnFailure.class
  Last modified May 29, 2022; size 2583 bytes
  SHA-256 checksum c676a78549dd8065e28ad6c247080e93342ce99112be2dd45aebd0d85dcfc7f2
  Compiled from "StopOnFailure.scala"
public interface org.scalatest.StopOnFailure extends org.scalatest.SuiteMixin
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/scalatest/StopOnFailure
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 4, attributes: 4
Constant pool:
   #1 = Utf8               org/scalatest/StopOnFailure
   #2 = Class              #1             // org/scalatest/StopOnFailure
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               org/scalatest/SuiteMixin
   #6 = Class              #5             // org/scalatest/SuiteMixin
   #7 = Utf8               StopOnFailure.scala
   #8 = Utf8               Lscala/reflect/ScalaSignature;
   #9 = Utf8               bytes
  #10 = Utf8               \u0006\u0005\u00013\u0011\u0002B\u0003\u0011\u0002\u0007\u0005Q!C\u001d\t\u000bQ\u0001A\u0011\u0001\f\t\ri\u0001\u0001\u0013\"\u0001\u001c\u0011-!\u0004\u0001%A\u0002\u0002\u0003%I!\u000e\u001d\u0003\u001bM#x\u000e](o\r\u0006LG.\u001e:f\u0015\t1q!A\u0005tG\u0006d\u0017\r^3ti*\t\u0001\"A\u0002pe\u001e\u001c2\u0001\u0001\u0006\u0011!\tYa\"D\u0001\r\u0015\u0005i\u0011!B:dC2\f\u0017BA\b\r\u0005\u0019\te.\u001f*fMB\u0011\u0011CE\u0007\u0002\u000b%\u00111#\u0002\u0002\u000b\'VLG/Z\'jq&t\u0017A\u0002\u0013j]&$He\u0001\u0001\u0015\u0003]\u0001\"a\u0003\r\n\u0005ea!\u0001B+oSR\f1A];o)\rard\f\t\u0003#uI!AH\u0003\u0003\rM#\u0018\r^;t\u0011\u0015\u0001#\u00011\u0001\"\u0003!!Xm\u001d;OC6,\u0007cA\u0006#I%\u00111\u0005\u0004\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0005\u0015bcB\u0001\u0014+!\t9C\"D\u0001)\u0015\tIS#\u0001\u0004=e>|GOP\u0005\u0003W1\ta\u0001\u0015:fI\u00164\u0017BA\u0017/\u0005\u0019\u0019FO]5oO*\u00111\u0006\u0004\u0005\u0006a\t\u0001\r!M\u0001\u0005CJ<7\u000f\u0005\u0002\u0012e%\u00111\'\u0002\u0002\u0005\u0003J<7/A\u0005tkB,\'\u000f\n:v]R\u0019ADN\u001c\t\u000b\u0001\u001a\u0001\u0019A\u0011\t\u000bA\u001a\u0001\u0019A\u0019\n\u0005i\u0011\"c\u0001\u001e={\u0019!1\b\u0001\u0001:\u00051a$/\u001a4j]\u0016lWM\u001c;?!\t\t\u0002\u0001\u0005\u0002\u0012}%\u0011q(\u0002\u0002\u0006\'VLG/\u001a
  #11 = Utf8               org$scalatest$StopOnFailure$$super$run
  #12 = Utf8               (Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
  #13 = Utf8               testName
  #14 = Utf8               args
  #15 = Utf8               run$
  #16 = Utf8               (Lorg/scalatest/StopOnFailure;Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
  #17 = Utf8               $this
  #18 = Utf8               run
  #19 = NameAndType        #18:#12        // run:(Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
  #20 = InterfaceMethodref #2.#19         // org/scalatest/StopOnFailure.run:(Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
  #21 = Utf8               Lorg/scalatest/StopOnFailure;
  #22 = Utf8               Lscala/Option;
  #23 = Utf8               Lorg/scalatest/Args;
  #24 = Utf8               (Lscala/Option<Ljava/lang/String;>;Lorg/scalatest/Args;)Lorg/scalatest/Status;
  #25 = Utf8               org/scalatest/StopOnFailureReporter
  #26 = Class              #25            // org/scalatest/StopOnFailureReporter
  #27 = Utf8               org/scalatest/Args
  #28 = Class              #27            // org/scalatest/Args
  #29 = Utf8               reporter
  #30 = Utf8               ()Lorg/scalatest/Reporter;
  #31 = NameAndType        #29:#30        // reporter:()Lorg/scalatest/Reporter;
  #32 = Methodref          #28.#31        // org/scalatest/Args.reporter:()Lorg/scalatest/Reporter;
  #33 = Utf8               stopper
  #34 = Utf8               ()Lorg/scalatest/Stopper;
  #35 = NameAndType        #33:#34        // stopper:()Lorg/scalatest/Stopper;
  #36 = Methodref          #28.#35        // org/scalatest/Args.stopper:()Lorg/scalatest/Stopper;
  #37 = Utf8               java/lang/System
  #38 = Class              #37            // java/lang/System
  #39 = Utf8               err
  #40 = Utf8               Ljava/io/PrintStream;
  #41 = NameAndType        #39:#40        // err:Ljava/io/PrintStream;
  #42 = Fieldref           #38.#41        // java/lang/System.err:Ljava/io/PrintStream;
  #43 = Utf8               <init>
  #44 = Utf8               (Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Ljava/io/PrintStream;)V
  #45 = NameAndType        #43:#44        // "<init>":(Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Ljava/io/PrintStream;)V
  #46 = Methodref          #26.#45        // org/scalatest/StopOnFailureReporter."<init>":(Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Ljava/io/PrintStream;)V
  #47 = Utf8               copy$default$2
  #48 = NameAndType        #47:#34        // copy$default$2:()Lorg/scalatest/Stopper;
  #49 = Methodref          #28.#48        // org/scalatest/Args.copy$default$2:()Lorg/scalatest/Stopper;
  #50 = Utf8               copy$default$3
  #51 = Utf8               ()Lorg/scalatest/Filter;
  #52 = NameAndType        #50:#51        // copy$default$3:()Lorg/scalatest/Filter;
  #53 = Methodref          #28.#52        // org/scalatest/Args.copy$default$3:()Lorg/scalatest/Filter;
  #54 = Utf8               copy$default$4
  #55 = Utf8               ()Lorg/scalatest/ConfigMap;
  #56 = NameAndType        #54:#55        // copy$default$4:()Lorg/scalatest/ConfigMap;
  #57 = Methodref          #28.#56        // org/scalatest/Args.copy$default$4:()Lorg/scalatest/ConfigMap;
  #58 = Utf8               copy$default$5
  #59 = Utf8               ()Lscala/Option;
  #60 = NameAndType        #58:#59        // copy$default$5:()Lscala/Option;
  #61 = Methodref          #28.#60        // org/scalatest/Args.copy$default$5:()Lscala/Option;
  #62 = Utf8               copy$default$6
  #63 = Utf8               ()Lorg/scalatest/Tracker;
  #64 = NameAndType        #62:#63        // copy$default$6:()Lorg/scalatest/Tracker;
  #65 = Methodref          #28.#64        // org/scalatest/Args.copy$default$6:()Lorg/scalatest/Tracker;
  #66 = Utf8               copy$default$7
  #67 = Utf8               ()Lscala/collection/immutable/Set;
  #68 = NameAndType        #66:#67        // copy$default$7:()Lscala/collection/immutable/Set;
  #69 = Methodref          #28.#68        // org/scalatest/Args.copy$default$7:()Lscala/collection/immutable/Set;
  #70 = Utf8               copy$default$8
  #71 = Utf8               ()Z
  #72 = NameAndType        #70:#71        // copy$default$8:()Z
  #73 = Methodref          #28.#72        // org/scalatest/Args.copy$default$8:()Z
  #74 = Utf8               copy$default$9
  #75 = NameAndType        #74:#59        // copy$default$9:()Lscala/Option;
  #76 = Methodref          #28.#75        // org/scalatest/Args.copy$default$9:()Lscala/Option;
  #77 = Utf8               copy$default$10
  #78 = NameAndType        #77:#59        // copy$default$10:()Lscala/Option;
  #79 = Methodref          #28.#78        // org/scalatest/Args.copy$default$10:()Lscala/Option;
  #80 = Utf8               copy
  #81 = Utf8               (Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Lorg/scalatest/Filter;Lorg/scalatest/ConfigMap;Lscala/Option;Lorg/scalatest/Tracker;Lscala/collection/immutable/Set;ZLscala/Option;Lscala/Option;)Lorg/scalatest/Args;
  #82 = NameAndType        #80:#81        // copy:(Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Lorg/scalatest/Filter;Lorg/scalatest/ConfigMap;Lscala/Option;Lorg/scalatest/Tracker;Lscala/collection/immutable/Set;ZLscala/Option;Lscala/Option;)Lorg/scalatest/Args;
  #83 = Methodref          #28.#82        // org/scalatest/Args.copy:(Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Lorg/scalatest/Filter;Lorg/scalatest/ConfigMap;Lscala/Option;Lorg/scalatest/Tracker;Lscala/collection/immutable/Set;ZLscala/Option;Lscala/Option;)Lorg/scalatest/Args;
  #84 = NameAndType        #11:#12        // org$scalatest$StopOnFailure$$super$run:(Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
  #85 = InterfaceMethodref #2.#84         // org/scalatest/StopOnFailure.org$scalatest$StopOnFailure$$super$run:(Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
  #86 = Utf8               this
  #87 = Utf8               $init$
  #88 = Utf8               (Lorg/scalatest/StopOnFailure;)V
  #89 = Utf8               MethodParameters
  #90 = Utf8               Code
  #91 = Utf8               LineNumberTable
  #92 = Utf8               LocalVariableTable
  #93 = Utf8               Signature
  #94 = Utf8               SourceFile
  #95 = Utf8               RuntimeVisibleAnnotations
  #96 = Utf8               ScalaInlineInfo
  #97 = Utf8               ScalaSig
{
  public abstract org.scalatest.Status org$scalatest$StopOnFailure$$super$run(scala.Option, org.scalatest.Args);
    descriptor: (Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
    flags: (0x1401) ACC_PUBLIC, ACC_ABSTRACT, ACC_SYNTHETIC
    MethodParameters:
      Name                           Flags
      testName                       final
      args                           final

  public static org.scalatest.Status run$(org.scalatest.StopOnFailure, scala.Option, org.scalatest.Args);
    descriptor: (Lorg/scalatest/StopOnFailure;Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #20                 // InterfaceMethod run:(Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
         6: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lorg/scalatest/StopOnFailure;
            0       7     1 testName   Lscala/Option;
            0       7     2  args   Lorg/scalatest/Args;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      testName                       final
      args                           final

  public default org.scalatest.Status run(scala.Option<java.lang.String>, org.scalatest.Args);
    descriptor: (Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=13, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: new           #26                 // class org/scalatest/StopOnFailureReporter
         6: dup
         7: aload_2
         8: invokevirtual #32                 // Method org/scalatest/Args.reporter:()Lorg/scalatest/Reporter;
        11: aload_2
        12: invokevirtual #36                 // Method org/scalatest/Args.stopper:()Lorg/scalatest/Stopper;
        15: getstatic     #42                 // Field java/lang/System.err:Ljava/io/PrintStream;
        18: invokespecial #46                 // Method org/scalatest/StopOnFailureReporter."<init>":(Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Ljava/io/PrintStream;)V
        21: aload_2
        22: invokevirtual #49                 // Method org/scalatest/Args.copy$default$2:()Lorg/scalatest/Stopper;
        25: aload_2
        26: invokevirtual #53                 // Method org/scalatest/Args.copy$default$3:()Lorg/scalatest/Filter;
        29: aload_2
        30: invokevirtual #57                 // Method org/scalatest/Args.copy$default$4:()Lorg/scalatest/ConfigMap;
        33: aload_2
        34: invokevirtual #61                 // Method org/scalatest/Args.copy$default$5:()Lscala/Option;
        37: aload_2
        38: invokevirtual #65                 // Method org/scalatest/Args.copy$default$6:()Lorg/scalatest/Tracker;
        41: aload_2
        42: invokevirtual #69                 // Method org/scalatest/Args.copy$default$7:()Lscala/collection/immutable/Set;
        45: aload_2
        46: invokevirtual #73                 // Method org/scalatest/Args.copy$default$8:()Z
        49: aload_2
        50: invokevirtual #76                 // Method org/scalatest/Args.copy$default$9:()Lscala/Option;
        53: aload_2
        54: invokevirtual #79                 // Method org/scalatest/Args.copy$default$10:()Lscala/Option;
        57: invokevirtual #83                 // Method org/scalatest/Args.copy:(Lorg/scalatest/Reporter;Lorg/scalatest/Stopper;Lorg/scalatest/Filter;Lorg/scalatest/ConfigMap;Lscala/Option;Lorg/scalatest/Tracker;Lscala/collection/immutable/Set;ZLscala/Option;Lscala/Option;)Lorg/scalatest/Args;
        60: invokeinterface #85,  3           // InterfaceMethod org$scalatest$StopOnFailure$$super$run:(Lscala/Option;Lorg/scalatest/Args;)Lorg/scalatest/Status;
        65: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lorg/scalatest/StopOnFailure;
            0      66     1 testName   Lscala/Option;
            0      66     2  args   Lorg/scalatest/Args;
    Signature: #24                          // (Lscala/Option<Ljava/lang/String;>;Lorg/scalatest/Args;)Lorg/scalatest/Status;
    MethodParameters:
      Name                           Flags
      testName                       final
      args                           final

  public static void $init$(org.scalatest.StopOnFailure);
    descriptor: (Lorg/scalatest/StopOnFailure;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lorg/scalatest/StopOnFailure;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
SourceFile: "StopOnFailure.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00013\u0011\u0002B\u0003\u0011\u0002\u0007\u0005Q!C\u001d\t\u000bQ\u0001A\u0011\u0001\f\t\ri\u0001\u0001\u0013\"\u0001\u001c\u0011-!\u0004\u0001%A\u0002\u0002\u0003%I!\u000e\u001d\u0003\u001bM#x\u000e](o\r\u0006LG.\u001e:f\u0015\t1q!A\u0005tG\u0006d\u0017\r^3ti*\t\u0001\"A\u0002pe\u001e\u001c2\u0001\u0001\u0006\u0011!\tYa\"D\u0001\r\u0015\u0005i\u0011!B:dC2\f\u0017BA\b\r\u0005\u0019\te.\u001f*fMB\u0011\u0011CE\u0007\u0002\u000b%\u00111#\u0002\u0002\u000b\'VLG/Z\'jq&t\u0017A\u0002\u0013j]&$He\u0001\u0001\u0015\u0003]\u0001\"a\u0003\r\n\u0005ea!\u0001B+oSR\f1A];o)\rard\f\t\u0003#uI!AH\u0003\u0003\rM#\u0018\r^;t\u0011\u0015\u0001#\u00011\u0001\"\u0003!!Xm\u001d;OC6,\u0007cA\u0006#I%\u00111\u0005\u0004\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0005\u0015bcB\u0001\u0014+!\t9C\"D\u0001)\u0015\tIS#\u0001\u0004=e>|GOP\u0005\u0003W1\ta\u0001\u0015:fI\u00164\u0017BA\u0017/\u0005\u0019\u0019FO]5oO*\u00111\u0006\u0004\u0005\u0006a\t\u0001\r!M\u0001\u0005CJ<7\u000f\u0005\u0002\u0012e%\u00111\'\u0002\u0002\u0005\u0003J<7/A\u0005tkB,\'\u000f\n:v]R\u0019ADN\u001c\t\u000b\u0001\u001a\u0001\u0019A\u0011\t\u000bA\u001a\u0001\u0019A\u0019\n\u0005i\u0011\"c\u0001\u001e={\u0019!1\b\u0001\u0001:\u00051a$/\u001a4j]\u0016lWM\u001c;?!\t\t\u0002\u0001\u0005\u0002\u0012}%\u0011q(\u0002\u0002\u0006\'VLG/\u001a"
    )
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 57 00 58 01 00 0B 00 0C 01 00 12
   00 0C 00 00 0F 00 10 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
