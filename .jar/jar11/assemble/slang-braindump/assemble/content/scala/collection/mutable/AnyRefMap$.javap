Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/mutable/AnyRefMap$.class
  Last modified May 29, 2022; size 8460 bytes
  SHA-256 checksum 04341fca25c5f92d8dea3e0467666c711dce34460997320756b6c50c4b1db8a6
  Compiled from "AnyRefMap.scala"
public final class scala.collection.mutable.AnyRefMap$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/mutable/AnyRefMap$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 23, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/mutable/AnyRefMap$
    #2 = Class              #1            // scala/collection/mutable/AnyRefMap$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               AnyRefMap.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               scala/collection/mutable/AnyRefMap$AnyRefMapBuilder
   #14 = Class              #13           // scala/collection/mutable/AnyRefMap$AnyRefMapBuilder
   #15 = Utf8               scala/collection/mutable/AnyRefMap
   #16 = Class              #15           // scala/collection/mutable/AnyRefMap
   #17 = Utf8               AnyRefMapBuilder
   #18 = Utf8               scala/collection/mutable/AnyRefMap$ExceptionDefault
   #19 = Class              #18           // scala/collection/mutable/AnyRefMap$ExceptionDefault
   #20 = Utf8               ExceptionDefault
   #21 = Utf8               scala/collection/mutable/AnyRefMap$ToBuildFrom$
   #22 = Class              #21           // scala/collection/mutable/AnyRefMap$ToBuildFrom$
   #23 = Utf8               ToBuildFrom$
   #24 = Utf8               scala/collection/mutable/AnyRefMap$ToFactory$
   #25 = Class              #24           // scala/collection/mutable/AnyRefMap$ToFactory$
   #26 = Utf8               ToFactory$
   #27 = Utf8               MODULE$
   #28 = Utf8               Lscala/collection/mutable/AnyRefMap$;
   #29 = Utf8               scala$collection$mutable$AnyRefMap$$exceptionDefault
   #30 = Utf8               Lscala/collection/mutable/AnyRefMap$ExceptionDefault;
   #31 = Utf8               <clinit>
   #32 = Utf8               ()V
   #33 = Utf8               <init>
   #34 = NameAndType        #33:#32       // "<init>":()V
   #35 = Methodref          #2.#34        // scala/collection/mutable/AnyRefMap$."<init>":()V
   #36 = NameAndType        #27:#28       // MODULE$:Lscala/collection/mutable/AnyRefMap$;
   #37 = Fieldref           #2.#36        // scala/collection/mutable/AnyRefMap$.MODULE$:Lscala/collection/mutable/AnyRefMap$;
   #38 = Methodref          #19.#34       // scala/collection/mutable/AnyRefMap$ExceptionDefault."<init>":()V
   #39 = NameAndType        #29:#30       // scala$collection$mutable$AnyRefMap$$exceptionDefault:Lscala/collection/mutable/AnyRefMap$ExceptionDefault;
   #40 = Fieldref           #2.#39        // scala/collection/mutable/AnyRefMap$.scala$collection$mutable$AnyRefMap$$exceptionDefault:Lscala/collection/mutable/AnyRefMap$ExceptionDefault;
   #41 = Utf8               IndexMask
   #42 = Utf8               ()I
   #43 = Integer            1073741823
   #44 = Utf8               this
   #45 = Utf8               MissingBit
   #46 = Integer            -2147483648
   #47 = Utf8               VacantBit
   #48 = Integer            1073741824
   #49 = Utf8               MissVacant
   #50 = Integer            -1073741824
   #51 = Utf8               ()Lscala/collection/mutable/AnyRefMap$ExceptionDefault;
   #52 = Utf8               apply
   #53 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/mutable/AnyRefMap;
   #54 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
   #55 = Utf8               elems
   #56 = Utf8               buildFromIterableOnce
   #57 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/AnyRefMap;
   #58 = NameAndType        #56:#57       // buildFromIterableOnce:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/AnyRefMap;
   #59 = Methodref          #2.#58        // scala/collection/mutable/AnyRefMap$.buildFromIterableOnce:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/AnyRefMap;
   #60 = Utf8               Lscala/collection/immutable/Seq;
   #61 = Utf8               newBuilder
   #62 = Utf8               ()Lscala/collection/mutable/ReusableBuilder;
   #63 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/mutable/ReusableBuilder<Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;
   #64 = Methodref          #14.#34       // scala/collection/mutable/AnyRefMap$AnyRefMapBuilder."<init>":()V
   #65 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
   #66 = Utf8               scala/collection/IterableOnce
   #67 = Class              #66           // scala/collection/IterableOnce
   #68 = Utf8               knownSize
   #69 = NameAndType        #68:#42       // knownSize:()I
   #70 = InterfaceMethodref #67.#69       // scala/collection/IterableOnce.knownSize:()I
   #71 = Utf8               (I)V
   #72 = NameAndType        #33:#71       // "<init>":(I)V
   #73 = Methodref          #16.#72       // scala/collection/mutable/AnyRefMap."<init>":(I)V
   #74 = Utf8               iterator
   #75 = Utf8               ()Lscala/collection/Iterator;
   #76 = NameAndType        #74:#75       // iterator:()Lscala/collection/Iterator;
   #77 = InterfaceMethodref #67.#76       // scala/collection/IterableOnce.iterator:()Lscala/collection/Iterator;
   #78 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #79 = MethodType         #78           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #80 = Utf8               $anonfun$buildFromIterableOnce$1$adapted
   #81 = Utf8               (Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)Ljava/lang/Object;
   #82 = NameAndType        #80:#81       // $anonfun$buildFromIterableOnce$1$adapted:(Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)Ljava/lang/Object;
   #83 = Methodref          #2.#82        // scala/collection/mutable/AnyRefMap$.$anonfun$buildFromIterableOnce$1$adapted:(Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)Ljava/lang/Object;
   #84 = MethodHandle       6:#83         // REF_invokeStatic scala/collection/mutable/AnyRefMap$.$anonfun$buildFromIterableOnce$1$adapted:(Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)Ljava/lang/Object;
   #85 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
   #86 = MethodType         #85           //  (Lscala/Tuple2;)Ljava/lang/Object;
   #87 = Integer            5
   #88 = Integer            1
   #89 = Utf8               java/lang/invoke/LambdaMetafactory
   #90 = Class              #89           // java/lang/invoke/LambdaMetafactory
   #91 = Utf8               altMetafactory
   #92 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #93 = NameAndType        #91:#92       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #94 = Methodref          #90.#93       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #95 = MethodHandle       6:#94         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #96 = Utf8               (Lscala/collection/mutable/AnyRefMap;)Lscala/Function1;
   #97 = NameAndType        #52:#96       // apply:(Lscala/collection/mutable/AnyRefMap;)Lscala/Function1;
   #98 = InvokeDynamic      #0:#97        // #0:apply:(Lscala/collection/mutable/AnyRefMap;)Lscala/Function1;
   #99 = Utf8               scala/collection/Iterator
  #100 = Class              #99           // scala/collection/Iterator
  #101 = Utf8               foreach
  #102 = Utf8               (Lscala/Function1;)V
  #103 = NameAndType        #101:#102     // foreach:(Lscala/Function1;)V
  #104 = InterfaceMethodref #100.#103     // scala/collection/Iterator.foreach:(Lscala/Function1;)V
  #105 = Utf8               size
  #106 = NameAndType        #105:#42      // size:()I
  #107 = Methodref          #16.#106      // scala/collection/mutable/AnyRefMap.size:()I
  #108 = Utf8               repack
  #109 = NameAndType        #108:#32      // repack:()V
  #110 = Methodref          #16.#109      // scala/collection/mutable/AnyRefMap.repack:()V
  #111 = Utf8               sz
  #112 = Utf8               I
  #113 = Utf8               arm
  #114 = Utf8               Lscala/collection/mutable/AnyRefMap;
  #115 = Utf8               Lscala/collection/IterableOnce;
  #116 = Utf8               empty
  #117 = Utf8               ()Lscala/collection/mutable/AnyRefMap;
  #118 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/mutable/AnyRefMap<TK;TV;>;
  #119 = Methodref          #16.#34       // scala/collection/mutable/AnyRefMap."<init>":()V
  #120 = Utf8               withDefault
  #121 = Utf8               (Lscala/Function1;)Lscala/collection/mutable/AnyRefMap;
  #122 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/Function1<TK;TV;>;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
  #123 = Utf8               default
  #124 = NameAndType        #33:#102      // "<init>":(Lscala/Function1;)V
  #125 = Methodref          #16.#124      // scala/collection/mutable/AnyRefMap."<init>":(Lscala/Function1;)V
  #126 = Utf8               Lscala/Function1;
  #127 = Utf8               from
  #128 = Utf8               source
  #129 = Utf8               clone
  #130 = NameAndType        #129:#117     // clone:()Lscala/collection/mutable/AnyRefMap;
  #131 = Methodref          #16.#130      // scala/collection/mutable/AnyRefMap.clone:()Lscala/collection/mutable/AnyRefMap;
  #132 = Utf8               fromZip
  #133 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/AnyRefMap;
  #134 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>([TK;Ljava/lang/Object;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
  #135 = Utf8               keys
  #136 = Utf8               values
  #137 = Utf8               scala/math/package$
  #138 = Class              #137          // scala/math/package$
  #139 = Utf8               Lscala/math/package$;
  #140 = NameAndType        #27:#139      // MODULE$:Lscala/math/package$;
  #141 = Fieldref           #138.#140     // scala/math/package$.MODULE$:Lscala/math/package$;
  #142 = Utf8               java/lang/reflect/Array
  #143 = Class              #142          // java/lang/reflect/Array
  #144 = Utf8               getLength
  #145 = Utf8               (Ljava/lang/Object;)I
  #146 = NameAndType        #144:#145     // getLength:(Ljava/lang/Object;)I
  #147 = Methodref          #143.#146     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
  #148 = Utf8               java/lang/Math
  #149 = Class              #148          // java/lang/Math
  #150 = Utf8               min
  #151 = Utf8               (II)I
  #152 = NameAndType        #150:#151     // min:(II)I
  #153 = Methodref          #149.#152     // java/lang/Math.min:(II)I
  #154 = Utf8               scala/runtime/ScalaRunTime$
  #155 = Class              #154          // scala/runtime/ScalaRunTime$
  #156 = Utf8               Lscala/runtime/ScalaRunTime$;
  #157 = NameAndType        #27:#156      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #158 = Fieldref           #155.#157     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #159 = Utf8               array_apply
  #160 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #161 = NameAndType        #159:#160     // array_apply:(Ljava/lang/Object;I)Ljava/lang/Object;
  #162 = Methodref          #155.#161     // scala/runtime/ScalaRunTime$.array_apply:(Ljava/lang/Object;I)Ljava/lang/Object;
  #163 = Utf8               update
  #164 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #165 = NameAndType        #163:#164     // update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #166 = Methodref          #16.#165      // scala/collection/mutable/AnyRefMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #167 = Utf8               i
  #168 = Utf8               [Ljava/lang/Object;
  #169 = Utf8               Ljava/lang/Object;
  #170 = Utf8               (Lscala/collection/mutable/Iterable;Lscala/collection/mutable/Iterable;)Lscala/collection/mutable/AnyRefMap;
  #171 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/mutable/Iterable<TK;>;Lscala/collection/mutable/Iterable<TV;>;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
  #172 = Utf8               scala/collection/mutable/Iterable
  #173 = Class              #172          // scala/collection/mutable/Iterable
  #174 = InterfaceMethodref #173.#106     // scala/collection/mutable/Iterable.size:()I
  #175 = InterfaceMethodref #173.#76      // scala/collection/mutable/Iterable.iterator:()Lscala/collection/Iterator;
  #176 = Utf8               hasNext
  #177 = Utf8               ()Z
  #178 = NameAndType        #176:#177     // hasNext:()Z
  #179 = InterfaceMethodref #100.#178     // scala/collection/Iterator.hasNext:()Z
  #180 = Utf8               next
  #181 = Utf8               ()Ljava/lang/Object;
  #182 = NameAndType        #180:#181     // next:()Ljava/lang/Object;
  #183 = InterfaceMethodref #100.#182     // scala/collection/Iterator.next:()Ljava/lang/Object;
  #184 = Utf8               ki
  #185 = Utf8               Lscala/collection/Iterator;
  #186 = Utf8               vi
  #187 = Utf8               Lscala/collection/mutable/Iterable;
  #188 = Utf8               toFactory
  #189 = Utf8               (Lscala/collection/mutable/AnyRefMap$;)Lscala/collection/Factory;
  #190 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/mutable/AnyRefMap$;)Lscala/collection/Factory<Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;
  #191 = Utf8               dummy
  #192 = Utf8               Lscala/collection/mutable/AnyRefMap$ToFactory$;
  #193 = NameAndType        #27:#192      // MODULE$:Lscala/collection/mutable/AnyRefMap$ToFactory$;
  #194 = Fieldref           #25.#193      // scala/collection/mutable/AnyRefMap$ToFactory$.MODULE$:Lscala/collection/mutable/AnyRefMap$ToFactory$;
  #195 = Utf8               toBuildFrom
  #196 = Utf8               (Lscala/collection/mutable/AnyRefMap$;)Lscala/collection/BuildFrom;
  #197 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/mutable/AnyRefMap$;)Lscala/collection/BuildFrom<Ljava/lang/Object;Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;
  #198 = Utf8               factory
  #199 = Utf8               Lscala/collection/mutable/AnyRefMap$ToBuildFrom$;
  #200 = NameAndType        #27:#199      // MODULE$:Lscala/collection/mutable/AnyRefMap$ToBuildFrom$;
  #201 = Fieldref           #22.#200      // scala/collection/mutable/AnyRefMap$ToBuildFrom$.MODULE$:Lscala/collection/mutable/AnyRefMap$ToBuildFrom$;
  #202 = Utf8               iterableFactory
  #203 = Utf8               ()Lscala/collection/Factory;
  #204 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/Factory<Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;
  #205 = Utf8               buildFromAnyRefMap
  #206 = Utf8               ()Lscala/collection/BuildFrom;
  #207 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/BuildFrom<Lscala/collection/mutable/AnyRefMap<**>;Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;
  #208 = Utf8               writeReplace
  #209 = Utf8               scala/runtime/ModuleSerializationProxy
  #210 = Class              #209          // scala/runtime/ModuleSerializationProxy
  #211 = Utf8               (Ljava/lang/Class;)V
  #212 = NameAndType        #33:#211      // "<init>":(Ljava/lang/Class;)V
  #213 = Methodref          #210.#212     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #214 = Utf8               $anonfun$buildFromIterableOnce$1
  #215 = Utf8               (Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)V
  #216 = Utf8               arm$3
  #217 = Utf8               x0$1
  #218 = Utf8               scala/Tuple2
  #219 = Class              #218          // scala/Tuple2
  #220 = Utf8               _1
  #221 = NameAndType        #220:#181     // _1:()Ljava/lang/Object;
  #222 = Methodref          #219.#221     // scala/Tuple2._1:()Ljava/lang/Object;
  #223 = Utf8               _2
  #224 = NameAndType        #223:#181     // _2:()Ljava/lang/Object;
  #225 = Methodref          #219.#224     // scala/Tuple2._2:()Ljava/lang/Object;
  #226 = Utf8               scala/MatchError
  #227 = Class              #226          // scala/MatchError
  #228 = Utf8               (Ljava/lang/Object;)V
  #229 = NameAndType        #33:#228      // "<init>":(Ljava/lang/Object;)V
  #230 = Methodref          #227.#229     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #231 = Utf8               k
  #232 = Utf8               v
  #233 = Utf8               Lscala/Tuple2;
  #234 = Methodref          #4.#34        // java/lang/Object."<init>":()V
  #235 = NameAndType        #214:#215     // $anonfun$buildFromIterableOnce$1:(Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)V
  #236 = Methodref          #2.#235       // scala/collection/mutable/AnyRefMap$.$anonfun$buildFromIterableOnce$1:(Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)V
  #237 = Utf8               scala/runtime/BoxedUnit
  #238 = Class              #237          // scala/runtime/BoxedUnit
  #239 = Utf8               UNIT
  #240 = Utf8               Lscala/runtime/BoxedUnit;
  #241 = NameAndType        #239:#240     // UNIT:Lscala/runtime/BoxedUnit;
  #242 = Fieldref           #238.#241     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #243 = Utf8               $deserializeLambda$
  #244 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #245 = Utf8               scala/runtime/LambdaDeserialize
  #246 = Class              #245          // scala/runtime/LambdaDeserialize
  #247 = Utf8               bootstrap
  #248 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #249 = NameAndType        #247:#248     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #250 = Methodref          #246.#249     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #251 = MethodHandle       6:#250        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #252 = Utf8               lambdaDeserialize
  #253 = NameAndType        #252:#244     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #254 = InvokeDynamic      #1:#253       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #255 = Utf8               Code
  #256 = Utf8               LineNumberTable
  #257 = Utf8               LocalVariableTable
  #258 = Utf8               Signature
  #259 = Utf8               MethodParameters
  #260 = Utf8               StackMapTable
  #261 = Utf8               InnerClasses
  #262 = Utf8               SourceFile
  #263 = Utf8               BootstrapMethods
  #264 = Utf8               ScalaInlineInfo
  #265 = Utf8               Scala
{
  public static final scala.collection.mutable.AnyRefMap$ MODULE$;
    descriptor: Lscala/collection/mutable/AnyRefMap$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.collection.mutable.AnyRefMap$ExceptionDefault scala$collection$mutable$AnyRefMap$$exceptionDefault;
    descriptor: Lscala/collection/mutable/AnyRefMap$ExceptionDefault;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/collection/mutable/AnyRefMap$
         3: dup
         4: invokespecial #35                 // Method "<init>":()V
         7: putstatic     #37                 // Field MODULE$:Lscala/collection/mutable/AnyRefMap$;
        10: new           #19                 // class scala/collection/mutable/AnyRefMap$ExceptionDefault
        13: dup
        14: invokespecial #38                 // Method scala/collection/mutable/AnyRefMap$ExceptionDefault."<init>":()V
        17: putstatic     #40                 // Field scala$collection$mutable$AnyRefMap$$exceptionDefault:Lscala/collection/mutable/AnyRefMap$ExceptionDefault;
        20: return
      LineNumberTable:
        line 501: 0
        line 510: 10
        line 501: 20

  private final int IndexMask();
    descriptor: ()I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #43                 // int 1073741823
         2: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/mutable/AnyRefMap$;

  private final int MissingBit();
    descriptor: ()I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #46                 // int -2147483648
         2: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/mutable/AnyRefMap$;

  private final int VacantBit();
    descriptor: ()I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #48                 // int 1073741824
         2: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/mutable/AnyRefMap$;

  private final int MissVacant();
    descriptor: ()I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #50                 // int -1073741824
         2: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/mutable/AnyRefMap$;

  public scala.collection.mutable.AnyRefMap$ExceptionDefault scala$collection$mutable$AnyRefMap$$exceptionDefault();
    descriptor: ()Lscala/collection/mutable/AnyRefMap$ExceptionDefault;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #40                 // Field scala$collection$mutable$AnyRefMap$$exceptionDefault:Lscala/collection/mutable/AnyRefMap$ExceptionDefault;
         3: areturn
      LineNumberTable:
        line 510: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/AnyRefMap$;

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.AnyRefMap<K, V> apply(scala.collection.immutable.Seq<scala.Tuple2<K, V>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/collection/mutable/AnyRefMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #59                 // Method buildFromIterableOnce:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/AnyRefMap;
         5: areturn
      LineNumberTable:
        line 528: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/mutable/AnyRefMap$;
            0       6     1 elems   Lscala/collection/immutable/Seq;
    Signature: #54                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      elems                          final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.ReusableBuilder<scala.Tuple2<K, V>, scala.collection.mutable.AnyRefMap<K, V>> newBuilder();
    descriptor: ()Lscala/collection/mutable/ReusableBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: new           #14                 // class scala/collection/mutable/AnyRefMap$AnyRefMapBuilder
         3: dup
         4: invokespecial #64                 // Method scala/collection/mutable/AnyRefMap$AnyRefMapBuilder."<init>":()V
         7: areturn
      LineNumberTable:
        line 530: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/mutable/AnyRefMap$;
    Signature: #63                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/mutable/ReusableBuilder<Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;

  private <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.AnyRefMap<K, V> buildFromIterableOnce(scala.collection.IterableOnce<scala.Tuple2<K, V>>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/mutable/AnyRefMap;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=4, args_size=2
         0: aload_1
         1: invokeinterface #70,  1           // InterfaceMethod scala/collection/IterableOnce.knownSize:()I
         6: istore_2
         7: iload_2
         8: iconst_0
         9: if_icmpge     14
        12: iconst_4
        13: istore_2
        14: new           #16                 // class scala/collection/mutable/AnyRefMap
        17: dup
        18: iload_2
        19: iconst_2
        20: imul
        21: invokespecial #73                 // Method scala/collection/mutable/AnyRefMap."<init>":(I)V
        24: astore_3
        25: aload_1
        26: invokeinterface #77,  1           // InterfaceMethod scala/collection/IterableOnce.iterator:()Lscala/collection/Iterator;
        31: aload_3
        32: invokedynamic #98,  0             // InvokeDynamic #0:apply:(Lscala/collection/mutable/AnyRefMap;)Lscala/Function1;
        37: invokeinterface #104,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
        42: aload_3
        43: invokevirtual #107                // Method scala/collection/mutable/AnyRefMap.size:()I
        46: iload_2
        47: iconst_3
        48: ishr
        49: if_icmpge     56
        52: aload_3
        53: invokevirtual #110                // Method scala/collection/mutable/AnyRefMap.repack:()V
        56: aload_3
        57: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 41
          locals = [ class scala/collection/mutable/AnyRefMap ]
      LineNumberTable:
        line 533: 0
        line 534: 7
        line 535: 14
        line 536: 25
        line 537: 42
        line 538: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      50     2    sz   I
           25      32     3   arm   Lscala/collection/mutable/AnyRefMap;
            0      58     0  this   Lscala/collection/mutable/AnyRefMap$;
            0      58     1 elems   Lscala/collection/IterableOnce;
    Signature: #65                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      elems                          final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.AnyRefMap<K, V> empty();
    descriptor: ()Lscala/collection/mutable/AnyRefMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: new           #16                 // class scala/collection/mutable/AnyRefMap
         3: dup
         4: invokespecial #119                // Method scala/collection/mutable/AnyRefMap."<init>":()V
         7: areturn
      LineNumberTable:
        line 542: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/mutable/AnyRefMap$;
    Signature: #118                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/mutable/AnyRefMap<TK;TV;>;

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.AnyRefMap<K, V> withDefault(scala.Function1<K, V>);
    descriptor: (Lscala/Function1;)Lscala/collection/mutable/AnyRefMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #16                 // class scala/collection/mutable/AnyRefMap
         3: dup
         4: aload_1
         5: invokespecial #125                // Method scala/collection/mutable/AnyRefMap."<init>":(Lscala/Function1;)V
         8: areturn
      LineNumberTable:
        line 545: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/mutable/AnyRefMap$;
            0       9     1 default   Lscala/Function1;
    Signature: #122                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/Function1<TK;TV;>;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      default                        final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.AnyRefMap<K, V> from(scala.collection.IterableOnce<scala.Tuple2<K, V>>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/mutable/AnyRefMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: instanceof    #16                 // class scala/collection/mutable/AnyRefMap
         4: ifeq          18
         7: aload_1
         8: checkcast     #16                 // class scala/collection/mutable/AnyRefMap
        11: invokevirtual #131                // Method scala/collection/mutable/AnyRefMap.clone:()Lscala/collection/mutable/AnyRefMap;
        14: astore_2
        15: goto          24
        18: aload_0
        19: aload_1
        20: invokespecial #59                 // Method buildFromIterableOnce:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/AnyRefMap;
        23: astore_2
        24: aload_2
        25: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ class scala/collection/mutable/AnyRefMap ]
      LineNumberTable:
        line 556: 0
        line 557: 18
        line 555: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/collection/mutable/AnyRefMap$;
            0      26     1 source   Lscala/collection/IterableOnce;
    Signature: #65                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      source                         final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.AnyRefMap<K, V> fromZip(K[], java.lang.Object);
    descriptor: ([Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/AnyRefMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=3
         0: getstatic     #141                // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: aload_1
         5: arraylength
         6: aload_2
         7: invokestatic  #147                // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
        10: invokestatic  #153                // Method java/lang/Math.min:(II)I
        13: istore        5
        15: new           #16                 // class scala/collection/mutable/AnyRefMap
        18: dup
        19: iload         5
        21: iconst_2
        22: imul
        23: invokespecial #73                 // Method scala/collection/mutable/AnyRefMap."<init>":(I)V
        26: astore_3
        27: iconst_0
        28: istore        4
        30: iload         4
        32: iload         5
        34: if_icmpge     60
        37: aload_3
        38: aload_1
        39: iload         4
        41: aaload
        42: getstatic     #158                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        45: aload_2
        46: iload         4
        48: invokevirtual #162                // Method scala/runtime/ScalaRunTime$.array_apply:(Ljava/lang/Object;I)Ljava/lang/Object;
        51: invokevirtual #166                // Method scala/collection/mutable/AnyRefMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
        54: iinc          4, 1
        57: goto          30
        60: aload_3
        61: invokevirtual #107                // Method scala/collection/mutable/AnyRefMap.size:()I
        64: iload         5
        66: iconst_3
        67: ishr
        68: if_icmpge     75
        71: aload_3
        72: invokevirtual #110                // Method scala/collection/mutable/AnyRefMap.repack:()V
        75: aload_3
        76: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ class scala/collection/mutable/AnyRefMap, int, int ]
        frame_type = 29 /* same */
        frame_type = 14 /* same */
      LineNumberTable:
        line 564: 0
        line 565: 15
        line 566: 27
        line 567: 30
        line 568: 60
        line 569: 75
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      49     3   arm   Lscala/collection/mutable/AnyRefMap;
           30      46     4     i   I
            0      77     0  this   Lscala/collection/mutable/AnyRefMap$;
            0      77     1  keys   [Ljava/lang/Object;
            0      77     2 values   Ljava/lang/Object;
    Signature: #134                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>([TK;Ljava/lang/Object;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      keys                           final
      values                         final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.mutable.AnyRefMap<K, V> fromZip(scala.collection.mutable.Iterable<K>, scala.collection.mutable.Iterable<V>);
    descriptor: (Lscala/collection/mutable/Iterable;Lscala/collection/mutable/Iterable;)Lscala/collection/mutable/AnyRefMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=3
         0: getstatic     #141                // Field scala/math/package$.MODULE$:Lscala/math/package$;
         3: pop
         4: aload_1
         5: invokeinterface #174,  1          // InterfaceMethod scala/collection/mutable/Iterable.size:()I
        10: aload_2
        11: invokeinterface #174,  1          // InterfaceMethod scala/collection/mutable/Iterable.size:()I
        16: invokestatic  #153                // Method java/lang/Math.min:(II)I
        19: istore        6
        21: new           #16                 // class scala/collection/mutable/AnyRefMap
        24: dup
        25: iload         6
        27: iconst_2
        28: imul
        29: invokespecial #73                 // Method scala/collection/mutable/AnyRefMap."<init>":(I)V
        32: astore_3
        33: aload_1
        34: invokeinterface #175,  1          // InterfaceMethod scala/collection/mutable/Iterable.iterator:()Lscala/collection/Iterator;
        39: astore        4
        41: aload_2
        42: invokeinterface #175,  1          // InterfaceMethod scala/collection/mutable/Iterable.iterator:()Lscala/collection/Iterator;
        47: astore        5
        49: aload         4
        51: invokeinterface #179,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        56: ifeq          90
        59: aload         5
        61: invokeinterface #179,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        66: ifeq          90
        69: aload_3
        70: aload         4
        72: invokeinterface #183,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        77: aload         5
        79: invokeinterface #183,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        84: invokevirtual #166                // Method scala/collection/mutable/AnyRefMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
        87: goto          49
        90: aload_3
        91: invokevirtual #107                // Method scala/collection/mutable/AnyRefMap.size:()I
        94: iload         6
        96: iconst_3
        97: ishr
        98: if_icmpge     105
       101: aload_3
       102: invokevirtual #110                // Method scala/collection/mutable/AnyRefMap.repack:()V
       105: aload_3
       106: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class scala/collection/mutable/AnyRefMap$, class scala/collection/mutable/Iterable, class scala/collection/mutable/Iterable, class scala/collection/mutable/AnyRefMap, class scala/collection/Iterator, class scala/collection/Iterator, int ]
          stack = []
        frame_type = 40 /* same */
        frame_type = 14 /* same */
      LineNumberTable:
        line 576: 0
        line 577: 21
        line 578: 33
        line 579: 41
        line 580: 49
        line 581: 90
        line 582: 105
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           33      73     3   arm   Lscala/collection/mutable/AnyRefMap;
           41      65     4    ki   Lscala/collection/Iterator;
           49      57     5    vi   Lscala/collection/Iterator;
            0     107     0  this   Lscala/collection/mutable/AnyRefMap$;
            0     107     1  keys   Lscala/collection/mutable/Iterable;
            0     107     2 values   Lscala/collection/mutable/Iterable;
    Signature: #171                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/mutable/Iterable<TK;>;Lscala/collection/mutable/Iterable<TV;>;)Lscala/collection/mutable/AnyRefMap<TK;TV;>;
    MethodParameters:
      Name                           Flags
      keys                           final
      values                         final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.Factory<scala.Tuple2<K, V>, scala.collection.mutable.AnyRefMap<K, V>> toFactory(scala.collection.mutable.AnyRefMap$);
    descriptor: (Lscala/collection/mutable/AnyRefMap$;)Lscala/collection/Factory;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #194                // Field scala/collection/mutable/AnyRefMap$ToFactory$.MODULE$:Lscala/collection/mutable/AnyRefMap$ToFactory$;
         3: areturn
      LineNumberTable:
        line 585: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/AnyRefMap$;
            0       4     1 dummy   Lscala/collection/mutable/AnyRefMap$;
    Signature: #190                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/mutable/AnyRefMap$;)Lscala/collection/Factory<Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;
    MethodParameters:
      Name                           Flags
      dummy                          final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.BuildFrom<java.lang.Object, scala.Tuple2<K, V>, scala.collection.mutable.AnyRefMap<K, V>> toBuildFrom(scala.collection.mutable.AnyRefMap$);
    descriptor: (Lscala/collection/mutable/AnyRefMap$;)Lscala/collection/BuildFrom;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #201                // Field scala/collection/mutable/AnyRefMap$ToBuildFrom$.MODULE$:Lscala/collection/mutable/AnyRefMap$ToBuildFrom$;
         3: areturn
      LineNumberTable:
        line 593: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/AnyRefMap$;
            0       4     1 factory   Lscala/collection/mutable/AnyRefMap$;
    Signature: #197                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/mutable/AnyRefMap$;)Lscala/collection/BuildFrom<Ljava/lang/Object;Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;
    MethodParameters:
      Name                           Flags
      factory                        final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.Factory<scala.Tuple2<K, V>, scala.collection.mutable.AnyRefMap<K, V>> iterableFactory();
    descriptor: ()Lscala/collection/Factory;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #194                // Field scala/collection/mutable/AnyRefMap$ToFactory$.MODULE$:Lscala/collection/mutable/AnyRefMap$ToFactory$;
         3: areturn
      LineNumberTable:
        line 585: 0
        line 599: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/AnyRefMap$;
    Signature: #204                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/Factory<Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.BuildFrom<scala.collection.mutable.AnyRefMap<?, ?>, scala.Tuple2<K, V>, scala.collection.mutable.AnyRefMap<K, V>> buildFromAnyRefMap();
    descriptor: ()Lscala/collection/BuildFrom;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #201                // Field scala/collection/mutable/AnyRefMap$ToBuildFrom$.MODULE$:Lscala/collection/mutable/AnyRefMap$ToBuildFrom$;
         3: areturn
      LineNumberTable:
        line 593: 0
        line 600: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/mutable/AnyRefMap$;
    Signature: #207                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/BuildFrom<Lscala/collection/mutable/AnyRefMap<**>;Lscala/Tuple2<TK;TV;>;Lscala/collection/mutable/AnyRefMap<TK;TV;>;>;

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #210                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class scala/collection/mutable/AnyRefMap$
         6: invokespecial #213                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 501: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/mutable/AnyRefMap$;

  public static final void $anonfun$buildFromIterableOnce$1(scala.collection.mutable.AnyRefMap, scala.Tuple2);
    descriptor: (Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_1
         1: ifnull        21
         4: aload_1
         5: invokevirtual #222                // Method scala/Tuple2._1:()Ljava/lang/Object;
         8: astore_2
         9: aload_1
        10: invokevirtual #225                // Method scala/Tuple2._2:()Ljava/lang/Object;
        13: astore_3
        14: aload_0
        15: aload_2
        16: aload_3
        17: invokevirtual #166                // Method scala/collection/mutable/AnyRefMap.update:(Ljava/lang/Object;Ljava/lang/Object;)V
        20: return
        21: new           #227                // class scala/MatchError
        24: dup
        25: aconst_null
        26: invokespecial #230                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        29: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 21 /* same */
      LineNumberTable:
        line 536: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      12     2     k   Ljava/lang/Object;
           14       7     3     v   Ljava/lang/Object;
            0      30     0 arm$3   Lscala/collection/mutable/AnyRefMap;
            0      30     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      arm$3                          final
      x0$1                           final

  private scala.collection.mutable.AnyRefMap$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #234                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 501: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/mutable/AnyRefMap$;

  public static final java.lang.Object $anonfun$buildFromIterableOnce$1$adapted(scala.collection.mutable.AnyRefMap, scala.Tuple2);
    descriptor: (Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #236                // Method $anonfun$buildFromIterableOnce$1:(Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)V
         5: getstatic     #242                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 536: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 arm$3   Lscala/collection/mutable/AnyRefMap;
            0       9     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      arm$3                          final
      x0$1                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #254,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #17= #14 of #16;    // AnyRefMapBuilder=class scala/collection/mutable/AnyRefMap$AnyRefMapBuilder of class scala/collection/mutable/AnyRefMap
  private static #20= #19 of #16;         // ExceptionDefault=class scala/collection/mutable/AnyRefMap$ExceptionDefault of class scala/collection/mutable/AnyRefMap
  private static #23= #22 of #16;         // ToBuildFrom$=class scala/collection/mutable/AnyRefMap$ToBuildFrom$ of class scala/collection/mutable/AnyRefMap
  private static #26= #25 of #16;         // ToFactory$=class scala/collection/mutable/AnyRefMap$ToFactory$ of class scala/collection/mutable/AnyRefMap
SourceFile: "AnyRefMap.scala"
BootstrapMethods:
  0: #95 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #79 (Ljava/lang/Object;)Ljava/lang/Object;
      #84 REF_invokeStatic scala/collection/mutable/AnyRefMap$.$anonfun$buildFromIterableOnce$1$adapted:(Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)Ljava/lang/Object;
      #86 (Lscala/Tuple2;)Ljava/lang/Object;
      #87 5
      #88 1
      #86 (Lscala/Tuple2;)Ljava/lang/Object;
  1: #251 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #84 REF_invokeStatic scala/collection/mutable/AnyRefMap$.$anonfun$buildFromIterableOnce$1$adapted:(Lscala/collection/mutable/AnyRefMap;Lscala/Tuple2;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x6D (unknown attribute)
   01 01 00 15 00 D6 00 D7 01 00 50 00 51 01 00 21
   00 20 01 00 29 00 2A 01 00 31 00 2A 01 00 2D 00
   2A 01 00 2F 00 2A 01 00 34 00 35 01 00 CD 00 CE
   01 00 38 00 39 01 00 74 00 75 01 00 7F 00 39 01
   00 84 00 AA 01 00 84 00 85 01 00 CA 00 CB 01 00
   3D 00 3E 01 00 1D 00 33 01 00 C3 00 C4 01 00 BC
   00 BD 01 00 78 00 79 01 00 D0 00 B5 01
  Scala: length = 0x0 (unknown attribute)

