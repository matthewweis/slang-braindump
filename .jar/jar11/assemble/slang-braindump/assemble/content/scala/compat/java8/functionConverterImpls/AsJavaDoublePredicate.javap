Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/compat/java8/functionConverterImpls/AsJavaDoublePredicate.class
  Last modified May 29, 2022; size 1798 bytes
  SHA-256 checksum f509081979091d93ce865911a4a7ca6e187553e52cc233d31c02413cd50dabf7
  Compiled from "FunctionConverters.scala"
public class scala.compat.java8.functionConverterImpls.AsJavaDoublePredicate implements java.util.function.DoublePredicate
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/compat/java8/functionConverterImpls/AsJavaDoublePredicate
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 5, attributes: 4
Constant pool:
   #1 = Utf8               scala/compat/java8/functionConverterImpls/AsJavaDoublePredicate
   #2 = Class              #1             // scala/compat/java8/functionConverterImpls/AsJavaDoublePredicate
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               java/util/function/DoublePredicate
   #6 = Class              #5             // java/util/function/DoublePredicate
   #7 = Utf8               FunctionConverters.scala
   #8 = Utf8               Lscala/reflect/ScalaSignature;
   #9 = Utf8               bytes
  #10 = Utf8               \u0006\u0005M2A\u0001B\u0003\u0001\u001d!Aq\u0004\u0001B\u0001B\u0003%\u0001\u0005C\u0003+\u0001\u0011\u00051\u0006C\u00030\u0001\u0011\u0005\u0001GA\u000bBg*\u000bg/\u0019#pk\ndW\r\u0015:fI&\u001c\u0017\r^3\u000b\u0005\u00199\u0011A\u00064v]\u000e$\u0018n\u001c8D_:4XM\u001d;fe&k\u0007\u000f\\:\u000b\u0005!I\u0011!\u00026bm\u0006D$B\u0001\u0006\f\u0003\u0019\u0019w.\u001c9bi*\tA\"A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\u0007\u0001yq\u0003\u0005\u0002\u0011+5\t\u0011C\u0003\u0002\u0013\'\u0005!A.\u00198h\u0015\u0005!\u0012\u0001\u00026bm\u0006L!AF\t\u0003\r=\u0013\'.Z2u!\tAR$D\u0001\u001a\u0015\tQ2$\u0001\u0005gk:\u001cG/[8o\u0015\ta2#\u0001\u0003vi&d\u0017B\u0001\u0010\u001a\u0005=!u.\u001e2mKB\u0013X\rZ5dCR,\u0017AA:g!\u0011\t#\u0005J\u0014\u000e\u0003-I!aI\u0006\u0003\u0013\u0019+hn\u0019;j_:\f\u0004CA\u0011&\u0013\t13B\u0001\u0004E_V\u0014G.\u001a\t\u0003C!J!!K\u0006\u0003\u000f\t{w\u000e\\3b]\u00061A(\u001b8jiz\"\"\u0001\f\u0018\u0011\u00055\u0002Q\"A\u0003\t\u000b}\u0011\u0001\u0019\u0001\u0011\u0002\tQ,7\u000f\u001e\u000b\u0003OEBQAM\u0002A\u0002\u0011\n!\u0001_\u0019
  #11 = Utf8               sf
  #12 = Utf8               Lscala/Function1;
  #13 = Utf8               Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;
  #14 = Utf8               and
  #15 = Utf8               (Ljava/util/function/DoublePredicate;)Ljava/util/function/DoublePredicate;
  #16 = Utf8               x$1
  #17 = NameAndType        #14:#15        // and:(Ljava/util/function/DoublePredicate;)Ljava/util/function/DoublePredicate;
  #18 = InterfaceMethodref #6.#17         // java/util/function/DoublePredicate.and:(Ljava/util/function/DoublePredicate;)Ljava/util/function/DoublePredicate;
  #19 = Utf8               this
  #20 = Utf8               Lscala/compat/java8/functionConverterImpls/AsJavaDoublePredicate;
  #21 = Utf8               Ljava/util/function/DoublePredicate;
  #22 = Utf8               negate
  #23 = Utf8               ()Ljava/util/function/DoublePredicate;
  #24 = NameAndType        #22:#23        // negate:()Ljava/util/function/DoublePredicate;
  #25 = InterfaceMethodref #6.#24         // java/util/function/DoublePredicate.negate:()Ljava/util/function/DoublePredicate;
  #26 = Utf8               or
  #27 = NameAndType        #26:#15        // or:(Ljava/util/function/DoublePredicate;)Ljava/util/function/DoublePredicate;
  #28 = InterfaceMethodref #6.#27         // java/util/function/DoublePredicate.or:(Ljava/util/function/DoublePredicate;)Ljava/util/function/DoublePredicate;
  #29 = Utf8               test
  #30 = Utf8               (D)Z
  #31 = Utf8               x1
  #32 = NameAndType        #11:#12        // sf:Lscala/Function1;
  #33 = Fieldref           #2.#32         // scala/compat/java8/functionConverterImpls/AsJavaDoublePredicate.sf:Lscala/Function1;
  #34 = Utf8               scala/Function1
  #35 = Class              #34            // scala/Function1
  #36 = Utf8               apply$mcZD$sp
  #37 = NameAndType        #36:#30        // apply$mcZD$sp:(D)Z
  #38 = InterfaceMethodref #35.#37        // scala/Function1.apply$mcZD$sp:(D)Z
  #39 = Utf8               D
  #40 = Utf8               <init>
  #41 = Utf8               (Lscala/Function1;)V
  #42 = Utf8               (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)V
  #43 = Utf8               ()V
  #44 = NameAndType        #40:#43        // "<init>":()V
  #45 = Methodref          #4.#44         // java/lang/Object."<init>":()V
  #46 = Utf8               Signature
  #47 = Utf8               Code
  #48 = Utf8               LineNumberTable
  #49 = Utf8               LocalVariableTable
  #50 = Utf8               MethodParameters
  #51 = Utf8               SourceFile
  #52 = Utf8               RuntimeVisibleAnnotations
  #53 = Utf8               ScalaInlineInfo
  #54 = Utf8               ScalaSig
{
  private final scala.Function1<java.lang.Object, java.lang.Object> sf;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #13                          // Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;

  public java.util.function.DoublePredicate and(java.util.function.DoublePredicate);
    descriptor: (Ljava/util/function/DoublePredicate;)Ljava/util/function/DoublePredicate;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #18                 // InterfaceMethod java/util/function/DoublePredicate.and:(Ljava/util/function/DoublePredicate;)Ljava/util/function/DoublePredicate;
         5: areturn
      LineNumberTable:
        line 173: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/functionConverterImpls/AsJavaDoublePredicate;
            0       6     1   x$1   Ljava/util/function/DoublePredicate;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.util.function.DoublePredicate negate();
    descriptor: ()Ljava/util/function/DoublePredicate;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #25                 // InterfaceMethod java/util/function/DoublePredicate.negate:()Ljava/util/function/DoublePredicate;
         4: areturn
      LineNumberTable:
        line 173: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/functionConverterImpls/AsJavaDoublePredicate;

  public java.util.function.DoublePredicate or(java.util.function.DoublePredicate);
    descriptor: (Ljava/util/function/DoublePredicate;)Ljava/util/function/DoublePredicate;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #28                 // InterfaceMethod java/util/function/DoublePredicate.or:(Ljava/util/function/DoublePredicate;)Ljava/util/function/DoublePredicate;
         5: areturn
      LineNumberTable:
        line 173: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/functionConverterImpls/AsJavaDoublePredicate;
            0       6     1   x$1   Ljava/util/function/DoublePredicate;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public boolean test(double);
    descriptor: (D)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: getfield      #33                 // Field sf:Lscala/Function1;
         4: dload_1
         5: invokeinterface #38,  3           // InterfaceMethod scala/Function1.apply$mcZD$sp:(D)Z
        10: ireturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/compat/java8/functionConverterImpls/AsJavaDoublePredicate;
            0      11     1    x1   D
    MethodParameters:
      Name                           Flags
      x1                             final

  public scala.compat.java8.functionConverterImpls.AsJavaDoublePredicate(scala.Function1<java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #33                 // Field sf:Lscala/Function1;
         5: aload_0
         6: invokespecial #45                 // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 173: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/compat/java8/functionConverterImpls/AsJavaDoublePredicate;
            0      10     1    sf   Lscala/Function1;
    Signature: #42                          // (Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      sf                             final
}
SourceFile: "FunctionConverters.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005M2A\u0001B\u0003\u0001\u001d!Aq\u0004\u0001B\u0001B\u0003%\u0001\u0005C\u0003+\u0001\u0011\u00051\u0006C\u00030\u0001\u0011\u0005\u0001GA\u000bBg*\u000bg/\u0019#pk\ndW\r\u0015:fI&\u001c\u0017\r^3\u000b\u0005\u00199\u0011A\u00064v]\u000e$\u0018n\u001c8D_:4XM\u001d;fe&k\u0007\u000f\\:\u000b\u0005!I\u0011!\u00026bm\u0006D$B\u0001\u0006\f\u0003\u0019\u0019w.\u001c9bi*\tA\"A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\u0007\u0001yq\u0003\u0005\u0002\u0011+5\t\u0011C\u0003\u0002\u0013\'\u0005!A.\u00198h\u0015\u0005!\u0012\u0001\u00026bm\u0006L!AF\t\u0003\r=\u0013\'.Z2u!\tAR$D\u0001\u001a\u0015\tQ2$\u0001\u0005gk:\u001cG/[8o\u0015\ta2#\u0001\u0003vi&d\u0017B\u0001\u0010\u001a\u0005=!u.\u001e2mKB\u0013X\rZ5dCR,\u0017AA:g!\u0011\t#\u0005J\u0014\u000e\u0003-I!aI\u0006\u0003\u0013\u0019+hn\u0019;j_:\f\u0004CA\u0011&\u0013\t13B\u0001\u0004E_V\u0014G.\u001a\t\u0003C!J!!K\u0006\u0003\u000f\t{w\u000e\\3b]\u00061A(\u001b8jiz\"\"\u0001\f\u0018\u0011\u00055\u0002Q\"A\u0003\t\u000b}\u0011\u0001\u0019\u0001\u0011\u0002\tQ,7\u000f\u001e\u000b\u0003OEBQAM\u0002A\u0002\u0011\n!\u0001_\u0019"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 28 00 29 00 00 0E 00 0F 00 00 16
   00 17 00 00 1A 00 0F 00 00 1D 00 1E 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
