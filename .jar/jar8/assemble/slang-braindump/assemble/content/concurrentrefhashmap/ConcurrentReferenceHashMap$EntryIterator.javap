Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator.class
  Last modified May 29, 2022; size 1413 bytes
  SHA-256 checksum ecd254a4157a2f6d29b97f6b030a9fe93b0d1c832053dd68fff5cea1f41c6361
  Compiled from "ConcurrentReferenceHashMap.java"
final class concurrentrefhashmap.ConcurrentReferenceHashMap$EntryIterator extends concurrentrefhashmap.ConcurrentReferenceHashMap<K, V>.HashIterator implements java.util.Iterator<java.util.Map$Entry<K, V>>
  minor version: 0
  major version: 52
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #9                          // concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator
  super_class: #10                        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator
  interfaces: 1, fields: 1, methods: 3, attributes: 3
Constant pool:
   #1 = Fieldref           #9.#30         // concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator.this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
   #2 = Methodref          #10.#31        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
   #3 = Methodref          #10.#32        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.nextEntry:()Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
   #4 = Class              #34            // concurrentrefhashmap/ConcurrentReferenceHashMap$WriteThroughEntry
   #5 = Methodref          #36.#37        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.key:()Ljava/lang/Object;
   #6 = Methodref          #36.#38        // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.value:()Ljava/lang/Object;
   #7 = Methodref          #4.#39         // concurrentrefhashmap/ConcurrentReferenceHashMap$WriteThroughEntry."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;Ljava/lang/Object;Ljava/lang/Object;)V
   #8 = Methodref          #9.#40         // concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator.next:()Ljava/util/Map$Entry;
   #9 = Class              #41            // concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator
  #10 = Class              #43            // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator
  #11 = Class              #44            // java/util/Iterator
  #12 = Utf8               this$0
  #13 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
  #14 = Utf8               <init>
  #15 = Utf8               (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
  #16 = Utf8               Code
  #17 = Utf8               LineNumberTable
  #18 = Utf8               next
  #19 = Class              #46            // java/util/Map$Entry
  #20 = Utf8               Entry
  #21 = Utf8               InnerClasses
  #22 = Utf8               ()Ljava/util/Map$Entry;
  #23 = Utf8               Signature
  #24 = Utf8               ()Ljava/util/Map$Entry<TK;TV;>;
  #25 = Utf8               ()Ljava/lang/Object;
  #26 = Utf8               HashIterator
  #27 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap<TK;TV;>.HashIterator;Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;
  #28 = Utf8               SourceFile
  #29 = Utf8               ConcurrentReferenceHashMap.java
  #30 = NameAndType        #12:#13        // this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
  #31 = NameAndType        #14:#15        // "<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
  #32 = NameAndType        #47:#49        // nextEntry:()Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #33 = Class              #50            // concurrentrefhashmap/ConcurrentReferenceHashMap
  #34 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$WriteThroughEntry
  #35 = Utf8               WriteThroughEntry
  #36 = Class              #51            // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry
  #37 = NameAndType        #52:#25        // key:()Ljava/lang/Object;
  #38 = NameAndType        #53:#25        // value:()Ljava/lang/Object;
  #39 = NameAndType        #14:#54        // "<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;Ljava/lang/Object;Ljava/lang/Object;)V
  #40 = NameAndType        #18:#22        // next:()Ljava/util/Map$Entry;
  #41 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator
  #42 = Utf8               EntryIterator
  #43 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator
  #44 = Utf8               java/util/Iterator
  #45 = Class              #55            // java/util/Map
  #46 = Utf8               java/util/Map$Entry
  #47 = Utf8               nextEntry
  #48 = Utf8               HashEntry
  #49 = Utf8               ()Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #50 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap
  #51 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry
  #52 = Utf8               key
  #53 = Utf8               value
  #54 = Utf8               (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;Ljava/lang/Object;Ljava/lang/Object;)V
  #55 = Utf8               java/util/Map
{
  final concurrentrefhashmap.ConcurrentReferenceHashMap this$0;
    descriptor: Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
    flags: (0x1010) ACC_FINAL, ACC_SYNTHETIC

  concurrentrefhashmap.ConcurrentReferenceHashMap$EntryIterator(concurrentrefhashmap.ConcurrentReferenceHashMap);
    descriptor: (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
    flags: (0x0000)
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         5: aload_0
         6: aload_1
         7: invokespecial #2                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
        10: return
      LineNumberTable:
        line 1750: 0

  public java.util.Map$Entry<K, V> next();
    descriptor: ()Ljava/util/Map$Entry;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokespecial #3                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator.nextEntry:()Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
         4: astore_1
         5: new           #4                  // class concurrentrefhashmap/ConcurrentReferenceHashMap$WriteThroughEntry
         8: dup
         9: aload_0
        10: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
        13: aload_1
        14: invokevirtual #5                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.key:()Ljava/lang/Object;
        17: aload_1
        18: invokevirtual #6                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.value:()Ljava/lang/Object;
        21: invokespecial #7                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap$WriteThroughEntry."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;Ljava/lang/Object;Ljava/lang/Object;)V
        24: areturn
      LineNumberTable:
        line 1755: 0
        line 1756: 5
    Signature: #24                          // ()Ljava/util/Map$Entry<TK;TV;>;

  public java.lang.Object next();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #8                  // Method next:()Ljava/util/Map$Entry;
         4: areturn
      LineNumberTable:
        line 1750: 0
}
Signature: #27                          // Lconcurrentrefhashmap/ConcurrentReferenceHashMap<TK;TV;>.HashIterator;Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;
SourceFile: "ConcurrentReferenceHashMap.java"
InnerClasses:
  public static #20= #19 of #45;          // Entry=class java/util/Map$Entry of class java/util/Map
  abstract #26= #10 of #33;               // HashIterator=class concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #35= #4 of #33;                   // WriteThroughEntry=class concurrentrefhashmap/ConcurrentReferenceHashMap$WriteThroughEntry of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #42= #9 of #33;                   // EntryIterator=class concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static final #48= #36 of #33;           // HashEntry=class concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry of class concurrentrefhashmap/ConcurrentReferenceHashMap
