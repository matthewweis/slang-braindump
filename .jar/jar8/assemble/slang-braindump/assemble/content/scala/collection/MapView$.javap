Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/MapView$.class
  Last modified May 29, 2022; size 5103 bytes
  SHA-256 checksum 1f273e51eab2deb0e8d946fe341a3ad66ecc5de570be18e195a63cbd2c818b63
  Compiled from "MapView.scala"
public final class scala.collection.MapView$ implements scala.collection.MapViewFactory
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/MapView$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 15, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/MapView$
    #2 = Class              #1            // scala/collection/MapView$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/collection/MapViewFactory
    #6 = Class              #5            // scala/collection/MapViewFactory
    #7 = Utf8               MapView.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               scala/collection/MapView$$anon$1
   #14 = Class              #13           // scala/collection/MapView$$anon$1
   #15 = Utf8               scala/collection/MapView$Id
   #16 = Class              #15           // scala/collection/MapView$Id
   #17 = Utf8               scala/collection/MapView
   #18 = Class              #17           // scala/collection/MapView
   #19 = Utf8               Id
   #20 = Utf8               MODULE$
   #21 = Utf8               Lscala/collection/MapView$;
   #22 = Utf8               EmptyMapView
   #23 = Utf8               Lscala/collection/MapView;
   #24 = Utf8               Lscala/collection/MapView<Ljava/lang/Object;Lscala/runtime/Nothing$;>;
   #25 = Utf8               <clinit>
   #26 = Utf8               ()V
   #27 = Utf8               <init>
   #28 = NameAndType        #27:#26       // "<init>":()V
   #29 = Methodref          #2.#28        // scala/collection/MapView$."<init>":()V
   #30 = NameAndType        #20:#21       // MODULE$:Lscala/collection/MapView$;
   #31 = Fieldref           #2.#30        // scala/collection/MapView$.MODULE$:Lscala/collection/MapView$;
   #32 = Methodref          #14.#28       // scala/collection/MapView$$anon$1."<init>":()V
   #33 = NameAndType        #22:#23       // EmptyMapView:Lscala/collection/MapView;
   #34 = Fieldref           #2.#33        // scala/collection/MapView$.EmptyMapView:Lscala/collection/MapView;
   #35 = Utf8               mapFactory
   #36 = Utf8               ()Lscala/collection/Factory;
   #37 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/Factory<Lscala/Tuple2<TK;TV;>;Lscala/collection/View<Lscala/Tuple2<TK;TV;>;>;>;
   #38 = Utf8               scala/collection/MapFactory
   #39 = Class              #38           // scala/collection/MapFactory
   #40 = Utf8               mapFactory$
   #41 = Utf8               (Lscala/collection/MapFactory;)Lscala/collection/Factory;
   #42 = NameAndType        #40:#41       // mapFactory$:(Lscala/collection/MapFactory;)Lscala/collection/Factory;
   #43 = InterfaceMethodref #39.#42       // scala/collection/MapFactory.mapFactory$:(Lscala/collection/MapFactory;)Lscala/collection/Factory;
   #44 = Utf8               this
   #45 = Utf8               ()Lscala/collection/MapView;
   #46 = Utf8               ()Lscala/collection/MapView<Ljava/lang/Object;Lscala/runtime/Nothing$;>;
   #47 = Utf8               newBuilder
   #48 = Utf8               ()Lscala/collection/mutable/Builder;
   #49 = Utf8               <X:Ljava/lang/Object;Y:Ljava/lang/Object;>()Lscala/collection/mutable/Builder<Lscala/Tuple2<TX;TY;>;Lscala/collection/MapView<TX;TY;>;>;
   #50 = Utf8               scala/collection/mutable/HashMap$
   #51 = Class              #50           // scala/collection/mutable/HashMap$
   #52 = Utf8               Lscala/collection/mutable/HashMap$;
   #53 = NameAndType        #20:#52       // MODULE$:Lscala/collection/mutable/HashMap$;
   #54 = Fieldref           #51.#53       // scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
   #55 = NameAndType        #47:#48       // newBuilder:()Lscala/collection/mutable/Builder;
   #56 = Methodref          #51.#55       // scala/collection/mutable/HashMap$.newBuilder:()Lscala/collection/mutable/Builder;
   #57 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #58 = MethodType         #57           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #59 = Utf8               $anonfun$newBuilder$1
   #60 = Utf8               (Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
   #61 = NameAndType        #59:#60       // $anonfun$newBuilder$1:(Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
   #62 = Methodref          #2.#61        // scala/collection/MapView$.$anonfun$newBuilder$1:(Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
   #63 = MethodHandle       6:#62         // REF_invokeStatic scala/collection/MapView$.$anonfun$newBuilder$1:(Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
   #64 = MethodType         #60           //  (Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
   #65 = Integer            5
   #66 = Integer            1
   #67 = Utf8               java/lang/invoke/LambdaMetafactory
   #68 = Class              #67           // java/lang/invoke/LambdaMetafactory
   #69 = Utf8               altMetafactory
   #70 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #71 = NameAndType        #69:#70       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #72 = Methodref          #68.#71       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #73 = MethodHandle       6:#72         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #74 = Utf8               apply
   #75 = Utf8               ()Lscala/Function1;
   #76 = NameAndType        #74:#75       // apply:()Lscala/Function1;
   #77 = InvokeDynamic      #0:#76        // #0:apply:()Lscala/Function1;
   #78 = Utf8               scala/collection/mutable/Builder
   #79 = Class              #78           // scala/collection/mutable/Builder
   #80 = Utf8               mapResult
   #81 = Utf8               (Lscala/Function1;)Lscala/collection/mutable/Builder;
   #82 = NameAndType        #80:#81       // mapResult:(Lscala/Function1;)Lscala/collection/mutable/Builder;
   #83 = InterfaceMethodref #79.#82       // scala/collection/mutable/Builder.mapResult:(Lscala/Function1;)Lscala/collection/mutable/Builder;
   #84 = Utf8               empty
   #85 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/MapView<TK;TV;>;
   #86 = NameAndType        #22:#45       // EmptyMapView:()Lscala/collection/MapView;
   #87 = Methodref          #2.#86        // scala/collection/MapView$.EmptyMapView:()Lscala/collection/MapView;
   #88 = Utf8               from
   #89 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/View;
   #90 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/View<Lscala/Tuple2<TK;TV;>;>;
   #91 = Utf8               it
   #92 = Utf8               scala/collection/View$
   #93 = Class              #92           // scala/collection/View$
   #94 = Utf8               Lscala/collection/View$;
   #95 = NameAndType        #20:#94       // MODULE$:Lscala/collection/View$;
   #96 = Fieldref           #93.#95       // scala/collection/View$.MODULE$:Lscala/collection/View$;
   #97 = NameAndType        #88:#89       // from:(Lscala/collection/IterableOnce;)Lscala/collection/View;
   #98 = Methodref          #93.#97       // scala/collection/View$.from:(Lscala/collection/IterableOnce;)Lscala/collection/View;
   #99 = Utf8               Lscala/collection/IterableOnce;
  #100 = Utf8               (Lscala/collection/MapOps;)Lscala/collection/MapView;
  #101 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;)Lscala/collection/MapView<TK;TV;>;
  #102 = Utf8               (Lscala/collection/MapOps;)V
  #103 = NameAndType        #27:#102      // "<init>":(Lscala/collection/MapOps;)V
  #104 = Methodref          #16.#103      // scala/collection/MapView$Id."<init>":(Lscala/collection/MapOps;)V
  #105 = Utf8               Lscala/collection/MapOps;
  #106 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/MapView;
  #107 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/MapView<TK;TV;>;
  #108 = Utf8               elems
  #109 = Utf8               scala/$less$colon$less$
  #110 = Class              #109          // scala/$less$colon$less$
  #111 = Utf8               Lscala/$less$colon$less$;
  #112 = NameAndType        #20:#111      // MODULE$:Lscala/$less$colon$less$;
  #113 = Fieldref           #110.#112     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #114 = Utf8               refl
  #115 = Utf8               ()Lscala/$eq$colon$eq;
  #116 = NameAndType        #114:#115     // refl:()Lscala/$eq$colon$eq;
  #117 = Methodref          #110.#116     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #118 = Utf8               scala/collection/immutable/Seq
  #119 = Class              #118          // scala/collection/immutable/Seq
  #120 = Utf8               toMap
  #121 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #122 = NameAndType        #120:#121     // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #123 = InterfaceMethodref #119.#122     // scala/collection/immutable/Seq.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #124 = NameAndType        #88:#100      // from:(Lscala/collection/MapOps;)Lscala/collection/MapView;
  #125 = Methodref          #2.#124       // scala/collection/MapView$.from:(Lscala/collection/MapOps;)Lscala/collection/MapView;
  #126 = Utf8               Lscala/collection/immutable/Seq;
  #127 = Utf8               writeReplace
  #128 = Utf8               ()Ljava/lang/Object;
  #129 = Utf8               scala/runtime/ModuleSerializationProxy
  #130 = Class              #129          // scala/runtime/ModuleSerializationProxy
  #131 = Utf8               (Ljava/lang/Class;)V
  #132 = NameAndType        #27:#131      // "<init>":(Ljava/lang/Class;)V
  #133 = Methodref          #130.#132     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #134 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #135 = NameAndType        #74:#106      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/MapView;
  #136 = Methodref          #2.#135       // scala/collection/MapView$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/MapView;
  #137 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #138 = Methodref          #2.#97        // scala/collection/MapView$.from:(Lscala/collection/IterableOnce;)Lscala/collection/View;
  #139 = NameAndType        #84:#45       // empty:()Lscala/collection/MapView;
  #140 = Methodref          #2.#139       // scala/collection/MapView$.empty:()Lscala/collection/MapView;
  #141 = Utf8               x$1
  #142 = Utf8               scala/collection/mutable/HashMap
  #143 = Class              #142          // scala/collection/mutable/HashMap
  #144 = Utf8               view
  #145 = NameAndType        #144:#45      // view:()Lscala/collection/MapView;
  #146 = Methodref          #143.#145     // scala/collection/mutable/HashMap.view:()Lscala/collection/MapView;
  #147 = Utf8               Lscala/collection/mutable/HashMap;
  #148 = Methodref          #4.#28        // java/lang/Object."<init>":()V
  #149 = Utf8               $deserializeLambda$
  #150 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #151 = Utf8               scala/runtime/LambdaDeserialize
  #152 = Class              #151          // scala/runtime/LambdaDeserialize
  #153 = Utf8               bootstrap
  #154 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #155 = NameAndType        #153:#154     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #156 = Methodref          #152.#155     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #157 = MethodHandle       6:#156        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #158 = Utf8               lambdaDeserialize
  #159 = NameAndType        #158:#150     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #160 = InvokeDynamic      #1:#159       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #161 = Utf8               Signature
  #162 = Utf8               Code
  #163 = Utf8               LineNumberTable
  #164 = Utf8               LocalVariableTable
  #165 = Utf8               MethodParameters
  #166 = Utf8               StackMapTable
  #167 = Utf8               InnerClasses
  #168 = Utf8               SourceFile
  #169 = Utf8               BootstrapMethods
  #170 = Utf8               ScalaInlineInfo
  #171 = Utf8               Scala
{
  public static final scala.collection.MapView$ MODULE$;
    descriptor: Lscala/collection/MapView$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.collection.MapView<java.lang.Object, scala.runtime.Nothing$> EmptyMapView;
    descriptor: Lscala/collection/MapView;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #24                          // Lscala/collection/MapView<Ljava/lang/Object;Lscala/runtime/Nothing$;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/collection/MapView$
         3: dup
         4: invokespecial #29                 // Method "<init>":()V
         7: putstatic     #31                 // Field MODULE$:Lscala/collection/MapView$;
        10: getstatic     #31                 // Field MODULE$:Lscala/collection/MapView$;
        13: pop
        14: getstatic     #31                 // Field MODULE$:Lscala/collection/MapView$;
        17: pop
        18: new           #14                 // class scala/collection/MapView$$anon$1
        21: dup
        22: invokespecial #32                 // Method scala/collection/MapView$$anon$1."<init>":()V
        25: putstatic     #34                 // Field EmptyMapView:Lscala/collection/MapView;
        28: return
      LineNumberTable:
        line 73: 0
        line 81: 18
        line 73: 28

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.Factory<scala.Tuple2<K, V>, scala.collection.View<scala.Tuple2<K, V>>> mapFactory();
    descriptor: ()Lscala/collection/Factory;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #43                 // InterfaceMethod scala/collection/MapFactory.mapFactory$:(Lscala/collection/MapFactory;)Lscala/collection/Factory;
         4: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/MapView$;
    Signature: #37                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/Factory<Lscala/Tuple2<TK;TV;>;Lscala/collection/View<Lscala/Tuple2<TK;TV;>;>;>;

  private scala.collection.MapView<java.lang.Object, scala.runtime.Nothing$> EmptyMapView();
    descriptor: ()Lscala/collection/MapView;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #34                 // Field EmptyMapView:Lscala/collection/MapView;
         3: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lscala/collection/MapView$;
    Signature: #46                          // ()Lscala/collection/MapView<Ljava/lang/Object;Lscala/runtime/Nothing$;>;

  public <X extends java.lang.Object, Y extends java.lang.Object> scala.collection.mutable.Builder<scala.Tuple2<X, Y>, scala.collection.MapView<X, Y>> newBuilder();
    descriptor: ()Lscala/collection/mutable/Builder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
         3: invokevirtual #56                 // Method scala/collection/mutable/HashMap$.newBuilder:()Lscala/collection/mutable/Builder;
         6: invokedynamic #77,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        11: invokeinterface #83,  2           // InterfaceMethod scala/collection/mutable/Builder.mapResult:(Lscala/Function1;)Lscala/collection/mutable/Builder;
        16: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/MapView$;
    Signature: #49                          // <X:Ljava/lang/Object;Y:Ljava/lang/Object;>()Lscala/collection/mutable/Builder<Lscala/Tuple2<TX;TY;>;Lscala/collection/MapView<TX;TY;>;>;

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.MapView<K, V> empty();
    descriptor: ()Lscala/collection/MapView;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #87                 // Method EmptyMapView:()Lscala/collection/MapView;
         4: areturn
      LineNumberTable:
        line 161: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/MapView$;
    Signature: #85                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/MapView<TK;TV;>;

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.View<scala.Tuple2<K, V>> from(scala.collection.IterableOnce<scala.Tuple2<K, V>>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/View;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #96                 // Field scala/collection/View$.MODULE$:Lscala/collection/View$;
         3: aload_1
         4: invokevirtual #98                 // Method scala/collection/View$.from:(Lscala/collection/IterableOnce;)Lscala/collection/View;
         7: areturn
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/MapView$;
            0       8     1    it   Lscala/collection/IterableOnce;
    Signature: #90                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/IterableOnce<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/View<Lscala/Tuple2<TK;TV;>;>;
    MethodParameters:
      Name                           Flags
      it                             final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.MapView<K, V> from(scala.collection.MapOps<K, V, ?, java.lang.Object>);
    descriptor: (Lscala/collection/MapOps;)Lscala/collection/MapView;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: instanceof    #18                 // class scala/collection/MapView
         4: ifeq          15
         7: aload_1
         8: checkcast     #18                 // class scala/collection/MapView
        11: astore_2
        12: goto          24
        15: new           #16                 // class scala/collection/MapView$Id
        18: dup
        19: aload_1
        20: invokespecial #104                // Method scala/collection/MapView$Id."<init>":(Lscala/collection/MapOps;)V
        23: astore_2
        24: aload_2
        25: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ class scala/collection/MapView ]
      LineNumberTable:
        line 166: 0
        line 167: 15
        line 165: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/collection/MapView$;
            0      26     1    it   Lscala/collection/MapOps;
    Signature: #101                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/MapOps<TK;TV;*Ljava/lang/Object;>;)Lscala/collection/MapView<TK;TV;>;
    MethodParameters:
      Name                           Flags
      it                             final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.MapView<K, V> apply(scala.collection.immutable.Seq<scala.Tuple2<K, V>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/collection/MapView;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #113                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
         5: invokevirtual #117                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
         8: invokeinterface #123,  2          // InterfaceMethod scala/collection/immutable/Seq.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
        13: invokevirtual #125                // Method from:(Lscala/collection/MapOps;)Lscala/collection/MapView;
        16: areturn
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/MapView$;
            0      17     1 elems   Lscala/collection/immutable/Seq;
    Signature: #107                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lscala/Tuple2<TK;TV;>;>;)Lscala/collection/MapView<TK;TV;>;
    MethodParameters:
      Name                           Flags
      elems                          final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #130                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class scala/collection/MapView$
         6: invokespecial #133                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/MapView$;

  public java.lang.Object apply(scala.collection.immutable.Seq);
    descriptor: (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #136                // Method apply:(Lscala/collection/immutable/Seq;)Lscala/collection/MapView;
         5: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/MapView$;
            0       6     1 elems   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      elems                          final

  public java.lang.Object from(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #138                // Method from:(Lscala/collection/IterableOnce;)Lscala/collection/View;
         5: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/MapView$;
            0       6     1    it   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      it                             final

  public java.lang.Object empty();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #140                // Method empty:()Lscala/collection/MapView;
         4: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/MapView$;

  public static final scala.collection.MapView $anonfun$newBuilder$1(scala.collection.mutable.HashMap);
    descriptor: (Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #146                // Method scala/collection/mutable/HashMap.view:()Lscala/collection/MapView;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lscala/collection/mutable/HashMap;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private scala.collection.MapView$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #148                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/MapView$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #160,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #14;                       // class scala/collection/MapView$$anon$1
  public static #19= #16 of #18;          // Id=class scala/collection/MapView$Id of class scala/collection/MapView
SourceFile: "MapView.scala"
BootstrapMethods:
  0: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #58 (Ljava/lang/Object;)Ljava/lang/Object;
      #63 REF_invokeStatic scala/collection/MapView$.$anonfun$newBuilder$1:(Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
      #64 (Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
      #65 5
      #66 1
      #64 (Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
  1: #157 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #63 REF_invokeStatic scala/collection/MapView$.$anonfun$newBuilder$1:(Lscala/collection/mutable/HashMap;)Lscala/collection/MapView;
  ScalaInlineInfo: length = 0x45 (unknown attribute)
   01 01 00 0D 00 3B 00 3C 01 00 1B 00 1A 01 00 16
   00 2D 01 00 4A 00 86 01 00 4A 00 6A 01 00 54 00
   80 01 00 54 00 2D 01 00 58 00 89 01 00 58 00 59
   01 00 58 00 64 01 00 23 00 24 01 00 2F 00 30 01
   00 7F 00 80 01
  Scala: length = 0x0 (unknown attribute)

