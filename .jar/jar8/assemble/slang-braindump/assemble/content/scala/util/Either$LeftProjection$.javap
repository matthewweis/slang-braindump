Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/util/Either$LeftProjection$.class
  Last modified May 29, 2022; size 1761 bytes
  SHA-256 checksum 7189cbd382436522e10be9185aebd074e25f06ebeb697bee30d9f6580d12f5c7
  Compiled from "Either.scala"
public class scala.util.Either$LeftProjection$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/util/Either$LeftProjection$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 6, attributes: 4
Constant pool:
   #1 = Utf8               scala/util/Either$LeftProjection$
   #2 = Class              #1             // scala/util/Either$LeftProjection$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               java/io/Serializable
   #6 = Class              #5             // java/io/Serializable
   #7 = Utf8               Either.scala
   #8 = Utf8               scala/util/Either$LeftProjection
   #9 = Class              #8             // scala/util/Either$LeftProjection
  #10 = Utf8               scala/util/Either
  #11 = Class              #10            // scala/util/Either
  #12 = Utf8               LeftProjection
  #13 = Utf8               LeftProjection$
  #14 = Utf8               MODULE$
  #15 = Utf8               Lscala/util/Either$LeftProjection$;
  #16 = Utf8               <clinit>
  #17 = Utf8               ()V
  #18 = Utf8               <init>
  #19 = NameAndType        #18:#17        // "<init>":()V
  #20 = Methodref          #2.#19         // scala/util/Either$LeftProjection$."<init>":()V
  #21 = NameAndType        #14:#15        // MODULE$:Lscala/util/Either$LeftProjection$;
  #22 = Fieldref           #2.#21         // scala/util/Either$LeftProjection$.MODULE$:Lscala/util/Either$LeftProjection$;
  #23 = Utf8               toString
  #24 = Utf8               ()Ljava/lang/String;
  #25 = String             #12            // LeftProjection
  #26 = Utf8               this
  #27 = Utf8               apply
  #28 = Utf8               (Lscala/util/Either;)Lscala/util/Either$LeftProjection;
  #29 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/util/Either<TA;TB;>;)Lscala/util/Either$LeftProjection<TA;TB;>;
  #30 = Utf8               e
  #31 = Utf8               (Lscala/util/Either;)V
  #32 = NameAndType        #18:#31        // "<init>":(Lscala/util/Either;)V
  #33 = Methodref          #9.#32         // scala/util/Either$LeftProjection."<init>":(Lscala/util/Either;)V
  #34 = Utf8               Lscala/util/Either;
  #35 = Utf8               unapply
  #36 = Utf8               (Lscala/util/Either$LeftProjection;)Lscala/Option;
  #37 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/util/Either$LeftProjection<TA;TB;>;)Lscala/Option<Lscala/util/Either<TA;TB;>;>;
  #38 = Utf8               x$0
  #39 = Utf8               scala/None$
  #40 = Class              #39            // scala/None$
  #41 = Utf8               Lscala/None$;
  #42 = NameAndType        #14:#41        // MODULE$:Lscala/None$;
  #43 = Fieldref           #40.#42        // scala/None$.MODULE$:Lscala/None$;
  #44 = Utf8               scala/Some
  #45 = Class              #44            // scala/Some
  #46 = Utf8               ()Lscala/util/Either;
  #47 = NameAndType        #30:#46        // e:()Lscala/util/Either;
  #48 = Methodref          #9.#47         // scala/util/Either$LeftProjection.e:()Lscala/util/Either;
  #49 = Utf8               (Ljava/lang/Object;)V
  #50 = NameAndType        #18:#49        // "<init>":(Ljava/lang/Object;)V
  #51 = Methodref          #45.#50        // scala/Some."<init>":(Ljava/lang/Object;)V
  #52 = Utf8               Lscala/util/Either$LeftProjection;
  #53 = Utf8               writeReplace
  #54 = Utf8               ()Ljava/lang/Object;
  #55 = Utf8               scala/runtime/ModuleSerializationProxy
  #56 = Class              #55            // scala/runtime/ModuleSerializationProxy
  #57 = Utf8               (Ljava/lang/Class;)V
  #58 = NameAndType        #18:#57        // "<init>":(Ljava/lang/Class;)V
  #59 = Methodref          #56.#58        // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #60 = Methodref          #4.#19         // java/lang/Object."<init>":()V
  #61 = Utf8               Code
  #62 = Utf8               LineNumberTable
  #63 = Utf8               LocalVariableTable
  #64 = Utf8               Signature
  #65 = Utf8               MethodParameters
  #66 = Utf8               StackMapTable
  #67 = Utf8               InnerClasses
  #68 = Utf8               SourceFile
  #69 = Utf8               ScalaInlineInfo
  #70 = Utf8               Scala
{
  public static final scala.util.Either$LeftProjection$ MODULE$;
    descriptor: Lscala/util/Either$LeftProjection$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/util/Either$LeftProjection$
         3: dup
         4: invokespecial #20                 // Method "<init>":()V
         7: putstatic     #22                 // Field MODULE$:Lscala/util/Either$LeftProjection$;
        10: return
      LineNumberTable:
        line 523: 0

  public final java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #25                 // String LeftProjection
         2: areturn
      LineNumberTable:
        line 523: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/util/Either$LeftProjection$;

  public <A extends java.lang.Object, B extends java.lang.Object> scala.util.Either$LeftProjection<A, B> apply(scala.util.Either<A, B>);
    descriptor: (Lscala/util/Either;)Lscala/util/Either$LeftProjection;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #9                  // class scala/util/Either$LeftProjection
         3: dup
         4: aload_1
         5: invokespecial #33                 // Method scala/util/Either$LeftProjection."<init>":(Lscala/util/Either;)V
         8: areturn
      LineNumberTable:
        line 523: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/util/Either$LeftProjection$;
            0       9     1     e   Lscala/util/Either;
    Signature: #29                          // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/util/Either<TA;TB;>;)Lscala/util/Either$LeftProjection<TA;TB;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.Option<scala.util.Either<A, B>> unapply(scala.util.Either$LeftProjection<A, B>);
    descriptor: (Lscala/util/Either$LeftProjection;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     8
         4: getstatic     #43                 // Field scala/None$.MODULE$:Lscala/None$;
         7: areturn
         8: new           #45                 // class scala/Some
        11: dup
        12: aload_1
        13: invokevirtual #48                 // Method scala/util/Either$LeftProjection.e:()Lscala/util/Either;
        16: invokespecial #51                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        19: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 8 /* same */
      LineNumberTable:
        line 523: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/util/Either$LeftProjection$;
            0      20     1   x$0   Lscala/util/Either$LeftProjection;
    Signature: #37                          // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/util/Either$LeftProjection<TA;TB;>;)Lscala/Option<Lscala/util/Either<TA;TB;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #56                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class scala/util/Either$LeftProjection$
         6: invokespecial #59                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 523: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/Either$LeftProjection$;

  public scala.util.Either$LeftProjection$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #60                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 523: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Either$LeftProjection$;
}
InnerClasses:
  public static final #12= #9 of #11;     // LeftProjection=class scala/util/Either$LeftProjection of class scala/util/Either
  public static #13= #2 of #11;           // LeftProjection$=class scala/util/Either$LeftProjection$ of class scala/util/Either
SourceFile: "Either.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 12 00 11 01 00 1B 00 1C 01 00 17
   00 18 01 00 23 00 24 01 00 35 00 36 01
  Scala: length = 0x0 (unknown attribute)

