Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParIterableLike$FromScanTree.class
  Last modified May 29, 2022; size 8972 bytes
  SHA-256 checksum e5565dd03d1b512c7bc60bd73cd9cedd7e046bb2dc466907651dfd73d9a0f00b
  Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$FromScanTree<U extends java.lang.Object, That extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.StrictSplitterCheckTask<scala.collection.parallel.Combiner<U, That>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.FromScanTree<U, That>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParIterableLike$FromScanTree
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 7, methods: 22, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParIterableLike$FromScanTree
    #2 = Class              #1            // scala/collection/parallel/ParIterableLike$FromScanTree
    #3 = Utf8               <U:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.StrictSplitterCheckTask<Lscala/collection/parallel/Combiner<TU;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.FromScanTree<TU;TThat;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
    #7 = Class              #6            // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
    #8 = Utf8               ParIterableLike.scala
    #9 = Utf8               scala/collection/parallel/ParIterableLike
   #10 = Class              #9            // scala/collection/parallel/ParIterableLike
   #11 = Utf8               FromScanTree
   #12 = Utf8               scala/collection/parallel/ParIterableLike$ScanLeaf
   #13 = Class              #12           // scala/collection/parallel/ParIterableLike$ScanLeaf
   #14 = Utf8               ScanLeaf
   #15 = Utf8               scala/collection/parallel/ParIterableLike$ScanNode
   #16 = Class              #15           // scala/collection/parallel/ParIterableLike$ScanNode
   #17 = Utf8               ScanNode
   #18 = Utf8               scala/collection/parallel/ParIterableLike$ScanTree
   #19 = Class              #18           // scala/collection/parallel/ParIterableLike$ScanTree
   #20 = Utf8               ScanTree
   #21 = Utf8               StrictSplitterCheckTask
   #22 = Utf8               tree
   #23 = Utf8               Lscala/collection/parallel/ParIterableLike$ScanTree;
   #24 = Utf8               Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;
   #25 = Utf8               z
   #26 = Utf8               Ljava/lang/Object;
   #27 = Utf8               TU;
   #28 = Utf8               op
   #29 = Utf8               Lscala/Function2;
   #30 = Utf8               Lscala/Function2<TU;TU;TU;>;
   #31 = Utf8               cbf
   #32 = Utf8               Lscala/collection/parallel/CombinerFactory;
   #33 = Utf8               Lscala/collection/parallel/CombinerFactory<TU;TThat;>;
   #34 = Utf8               result
   #35 = Utf8               Lscala/collection/parallel/Combiner;
   #36 = Utf8               Lscala/collection/parallel/Combiner<TU;TThat;>;
   #37 = Utf8               throwable
   #38 = Utf8               Ljava/lang/Throwable;
   #39 = Utf8               $outer
   #40 = Utf8               Lscala/collection/parallel/ParIterableLike;
   #41 = Utf8               requiresStrictSplitters
   #42 = Utf8               ()Z
   #43 = Utf8               requiresStrictSplitters$
   #44 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
   #45 = NameAndType        #43:#44       // requiresStrictSplitters$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
   #46 = InterfaceMethodref #7.#45        // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.requiresStrictSplitters$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
   #47 = Utf8               this
   #48 = Utf8               Lscala/collection/parallel/ParIterableLike$FromScanTree;
   #49 = Utf8               repr
   #50 = Utf8               ()Ljava/lang/Object;
   #51 = Utf8               scala/collection/parallel/Task
   #52 = Class              #51           // scala/collection/parallel/Task
   #53 = Utf8               repr$
   #54 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #55 = NameAndType        #53:#54       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #56 = InterfaceMethodref #52.#55       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #57 = Utf8               forwardThrowable
   #58 = Utf8               ()V
   #59 = Utf8               forwardThrowable$
   #60 = Utf8               (Lscala/collection/parallel/Task;)V
   #61 = NameAndType        #59:#60       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #62 = InterfaceMethodref #52.#61       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #63 = Utf8               tryLeaf
   #64 = Utf8               (Lscala/Option;)V
   #65 = Utf8               (Lscala/Option<Lscala/collection/parallel/Combiner<TU;TThat;>;>;)V
   #66 = Utf8               lastres
   #67 = Utf8               tryLeaf$
   #68 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #69 = NameAndType        #67:#68       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #70 = InterfaceMethodref #52.#69       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #71 = Utf8               Lscala/Option;
   #72 = Utf8               tryMerge
   #73 = Utf8               (Ljava/lang/Object;)V
   #74 = Utf8               t
   #75 = Utf8               tryMerge$
   #76 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #77 = NameAndType        #75:#76       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #78 = InterfaceMethodref #52.#77       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #79 = Utf8               mergeThrowables
   #80 = Utf8               (Lscala/collection/parallel/Task<**>;)V
   #81 = Utf8               that
   #82 = Utf8               mergeThrowables$
   #83 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #84 = NameAndType        #82:#83       // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #85 = InterfaceMethodref #52.#84       // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #86 = Utf8               Lscala/collection/parallel/Task;
   #87 = Utf8               signalAbort
   #88 = Utf8               signalAbort$
   #89 = NameAndType        #88:#60       // signalAbort$:(Lscala/collection/parallel/Task;)V
   #90 = InterfaceMethodref #52.#89       // scala/collection/parallel/Task.signalAbort$:(Lscala/collection/parallel/Task;)V
   #91 = Utf8               ()Ljava/lang/Throwable;
   #92 = NameAndType        #37:#38       // throwable:Ljava/lang/Throwable;
   #93 = Fieldref           #2.#92        // scala/collection/parallel/ParIterableLike$FromScanTree.throwable:Ljava/lang/Throwable;
   #94 = Utf8               throwable_$eq
   #95 = Utf8               (Ljava/lang/Throwable;)V
   #96 = Utf8               x$1
   #97 = Utf8               ()Lscala/collection/parallel/Combiner;
   #98 = Utf8               ()Lscala/collection/parallel/Combiner<TU;TThat;>;
   #99 = NameAndType        #34:#35       // result:Lscala/collection/parallel/Combiner;
  #100 = Fieldref           #2.#99        // scala/collection/parallel/ParIterableLike$FromScanTree.result:Lscala/collection/parallel/Combiner;
  #101 = Utf8               result_$eq
  #102 = Utf8               (Lscala/collection/parallel/Combiner;)V
  #103 = Utf8               (Lscala/collection/parallel/Combiner<TU;TThat;>;)V
  #104 = Utf8               leaf
  #105 = Utf8               prev
  #106 = Utf8               scala$collection$parallel$ParIterableLike$FromScanTree$$$outer
  #107 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #108 = NameAndType        #106:#107     // scala$collection$parallel$ParIterableLike$FromScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #109 = Methodref          #2.#108       // scala/collection/parallel/ParIterableLike$FromScanTree.scala$collection$parallel$ParIterableLike$FromScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #110 = NameAndType        #31:#32       // cbf:Lscala/collection/parallel/CombinerFactory;
  #111 = Fieldref           #2.#110       // scala/collection/parallel/ParIterableLike$FromScanTree.cbf:Lscala/collection/parallel/CombinerFactory;
  #112 = Utf8               scala/collection/parallel/CombinerFactory
  #113 = Class              #112          // scala/collection/parallel/CombinerFactory
  #114 = Utf8               apply
  #115 = NameAndType        #114:#97      // apply:()Lscala/collection/parallel/Combiner;
  #116 = InterfaceMethodref #113.#115     // scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
  #117 = Utf8               reuse
  #118 = Utf8               (Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #119 = NameAndType        #117:#118     // reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #120 = InterfaceMethodref #10.#119      // scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #121 = NameAndType        #22:#23       // tree:Lscala/collection/parallel/ParIterableLike$ScanTree;
  #122 = Fieldref           #2.#121       // scala/collection/parallel/ParIterableLike$FromScanTree.tree:Lscala/collection/parallel/ParIterableLike$ScanTree;
  #123 = Utf8               iterate
  #124 = Utf8               (Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/Combiner;)V
  #125 = NameAndType        #123:#124     // iterate:(Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/Combiner;)V
  #126 = Methodref          #2.#125       // scala/collection/parallel/ParIterableLike$FromScanTree.iterate:(Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/Combiner;)V
  #127 = NameAndType        #101:#102     // result_$eq:(Lscala/collection/parallel/Combiner;)V
  #128 = Methodref          #2.#127       // scala/collection/parallel/ParIterableLike$FromScanTree.result_$eq:(Lscala/collection/parallel/Combiner;)V
  #129 = Utf8               cb
  #130 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;Lscala/collection/parallel/Combiner<TU;TThat;>;)V
  #131 = Utf8               left
  #132 = Utf8               ()Lscala/collection/parallel/ParIterableLike$ScanTree;
  #133 = NameAndType        #131:#132     // left:()Lscala/collection/parallel/ParIterableLike$ScanTree;
  #134 = Methodref          #16.#133      // scala/collection/parallel/ParIterableLike$ScanNode.left:()Lscala/collection/parallel/ParIterableLike$ScanTree;
  #135 = Utf8               right
  #136 = NameAndType        #135:#132     // right:()Lscala/collection/parallel/ParIterableLike$ScanTree;
  #137 = Methodref          #16.#136      // scala/collection/parallel/ParIterableLike$ScanNode.right:()Lscala/collection/parallel/ParIterableLike$ScanTree;
  #138 = Utf8               pit
  #139 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #140 = NameAndType        #138:#139     // pit:()Lscala/collection/parallel/IterableSplitter;
  #141 = Methodref          #13.#140      // scala/collection/parallel/ParIterableLike$ScanLeaf.pit:()Lscala/collection/parallel/IterableSplitter;
  #142 = Utf8               len
  #143 = Utf8               ()I
  #144 = NameAndType        #142:#143     // len:()I
  #145 = Methodref          #13.#144      // scala/collection/parallel/ParIterableLike$ScanLeaf.len:()I
  #146 = Utf8               ()Lscala/Option;
  #147 = NameAndType        #105:#146     // prev:()Lscala/Option;
  #148 = Methodref          #13.#147      // scala/collection/parallel/ParIterableLike$ScanLeaf.prev:()Lscala/Option;
  #149 = Utf8               scala/Some
  #150 = Class              #149          // scala/Some
  #151 = Utf8               value
  #152 = NameAndType        #151:#50      // value:()Ljava/lang/Object;
  #153 = Methodref          #150.#152     // scala/Some.value:()Ljava/lang/Object;
  #154 = Utf8               acc
  #155 = NameAndType        #154:#50      // acc:()Ljava/lang/Object;
  #156 = Methodref          #13.#155      // scala/collection/parallel/ParIterableLike$ScanLeaf.acc:()Ljava/lang/Object;
  #157 = NameAndType        #28:#29       // op:Lscala/Function2;
  #158 = Fieldref           #2.#157       // scala/collection/parallel/ParIterableLike$FromScanTree.op:Lscala/Function2;
  #159 = Utf8               scala/collection/parallel/IterableSplitter
  #160 = Class              #159          // scala/collection/parallel/IterableSplitter
  #161 = Utf8               scanToCombiner
  #162 = Utf8               (ILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #163 = NameAndType        #161:#162     // scanToCombiner:(ILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #164 = InterfaceMethodref #160.#163     // scala/collection/parallel/IterableSplitter.scanToCombiner:(ILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #165 = Utf8               scala/runtime/BoxedUnit
  #166 = Class              #165          // scala/runtime/BoxedUnit
  #167 = Utf8               UNIT
  #168 = Utf8               Lscala/runtime/BoxedUnit;
  #169 = NameAndType        #167:#168     // UNIT:Lscala/runtime/BoxedUnit;
  #170 = Fieldref           #166.#169     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #171 = Utf8               scala/None$
  #172 = Class              #171          // scala/None$
  #173 = Utf8               MODULE$
  #174 = Utf8               Lscala/None$;
  #175 = NameAndType        #173:#174     // MODULE$:Lscala/None$;
  #176 = Fieldref           #172.#175     // scala/None$.MODULE$:Lscala/None$;
  #177 = Utf8               equals
  #178 = Utf8               (Ljava/lang/Object;)Z
  #179 = NameAndType        #177:#178     // equals:(Ljava/lang/Object;)Z
  #180 = Methodref          #5.#179       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #181 = NameAndType        #25:#26       // z:Ljava/lang/Object;
  #182 = Fieldref           #2.#181       // scala/collection/parallel/ParIterableLike$FromScanTree.z:Ljava/lang/Object;
  #183 = Utf8               scala/collection/parallel/Combiner
  #184 = Class              #183          // scala/collection/parallel/Combiner
  #185 = Utf8               $plus$eq
  #186 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #187 = NameAndType        #185:#186     // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #188 = InterfaceMethodref #184.#187     // scala/collection/parallel/Combiner.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #189 = Utf8               scala/MatchError
  #190 = Class              #189          // scala/MatchError
  #191 = Utf8               <init>
  #192 = NameAndType        #191:#73      // "<init>":(Ljava/lang/Object;)V
  #193 = Methodref          #190.#192     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #194 = Utf8               Lscala/collection/parallel/ParIterableLike$ScanLeaf;
  #195 = Utf8               p
  #196 = Utf8               Lscala/collection/parallel/IterableSplitter;
  #197 = Utf8               I
  #198 = Utf8               scala/Option
  #199 = Class              #198          // scala/Option
  #200 = Utf8               split
  #201 = Utf8               ()Lscala/collection/immutable/Seq;
  #202 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/Task<Lscala/collection/parallel/Combiner<TU;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.FromScanTree<TU;TThat;>;>;>;
  #203 = Utf8               scala/package$
  #204 = Class              #203          // scala/package$
  #205 = Utf8               Lscala/package$;
  #206 = NameAndType        #173:#205     // MODULE$:Lscala/package$;
  #207 = Fieldref           #204.#206     // scala/package$.MODULE$:Lscala/package$;
  #208 = Utf8               Seq
  #209 = Utf8               ()Lscala/collection/immutable/Seq$;
  #210 = NameAndType        #208:#209     // Seq:()Lscala/collection/immutable/Seq$;
  #211 = Methodref          #204.#210     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #212 = Utf8               scala/runtime/ScalaRunTime$
  #213 = Class              #212          // scala/runtime/ScalaRunTime$
  #214 = Utf8               Lscala/runtime/ScalaRunTime$;
  #215 = NameAndType        #173:#214     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #216 = Fieldref           #213.#215     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #217 = Utf8               (Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/CombinerFactory;)V
  #218 = NameAndType        #191:#217     // "<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/CombinerFactory;)V
  #219 = Methodref          #2.#218       // scala/collection/parallel/ParIterableLike$FromScanTree."<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/CombinerFactory;)V
  #220 = Utf8               [Ljava/lang/Object;
  #221 = Class              #220          // "[Ljava/lang/Object;"
  #222 = Utf8               wrapRefArray
  #223 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #224 = NameAndType        #222:#223     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #225 = Methodref          #213.#224     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #226 = Utf8               scala/collection/immutable/Seq$
  #227 = Class              #226          // scala/collection/immutable/Seq$
  #228 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #229 = NameAndType        #114:#228     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #230 = Methodref          #227.#229     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #231 = Utf8               scala/collection/immutable/Seq
  #232 = Class              #231          // scala/collection/immutable/Seq
  #233 = Utf8               java/lang/UnsupportedOperationException
  #234 = Class              #233          // java/lang/UnsupportedOperationException
  #235 = Utf8               Cannot be split further
  #236 = String             #235          // Cannot be split further
  #237 = Utf8               (Ljava/lang/String;)V
  #238 = NameAndType        #191:#237     // "<init>":(Ljava/lang/String;)V
  #239 = Methodref          #234.#238     // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
  #240 = Utf8               shouldSplitFurther
  #241 = Utf8               merge
  #242 = Utf8               (Lscala/collection/parallel/ParIterableLike$FromScanTree;)V
  #243 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.FromScanTree<TU;TThat;>;)V
  #244 = NameAndType        #34:#97       // result:()Lscala/collection/parallel/Combiner;
  #245 = Methodref          #2.#244       // scala/collection/parallel/ParIterableLike$FromScanTree.result:()Lscala/collection/parallel/Combiner;
  #246 = Utf8               combine
  #247 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #248 = NameAndType        #246:#247     // combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #249 = InterfaceMethodref #184.#248     // scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #250 = NameAndType        #39:#40       // $outer:Lscala/collection/parallel/ParIterableLike;
  #251 = Fieldref           #2.#250       // scala/collection/parallel/ParIterableLike$FromScanTree.$outer:Lscala/collection/parallel/ParIterableLike;
  #252 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #253 = NameAndType        #241:#242     // merge:(Lscala/collection/parallel/ParIterableLike$FromScanTree;)V
  #254 = Methodref          #2.#253       // scala/collection/parallel/ParIterableLike$FromScanTree.merge:(Lscala/collection/parallel/ParIterableLike$FromScanTree;)V
  #255 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;TU;Lscala/Function2<TU;TU;TU;>;Lscala/collection/parallel/CombinerFactory<TU;TThat;>;)V
  #256 = NameAndType        #191:#58      // "<init>":()V
  #257 = Methodref          #5.#256       // java/lang/Object."<init>":()V
  #258 = Utf8               $init$
  #259 = NameAndType        #258:#60      // $init$:(Lscala/collection/parallel/Task;)V
  #260 = InterfaceMethodref #52.#259      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #261 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #262 = NameAndType        #258:#261     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #263 = InterfaceMethodref #7.#262       // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #264 = Utf8               Signature
  #265 = Utf8               Code
  #266 = Utf8               LineNumberTable
  #267 = Utf8               LocalVariableTable
  #268 = Utf8               MethodParameters
  #269 = Utf8               StackMapTable
  #270 = Utf8               InnerClasses
  #271 = Utf8               SourceFile
  #272 = Utf8               ScalaInlineInfo
  #273 = Utf8               Scala
{
  private final scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U> tree;
    descriptor: Lscala/collection/parallel/ParIterableLike$ScanTree;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #24                          // Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;

  private final U z;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #27                          // TU;

  private final scala.Function2<U, U, U> op;
    descriptor: Lscala/Function2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #30                          // Lscala/Function2<TU;TU;TU;>;

  private final scala.collection.parallel.CombinerFactory<U, That> cbf;
    descriptor: Lscala/collection/parallel/CombinerFactory;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #33                          // Lscala/collection/parallel/CombinerFactory<TU;TThat;>;

  private volatile scala.collection.parallel.Combiner<U, That> result;
    descriptor: Lscala/collection/parallel/Combiner;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #36                          // Lscala/collection/parallel/Combiner<TU;TThat;>;

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParIterableLike $outer;
    descriptor: Lscala/collection/parallel/ParIterableLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #46                 // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.requiresStrictSplitters$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
         4: ireturn
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #56                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<U, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #70                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0       6     1 lastres   Lscala/Option;
    Signature: #65                          // (Lscala/Option<Lscala/collection/parallel/Combiner<TU;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #78                 // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #85                 // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #80                          // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #90                 // InterfaceMethod scala/collection/parallel/Task.signalAbort$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #93                 // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #93                 // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.Combiner<U, That> result();
    descriptor: ()Lscala/collection/parallel/Combiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #100                // Field result:Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 1364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
    Signature: #98                          // ()Lscala/collection/parallel/Combiner<TU;TThat;>;

  public void result_$eq(scala.collection.parallel.Combiner<U, That>);
    descriptor: (Lscala/collection/parallel/Combiner;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #100                // Field result:Lscala/collection/parallel/Combiner;
         5: return
      LineNumberTable:
        line 1364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0       6     1   x$1   Lscala/collection/parallel/Combiner;
    Signature: #103                         // (Lscala/collection/parallel/Combiner<TU;TThat;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.collection.parallel.Combiner<U, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #109                // Method scala$collection$parallel$ParIterableLike$FromScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: aload_1
         5: aload_0
         6: getfield      #111                // Field cbf:Lscala/collection/parallel/CombinerFactory;
         9: invokeinterface #116,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
        14: invokeinterface #120,  3          // InterfaceMethod scala/collection/parallel/ParIterableLike.reuse:(Lscala/Option;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        19: astore_2
        20: aload_0
        21: aload_0
        22: getfield      #122                // Field tree:Lscala/collection/parallel/ParIterableLike$ScanTree;
        25: aload_2
        26: invokespecial #126                // Method iterate:(Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/Combiner;)V
        29: aload_0
        30: aload_2
        31: invokevirtual #128                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        34: return
      LineNumberTable:
        line 1366: 0
        line 1367: 20
        line 1368: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      14     2    cb   Lscala/collection/parallel/Combiner;
            0      35     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0      35     1  prev   Lscala/Option;
    Signature: #65                          // (Lscala/Option<Lscala/collection/parallel/Combiner<TU;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  private void iterate(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U>, scala.collection.parallel.Combiner<U, That>);
    descriptor: (Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/Combiner;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=19, args_size=3
         0: iconst_0
         1: istore        5
         3: aconst_null
         4: astore        6
         6: aload_1
         7: astore        7
         9: aload         7
        11: instanceof    #16                 // class scala/collection/parallel/ParIterableLike$ScanNode
        14: ifeq          53
        17: aload         7
        19: checkcast     #16                 // class scala/collection/parallel/ParIterableLike$ScanNode
        22: astore        8
        24: aload         8
        26: invokevirtual #134                // Method scala/collection/parallel/ParIterableLike$ScanNode.left:()Lscala/collection/parallel/ParIterableLike$ScanTree;
        29: astore        9
        31: aload         8
        33: invokevirtual #137                // Method scala/collection/parallel/ParIterableLike$ScanNode.right:()Lscala/collection/parallel/ParIterableLike$ScanTree;
        36: astore        10
        38: aload_0
        39: aload         9
        41: aload_2
        42: invokespecial #126                // Method iterate:(Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/Combiner;)V
        45: aload         10
        47: aload_2
        48: astore_2
        49: astore_1
        50: goto          0
        53: goto          56
        56: aload         7
        58: instanceof    #13                 // class scala/collection/parallel/ParIterableLike$ScanLeaf
        61: ifeq          151
        64: iconst_1
        65: istore        5
        67: aload         7
        69: checkcast     #13                 // class scala/collection/parallel/ParIterableLike$ScanLeaf
        72: astore        6
        74: aload         6
        76: invokevirtual #141                // Method scala/collection/parallel/ParIterableLike$ScanLeaf.pit:()Lscala/collection/parallel/IterableSplitter;
        79: astore        11
        81: aload         6
        83: invokevirtual #145                // Method scala/collection/parallel/ParIterableLike$ScanLeaf.len:()I
        86: istore        12
        88: aload         6
        90: invokevirtual #148                // Method scala/collection/parallel/ParIterableLike$ScanLeaf.prev:()Lscala/Option;
        93: astore        13
        95: aload         13
        97: instanceof    #150                // class scala/Some
       100: ifeq          148
       103: aload         13
       105: checkcast     #150                // class scala/Some
       108: astore        14
       110: aload         14
       112: invokevirtual #153                // Method scala/Some.value:()Ljava/lang/Object;
       115: checkcast     #13                 // class scala/collection/parallel/ParIterableLike$ScanLeaf
       118: astore        15
       120: aload         11
       122: iload         12
       124: aload         15
       126: invokevirtual #156                // Method scala/collection/parallel/ParIterableLike$ScanLeaf.acc:()Ljava/lang/Object;
       129: aload_0
       130: getfield      #158                // Field op:Lscala/Function2;
       133: aload_2
       134: invokeinterface #164,  5          // InterfaceMethod scala/collection/parallel/IterableSplitter.scanToCombiner:(ILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       139: pop
       140: getstatic     #170                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       143: astore        4
       145: goto          245
       148: goto          154
       151: goto          154
       154: iload         5
       156: ifeq          232
       159: aload         6
       161: invokevirtual #141                // Method scala/collection/parallel/ParIterableLike$ScanLeaf.pit:()Lscala/collection/parallel/IterableSplitter;
       164: astore        16
       166: aload         6
       168: invokevirtual #145                // Method scala/collection/parallel/ParIterableLike$ScanLeaf.len:()I
       171: istore        17
       173: aload         6
       175: invokevirtual #148                // Method scala/collection/parallel/ParIterableLike$ScanLeaf.prev:()Lscala/Option;
       178: astore        18
       180: getstatic     #176                // Field scala/None$.MODULE$:Lscala/None$;
       183: aload         18
       185: invokevirtual #180                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       188: ifeq          229
       191: aload_2
       192: aload_0
       193: getfield      #182                // Field z:Ljava/lang/Object;
       196: invokeinterface #188,  2          // InterfaceMethod scala/collection/parallel/Combiner.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       201: pop
       202: aload         16
       204: iload         17
       206: aload_0
       207: getfield      #182                // Field z:Ljava/lang/Object;
       210: aload_0
       211: getfield      #158                // Field op:Lscala/Function2;
       214: aload_2
       215: invokeinterface #164,  5          // InterfaceMethod scala/collection/parallel/IterableSplitter.scanToCombiner:(ILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
       220: pop
       221: getstatic     #170                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       224: astore        4
       226: goto          245
       229: goto          235
       232: goto          235
       235: new           #190                // class scala/MatchError
       238: dup
       239: aload         7
       241: invokespecial #193                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       244: athrow
       245: getstatic     #170                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       248: pop
       249: return
      StackMapTable: number_of_entries = 10
        frame_type = 0 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 52
          locals = [ class scala/collection/parallel/ParIterableLike$FromScanTree, class scala/collection/parallel/ParIterableLike$ScanTree, class scala/collection/parallel/Combiner, top, top, int, null, class scala/collection/parallel/ParIterableLike$ScanTree ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 91
          locals = [ class scala/collection/parallel/ParIterableLike$FromScanTree, class scala/collection/parallel/ParIterableLike$ScanTree, class scala/collection/parallel/Combiner, top, top, int, class scala/collection/parallel/ParIterableLike$ScanLeaf, class scala/collection/parallel/ParIterableLike$ScanTree, top, top, top, class scala/collection/parallel/IterableSplitter, int, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/parallel/ParIterableLike$FromScanTree, class scala/collection/parallel/ParIterableLike$ScanTree, class scala/collection/parallel/Combiner, top, top, int, null, class scala/collection/parallel/ParIterableLike$ScanTree ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/parallel/ParIterableLike$FromScanTree, class scala/collection/parallel/ParIterableLike$ScanTree, class scala/collection/parallel/Combiner, top, top, int, class scala/collection/parallel/ParIterableLike$ScanLeaf, class scala/collection/parallel/ParIterableLike$ScanTree ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 74
          locals = [ class scala/collection/parallel/ParIterableLike$FromScanTree, class scala/collection/parallel/ParIterableLike$ScanTree, class scala/collection/parallel/Combiner, top, top, int, class scala/collection/parallel/ParIterableLike$ScanLeaf, class scala/collection/parallel/ParIterableLike$ScanTree, top, top, top, top, top, top, top, top, class scala/collection/parallel/IterableSplitter, int, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/parallel/ParIterableLike$FromScanTree, class scala/collection/parallel/ParIterableLike$ScanTree, class scala/collection/parallel/Combiner, top, top, int, class scala/collection/parallel/ParIterableLike$ScanLeaf, class scala/collection/parallel/ParIterableLike$ScanTree ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/parallel/ParIterableLike$FromScanTree, class scala/collection/parallel/ParIterableLike$ScanTree, class scala/collection/parallel/Combiner, top, class scala/runtime/BoxedUnit, int, class scala/collection/parallel/ParIterableLike$ScanLeaf, class scala/collection/parallel/ParIterableLike$ScanTree ]
          stack = []
      LineNumberTable:
        line 1370: 0
        line 1371: 9
        line 1372: 38
        line 1373: 45
        line 1371: 53
        line 1374: 56
        line 1375: 120
        line 1374: 148
        line 1376: 154
        line 1377: 191
        line 1378: 202
        line 1376: 229
        line 1370: 235
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31      22     9  left   Lscala/collection/parallel/ParIterableLike$ScanTree;
           38      15    10 right   Lscala/collection/parallel/ParIterableLike$ScanTree;
          120      28    15  prev   Lscala/collection/parallel/ParIterableLike$ScanLeaf;
           81      70    11     p   Lscala/collection/parallel/IterableSplitter;
           88      63    12   len   I
          166      66    16     p   Lscala/collection/parallel/IterableSplitter;
          173      59    17   len   I
            0     250     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0     250     1  tree   Lscala/collection/parallel/ParIterableLike$ScanTree;
            0     250     2    cb   Lscala/collection/parallel/Combiner;
    Signature: #130                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;Lscala/collection/parallel/Combiner<TU;TThat;>;)V
    MethodParameters:
      Name                           Flags
      tree                           final
      cb                             final

  public scala.collection.immutable.Seq<scala.collection.parallel.Task<scala.collection.parallel.Combiner<U, That>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.FromScanTree<U, That>>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=6, args_size=1
         0: aload_0
         1: getfield      #122                // Field tree:Lscala/collection/parallel/ParIterableLike$ScanTree;
         4: astore_2
         5: aload_2
         6: instanceof    #16                 // class scala/collection/parallel/ParIterableLike$ScanNode
         9: ifeq          114
        12: aload_2
        13: checkcast     #16                 // class scala/collection/parallel/ParIterableLike$ScanNode
        16: astore_3
        17: aload_3
        18: invokevirtual #134                // Method scala/collection/parallel/ParIterableLike$ScanNode.left:()Lscala/collection/parallel/ParIterableLike$ScanTree;
        21: astore        4
        23: aload_3
        24: invokevirtual #137                // Method scala/collection/parallel/ParIterableLike$ScanNode.right:()Lscala/collection/parallel/ParIterableLike$ScanTree;
        27: astore        5
        29: getstatic     #207                // Field scala/package$.MODULE$:Lscala/package$;
        32: invokevirtual #211                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        35: getstatic     #216                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        38: iconst_2
        39: anewarray     #2                  // class scala/collection/parallel/ParIterableLike$FromScanTree
        42: dup
        43: iconst_0
        44: new           #2                  // class scala/collection/parallel/ParIterableLike$FromScanTree
        47: dup
        48: aload_0
        49: invokevirtual #109                // Method scala$collection$parallel$ParIterableLike$FromScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
        52: aload         4
        54: aload_0
        55: getfield      #182                // Field z:Ljava/lang/Object;
        58: aload_0
        59: getfield      #158                // Field op:Lscala/Function2;
        62: aload_0
        63: getfield      #111                // Field cbf:Lscala/collection/parallel/CombinerFactory;
        66: invokespecial #219                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/CombinerFactory;)V
        69: aastore
        70: dup
        71: iconst_1
        72: new           #2                  // class scala/collection/parallel/ParIterableLike$FromScanTree
        75: dup
        76: aload_0
        77: invokevirtual #109                // Method scala$collection$parallel$ParIterableLike$FromScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
        80: aload         5
        82: aload_0
        83: getfield      #182                // Field z:Ljava/lang/Object;
        86: aload_0
        87: getfield      #158                // Field op:Lscala/Function2;
        90: aload_0
        91: getfield      #111                // Field cbf:Lscala/collection/parallel/CombinerFactory;
        94: invokespecial #219                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/CombinerFactory;)V
        97: aastore
        98: checkcast     #221                // class "[Ljava/lang/Object;"
       101: invokevirtual #225                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       104: invokevirtual #230                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       107: checkcast     #232                // class scala/collection/immutable/Seq
       110: astore_1
       111: goto          127
       114: goto          117
       117: new           #234                // class java/lang/UnsupportedOperationException
       120: dup
       121: ldc           #236                // String Cannot be split further
       123: invokespecial #239                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       126: athrow
       127: aload_1
       128: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 114
          locals = [ top, class scala/collection/parallel/ParIterableLike$ScanTree ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/parallel/ParIterableLike$FromScanTree, class scala/collection/immutable/Seq, class scala/collection/parallel/ParIterableLike$ScanTree, class scala/collection/parallel/ParIterableLike$ScanNode, class scala/collection/parallel/ParIterableLike$ScanTree, class scala/collection/parallel/ParIterableLike$ScanTree ]
          stack = []
      LineNumberTable:
        line 1380: 0
        line 1381: 5
        line 1382: 44
        line 1383: 72
        line 1381: 114
        line 1385: 117
        line 1380: 127
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      91     4  left   Lscala/collection/parallel/ParIterableLike$ScanTree;
           29      85     5 right   Lscala/collection/parallel/ParIterableLike$ScanTree;
            0     129     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
    Signature: #202                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/Task<Lscala/collection/parallel/Combiner<TU;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.FromScanTree<TU;TThat;>;>;>;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: getfield      #122                // Field tree:Lscala/collection/parallel/ParIterableLike$ScanTree;
         4: astore_2
         5: aload_2
         6: instanceof    #16                 // class scala/collection/parallel/ParIterableLike$ScanNode
         9: ifeq          17
        12: iconst_1
        13: istore_1
        14: goto          44
        17: goto          20
        20: aload_2
        21: instanceof    #13                 // class scala/collection/parallel/ParIterableLike$ScanLeaf
        24: ifeq          32
        27: iconst_0
        28: istore_1
        29: goto          44
        32: goto          35
        35: new           #190                // class scala/MatchError
        38: dup
        39: aload_2
        40: invokespecial #193                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        43: athrow
        44: iload_1
        45: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 17
          locals = [ top, class scala/collection/parallel/ParIterableLike$ScanTree ]
        frame_type = 2 /* same */
        frame_type = 11 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParIterableLike$FromScanTree, int, class scala/collection/parallel/ParIterableLike$ScanTree ]
          stack = []
      LineNumberTable:
        line 1387: 0
        line 1388: 5
        line 1389: 20
        line 1387: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;

  public void merge(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.FromScanTree<U, That>);
    descriptor: (Lscala/collection/parallel/ParIterableLike$FromScanTree;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #245                // Method result:()Lscala/collection/parallel/Combiner;
         5: aload_1
         6: invokevirtual #245                // Method result:()Lscala/collection/parallel/Combiner;
         9: invokeinterface #249,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        14: invokevirtual #128                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        17: return
      LineNumberTable:
        line 1391: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0      18     1  that   Lscala/collection/parallel/ParIterableLike$FromScanTree;
    Signature: #243                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.FromScanTree<TU;TThat;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$FromScanTree$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #251                // Field $outer:Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method scala$collection$parallel$ParIterableLike$FromScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$FromScanTree
         5: invokevirtual #254                // Method merge:(Lscala/collection/parallel/ParIterableLike$FromScanTree;)V
         8: return
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #184                // class scala/collection/parallel/Combiner
         5: invokevirtual #128                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
         8: return
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #245                // Method result:()Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 1361: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;

  public scala.collection.parallel.ParIterableLike$FromScanTree(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U>, U, scala.Function2<U, U, U>, scala.collection.parallel.CombinerFactory<U, That>);
    descriptor: (Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Ljava/lang/Object;Lscala/Function2;Lscala/collection/parallel/CombinerFactory;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: aload_0
         1: aload_2
         2: putfield      #122                // Field tree:Lscala/collection/parallel/ParIterableLike$ScanTree;
         5: aload_0
         6: aload_3
         7: putfield      #182                // Field z:Ljava/lang/Object;
        10: aload_0
        11: aload         4
        13: putfield      #158                // Field op:Lscala/Function2;
        16: aload_0
        17: aload         5
        19: putfield      #111                // Field cbf:Lscala/collection/parallel/CombinerFactory;
        22: aload_1
        23: ifnonnull     28
        26: aconst_null
        27: athrow
        28: aload_0
        29: aload_1
        30: putfield      #251                // Field $outer:Lscala/collection/parallel/ParIterableLike;
        33: aload_0
        34: invokespecial #257                // Method java/lang/Object."<init>":()V
        37: aload_0
        38: invokestatic  #260                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        41: aload_0
        42: invokestatic  #263                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        45: aload_0
        46: aconst_null
        47: putfield      #100                // Field result:Lscala/collection/parallel/Combiner;
        50: return
      StackMapTable: number_of_entries = 1
        frame_type = 28 /* same */
      LineNumberTable:
        line 1362: 0
        line 1361: 22
        line 1363: 33
        line 1364: 45
        line 1362: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lscala/collection/parallel/ParIterableLike$FromScanTree;
            0      51     1 $outer   Lscala/collection/parallel/ParIterableLike;
            0      51     2  tree   Lscala/collection/parallel/ParIterableLike$ScanTree;
            0      51     3     z   Ljava/lang/Object;
            0      51     4    op   Lscala/Function2;
            0      51     5   cbf   Lscala/collection/parallel/CombinerFactory;
    Signature: #255                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;TU;Lscala/Function2<TU;TU;TU;>;Lscala/collection/parallel/CombinerFactory<TU;TThat;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      tree                           final
      z                              final
      op                             final
      cbf                            final
}
InnerClasses:
  public #11= #2 of #10;                  // FromScanTree=class scala/collection/parallel/ParIterableLike$FromScanTree of class scala/collection/parallel/ParIterableLike
  public #14= #13 of #10;                 // ScanLeaf=class scala/collection/parallel/ParIterableLike$ScanLeaf of class scala/collection/parallel/ParIterableLike
  public #17= #16 of #10;                 // ScanNode=class scala/collection/parallel/ParIterableLike$ScanNode of class scala/collection/parallel/ParIterableLike
  public #20= #19 of #10;                 // ScanTree=class scala/collection/parallel/ParIterableLike$ScanTree of class scala/collection/parallel/ParIterableLike
  public #21= #7 of #10;                  // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
Signature: #3                           // <U:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.StrictSplitterCheckTask<Lscala/collection/parallel/Combiner<TU;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.FromScanTree<TU;TThat;>;>;
SourceFile: "ParIterableLike.scala"
  ScalaInlineInfo: length = 0x72 (unknown attribute)
   01 00 00 16 00 BF 00 D9 00 00 39 00 3A 00 00 7B
   00 7C 01 00 68 00 40 00 00 F1 00 49 00 00 F1 00
   F2 00 00 4F 00 3C 00 00 31 00 32 00 00 29 00 2A
   00 00 22 00 32 00 00 22 00 61 00 00 65 00 49 00
   00 65 00 66 00 00 6A 00 6B 00 00 FC 00 6B 00 00
   F0 00 2A 00 00 57 00 3A 00 00 C8 00 C9 00 00 25
   00 5B 00 00 5E 00 5F 00 00 3F 00 40 00 00 48 00
   49 00
  Scala: length = 0x0 (unknown attribute)

