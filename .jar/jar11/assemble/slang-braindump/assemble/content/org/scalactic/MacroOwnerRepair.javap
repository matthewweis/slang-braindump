Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalactic/MacroOwnerRepair.class
  Last modified May 29, 2022; size 5306 bytes
  SHA-256 checksum 1a0a2aa66aa870d5a4ee477fdf4dfc051d5923fb9947a327a3f87e4e1e2ea266
  Compiled from "MacroOwnerRepair.scala"
public class org.scalactic.MacroOwnerRepair<C extends scala.reflect.macros.whitebox.Context & java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalactic/MacroOwnerRepair
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 6
Constant pool:
    #1 = Utf8               org/scalactic/MacroOwnerRepair
    #2 = Class              #1            // org/scalactic/MacroOwnerRepair
    #3 = Utf8               <C::Lscala/reflect/macros/whitebox/Context;:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               MacroOwnerRepair.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005\u0005ma!B\b\u0011\u0001I!\u0002\u0002\u0003\u000f\u0001\u0005\u000b\u0007I\u0011\u0001\u0010\t\u0011q\u0002!\u0011!Q\u0001\n}AQ!\u0010\u0001\u0005\u0002yBQA\u0011\u0001\u0005\u0002\r3A!\u0016\u0001\u0005-\"A\u0001,\u0002BC\u0002\u0013\u0005\u0011\f\u0003\u0005e\u000b\t\u0005\t\u0015!\u0003[\u0011\u0015iT\u0001\"\u0001f\r\u0011AW\u0001A5\t\u0013EL!\u0011!Q\u0001\nI<\b\"\u0003=\n\u0005\u0003\u0005\u000b\u0011\u0002:z\u0011\u0015i\u0014\u0002\"\u0001{\u0011\u0015q\u0018\u0002\"\u0011\u0000\u0011\u0019\u0011U\u0001\"\u0001\u0002\u0012\t\u0001R*Y2s_>;h.\u001a:SKB\f\u0017N\u001d\u0006\u0003#I\t\u0011b]2bY\u0006\u001cG/[2\u000b\u0003M\t1a\u001c:h+\t)\u0012e\u0005\u0002\u0001-A\u0011qCG\u0007\u00021)\t\u0011$A\u0003tG\u0006d\u0017-\u0003\u0002\u001c1\t1\u0011I\\=SK\u001a\f\u0011aY\u0002\u0001+\u0005y\u0002C\u0001\u0011\"\u0019\u0001!QA\t\u0001C\u0002\r\u0012\u0011aQ\t\u0003I\u001d\u0002\"aF\u0013\n\u0005\u0019B\"a\u0002(pi\"Lgn\u001a\n\u0004Q)Jd\u0001B\u0015\u0001\u0001\u001d\u0012A\u0002\u0010:fM&tW-\\3oiz\u0002\"a\u000b\u001c\u000f\u00051\u001adBA\u00171\u001d\t9b&\u0003\u000201\u00059!/\u001a4mK\u000e$\u0018BA\u00193\u0003\u0019i\u0017m\u0019:pg*\u0011q\u0006G\u0005\u0003iU\nq\u0001]1dW\u0006<WM\u0003\u00022e%\u0011q\u0007\u000f\u0002\b\u0007>tG/\u001a=u\u0015\t!T\u0007\u0005\u0002\u0018u%\u00111\b\u0007\u0002\n\'&tw\r\\3u_:\f!a\u0019\u0011\u0002\rqJg.\u001b;?)\ty\u0014\tE\u0002A\u0001}i\u0011\u0001\u0005\u0005\u00069\r\u0001\raH\u0001\re\u0016\u0004\u0018-\u001b:Po:,\'o]\u000b\u0003\t6#\"!R*\u0011\u0007\u0019CEJ\u0004\u0002H\u00035\t\u0001!\u0003\u0002J\u0015\n!Q\t\u001f9s\u0013\tYUGA\u0004BY&\f7/Z:\u0011\u0005\u0001jE!\u0002(\u0005\u0005\u0004y%!A!\u0012\u0005\u0011\u0002\u0006CA\fR\u0013\t\u0011\u0006DA\u0002B]fDQ\u0001\u0016\u0003A\u0002\u0015\u000bA!\u001a=qe\n)Q\u000b^5mgV\u0011qkW\n\u0003\u000bY\t\u0011!^\u000b\u00025B\u0011\u0001e\u0017\u0003\u00069\u0016\u0011\r!\u0018\u0002\u0002+F\u0011AE\u0018\t\u0003?\nl\u0011\u0001\u0019\u0006\u0003CJ\n\u0001\"\u001b8uKJt\u0017\r\\\u0005\u0003G\u0002\u00141bU=nE>dG+\u00192mK\u0006\u0011Q\u000f\t\u000b\u0003M\u001e\u00042aR\u0003[\u0011\u0015A\u0006\u00021\u0001[\u0005\t\u001a\u0005.\u00198hK>;h.\u001a:B]\u0012lu\u000eZ;mK\u000ec\u0017m]:Ue\u00064XM]:feN\u0011\u0011B\u001b\t\u0003W6t!\u0001\u001c\u0004\u000e\u0003\u0015I!A\\8\u0003)\rC\u0017M\\4f\u001f^tWM\u001d+sCZ,\'o]3s\u0013\t\u0001\bMA\u0003Ue\u0016,7/\u0001\u0005pY\u0012|wO\\3s!\tY7/\u0003\u0002uk\n11+_7c_2L!A\u001e1\u0003\u000fMKXNY8mg&\u0011\u0011/\\\u0001\t]\u0016<xn\u001e8fe&\u0011\u00010\u001c\u000b\u0004wrl\bC\u00017\n\u0011\u0015\tH\u00021\u0001s\u0011\u0015AH\u00021\u0001s\u0003!!(/\u0019<feN,G\u0003BA\u0001\u0003\u000f\u00012aFA\u0002\u0013\r\t)\u0001\u0007\u0002\u0005+:LG\u000fC\u0004\u0002\n5\u0001\r!a\u0003\u0002\tQ\u0014X-\u001a\t\u0004W\u00065\u0011bAA\b_\n!AK]3f)\u0019\tY!a\u0005\u0002\u0018!9\u0011Q\u0003\bA\u0002\u0005-\u0011!\u0001;\t\r\u0005ea\u00021\u0001s\u0003Ii\u0017m\u0019:p\u0007\u0006dGnU5uK>;h.\u001a:
   #10 = Utf8               org/scalactic/MacroOwnerRepair$$typecreator1$1
   #11 = Class              #10           // org/scalactic/MacroOwnerRepair$$typecreator1$1
   #12 = Utf8               $typecreator1$1
   #13 = Utf8               org/scalactic/MacroOwnerRepair$Utils
   #14 = Class              #13           // org/scalactic/MacroOwnerRepair$Utils
   #15 = Utf8               Utils
   #16 = Utf8               scala/reflect/api/Exprs$Expr
   #17 = Class              #16           // scala/reflect/api/Exprs$Expr
   #18 = Utf8               scala/reflect/api/Exprs
   #19 = Class              #18           // scala/reflect/api/Exprs
   #20 = Utf8               Expr
   #21 = Utf8               scala/reflect/api/Trees$TreeApi
   #22 = Class              #21           // scala/reflect/api/Trees$TreeApi
   #23 = Utf8               scala/reflect/api/Trees
   #24 = Class              #23           // scala/reflect/api/Trees
   #25 = Utf8               TreeApi
   #26 = Utf8               scala/reflect/api/TypeTags$WeakTypeTag
   #27 = Class              #26           // scala/reflect/api/TypeTags$WeakTypeTag
   #28 = Utf8               scala/reflect/api/TypeTags
   #29 = Class              #28           // scala/reflect/api/TypeTags
   #30 = Utf8               WeakTypeTag
   #31 = Utf8               scala/reflect/api/TypeTags$WeakTypeTag$
   #32 = Class              #31           // scala/reflect/api/TypeTags$WeakTypeTag$
   #33 = Utf8               WeakTypeTag$
   #34 = Utf8               scala/reflect/api/Types$TypeApi
   #35 = Class              #34           // scala/reflect/api/Types$TypeApi
   #36 = Utf8               scala/reflect/api/Types
   #37 = Class              #36           // scala/reflect/api/Types
   #38 = Utf8               TypeApi
   #39 = Utf8               scala/reflect/internal/Symbols$Symbol
   #40 = Class              #39           // scala/reflect/internal/Symbols$Symbol
   #41 = Utf8               scala/reflect/internal/Symbols
   #42 = Class              #41           // scala/reflect/internal/Symbols
   #43 = Utf8               Symbol
   #44 = Utf8               scala/reflect/internal/Trees$Tree
   #45 = Class              #44           // scala/reflect/internal/Trees$Tree
   #46 = Utf8               scala/reflect/internal/Trees
   #47 = Class              #46           // scala/reflect/internal/Trees
   #48 = Utf8               Tree
   #49 = Utf8               scala/tools/nsc/typechecker/Contexts$Context
   #50 = Class              #49           // scala/tools/nsc/typechecker/Contexts$Context
   #51 = Utf8               scala/tools/nsc/typechecker/Contexts
   #52 = Class              #51           // scala/tools/nsc/typechecker/Contexts
   #53 = Utf8               Context
   #54 = Utf8               scala/tools/nsc/typechecker/Typers$Typer
   #55 = Class              #54           // scala/tools/nsc/typechecker/Typers$Typer
   #56 = Utf8               scala/tools/nsc/typechecker/Typers
   #57 = Class              #56           // scala/tools/nsc/typechecker/Typers
   #58 = Utf8               Typer
   #59 = Utf8               c
   #60 = Utf8               Lscala/reflect/macros/whitebox/Context;
   #61 = Utf8               TC;
   #62 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #63 = Utf8               ()TC;
   #64 = NameAndType        #59:#60       // c:Lscala/reflect/macros/whitebox/Context;
   #65 = Fieldref           #2.#64        // org/scalactic/MacroOwnerRepair.c:Lscala/reflect/macros/whitebox/Context;
   #66 = Utf8               this
   #67 = Utf8               Lorg/scalactic/MacroOwnerRepair;
   #68 = Utf8               repairOwners
   #69 = Utf8               (Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #70 = Utf8               <A:Ljava/lang/Object;>(Lscala/reflect/api/Exprs$Expr<TA;>;)Lscala/reflect/api/Exprs$Expr<TA;>;
   #71 = Utf8               expr
   #72 = NameAndType        #59:#62       // c:()Lscala/reflect/macros/whitebox/Context;
   #73 = Methodref          #2.#72        // org/scalactic/MacroOwnerRepair.c:()Lscala/reflect/macros/whitebox/Context;
   #74 = Utf8               scala/reflect/macros/whitebox/Context
   #75 = Class              #74           // scala/reflect/macros/whitebox/Context
   #76 = Utf8               universe
   #77 = Utf8               ()Lscala/reflect/macros/Universe;
   #78 = NameAndType        #76:#77       // universe:()Lscala/reflect/macros/Universe;
   #79 = InterfaceMethodref #75.#78       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
   #80 = Utf8               scala/reflect/internal/SymbolTable
   #81 = Class              #80           // scala/reflect/internal/SymbolTable
   #82 = Utf8               <init>
   #83 = Utf8               (Lorg/scalactic/MacroOwnerRepair;Lscala/reflect/internal/SymbolTable;)V
   #84 = NameAndType        #82:#83       // "<init>":(Lorg/scalactic/MacroOwnerRepair;Lscala/reflect/internal/SymbolTable;)V
   #85 = Methodref          #14.#84       // org/scalactic/MacroOwnerRepair$Utils."<init>":(Lorg/scalactic/MacroOwnerRepair;Lscala/reflect/internal/SymbolTable;)V
   #86 = Utf8               macroApplication
   #87 = Utf8               ()Lscala/reflect/api/Trees$TreeApi;
   #88 = NameAndType        #86:#87       // macroApplication:()Lscala/reflect/api/Trees$TreeApi;
   #89 = InterfaceMethodref #75.#88       // scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
   #90 = Utf8               pos
   #91 = Utf8               ()Lscala/reflect/api/Position;
   #92 = NameAndType        #90:#91       // pos:()Lscala/reflect/api/Position;
   #93 = InterfaceMethodref #22.#92       // scala/reflect/api/Trees$TreeApi.pos:()Lscala/reflect/api/Position;
   #94 = Utf8               tree
   #95 = NameAndType        #94:#87       // tree:()Lscala/reflect/api/Trees$TreeApi;
   #96 = InterfaceMethodref #17.#95       // scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
   #97 = Utf8               scala/reflect/macros/Universe
   #98 = Class              #97           // scala/reflect/macros/Universe
   #99 = Utf8               atPos
  #100 = Utf8               (Lscala/reflect/api/Position;Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
  #101 = NameAndType        #99:#100      // atPos:(Lscala/reflect/api/Position;Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
  #102 = Methodref          #98.#101      // scala/reflect/macros/Universe.atPos:(Lscala/reflect/api/Position;Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
  #103 = Utf8               typeCheck$default$2
  #104 = Utf8               ()Lscala/reflect/api/Types$TypeApi;
  #105 = NameAndType        #103:#104     // typeCheck$default$2:()Lscala/reflect/api/Types$TypeApi;
  #106 = InterfaceMethodref #75.#105      // scala/reflect/macros/whitebox/Context.typeCheck$default$2:()Lscala/reflect/api/Types$TypeApi;
  #107 = Utf8               typeCheck$default$3
  #108 = Utf8               ()Z
  #109 = NameAndType        #107:#108     // typeCheck$default$3:()Z
  #110 = InterfaceMethodref #75.#109      // scala/reflect/macros/whitebox/Context.typeCheck$default$3:()Z
  #111 = Utf8               typeCheck$default$4
  #112 = NameAndType        #111:#108     // typeCheck$default$4:()Z
  #113 = InterfaceMethodref #75.#112      // scala/reflect/macros/whitebox/Context.typeCheck$default$4:()Z
  #114 = Utf8               typeCheck$default$5
  #115 = NameAndType        #114:#108     // typeCheck$default$5:()Z
  #116 = InterfaceMethodref #75.#115      // scala/reflect/macros/whitebox/Context.typeCheck$default$5:()Z
  #117 = Utf8               typeCheck
  #118 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
  #119 = NameAndType        #117:#118     // typeCheck:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
  #120 = InterfaceMethodref #75.#119      // scala/reflect/macros/whitebox/Context.typeCheck:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
  #121 = Utf8               scala/reflect/macros/contexts/Context
  #122 = Class              #121          // scala/reflect/macros/contexts/Context
  #123 = Utf8               callsiteTyper
  #124 = Utf8               ()Lscala/tools/nsc/typechecker/Typers$Typer;
  #125 = NameAndType        #123:#124     // callsiteTyper:()Lscala/tools/nsc/typechecker/Typers$Typer;
  #126 = Methodref          #122.#125     // scala/reflect/macros/contexts/Context.callsiteTyper:()Lscala/tools/nsc/typechecker/Typers$Typer;
  #127 = Utf8               context
  #128 = Utf8               ()Lscala/tools/nsc/typechecker/Contexts$Context;
  #129 = NameAndType        #127:#128     // context:()Lscala/tools/nsc/typechecker/Contexts$Context;
  #130 = Methodref          #55.#129      // scala/tools/nsc/typechecker/Typers$Typer.context:()Lscala/tools/nsc/typechecker/Contexts$Context;
  #131 = Utf8               owner
  #132 = Utf8               ()Lscala/reflect/internal/Symbols$Symbol;
  #133 = NameAndType        #131:#132     // owner:()Lscala/reflect/internal/Symbols$Symbol;
  #134 = Methodref          #50.#133      // scala/tools/nsc/typechecker/Contexts$Context.owner:()Lscala/reflect/internal/Symbols$Symbol;
  #135 = Utf8               (Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Symbols$Symbol;)Lscala/reflect/internal/Trees$Tree;
  #136 = NameAndType        #68:#135      // repairOwners:(Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Symbols$Symbol;)Lscala/reflect/internal/Trees$Tree;
  #137 = Methodref          #14.#136      // org/scalactic/MacroOwnerRepair$Utils.repairOwners:(Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Symbols$Symbol;)Lscala/reflect/internal/Trees$Tree;
  #138 = Utf8               rootMirror
  #139 = Utf8               ()Lscala/reflect/api/Mirror;
  #140 = NameAndType        #138:#139     // rootMirror:()Lscala/reflect/api/Mirror;
  #141 = Methodref          #98.#140      // scala/reflect/macros/Universe.rootMirror:()Lscala/reflect/api/Mirror;
  #142 = Utf8               ()Lscala/reflect/api/TypeTags$WeakTypeTag$;
  #143 = NameAndType        #30:#142      // WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
  #144 = Methodref          #98.#143      // scala/reflect/macros/Universe.WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
  #145 = Utf8               (Lorg/scalactic/MacroOwnerRepair;)V
  #146 = NameAndType        #82:#145      // "<init>":(Lorg/scalactic/MacroOwnerRepair;)V
  #147 = Methodref          #11.#146      // org/scalactic/MacroOwnerRepair$$typecreator1$1."<init>":(Lorg/scalactic/MacroOwnerRepair;)V
  #148 = Utf8               apply
  #149 = Utf8               (Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$WeakTypeTag;
  #150 = NameAndType        #148:#149     // apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$WeakTypeTag;
  #151 = Methodref          #32.#150      // scala/reflect/api/TypeTags$WeakTypeTag$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$WeakTypeTag;
  #152 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
  #153 = NameAndType        #20:#152      // Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
  #154 = InterfaceMethodref #75.#153      // scala/reflect/macros/whitebox/Context.Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
  #155 = Utf8               $u
  #156 = Utf8               Lscala/reflect/macros/Universe;
  #157 = Utf8               $m
  #158 = Utf8               Lscala/reflect/api/Mirror;
  #159 = Utf8               symtab
  #160 = Utf8               Lscala/reflect/internal/SymbolTable;
  #161 = Utf8               utils
  #162 = Utf8               Lorg/scalactic/MacroOwnerRepair$Utils;
  #163 = Utf8               typed
  #164 = Utf8               Lscala/reflect/internal/Trees$Tree;
  #165 = Utf8               callsiteOwner
  #166 = Utf8               Lscala/reflect/internal/Symbols$Symbol;
  #167 = Utf8               repairedTree
  #168 = Utf8               Lscala/reflect/api/Exprs$Expr;
  #169 = Utf8               (Lscala/reflect/macros/whitebox/Context;)V
  #170 = Utf8               (TC;)V
  #171 = Utf8               ()V
  #172 = NameAndType        #82:#171      // "<init>":()V
  #173 = Methodref          #5.#172       // java/lang/Object."<init>":()V
  #174 = Utf8               Signature
  #175 = Utf8               Code
  #176 = Utf8               LineNumberTable
  #177 = Utf8               LocalVariableTable
  #178 = Utf8               MethodParameters
  #179 = Utf8               InnerClasses
  #180 = Utf8               SourceFile
  #181 = Utf8               RuntimeVisibleAnnotations
  #182 = Utf8               ScalaInlineInfo
  #183 = Utf8               ScalaSig
{
  private final C c;
    descriptor: Lscala/reflect/macros/whitebox/Context;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #61                          // TC;

  public C c();
    descriptor: ()Lscala/reflect/macros/whitebox/Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #65                 // Field c:Lscala/reflect/macros/whitebox/Context;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/MacroOwnerRepair;
    Signature: #63                          // ()TC;

  public <A extends java.lang.Object> scala.reflect.api.Exprs$Expr<A> repairOwners(scala.reflect.api.Exprs$Expr<A>);
    descriptor: (Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=9, args_size=2
         0: aload_0
         1: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
         4: invokeinterface #79,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
         9: checkcast     #81                 // class scala/reflect/internal/SymbolTable
        12: astore_2
        13: new           #14                 // class org/scalactic/MacroOwnerRepair$Utils
        16: dup
        17: aload_0
        18: aload_2
        19: invokespecial #85                 // Method org/scalactic/MacroOwnerRepair$Utils."<init>":(Lorg/scalactic/MacroOwnerRepair;Lscala/reflect/internal/SymbolTable;)V
        22: astore_3
        23: aload_0
        24: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        27: aload_0
        28: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        31: invokeinterface #79,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        36: aload_0
        37: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        40: invokeinterface #89,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
        45: invokeinterface #93,  1           // InterfaceMethod scala/reflect/api/Trees$TreeApi.pos:()Lscala/reflect/api/Position;
        50: aload_1
        51: invokeinterface #96,  1           // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
        56: invokevirtual #102                // Method scala/reflect/macros/Universe.atPos:(Lscala/reflect/api/Position;Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
        59: aload_0
        60: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        63: invokeinterface #106,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typeCheck$default$2:()Lscala/reflect/api/Types$TypeApi;
        68: aload_0
        69: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        72: invokeinterface #110,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typeCheck$default$3:()Z
        77: aload_0
        78: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        81: invokeinterface #113,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typeCheck$default$4:()Z
        86: aload_0
        87: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        90: invokeinterface #116,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typeCheck$default$5:()Z
        95: invokeinterface #120,  6          // InterfaceMethod scala/reflect/macros/whitebox/Context.typeCheck:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
       100: checkcast     #45                 // class scala/reflect/internal/Trees$Tree
       103: astore        4
       105: aload_0
       106: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
       109: checkcast     #122                // class scala/reflect/macros/contexts/Context
       112: invokevirtual #126                // Method scala/reflect/macros/contexts/Context.callsiteTyper:()Lscala/tools/nsc/typechecker/Typers$Typer;
       115: invokevirtual #130                // Method scala/tools/nsc/typechecker/Typers$Typer.context:()Lscala/tools/nsc/typechecker/Contexts$Context;
       118: invokevirtual #134                // Method scala/tools/nsc/typechecker/Contexts$Context.owner:()Lscala/reflect/internal/Symbols$Symbol;
       121: astore        5
       123: aload_3
       124: aload         4
       126: aload         5
       128: invokevirtual #137                // Method org/scalactic/MacroOwnerRepair$Utils.repairOwners:(Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Symbols$Symbol;)Lscala/reflect/internal/Trees$Tree;
       131: astore        6
       133: aload_0
       134: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
       137: aload         6
       139: aload_0
       140: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
       143: invokeinterface #79,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       148: astore        7
       150: aload_0
       151: invokevirtual #73                 // Method c:()Lscala/reflect/macros/whitebox/Context;
       154: invokeinterface #79,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       159: invokevirtual #141                // Method scala/reflect/macros/Universe.rootMirror:()Lscala/reflect/api/Mirror;
       162: astore        8
       164: aload         7
       166: invokevirtual #144                // Method scala/reflect/macros/Universe.WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
       169: aload         8
       171: new           #11                 // class org/scalactic/MacroOwnerRepair$$typecreator1$1
       174: dup
       175: aconst_null
       176: invokespecial #147                // Method org/scalactic/MacroOwnerRepair$$typecreator1$1."<init>":(Lorg/scalactic/MacroOwnerRepair;)V
       179: invokevirtual #151                // Method scala/reflect/api/TypeTags$WeakTypeTag$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$WeakTypeTag;
       182: invokeinterface #154,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
       187: areturn
      LineNumberTable:
        line 29: 0
        line 30: 13
        line 35: 23
        line 42: 105
        line 46: 123
        line 47: 133
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          150      32     7    $u   Lscala/reflect/macros/Universe;
          164      18     8    $m   Lscala/reflect/api/Mirror;
           13     174     2 symtab   Lscala/reflect/internal/SymbolTable;
           23     164     3 utils   Lorg/scalactic/MacroOwnerRepair$Utils;
          105      82     4 typed   Lscala/reflect/internal/Trees$Tree;
          123      64     5 callsiteOwner   Lscala/reflect/internal/Symbols$Symbol;
          133      54     6 repairedTree   Lscala/reflect/internal/Trees$Tree;
            0     188     0  this   Lorg/scalactic/MacroOwnerRepair;
            0     188     1  expr   Lscala/reflect/api/Exprs$Expr;
    Signature: #70                          // <A:Ljava/lang/Object;>(Lscala/reflect/api/Exprs$Expr<TA;>;)Lscala/reflect/api/Exprs$Expr<TA;>;
    MethodParameters:
      Name                           Flags
      expr                           final

  public org.scalactic.MacroOwnerRepair(C);
    descriptor: (Lscala/reflect/macros/whitebox/Context;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #65                 // Field c:Lscala/reflect/macros/whitebox/Context;
         5: aload_0
         6: invokespecial #173                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 20: 0
        line 81: 5
        line 20: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalactic/MacroOwnerRepair;
            0      10     1     c   Lscala/reflect/macros/whitebox/Context;
    Signature: #170                         // (TC;)V
    MethodParameters:
      Name                           Flags
      c                              final
}
InnerClasses:
  public final #12= #11;                  // $typecreator1$1=class org/scalactic/MacroOwnerRepair$$typecreator1$1
  private #15= #14 of #2;                 // Utils=class org/scalactic/MacroOwnerRepair$Utils of class org/scalactic/MacroOwnerRepair
  public #20= #17 of #19;                 // Expr=class scala/reflect/api/Exprs$Expr of class scala/reflect/api/Exprs
  public #25= #22 of #24;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public #30= #27 of #29;                 // WeakTypeTag=class scala/reflect/api/TypeTags$WeakTypeTag of class scala/reflect/api/TypeTags
  public #33= #32 of #29;                 // WeakTypeTag$=class scala/reflect/api/TypeTags$WeakTypeTag$ of class scala/reflect/api/TypeTags
  public abstract #38= #35 of #37;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public abstract #43= #40 of #42;        // Symbol=class scala/reflect/internal/Symbols$Symbol of class scala/reflect/internal/Symbols
  public abstract #48= #45 of #47;        // Tree=class scala/reflect/internal/Trees$Tree of class scala/reflect/internal/Trees
  public #53= #50 of #52;                 // Context=class scala/tools/nsc/typechecker/Contexts$Context of class scala/tools/nsc/typechecker/Contexts
  public abstract #58= #55 of #57;        // Typer=class scala/tools/nsc/typechecker/Typers$Typer of class scala/tools/nsc/typechecker/Typers
Signature: #3                           // <C::Lscala/reflect/macros/whitebox/Context;:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "MacroOwnerRepair.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005ma!B\b\u0011\u0001I!\u0002\u0002\u0003\u000f\u0001\u0005\u000b\u0007I\u0011\u0001\u0010\t\u0011q\u0002!\u0011!Q\u0001\n}AQ!\u0010\u0001\u0005\u0002yBQA\u0011\u0001\u0005\u0002\r3A!\u0016\u0001\u0005-\"A\u0001,\u0002BC\u0002\u0013\u0005\u0011\f\u0003\u0005e\u000b\t\u0005\t\u0015!\u0003[\u0011\u0015iT\u0001\"\u0001f\r\u0011AW\u0001A5\t\u0013EL!\u0011!Q\u0001\nI<\b\"\u0003=\n\u0005\u0003\u0005\u000b\u0011\u0002:z\u0011\u0015i\u0014\u0002\"\u0001{\u0011\u0015q\u0018\u0002\"\u0011\u0000\u0011\u0019\u0011U\u0001\"\u0001\u0002\u0012\t\u0001R*Y2s_>;h.\u001a:SKB\f\u0017N\u001d\u0006\u0003#I\t\u0011b]2bY\u0006\u001cG/[2\u000b\u0003M\t1a\u001c:h+\t)\u0012e\u0005\u0002\u0001-A\u0011qCG\u0007\u00021)\t\u0011$A\u0003tG\u0006d\u0017-\u0003\u0002\u001c1\t1\u0011I\\=SK\u001a\f\u0011aY\u0002\u0001+\u0005y\u0002C\u0001\u0011\"\u0019\u0001!QA\t\u0001C\u0002\r\u0012\u0011aQ\t\u0003I\u001d\u0002\"aF\u0013\n\u0005\u0019B\"a\u0002(pi\"Lgn\u001a\n\u0004Q)Jd\u0001B\u0015\u0001\u0001\u001d\u0012A\u0002\u0010:fM&tW-\\3oiz\u0002\"a\u000b\u001c\u000f\u00051\u001adBA\u00171\u001d\t9b&\u0003\u000201\u00059!/\u001a4mK\u000e$\u0018BA\u00193\u0003\u0019i\u0017m\u0019:pg*\u0011q\u0006G\u0005\u0003iU\nq\u0001]1dW\u0006<WM\u0003\u00022e%\u0011q\u0007\u000f\u0002\b\u0007>tG/\u001a=u\u0015\t!T\u0007\u0005\u0002\u0018u%\u00111\b\u0007\u0002\n\'&tw\r\\3u_:\f!a\u0019\u0011\u0002\rqJg.\u001b;?)\ty\u0014\tE\u0002A\u0001}i\u0011\u0001\u0005\u0005\u00069\r\u0001\raH\u0001\re\u0016\u0004\u0018-\u001b:Po:,\'o]\u000b\u0003\t6#\"!R*\u0011\u0007\u0019CEJ\u0004\u0002H\u00035\t\u0001!\u0003\u0002J\u0015\n!Q\t\u001f9s\u0013\tYUGA\u0004BY&\f7/Z:\u0011\u0005\u0001jE!\u0002(\u0005\u0005\u0004y%!A!\u0012\u0005\u0011\u0002\u0006CA\fR\u0013\t\u0011\u0006DA\u0002B]fDQ\u0001\u0016\u0003A\u0002\u0015\u000bA!\u001a=qe\n)Q\u000b^5mgV\u0011qkW\n\u0003\u000bY\t\u0011!^\u000b\u00025B\u0011\u0001e\u0017\u0003\u00069\u0016\u0011\r!\u0018\u0002\u0002+F\u0011AE\u0018\t\u0003?\nl\u0011\u0001\u0019\u0006\u0003CJ\n\u0001\"\u001b8uKJt\u0017\r\\\u0005\u0003G\u0002\u00141bU=nE>dG+\u00192mK\u0006\u0011Q\u000f\t\u000b\u0003M\u001e\u00042aR\u0003[\u0011\u0015A\u0006\u00021\u0001[\u0005\t\u001a\u0005.\u00198hK>;h.\u001a:B]\u0012lu\u000eZ;mK\u000ec\u0017m]:Ue\u00064XM]:feN\u0011\u0011B\u001b\t\u0003W6t!\u0001\u001c\u0004\u000e\u0003\u0015I!A\\8\u0003)\rC\u0017M\\4f\u001f^tWM\u001d+sCZ,\'o]3s\u0013\t\u0001\bMA\u0003Ue\u0016,7/\u0001\u0005pY\u0012|wO\\3s!\tY7/\u0003\u0002uk\n11+_7c_2L!A\u001e1\u0003\u000fMKXNY8mg&\u0011\u0011/\\\u0001\t]\u0016<xn\u001e8fe&\u0011\u00010\u001c\u000b\u0004wrl\bC\u00017\n\u0011\u0015\tH\u00021\u0001s\u0011\u0015AH\u00021\u0001s\u0003!!(/\u0019<feN,G\u0003BA\u0001\u0003\u000f\u00012aFA\u0002\u0013\r\t)\u0001\u0007\u0002\u0005+:LG\u000fC\u0004\u0002\n5\u0001\r!a\u0003\u0002\tQ\u0014X-\u001a\t\u0004W\u00065\u0011bAA\b_\n!AK]3f)\u0019\tY!a\u0005\u0002\u0018!9\u0011Q\u0003\bA\u0002\u0005-\u0011!\u0001;\t\r\u0005ea\u00021\u0001s\u0003Ii\u0017m\u0019:p\u0007\u0006dGnU5uK>;h.\u001a:"
    )
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 00 00 03 00 52 00 A9 00 00 3B 00 3E 00 00 44
   00 45 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
