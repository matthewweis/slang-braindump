Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/math/BigDecimal.class
  Last modified May 29, 2022; size 26240 bytes
  SHA-256 checksum f5314a512f0b529c47bc0a9bdb8bc9610d4207ff8484fc9262e8832b840752a1
  Compiled from "BigDecimal.scala"
public final class scala.math.BigDecimal extends scala.math.ScalaNumber implements scala.math.ScalaNumericConversions, scala.math.Ordered<scala.math.BigDecimal>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/math/BigDecimal
  super_class: #5                         // scala/math/ScalaNumber
  interfaces: 2, fields: 3, methods: 113, attributes: 7
Constant pool:
    #1 = Utf8               scala/math/BigDecimal
    #2 = Class              #1            // scala/math/BigDecimal
    #3 = Utf8               Lscala/math/ScalaNumber;Lscala/math/ScalaNumericConversions;Lscala/math/Ordered<Lscala/math/BigDecimal;>;
    #4 = Utf8               scala/math/ScalaNumber
    #5 = Class              #4            // scala/math/ScalaNumber
    #6 = Utf8               scala/math/ScalaNumericConversions
    #7 = Class              #6            // scala/math/ScalaNumericConversions
    #8 = Utf8               scala/math/Ordered
    #9 = Class              #8            // scala/math/Ordered
   #10 = Utf8               BigDecimal.scala
   #11 = Utf8               Lscala/reflect/ScalaSignature;
   #12 = Utf8               bytes
   #13 = Utf8               \u0006\u0005\u0011\u0005v\u0001CA\u0011\u0003GA\t!!\f\u0007\u0011\u0005E\u00121\u0005E\u0001\u0003gAq!!\u0014\u0002\t\u0003\ty\u0005C\u0005\u0002R\u0005\u0011\r\u0011\"\u0004\u0002T!A\u0011\u0011L\u0001!\u0002\u001b\t)\u0006C\u0005\u0002\\\u0005\u0011\r\u0011\"\u0004\u0002^!A\u00111M\u0001!\u0002\u001b\ty\u0006C\u0005\u0002f\u0005\u0011\r\u0011\"\u0004\u0002h!A\u0011QN\u0001!\u0002\u001b\tI\u0007\u0003\u0005\u0002p\u0005\u0001\u000b\u0011BA9\u0011!\t9(\u0001Q\u0001\n\u0005E\u0004\"CA=\u0003\t\u0007I\u0011AA>\u0011!\t9)\u0001Q\u0001\n\u0005u\u0004BCAE\u0003!\u0015\r\u0015\"\u0003\u0002\f\u001e9!qV\u0001\t\u0002\tEfa\u0002B[\u0003!\u0005!q\u0017\u0005\b\u0003\u001bzA\u0011\u0001B`\u000b\u0019\u0011)l\u0004\u0001\u0003B\"I!\u0011Z\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005\u001b|\u0001\u0015!\u0003\u0003B\"I!qZ\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005#|\u0001\u0015!\u0003\u0003B\"I!1[\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005+|\u0001\u0015!\u0003\u0003B\"I!q[\bC\u0002\u0013\u0005!1\u001a\u0005\t\u00053|\u0001\u0015!\u0003\u0003B\"I!1\\\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005;|\u0001\u0015!\u0003\u0003B\"I!q\\\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005C|\u0001\u0015!\u0003\u0003B\"I!1]\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005K|\u0001\u0015!\u0003\u0003B\"I!q]\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005S|\u0001\u0015!\u0003\u0003B\"I!1^\b\u0002\u0002\u0013%!Q\u001e\u0005\b\u0007\u007f\u000bA\u0011ABa\u0011\u001d\u0019y,\u0001C\u0001\u0007\u0013Dqaa0\u0002\t\u0003\u0019i\rC\u0004\u0004@\u0006!\ta!6\t\u000f\r}\u0016\u0001\"\u0001\u0004Z\"91qX\u0001\u0005\u0002\r\u0005\bbBB`\u0003\u0011\u00051Q\u001d\u0005\b\u0007[\fA\u0011ABx\u0011\u001d\u0019i/\u0001C\u0001\u0007kDqa!?\u0002\t\u0003\u0019Y\u0010C\u0004\u0004z\u0006!\t\u0001\"\u0001\t\u000f\re\u0018\u0001\"\u0001\u0005\u0006!91\u0011`\u0001\u0005\u0002\u0011-\u0001bBB}\u0003\u0011\u0005Aq\u0002\u0005\b\u0007s\fA\u0011\u0001C\u000b\u0011\u001d!i\"\u0001C\u0001\t?Aq\u0001\"\b\u0002\t\u0003!\u0019\u0003C\u0004\u0003\u0016\u0006!\t\u0001\"\u000b\t\u000f\tU\u0015\u0001\"\u0001\u00050!9!QS\u0001\u0005\u0002\u0011U\u0002b\u0002BK\u0003\u0011\u0005A\u0011\b\u0005\b\u0005+\u000bA\u0011\u0001C \u0011\u001d\u0011)*\u0001C\u0001\t\u000fBqA!&\u0002\t\u0003!y\u0005C\u0004\u0003\u0016\u0006!\t\u0001b\u0015\t\u000f\tU\u0015\u0001\"\u0001\u0005Z!9!QS\u0001\u0005\u0002\u0011u\u0003b\u0002BK\u0003\u0011\u0005A1\r\u0005\b\u0005+\u000bA\u0011\u0001C4\u0011\u001d\u0011)*\u0001C\u0001\t[BqA!&\u0002\t\u0003!\t\bC\u0004\u0003\u0016\u0006!\t\u0001b\u001e\t\u000f\tU\u0015\u0001\"\u0001\u0005~!9!QS\u0001\u0005\u0002\u0011\u0015\u0005b\u0002CE\u0003\u0011\rA1\u0012\u0005\b\t\u001f\u000bA1\u0001CI\u0011\u001d!)*\u0001C\u0002\t/Cq\u0001b\'\u0002\t\u0007!i\nC\u0005\u0003l\u0006\t\t\u0011\"\u0003\u0003n\u001a9\u0011\u0011GA\u0012\u0005\u0005U\u0005BCA[\u0015\n\u0015\r\u0011\"\u0001\u00028\"Q\u0011Q\u0018&\u0003\u0002\u0003\u0006I!!/\t\u0015\u0005}&J!b\u0001\n\u0003\tY\b\u0003\u0006\u0002B*\u0013\t\u0011)A\u0005\u0003{Bq!!\u0014K\t\u0003\t\u0019\rC\u0004\u0002N)#\t!!3\t\u0013\u00055\'\n1A\u0005\u000e\u0005=\u0007\"CAi\u0015\u0002\u0007IQBAj\u0011!\tyN\u0013Q!\u000e\u0005E\u0004bBAq\u0015\u00125\u00111\u001d\u0005\b\u0003KTE\u0011IAt\u0011\u001d\tIO\u0013C!\u0003WDq!!@K\t\u0003\ny\u0010C\u0004\u0003\u0002)#\t%a@\t\u000f\t\r!\n\"\u0011\u0002\u0000\"9!Q\u0001&\u0005B\u0005}\bb\u0002B\u0004\u0015\u0012\u0005\u0011q \u0005\b\u0005\u0013QE\u0011AA\u0000\u0011\u001d\u0011YA\u0013C\u0001\u0003\u007fDqA!\u0004K\t\u0003\ty\u0010C\u0004\u0003\u0010)#\t!a@\t\u000f\tE!\n\"\u0001\u0002\u0000\"9!1\u0003&\u0005\u0002\u0005}\bb\u0002B\u000b\u0015\u0012%!q\u0003\u0005\b\u0005GQE\u0011AA\u0000\u0011\u001d\u0011)C\u0013C\u0001\u0005OAq!!;K\t\u0003\u0011I\u0003C\u0004\u0003.)#\tAa\f\t\u000f\tM\"\n\"\u0001\u00036!9!\u0011\b&\u0005\u0002\tm\u0002b\u0002B \u0015\u0012\u0005!\u0011\t\u0005\b\u0005\u000bRE\u0011\u0001B$\u0011\u001d\u0011YE\u0013C\u0001\u0005\u001bBqAa\u0016K\t\u0003\u0011I\u0006C\u0004\u0003^)#\tAa\u0018\t\u000f\t\r$\n\"\u0001\u0003f!9!\u0011\u000e&\u0005\u0002\t-\u0004b\u0002B8\u0015\u0012\u0005!\u0011\u000f\u0005\b\u0005kRE\u0011\u0001B<\u0011\u001d\u0011iH\u0013C\u0001\u0005\u007fBqA!!K\t\u0003\u0011y\bC\u0004\u0003\u0004*#\t!a4\t\u000f\t\u0015%\n\"\u0001\u0003\u0000!9!q\u0011&\u0005\u0002\u0005=\u0007b\u0002BE\u0015\u0012\u0005!1\u0012\u0005\b\u0005\u001fSE\u0011\u0001B@\u0011\u001d\u0011\tJ\u0013C\u0001\u0003\u001fDqAa%K\t\u0003\u0011y\bC\u0004\u0003\u0016*#\tAa&\t\u000f\tm%\n\"\u0001\u0003\u001e\"9!1\u0014&\u0005\u0002\t\u0005\u0006b\u0002B~\u0015\u0012\u0005#Q \u0005\b\u0007\u000bQE\u0011IB\u0004\u0011\u001d\u0019yA\u0013C\u0001\u0007#Aqa!\u0007K\t\u0003\ty\rC\u0004\u0004\u001c)#\ta!\b\t\u000f\r\u0015\"\n\"\u0001\u0004(!91q\u0006&\u0005\u0002\rE\u0002bBB\u001d\u0015\u0012\u0005!Q \u0005\b\u0007wQE\u0011AB\u0004\u0011\u001d\u0019iD\u0013C\u0001\u0003\u001fDqaa\u0010K\t\u0003\u0019i\u0002C\u0004\u0004B)#\taa\u0011\t\u000f\r\u0005#\n\"\u0001\u0004p!91q\u000f&\u0005\u0002\re\u0004bBB<\u0015\u0012\u00051Q\u0011\u0005\b\u0007#SE\u0011ABJ\u0011\u001d\u0019YJ\u0013C\u0001\u0007;Cqa!*K\t\u0003\u001a9+\u0001\u0006CS\u001e$UmY5nC2TA!!\n\u0002(\u0005!Q.\u0019;i\u0015\t\tI#A\u0003tG\u0006d\u0017m\u0001\u0001\u0011\u0007\u0005=\u0012!\u0004\u0002\u0002$\tQ!)[4EK\u000eLW.\u00197\u0014\u000b\u0005\t)$!\u0010\u0011\t\u0005]\u0012\u0011H\u0007\u0003\u0003OIA!a\u000f\u0002(\t1\u0011I\\=SK\u001a\u0004B!a\u0010\u0002J5\u0011\u0011\u0011\t\u0006\u0005\u0003\u0007\n)%\u0001\u0002j_*\u0011\u0011qI\u0001\u0005U\u00064\u0018-\u0003\u0003\u0002L\u0005\u0005#\u0001D*fe&\fG.\u001b>bE2,\u0017A\u0002\u001fj]&$h\b\u0006\u0002\u0002.\u0005\u0001R.\u0019=j[Vl\u0007*Y:i\'\u000e\fG.Z\u000b\u0003\u0003+z!!a\u0016\u001e\u0005M1\u0015!E7bq&lW/\u001c%bg\"\u001c6-\u00197fA\u0005\u0019\u0002.Y:i\u0007>$WMT8u\u0007>l\u0007/\u001e;fIV\u0011\u0011qL\b\u0003\u0003CjB!\u0018)j\u001f\u0005!\u0002.Y:i\u0007>$WMT8u\u0007>l\u0007/\u001e;fI\u0002\n1\u0002Z3dSJ\u0012\u0017N\\1ssV\u0011\u0011\u0011N\b\u0003\u0003W\u0002\u0003\u0002\u0011\u0006\u0014 &I8U]\u0001\rI\u0016\u001c\u0017N\r2j]\u0006\u0014\u0018\u0010I\u0001\n[&t7)Y2iK\u0012\u0004B!a\u000e\u0002t%!\u0011QOA\u0014\u0005\rIe\u000e^\u0001\n[\u0006D8)Y2iK\u0012\f!\u0003Z3gCVdG/T1uQ\u000e{g\u000e^3yiV\u0011\u0011Q\u0010\t\u0005\u0003\u007f\n\u0019)\u0004\u0002\u0002\u0002*!\u0011QEA#\u0013\u0011\t))!!\u0003\u00175\u000bG\u000f[\"p]R,\u0007\u0010^\u0001\u0014I\u00164\u0017-\u001e7u\u001b\u0006$\bnQ8oi\u0016DH\u000fI\u0001\u0006G\u0006\u001c\u0007.Z\u000b\u0003\u0003\u001b\u0003b!a\u000e\u0002\u0010\u0006M\u0015\u0002BAI\u0003O\u0011Q!\u0011:sCf\u00042!a\fK\'%Q\u0015qSAO\u0003G\u000by\u000b\u0005\u0003\u00020\u0005e\u0015\u0002BAN\u0003G\u00111bU2bY\u0006tU/\u001c2feB!\u0011qFAP\u0013\u0011\t\t+a\t\u0003/M\u001b\u0017\r\\1Ok6,\'/[2D_:4XM]:j_:\u001c\b\u0003BAS\u0003WsA!a\u000e\u0002(&!\u0011\u0011VA\u0014\u0003\u001d\u0001\u0018mY6bO\u0016LA!a\u0013\u0002.*!\u0011\u0011VA\u0014!\u0019\ty#!-\u0002\u0014&!\u00111WA\u0012\u0005\u001dy%\u000fZ3sK\u0012\f!BY5h\t\u0016\u001c\u0017.\\1m+\t\tI\f\u0005\u0003\u0002\u0000\u0005m\u0016\u0002BA\u0019\u0003\u0003\u000b1BY5h\t\u0016\u001c\u0017.\\1mA\u0005\u0011QnY\u0001\u0004[\u000e\u0004CCBAJ\u0003\u000b\f9\rC\u0004\u00026>\u0003\r!!/\t\u000f\u0005}v\n1\u0001\u0002~Q!\u00111SAf\u0011\u001d\t)\f\u0015a\u0001\u0003s\u000b\u0001cY8naV$X\r\u001a%bg\"\u001cu\u000eZ3\u0016\u0005\u0005E\u0014\u0001F2p[B,H/\u001a3ICND7i\u001c3f?\u0012*\u0017\u000f\u0006\u0003\u0002V\u0006m\u0007\u0003BA\u001c\u0003/LA!!7\u0002(\t!QK\\5u\u0011%\tiNUA\u0001\u0002\u0004\t\t(A\u0002yIE\n\u0011cY8naV$X\r\u001a%bg\"\u001cu\u000eZ3!\u0003=\u0019w.\u001c9vi\u0016D\u0015m\u001d5D_\u0012,GCAAk\u0003!A\u0017m\u001d5D_\u0012,GCAA9\u0003\u0019)\u0017/^1mgR!\u0011Q^Az!\u0011\t9$a<\n\t\u0005E\u0018q\u0005\u0002\b\u0005>|G.Z1o\u0011\u001d\t)P\u0016a\u0001\u0003o\fA\u0001\u001e5biB!\u0011qGA}\u0013\u0011\tY0a\n\u0003\u0007\u0005s\u00170A\u0006jgZ\u000bG.\u001b3CsR,WCAAw\u00031I7OV1mS\u0012\u001c\u0006n\u001c:u\u0003-I7OV1mS\u0012\u001c\u0005.\u0019:\u0002\u0015%\u001ch+\u00197jI&sG/A\u0006jgZ\u000bG.\u001b3M_:<\u0017aD5t\t\u0016\u001c\u0017.\\1m\t>,(\r\\3\u0002\u001d%\u001cH)Z2j[\u0006dg\t\\8bi\u0006q\u0011n\u001d\"j]\u0006\u0014\u0018\u0010R8vE2,\u0017!D5t\u0005&t\u0017M]=GY>\fG/A\u0007jg\u0016C\u0018m\u0019;E_V\u0014G.Z\u0001\rSN,\u00050Y2u\r2|\u0017\r^\u0001\u0016]>\f%/\u001b;i[\u0016$\u0018nY#yG\u0016\u0004H/[8o)\u0011\tiO!\u0007\t\u0011\tm!\r\"a\u0001\u0005;\tAAY8esB1\u0011q\u0007B\u0010\u0003+LAA!\t\u0002(\tAAHY=oC6,g(A\u0004jg^Cw\u000e\\3\u0002\u0015UtG-\u001a:ms&tw\r\u0006\u0002\u0002:R!\u0011Q\u001eB\u0016\u0011\u001d\t)0\u001aa\u0001\u0003\'\u000bqaY8na\u0006\u0014X\r\u0006\u0003\u0002r\tE\u0002bBA{M\u0002\u0007\u00111S\u0001\u0006IAdWo\u001d\u000b\u0005\u0003\'\u00139\u0004C\u0004\u0002v\u001e\u0004\r!a%\u0002\r\u0011j\u0017N\\;t)\u0011\t\u0019J!\u0010\t\u000f\u0005U\b\u000e1\u0001\u0002\u0014\u00061A\u0005^5nKN$B!a%\u0003D!9\u0011Q_5A\u0002\u0005M\u0015\u0001\u0002\u0013eSZ$B!a%\u0003J!9\u0011Q\u001f6A\u0002\u0005M\u0015\u0001\u0004\u0013eSZ$\u0003/\u001a:dK:$H\u0003\u0002B(\u0005+\u0002\u0002\"a\u000e\u0003R\u0005M\u00151S\u0005\u0005\u0005\'\n9C\u0001\u0004UkBdWM\r\u0005\b\u0003k\\\u0007\u0019AAJ\u0003\u0011\tXo\u001c;\u0015\t\u0005M%1\f\u0005\b\u0003kd\u0007\u0019AAJ\u0003\ri\u0017N\u001c\u000b\u0005\u0003\'\u0013\t\u0007C\u0004\u0002v6\u0004\r!a%\u0002\u00075\f\u0007\u0010\u0006\u0003\u0002\u0014\n\u001d\u0004bBA{]\u0002\u0007\u00111S\u0001\ne\u0016l\u0017-\u001b8eKJ$B!a%\u0003n!9\u0011Q_8A\u0002\u0005M\u0015\u0001\u0003\u0013qKJ\u001cWM\u001c;\u0015\t\u0005M%1\u000f\u0005\b\u0003k\u0004\b\u0019AAJ\u0003\r\u0001xn\u001e\u000b\u0005\u0003\'\u0013I\bC\u0004\u0003|E\u0004\r!!\u001d\u0002\u00039\fA\"\u001e8bef|F%\\5okN,\"!a%\u0002\u0007\u0005\u00147/\u0001\u0004tS\u001etW/\\\u0001\u0005g&<g.A\u0005qe\u0016\u001c\u0017n]5p]\u0006)!o\\;oIR!\u00111\u0013BG\u0011\u001d\tyl\u001ea\u0001\u0003{\nqA]8v]\u0012,G-A\u0003tG\u0006dW-A\u0002vYB\fQ!\u00199qYf$B!a%\u0003\u001a\"9\u0011qX>A\u0002\u0005u\u0014\u0001C:fiN\u001b\u0017\r\\3\u0015\t\u0005M%q\u0014\u0005\b\u0005#c\b\u0019AA9)\u0019\t\u0019Ja)\u0003&\"9!\u0011S?A\u0002\u0005E\u0004b\u0002BT{\u0002\u0007!\u0011V\u0001\u0005[>$W\rE\u0002\u0003,Fq1A!,\u000f\u001d\r\ty\u0003A\u0001\r%>,h\u000eZ5oO6{G-\u001a\t\u0004\u0005g{Q\"A\u0001\u0003\u0019I{WO\u001c3j]\u001elu\u000eZ3\u0014\u0007=\u0011I\f\u0005\u0003\u00028\tm\u0016\u0002\u0002B_\u0003O\u00111\"\u00128v[\u0016\u0014\u0018\r^5p]R\u0011!\u0011\u0017\t\u0005\u0005\u0007\u0014)-D\u0001\u0010\u0013\u0011\u00119Ma/\u0003\u000bY\u000bG.^3\u0002\u0005U\u0003VC\u0001Ba\u0003\r)\u0006\u000bI\u0001\u0005\t>;f*A\u0003E\u001f^s\u0005%A\u0004D\u000b&c\u0015JT$\u0002\u0011\r+\u0015\nT%O\u000f\u0002\nQA\u0012\'P\u001fJ\u000baA\u0012\'P\u001fJ\u0003\u0013a\u0002%B\u0019\u001a{V\u000bU\u0001\t\u0011\u0006ceiX+QA\u0005I\u0001*\u0011\'G?\u0012{uKT\u0001\u000b\u0011\u0006cei\u0018#P/:\u0003\u0013!\u0003%B\u0019\u001a{VIV#O\u0003)A\u0015\t\u0014$`\u000bZ+e\nI\u0001\f+:sUiQ#T\'\u0006\u0013\u0016,\u0001\u0007V\u001d:+5)R*T\u0003JK\u0006%\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0003pB!!\u0011\u001fB|\u001b\t\u0011\u0019P\u0003\u0003\u0003v\u0006\u0015\u0013\u0001\u00027b]\u001eLAA!?\u0003t\n1qJ\u00196fGR\f\u0011BY=uKZ\u000bG.^3\u0016\u0005\t}\b\u0003BA\u001c\u0007\u0003IAaa\u0001\u0002(\t!!)\u001f;f\u0003)\u0019\bn\u001c:u-\u0006dW/Z\u000b\u0003\u0007\u0013\u0001B!a\u000e\u0004\f%!1QBA\u0014\u0005\u0015\u0019\u0006n\u001c:u\u0003%\u0019\u0007.\u0019:WC2,X-\u0006\u0002\u0004\u0014A!\u0011qGB\u000b\u0013\u0011\u00199\"a\n\u0003\t\rC\u0017M]\u0001\tS:$h+\u00197vK\u0006IAn\u001c8h-\u0006dW/Z\u000b\u0003\u0007?\u0001B!a\u000e\u0004\"%!11EA\u0014\u0005\u0011auN\\4\u0002\u0015\u0019dw.\u0019;WC2,X-\u0006\u0002\u0004*A!\u0011qGB\u0016\u0013\u0011\u0019i#a\n\u0003\u000b\u0019cw.\u0019;\u0002\u0017\u0011|WO\u00197f-\u0006dW/Z\u000b\u0003\u0007g\u0001B!a\u000e\u00046%!1qGA\u0014\u0005\u0019!u.\u001e2mK\u0006YAo\u001c\"zi\u0016,\u00050Y2u\u00031!xn\u00155peR,\u00050Y2u\u0003)!x.\u00138u\u000bb\f7\r^\u0001\fi>duN\\4Fq\u0006\u001cG/A\u0003v]RLG\u000e\u0006\u0003\u0004F\r-\u0004\u0003CB$\u0007\u001b\n\u0019ja\u0017\u000f\t\u0005\u00156\u0011J\u0005\u0005\u0007\u0017\ni+A\u0003SC:<W-\u0003\u0003\u0004P\rE#a\u0002)beRL\u0017\r\u001c\u0006\u0005\u0007\u0017\u001a\u0019F\u0003\u0003\u0004V\r]\u0013!C5n[V$\u0018M\u00197f\u0015\u0011\u0019I&a\n\u0002\u0015\r|G\u000e\\3di&|g\u000e\u0005\u0004\u0004^\r\u0015\u00141\u0013\b\u0005\u0007?\u001a\t\'\u0004\u0002\u0004T%!11MB*\u00031qU/\\3sS\u000e\u0014\u0016M\\4f\u0013\u0011\u00199g!\u001b\u0003\u0013\u0015C8\r\\;tSZ,\'\u0002BB2\u0007\'B\u0001b!\u001c\u0002\u0014\u0001\u0007\u00111S\u0001\u0004K:$GCBB.\u0007c\u001a\u0019\b\u0003\u0005\u0004n\u0005U\u0001\u0019AAJ\u0011!\u0019)(!\u0006A\u0002\u0005M\u0015\u0001B:uKB\f!\u0001^8\u0015\t\rm41\u0011\t\t\u0007\u000f\u001ai%a%\u0004~A11QLB@\u0003\'KAa!!\u0004j\tI\u0011J\\2mkNLg/\u001a\u0005\t\u0007[\n9\u00021\u0001\u0002\u0014R11qQBG\u0007\u001f\u0003ba!\u0018\u0004\u0000\r%\u0005\u0003BAS\u0007\u0017KA!!\r\u0002.\"A1QNA\r\u0001\u0004\t\u0019\n\u0003\u0005\u0004v\u0005e\u0001\u0019AAJ\u0003!!xNQ5h\u0013:$XCABK!\u0011\tyca&\n\t\re\u00151\u0005\u0002\u0007\u0005&<\u0017J\u001c;\u0002\u001bQ|\')[4J]R,\u00050Y2u+\t\u0019y\n\u0005\u0004\u00028\r\u00056QS\u0005\u0005\u0007G\u000b9C\u0001\u0004PaRLwN\\\u0001\ti>\u001cFO]5oOR\u00111\u0011\u0016\t\u0005\u0007W\u001bIL\u0004\u0003\u0004.\u000eU\u0006\u0003BBX\u0003Oi!a!-\u000b\t\rM\u00161F\u0001\u0007yI|w\u000e\u001e \n\t\r]\u0016qE\u0001\u0007!J,G-\u001a4\n\t\rm6Q\u0018\u0002\u0007\'R\u0014\u0018N\\4\u000b\t\r]\u0016qE\u0001\bI\u0016\u001c\u0017.\\1m)\u0019\t\u0019ja1\u0004H\"91QY\u0012A\u0002\rM\u0012!\u00013\t\u000f\u0005}6\u00051\u0001\u0002~Q!\u00111SBf\u0011\u001d\u0019)\r\na\u0001\u0007g!b!a%\u0004P\u000eM\u0007bBBiK\u0001\u00071\u0011F\u0001\u0002M\"9\u0011qX\u0013A\u0002\u0005uD\u0003BAJ\u0007/Dqa!5\'\u0001\u0004\u0019I\u0003\u0006\u0004\u0002\u0014\u000em7q\u001c\u0005\b\u0007;<\u0003\u0019AB\u0010\u0003\u0005a\u0007bBA`O\u0001\u0007\u0011Q\u0010\u000b\u0005\u0003\'\u001b\u0019\u000fC\u0004\u0004^\"\u0002\raa\b\u0015\r\u0005M5q]Bv\u0011\u001d\u0019I/\u000ba\u0001\u0003s\u000b!A\u00193\t\u000f\u0005}\u0016\u00061\u0001\u0002~\u00051!-\u001b8bef$b!a%\u0004r\u000eM\bbBBcU\u0001\u000711\u0007\u0005\b\u0003\u007fS\u0003\u0019AA?)\u0011\t\u0019ja>\t\u000f\r\u00157\u00061\u0001\u00044\u0005)Q\r_1diR!\u00111SB\u007f\u0011\u001d\u0019y\u0010\fa\u0001\u0003s\u000bAA]3qeR!\u00111\u0013C\u0002\u0011\u001d\u0019)-\fa\u0001\u0007g!B!a%\u0005\b!9A\u0011\u0002\u0018A\u0002\rU\u0015A\u00012j)\u0011\t\u0019\n\"\u0004\t\u000f\ruw\u00061\u0001\u0004 Q!\u00111\u0013C\t\u0011\u001d!\u0019\u0002\ra\u0001\u0007S\u000b\u0011a\u001d\u000b\u0005\u0003\'#9\u0002C\u0004\u0005\u001aE\u0002\r\u0001b\u0007\u0002\u0005\r\u001c\bCBA\u001c\u0003\u001f\u001b\u0019\"A\u0004wC2,Xm\u00144\u0015\t\u0005ME\u0011\u0005\u0005\b\u0007\u000b\u0014\u0004\u0019AB\u001a)\u0011\t\u0019\n\"\n\t\u000f\u0011\u001d2\u00071\u0001\u0004 \u0005\t\u0001\u0010\u0006\u0003\u0002\u0014\u0012-\u0002b\u0002C\u0017i\u0001\u0007\u0011\u0011O\u0001\u0002SR1\u00111\u0013C\u0019\tgAq\u0001\"\f6\u0001\u0004\t\t\bC\u0004\u0002@V\u0002\r!! \u0015\t\u0005MEq\u0007\u0005\b\u0007;4\u0004\u0019AB\u0010)\u0019\t\u0019\nb\u000f\u0005>!91Q\\\u001cA\u0002\r}\u0001bBA`o\u0001\u0007\u0011Q\u0010\u000b\u0007\u0003\'#\t\u0005\"\u0012\t\u000f\u0011\r\u0003\b1\u0001\u0004 \u0005YQO\\:dC2,GMV1m\u0011\u001d\u0011\t\n\u000fa\u0001\u0003c\"\u0002\"a%\u0005J\u0011-CQ\n\u0005\b\t\u0007J\u0004\u0019AB\u0010\u0011\u001d\u0011\t*\u000fa\u0001\u0003cBq!a0:\u0001\u0004\ti\b\u0006\u0003\u0002\u0014\u0012E\u0003bBBcu\u0001\u000711\u0007\u000b\u0007\u0003\'#)\u0006b\u0016\t\u000f\r\u00157\b1\u0001\u00044!9\u0011qX\u001eA\u0002\u0005uD\u0003BAJ\t7Bq\u0001b\n=\u0001\u0004!Y\u0002\u0006\u0004\u0002\u0014\u0012}C\u0011\r\u0005\b\tOi\u0004\u0019\u0001C\u000e\u0011\u001d\ty,\u0010a\u0001\u0003{\"B!a%\u0005f!9Aq\u0005 A\u0002\r%FCBAJ\tS\"Y\u0007C\u0004\u0005(}\u0002\ra!+\t\u000f\u0005}v\b1\u0001\u0002~Q!\u00111\u0013C8\u0011\u001d!9\u0003\u0011a\u0001\u0007+#b!a%\u0005t\u0011U\u0004b\u0002C\u0014\u0003\u0002\u00071Q\u0013\u0005\b\u0003\u007f\u000b\u0005\u0019AA?)\u0019\t\u0019\n\"\u001f\u0005|!9A1\t\"A\u0002\rU\u0005b\u0002BI\u0005\u0002\u0007\u0011\u0011\u000f\u000b\t\u0003\'#y\b\"!\u0005\u0004\"9A1I\"A\u0002\rU\u0005b\u0002BI\u0007\u0002\u0007\u0011\u0011\u000f\u0005\b\u0003\u007f\u001b\u0005\u0019AA?)\u0011\t\u0019\nb\"\t\u000f\r%H\t1\u0001\u0002:\u0006q\u0011N\u001c;3E&<G)Z2j[\u0006dG\u0003BAJ\t\u001bCq\u0001\"\fF\u0001\u0004\t\t(A\bm_:<\'GY5h\t\u0016\u001c\u0017.\\1m)\u0011\t\u0019\nb%\t\u000f\rug\t1\u0001\u0004 \u0005\tBm\\;cY\u0016\u0014$-[4EK\u000eLW.\u00197\u0015\t\u0005ME\u0011\u0014\u0005\b\u0007\u000b<\u0005\u0019AB\u001a\u0003eQ\u0017M^1CS\u001e$UmY5nC2\u0014$-[4EK\u000eLW.\u00197\u0015\t\u0005MEq\u0014\u0005\b\tOA\u0005\u0019AA]\u0001
   #14 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #15 = Class              #14           // java/lang/invoke/MethodHandles$Lookup
   #16 = Utf8               java/lang/invoke/MethodHandles
   #17 = Class              #16           // java/lang/invoke/MethodHandles
   #18 = Utf8               Lookup
   #19 = Utf8               scala/Enumeration$Value
   #20 = Class              #19           // scala/Enumeration$Value
   #21 = Utf8               scala/Enumeration
   #22 = Class              #21           // scala/Enumeration
   #23 = Utf8               Value
   #24 = Utf8               scala/collection/immutable/NumericRange$Exclusive
   #25 = Class              #24           // scala/collection/immutable/NumericRange$Exclusive
   #26 = Utf8               scala/collection/immutable/NumericRange
   #27 = Class              #26           // scala/collection/immutable/NumericRange
   #28 = Utf8               Exclusive
   #29 = Utf8               scala/collection/immutable/NumericRange$Inclusive
   #30 = Class              #29           // scala/collection/immutable/NumericRange$Inclusive
   #31 = Utf8               Inclusive
   #32 = Utf8               scala/collection/immutable/Range$BigDecimal$
   #33 = Class              #32           // scala/collection/immutable/Range$BigDecimal$
   #34 = Utf8               scala/collection/immutable/Range
   #35 = Class              #34           // scala/collection/immutable/Range
   #36 = Utf8               BigDecimal$
   #37 = Utf8               scala/math/BigDecimal$RoundingMode$
   #38 = Class              #37           // scala/math/BigDecimal$RoundingMode$
   #39 = Utf8               RoundingMode$
   #40 = Utf8               bigDecimal
   #41 = Utf8               Ljava/math/BigDecimal;
   #42 = Utf8               mc
   #43 = Utf8               Ljava/math/MathContext;
   #44 = Utf8               computedHashCode
   #45 = Utf8               I
   #46 = Utf8               javaBigDecimal2bigDecimal
   #47 = Utf8               (Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
   #48 = Utf8               x
   #49 = Utf8               scala/math/BigDecimal$
   #50 = Class              #49           // scala/math/BigDecimal$
   #51 = Utf8               MODULE$
   #52 = Utf8               Lscala/math/BigDecimal$;
   #53 = NameAndType        #51:#52       // MODULE$:Lscala/math/BigDecimal$;
   #54 = Fieldref           #50.#53       // scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
   #55 = NameAndType        #46:#47       // javaBigDecimal2bigDecimal:(Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
   #56 = Methodref          #50.#55       // scala/math/BigDecimal$.javaBigDecimal2bigDecimal:(Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
   #57 = Utf8               double2bigDecimal
   #58 = Utf8               (D)Lscala/math/BigDecimal;
   #59 = Utf8               d
   #60 = Utf8               decimal
   #61 = NameAndType        #60:#58       // decimal:(D)Lscala/math/BigDecimal;
   #62 = Methodref          #50.#61       // scala/math/BigDecimal$.decimal:(D)Lscala/math/BigDecimal;
   #63 = Utf8               D
   #64 = Utf8               long2bigDecimal
   #65 = Utf8               (J)Lscala/math/BigDecimal;
   #66 = Utf8               l
   #67 = Utf8               apply
   #68 = NameAndType        #67:#65       // apply:(J)Lscala/math/BigDecimal;
   #69 = Methodref          #50.#68       // scala/math/BigDecimal$.apply:(J)Lscala/math/BigDecimal;
   #70 = Utf8               J
   #71 = Utf8               int2bigDecimal
   #72 = Utf8               (I)Lscala/math/BigDecimal;
   #73 = Utf8               i
   #74 = NameAndType        #67:#72       // apply:(I)Lscala/math/BigDecimal;
   #75 = Methodref          #50.#74       // scala/math/BigDecimal$.apply:(I)Lscala/math/BigDecimal;
   #76 = Utf8               valueOf
   #77 = NameAndType        #76:#58       // valueOf:(D)Lscala/math/BigDecimal;
   #78 = Methodref          #50.#77       // scala/math/BigDecimal$.valueOf:(D)Lscala/math/BigDecimal;
   #79 = Utf8               exact
   #80 = Utf8               ([C)Lscala/math/BigDecimal;
   #81 = Utf8               cs
   #82 = NameAndType        #79:#80       // exact:([C)Lscala/math/BigDecimal;
   #83 = Methodref          #50.#82       // scala/math/BigDecimal$.exact:([C)Lscala/math/BigDecimal;
   #84 = Utf8               [C
   #85 = Utf8               (Ljava/lang/String;)Lscala/math/BigDecimal;
   #86 = Utf8               s
   #87 = NameAndType        #79:#85       // exact:(Ljava/lang/String;)Lscala/math/BigDecimal;
   #88 = Methodref          #50.#87       // scala/math/BigDecimal$.exact:(Ljava/lang/String;)Lscala/math/BigDecimal;
   #89 = Utf8               Ljava/lang/String;
   #90 = Utf8               (Lscala/math/BigInt;)Lscala/math/BigDecimal;
   #91 = Utf8               bi
   #92 = NameAndType        #79:#90       // exact:(Lscala/math/BigInt;)Lscala/math/BigDecimal;
   #93 = Methodref          #50.#92       // scala/math/BigDecimal$.exact:(Lscala/math/BigInt;)Lscala/math/BigDecimal;
   #94 = Utf8               Lscala/math/BigInt;
   #95 = NameAndType        #79:#58       // exact:(D)Lscala/math/BigDecimal;
   #96 = Methodref          #50.#95       // scala/math/BigDecimal$.exact:(D)Lscala/math/BigDecimal;
   #97 = Utf8               repr
   #98 = NameAndType        #79:#47       // exact:(Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
   #99 = Methodref          #50.#98       // scala/math/BigDecimal$.exact:(Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
  #100 = Utf8               binary
  #101 = NameAndType        #100:#58      // binary:(D)Lscala/math/BigDecimal;
  #102 = Methodref          #50.#101      // scala/math/BigDecimal$.binary:(D)Lscala/math/BigDecimal;
  #103 = Utf8               (DLjava/math/MathContext;)Lscala/math/BigDecimal;
  #104 = NameAndType        #100:#103     // binary:(DLjava/math/MathContext;)Lscala/math/BigDecimal;
  #105 = Methodref          #50.#104      // scala/math/BigDecimal$.binary:(DLjava/math/MathContext;)Lscala/math/BigDecimal;
  #106 = Utf8               (Ljava/math/BigDecimal;Ljava/math/MathContext;)Lscala/math/BigDecimal;
  #107 = Utf8               bd
  #108 = NameAndType        #60:#106      // decimal:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Lscala/math/BigDecimal;
  #109 = Methodref          #50.#108      // scala/math/BigDecimal$.decimal:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Lscala/math/BigDecimal;
  #110 = Utf8               (JLjava/math/MathContext;)Lscala/math/BigDecimal;
  #111 = NameAndType        #67:#110      // apply:(JLjava/math/MathContext;)Lscala/math/BigDecimal;
  #112 = Methodref          #50.#111      // scala/math/BigDecimal$.apply:(JLjava/math/MathContext;)Lscala/math/BigDecimal;
  #113 = Utf8               (F)Lscala/math/BigDecimal;
  #114 = Utf8               f
  #115 = NameAndType        #60:#113      // decimal:(F)Lscala/math/BigDecimal;
  #116 = Methodref          #50.#115      // scala/math/BigDecimal$.decimal:(F)Lscala/math/BigDecimal;
  #117 = Utf8               F
  #118 = Utf8               (FLjava/math/MathContext;)Lscala/math/BigDecimal;
  #119 = NameAndType        #60:#118      // decimal:(FLjava/math/MathContext;)Lscala/math/BigDecimal;
  #120 = Methodref          #50.#119      // scala/math/BigDecimal$.decimal:(FLjava/math/MathContext;)Lscala/math/BigDecimal;
  #121 = NameAndType        #60:#103      // decimal:(DLjava/math/MathContext;)Lscala/math/BigDecimal;
  #122 = Methodref          #50.#121      // scala/math/BigDecimal$.decimal:(DLjava/math/MathContext;)Lscala/math/BigDecimal;
  #123 = Utf8               defaultMathContext
  #124 = Utf8               ()Ljava/math/MathContext;
  #125 = NameAndType        #123:#124     // defaultMathContext:()Ljava/math/MathContext;
  #126 = Methodref          #50.#125      // scala/math/BigDecimal$.defaultMathContext:()Ljava/math/MathContext;
  #127 = Utf8               $less
  #128 = Utf8               (Ljava/lang/Object;)Z
  #129 = Utf8               that
  #130 = Utf8               $less$
  #131 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)Z
  #132 = NameAndType        #130:#131     // $less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #133 = InterfaceMethodref #9.#132       // scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #134 = Utf8               this
  #135 = Utf8               Lscala/math/BigDecimal;
  #136 = Utf8               Ljava/lang/Object;
  #137 = Utf8               $greater
  #138 = Utf8               $greater$
  #139 = NameAndType        #138:#131     // $greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #140 = InterfaceMethodref #9.#139       // scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #141 = Utf8               $less$eq
  #142 = Utf8               $less$eq$
  #143 = NameAndType        #142:#131     // $less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #144 = InterfaceMethodref #9.#143       // scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #145 = Utf8               $greater$eq
  #146 = Utf8               $greater$eq$
  #147 = NameAndType        #146:#131     // $greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #148 = InterfaceMethodref #9.#147       // scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #149 = Utf8               compareTo
  #150 = Utf8               (Ljava/lang/Object;)I
  #151 = Utf8               compareTo$
  #152 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)I
  #153 = NameAndType        #151:#152     // compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
  #154 = InterfaceMethodref #9.#153       // scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
  #155 = Utf8               toChar
  #156 = Utf8               ()C
  #157 = Utf8               scala/math/ScalaNumericAnyConversions
  #158 = Class              #157          // scala/math/ScalaNumericAnyConversions
  #159 = Utf8               toChar$
  #160 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)C
  #161 = NameAndType        #159:#160     // toChar$:(Lscala/math/ScalaNumericAnyConversions;)C
  #162 = InterfaceMethodref #158.#161     // scala/math/ScalaNumericAnyConversions.toChar$:(Lscala/math/ScalaNumericAnyConversions;)C
  #163 = Utf8               toByte
  #164 = Utf8               ()B
  #165 = Utf8               toByte$
  #166 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)B
  #167 = NameAndType        #165:#166     // toByte$:(Lscala/math/ScalaNumericAnyConversions;)B
  #168 = InterfaceMethodref #158.#167     // scala/math/ScalaNumericAnyConversions.toByte$:(Lscala/math/ScalaNumericAnyConversions;)B
  #169 = Utf8               toShort
  #170 = Utf8               ()S
  #171 = Utf8               toShort$
  #172 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)S
  #173 = NameAndType        #171:#172     // toShort$:(Lscala/math/ScalaNumericAnyConversions;)S
  #174 = InterfaceMethodref #158.#173     // scala/math/ScalaNumericAnyConversions.toShort$:(Lscala/math/ScalaNumericAnyConversions;)S
  #175 = Utf8               toInt
  #176 = Utf8               ()I
  #177 = Utf8               toInt$
  #178 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)I
  #179 = NameAndType        #177:#178     // toInt$:(Lscala/math/ScalaNumericAnyConversions;)I
  #180 = InterfaceMethodref #158.#179     // scala/math/ScalaNumericAnyConversions.toInt$:(Lscala/math/ScalaNumericAnyConversions;)I
  #181 = Utf8               toLong
  #182 = Utf8               ()J
  #183 = Utf8               toLong$
  #184 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)J
  #185 = NameAndType        #183:#184     // toLong$:(Lscala/math/ScalaNumericAnyConversions;)J
  #186 = InterfaceMethodref #158.#185     // scala/math/ScalaNumericAnyConversions.toLong$:(Lscala/math/ScalaNumericAnyConversions;)J
  #187 = Utf8               toFloat
  #188 = Utf8               ()F
  #189 = Utf8               toFloat$
  #190 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)F
  #191 = NameAndType        #189:#190     // toFloat$:(Lscala/math/ScalaNumericAnyConversions;)F
  #192 = InterfaceMethodref #158.#191     // scala/math/ScalaNumericAnyConversions.toFloat$:(Lscala/math/ScalaNumericAnyConversions;)F
  #193 = Utf8               toDouble
  #194 = Utf8               ()D
  #195 = Utf8               toDouble$
  #196 = Utf8               (Lscala/math/ScalaNumericAnyConversions;)D
  #197 = NameAndType        #195:#196     // toDouble$:(Lscala/math/ScalaNumericAnyConversions;)D
  #198 = InterfaceMethodref #158.#197     // scala/math/ScalaNumericAnyConversions.toDouble$:(Lscala/math/ScalaNumericAnyConversions;)D
  #199 = Utf8               unifiedPrimitiveHashcode
  #200 = Utf8               unifiedPrimitiveHashcode$
  #201 = NameAndType        #200:#178     // unifiedPrimitiveHashcode$:(Lscala/math/ScalaNumericAnyConversions;)I
  #202 = InterfaceMethodref #158.#201     // scala/math/ScalaNumericAnyConversions.unifiedPrimitiveHashcode$:(Lscala/math/ScalaNumericAnyConversions;)I
  #203 = Utf8               unifiedPrimitiveEquals
  #204 = Utf8               unifiedPrimitiveEquals$
  #205 = Utf8               (Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
  #206 = NameAndType        #204:#205     // unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
  #207 = InterfaceMethodref #158.#206     // scala/math/ScalaNumericAnyConversions.unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
  #208 = Utf8               ()Ljava/math/BigDecimal;
  #209 = NameAndType        #40:#41       // bigDecimal:Ljava/math/BigDecimal;
  #210 = Fieldref           #2.#209       // scala/math/BigDecimal.bigDecimal:Ljava/math/BigDecimal;
  #211 = NameAndType        #42:#43       // mc:Ljava/math/MathContext;
  #212 = Fieldref           #2.#211       // scala/math/BigDecimal.mc:Ljava/math/MathContext;
  #213 = NameAndType        #44:#45       // computedHashCode:I
  #214 = Fieldref           #2.#213       // scala/math/BigDecimal.computedHashCode:I
  #215 = Utf8               computedHashCode_$eq
  #216 = Utf8               (I)V
  #217 = Utf8               x$1
  #218 = Utf8               computeHashCode
  #219 = Utf8               ()V
  #220 = Utf8               isWhole
  #221 = Utf8               ()Z
  #222 = NameAndType        #220:#221     // isWhole:()Z
  #223 = Methodref          #2.#222       // scala/math/BigDecimal.isWhole:()Z
  #224 = Utf8               precision
  #225 = NameAndType        #224:#176     // precision:()I
  #226 = Methodref          #2.#225       // scala/math/BigDecimal.precision:()I
  #227 = Utf8               scale
  #228 = NameAndType        #227:#176     // scale:()I
  #229 = Methodref          #2.#228       // scala/math/BigDecimal.scale:()I
  #230 = Utf8               toBigInt
  #231 = Utf8               ()Lscala/math/BigInt;
  #232 = NameAndType        #230:#231     // toBigInt:()Lscala/math/BigInt;
  #233 = Methodref          #2.#232       // scala/math/BigDecimal.toBigInt:()Lscala/math/BigInt;
  #234 = Utf8               scala/math/BigInt
  #235 = Class              #234          // scala/math/BigInt
  #236 = Utf8               hashCode
  #237 = NameAndType        #236:#176     // hashCode:()I
  #238 = Methodref          #235.#237     // scala/math/BigInt.hashCode:()I
  #239 = Utf8               isDecimalDouble
  #240 = NameAndType        #239:#221     // isDecimalDouble:()Z
  #241 = Methodref          #2.#240       // scala/math/BigDecimal.isDecimalDouble:()Z
  #242 = Utf8               doubleValue
  #243 = NameAndType        #242:#194     // doubleValue:()D
  #244 = Methodref          #2.#243       // scala/math/BigDecimal.doubleValue:()D
  #245 = Utf8               scala/runtime/Statics
  #246 = Class              #245          // scala/runtime/Statics
  #247 = Utf8               doubleHash
  #248 = Utf8               (D)I
  #249 = NameAndType        #247:#248     // doubleHash:(D)I
  #250 = Methodref          #246.#249     // scala/runtime/Statics.doubleHash:(D)I
  #251 = NameAndType        #40:#208      // bigDecimal:()Ljava/math/BigDecimal;
  #252 = Methodref          #2.#251       // scala/math/BigDecimal.bigDecimal:()Ljava/math/BigDecimal;
  #253 = Utf8               java/math/BigDecimal
  #254 = Class              #253          // java/math/BigDecimal
  #255 = Utf8               stripTrailingZeros
  #256 = NameAndType        #255:#208     // stripTrailingZeros:()Ljava/math/BigDecimal;
  #257 = Methodref          #254.#256     // java/math/BigDecimal.stripTrailingZeros:()Ljava/math/BigDecimal;
  #258 = Utf8               scala/util/hashing/MurmurHash3$
  #259 = Class              #258          // scala/util/hashing/MurmurHash3$
  #260 = Utf8               Lscala/util/hashing/MurmurHash3$;
  #261 = NameAndType        #51:#260      // MODULE$:Lscala/util/hashing/MurmurHash3$;
  #262 = Fieldref           #259.#261     // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
  #263 = Methodref          #254.#228     // java/math/BigDecimal.scale:()I
  #264 = Utf8               scaleByPowerOfTen
  #265 = Utf8               (I)Ljava/math/BigDecimal;
  #266 = NameAndType        #264:#265     // scaleByPowerOfTen:(I)Ljava/math/BigDecimal;
  #267 = Methodref          #254.#266     // java/math/BigDecimal.scaleByPowerOfTen:(I)Ljava/math/BigDecimal;
  #268 = Utf8               toBigInteger
  #269 = Utf8               ()Ljava/math/BigInteger;
  #270 = NameAndType        #268:#269     // toBigInteger:()Ljava/math/BigInteger;
  #271 = Methodref          #254.#270     // java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
  #272 = Utf8               java/math/BigInteger
  #273 = Class              #272          // java/math/BigInteger
  #274 = Methodref          #273.#237     // java/math/BigInteger.hashCode:()I
  #275 = Utf8               mixLast
  #276 = Utf8               (II)I
  #277 = NameAndType        #275:#276     // mixLast:(II)I
  #278 = Methodref          #259.#277     // scala/util/hashing/MurmurHash3$.mixLast:(II)I
  #279 = NameAndType        #215:#216     // computedHashCode_$eq:(I)V
  #280 = Methodref          #2.#279       // scala/math/BigDecimal.computedHashCode_$eq:(I)V
  #281 = Utf8               temp
  #282 = NameAndType        #44:#176      // computedHashCode:()I
  #283 = Methodref          #2.#282       // scala/math/BigDecimal.computedHashCode:()I
  #284 = Integer            1565550863
  #285 = NameAndType        #218:#219     // computeHashCode:()V
  #286 = Methodref          #2.#285       // scala/math/BigDecimal.computeHashCode:()V
  #287 = Utf8               equals
  #288 = Utf8               (Lscala/math/BigDecimal;)Z
  #289 = NameAndType        #287:#288     // equals:(Lscala/math/BigDecimal;)Z
  #290 = Methodref          #2.#289       // scala/math/BigDecimal.equals:(Lscala/math/BigDecimal;)Z
  #291 = Utf8               bitLength
  #292 = NameAndType        #291:#176     // bitLength:()I
  #293 = Methodref          #235.#292     // scala/math/BigInt.bitLength:()I
  #294 = Double             3.3219280948873626d
  #296 = Utf8               toBigIntExact
  #297 = Utf8               ()Lscala/Option;
  #298 = NameAndType        #296:#297     // toBigIntExact:()Lscala/Option;
  #299 = Methodref          #2.#298       // scala/math/BigDecimal.toBigIntExact:()Lscala/Option;
  #300 = Utf8               scala/Option
  #301 = Class              #300          // scala/Option
  #302 = Utf8               isEmpty
  #303 = NameAndType        #302:#221     // isEmpty:()Z
  #304 = Methodref          #301.#303     // scala/Option.isEmpty:()Z
  #305 = Utf8               get
  #306 = Utf8               ()Ljava/lang/Object;
  #307 = NameAndType        #305:#306     // get:()Ljava/lang/Object;
  #308 = Methodref          #301.#307     // scala/Option.get:()Ljava/lang/Object;
  #309 = Utf8               (Lscala/math/BigInt;)Z
  #310 = NameAndType        #287:#309     // equals:(Lscala/math/BigInt;)Z
  #311 = Methodref          #235.#310     // scala/math/BigInt.equals:(Lscala/math/BigInt;)Z
  #312 = Utf8               java/lang/Double
  #313 = Class              #312          // java/lang/Double
  #314 = Utf8               scala/runtime/BoxesRunTime
  #315 = Class              #314          // scala/runtime/BoxesRunTime
  #316 = Utf8               unboxToDouble
  #317 = Utf8               (Ljava/lang/Object;)D
  #318 = NameAndType        #316:#317     // unboxToDouble:(Ljava/lang/Object;)D
  #319 = Methodref          #315.#318     // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #320 = Utf8               scala/runtime/RichDouble$
  #321 = Class              #320          // scala/runtime/RichDouble$
  #322 = Utf8               Lscala/runtime/RichDouble$;
  #323 = NameAndType        #51:#322      // MODULE$:Lscala/runtime/RichDouble$;
  #324 = Fieldref           #321.#323     // scala/runtime/RichDouble$.MODULE$:Lscala/runtime/RichDouble$;
  #325 = Utf8               isInfinite
  #326 = Utf8               (D)Z
  #327 = NameAndType        #325:#326     // isInfinite:(D)Z
  #328 = Methodref          #313.#327     // java/lang/Double.isInfinite:(D)Z
  #329 = InterfaceMethodref #158.#243     // scala/math/ScalaNumericAnyConversions.doubleValue:()D
  #330 = Utf8               java/lang/Float
  #331 = Class              #330          // java/lang/Float
  #332 = Utf8               unboxToFloat
  #333 = Utf8               (Ljava/lang/Object;)F
  #334 = NameAndType        #332:#333     // unboxToFloat:(Ljava/lang/Object;)F
  #335 = Methodref          #315.#334     // scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
  #336 = Utf8               scala/runtime/RichFloat$
  #337 = Class              #336          // scala/runtime/RichFloat$
  #338 = Utf8               Lscala/runtime/RichFloat$;
  #339 = NameAndType        #51:#338      // MODULE$:Lscala/runtime/RichFloat$;
  #340 = Fieldref           #337.#339     // scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
  #341 = Utf8               (F)Z
  #342 = NameAndType        #325:#341     // isInfinite:(F)Z
  #343 = Methodref          #331.#342     // java/lang/Float.isInfinite:(F)Z
  #344 = Utf8               floatValue
  #345 = NameAndType        #344:#188     // floatValue:()F
  #346 = InterfaceMethodref #158.#345     // scala/math/ScalaNumericAnyConversions.floatValue:()F
  #347 = Utf8               isValidLong
  #348 = NameAndType        #347:#221     // isValidLong:()Z
  #349 = Methodref          #2.#348       // scala/math/BigDecimal.isValidLong:()Z
  #350 = Utf8               exists_this
  #351 = Utf8               Lscala/Option;
  #352 = Utf8               java/lang/Object
  #353 = Class              #352          // java/lang/Object
  #354 = Utf8               isValidByte
  #355 = Utf8               java/lang/ArithmeticException
  #356 = Class              #355          // java/lang/ArithmeticException
  #357 = Utf8               toByteExact
  #358 = NameAndType        #357:#164     // toByteExact:()B
  #359 = Methodref          #2.#358       // scala/math/BigDecimal.toByteExact:()B
  #360 = Utf8               isValidShort
  #361 = Utf8               toShortExact
  #362 = NameAndType        #361:#170     // toShortExact:()S
  #363 = Methodref          #2.#362       // scala/math/BigDecimal.toShortExact:()S
  #364 = Utf8               isValidChar
  #365 = Utf8               isValidInt
  #366 = NameAndType        #365:#221     // isValidInt:()Z
  #367 = Methodref          #2.#366       // scala/math/BigDecimal.isValidInt:()Z
  #368 = Utf8               toIntExact
  #369 = NameAndType        #368:#176     // toIntExact:()I
  #370 = Methodref          #2.#369       // scala/math/BigDecimal.toIntExact:()I
  #371 = Integer            65535
  #372 = Utf8               toLongExact
  #373 = NameAndType        #372:#182     // toLongExact:()J
  #374 = Methodref          #2.#373       // scala/math/BigDecimal.toLongExact:()J
  #375 = Utf8               isDecimalFloat
  #376 = Utf8               isBinaryDouble
  #377 = NameAndType        #42:#124      // mc:()Ljava/math/MathContext;
  #378 = Methodref          #2.#377       // scala/math/BigDecimal.mc:()Ljava/math/MathContext;
  #379 = Utf8               isBinaryFloat
  #380 = Utf8               isExactDouble
  #381 = Utf8               isExactFloat
  #382 = Utf8               noArithmeticException
  #383 = Utf8               (Lscala/Function0;)Z
  #384 = Utf8               (Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Z
  #385 = Utf8               body
  #386 = Utf8               scala/Function0
  #387 = Class              #386          // scala/Function0
  #388 = Utf8               apply$mcV$sp
  #389 = NameAndType        #388:#219     // apply$mcV$sp:()V
  #390 = InterfaceMethodref #387.#389     // scala/Function0.apply$mcV$sp:()V
  #391 = Utf8               Lscala/Function0;
  #392 = Utf8               underlying
  #393 = Utf8               compare
  #394 = Utf8               (Lscala/math/BigDecimal;)I
  #395 = NameAndType        #393:#394     // compare:(Lscala/math/BigDecimal;)I
  #396 = Methodref          #2.#395       // scala/math/BigDecimal.compare:(Lscala/math/BigDecimal;)I
  #397 = Utf8               (Ljava/math/BigDecimal;)I
  #398 = NameAndType        #149:#397     // compareTo:(Ljava/math/BigDecimal;)I
  #399 = Methodref          #254.#398     // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
  #400 = Utf8               $plus
  #401 = Utf8               (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #402 = Utf8               add
  #403 = Utf8               (Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #404 = NameAndType        #402:#403     // add:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #405 = Methodref          #254.#404     // java/math/BigDecimal.add:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #406 = Utf8               <init>
  #407 = Utf8               (Ljava/math/BigDecimal;Ljava/math/MathContext;)V
  #408 = NameAndType        #406:#407     // "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
  #409 = Methodref          #2.#408       // scala/math/BigDecimal."<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
  #410 = Utf8               $minus
  #411 = Utf8               subtract
  #412 = NameAndType        #411:#403     // subtract:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #413 = Methodref          #254.#412     // java/math/BigDecimal.subtract:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #414 = Utf8               $times
  #415 = Utf8               multiply
  #416 = NameAndType        #415:#403     // multiply:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #417 = Methodref          #254.#416     // java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #418 = Utf8               $div
  #419 = Utf8               divide
  #420 = NameAndType        #419:#403     // divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #421 = Methodref          #254.#420     // java/math/BigDecimal.divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #422 = Utf8               $div$percent
  #423 = Utf8               (Lscala/math/BigDecimal;)Lscala/Tuple2;
  #424 = Utf8               (Lscala/math/BigDecimal;)Lscala/Tuple2<Lscala/math/BigDecimal;Lscala/math/BigDecimal;>;
  #425 = Utf8               divideAndRemainder
  #426 = Utf8               (Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;
  #427 = NameAndType        #425:#426     // divideAndRemainder:(Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;
  #428 = Methodref          #254.#427     // java/math/BigDecimal.divideAndRemainder:(Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;
  #429 = Utf8               scala/Tuple2
  #430 = Class              #429          // scala/Tuple2
  #431 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #432 = NameAndType        #406:#431     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #433 = Methodref          #430.#432     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #434 = Utf8               qr
  #435 = Utf8               [Ljava/math/BigDecimal;
  #436 = Utf8               quot
  #437 = Utf8               divideToIntegralValue
  #438 = NameAndType        #437:#403     // divideToIntegralValue:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #439 = Methodref          #254.#438     // java/math/BigDecimal.divideToIntegralValue:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #440 = Utf8               min
  #441 = Utf8               max
  #442 = Utf8               remainder
  #443 = NameAndType        #442:#403     // remainder:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #444 = Methodref          #254.#443     // java/math/BigDecimal.remainder:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #445 = Utf8               $percent
  #446 = NameAndType        #442:#401     // remainder:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #447 = Methodref          #2.#446       // scala/math/BigDecimal.remainder:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
  #448 = Utf8               pow
  #449 = Utf8               n
  #450 = Utf8               (ILjava/math/MathContext;)Ljava/math/BigDecimal;
  #451 = NameAndType        #448:#450     // pow:(ILjava/math/MathContext;)Ljava/math/BigDecimal;
  #452 = Methodref          #254.#451     // java/math/BigDecimal.pow:(ILjava/math/MathContext;)Ljava/math/BigDecimal;
  #453 = Utf8               unary_$minus
  #454 = Utf8               ()Lscala/math/BigDecimal;
  #455 = Utf8               negate
  #456 = Utf8               (Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #457 = NameAndType        #455:#456     // negate:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #458 = Methodref          #254.#457     // java/math/BigDecimal.negate:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #459 = Utf8               abs
  #460 = Utf8               signum
  #461 = NameAndType        #460:#176     // signum:()I
  #462 = Methodref          #2.#461       // scala/math/BigDecimal.signum:()I
  #463 = NameAndType        #453:#454     // unary_$minus:()Lscala/math/BigDecimal;
  #464 = Methodref          #2.#463       // scala/math/BigDecimal.unary_$minus:()Lscala/math/BigDecimal;
  #465 = Methodref          #254.#461     // java/math/BigDecimal.signum:()I
  #466 = Utf8               sign
  #467 = Methodref          #254.#225     // java/math/BigDecimal.precision:()I
  #468 = Utf8               round
  #469 = Utf8               (Ljava/math/MathContext;)Lscala/math/BigDecimal;
  #470 = NameAndType        #468:#456     // round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #471 = Methodref          #254.#470     // java/math/BigDecimal.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
  #472 = Utf8               r
  #473 = Utf8               rounded
  #474 = Utf8               ulp
  #475 = NameAndType        #474:#208     // ulp:()Ljava/math/BigDecimal;
  #476 = Methodref          #254.#475     // java/math/BigDecimal.ulp:()Ljava/math/BigDecimal;
  #477 = Utf8               setScale
  #478 = NameAndType        #477:#265     // setScale:(I)Ljava/math/BigDecimal;
  #479 = Methodref          #254.#478     // java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;
  #480 = Utf8               (ILscala/Enumeration$Value;)Lscala/math/BigDecimal;
  #481 = Utf8               mode
  #482 = Utf8               id
  #483 = NameAndType        #482:#176     // id:()I
  #484 = Methodref          #20.#483      // scala/Enumeration$Value.id:()I
  #485 = Utf8               java/math/RoundingMode
  #486 = Class              #485          // java/math/RoundingMode
  #487 = Utf8               (I)Ljava/math/RoundingMode;
  #488 = NameAndType        #76:#487      // valueOf:(I)Ljava/math/RoundingMode;
  #489 = Methodref          #486.#488     // java/math/RoundingMode.valueOf:(I)Ljava/math/RoundingMode;
  #490 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #491 = NameAndType        #477:#490     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #492 = Methodref          #254.#491     // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #493 = Utf8               Lscala/Enumeration$Value;
  #494 = Utf8               byteValue
  #495 = Utf8               intValue
  #496 = NameAndType        #495:#176     // intValue:()I
  #497 = Methodref          #2.#496       // scala/math/BigDecimal.intValue:()I
  #498 = Utf8               shortValue
  #499 = Utf8               charValue
  #500 = Methodref          #254.#496     // java/math/BigDecimal.intValue:()I
  #501 = Utf8               longValue
  #502 = NameAndType        #501:#182     // longValue:()J
  #503 = Methodref          #254.#502     // java/math/BigDecimal.longValue:()J
  #504 = Methodref          #254.#345     // java/math/BigDecimal.floatValue:()F
  #505 = Methodref          #254.#243     // java/math/BigDecimal.doubleValue:()D
  #506 = Utf8               byteValueExact
  #507 = NameAndType        #506:#164     // byteValueExact:()B
  #508 = Methodref          #254.#507     // java/math/BigDecimal.byteValueExact:()B
  #509 = Utf8               shortValueExact
  #510 = NameAndType        #509:#170     // shortValueExact:()S
  #511 = Methodref          #254.#510     // java/math/BigDecimal.shortValueExact:()S
  #512 = Utf8               intValueExact
  #513 = NameAndType        #512:#176     // intValueExact:()I
  #514 = Methodref          #254.#513     // java/math/BigDecimal.intValueExact:()I
  #515 = Utf8               longValueExact
  #516 = NameAndType        #515:#182     // longValueExact:()J
  #517 = Methodref          #254.#516     // java/math/BigDecimal.longValueExact:()J
  #518 = Utf8               until
  #519 = Utf8               (Lscala/math/BigDecimal;)Lscala/Function1;
  #520 = Utf8               (Lscala/math/BigDecimal;)Lscala/Function1<Lscala/math/BigDecimal;Lscala/collection/immutable/NumericRange$Exclusive<Lscala/math/BigDecimal;>;>;
  #521 = Utf8               end
  #522 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #523 = MethodType         #522          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #524 = Utf8               $anonfun$until$1
  #525 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #526 = NameAndType        #524:#525     // $anonfun$until$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #527 = Methodref          #2.#526       // scala/math/BigDecimal.$anonfun$until$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #528 = MethodHandle       6:#527        // REF_invokeStatic scala/math/BigDecimal.$anonfun$until$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #529 = Utf8               (Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #530 = MethodType         #529          //  (Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #531 = Integer            5
  #532 = Integer            1
  #533 = Utf8               java/lang/invoke/LambdaMetafactory
  #534 = Class              #533          // java/lang/invoke/LambdaMetafactory
  #535 = Utf8               altMetafactory
  #536 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #537 = NameAndType        #535:#536     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #538 = Methodref          #534.#537     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #539 = MethodHandle       6:#538        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #540 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/Function1;
  #541 = NameAndType        #67:#540      // apply:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/Function1;
  #542 = InvokeDynamic      #0:#541       // #0:apply:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/Function1;
  #543 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #544 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive<Lscala/math/BigDecimal;>;
  #545 = Utf8               step
  #546 = Utf8               Lscala/collection/immutable/Range$BigDecimal$;
  #547 = NameAndType        #51:#546      // MODULE$:Lscala/collection/immutable/Range$BigDecimal$;
  #548 = Fieldref           #33.#547      // scala/collection/immutable/Range$BigDecimal$.MODULE$:Lscala/collection/immutable/Range$BigDecimal$;
  #549 = NameAndType        #67:#525      // apply:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #550 = Methodref          #33.#549      // scala/collection/immutable/Range$BigDecimal$.apply:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #551 = Utf8               to
  #552 = Utf8               (Lscala/math/BigDecimal;)Lscala/Function1<Lscala/math/BigDecimal;Lscala/collection/immutable/NumericRange$Inclusive<Lscala/math/BigDecimal;>;>;
  #553 = Utf8               $anonfun$to$1
  #554 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #555 = NameAndType        #553:#554     // $anonfun$to$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #556 = Methodref          #2.#555       // scala/math/BigDecimal.$anonfun$to$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #557 = MethodHandle       6:#556        // REF_invokeStatic scala/math/BigDecimal.$anonfun$to$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #558 = Utf8               (Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #559 = MethodType         #558          //  (Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #560 = InvokeDynamic      #1:#541       // #1:apply:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/Function1;
  #561 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #562 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive<Lscala/math/BigDecimal;>;
  #563 = Utf8               inclusive
  #564 = NameAndType        #563:#554     // inclusive:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #565 = Methodref          #33.#564      // scala/collection/immutable/Range$BigDecimal$.inclusive:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #566 = Utf8               (Ljava/math/BigInteger;)V
  #567 = NameAndType        #406:#566     // "<init>":(Ljava/math/BigInteger;)V
  #568 = Methodref          #235.#567     // scala/math/BigInt."<init>":(Ljava/math/BigInteger;)V
  #569 = Utf8               ()Lscala/Option<Lscala/math/BigInt;>;
  #570 = Utf8               scala/Some
  #571 = Class              #570          // scala/Some
  #572 = Utf8               toBigIntegerExact
  #573 = NameAndType        #572:#269     // toBigIntegerExact:()Ljava/math/BigInteger;
  #574 = Methodref          #254.#573     // java/math/BigDecimal.toBigIntegerExact:()Ljava/math/BigInteger;
  #575 = Utf8               (Ljava/lang/Object;)V
  #576 = NameAndType        #406:#575     // "<init>":(Ljava/lang/Object;)V
  #577 = Methodref          #571.#576     // scala/Some."<init>":(Ljava/lang/Object;)V
  #578 = Utf8               scala/None$
  #579 = Class              #578          // scala/None$
  #580 = Utf8               Lscala/None$;
  #581 = NameAndType        #51:#580      // MODULE$:Lscala/None$;
  #582 = Fieldref           #579.#581     // scala/None$.MODULE$:Lscala/None$;
  #583 = Utf8               toString
  #584 = Utf8               ()Ljava/lang/String;
  #585 = NameAndType        #583:#584     // toString:()Ljava/lang/String;
  #586 = Methodref          #254.#585     // java/math/BigDecimal.toString:()Ljava/lang/String;
  #587 = NameAndType        #392:#208     // underlying:()Ljava/math/BigDecimal;
  #588 = Methodref          #2.#587       // scala/math/BigDecimal.underlying:()Ljava/math/BigDecimal;
  #589 = Utf8               $anonfun$equals$1
  #590 = Utf8               (Lscala/math/BigInt;Lscala/math/BigInt;)Z
  #591 = Utf8               x3$1
  #592 = Utf8               $anonfun$isValidByte$1
  #593 = Utf8               (Lscala/math/BigDecimal;)V
  #594 = Utf8               $this
  #595 = Utf8               $anonfun$isValidShort$1
  #596 = Utf8               $anonfun$isValidInt$1
  #597 = Utf8               $anonfun$isValidLong$1
  #598 = Utf8               end$1
  #599 = Utf8               x$2
  #600 = NameAndType        #518:#543     // until:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #601 = Methodref          #2.#600       // scala/math/BigDecimal.until:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  #602 = Utf8               end$2
  #603 = Utf8               x$3
  #604 = NameAndType        #551:#561     // to:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #605 = Methodref          #2.#604       // scala/math/BigDecimal.to:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  #606 = NameAndType        #406:#219     // "<init>":()V
  #607 = Methodref          #5.#606       // scala/math/ScalaNumber."<init>":()V
  #608 = Utf8               java/lang/IllegalArgumentException
  #609 = Class              #608          // java/lang/IllegalArgumentException
  #610 = Utf8               null value for BigDecimal
  #611 = String             #610          // null value for BigDecimal
  #612 = Utf8               (Ljava/lang/String;)V
  #613 = NameAndType        #406:#612     // "<init>":(Ljava/lang/String;)V
  #614 = Methodref          #609.#613     // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #615 = Utf8               null MathContext for BigDecimal
  #616 = String             #615          // null MathContext for BigDecimal
  #617 = Utf8               java/math/MathContext
  #618 = Class              #617          // java/math/MathContext
  #619 = Utf8               (Ljava/math/BigDecimal;)V
  #620 = Utf8               $anonfun$equals$1$adapted
  #621 = Utf8               (Lscala/math/BigInt;Lscala/math/BigInt;)Ljava/lang/Object;
  #622 = NameAndType        #589:#590     // $anonfun$equals$1:(Lscala/math/BigInt;Lscala/math/BigInt;)Z
  #623 = Methodref          #2.#622       // scala/math/BigDecimal.$anonfun$equals$1:(Lscala/math/BigInt;Lscala/math/BigInt;)Z
  #624 = Utf8               boxToBoolean
  #625 = Utf8               (Z)Ljava/lang/Boolean;
  #626 = NameAndType        #624:#625     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #627 = Methodref          #315.#626     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #628 = Utf8               $deserializeLambda$
  #629 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #630 = Utf8               scala/runtime/LambdaDeserialize
  #631 = Class              #630          // scala/runtime/LambdaDeserialize
  #632 = Utf8               bootstrap
  #633 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #634 = NameAndType        #632:#633     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #635 = Methodref          #631.#634     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #636 = MethodHandle       6:#635        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #637 = Utf8               lambdaDeserialize
  #638 = NameAndType        #637:#629     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #639 = InvokeDynamic      #2:#638       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #640 = Utf8               Code
  #641 = Utf8               LocalVariableTable
  #642 = Utf8               MethodParameters
  #643 = Utf8               LineNumberTable
  #644 = Utf8               StackMapTable
  #645 = Utf8               Signature
  #646 = Utf8               InnerClasses
  #647 = Utf8               SourceFile
  #648 = Utf8               RuntimeVisibleAnnotations
  #649 = Utf8               BootstrapMethods
  #650 = Utf8               ScalaInlineInfo
  #651 = Utf8               ScalaSig
{
  private final java.math.BigDecimal bigDecimal;
    descriptor: Ljava/math/BigDecimal;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.math.MathContext mc;
    descriptor: Ljava/math/MathContext;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private int computedHashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  public static scala.math.BigDecimal javaBigDecimal2bigDecimal(java.math.BigDecimal);
    descriptor: (Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: aload_0
         4: invokevirtual #56                 // Method scala/math/BigDecimal$.javaBigDecimal2bigDecimal:(Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     x   Ljava/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      x                              final

  public static scala.math.BigDecimal double2bigDecimal(double);
    descriptor: (D)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: dload_0
         4: invokevirtual #62                 // Method scala/math/BigDecimal$.decimal:(D)Lscala/math/BigDecimal;
         7: areturn
      LineNumberTable:
        line 304: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     d   D
    MethodParameters:
      Name                           Flags
      d                              final

  public static scala.math.BigDecimal long2bigDecimal(long);
    descriptor: (J)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: lload_0
         4: invokevirtual #69                 // Method scala/math/BigDecimal$.apply:(J)Lscala/math/BigDecimal;
         7: areturn
      LineNumberTable:
        line 301: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     l   J
    MethodParameters:
      Name                           Flags
      l                              final

  public static scala.math.BigDecimal int2bigDecimal(int);
    descriptor: (I)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: iload_0
         4: invokevirtual #75                 // Method scala/math/BigDecimal$.apply:(I)Lscala/math/BigDecimal;
         7: areturn
      LineNumberTable:
        line 298: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public static scala.math.BigDecimal valueOf(long);
    descriptor: (J)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: lload_0
         4: invokevirtual #69                 // Method scala/math/BigDecimal$.apply:(J)Lscala/math/BigDecimal;
         7: areturn
      LineNumberTable:
        line 146: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     x   J
    MethodParameters:
      Name                           Flags
      x                              final

  public static scala.math.BigDecimal valueOf(double);
    descriptor: (D)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: dload_0
         4: invokevirtual #78                 // Method scala/math/BigDecimal$.valueOf:(D)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     d   D
    MethodParameters:
      Name                           Flags
      d                              final

  public static scala.math.BigDecimal exact(char[]);
    descriptor: ([C)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: aload_0
         4: invokevirtual #83                 // Method scala/math/BigDecimal$.exact:([C)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    cs   [C
    MethodParameters:
      Name                           Flags
      cs                             final

  public static scala.math.BigDecimal exact(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: aload_0
         4: invokevirtual #88                 // Method scala/math/BigDecimal$.exact:(Ljava/lang/String;)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.math.BigDecimal exact(long);
    descriptor: (J)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: lload_0
         4: invokevirtual #69                 // Method scala/math/BigDecimal$.apply:(J)Lscala/math/BigDecimal;
         7: areturn
      LineNumberTable:
        line 119: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     l   J
    MethodParameters:
      Name                           Flags
      l                              final

  public static scala.math.BigDecimal exact(scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: aload_0
         4: invokevirtual #93                 // Method scala/math/BigDecimal$.exact:(Lscala/math/BigInt;)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0    bi   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      bi                             final

  public static scala.math.BigDecimal exact(double);
    descriptor: (D)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: dload_0
         4: invokevirtual #96                 // Method scala/math/BigDecimal$.exact:(D)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     d   D
    MethodParameters:
      Name                           Flags
      d                              final

  public static scala.math.BigDecimal exact(java.math.BigDecimal);
    descriptor: (Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: aload_0
         4: invokevirtual #99                 // Method scala/math/BigDecimal$.exact:(Ljava/math/BigDecimal;)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  repr   Ljava/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      repr                           final

  public static scala.math.BigDecimal binary(double);
    descriptor: (D)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: dload_0
         4: invokevirtual #102                // Method scala/math/BigDecimal$.binary:(D)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     d   D
    MethodParameters:
      Name                           Flags
      d                              final

  public static scala.math.BigDecimal binary(double, java.math.MathContext);
    descriptor: (DLjava/math/MathContext;)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: dload_0
         4: aload_2
         5: invokevirtual #105                // Method scala/math/BigDecimal$.binary:(DLjava/math/MathContext;)Lscala/math/BigDecimal;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     d   D
            0       9     2    mc   Ljava/math/MathContext;
    MethodParameters:
      Name                           Flags
      d                              final
      mc                             final

  public static scala.math.BigDecimal decimal(java.math.BigDecimal, java.math.MathContext);
    descriptor: (Ljava/math/BigDecimal;Ljava/math/MathContext;)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: aload_0
         4: aload_1
         5: invokevirtual #109                // Method scala/math/BigDecimal$.decimal:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Lscala/math/BigDecimal;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0    bd   Ljava/math/BigDecimal;
            0       9     1    mc   Ljava/math/MathContext;
    MethodParameters:
      Name                           Flags
      bd                             final
      mc                             final

  public static scala.math.BigDecimal decimal(long);
    descriptor: (J)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: lload_0
         4: invokevirtual #69                 // Method scala/math/BigDecimal$.apply:(J)Lscala/math/BigDecimal;
         7: areturn
      LineNumberTable:
        line 75: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     l   J
    MethodParameters:
      Name                           Flags
      l                              final

  public static scala.math.BigDecimal decimal(long, java.math.MathContext);
    descriptor: (JLjava/math/MathContext;)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: lload_0
         4: aload_2
         5: invokevirtual #112                // Method scala/math/BigDecimal$.apply:(JLjava/math/MathContext;)Lscala/math/BigDecimal;
         8: areturn
      LineNumberTable:
        line 71: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     l   J
            0       9     2    mc   Ljava/math/MathContext;
    MethodParameters:
      Name                           Flags
      l                              final
      mc                             final

  public static scala.math.BigDecimal decimal(float);
    descriptor: (F)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: fload_0
         4: invokevirtual #116                // Method scala/math/BigDecimal$.decimal:(F)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     f   F
    MethodParameters:
      Name                           Flags
      f                              final

  public static scala.math.BigDecimal decimal(float, java.math.MathContext);
    descriptor: (FLjava/math/MathContext;)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: fload_0
         4: aload_1
         5: invokevirtual #120                // Method scala/math/BigDecimal$.decimal:(FLjava/math/MathContext;)Lscala/math/BigDecimal;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     f   F
            0       9     1    mc   Ljava/math/MathContext;
    MethodParameters:
      Name                           Flags
      f                              final
      mc                             final

  public static scala.math.BigDecimal decimal(double);
    descriptor: (D)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: dload_0
         4: invokevirtual #62                 // Method scala/math/BigDecimal$.decimal:(D)Lscala/math/BigDecimal;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     d   D
    MethodParameters:
      Name                           Flags
      d                              final

  public static scala.math.BigDecimal decimal(double, java.math.MathContext);
    descriptor: (DLjava/math/MathContext;)Lscala/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: dload_0
         4: aload_2
         5: invokevirtual #122                // Method scala/math/BigDecimal$.decimal:(DLjava/math/MathContext;)Lscala/math/BigDecimal;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     d   D
            0       9     2    mc   Ljava/math/MathContext;
    MethodParameters:
      Name                           Flags
      d                              final
      mc                             final

  public static java.math.MathContext defaultMathContext();
    descriptor: ()Ljava/math/MathContext;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: invokevirtual #126                // Method scala/math/BigDecimal$.defaultMathContext:()Ljava/math/MathContext;
         6: areturn

  public boolean $less(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #133                // InterfaceMethod scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #140                // InterfaceMethod scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $less$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #144                // InterfaceMethod scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #148                // InterfaceMethod scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #154                // InterfaceMethod scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public char toChar();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #162                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toChar$:(Lscala/math/ScalaNumericAnyConversions;)C
         4: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public byte toByte();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #168                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toByte$:(Lscala/math/ScalaNumericAnyConversions;)B
         4: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public short toShort();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #174                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toShort$:(Lscala/math/ScalaNumericAnyConversions;)S
         4: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public int toInt();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #180                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toInt$:(Lscala/math/ScalaNumericAnyConversions;)I
         4: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public long toLong();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #186                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toLong$:(Lscala/math/ScalaNumericAnyConversions;)J
         4: lreturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public float toFloat();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #192                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toFloat$:(Lscala/math/ScalaNumericAnyConversions;)F
         4: freturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public double toDouble();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #198                // InterfaceMethod scala/math/ScalaNumericAnyConversions.toDouble$:(Lscala/math/ScalaNumericAnyConversions;)D
         4: dreturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public int unifiedPrimitiveHashcode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #202                // InterfaceMethod scala/math/ScalaNumericAnyConversions.unifiedPrimitiveHashcode$:(Lscala/math/ScalaNumericAnyConversions;)I
         4: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public boolean unifiedPrimitiveEquals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #207                // InterfaceMethod scala/math/ScalaNumericAnyConversions.unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;
            0       6     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public java.math.BigDecimal bigDecimal();
    descriptor: ()Ljava/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #210                // Field bigDecimal:Ljava/math/BigDecimal;
         4: areturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public java.math.MathContext mc();
    descriptor: ()Ljava/math/MathContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #212                // Field mc:Ljava/math/MathContext;
         4: areturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  private final int computedHashCode();
    descriptor: ()I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #214                // Field computedHashCode:I
         4: ireturn
      LineNumberTable:
        line 373: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  private final void computedHashCode_$eq(int);
    descriptor: (I)V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #214                // Field computedHashCode:I
         5: return
      LineNumberTable:
        line 373: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  private final void computeHashCode();
    descriptor: ()V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: aload_0
         2: invokevirtual #223                // Method isWhole:()Z
         5: ifeq          33
         8: aload_0
         9: invokevirtual #226                // Method precision:()I
        12: aload_0
        13: invokevirtual #229                // Method scale:()I
        16: isub
        17: sipush        4934
        20: if_icmpge     33
        23: aload_0
        24: invokevirtual #233                // Method toBigInt:()Lscala/math/BigInt;
        27: invokevirtual #238                // Method scala/math/BigInt.hashCode:()I
        30: goto          82
        33: aload_0
        34: invokevirtual #241                // Method isDecimalDouble:()Z
        37: ifeq          50
        40: aload_0
        41: invokevirtual #244                // Method doubleValue:()D
        44: invokestatic  #250                // Method scala/runtime/Statics.doubleHash:(D)I
        47: goto          82
        50: aload_0
        51: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        54: invokevirtual #257                // Method java/math/BigDecimal.stripTrailingZeros:()Ljava/math/BigDecimal;
        57: astore_1
        58: getstatic     #262                // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        61: aload_1
        62: aload_1
        63: invokevirtual #263                // Method java/math/BigDecimal.scale:()I
        66: invokevirtual #267                // Method java/math/BigDecimal.scaleByPowerOfTen:(I)Ljava/math/BigDecimal;
        69: invokevirtual #271                // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
        72: invokevirtual #274                // Method java/math/BigInteger.hashCode:()I
        75: aload_1
        76: invokevirtual #263                // Method java/math/BigDecimal.scale:()I
        79: invokevirtual #278                // Method scala/util/hashing/MurmurHash3$.mixLast:(II)I
        82: invokespecial #280                // Method computedHashCode_$eq:(I)V
        85: return
      StackMapTable: number_of_entries = 3
        frame_type = 97 /* same_locals_1_stack_item */
          stack = [ class scala/math/BigDecimal ]
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class scala/math/BigDecimal ]
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class scala/math/BigDecimal ]
          stack = [ class scala/math/BigDecimal, int ]
      LineNumberTable:
        line 375: 0
        line 376: 1
        line 377: 33
        line 379: 50
        line 380: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           58      24     1  temp   Ljava/math/BigDecimal;
            0      86     0  this   Lscala/math/BigDecimal;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #283                // Method computedHashCode:()I
         4: ldc_w         #284                // int 1565550863
         7: if_icmpne     14
        10: aload_0
        11: invokespecial #286                // Method computeHashCode:()V
        14: aload_0
        15: invokespecial #283                // Method computedHashCode:()I
        18: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
      LineNumberTable:
        line 395: 0
        line 396: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/math/BigDecimal;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=13, args_size=2
         0: aload_1
         1: instanceof    #2                  // class scala/math/BigDecimal
         4: ifeq          21
         7: aload_1
         8: checkcast     #2                  // class scala/math/BigDecimal
        11: astore_3
        12: aload_0
        13: aload_3
        14: invokevirtual #290                // Method equals:(Lscala/math/BigDecimal;)Z
        17: istore_2
        18: goto          312
        21: aload_1
        22: instanceof    #235                // class scala/math/BigInt
        25: ifeq          120
        28: aload_1
        29: checkcast     #235                // class scala/math/BigInt
        32: astore        4
        34: aload         4
        36: invokevirtual #293                // Method scala/math/BigInt.bitLength:()I
        39: i2d
        40: aload_0
        41: invokevirtual #226                // Method precision:()I
        44: aload_0
        45: invokevirtual #229                // Method scale:()I
        48: isub
        49: iconst_2
        50: isub
        51: i2d
        52: ldc2_w        #294                // double 3.3219280948873626d
        55: dmul
        56: dcmpl
        57: ifle          115
        60: aload_0
        61: invokevirtual #299                // Method toBigIntExact:()Lscala/Option;
        64: dup
        65: ifnonnull     70
        68: aconst_null
        69: athrow
        70: astore        8
        72: aload         8
        74: invokevirtual #304                // Method scala/Option.isEmpty:()Z
        77: ifne          104
        80: aload         8
        82: invokevirtual #308                // Method scala/Option.get:()Ljava/lang/Object;
        85: checkcast     #235                // class scala/math/BigInt
        88: astore        12
        90: aload         4
        92: aload         12
        94: invokevirtual #311                // Method scala/math/BigInt.equals:(Lscala/math/BigInt;)Z
        97: ifeq          104
       100: iconst_1
       101: goto          105
       104: iconst_0
       105: aconst_null
       106: astore        8
       108: ifeq          115
       111: iconst_1
       112: goto          116
       115: iconst_0
       116: istore_2
       117: goto          312
       120: aload_1
       121: instanceof    #313                // class java/lang/Double
       124: ifeq          205
       127: aload_1
       128: invokestatic  #319                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       131: dstore        5
       133: getstatic     #324                // Field scala/runtime/RichDouble$.MODULE$:Lscala/runtime/RichDouble$;
       136: pop
       137: dload         5
       139: invokestatic  #328                // Method java/lang/Double.isInfinite:(D)Z
       142: ifne          200
       145: aload_0
       146: invokeinterface #329,  1          // InterfaceMethod scala/math/ScalaNumericAnyConversions.doubleValue:()D
       151: dstore        9
       153: getstatic     #324                // Field scala/runtime/RichDouble$.MODULE$:Lscala/runtime/RichDouble$;
       156: pop
       157: dload         9
       159: invokestatic  #328                // Method java/lang/Double.isInfinite:(D)Z
       162: ifne          192
       165: dload         9
       167: dload         5
       169: dcmpl
       170: ifne          192
       173: aload_0
       174: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
       177: dload         9
       179: invokevirtual #62                 // Method scala/math/BigDecimal$.decimal:(D)Lscala/math/BigDecimal;
       182: invokevirtual #290                // Method equals:(Lscala/math/BigDecimal;)Z
       185: ifeq          192
       188: iconst_1
       189: goto          193
       192: iconst_0
       193: ifeq          200
       196: iconst_1
       197: goto          201
       200: iconst_0
       201: istore_2
       202: goto          312
       205: aload_1
       206: instanceof    #331                // class java/lang/Float
       209: ifeq          291
       212: aload_1
       213: invokestatic  #335                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
       216: fstore        7
       218: getstatic     #340                // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       221: pop
       222: fload         7
       224: invokestatic  #343                // Method java/lang/Float.isInfinite:(F)Z
       227: ifne          286
       230: aload_0
       231: invokeinterface #346,  1          // InterfaceMethod scala/math/ScalaNumericAnyConversions.floatValue:()F
       236: fstore        11
       238: getstatic     #340                // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
       241: pop
       242: fload         11
       244: invokestatic  #343                // Method java/lang/Float.isInfinite:(F)Z
       247: ifne          278
       250: fload         11
       252: fload         7
       254: fcmpl
       255: ifne          278
       258: aload_0
       259: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
       262: fload         11
       264: f2d
       265: invokevirtual #62                 // Method scala/math/BigDecimal$.decimal:(D)Lscala/math/BigDecimal;
       268: invokevirtual #290                // Method equals:(Lscala/math/BigDecimal;)Z
       271: ifeq          278
       274: iconst_1
       275: goto          279
       278: iconst_0
       279: ifeq          286
       282: iconst_1
       283: goto          287
       286: iconst_0
       287: istore_2
       288: goto          312
       291: aload_0
       292: invokevirtual #349                // Method isValidLong:()Z
       295: ifeq          310
       298: aload_0
       299: aload_1
       300: invokestatic  #207                // InterfaceMethod scala/math/ScalaNumericAnyConversions.unifiedPrimitiveEquals$:(Lscala/math/ScalaNumericAnyConversions;Ljava/lang/Object;)Z
       303: ifeq          310
       306: iconst_1
       307: goto          311
       310: iconst_0
       311: istore_2
       312: iload_2
       313: ireturn
      StackMapTable: number_of_entries = 20
        frame_type = 21 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class scala/math/BigDecimal, class java/lang/Object, top, top, class scala/math/BigInt ]
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class scala/math/BigDecimal, class java/lang/Object, top, top, class scala/math/BigInt, top, top, top, class scala/Option ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/math/BigDecimal, class java/lang/Object, top, top, class scala/math/BigInt ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 71
          locals = [ class scala/math/BigDecimal, class java/lang/Object, top, top, top, double, top, top, double ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/math/BigDecimal, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 72
          locals = [ class scala/math/BigDecimal, class java/lang/Object, top, top, top, top, top, float, top, top, top, float ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/math/BigDecimal, class java/lang/Object, top, top, top, top, top, float ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/math/BigDecimal, class java/lang/Object ]
          stack = []
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 0
          locals = [ int ]
      LineNumberTable:
        line 403: 0
        line 404: 21
        line 405: 34
        line 406: 60
        line 406: 90
        line 406: 97
        line 407: 120
        line 408: 133
        line 357: 145
        line 410: 153
        line 412: 205
        line 413: 218
        line 357: 230
        line 415: 238
        line 417: 291
        line 357: 298
        line 417: 303
        line 402: 312
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     314     0  this   Lscala/math/BigDecimal;
            0     314     1  that   Ljava/lang/Object;
           72      33     8 exists_this   Lscala/Option;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean isValidByte();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #359                // Method toByteExact:()B
         4: pop
         5: iconst_1
         6: ireturn
         7: pop
         8: iconst_0
         9: ireturn
      Exception table:
         from    to  target type
             0     6     7   Class java/lang/ArithmeticException
      StackMapTable: number_of_entries = 1
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/ArithmeticException ]
      LineNumberTable:
        line 419: 0
        line 463: 5
        line 464: 8
        line 419: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/BigDecimal;

  public boolean isValidShort();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #363                // Method toShortExact:()S
         4: pop
         5: iconst_1
         6: ireturn
         7: pop
         8: iconst_0
         9: ireturn
      Exception table:
         from    to  target type
             0     6     7   Class java/lang/ArithmeticException
      StackMapTable: number_of_entries = 1
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/ArithmeticException ]
      LineNumberTable:
        line 420: 0
        line 463: 5
        line 464: 8
        line 420: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/BigDecimal;

  public boolean isValidChar();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #367                // Method isValidInt:()Z
         4: ifeq          27
         7: aload_0
         8: invokevirtual #370                // Method toIntExact:()I
        11: iconst_0
        12: if_icmplt     27
        15: aload_0
        16: invokevirtual #370                // Method toIntExact:()I
        19: ldc_w         #371                // int 65535
        22: if_icmpgt     27
        25: iconst_1
        26: ireturn
        27: iconst_0
        28: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 27 /* same */
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lscala/math/BigDecimal;

  public boolean isValidInt();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #370                // Method toIntExact:()I
         4: pop
         5: iconst_1
         6: ireturn
         7: pop
         8: iconst_0
         9: ireturn
      Exception table:
         from    to  target type
             0     6     7   Class java/lang/ArithmeticException
      StackMapTable: number_of_entries = 1
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/ArithmeticException ]
      LineNumberTable:
        line 422: 0
        line 463: 5
        line 464: 8
        line 422: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/BigDecimal;

  public boolean isValidLong();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #374                // Method toLongExact:()J
         4: pop2
         5: iconst_1
         6: ireturn
         7: pop
         8: iconst_0
         9: ireturn
      Exception table:
         from    to  target type
             0     6     7   Class java/lang/ArithmeticException
      StackMapTable: number_of_entries = 1
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/ArithmeticException ]
      LineNumberTable:
        line 423: 0
        line 463: 5
        line 464: 8
        line 423: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/BigDecimal;

  public boolean isDecimalDouble();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: invokeinterface #329,  1          // InterfaceMethod scala/math/ScalaNumericAnyConversions.doubleValue:()D
         6: dstore_1
         7: getstatic     #324                // Field scala/runtime/RichDouble$.MODULE$:Lscala/runtime/RichDouble$;
        10: pop
        11: dload_1
        12: invokestatic  #328                // Method java/lang/Double.isInfinite:(D)Z
        15: ifne          34
        18: aload_0
        19: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
        22: dload_1
        23: invokevirtual #62                 // Method scala/math/BigDecimal$.decimal:(D)Lscala/math/BigDecimal;
        26: invokevirtual #290                // Method equals:(Lscala/math/BigDecimal;)Z
        29: ifeq          34
        32: iconst_1
        33: ireturn
        34: iconst_0
        35: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [ double ]
      LineNumberTable:
        line 357: 0
        line 428: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lscala/math/BigDecimal;

  public boolean isDecimalFloat();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokeinterface #346,  1          // InterfaceMethod scala/math/ScalaNumericAnyConversions.floatValue:()F
         6: fstore_1
         7: getstatic     #340                // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
        10: pop
        11: fload_1
        12: invokestatic  #343                // Method java/lang/Float.isInfinite:(F)Z
        15: ifne          34
        18: aload_0
        19: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
        22: fload_1
        23: invokevirtual #116                // Method scala/math/BigDecimal$.decimal:(F)Lscala/math/BigDecimal;
        26: invokevirtual #290                // Method equals:(Lscala/math/BigDecimal;)Z
        29: ifeq          34
        32: iconst_1
        33: ireturn
        34: iconst_0
        35: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [ float ]
      LineNumberTable:
        line 357: 0
        line 434: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lscala/math/BigDecimal;

  public boolean isBinaryDouble();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=1
         0: aload_0
         1: invokeinterface #329,  1          // InterfaceMethod scala/math/ScalaNumericAnyConversions.doubleValue:()D
         6: dstore_1
         7: getstatic     #324                // Field scala/runtime/RichDouble$.MODULE$:Lscala/runtime/RichDouble$;
        10: pop
        11: dload_1
        12: invokestatic  #328                // Method java/lang/Double.isInfinite:(D)Z
        15: ifne          38
        18: aload_0
        19: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
        22: dload_1
        23: aload_0
        24: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        27: invokevirtual #105                // Method scala/math/BigDecimal$.binary:(DLjava/math/MathContext;)Lscala/math/BigDecimal;
        30: invokevirtual #290                // Method equals:(Lscala/math/BigDecimal;)Z
        33: ifeq          38
        36: iconst_1
        37: ireturn
        38: iconst_0
        39: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 38
          locals = [ double ]
      LineNumberTable:
        line 357: 0
        line 440: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lscala/math/BigDecimal;

  public boolean isBinaryFloat();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokeinterface #346,  1          // InterfaceMethod scala/math/ScalaNumericAnyConversions.floatValue:()F
         6: fstore_1
         7: getstatic     #340                // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
        10: pop
        11: fload_1
        12: invokestatic  #343                // Method java/lang/Float.isInfinite:(F)Z
        15: ifne          39
        18: aload_0
        19: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
        22: fload_1
        23: f2d
        24: aload_0
        25: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        28: invokevirtual #105                // Method scala/math/BigDecimal$.binary:(DLjava/math/MathContext;)Lscala/math/BigDecimal;
        31: invokevirtual #290                // Method equals:(Lscala/math/BigDecimal;)Z
        34: ifeq          39
        37: iconst_1
        38: ireturn
        39: iconst_0
        40: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 39
          locals = [ float ]
      LineNumberTable:
        line 357: 0
        line 446: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lscala/math/BigDecimal;

  public boolean isExactDouble();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: invokeinterface #329,  1          // InterfaceMethod scala/math/ScalaNumericAnyConversions.doubleValue:()D
         6: dstore_1
         7: getstatic     #324                // Field scala/runtime/RichDouble$.MODULE$:Lscala/runtime/RichDouble$;
        10: pop
        11: dload_1
        12: invokestatic  #328                // Method java/lang/Double.isInfinite:(D)Z
        15: ifne          34
        18: aload_0
        19: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
        22: dload_1
        23: invokevirtual #96                 // Method scala/math/BigDecimal$.exact:(D)Lscala/math/BigDecimal;
        26: invokevirtual #290                // Method equals:(Lscala/math/BigDecimal;)Z
        29: ifeq          34
        32: iconst_1
        33: ireturn
        34: iconst_0
        35: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [ double ]
      LineNumberTable:
        line 357: 0
        line 452: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lscala/math/BigDecimal;

  public boolean isExactFloat();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokeinterface #346,  1          // InterfaceMethod scala/math/ScalaNumericAnyConversions.floatValue:()F
         6: fstore_1
         7: getstatic     #340                // Field scala/runtime/RichFloat$.MODULE$:Lscala/runtime/RichFloat$;
        10: pop
        11: fload_1
        12: invokestatic  #343                // Method java/lang/Float.isInfinite:(F)Z
        15: ifne          35
        18: aload_0
        19: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
        22: fload_1
        23: f2d
        24: invokevirtual #96                 // Method scala/math/BigDecimal$.exact:(D)Lscala/math/BigDecimal;
        27: invokevirtual #290                // Method equals:(Lscala/math/BigDecimal;)Z
        30: ifeq          35
        33: iconst_1
        34: ireturn
        35: iconst_0
        36: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 35
          locals = [ float ]
      LineNumberTable:
        line 357: 0
        line 458: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lscala/math/BigDecimal;

  private boolean noArithmeticException(scala.Function0<scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Function0;)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokeinterface #390,  1          // InterfaceMethod scala/Function0.apply$mcV$sp:()V
         6: iconst_1
         7: ireturn
         8: pop
         9: iconst_0
        10: ireturn
      Exception table:
         from    to  target type
             0     7     8   Class java/lang/ArithmeticException
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/ArithmeticException ]
      LineNumberTable:
        line 463: 0
        line 464: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/math/BigDecimal;
            0      11     1  body   Lscala/Function0;
    Signature: #384                         // (Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Z
    MethodParameters:
      Name                           Flags
      body                           final

  public boolean isWhole();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #229                // Method scale:()I
         4: iconst_0
         5: if_icmple     22
         8: aload_0
         9: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        12: invokevirtual #257                // Method java/math/BigDecimal.stripTrailingZeros:()Ljava/math/BigDecimal;
        15: invokevirtual #263                // Method java/math/BigDecimal.scale:()I
        18: iconst_0
        19: if_icmpgt     24
        22: iconst_1
        23: ireturn
        24: iconst_0
        25: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 22 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 467: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/math/BigDecimal;

  public java.math.BigDecimal underlying();
    descriptor: ()Ljava/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: areturn
      LineNumberTable:
        line 469: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public boolean equals(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #396                // Method compare:(Lscala/math/BigDecimal;)I
         5: iconst_0
         6: if_icmpne     11
         9: iconst_1
        10: ireturn
        11: iconst_0
        12: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 474: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/BigDecimal;
            0      13     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public int compare(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: aload_1
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: invokevirtual #399                // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
        11: ireturn
      LineNumberTable:
        line 478: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/math/BigDecimal;
            0      12     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal $plus(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: aload_1
         9: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        12: aload_0
        13: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        16: invokevirtual #405                // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
        19: aload_0
        20: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        23: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        26: areturn
      LineNumberTable:
        line 482: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/math/BigDecimal;
            0      27     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal $minus(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: aload_1
         9: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        12: aload_0
        13: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        16: invokevirtual #413                // Method java/math/BigDecimal.subtract:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
        19: aload_0
        20: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        23: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        26: areturn
      LineNumberTable:
        line 486: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/math/BigDecimal;
            0      27     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal $times(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: aload_1
         9: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        12: aload_0
        13: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        16: invokevirtual #417                // Method java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
        19: aload_0
        20: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        23: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        26: areturn
      LineNumberTable:
        line 490: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/math/BigDecimal;
            0      27     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal $div(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: aload_1
         9: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        12: aload_0
        13: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        16: invokevirtual #421                // Method java/math/BigDecimal.divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
        19: aload_0
        20: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        23: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        26: areturn
      LineNumberTable:
        line 494: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/math/BigDecimal;
            0      27     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.Tuple2<scala.math.BigDecimal, scala.math.BigDecimal> $div$percent(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: aload_1
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: aload_0
         9: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        12: invokevirtual #428                // Method java/math/BigDecimal.divideAndRemainder:(Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;
        15: astore_2
        16: new           #430                // class scala/Tuple2
        19: dup
        20: new           #2                  // class scala/math/BigDecimal
        23: dup
        24: aload_2
        25: iconst_0
        26: aaload
        27: aload_0
        28: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        31: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        34: new           #2                  // class scala/math/BigDecimal
        37: dup
        38: aload_2
        39: iconst_1
        40: aaload
        41: aload_0
        42: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        45: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        48: invokespecial #433                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        51: areturn
      LineNumberTable:
        line 500: 0
        line 501: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      35     2    qr   [Ljava/math/BigDecimal;
            0      52     0  this   Lscala/math/BigDecimal;
            0      52     1  that   Lscala/math/BigDecimal;
    Signature: #424                         // (Lscala/math/BigDecimal;)Lscala/Tuple2<Lscala/math/BigDecimal;Lscala/math/BigDecimal;>;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal quot(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: aload_1
         9: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        12: aload_0
        13: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        16: invokevirtual #439                // Method java/math/BigDecimal.divideToIntegralValue:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
        19: aload_0
        20: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        23: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        26: areturn
      LineNumberTable:
        line 507: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/math/BigDecimal;
            0      27     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal min(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #396                // Method compare:(Lscala/math/BigDecimal;)I
         5: istore_2
         6: iload_2
         7: lookupswitch  { // 0
                 default: 16
            }
        16: iload_2
        17: iconst_0
        18: if_icmpgt     23
        21: aload_0
        22: areturn
        23: aload_1
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ int ]
        frame_type = 6 /* same */
      LineNumberTable:
        line 511: 0
        line 512: 16
        line 513: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/math/BigDecimal;
            0      25     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal max(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #396                // Method compare:(Lscala/math/BigDecimal;)I
         5: istore_2
         6: iload_2
         7: lookupswitch  { // 0
                 default: 16
            }
        16: iload_2
        17: iconst_0
        18: if_icmplt     23
        21: aload_0
        22: areturn
        23: aload_1
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ int ]
        frame_type = 6 /* same */
      LineNumberTable:
        line 518: 0
        line 519: 16
        line 520: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lscala/math/BigDecimal;
            0      25     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal remainder(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: aload_1
         9: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        12: aload_0
        13: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        16: invokevirtual #444                // Method java/math/BigDecimal.remainder:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
        19: aload_0
        20: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        23: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        26: areturn
      LineNumberTable:
        line 525: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/math/BigDecimal;
            0      27     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal $percent(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #447                // Method remainder:(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
         5: areturn
      LineNumberTable:
        line 529: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;
            0       6     1  that   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.math.BigDecimal pow(int);
    descriptor: (I)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: iload_1
         9: aload_0
        10: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        13: invokevirtual #452                // Method java/math/BigDecimal.pow:(ILjava/math/MathContext;)Ljava/math/BigDecimal;
        16: aload_0
        17: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        20: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        23: areturn
      LineNumberTable:
        line 533: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lscala/math/BigDecimal;
            0      24     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.math.BigDecimal unary_$minus();
    descriptor: ()Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: aload_0
         9: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        12: invokevirtual #458                // Method java/math/BigDecimal.negate:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
        15: aload_0
        16: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        19: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        22: areturn
      LineNumberTable:
        line 537: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lscala/math/BigDecimal;

  public scala.math.BigDecimal abs();
    descriptor: ()Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #462                // Method signum:()I
         4: iconst_0
         5: if_icmpge     13
         8: aload_0
         9: invokevirtual #464                // Method unary_$minus:()Lscala/math/BigDecimal;
        12: areturn
        13: aload_0
        14: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 13 /* same */
      LineNumberTable:
        line 541: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/math/BigDecimal;

  public int signum();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #465                // Method java/math/BigDecimal.signum:()I
         7: ireturn
      LineNumberTable:
        line 548: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public scala.math.BigDecimal sign();
    descriptor: ()Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         3: aload_0
         4: invokevirtual #462                // Method signum:()I
         7: invokevirtual #75                 // Method scala/math/BigDecimal$.apply:(I)Lscala/math/BigDecimal;
        10: areturn
      LineNumberTable:
        line 555: 0
        line 298: 7
        line 555: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/math/BigDecimal;

  public int precision();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #467                // Method java/math/BigDecimal.precision:()I
         7: ireturn
      LineNumberTable:
        line 559: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public scala.math.BigDecimal round(java.math.MathContext);
    descriptor: (Ljava/math/MathContext;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: aload_1
         5: invokevirtual #471                // Method java/math/BigDecimal.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
         8: astore_2
         9: aload_2
        10: aload_0
        11: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        14: if_acmpne     19
        17: aload_0
        18: areturn
        19: new           #2                  // class scala/math/BigDecimal
        22: dup
        23: aload_2
        24: aload_0
        25: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        28: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        31: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class java/math/BigDecimal ]
      LineNumberTable:
        line 565: 0
        line 566: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      22     2     r   Ljava/math/BigDecimal;
            0      32     0  this   Lscala/math/BigDecimal;
            0      32     1    mc   Ljava/math/MathContext;
    MethodParameters:
      Name                           Flags
      mc                             final

  public scala.math.BigDecimal rounded();
    descriptor: ()Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: aload_0
         5: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
         8: invokevirtual #471                // Method java/math/BigDecimal.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
        11: astore_1
        12: aload_1
        13: aload_0
        14: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        17: if_acmpne     22
        20: aload_0
        21: areturn
        22: new           #2                  // class scala/math/BigDecimal
        25: dup
        26: aload_1
        27: aload_0
        28: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        31: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        34: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class java/math/BigDecimal ]
      LineNumberTable:
        line 571: 0
        line 572: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      22     1     r   Ljava/math/BigDecimal;
            0      35     0  this   Lscala/math/BigDecimal;

  public int scale();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #263                // Method java/math/BigDecimal.scale:()I
         7: ireturn
      LineNumberTable:
        line 577: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public scala.math.BigDecimal ulp();
    descriptor: ()Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: invokevirtual #476                // Method java/math/BigDecimal.ulp:()Ljava/math/BigDecimal;
        11: aload_0
        12: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        15: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        18: areturn
      LineNumberTable:
        line 581: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/math/BigDecimal;

  public scala.math.BigDecimal apply(java.math.MathContext);
    descriptor: (Ljava/math/MathContext;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #2                  // class scala/math/BigDecimal
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: aload_1
         9: invokevirtual #471                // Method java/math/BigDecimal.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
        12: aload_1
        13: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        16: areturn
      LineNumberTable:
        line 585: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/math/BigDecimal;
            0      17     1    mc   Ljava/math/MathContext;
    MethodParameters:
      Name                           Flags
      mc                             final

  public scala.math.BigDecimal setScale(int);
    descriptor: (I)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #229                // Method scale:()I
         4: iload_1
         5: if_icmpne     10
         8: aload_0
         9: areturn
        10: new           #2                  // class scala/math/BigDecimal
        13: dup
        14: aload_0
        15: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        18: iload_1
        19: invokevirtual #479                // Method java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;
        22: aload_0
        23: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        26: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        29: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 10 /* same */
      LineNumberTable:
        line 591: 0
        line 592: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/math/BigDecimal;
            0      30     1 scale   I
    MethodParameters:
      Name                           Flags
      scale                          final

  public scala.math.BigDecimal setScale(int, scala.Enumeration$Value);
    descriptor: (ILscala/Enumeration$Value;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #229                // Method scale:()I
         4: iload_1
         5: if_icmpne     10
         8: aload_0
         9: areturn
        10: new           #2                  // class scala/math/BigDecimal
        13: dup
        14: aload_0
        15: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        18: iload_1
        19: aload_2
        20: invokevirtual #484                // Method scala/Enumeration$Value.id:()I
        23: invokestatic  #489                // Method java/math/RoundingMode.valueOf:(I)Ljava/math/RoundingMode;
        26: invokevirtual #492                // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
        29: aload_0
        30: invokevirtual #378                // Method mc:()Ljava/math/MathContext;
        33: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        36: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 10 /* same */
      LineNumberTable:
        line 595: 0
        line 596: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lscala/math/BigDecimal;
            0      37     1 scale   I
            0      37     2  mode   Lscala/Enumeration$Value;
    MethodParameters:
      Name                           Flags
      scale                          final
      mode                           final

  public byte byteValue();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #497                // Method intValue:()I
         4: i2b
         5: ireturn
      LineNumberTable:
        line 603: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;

  public short shortValue();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #497                // Method intValue:()I
         4: i2s
         5: ireturn
      LineNumberTable:
        line 610: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;

  public char charValue();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #497                // Method intValue:()I
         4: i2c
         5: ireturn
      LineNumberTable:
        line 617: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/math/BigDecimal;

  public int intValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #500                // Method java/math/BigDecimal.intValue:()I
         7: ireturn
      LineNumberTable:
        line 625: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public long longValue();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #503                // Method java/math/BigDecimal.longValue:()J
         7: lreturn
      LineNumberTable:
        line 633: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public float floatValue();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #504                // Method java/math/BigDecimal.floatValue:()F
         7: freturn
      LineNumberTable:
        line 640: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public double doubleValue();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #505                // Method java/math/BigDecimal.doubleValue:()D
         7: dreturn
      LineNumberTable:
        line 647: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public byte toByteExact();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #508                // Method java/math/BigDecimal.byteValueExact:()B
         7: ireturn
      LineNumberTable:
        line 654: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public short toShortExact();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #511                // Method java/math/BigDecimal.shortValueExact:()S
         7: ireturn
      LineNumberTable:
        line 661: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public int toIntExact();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #514                // Method java/math/BigDecimal.intValueExact:()I
         7: ireturn
      LineNumberTable:
        line 668: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public long toLongExact();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #517                // Method java/math/BigDecimal.longValueExact:()J
         7: lreturn
      LineNumberTable:
        line 675: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public scala.Function1<scala.math.BigDecimal, scala.collection.immutable.NumericRange$Exclusive<scala.math.BigDecimal>> until(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #542,  0            // InvokeDynamic #0:apply:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/Function1;
         7: areturn
      LineNumberTable:
        line 691: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;
            0       8     1   end   Lscala/math/BigDecimal;
    Signature: #520                         // (Lscala/math/BigDecimal;)Lscala/Function1<Lscala/math/BigDecimal;Lscala/collection/immutable/NumericRange$Exclusive<Lscala/math/BigDecimal;>;>;
    MethodParameters:
      Name                           Flags
      end                            final

  public scala.collection.immutable.NumericRange$Exclusive<scala.math.BigDecimal> until(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #548                // Field scala/collection/immutable/Range$BigDecimal$.MODULE$:Lscala/collection/immutable/Range$BigDecimal$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #550                // Method scala/collection/immutable/Range$BigDecimal$.apply:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
         9: areturn
      LineNumberTable:
        line 694: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/BigDecimal;
            0      10     1   end   Lscala/math/BigDecimal;
            0      10     2  step   Lscala/math/BigDecimal;
    Signature: #544                         // (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive<Lscala/math/BigDecimal;>;
    MethodParameters:
      Name                           Flags
      end                            final
      step                           final

  public scala.Function1<scala.math.BigDecimal, scala.collection.immutable.NumericRange$Inclusive<scala.math.BigDecimal>> to(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #560,  0            // InvokeDynamic #1:apply:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/Function1;
         7: areturn
      LineNumberTable:
        line 698: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;
            0       8     1   end   Lscala/math/BigDecimal;
    Signature: #552                         // (Lscala/math/BigDecimal;)Lscala/Function1<Lscala/math/BigDecimal;Lscala/collection/immutable/NumericRange$Inclusive<Lscala/math/BigDecimal;>;>;
    MethodParameters:
      Name                           Flags
      end                            final

  public scala.collection.immutable.NumericRange$Inclusive<scala.math.BigDecimal> to(scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #548                // Field scala/collection/immutable/Range$BigDecimal$.MODULE$:Lscala/collection/immutable/Range$BigDecimal$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #565                // Method scala/collection/immutable/Range$BigDecimal$.inclusive:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
         9: areturn
      LineNumberTable:
        line 701: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/math/BigDecimal;
            0      10     1   end   Lscala/math/BigDecimal;
            0      10     2  step   Lscala/math/BigDecimal;
    Signature: #562                         // (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive<Lscala/math/BigDecimal;>;
    MethodParameters:
      Name                           Flags
      end                            final
      step                           final

  public scala.math.BigInt toBigInt();
    descriptor: ()Lscala/math/BigInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #235                // class scala/math/BigInt
         3: dup
         4: aload_0
         5: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         8: invokevirtual #271                // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
        11: invokespecial #568                // Method scala/math/BigInt."<init>":(Ljava/math/BigInteger;)V
        14: areturn
      LineNumberTable:
        line 705: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/math/BigDecimal;

  public scala.Option<scala.math.BigInt> toBigIntExact();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #223                // Method isWhole:()Z
         4: ifeq          34
         7: new           #571                // class scala/Some
        10: dup
        11: new           #235                // class scala/math/BigInt
        14: dup
        15: aload_0
        16: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
        19: invokevirtual #574                // Method java/math/BigDecimal.toBigIntegerExact:()Ljava/math/BigInteger;
        22: invokespecial #568                // Method scala/math/BigInt."<init>":(Ljava/math/BigInteger;)V
        25: invokespecial #577                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        28: areturn
        29: pop
        30: getstatic     #582                // Field scala/None$.MODULE$:Lscala/None$;
        33: areturn
        34: getstatic     #582                // Field scala/None$.MODULE$:Lscala/None$;
        37: areturn
      Exception table:
         from    to  target type
             7    28    29   Class java/lang/ArithmeticException
      StackMapTable: number_of_entries = 2
        frame_type = 93 /* same_locals_1_stack_item */
          stack = [ class java/lang/ArithmeticException ]
        frame_type = 4 /* same */
      LineNumberTable:
        line 711: 0
        line 712: 7
        line 713: 30
        line 715: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Lscala/math/BigDecimal;
    Signature: #569                         // ()Lscala/Option<Lscala/math/BigInt;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #252                // Method bigDecimal:()Ljava/math/BigDecimal;
         4: invokevirtual #586                // Method java/math/BigDecimal.toString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 719: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/math/BigDecimal;

  public int compare(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/math/BigDecimal
         5: invokevirtual #396                // Method compare:(Lscala/math/BigDecimal;)I
         8: ireturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/math/BigDecimal;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Object underlying();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #588                // Method underlying:()Ljava/math/BigDecimal;
         4: areturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/BigDecimal;

  public static final boolean $anonfun$equals$1(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #311                // Method scala/math/BigInt.equals:(Lscala/math/BigInt;)Z
         5: ireturn
      LineNumberTable:
        line 406: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  x3$1   Lscala/math/BigInt;
            0       6     1   x$1   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x3$1                           final
      x$1                            final

  public static final void $anonfun$isValidByte$1(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #359                // Method toByteExact:()B
         4: pop
         5: return
      LineNumberTable:
        line 419: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final void $anonfun$isValidShort$1(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #363                // Method toShortExact:()S
         4: pop
         5: return
      LineNumberTable:
        line 420: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final void $anonfun$isValidInt$1(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #370                // Method toIntExact:()I
         4: pop
         5: return
      LineNumberTable:
        line 422: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final void $anonfun$isValidLong$1(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #374                // Method toLongExact:()J
         4: pop2
         5: return
      LineNumberTable:
        line 423: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final scala.collection.immutable.NumericRange$Exclusive $anonfun$until$1(scala.math.BigDecimal, scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #601                // Method until:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
         6: areturn
      LineNumberTable:
        line 691: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/BigDecimal;
            0       7     1 end$1   Lscala/math/BigDecimal;
            0       7     2   x$2   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      end$1                          final
      x$2                            final

  public static final scala.collection.immutable.NumericRange$Inclusive $anonfun$to$1(scala.math.BigDecimal, scala.math.BigDecimal, scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #605                // Method to:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
         6: areturn
      LineNumberTable:
        line 698: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/math/BigDecimal;
            0       7     1 end$2   Lscala/math/BigDecimal;
            0       7     2   x$3   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      end$2                          final
      x$3                            final

  public scala.math.BigDecimal(java.math.BigDecimal, java.math.MathContext);
    descriptor: (Ljava/math/BigDecimal;Ljava/math/MathContext;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #210                // Field bigDecimal:Ljava/math/BigDecimal;
         5: aload_0
         6: aload_2
         7: putfield      #212                // Field mc:Ljava/math/MathContext;
        10: aload_0
        11: invokespecial #607                // Method scala/math/ScalaNumber."<init>":()V
        14: aload_1
        15: ifnonnull     29
        18: new           #609                // class java/lang/IllegalArgumentException
        21: dup
        22: ldc_w         #611                // String null value for BigDecimal
        25: invokespecial #614                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        28: athrow
        29: aload_2
        30: ifnonnull     44
        33: new           #609                // class java/lang/IllegalArgumentException
        36: dup
        37: ldc_w         #616                // String null MathContext for BigDecimal
        40: invokespecial #614                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        43: athrow
        44: aload_0
        45: ldc_w         #284                // int 1565550863
        48: putfield      #214                // Field computedHashCode:I
        51: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class scala/math/BigDecimal, class java/math/BigDecimal, class java/math/MathContext ]
          stack = []
        frame_type = 14 /* same */
      LineNumberTable:
        line 357: 0
        line 358: 10
        line 363: 14
        line 364: 29
        line 373: 44
        line 357: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lscala/math/BigDecimal;
            0      52     1 bigDecimal   Ljava/math/BigDecimal;
            0      52     2    mc   Ljava/math/MathContext;
    MethodParameters:
      Name                           Flags
      bigDecimal                     final
      mc                             final

  public scala.math.BigDecimal(java.math.BigDecimal);
    descriptor: (Ljava/math/BigDecimal;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #54                 // Field scala/math/BigDecimal$.MODULE$:Lscala/math/BigDecimal$;
         5: invokevirtual #126                // Method scala/math/BigDecimal$.defaultMathContext:()Ljava/math/MathContext;
         8: invokespecial #409                // Method "<init>":(Ljava/math/BigDecimal;Ljava/math/MathContext;)V
        11: return
      LineNumberTable:
        line 359: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/math/BigDecimal;
            0      12     1 bigDecimal   Ljava/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      bigDecimal                     final

  public static final java.lang.Object $anonfun$equals$1$adapted(scala.math.BigInt, scala.math.BigInt);
    descriptor: (Lscala/math/BigInt;Lscala/math/BigInt;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #623                // Method $anonfun$equals$1:(Lscala/math/BigInt;Lscala/math/BigInt;)Z
         5: invokestatic  #627                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 406: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x3$1   Lscala/math/BigInt;
            0       9     1   x$1   Lscala/math/BigInt;
    MethodParameters:
      Name                           Flags
      x3$1                           final
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #639,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #18= #15 of #17;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public abstract #23= #20 of #22;        // Value=class scala/Enumeration$Value of class scala/Enumeration
  public static #28= #25 of #27;          // Exclusive=class scala/collection/immutable/NumericRange$Exclusive of class scala/collection/immutable/NumericRange
  public static #31= #30 of #27;          // Inclusive=class scala/collection/immutable/NumericRange$Inclusive of class scala/collection/immutable/NumericRange
  public static #36= #33 of #35;          // BigDecimal$=class scala/collection/immutable/Range$BigDecimal$ of class scala/collection/immutable/Range
  public static #39= #38 of #2;           // RoundingMode$=class scala/math/BigDecimal$RoundingMode$ of class scala/math/BigDecimal
Signature: #3                           // Lscala/math/ScalaNumber;Lscala/math/ScalaNumericConversions;Lscala/math/Ordered<Lscala/math/BigDecimal;>;
SourceFile: "BigDecimal.scala"
RuntimeVisibleAnnotations:
  0: #11(#12=s#13)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0011\u0005v\u0001CA\u0011\u0003GA\t!!\f\u0007\u0011\u0005E\u00121\u0005E\u0001\u0003gAq!!\u0014\u0002\t\u0003\ty\u0005C\u0005\u0002R\u0005\u0011\r\u0011\"\u0004\u0002T!A\u0011\u0011L\u0001!\u0002\u001b\t)\u0006C\u0005\u0002\\\u0005\u0011\r\u0011\"\u0004\u0002^!A\u00111M\u0001!\u0002\u001b\ty\u0006C\u0005\u0002f\u0005\u0011\r\u0011\"\u0004\u0002h!A\u0011QN\u0001!\u0002\u001b\tI\u0007\u0003\u0005\u0002p\u0005\u0001\u000b\u0011BA9\u0011!\t9(\u0001Q\u0001\n\u0005E\u0004\"CA=\u0003\t\u0007I\u0011AA>\u0011!\t9)\u0001Q\u0001\n\u0005u\u0004BCAE\u0003!\u0015\r\u0015\"\u0003\u0002\f\u001e9!qV\u0001\t\u0002\tEfa\u0002B[\u0003!\u0005!q\u0017\u0005\b\u0003\u001bzA\u0011\u0001B`\u000b\u0019\u0011)l\u0004\u0001\u0003B\"I!\u0011Z\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005\u001b|\u0001\u0015!\u0003\u0003B\"I!qZ\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005#|\u0001\u0015!\u0003\u0003B\"I!1[\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005+|\u0001\u0015!\u0003\u0003B\"I!q[\bC\u0002\u0013\u0005!1\u001a\u0005\t\u00053|\u0001\u0015!\u0003\u0003B\"I!1\\\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005;|\u0001\u0015!\u0003\u0003B\"I!q\\\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005C|\u0001\u0015!\u0003\u0003B\"I!1]\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005K|\u0001\u0015!\u0003\u0003B\"I!q]\bC\u0002\u0013\u0005!1\u001a\u0005\t\u0005S|\u0001\u0015!\u0003\u0003B\"I!1^\b\u0002\u0002\u0013%!Q\u001e\u0005\b\u0007\u007f\u000bA\u0011ABa\u0011\u001d\u0019y,\u0001C\u0001\u0007\u0013Dqaa0\u0002\t\u0003\u0019i\rC\u0004\u0004@\u0006!\ta!6\t\u000f\r}\u0016\u0001\"\u0001\u0004Z\"91qX\u0001\u0005\u0002\r\u0005\bbBB`\u0003\u0011\u00051Q\u001d\u0005\b\u0007[\fA\u0011ABx\u0011\u001d\u0019i/\u0001C\u0001\u0007kDqa!?\u0002\t\u0003\u0019Y\u0010C\u0004\u0004z\u0006!\t\u0001\"\u0001\t\u000f\re\u0018\u0001\"\u0001\u0005\u0006!91\u0011`\u0001\u0005\u0002\u0011-\u0001bBB}\u0003\u0011\u0005Aq\u0002\u0005\b\u0007s\fA\u0011\u0001C\u000b\u0011\u001d!i\"\u0001C\u0001\t?Aq\u0001\"\b\u0002\t\u0003!\u0019\u0003C\u0004\u0003\u0016\u0006!\t\u0001\"\u000b\t\u000f\tU\u0015\u0001\"\u0001\u00050!9!QS\u0001\u0005\u0002\u0011U\u0002b\u0002BK\u0003\u0011\u0005A\u0011\b\u0005\b\u0005+\u000bA\u0011\u0001C \u0011\u001d\u0011)*\u0001C\u0001\t\u000fBqA!&\u0002\t\u0003!y\u0005C\u0004\u0003\u0016\u0006!\t\u0001b\u0015\t\u000f\tU\u0015\u0001\"\u0001\u0005Z!9!QS\u0001\u0005\u0002\u0011u\u0003b\u0002BK\u0003\u0011\u0005A1\r\u0005\b\u0005+\u000bA\u0011\u0001C4\u0011\u001d\u0011)*\u0001C\u0001\t[BqA!&\u0002\t\u0003!\t\bC\u0004\u0003\u0016\u0006!\t\u0001b\u001e\t\u000f\tU\u0015\u0001\"\u0001\u0005~!9!QS\u0001\u0005\u0002\u0011\u0015\u0005b\u0002CE\u0003\u0011\rA1\u0012\u0005\b\t\u001f\u000bA1\u0001CI\u0011\u001d!)*\u0001C\u0002\t/Cq\u0001b\'\u0002\t\u0007!i\nC\u0005\u0003l\u0006\t\t\u0011\"\u0003\u0003n\u001a9\u0011\u0011GA\u0012\u0005\u0005U\u0005BCA[\u0015\n\u0015\r\u0011\"\u0001\u00028\"Q\u0011Q\u0018&\u0003\u0002\u0003\u0006I!!/\t\u0015\u0005}&J!b\u0001\n\u0003\tY\b\u0003\u0006\u0002B*\u0013\t\u0011)A\u0005\u0003{Bq!!\u0014K\t\u0003\t\u0019\rC\u0004\u0002N)#\t!!3\t\u0013\u00055\'\n1A\u0005\u000e\u0005=\u0007\"CAi\u0015\u0002\u0007IQBAj\u0011!\tyN\u0013Q!\u000e\u0005E\u0004bBAq\u0015\u00125\u00111\u001d\u0005\b\u0003KTE\u0011IAt\u0011\u001d\tIO\u0013C!\u0003WDq!!@K\t\u0003\ny\u0010C\u0004\u0003\u0002)#\t%a@\t\u000f\t\r!\n\"\u0011\u0002\u0000\"9!Q\u0001&\u0005B\u0005}\bb\u0002B\u0004\u0015\u0012\u0005\u0011q \u0005\b\u0005\u0013QE\u0011AA\u0000\u0011\u001d\u0011YA\u0013C\u0001\u0003\u007fDqA!\u0004K\t\u0003\ty\u0010C\u0004\u0003\u0010)#\t!a@\t\u000f\tE!\n\"\u0001\u0002\u0000\"9!1\u0003&\u0005\u0002\u0005}\bb\u0002B\u000b\u0015\u0012%!q\u0003\u0005\b\u0005GQE\u0011AA\u0000\u0011\u001d\u0011)C\u0013C\u0001\u0005OAq!!;K\t\u0003\u0011I\u0003C\u0004\u0003.)#\tAa\f\t\u000f\tM\"\n\"\u0001\u00036!9!\u0011\b&\u0005\u0002\tm\u0002b\u0002B \u0015\u0012\u0005!\u0011\t\u0005\b\u0005\u000bRE\u0011\u0001B$\u0011\u001d\u0011YE\u0013C\u0001\u0005\u001bBqAa\u0016K\t\u0003\u0011I\u0006C\u0004\u0003^)#\tAa\u0018\t\u000f\t\r$\n\"\u0001\u0003f!9!\u0011\u000e&\u0005\u0002\t-\u0004b\u0002B8\u0015\u0012\u0005!\u0011\u000f\u0005\b\u0005kRE\u0011\u0001B<\u0011\u001d\u0011iH\u0013C\u0001\u0005\u007fBqA!!K\t\u0003\u0011y\bC\u0004\u0003\u0004*#\t!a4\t\u000f\t\u0015%\n\"\u0001\u0003\u0000!9!q\u0011&\u0005\u0002\u0005=\u0007b\u0002BE\u0015\u0012\u0005!1\u0012\u0005\b\u0005\u001fSE\u0011\u0001B@\u0011\u001d\u0011\tJ\u0013C\u0001\u0003\u001fDqAa%K\t\u0003\u0011y\bC\u0004\u0003\u0016*#\tAa&\t\u000f\tm%\n\"\u0001\u0003\u001e\"9!1\u0014&\u0005\u0002\t\u0005\u0006b\u0002B~\u0015\u0012\u0005#Q \u0005\b\u0007\u000bQE\u0011IB\u0004\u0011\u001d\u0019yA\u0013C\u0001\u0007#Aqa!\u0007K\t\u0003\ty\rC\u0004\u0004\u001c)#\ta!\b\t\u000f\r\u0015\"\n\"\u0001\u0004(!91q\u0006&\u0005\u0002\rE\u0002bBB\u001d\u0015\u0012\u0005!Q \u0005\b\u0007wQE\u0011AB\u0004\u0011\u001d\u0019iD\u0013C\u0001\u0003\u001fDqaa\u0010K\t\u0003\u0019i\u0002C\u0004\u0004B)#\taa\u0011\t\u000f\r\u0005#\n\"\u0001\u0004p!91q\u000f&\u0005\u0002\re\u0004bBB<\u0015\u0012\u00051Q\u0011\u0005\b\u0007#SE\u0011ABJ\u0011\u001d\u0019YJ\u0013C\u0001\u0007;Cqa!*K\t\u0003\u001a9+\u0001\u0006CS\u001e$UmY5nC2TA!!\n\u0002(\u0005!Q.\u0019;i\u0015\t\tI#A\u0003tG\u0006d\u0017m\u0001\u0001\u0011\u0007\u0005=\u0012!\u0004\u0002\u0002$\tQ!)[4EK\u000eLW.\u00197\u0014\u000b\u0005\t)$!\u0010\u0011\t\u0005]\u0012\u0011H\u0007\u0003\u0003OIA!a\u000f\u0002(\t1\u0011I\\=SK\u001a\u0004B!a\u0010\u0002J5\u0011\u0011\u0011\t\u0006\u0005\u0003\u0007\n)%\u0001\u0002j_*\u0011\u0011qI\u0001\u0005U\u00064\u0018-\u0003\u0003\u0002L\u0005\u0005#\u0001D*fe&\fG.\u001b>bE2,\u0017A\u0002\u001fj]&$h\b\u0006\u0002\u0002.\u0005\u0001R.\u0019=j[Vl\u0007*Y:i\'\u000e\fG.Z\u000b\u0003\u0003+z!!a\u0016\u001e\u0005M1\u0015!E7bq&lW/\u001c%bg\"\u001c6-\u00197fA\u0005\u0019\u0002.Y:i\u0007>$WMT8u\u0007>l\u0007/\u001e;fIV\u0011\u0011qL\b\u0003\u0003CjB!\u0018)j\u001f\u0005!\u0002.Y:i\u0007>$WMT8u\u0007>l\u0007/\u001e;fI\u0002\n1\u0002Z3dSJ\u0012\u0017N\\1ssV\u0011\u0011\u0011N\b\u0003\u0003W\u0002\u0003\u0002\u0011\u0006\u0014 &I8U]\u0001\rI\u0016\u001c\u0017N\r2j]\u0006\u0014\u0018\u0010I\u0001\n[&t7)Y2iK\u0012\u0004B!a\u000e\u0002t%!\u0011QOA\u0014\u0005\rIe\u000e^\u0001\n[\u0006D8)Y2iK\u0012\f!\u0003Z3gCVdG/T1uQ\u000e{g\u000e^3yiV\u0011\u0011Q\u0010\t\u0005\u0003\u007f\n\u0019)\u0004\u0002\u0002\u0002*!\u0011QEA#\u0013\u0011\t))!!\u0003\u00175\u000bG\u000f[\"p]R,\u0007\u0010^\u0001\u0014I\u00164\u0017-\u001e7u\u001b\u0006$\bnQ8oi\u0016DH\u000fI\u0001\u0006G\u0006\u001c\u0007.Z\u000b\u0003\u0003\u001b\u0003b!a\u000e\u0002\u0010\u0006M\u0015\u0002BAI\u0003O\u0011Q!\u0011:sCf\u00042!a\fK\'%Q\u0015qSAO\u0003G\u000by\u000b\u0005\u0003\u00020\u0005e\u0015\u0002BAN\u0003G\u00111bU2bY\u0006tU/\u001c2feB!\u0011qFAP\u0013\u0011\t\t+a\t\u0003/M\u001b\u0017\r\\1Ok6,\'/[2D_:4XM]:j_:\u001c\b\u0003BAS\u0003WsA!a\u000e\u0002(&!\u0011\u0011VA\u0014\u0003\u001d\u0001\u0018mY6bO\u0016LA!a\u0013\u0002.*!\u0011\u0011VA\u0014!\u0019\ty#!-\u0002\u0014&!\u00111WA\u0012\u0005\u001dy%\u000fZ3sK\u0012\f!BY5h\t\u0016\u001c\u0017.\\1m+\t\tI\f\u0005\u0003\u0002\u0000\u0005m\u0016\u0002BA\u0019\u0003\u0003\u000b1BY5h\t\u0016\u001c\u0017.\\1mA\u0005\u0011QnY\u0001\u0004[\u000e\u0004CCBAJ\u0003\u000b\f9\rC\u0004\u00026>\u0003\r!!/\t\u000f\u0005}v\n1\u0001\u0002~Q!\u00111SAf\u0011\u001d\t)\f\u0015a\u0001\u0003s\u000b\u0001cY8naV$X\r\u001a%bg\"\u001cu\u000eZ3\u0016\u0005\u0005E\u0014\u0001F2p[B,H/\u001a3ICND7i\u001c3f?\u0012*\u0017\u000f\u0006\u0003\u0002V\u0006m\u0007\u0003BA\u001c\u0003/LA!!7\u0002(\t!QK\\5u\u0011%\tiNUA\u0001\u0002\u0004\t\t(A\u0002yIE\n\u0011cY8naV$X\r\u001a%bg\"\u001cu\u000eZ3!\u0003=\u0019w.\u001c9vi\u0016D\u0015m\u001d5D_\u0012,GCAAk\u0003!A\u0017m\u001d5D_\u0012,GCAA9\u0003\u0019)\u0017/^1mgR!\u0011Q^Az!\u0011\t9$a<\n\t\u0005E\u0018q\u0005\u0002\b\u0005>|G.Z1o\u0011\u001d\t)P\u0016a\u0001\u0003o\fA\u0001\u001e5biB!\u0011qGA}\u0013\u0011\tY0a\n\u0003\u0007\u0005s\u00170A\u0006jgZ\u000bG.\u001b3CsR,WCAAw\u00031I7OV1mS\u0012\u001c\u0006n\u001c:u\u0003-I7OV1mS\u0012\u001c\u0005.\u0019:\u0002\u0015%\u001ch+\u00197jI&sG/A\u0006jgZ\u000bG.\u001b3M_:<\u0017aD5t\t\u0016\u001c\u0017.\\1m\t>,(\r\\3\u0002\u001d%\u001cH)Z2j[\u0006dg\t\\8bi\u0006q\u0011n\u001d\"j]\u0006\u0014\u0018\u0010R8vE2,\u0017!D5t\u0005&t\u0017M]=GY>\fG/A\u0007jg\u0016C\u0018m\u0019;E_V\u0014G.Z\u0001\rSN,\u00050Y2u\r2|\u0017\r^\u0001\u0016]>\f%/\u001b;i[\u0016$\u0018nY#yG\u0016\u0004H/[8o)\u0011\tiO!\u0007\t\u0011\tm!\r\"a\u0001\u0005;\tAAY8esB1\u0011q\u0007B\u0010\u0003+LAA!\t\u0002(\tAAHY=oC6,g(A\u0004jg^Cw\u000e\\3\u0002\u0015UtG-\u001a:ms&tw\r\u0006\u0002\u0002:R!\u0011Q\u001eB\u0016\u0011\u001d\t)0\u001aa\u0001\u0003\'\u000bqaY8na\u0006\u0014X\r\u0006\u0003\u0002r\tE\u0002bBA{M\u0002\u0007\u00111S\u0001\u0006IAdWo\u001d\u000b\u0005\u0003\'\u00139\u0004C\u0004\u0002v\u001e\u0004\r!a%\u0002\r\u0011j\u0017N\\;t)\u0011\t\u0019J!\u0010\t\u000f\u0005U\b\u000e1\u0001\u0002\u0014\u00061A\u0005^5nKN$B!a%\u0003D!9\u0011Q_5A\u0002\u0005M\u0015\u0001\u0002\u0013eSZ$B!a%\u0003J!9\u0011Q\u001f6A\u0002\u0005M\u0015\u0001\u0004\u0013eSZ$\u0003/\u001a:dK:$H\u0003\u0002B(\u0005+\u0002\u0002\"a\u000e\u0003R\u0005M\u00151S\u0005\u0005\u0005\'\n9C\u0001\u0004UkBdWM\r\u0005\b\u0003k\\\u0007\u0019AAJ\u0003\u0011\tXo\u001c;\u0015\t\u0005M%1\f\u0005\b\u0003kd\u0007\u0019AAJ\u0003\ri\u0017N\u001c\u000b\u0005\u0003\'\u0013\t\u0007C\u0004\u0002v6\u0004\r!a%\u0002\u00075\f\u0007\u0010\u0006\u0003\u0002\u0014\n\u001d\u0004bBA{]\u0002\u0007\u00111S\u0001\ne\u0016l\u0017-\u001b8eKJ$B!a%\u0003n!9\u0011Q_8A\u0002\u0005M\u0015\u0001\u0003\u0013qKJ\u001cWM\u001c;\u0015\t\u0005M%1\u000f\u0005\b\u0003k\u0004\b\u0019AAJ\u0003\r\u0001xn\u001e\u000b\u0005\u0003\'\u0013I\bC\u0004\u0003|E\u0004\r!!\u001d\u0002\u00039\fA\"\u001e8bef|F%\\5okN,\"!a%\u0002\u0007\u0005\u00147/\u0001\u0004tS\u001etW/\\\u0001\u0005g&<g.A\u0005qe\u0016\u001c\u0017n]5p]\u0006)!o\\;oIR!\u00111\u0013BG\u0011\u001d\tyl\u001ea\u0001\u0003{\nqA]8v]\u0012,G-A\u0003tG\u0006dW-A\u0002vYB\fQ!\u00199qYf$B!a%\u0003\u001a\"9\u0011qX>A\u0002\u0005u\u0014\u0001C:fiN\u001b\u0017\r\\3\u0015\t\u0005M%q\u0014\u0005\b\u0005#c\b\u0019AA9)\u0019\t\u0019Ja)\u0003&\"9!\u0011S?A\u0002\u0005E\u0004b\u0002BT{\u0002\u0007!\u0011V\u0001\u0005[>$W\rE\u0002\u0003,Fq1A!,\u000f\u001d\r\ty\u0003A\u0001\r%>,h\u000eZ5oO6{G-\u001a\t\u0004\u0005g{Q\"A\u0001\u0003\u0019I{WO\u001c3j]\u001elu\u000eZ3\u0014\u0007=\u0011I\f\u0005\u0003\u00028\tm\u0016\u0002\u0002B_\u0003O\u00111\"\u00128v[\u0016\u0014\u0018\r^5p]R\u0011!\u0011\u0017\t\u0005\u0005\u0007\u0014)-D\u0001\u0010\u0013\u0011\u00119Ma/\u0003\u000bY\u000bG.^3\u0002\u0005U\u0003VC\u0001Ba\u0003\r)\u0006\u000bI\u0001\u0005\t>;f*A\u0003E\u001f^s\u0005%A\u0004D\u000b&c\u0015JT$\u0002\u0011\r+\u0015\nT%O\u000f\u0002\nQA\u0012\'P\u001fJ\u000baA\u0012\'P\u001fJ\u0003\u0013a\u0002%B\u0019\u001a{V\u000bU\u0001\t\u0011\u0006ceiX+QA\u0005I\u0001*\u0011\'G?\u0012{uKT\u0001\u000b\u0011\u0006cei\u0018#P/:\u0003\u0013!\u0003%B\u0019\u001a{VIV#O\u0003)A\u0015\t\u0014$`\u000bZ+e\nI\u0001\f+:sUiQ#T\'\u0006\u0013\u0016,\u0001\u0007V\u001d:+5)R*T\u0003JK\u0006%\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0003pB!!\u0011\u001fB|\u001b\t\u0011\u0019P\u0003\u0003\u0003v\u0006\u0015\u0013\u0001\u00027b]\u001eLAA!?\u0003t\n1qJ\u00196fGR\f\u0011BY=uKZ\u000bG.^3\u0016\u0005\t}\b\u0003BA\u001c\u0007\u0003IAaa\u0001\u0002(\t!!)\u001f;f\u0003)\u0019\bn\u001c:u-\u0006dW/Z\u000b\u0003\u0007\u0013\u0001B!a\u000e\u0004\f%!1QBA\u0014\u0005\u0015\u0019\u0006n\u001c:u\u0003%\u0019\u0007.\u0019:WC2,X-\u0006\u0002\u0004\u0014A!\u0011qGB\u000b\u0013\u0011\u00199\"a\n\u0003\t\rC\u0017M]\u0001\tS:$h+\u00197vK\u0006IAn\u001c8h-\u0006dW/Z\u000b\u0003\u0007?\u0001B!a\u000e\u0004\"%!11EA\u0014\u0005\u0011auN\\4\u0002\u0015\u0019dw.\u0019;WC2,X-\u0006\u0002\u0004*A!\u0011qGB\u0016\u0013\u0011\u0019i#a\n\u0003\u000b\u0019cw.\u0019;\u0002\u0017\u0011|WO\u00197f-\u0006dW/Z\u000b\u0003\u0007g\u0001B!a\u000e\u00046%!1qGA\u0014\u0005\u0019!u.\u001e2mK\u0006YAo\u001c\"zi\u0016,\u00050Y2u\u00031!xn\u00155peR,\u00050Y2u\u0003)!x.\u00138u\u000bb\f7\r^\u0001\fi>duN\\4Fq\u0006\u001cG/A\u0003v]RLG\u000e\u0006\u0003\u0004F\r-\u0004\u0003CB$\u0007\u001b\n\u0019ja\u0017\u000f\t\u0005\u00156\u0011J\u0005\u0005\u0007\u0017\ni+A\u0003SC:<W-\u0003\u0003\u0004P\rE#a\u0002)beRL\u0017\r\u001c\u0006\u0005\u0007\u0017\u001a\u0019F\u0003\u0003\u0004V\r]\u0013!C5n[V$\u0018M\u00197f\u0015\u0011\u0019I&a\n\u0002\u0015\r|G\u000e\\3di&|g\u000e\u0005\u0004\u0004^\r\u0015\u00141\u0013\b\u0005\u0007?\u001a\t\'\u0004\u0002\u0004T%!11MB*\u00031qU/\\3sS\u000e\u0014\u0016M\\4f\u0013\u0011\u00199g!\u001b\u0003\u0013\u0015C8\r\\;tSZ,\'\u0002BB2\u0007\'B\u0001b!\u001c\u0002\u0014\u0001\u0007\u00111S\u0001\u0004K:$GCBB.\u0007c\u001a\u0019\b\u0003\u0005\u0004n\u0005U\u0001\u0019AAJ\u0011!\u0019)(!\u0006A\u0002\u0005M\u0015\u0001B:uKB\f!\u0001^8\u0015\t\rm41\u0011\t\t\u0007\u000f\u001ai%a%\u0004~A11QLB@\u0003\'KAa!!\u0004j\tI\u0011J\\2mkNLg/\u001a\u0005\t\u0007[\n9\u00021\u0001\u0002\u0014R11qQBG\u0007\u001f\u0003ba!\u0018\u0004\u0000\r%\u0005\u0003BAS\u0007\u0017KA!!\r\u0002.\"A1QNA\r\u0001\u0004\t\u0019\n\u0003\u0005\u0004v\u0005e\u0001\u0019AAJ\u0003!!xNQ5h\u0013:$XCABK!\u0011\tyca&\n\t\re\u00151\u0005\u0002\u0007\u0005&<\u0017J\u001c;\u0002\u001bQ|\')[4J]R,\u00050Y2u+\t\u0019y\n\u0005\u0004\u00028\r\u00056QS\u0005\u0005\u0007G\u000b9C\u0001\u0004PaRLwN\\\u0001\ti>\u001cFO]5oOR\u00111\u0011\u0016\t\u0005\u0007W\u001bIL\u0004\u0003\u0004.\u000eU\u0006\u0003BBX\u0003Oi!a!-\u000b\t\rM\u00161F\u0001\u0007yI|w\u000e\u001e \n\t\r]\u0016qE\u0001\u0007!J,G-\u001a4\n\t\rm6Q\u0018\u0002\u0007\'R\u0014\u0018N\\4\u000b\t\r]\u0016qE\u0001\bI\u0016\u001c\u0017.\\1m)\u0019\t\u0019ja1\u0004H\"91QY\u0012A\u0002\rM\u0012!\u00013\t\u000f\u0005}6\u00051\u0001\u0002~Q!\u00111SBf\u0011\u001d\u0019)\r\na\u0001\u0007g!b!a%\u0004P\u000eM\u0007bBBiK\u0001\u00071\u0011F\u0001\u0002M\"9\u0011qX\u0013A\u0002\u0005uD\u0003BAJ\u0007/Dqa!5\'\u0001\u0004\u0019I\u0003\u0006\u0004\u0002\u0014\u000em7q\u001c\u0005\b\u0007;<\u0003\u0019AB\u0010\u0003\u0005a\u0007bBA`O\u0001\u0007\u0011Q\u0010\u000b\u0005\u0003\'\u001b\u0019\u000fC\u0004\u0004^\"\u0002\raa\b\u0015\r\u0005M5q]Bv\u0011\u001d\u0019I/\u000ba\u0001\u0003s\u000b!A\u00193\t\u000f\u0005}\u0016\u00061\u0001\u0002~\u00051!-\u001b8bef$b!a%\u0004r\u000eM\bbBBcU\u0001\u000711\u0007\u0005\b\u0003\u007fS\u0003\u0019AA?)\u0011\t\u0019ja>\t\u000f\r\u00157\u00061\u0001\u00044\u0005)Q\r_1diR!\u00111SB\u007f\u0011\u001d\u0019y\u0010\fa\u0001\u0003s\u000bAA]3qeR!\u00111\u0013C\u0002\u0011\u001d\u0019)-\fa\u0001\u0007g!B!a%\u0005\b!9A\u0011\u0002\u0018A\u0002\rU\u0015A\u00012j)\u0011\t\u0019\n\"\u0004\t\u000f\ruw\u00061\u0001\u0004 Q!\u00111\u0013C\t\u0011\u001d!\u0019\u0002\ra\u0001\u0007S\u000b\u0011a\u001d\u000b\u0005\u0003\'#9\u0002C\u0004\u0005\u001aE\u0002\r\u0001b\u0007\u0002\u0005\r\u001c\bCBA\u001c\u0003\u001f\u001b\u0019\"A\u0004wC2,Xm\u00144\u0015\t\u0005ME\u0011\u0005\u0005\b\u0007\u000b\u0014\u0004\u0019AB\u001a)\u0011\t\u0019\n\"\n\t\u000f\u0011\u001d2\u00071\u0001\u0004 \u0005\t\u0001\u0010\u0006\u0003\u0002\u0014\u0012-\u0002b\u0002C\u0017i\u0001\u0007\u0011\u0011O\u0001\u0002SR1\u00111\u0013C\u0019\tgAq\u0001\"\f6\u0001\u0004\t\t\bC\u0004\u0002@V\u0002\r!! \u0015\t\u0005MEq\u0007\u0005\b\u0007;4\u0004\u0019AB\u0010)\u0019\t\u0019\nb\u000f\u0005>!91Q\\\u001cA\u0002\r}\u0001bBA`o\u0001\u0007\u0011Q\u0010\u000b\u0007\u0003\'#\t\u0005\"\u0012\t\u000f\u0011\r\u0003\b1\u0001\u0004 \u0005YQO\\:dC2,GMV1m\u0011\u001d\u0011\t\n\u000fa\u0001\u0003c\"\u0002\"a%\u0005J\u0011-CQ\n\u0005\b\t\u0007J\u0004\u0019AB\u0010\u0011\u001d\u0011\t*\u000fa\u0001\u0003cBq!a0:\u0001\u0004\ti\b\u0006\u0003\u0002\u0014\u0012E\u0003bBBcu\u0001\u000711\u0007\u000b\u0007\u0003\'#)\u0006b\u0016\t\u000f\r\u00157\b1\u0001\u00044!9\u0011qX\u001eA\u0002\u0005uD\u0003BAJ\t7Bq\u0001b\n=\u0001\u0004!Y\u0002\u0006\u0004\u0002\u0014\u0012}C\u0011\r\u0005\b\tOi\u0004\u0019\u0001C\u000e\u0011\u001d\ty,\u0010a\u0001\u0003{\"B!a%\u0005f!9Aq\u0005 A\u0002\r%FCBAJ\tS\"Y\u0007C\u0004\u0005(}\u0002\ra!+\t\u000f\u0005}v\b1\u0001\u0002~Q!\u00111\u0013C8\u0011\u001d!9\u0003\u0011a\u0001\u0007+#b!a%\u0005t\u0011U\u0004b\u0002C\u0014\u0003\u0002\u00071Q\u0013\u0005\b\u0003\u007f\u000b\u0005\u0019AA?)\u0019\t\u0019\n\"\u001f\u0005|!9A1\t\"A\u0002\rU\u0005b\u0002BI\u0005\u0002\u0007\u0011\u0011\u000f\u000b\t\u0003\'#y\b\"!\u0005\u0004\"9A1I\"A\u0002\rU\u0005b\u0002BI\u0007\u0002\u0007\u0011\u0011\u000f\u0005\b\u0003\u007f\u001b\u0005\u0019AA?)\u0011\t\u0019\nb\"\t\u000f\r%H\t1\u0001\u0002:\u0006q\u0011N\u001c;3E&<G)Z2j[\u0006dG\u0003BAJ\t\u001bCq\u0001\"\fF\u0001\u0004\t\t(A\bm_:<\'GY5h\t\u0016\u001c\u0017.\\1m)\u0011\t\u0019\nb%\t\u000f\rug\t1\u0001\u0004 \u0005\tBm\\;cY\u0016\u0014$-[4EK\u000eLW.\u00197\u0015\t\u0005ME\u0011\u0014\u0005\b\u0007\u000b<\u0005\u0019AB\u001a\u0003eQ\u0017M^1CS\u001e$UmY5nC2\u0014$-[4EK\u000eLW.\u00197\u0015\t\u0005MEq\u0014\u0005\b\tOA\u0005\u0019AA]\u0001"
    )
BootstrapMethods:
  0: #539 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #523 (Ljava/lang/Object;)Ljava/lang/Object;
      #528 REF_invokeStatic scala/math/BigDecimal.$anonfun$until$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
      #530 (Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
      #531 5
      #532 1
      #530 (Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  1: #539 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #523 (Ljava/lang/Object;)Ljava/lang/Object;
      #557 REF_invokeStatic scala/math/BigDecimal.$anonfun$to$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
      #559 (Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
      #531 5
      #532 1
      #559 (Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
  2: #636 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #557 REF_invokeStatic scala/math/BigDecimal.$anonfun$to$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Inclusive;
      #528 REF_invokeStatic scala/math/BigDecimal.$anonfun$until$1:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Lscala/collection/immutable/NumericRange$Exclusive;
  ScalaInlineInfo: length = 0x1C6 (unknown attribute)
   01 01 00 5A 02 4D 02 4E 01 02 6C 02 6D 01 02 50
   02 51 01 02 54 02 51 01 02 55 02 51 01 02 53 02
   51 01 02 29 02 2A 01 02 0C 02 0D 01 01 A2 01 91
   01 01 A6 01 A7 01 00 89 00 80 01 00 91 00 80 01
   00 7F 00 80 01 00 8D 00 80 01 01 9A 01 91 01 01
   BD 01 91 01 01 90 01 91 01 01 9E 01 91 01 01 96
   02 6B 01 01 96 01 97 01 01 CB 01 C6 01 00 43 01
   D5 01 00 28 00 D0 01 01 EE 00 A4 01 01 F3 00 9C
   01 01 89 00 96 01 01 89 01 8A 01 00 95 00 96 01
   00 DA 00 DB 01 00 2C 00 B0 01 00 D7 00 D8 01 00
   F2 00 C2 01 01 1F 00 80 01 01 1F 01 20 01 01 58
   00 BC 01 00 EC 00 B0 01 01 EF 00 B0 01 01 78 00
   DD 01 01 7B 00 DD 01 00 EF 00 DD 01 01 77 00 DD
   01 01 7C 00 DD 01 01 7D 00 DD 01 01 62 00 DD 01
   01 6C 00 DD 01 01 6D 00 DD 01 01 5B 00 DD 01 01
   68 00 DD 01 00 DC 00 DD 01 01 F5 00 B6 01 01 B9
   01 91 01 00 2A 00 7C 01 01 B8 01 91 01 01 7E 01
   7F 01 01 C0 00 48 01 00 E0 00 B0 01 01 B4 01 91
   01 01 BA 01 91 01 01 D4 01 D5 01 01 D9 01 C6 01
   00 E3 00 B0 01 01 DD 00 48 01 01 DD 01 E0 01 01
   F2 00 AA 01 01 D2 01 C6 01 01 CC 00 B0 01 02 27
   02 07 01 02 27 02 31 01 00 E6 00 E7 01 01 28 01
   29 01 00 A3 00 A4 01 01 65 00 A4 01 00 9B 00 9C
   01 00 C1 00 C2 01 00 BB 00 BC 01 00 AF 00 B0 01
   01 70 00 B0 01 00 B5 00 B6 01 01 74 00 B6 01 00
   A9 00 AA 01 01 69 00 AA 01 02 47 02 48 01 01 DA
   01 C6 01 01 C5 01 C6 01 01 88 01 32 01 01 88 00
   D0 01 00 CB 00 80 01 00 C7 00 B0 01 02 06 02 07
   01 02 06 02 1F 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
