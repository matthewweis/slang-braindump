Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/os/read$bytes$.class
  Last modified May 29, 2022; size 7241 bytes
  SHA-256 checksum bc9636a42ab0da2671be1fea1c76a05de5fd27fa267837f3cdf8987821484f76
  Compiled from "ReadWriteOps.scala"
public class os.read$bytes$ extends java.lang.Object implements scala.Function1<os.ReadablePath, byte[]>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/read$bytes$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 32, attributes: 5
Constant pool:
    #1 = Utf8               os/read$bytes$
    #2 = Class              #1            // os/read$bytes$
    #3 = Utf8               Ljava/lang/Object;Lscala/Function1<Los/ReadablePath;[B>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Function1
    #7 = Class              #6            // scala/Function1
    #8 = Utf8               ReadWriteOps.scala
    #9 = Utf8               os/read
   #10 = Class              #9            // os/read
   #11 = Utf8               bytes$
   #12 = Utf8               MODULE$
   #13 = Utf8               Los/read$bytes$;
   #14 = Utf8               <clinit>
   #15 = Utf8               ()V
   #16 = Utf8               <init>
   #17 = NameAndType        #16:#15       // "<init>":()V
   #18 = Methodref          #2.#17        // os/read$bytes$."<init>":()V
   #19 = NameAndType        #12:#13       // MODULE$:Los/read$bytes$;
   #20 = Fieldref           #2.#19        // os/read$bytes$.MODULE$:Los/read$bytes$;
   #21 = Utf8               $init$
   #22 = Utf8               (Lscala/Function1;)V
   #23 = NameAndType        #21:#22       // $init$:(Lscala/Function1;)V
   #24 = InterfaceMethodref #7.#23        // scala/Function1.$init$:(Lscala/Function1;)V
   #25 = Utf8               apply$mcZD$sp
   #26 = Utf8               (D)Z
   #27 = Utf8               v1
   #28 = Utf8               apply$mcZD$sp$
   #29 = Utf8               (Lscala/Function1;D)Z
   #30 = NameAndType        #28:#29       // apply$mcZD$sp$:(Lscala/Function1;D)Z
   #31 = InterfaceMethodref #7.#30        // scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
   #32 = Utf8               this
   #33 = Utf8               D
   #34 = Utf8               apply$mcDD$sp
   #35 = Utf8               (D)D
   #36 = Utf8               apply$mcDD$sp$
   #37 = Utf8               (Lscala/Function1;D)D
   #38 = NameAndType        #36:#37       // apply$mcDD$sp$:(Lscala/Function1;D)D
   #39 = InterfaceMethodref #7.#38        // scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
   #40 = Utf8               apply$mcFD$sp
   #41 = Utf8               (D)F
   #42 = Utf8               apply$mcFD$sp$
   #43 = Utf8               (Lscala/Function1;D)F
   #44 = NameAndType        #42:#43       // apply$mcFD$sp$:(Lscala/Function1;D)F
   #45 = InterfaceMethodref #7.#44        // scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
   #46 = Utf8               apply$mcID$sp
   #47 = Utf8               (D)I
   #48 = Utf8               apply$mcID$sp$
   #49 = Utf8               (Lscala/Function1;D)I
   #50 = NameAndType        #48:#49       // apply$mcID$sp$:(Lscala/Function1;D)I
   #51 = InterfaceMethodref #7.#50        // scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
   #52 = Utf8               apply$mcJD$sp
   #53 = Utf8               (D)J
   #54 = Utf8               apply$mcJD$sp$
   #55 = Utf8               (Lscala/Function1;D)J
   #56 = NameAndType        #54:#55       // apply$mcJD$sp$:(Lscala/Function1;D)J
   #57 = InterfaceMethodref #7.#56        // scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
   #58 = Utf8               apply$mcVD$sp
   #59 = Utf8               (D)V
   #60 = Utf8               apply$mcVD$sp$
   #61 = Utf8               (Lscala/Function1;D)V
   #62 = NameAndType        #60:#61       // apply$mcVD$sp$:(Lscala/Function1;D)V
   #63 = InterfaceMethodref #7.#62        // scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
   #64 = Utf8               apply$mcZF$sp
   #65 = Utf8               (F)Z
   #66 = Utf8               apply$mcZF$sp$
   #67 = Utf8               (Lscala/Function1;F)Z
   #68 = NameAndType        #66:#67       // apply$mcZF$sp$:(Lscala/Function1;F)Z
   #69 = InterfaceMethodref #7.#68        // scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
   #70 = Utf8               F
   #71 = Utf8               apply$mcDF$sp
   #72 = Utf8               (F)D
   #73 = Utf8               apply$mcDF$sp$
   #74 = Utf8               (Lscala/Function1;F)D
   #75 = NameAndType        #73:#74       // apply$mcDF$sp$:(Lscala/Function1;F)D
   #76 = InterfaceMethodref #7.#75        // scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
   #77 = Utf8               apply$mcFF$sp
   #78 = Utf8               (F)F
   #79 = Utf8               apply$mcFF$sp$
   #80 = Utf8               (Lscala/Function1;F)F
   #81 = NameAndType        #79:#80       // apply$mcFF$sp$:(Lscala/Function1;F)F
   #82 = InterfaceMethodref #7.#81        // scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
   #83 = Utf8               apply$mcIF$sp
   #84 = Utf8               (F)I
   #85 = Utf8               apply$mcIF$sp$
   #86 = Utf8               (Lscala/Function1;F)I
   #87 = NameAndType        #85:#86       // apply$mcIF$sp$:(Lscala/Function1;F)I
   #88 = InterfaceMethodref #7.#87        // scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
   #89 = Utf8               apply$mcJF$sp
   #90 = Utf8               (F)J
   #91 = Utf8               apply$mcJF$sp$
   #92 = Utf8               (Lscala/Function1;F)J
   #93 = NameAndType        #91:#92       // apply$mcJF$sp$:(Lscala/Function1;F)J
   #94 = InterfaceMethodref #7.#93        // scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
   #95 = Utf8               apply$mcVF$sp
   #96 = Utf8               (F)V
   #97 = Utf8               apply$mcVF$sp$
   #98 = Utf8               (Lscala/Function1;F)V
   #99 = NameAndType        #97:#98       // apply$mcVF$sp$:(Lscala/Function1;F)V
  #100 = InterfaceMethodref #7.#99        // scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
  #101 = Utf8               apply$mcZI$sp
  #102 = Utf8               (I)Z
  #103 = Utf8               apply$mcZI$sp$
  #104 = Utf8               (Lscala/Function1;I)Z
  #105 = NameAndType        #103:#104     // apply$mcZI$sp$:(Lscala/Function1;I)Z
  #106 = InterfaceMethodref #7.#105       // scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
  #107 = Utf8               I
  #108 = Utf8               apply$mcDI$sp
  #109 = Utf8               (I)D
  #110 = Utf8               apply$mcDI$sp$
  #111 = Utf8               (Lscala/Function1;I)D
  #112 = NameAndType        #110:#111     // apply$mcDI$sp$:(Lscala/Function1;I)D
  #113 = InterfaceMethodref #7.#112       // scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
  #114 = Utf8               apply$mcFI$sp
  #115 = Utf8               (I)F
  #116 = Utf8               apply$mcFI$sp$
  #117 = Utf8               (Lscala/Function1;I)F
  #118 = NameAndType        #116:#117     // apply$mcFI$sp$:(Lscala/Function1;I)F
  #119 = InterfaceMethodref #7.#118       // scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
  #120 = Utf8               apply$mcII$sp
  #121 = Utf8               (I)I
  #122 = Utf8               apply$mcII$sp$
  #123 = Utf8               (Lscala/Function1;I)I
  #124 = NameAndType        #122:#123     // apply$mcII$sp$:(Lscala/Function1;I)I
  #125 = InterfaceMethodref #7.#124       // scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
  #126 = Utf8               apply$mcJI$sp
  #127 = Utf8               (I)J
  #128 = Utf8               apply$mcJI$sp$
  #129 = Utf8               (Lscala/Function1;I)J
  #130 = NameAndType        #128:#129     // apply$mcJI$sp$:(Lscala/Function1;I)J
  #131 = InterfaceMethodref #7.#130       // scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
  #132 = Utf8               apply$mcVI$sp
  #133 = Utf8               (I)V
  #134 = Utf8               apply$mcVI$sp$
  #135 = Utf8               (Lscala/Function1;I)V
  #136 = NameAndType        #134:#135     // apply$mcVI$sp$:(Lscala/Function1;I)V
  #137 = InterfaceMethodref #7.#136       // scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
  #138 = Utf8               apply$mcZJ$sp
  #139 = Utf8               (J)Z
  #140 = Utf8               apply$mcZJ$sp$
  #141 = Utf8               (Lscala/Function1;J)Z
  #142 = NameAndType        #140:#141     // apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #143 = InterfaceMethodref #7.#142       // scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #144 = Utf8               J
  #145 = Utf8               apply$mcDJ$sp
  #146 = Utf8               (J)D
  #147 = Utf8               apply$mcDJ$sp$
  #148 = Utf8               (Lscala/Function1;J)D
  #149 = NameAndType        #147:#148     // apply$mcDJ$sp$:(Lscala/Function1;J)D
  #150 = InterfaceMethodref #7.#149       // scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
  #151 = Utf8               apply$mcFJ$sp
  #152 = Utf8               (J)F
  #153 = Utf8               apply$mcFJ$sp$
  #154 = Utf8               (Lscala/Function1;J)F
  #155 = NameAndType        #153:#154     // apply$mcFJ$sp$:(Lscala/Function1;J)F
  #156 = InterfaceMethodref #7.#155       // scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
  #157 = Utf8               apply$mcIJ$sp
  #158 = Utf8               (J)I
  #159 = Utf8               apply$mcIJ$sp$
  #160 = Utf8               (Lscala/Function1;J)I
  #161 = NameAndType        #159:#160     // apply$mcIJ$sp$:(Lscala/Function1;J)I
  #162 = InterfaceMethodref #7.#161       // scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
  #163 = Utf8               apply$mcJJ$sp
  #164 = Utf8               (J)J
  #165 = Utf8               apply$mcJJ$sp$
  #166 = Utf8               (Lscala/Function1;J)J
  #167 = NameAndType        #165:#166     // apply$mcJJ$sp$:(Lscala/Function1;J)J
  #168 = InterfaceMethodref #7.#167       // scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
  #169 = Utf8               apply$mcVJ$sp
  #170 = Utf8               (J)V
  #171 = Utf8               apply$mcVJ$sp$
  #172 = Utf8               (Lscala/Function1;J)V
  #173 = NameAndType        #171:#172     // apply$mcVJ$sp$:(Lscala/Function1;J)V
  #174 = InterfaceMethodref #7.#173       // scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
  #175 = Utf8               compose
  #176 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #177 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<TA;Los/ReadablePath;>;)Lscala/Function1<TA;[B>;
  #178 = Utf8               g
  #179 = Utf8               compose$
  #180 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #181 = NameAndType        #179:#180     // compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #182 = InterfaceMethodref #7.#181       // scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #183 = Utf8               Lscala/Function1;
  #184 = Utf8               andThen
  #185 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<[BTA;>;)Lscala/Function1<Los/ReadablePath;TA;>;
  #186 = Utf8               andThen$
  #187 = NameAndType        #186:#180     // andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #188 = InterfaceMethodref #7.#187       // scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #189 = Utf8               toString
  #190 = Utf8               ()Ljava/lang/String;
  #191 = Utf8               toString$
  #192 = Utf8               (Lscala/Function1;)Ljava/lang/String;
  #193 = NameAndType        #191:#192     // toString$:(Lscala/Function1;)Ljava/lang/String;
  #194 = InterfaceMethodref #7.#193       // scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
  #195 = Utf8               apply
  #196 = Utf8               (Los/ReadablePath;)[B
  #197 = Utf8               arg
  #198 = Utf8               java/io/ByteArrayOutputStream
  #199 = Class              #198          // java/io/ByteArrayOutputStream
  #200 = Methodref          #199.#17      // java/io/ByteArrayOutputStream."<init>":()V
  #201 = Utf8               os/ReadablePath
  #202 = Class              #201          // os/ReadablePath
  #203 = Utf8               getInputStream
  #204 = Utf8               ()Ljava/io/InputStream;
  #205 = NameAndType        #203:#204     // getInputStream:()Ljava/io/InputStream;
  #206 = InterfaceMethodref #202.#205     // os/ReadablePath.getInputStream:()Ljava/io/InputStream;
  #207 = Utf8               os/Internals$
  #208 = Class              #207          // os/Internals$
  #209 = Utf8               Los/Internals$;
  #210 = NameAndType        #12:#209      // MODULE$:Los/Internals$;
  #211 = Fieldref           #208.#210     // os/Internals$.MODULE$:Los/Internals$;
  #212 = Utf8               transfer
  #213 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)V
  #214 = NameAndType        #212:#213     // transfer:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
  #215 = Methodref          #208.#214     // os/Internals$.transfer:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
  #216 = Utf8               java/io/InputStream
  #217 = Class              #216          // java/io/InputStream
  #218 = Utf8               close
  #219 = NameAndType        #218:#15      // close:()V
  #220 = Methodref          #217.#219     // java/io/InputStream.close:()V
  #221 = Utf8               toByteArray
  #222 = Utf8               ()[B
  #223 = NameAndType        #221:#222     // toByteArray:()[B
  #224 = Methodref          #199.#223     // java/io/ByteArrayOutputStream.toByteArray:()[B
  #225 = Utf8               out
  #226 = Utf8               Ljava/io/ByteArrayOutputStream;
  #227 = Utf8               stream
  #228 = Utf8               Ljava/io/InputStream;
  #229 = Utf8               Los/ReadablePath;
  #230 = Utf8               java/lang/Throwable
  #231 = Class              #230          // java/lang/Throwable
  #232 = Utf8               (Los/Path;JI)[B
  #233 = Utf8               offset
  #234 = Utf8               count
  #235 = Utf8               java/nio/ByteBuffer
  #236 = Class              #235          // java/nio/ByteBuffer
  #237 = Utf8               wrap
  #238 = Utf8               ([B)Ljava/nio/ByteBuffer;
  #239 = NameAndType        #237:#238     // wrap:([B)Ljava/nio/ByteBuffer;
  #240 = Methodref          #236.#239     // java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
  #241 = Utf8               os/Path
  #242 = Class              #241          // os/Path
  #243 = Utf8               toSource
  #244 = Utf8               ()Los/SeekableSource;
  #245 = NameAndType        #243:#244     // toSource:()Los/SeekableSource;
  #246 = Methodref          #242.#245     // os/Path.toSource:()Los/SeekableSource;
  #247 = Utf8               os/SeekableSource
  #248 = Class              #247          // os/SeekableSource
  #249 = Utf8               getChannel
  #250 = Utf8               ()Ljava/nio/channels/SeekableByteChannel;
  #251 = NameAndType        #249:#250     // getChannel:()Ljava/nio/channels/SeekableByteChannel;
  #252 = InterfaceMethodref #248.#251     // os/SeekableSource.getChannel:()Ljava/nio/channels/SeekableByteChannel;
  #253 = Utf8               java/nio/channels/SeekableByteChannel
  #254 = Class              #253          // java/nio/channels/SeekableByteChannel
  #255 = Utf8               position
  #256 = Utf8               (J)Ljava/nio/channels/SeekableByteChannel;
  #257 = NameAndType        #255:#256     // position:(J)Ljava/nio/channels/SeekableByteChannel;
  #258 = InterfaceMethodref #254.#257     // java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
  #259 = Utf8               read
  #260 = Utf8               (Ljava/nio/ByteBuffer;)I
  #261 = NameAndType        #259:#260     // read:(Ljava/nio/ByteBuffer;)I
  #262 = InterfaceMethodref #254.#261     // java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
  #263 = Utf8               scala/collection/ArrayOps$
  #264 = Class              #263          // scala/collection/ArrayOps$
  #265 = Utf8               Lscala/collection/ArrayOps$;
  #266 = NameAndType        #12:#265      // MODULE$:Lscala/collection/ArrayOps$;
  #267 = Fieldref           #264.#266     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #268 = Utf8               scala/Predef$
  #269 = Class              #268          // scala/Predef$
  #270 = Utf8               Lscala/Predef$;
  #271 = NameAndType        #12:#270      // MODULE$:Lscala/Predef$;
  #272 = Fieldref           #269.#271     // scala/Predef$.MODULE$:Lscala/Predef$;
  #273 = Utf8               byteArrayOps
  #274 = Utf8               ([B)Ljava/lang/Object;
  #275 = NameAndType        #273:#274     // byteArrayOps:([B)Ljava/lang/Object;
  #276 = Methodref          #269.#275     // scala/Predef$.byteArrayOps:([B)Ljava/lang/Object;
  #277 = Utf8               take$extension
  #278 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #279 = NameAndType        #277:#278     // take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #280 = Methodref          #264.#279     // scala/collection/ArrayOps$.take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #281 = Utf8               [B
  #282 = Class              #281          // "[B"
  #283 = InterfaceMethodref #254.#219     // java/nio/channels/SeekableByteChannel.close:()V
  #284 = Utf8               finalCount
  #285 = Utf8               arr
  #286 = Utf8               buf
  #287 = Utf8               Ljava/nio/ByteBuffer;
  #288 = Utf8               channel
  #289 = Utf8               Ljava/nio/channels/SeekableByteChannel;
  #290 = Utf8               Los/Path;
  #291 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #292 = NameAndType        #195:#196     // apply:(Los/ReadablePath;)[B
  #293 = Methodref          #2.#292       // os/read$bytes$.apply:(Los/ReadablePath;)[B
  #294 = Utf8               Ljava/lang/Object;
  #295 = Methodref          #5.#17        // java/lang/Object."<init>":()V
  #296 = Utf8               Code
  #297 = Utf8               LineNumberTable
  #298 = Utf8               LocalVariableTable
  #299 = Utf8               MethodParameters
  #300 = Utf8               Signature
  #301 = Utf8               StackMapTable
  #302 = Utf8               InnerClasses
  #303 = Utf8               SourceFile
  #304 = Utf8               ScalaInlineInfo
  #305 = Utf8               Scala
{
  public static final os.read$bytes$ MODULE$;
    descriptor: Los/read$bytes$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/read$bytes$
         3: dup
         4: invokespecial #18                 // Method "<init>":()V
         7: putstatic     #20                 // Field MODULE$:Los/read$bytes$;
        10: getstatic     #20                 // Field MODULE$:Los/read$bytes$;
        13: invokestatic  #24                 // InterfaceMethod scala/Function1.$init$:(Lscala/Function1;)V
        16: return
      LineNumberTable:
        line 253: 0

  public boolean apply$mcZD$sp(double);
    descriptor: (D)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #31                 // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
         5: ireturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDD$sp(double);
    descriptor: (D)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #39                 // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
         5: dreturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFD$sp(double);
    descriptor: (D)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #45                 // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
         5: freturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcID$sp(double);
    descriptor: (D)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #51                 // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
         5: ireturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJD$sp(double);
    descriptor: (D)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #57                 // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
         5: lreturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVD$sp(double);
    descriptor: (D)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #63                 // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
         5: return
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZF$sp(float);
    descriptor: (F)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #69                 // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
         5: ireturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDF$sp(float);
    descriptor: (F)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #76                 // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
         5: dreturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFF$sp(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #82                 // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
         5: freturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIF$sp(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #88                 // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
         5: ireturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJF$sp(float);
    descriptor: (F)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #94                 // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
         5: lreturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVF$sp(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #100                // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
         5: return
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZI$sp(int);
    descriptor: (I)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #106                // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
         5: ireturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDI$sp(int);
    descriptor: (I)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #113                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
         5: dreturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFI$sp(int);
    descriptor: (I)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #119                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
         5: freturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcII$sp(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #125                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
         5: ireturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJI$sp(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #131                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
         5: lreturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVI$sp(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #137                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
         5: return
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZJ$sp(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #143                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
         5: ireturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDJ$sp(long);
    descriptor: (J)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #150                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
         5: dreturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFJ$sp(long);
    descriptor: (J)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #156                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
         5: freturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIJ$sp(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #162                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
         5: ireturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJJ$sp(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #168                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
         5: lreturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVJ$sp(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #174                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
         5: return
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public <A extends java.lang.Object> scala.Function1<A, byte[]> compose(scala.Function1<A, os.ReadablePath>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #182                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1     g   Lscala/Function1;
    Signature: #177                         // <A:Ljava/lang/Object;>(Lscala/Function1<TA;Los/ReadablePath;>;)Lscala/Function1<TA;[B>;
    MethodParameters:
      Name                           Flags
      g                              final

  public <A extends java.lang.Object> scala.Function1<os.ReadablePath, A> andThen(scala.Function1<byte[], A>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #188                // InterfaceMethod scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$bytes$;
            0       6     1     g   Lscala/Function1;
    Signature: #185                         // <A:Ljava/lang/Object;>(Lscala/Function1<[BTA;>;)Lscala/Function1<Los/ReadablePath;TA;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #194                // InterfaceMethod scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/read$bytes$;

  public byte[] apply(os.ReadablePath);
    descriptor: (Los/ReadablePath;)[B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: new           #199                // class java/io/ByteArrayOutputStream
         3: dup
         4: invokespecial #200                // Method java/io/ByteArrayOutputStream."<init>":()V
         7: astore_2
         8: aload_1
         9: invokeinterface #206,  1          // InterfaceMethod os/ReadablePath.getInputStream:()Ljava/io/InputStream;
        14: astore_3
        15: getstatic     #211                // Field os/Internals$.MODULE$:Los/Internals$;
        18: aload_3
        19: aload_2
        20: invokevirtual #215                // Method os/Internals$.transfer:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
        23: goto          35
        26: astore        4
        28: aload_3
        29: invokevirtual #220                // Method java/io/InputStream.close:()V
        32: aload         4
        34: athrow
        35: aload_3
        36: invokevirtual #220                // Method java/io/InputStream.close:()V
        39: aload_2
        40: invokevirtual #224                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
        43: areturn
      Exception table:
         from    to  target type
            15    26    26   any
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class os/read$bytes$, class os/ReadablePath, class java/io/ByteArrayOutputStream, class java/io/InputStream ]
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
      LineNumberTable:
        line 255: 0
        line 256: 8
        line 257: 15
        line 258: 28
        line 259: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      35     2   out   Ljava/io/ByteArrayOutputStream;
           15      28     3 stream   Ljava/io/InputStream;
            0      44     0  this   Los/read$bytes$;
            0      44     1   arg   Los/ReadablePath;
    MethodParameters:
      Name                           Flags
      arg                            final

  public byte[] apply(os.Path, long, int);
    descriptor: (Los/Path;JI)[B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=10, args_size=4
         0: iload         4
         2: newarray       byte
         4: astore        5
         6: aload         5
         8: invokestatic  #240                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
        11: astore        6
        13: aload_1
        14: invokevirtual #246                // Method os/Path.toSource:()Los/SeekableSource;
        17: invokeinterface #252,  1          // InterfaceMethod os/SeekableSource.getChannel:()Ljava/nio/channels/SeekableByteChannel;
        22: astore        7
        24: aload         7
        26: lload_2
        27: invokeinterface #258,  3          // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
        32: pop
        33: aload         7
        35: aload         6
        37: invokeinterface #262,  2          // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
        42: istore        8
        44: iload         8
        46: aload         5
        48: arraylength
        49: if_icmpne     57
        52: aload         5
        54: goto          76
        57: getstatic     #267                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        60: getstatic     #272                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        63: aload         5
        65: invokevirtual #276                // Method scala/Predef$.byteArrayOps:([B)Ljava/lang/Object;
        68: iload         8
        70: invokevirtual #280                // Method scala/collection/ArrayOps$.take$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
        73: checkcast     #282                // class "[B"
        76: goto          91
        79: astore        9
        81: aload         7
        83: invokeinterface #283,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
        88: aload         9
        90: athrow
        91: aload         7
        93: invokeinterface #283,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
        98: areturn
      Exception table:
         from    to  target type
            24    79    79   any
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class os/read$bytes$, class os/Path, long, int, class "[B", class java/nio/ByteBuffer, class java/nio/channels/SeekableByteChannel, int ]
          stack = []
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class "[B" ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class os/read$bytes$, class os/Path, long, int, class "[B", class java/nio/ByteBuffer, class java/nio/channels/SeekableByteChannel ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class os/read$bytes$, class os/Path, long, int, class "[B", class java/nio/ByteBuffer, class java/nio/channels/SeekableByteChannel, int ]
          stack = [ class "[B" ]
      LineNumberTable:
        line 262: 0
        line 263: 6
        line 264: 13
        line 266: 24
        line 267: 33
        line 268: 44
        line 269: 60
        line 271: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           44      32     8 finalCount   I
            6      92     5   arr   [B
           13      85     6   buf   Ljava/nio/ByteBuffer;
           24      74     7 channel   Ljava/nio/channels/SeekableByteChannel;
            0      99     0  this   Los/read$bytes$;
            0      99     1   arg   Los/Path;
            0      99     2 offset   J
            0      99     4 count   I
    MethodParameters:
      Name                           Flags
      arg                            final
      offset                         final
      count                          final

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #202                // class os/ReadablePath
         5: invokevirtual #293                // Method apply:(Los/ReadablePath;)[B
         8: areturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Los/read$bytes$;
            0       9     1    v1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final

  public os.read$bytes$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #295                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/read$bytes$;
}
InnerClasses:
  public static #11= #2 of #10;           // bytes$=class os/read$bytes$ of class os/read
Signature: #3                           // Ljava/lang/Object;Lscala/Function1<Los/ReadablePath;[B>;
SourceFile: "ReadWriteOps.scala"
  ScalaInlineInfo: length = 0x9F (unknown attribute)
   01 01 00 1F 00 10 00 0F 01 00 B8 00 B0 01 00 C3
   01 23 01 00 C3 00 E8 01 00 C3 00 C4 01 00 22 00
   23 01 00 47 00 48 01 00 6C 00 6D 01 00 91 00 92
   01 00 28 00 29 01 00 4D 00 4E 01 00 72 00 73 01
   00 97 00 98 01 00 2E 00 2F 01 00 53 00 54 01 00
   78 00 79 01 00 9D 00 9E 01 00 34 00 35 01 00 59
   00 5A 01 00 7E 00 7F 01 00 A3 00 A4 01 00 3A 00
   3B 01 00 5F 00 60 01 00 84 00 85 01 00 A9 00 AA
   01 00 19 00 1A 01 00 40 00 41 01 00 65 00 66 01
   00 8A 00 8B 01 00 AF 00 B0 01 00 BD 00 BE 01
  Scala: length = 0x0 (unknown attribute)

