Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/util/Try.class
  Last modified May 29, 2022; size 6945 bytes
  SHA-256 checksum 369863af1599ea428474489a9b14c793dfe1798388f806da3c46728e439651d5
  Compiled from "Try.scala"
public abstract class scala.util.Try<T extends java.lang.Object> extends java.lang.Object implements scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/util/Try
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 0, methods: 25, attributes: 6
Constant pool:
    #1 = Utf8               scala/util/Try
    #2 = Class              #1            // scala/util/Try
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Product
    #7 = Class              #6            // scala/Product
    #8 = Utf8               java/io/Serializable
    #9 = Class              #8            // java/io/Serializable
   #10 = Utf8               Try.scala
   #11 = Utf8               Lscala/reflect/ScalaSignature;
   #12 = Utf8               bytes
   #13 = Utf8               \u0006\u0005\t-b!B\u0011#\u0003C9\u0003\"B\u001c\u0001\t\u0003A\u0004\"\u0002$\u0001\r\u00039\u0005\"B&\u0001\r\u00039\u0005\"\u0002\'\u0001\r\u0003i\u0005\"\u0002-\u0001\r\u0003I\u0006\"\u00021\u0001\r\u0003\t\u0007\"\u00022\u0001\r\u0003\u0019\u0007\"B8\u0001\r\u0003\u0001\b\"B<\u0001\r\u0003A\bBB@\u0001\r\u0003\t\t\u0001C\u0004\u0002\u0016\u00011\t!a\u0006\t\u000f\u0005}\u0001\u0001\"\u0002\u0002\"\u00191\u0011q\u0005\u0001\u0003\u0003SA!\"a\u0007\u000e\u0005\u0003\u0005\u000b\u0011BA\u000f\u0011\u00199T\u0002\"\u0001\u0002,!1q/\u0004C\u0001\u0003_Aaa\\\u0007\u0005\u0002\u0005u\u0002B\u00022\u000e\t\u0003\tY\u0005C\u0004\u0002 5!\t!a\u0016\t\u000f\u0005\u001d\u0004A\"\u0001\u0002j!9\u0011Q\u0010\u0001\u0007\u0002\u0005}\u0004bBAG\u0001\u0019\u0005\u0011q\u0012\u0005\b\u0003/\u0003a\u0011AAM\u0011\u001d\ti\u000b\u0001D\u0001\u0003_Cq!a-\u0001\r\u0003\t)\fC\u0004\u0002J\u00021\t!a3\t\u000f\u0005M\u0007A\"\u0001\u0002V\u001e9\u00111\u001f\u0012\t\u0002\u0005UhAB\u0011#\u0011\u0003\t9\u0010\u0003\u00048;\u0011\u0005!q\u0001\u0005\b\u0005\u0013iB\u0011\u0001B\u0006\u0011%\u0011Y\"HA\u0001\n\u0013\u0011iBA\u0002UefT!a\t\u0013\u0002\tU$\u0018\u000e\u001c\u0006\u0002K\u0005)1oY1mC\u000e\u0001QC\u0001\u0015>\'\u0011\u0001\u0011&\f\u0019\u0011\u0005)ZS\"\u0001\u0013\n\u00051\"#AB!osJ+g\r\u0005\u0002+]%\u0011q\u0006\n\u0002\b!J|G-^2u!\t\tDG\u0004\u0002+e%\u00111\u0007J\u0001\ba\u0006\u001c7.Y4f\u0013\t)dG\u0001\u0007TKJL\u0017\r\\5{C\ndWM\u0003\u00024I\u00051A(\u001b8jiz\"\u0012!\u000f\t\u0004u\u0001YT\"\u0001\u0012\u0011\u0005qjD\u0002\u0001\u0003\u0007}\u0001!)\u0019A \u0003\u0003Q\u000b\"\u0001Q\"\u0011\u0005)\n\u0015B\u0001\"%\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"A\u000b#\n\u0005\u0015##aA!os\u0006I\u0011n\u001d$bS2,(/Z\u000b\u0002\u0011B\u0011!&S\u0005\u0003\u0015\u0012\u0012qAQ8pY\u0016\fg.A\u0005jgN+8mY3tg\u0006Iq-\u001a;Pe\u0016c7/Z\u000b\u0003\u001dB#\"aT*\u0011\u0005q\u0002F!B)\u0005\u0005\u0004\u0011&!A+\u0012\u0005m\u001a\u0005B\u0002+\u0005\t\u0003\u0007Q+A\u0004eK\u001a\fW\u000f\u001c;\u0011\u0007)2v*\u0003\u0002XI\tAAHY=oC6,g(\u0001\u0004pe\u0016c7/Z\u000b\u00035v#\"a\u00170\u0011\u0007i\u0002A\f\u0005\u0002=;\u0012)\u0011+\u0002b\u0001%\"1A+\u0002CA\u0002}\u00032A\u000b,\\\u0003\r9W\r^\u000b\u0002w\u00059am\u001c:fC\u000eDWC\u00013o)\t)\u0007\u000e\u0005\u0002+M&\u0011q\r\n\u0002\u0005+:LG\u000fC\u0003j\u000f\u0001\u0007!.A\u0001g!\u0011Q3nO7\n\u00051$#!\u0003$v]\u000e$\u0018n\u001c82!\tad\u000eB\u0003R\u000f\t\u0007q(A\u0004gY\u0006$X*\u00199\u0016\u0005E$HC\u0001:v!\rQ\u0004a\u001d\t\u0003yQ$Q!\u0015\u0005C\u0002}BQ!\u001b\u0005A\u0002Y\u0004BAK6<e\u0006\u0019Q.\u00199\u0016\u0005edHC\u0001>~!\rQ\u0004a\u001f\t\u0003yq$Q!U\u0005C\u0002}BQ![\u0005A\u0002y\u0004BAK6<w\u000691m\u001c7mK\u000e$X\u0003BA\u0002\u0003\u0013!B!!\u0002\u0002\fA!!\bAA\u0004!\ra\u0014\u0011\u0002\u0003\u0006#*\u0011\ra\u0010\u0005\b\u0003\u001bQ\u0001\u0019AA\b\u0003\t\u0001h\r\u0005\u0004+\u0003#Y\u0014qA\u0005\u0004\u0003\'!#a\u0004)beRL\u0017\r\u001c$v]\u000e$\u0018n\u001c8\u0002\r\u0019LG\u000e^3s)\rI\u0014\u0011\u0004\u0005\b\u00037Y\u0001\u0019AA\u000f\u0003\u0005\u0001\b\u0003\u0002\u0016lw!\u000b!b^5uQ\u001aKG\u000e^3s)\u0011\t\u0019#!\u0018\u0011\u0007\u0005\u0015R\"D\u0001\u0001\u0005)9\u0016\u000e\u001e5GS2$XM]\n\u0003\u001b%\"B!a\t\u0002.!9\u00111D\bA\u0002\u0005uQ\u0003BA\u0019\u0003o!B!a\r\u0002:A!!\bAA\u001b!\ra\u0014q\u0007\u0003\u0006#B\u0011\ra\u0010\u0005\u0007SB\u0001\r!a\u000f\u0011\u000b)Z7(!\u000e\u0016\t\u0005}\u0012Q\t\u000b\u0005\u0003\u0003\n9\u0005\u0005\u0003;\u0001\u0005\r\u0003c\u0001\u001f\u0002F\u0011)\u0011+\u0005b\u0001\u007f!1\u0011.\u0005a\u0001\u0003\u0013\u0002RAK6<\u0003\u0003*B!!\u0014\u0002VQ\u0019Q-a\u0014\t\r%\u0014\u0002\u0019AA)!\u0015Q3nOA*!\ra\u0014Q\u000b\u0003\u0006#J\u0011\ra\u0010\u000b\u0005\u0003G\tI\u0006C\u0004\u0002\\M\u0001\r!!\b\u0002\u0003EDq!a\u0007\r\u0001\u0004\ti\u0002K\u0002\r\u0003C\u00022AKA2\u0013\r\t)\u0007\n\u0002\u0007S:d\u0017N\\3\u0002\u0017I,7m\u001c<fe^KG\u000f[\u000b\u0005\u0003W\n\t\b\u0006\u0003\u0002n\u0005M\u0004\u0003\u0002\u001e\u0001\u0003_\u00022\u0001PA9\t\u0015\tFC1\u0001S\u0011\u001d\ti\u0001\u0006a\u0001\u0003k\u0002rAKA\t\u0003o\ni\u0007E\u00022\u0003sJ1!a\u001f7\u0005%!\u0006N]8xC\ndW-A\u0004sK\u000e|g/\u001a:\u0016\t\u0005\u0005\u0015q\u0011\u000b\u0005\u0003\u0007\u000bI\t\u0005\u0003;\u0001\u0005\u0015\u0005c\u0001\u001f\u0002\b\u0012)\u0011+\u0006b\u0001%\"9\u0011QB\u000bA\u0002\u0005-\u0005c\u0002\u0016\u0002\u0012\u0005]\u0014QQ\u0001\ti>|\u0005\u000f^5p]V\u0011\u0011\u0011\u0013\t\u0005U\u0005M5(C\u0002\u0002\u0016\u0012\u0012aa\u00149uS>t\u0017a\u00024mCR$XM\\\u000b\u0005\u00037\u000b\t\u000b\u0006\u0003\u0002\u001e\u0006\r\u0006\u0003\u0002\u001e\u0001\u0003?\u00032\u0001PAQ\t\u0015\tvC1\u0001@\u0011\u001d\t)k\u0006a\u0002\u0003O\u000b!!\u001a<\u0011\r)\nIkOAO\u0013\r\tY\u000b\n\u0002\u0011I1,7o\u001d\u0013d_2|g\u000e\n7fgN\faAZ1jY\u0016$WCAAY!\u0011Q\u0004!a\u001e\u0002\u0013Q\u0014\u0018M\\:g_JlW\u0003BA\\\u0003{#b!!/\u0002@\u0006\u0015\u0007\u0003\u0002\u001e\u0001\u0003w\u00032\u0001PA_\t\u0015\t\u0016D1\u0001@\u0011\u001d\t\t-\u0007a\u0001\u0003\u0007\f\u0011a\u001d\t\u0006U-\\\u0014\u0011\u0018\u0005\u0007Sf\u0001\r!a2\u0011\r)Z\u0017qOA]\u0003!!x.R5uQ\u0016\u0014XCAAg!\u0019Q\u0014qZA<w%\u0019\u0011\u0011\u001b\u0012\u0003\r\u0015KG\u000f[3s\u0003\u00111w\u000e\u001c3\u0016\t\u0005]\u00171\u001c\u000b\u0007\u00033\fi.a9\u0011\u0007q\nY\u000eB\u0003R7\t\u0007q\bC\u0004\u0002`n\u0001\r!!9\u0002\u0005\u0019\f\u0007C\u0002\u0016l\u0003o\nI\u000eC\u0004\u0002fn\u0001\r!a:\u0002\u0005\u0019\u0014\u0007#\u0002\u0016lw\u0005e\u0017&\u0002\u0001\u0002l\u0006=\u0018bAAwE\t9a)Y5mkJ,\u0017bAAyE\t91+^2dKN\u001c\u0018a\u0001+ssB\u0011!(H\n\u0005;%\nI\u0010\u0005\u0003\u0002|\n\u0015QBAA\u007f\u0015\u0011\tyP!\u0001\u0002\u0005%|\'B\u0001B\u0002\u0003\u0011Q\u0017M^1\n\u0007U\ni\u0010\u0006\u0002\u0002v\u0006)\u0011\r\u001d9msV!!Q\u0002B\n)\u0011\u0011yA!\u0006\u0011\ti\u0002!\u0011\u0003\t\u0004y\tMA!\u0002  \u0005\u0004y\u0004\u0002\u0003B\f?\u0011\u0005\rA!\u0007\u0002\u0003I\u0004BA\u000b,\u0003\u0012\u0005aqO]5uKJ+\u0007\u000f\\1dKR\u0011!q\u0004\t\u0005\u0005C\u00119#\u0004\u0002\u0003$)!!Q\u0005B\u0001\u0003\u0011a\u0017M\\4\n\t\t%\"1\u0005\u0002\u0007\u001f\nTWm\u0019;
   #14 = Utf8               scala/util/Try$WithFilter
   #15 = Class              #14           // scala/util/Try$WithFilter
   #16 = Utf8               WithFilter
   #17 = Utf8               apply
   #18 = Utf8               (Lscala/Function0;)Lscala/util/Try;
   #19 = Utf8               <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)Lscala/util/Try<TT;>;
   #20 = Utf8               r
   #21 = Utf8               java/lang/Throwable
   #22 = Class              #21           // java/lang/Throwable
   #23 = Utf8               scala/util/Try$
   #24 = Class              #23           // scala/util/Try$
   #25 = Utf8               MODULE$
   #26 = Utf8               Lscala/util/Try$;
   #27 = NameAndType        #25:#26       // MODULE$:Lscala/util/Try$;
   #28 = Fieldref           #24.#27       // scala/util/Try$.MODULE$:Lscala/util/Try$;
   #29 = Utf8               scala/util/Success
   #30 = Class              #29           // scala/util/Success
   #31 = Utf8               scala/Function0
   #32 = Class              #31           // scala/Function0
   #33 = Utf8               ()Ljava/lang/Object;
   #34 = NameAndType        #17:#33       // apply:()Ljava/lang/Object;
   #35 = InterfaceMethodref #32.#34       // scala/Function0.apply:()Ljava/lang/Object;
   #36 = Utf8               <init>
   #37 = Utf8               (Ljava/lang/Object;)V
   #38 = NameAndType        #36:#37       // "<init>":(Ljava/lang/Object;)V
   #39 = Methodref          #30.#38       // scala/util/Success."<init>":(Ljava/lang/Object;)V
   #40 = Utf8               scala/util/control/NonFatal$
   #41 = Class              #40           // scala/util/control/NonFatal$
   #42 = Utf8               Lscala/util/control/NonFatal$;
   #43 = NameAndType        #25:#42       // MODULE$:Lscala/util/control/NonFatal$;
   #44 = Fieldref           #41.#43       // scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
   #45 = Utf8               unapply
   #46 = Utf8               (Ljava/lang/Throwable;)Lscala/Option;
   #47 = NameAndType        #45:#46       // unapply:(Ljava/lang/Throwable;)Lscala/Option;
   #48 = Methodref          #41.#47       // scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
   #49 = Utf8               scala/Option
   #50 = Class              #49           // scala/Option
   #51 = Utf8               isEmpty
   #52 = Utf8               ()Z
   #53 = NameAndType        #51:#52       // isEmpty:()Z
   #54 = Methodref          #50.#53       // scala/Option.isEmpty:()Z
   #55 = Utf8               get
   #56 = NameAndType        #55:#33       // get:()Ljava/lang/Object;
   #57 = Methodref          #50.#56       // scala/Option.get:()Ljava/lang/Object;
   #58 = Utf8               scala/util/Failure
   #59 = Class              #58           // scala/util/Failure
   #60 = Utf8               (Ljava/lang/Throwable;)V
   #61 = NameAndType        #36:#60       // "<init>":(Ljava/lang/Throwable;)V
   #62 = Methodref          #59.#61       // scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
   #63 = Utf8               Lscala/Function0;
   #64 = Utf8               apply_e
   #65 = Utf8               Ljava/lang/Throwable;
   #66 = Utf8               productIterator
   #67 = Utf8               ()Lscala/collection/Iterator;
   #68 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #69 = Utf8               productIterator$
   #70 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #71 = NameAndType        #69:#70       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #72 = InterfaceMethodref #7.#71        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #73 = Utf8               this
   #74 = Utf8               Lscala/util/Try;
   #75 = Utf8               productPrefix
   #76 = Utf8               ()Ljava/lang/String;
   #77 = Utf8               productPrefix$
   #78 = Utf8               (Lscala/Product;)Ljava/lang/String;
   #79 = NameAndType        #77:#78       // productPrefix$:(Lscala/Product;)Ljava/lang/String;
   #80 = InterfaceMethodref #7.#79        // scala/Product.productPrefix$:(Lscala/Product;)Ljava/lang/String;
   #81 = Utf8               productElementName
   #82 = Utf8               (I)Ljava/lang/String;
   #83 = Utf8               n
   #84 = Utf8               productElementName$
   #85 = Utf8               (Lscala/Product;I)Ljava/lang/String;
   #86 = NameAndType        #84:#85       // productElementName$:(Lscala/Product;I)Ljava/lang/String;
   #87 = InterfaceMethodref #7.#86        // scala/Product.productElementName$:(Lscala/Product;I)Ljava/lang/String;
   #88 = Utf8               I
   #89 = Utf8               productElementNames
   #90 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #91 = Utf8               productElementNames$
   #92 = NameAndType        #91:#70       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #93 = InterfaceMethodref #7.#92        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #94 = Utf8               isFailure
   #95 = Utf8               isSuccess
   #96 = Utf8               getOrElse
   #97 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
   #98 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)TU;
   #99 = Utf8               default
  #100 = Utf8               orElse
  #101 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function0<Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
  #102 = Utf8               ()TT;
  #103 = Utf8               foreach
  #104 = Utf8               (Lscala/Function1;)V
  #105 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TT;TU;>;)V
  #106 = Utf8               f
  #107 = Utf8               flatMap
  #108 = Utf8               (Lscala/Function1;)Lscala/util/Try;
  #109 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TT;Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
  #110 = Utf8               map
  #111 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TT;TU;>;)Lscala/util/Try<TU;>;
  #112 = Utf8               collect
  #113 = Utf8               (Lscala/PartialFunction;)Lscala/util/Try;
  #114 = Utf8               <U:Ljava/lang/Object;>(Lscala/PartialFunction<TT;TU;>;)Lscala/util/Try<TU;>;
  #115 = Utf8               pf
  #116 = Utf8               filter
  #117 = Utf8               (Lscala/Function1<TT;Ljava/lang/Object;>;)Lscala/util/Try<TT;>;
  #118 = Utf8               p
  #119 = Utf8               withFilter
  #120 = Utf8               (Lscala/Function1;)Lscala/util/Try$WithFilter;
  #121 = Utf8               (Lscala/Function1<TT;Ljava/lang/Object;>;)Lscala/util/Try<TT;>.WithFilter;
  #122 = Utf8               (Lscala/util/Try;Lscala/Function1;)V
  #123 = NameAndType        #36:#122      // "<init>":(Lscala/util/Try;Lscala/Function1;)V
  #124 = Methodref          #15.#123      // scala/util/Try$WithFilter."<init>":(Lscala/util/Try;Lscala/Function1;)V
  #125 = Utf8               Lscala/Function1;
  #126 = Utf8               recoverWith
  #127 = Utf8               <U:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
  #128 = Utf8               recover
  #129 = Utf8               <U:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TU;>;)Lscala/util/Try<TU;>;
  #130 = Utf8               toOption
  #131 = Utf8               ()Lscala/Option;
  #132 = Utf8               ()Lscala/Option<TT;>;
  #133 = Utf8               flatten
  #134 = Utf8               (Lscala/$less$colon$less;)Lscala/util/Try;
  #135 = Utf8               <U:Ljava/lang/Object;>(Lscala/$less$colon$less<TT;Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
  #136 = Utf8               ev
  #137 = Utf8               failed
  #138 = Utf8               ()Lscala/util/Try;
  #139 = Utf8               ()Lscala/util/Try<Ljava/lang/Throwable;>;
  #140 = Utf8               transform
  #141 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/util/Try;
  #142 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TT;Lscala/util/Try<TU;>;>;Lscala/Function1<Ljava/lang/Throwable;Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
  #143 = Utf8               s
  #144 = Utf8               toEither
  #145 = Utf8               ()Lscala/util/Either;
  #146 = Utf8               ()Lscala/util/Either<Ljava/lang/Throwable;TT;>;
  #147 = Utf8               fold
  #148 = Utf8               (Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
  #149 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Throwable;TU;>;Lscala/Function1<TT;TU;>;)TU;
  #150 = Utf8               fa
  #151 = Utf8               fb
  #152 = Utf8               ()V
  #153 = NameAndType        #36:#152      // "<init>":()V
  #154 = Methodref          #5.#153       // java/lang/Object."<init>":()V
  #155 = Utf8               Code
  #156 = Utf8               StackMapTable
  #157 = Utf8               LineNumberTable
  #158 = Utf8               LocalVariableTable
  #159 = Utf8               Signature
  #160 = Utf8               MethodParameters
  #161 = Utf8               InnerClasses
  #162 = Utf8               SourceFile
  #163 = Utf8               RuntimeVisibleAnnotations
  #164 = Utf8               ScalaInlineInfo
  #165 = Utf8               ScalaSig
{
  public static <T extends java.lang.Object> scala.util.Try<T> apply(scala.Function0<T>);
    descriptor: (Lscala/Function0;)Lscala/util/Try;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=5, args_size=1
         0: getstatic     #28                 // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
         3: pop
         4: new           #30                 // class scala/util/Success
         7: dup
         8: aload_0
         9: invokeinterface #35,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        14: invokespecial #39                 // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
        17: areturn
        18: astore_2
        19: aload_2
        20: ifnull        60
        23: getstatic     #44                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
        26: aload_2
        27: invokevirtual #48                 // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
        30: astore_3
        31: aload_3
        32: invokevirtual #54                 // Method scala/Option.isEmpty:()Z
        35: ifne          60
        38: aload_3
        39: invokevirtual #57                 // Method scala/Option.get:()Ljava/lang/Object;
        42: checkcast     #22                 // class java/lang/Throwable
        45: astore        4
        47: new           #59                 // class scala/util/Failure
        50: dup
        51: aload         4
        53: invokespecial #62                 // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
        56: astore_1
        57: goto          62
        60: aload_2
        61: athrow
        62: aload_1
        63: areturn
      Exception table:
         from    to  target type
             4    17    18   Class java/lang/Throwable
      StackMapTable: number_of_entries = 3
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ top, class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/Function0, class scala/util/Failure, class java/lang/Throwable, class scala/Option, class java/lang/Throwable ]
          stack = []
      LineNumberTable:
        line 210: 4
        line 211: 19
        line 210: 60
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      64     0     r   Lscala/Function0;
           47      13     4 apply_e   Ljava/lang/Throwable;
    Signature: #19                          // <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)Lscala/util/Try<TT;>;
    MethodParameters:
      Name                           Flags
      r                              final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #72                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Try;
    Signature: #68                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #80                 // InterfaceMethod scala/Product.productPrefix$:(Lscala/Product;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Try;

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #87                 // InterfaceMethod scala/Product.productElementName$:(Lscala/Product;I)Ljava/lang/String;
         5: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/util/Try;
            0       6     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #93                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Try;
    Signature: #90                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public abstract boolean isFailure();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isSuccess();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract <U extends java.lang.Object> U getOrElse(scala.Function0<U>);
    descriptor: (Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #98                          // <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)TU;
    MethodParameters:
      Name                           Flags
      default                        final

  public abstract <U extends java.lang.Object> scala.util.Try<U> orElse(scala.Function0<scala.util.Try<U>>);
    descriptor: (Lscala/Function0;)Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #101                         // <U:Ljava/lang/Object;>(Lscala/Function0<Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
    MethodParameters:
      Name                           Flags
      default                        final

  public abstract T get();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #102                         // ()TT;

  public abstract <U extends java.lang.Object> void foreach(scala.Function1<T, U>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #105                         // <U:Ljava/lang/Object;>(Lscala/Function1<TT;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract <U extends java.lang.Object> scala.util.Try<U> flatMap(scala.Function1<T, scala.util.Try<U>>);
    descriptor: (Lscala/Function1;)Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #109                         // <U:Ljava/lang/Object;>(Lscala/Function1<TT;Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract <U extends java.lang.Object> scala.util.Try<U> map(scala.Function1<T, U>);
    descriptor: (Lscala/Function1;)Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #111                         // <U:Ljava/lang/Object;>(Lscala/Function1<TT;TU;>;)Lscala/util/Try<TU;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public abstract <U extends java.lang.Object> scala.util.Try<U> collect(scala.PartialFunction<T, U>);
    descriptor: (Lscala/PartialFunction;)Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #114                         // <U:Ljava/lang/Object;>(Lscala/PartialFunction<TT;TU;>;)Lscala/util/Try<TU;>;
    MethodParameters:
      Name                           Flags
      pf                             final

  public abstract scala.util.Try<T> filter(scala.Function1<T, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #117                         // (Lscala/Function1<TT;Ljava/lang/Object;>;)Lscala/util/Try<TT;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public final scala.util.Try<T>.WithFilter withFilter(scala.Function1<T, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/util/Try$WithFilter;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=2
         0: new           #15                 // class scala/util/Try$WithFilter
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #124                // Method scala/util/Try$WithFilter."<init>":(Lscala/util/Try;Lscala/Function1;)V
         9: areturn
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/Try;
            0      10     1     p   Lscala/Function1;
    Signature: #121                         // (Lscala/Function1<TT;Ljava/lang/Object;>;)Lscala/util/Try<TT;>.WithFilter;
    MethodParameters:
      Name                           Flags
      p                              final

  public abstract <U extends java.lang.Object> scala.util.Try<U> recoverWith(scala.PartialFunction<java.lang.Throwable, scala.util.Try<U>>);
    descriptor: (Lscala/PartialFunction;)Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #127                         // <U:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
    MethodParameters:
      Name                           Flags
      pf                             final

  public abstract <U extends java.lang.Object> scala.util.Try<U> recover(scala.PartialFunction<java.lang.Throwable, U>);
    descriptor: (Lscala/PartialFunction;)Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #129                         // <U:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TU;>;)Lscala/util/Try<TU;>;
    MethodParameters:
      Name                           Flags
      pf                             final

  public abstract scala.Option<T> toOption();
    descriptor: ()Lscala/Option;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #132                         // ()Lscala/Option<TT;>;

  public abstract <U extends java.lang.Object> scala.util.Try<U> flatten(scala.$less$colon$less<T, scala.util.Try<U>>);
    descriptor: (Lscala/$less$colon$less;)Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #135                         // <U:Ljava/lang/Object;>(Lscala/$less$colon$less<TT;Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
    MethodParameters:
      Name                           Flags
      ev                             final

  public abstract scala.util.Try<java.lang.Throwable> failed();
    descriptor: ()Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #139                         // ()Lscala/util/Try<Ljava/lang/Throwable;>;

  public abstract <U extends java.lang.Object> scala.util.Try<U> transform(scala.Function1<T, scala.util.Try<U>>, scala.Function1<java.lang.Throwable, scala.util.Try<U>>);
    descriptor: (Lscala/Function1;Lscala/Function1;)Lscala/util/Try;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #142                         // <U:Ljava/lang/Object;>(Lscala/Function1<TT;Lscala/util/Try<TU;>;>;Lscala/Function1<Ljava/lang/Throwable;Lscala/util/Try<TU;>;>;)Lscala/util/Try<TU;>;
    MethodParameters:
      Name                           Flags
      s                              final
      f                              final

  public abstract scala.util.Either<java.lang.Throwable, T> toEither();
    descriptor: ()Lscala/util/Either;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #146                         // ()Lscala/util/Either<Ljava/lang/Throwable;TT;>;

  public abstract <U extends java.lang.Object> U fold(scala.Function1<java.lang.Throwable, U>, scala.Function1<T, U>);
    descriptor: (Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #149                         // <U:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Throwable;TU;>;Lscala/Function1<TT;TU;>;)TU;
    MethodParameters:
      Name                           Flags
      fa                             final
      fb                             final

  public scala.util.Try();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #154                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Try;
}
InnerClasses:
  public final #16= #15 of #2;            // WithFilter=class scala/util/Try$WithFilter of class scala/util/Try
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
SourceFile: "Try.scala"
RuntimeVisibleAnnotations:
  0: #11(#12=s#13)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t-b!B\u0011#\u0003C9\u0003\"B\u001c\u0001\t\u0003A\u0004\"\u0002$\u0001\r\u00039\u0005\"B&\u0001\r\u00039\u0005\"\u0002\'\u0001\r\u0003i\u0005\"\u0002-\u0001\r\u0003I\u0006\"\u00021\u0001\r\u0003\t\u0007\"\u00022\u0001\r\u0003\u0019\u0007\"B8\u0001\r\u0003\u0001\b\"B<\u0001\r\u0003A\bBB@\u0001\r\u0003\t\t\u0001C\u0004\u0002\u0016\u00011\t!a\u0006\t\u000f\u0005}\u0001\u0001\"\u0002\u0002\"\u00191\u0011q\u0005\u0001\u0003\u0003SA!\"a\u0007\u000e\u0005\u0003\u0005\u000b\u0011BA\u000f\u0011\u00199T\u0002\"\u0001\u0002,!1q/\u0004C\u0001\u0003_Aaa\\\u0007\u0005\u0002\u0005u\u0002B\u00022\u000e\t\u0003\tY\u0005C\u0004\u0002 5!\t!a\u0016\t\u000f\u0005\u001d\u0004A\"\u0001\u0002j!9\u0011Q\u0010\u0001\u0007\u0002\u0005}\u0004bBAG\u0001\u0019\u0005\u0011q\u0012\u0005\b\u0003/\u0003a\u0011AAM\u0011\u001d\ti\u000b\u0001D\u0001\u0003_Cq!a-\u0001\r\u0003\t)\fC\u0004\u0002J\u00021\t!a3\t\u000f\u0005M\u0007A\"\u0001\u0002V\u001e9\u00111\u001f\u0012\t\u0002\u0005UhAB\u0011#\u0011\u0003\t9\u0010\u0003\u00048;\u0011\u0005!q\u0001\u0005\b\u0005\u0013iB\u0011\u0001B\u0006\u0011%\u0011Y\"HA\u0001\n\u0013\u0011iBA\u0002UefT!a\t\u0013\u0002\tU$\u0018\u000e\u001c\u0006\u0002K\u0005)1oY1mC\u000e\u0001QC\u0001\u0015>\'\u0011\u0001\u0011&\f\u0019\u0011\u0005)ZS\"\u0001\u0013\n\u00051\"#AB!osJ+g\r\u0005\u0002+]%\u0011q\u0006\n\u0002\b!J|G-^2u!\t\tDG\u0004\u0002+e%\u00111\u0007J\u0001\ba\u0006\u001c7.Y4f\u0013\t)dG\u0001\u0007TKJL\u0017\r\\5{C\ndWM\u0003\u00024I\u00051A(\u001b8jiz\"\u0012!\u000f\t\u0004u\u0001YT\"\u0001\u0012\u0011\u0005qjD\u0002\u0001\u0003\u0007}\u0001!)\u0019A \u0003\u0003Q\u000b\"\u0001Q\"\u0011\u0005)\n\u0015B\u0001\"%\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"A\u000b#\n\u0005\u0015##aA!os\u0006I\u0011n\u001d$bS2,(/Z\u000b\u0002\u0011B\u0011!&S\u0005\u0003\u0015\u0012\u0012qAQ8pY\u0016\fg.A\u0005jgN+8mY3tg\u0006Iq-\u001a;Pe\u0016c7/Z\u000b\u0003\u001dB#\"aT*\u0011\u0005q\u0002F!B)\u0005\u0005\u0004\u0011&!A+\u0012\u0005m\u001a\u0005B\u0002+\u0005\t\u0003\u0007Q+A\u0004eK\u001a\fW\u000f\u001c;\u0011\u0007)2v*\u0003\u0002XI\tAAHY=oC6,g(\u0001\u0004pe\u0016c7/Z\u000b\u00035v#\"a\u00170\u0011\u0007i\u0002A\f\u0005\u0002=;\u0012)\u0011+\u0002b\u0001%\"1A+\u0002CA\u0002}\u00032A\u000b,\\\u0003\r9W\r^\u000b\u0002w\u00059am\u001c:fC\u000eDWC\u00013o)\t)\u0007\u000e\u0005\u0002+M&\u0011q\r\n\u0002\u0005+:LG\u000fC\u0003j\u000f\u0001\u0007!.A\u0001g!\u0011Q3nO7\n\u00051$#!\u0003$v]\u000e$\u0018n\u001c82!\tad\u000eB\u0003R\u000f\t\u0007q(A\u0004gY\u0006$X*\u00199\u0016\u0005E$HC\u0001:v!\rQ\u0004a\u001d\t\u0003yQ$Q!\u0015\u0005C\u0002}BQ!\u001b\u0005A\u0002Y\u0004BAK6<e\u0006\u0019Q.\u00199\u0016\u0005edHC\u0001>~!\rQ\u0004a\u001f\t\u0003yq$Q!U\u0005C\u0002}BQ![\u0005A\u0002y\u0004BAK6<w\u000691m\u001c7mK\u000e$X\u0003BA\u0002\u0003\u0013!B!!\u0002\u0002\fA!!\bAA\u0004!\ra\u0014\u0011\u0002\u0003\u0006#*\u0011\ra\u0010\u0005\b\u0003\u001bQ\u0001\u0019AA\b\u0003\t\u0001h\r\u0005\u0004+\u0003#Y\u0014qA\u0005\u0004\u0003\'!#a\u0004)beRL\u0017\r\u001c$v]\u000e$\u0018n\u001c8\u0002\r\u0019LG\u000e^3s)\rI\u0014\u0011\u0004\u0005\b\u00037Y\u0001\u0019AA\u000f\u0003\u0005\u0001\b\u0003\u0002\u0016lw!\u000b!b^5uQ\u001aKG\u000e^3s)\u0011\t\u0019#!\u0018\u0011\u0007\u0005\u0015R\"D\u0001\u0001\u0005)9\u0016\u000e\u001e5GS2$XM]\n\u0003\u001b%\"B!a\t\u0002.!9\u00111D\bA\u0002\u0005uQ\u0003BA\u0019\u0003o!B!a\r\u0002:A!!\bAA\u001b!\ra\u0014q\u0007\u0003\u0006#B\u0011\ra\u0010\u0005\u0007SB\u0001\r!a\u000f\u0011\u000b)Z7(!\u000e\u0016\t\u0005}\u0012Q\t\u000b\u0005\u0003\u0003\n9\u0005\u0005\u0003;\u0001\u0005\r\u0003c\u0001\u001f\u0002F\u0011)\u0011+\u0005b\u0001\u007f!1\u0011.\u0005a\u0001\u0003\u0013\u0002RAK6<\u0003\u0003*B!!\u0014\u0002VQ\u0019Q-a\u0014\t\r%\u0014\u0002\u0019AA)!\u0015Q3nOA*!\ra\u0014Q\u000b\u0003\u0006#J\u0011\ra\u0010\u000b\u0005\u0003G\tI\u0006C\u0004\u0002\\M\u0001\r!!\b\u0002\u0003EDq!a\u0007\r\u0001\u0004\ti\u0002K\u0002\r\u0003C\u00022AKA2\u0013\r\t)\u0007\n\u0002\u0007S:d\u0017N\\3\u0002\u0017I,7m\u001c<fe^KG\u000f[\u000b\u0005\u0003W\n\t\b\u0006\u0003\u0002n\u0005M\u0004\u0003\u0002\u001e\u0001\u0003_\u00022\u0001PA9\t\u0015\tFC1\u0001S\u0011\u001d\ti\u0001\u0006a\u0001\u0003k\u0002rAKA\t\u0003o\ni\u0007E\u00022\u0003sJ1!a\u001f7\u0005%!\u0006N]8xC\ndW-A\u0004sK\u000e|g/\u001a:\u0016\t\u0005\u0005\u0015q\u0011\u000b\u0005\u0003\u0007\u000bI\t\u0005\u0003;\u0001\u0005\u0015\u0005c\u0001\u001f\u0002\b\u0012)\u0011+\u0006b\u0001%\"9\u0011QB\u000bA\u0002\u0005-\u0005c\u0002\u0016\u0002\u0012\u0005]\u0014QQ\u0001\ti>|\u0005\u000f^5p]V\u0011\u0011\u0011\u0013\t\u0005U\u0005M5(C\u0002\u0002\u0016\u0012\u0012aa\u00149uS>t\u0017a\u00024mCR$XM\\\u000b\u0005\u00037\u000b\t\u000b\u0006\u0003\u0002\u001e\u0006\r\u0006\u0003\u0002\u001e\u0001\u0003?\u00032\u0001PAQ\t\u0015\tvC1\u0001@\u0011\u001d\t)k\u0006a\u0002\u0003O\u000b!!\u001a<\u0011\r)\nIkOAO\u0013\r\tY\u000b\n\u0002\u0011I1,7o\u001d\u0013d_2|g\u000e\n7fgN\faAZ1jY\u0016$WCAAY!\u0011Q\u0004!a\u001e\u0002\u0013Q\u0014\u0018M\\:g_JlW\u0003BA\\\u0003{#b!!/\u0002@\u0006\u0015\u0007\u0003\u0002\u001e\u0001\u0003w\u00032\u0001PA_\t\u0015\t\u0016D1\u0001@\u0011\u001d\t\t-\u0007a\u0001\u0003\u0007\f\u0011a\u001d\t\u0006U-\\\u0014\u0011\u0018\u0005\u0007Sf\u0001\r!a2\u0011\r)Z\u0017qOA]\u0003!!x.R5uQ\u0016\u0014XCAAg!\u0019Q\u0014qZA<w%\u0019\u0011\u0011\u001b\u0012\u0003\r\u0015KG\u000f[3s\u0003\u00111w\u000e\u001c3\u0016\t\u0005]\u00171\u001c\u000b\u0007\u00033\fi.a9\u0011\u0007q\nY\u000eB\u0003R7\t\u0007q\bC\u0004\u0002`n\u0001\r!!9\u0002\u0005\u0019\f\u0007C\u0002\u0016l\u0003o\nI\u000eC\u0004\u0002fn\u0001\r!a:\u0002\u0005\u0019\u0014\u0007#\u0002\u0016lw\u0005e\u0017&\u0002\u0001\u0002l\u0006=\u0018bAAwE\t9a)Y5mkJ,\u0017bAAyE\t91+^2dKN\u001c\u0018a\u0001+ssB\u0011!(H\n\u0005;%\nI\u0010\u0005\u0003\u0002|\n\u0015QBAA\u007f\u0015\u0011\tyP!\u0001\u0002\u0005%|\'B\u0001B\u0002\u0003\u0011Q\u0017M^1\n\u0007U\ni\u0010\u0006\u0002\u0002v\u0006)\u0011\r\u001d9msV!!Q\u0002B\n)\u0011\u0011yA!\u0006\u0011\ti\u0002!\u0011\u0003\t\u0004y\tMA!\u0002  \u0005\u0004y\u0004\u0002\u0003B\f?\u0011\u0005\rA!\u0007\u0002\u0003I\u0004BA\u000b,\u0003\u0012\u0005aqO]5uKJ+\u0007\u000f\\1dKR\u0011!q\u0004\t\u0005\u0005C\u00119#\u0004\u0002\u0003$)!!Q\u0005B\u0001\u0003\u0011a\u0017M\\4\n\t\t%\"1\u0005\u0002\u0007\u001f\nTWm\u0019;"
    )
  ScalaInlineInfo: length = 0x7C (unknown attribute)
   01 00 00 18 00 24 00 98 01 00 70 00 71 00 00 89
   00 8A 00 00 74 00 6C 00 00 6B 00 6C 00 00 85 00
   86 00 00 93 00 94 00 00 67 00 68 00 00 37 00 21
   00 00 60 00 61 00 00 5E 00 34 00 00 5F 00 34 00
   00 6E 00 6C 00 00 64 00 12 00 00 51 00 52 00 00
   59 00 43 01 00 42 00 43 00 00 4B 00 4C 00 00 80
   00 71 00 00 7E 00 71 00 00 90 00 91 00 00 82 00
   83 00 00 8C 00 8D 00 00 77 00 78 05
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
