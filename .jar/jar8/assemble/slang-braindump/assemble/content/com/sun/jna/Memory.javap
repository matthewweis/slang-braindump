Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/sun/jna/Memory.class
  Last modified May 29, 2022; size 11463 bytes
  SHA-256 checksum a20e3f5c5714d04dc21b50c2ca94299b2c685b5e5e00b5f9ff99fce1272ef07a
  Compiled from "Memory.java"
public class com.sun.jna.Memory extends com.sun.jna.Pointer
  minor version: 0
  major version: 50
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #7                          // com/sun/jna/Memory
  super_class: #122                       // com/sun/jna/Pointer
  interfaces: 0, fields: 5, methods: 60, attributes: 2
Constant pool:
    #1 = Fieldref           #7.#277       // com/sun/jna/Memory.HEAD:Lcom/sun/jna/Memory$LinkedReference;
    #2 = Fieldref           #7.#278       // com/sun/jna/Memory.QUEUE:Ljava/lang/ref/ReferenceQueue;
    #3 = Fieldref           #7.#279       // com/sun/jna/Memory.buffers:Lcom/sun/jna/WeakMemoryHolder;
    #4 = Methodref          #120.#280     // com/sun/jna/WeakMemoryHolder.clean:()V
    #5 = Class              #281          // com/sun/jna/Memory$LinkedReference
    #6 = Methodref          #5.#282       // com/sun/jna/Memory$LinkedReference.get:()Ljava/lang/Object;
    #7 = Class              #283          // com/sun/jna/Memory
    #8 = Methodref          #7.#284       // com/sun/jna/Memory.dispose:()V
    #9 = Methodref          #5.#285       // com/sun/jna/Memory$LinkedReference.access$200:(Lcom/sun/jna/Memory$LinkedReference;)V
   #10 = Class              #286          // java/lang/IllegalStateException
   #11 = String             #287          // the HEAD did not change
   #12 = Methodref          #10.#288      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #13 = Methodref          #118.#289     // java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
   #14 = Class              #290          // java/util/ArrayList
   #15 = Methodref          #14.#291      // java/util/ArrayList."<init>":()V
   #16 = Methodref          #14.#292      // java/util/ArrayList.add:(Ljava/lang/Object;)Z
   #17 = Methodref          #5.#293       // com/sun/jna/Memory$LinkedReference.access$300:(Lcom/sun/jna/Memory$LinkedReference;)Lcom/sun/jna/Memory$LinkedReference;
   #18 = Methodref          #14.#294      // java/util/ArrayList.size:()I
   #19 = Methodref          #14.#295      // java/util/ArrayList.get:(I)Ljava/lang/Object;
   #20 = Class              #296          // java/lang/StringBuilder
   #21 = Methodref          #20.#291      // java/lang/StringBuilder."<init>":()V
   #22 = Methodref          #20.#297      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #23 = String             #298          //  vs.
   #24 = Methodref          #20.#299      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #25 = String             #300          //  at index
   #26 = Methodref          #20.#301      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #27 = Methodref          #20.#302      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #28 = Methodref          #5.#303       // com/sun/jna/Memory$LinkedReference.access$400:(Lcom/sun/jna/Memory$LinkedReference;)Lcom/sun/jna/Memory$LinkedReference;
   #29 = Methodref          #122.#291     // com/sun/jna/Pointer."<init>":()V
   #30 = Fieldref           #7.#304       // com/sun/jna/Memory.size:J
   #31 = Class              #305          // java/lang/IllegalArgumentException
   #32 = String             #306          // Allocation size must be greater than zero
   #33 = Methodref          #31.#288      // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #34 = Methodref          #7.#307       // com/sun/jna/Memory.malloc:(J)J
   #35 = Fieldref           #7.#308       // com/sun/jna/Memory.peer:J
   #36 = Class              #309          // java/lang/OutOfMemoryError
   #37 = String             #310          // Cannot allocate
   #38 = Methodref          #20.#311      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
   #39 = String             #312          //  bytes
   #40 = Methodref          #36.#288      // java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
   #41 = Methodref          #5.#313       // com/sun/jna/Memory$LinkedReference.track:(Lcom/sun/jna/Memory;)Lcom/sun/jna/Memory$LinkedReference;
   #42 = Fieldref           #7.#314       // com/sun/jna/Memory.reference:Lcom/sun/jna/Memory$LinkedReference;
   #43 = Methodref          #7.#315       // com/sun/jna/Memory.size:()J
   #44 = Methodref          #7.#316       // com/sun/jna/Memory.share:(JJ)Lcom/sun/jna/Pointer;
   #45 = Methodref          #7.#317       // com/sun/jna/Memory.boundsCheck:(JJ)V
   #46 = Class              #318          // com/sun/jna/Memory$SharedMemory
   #47 = Methodref          #46.#319      // com/sun/jna/Memory$SharedMemory."<init>":(Lcom/sun/jna/Memory;JJ)V
   #48 = String             #320          // Byte boundary must be positive:
   #49 = Long               -1l
   #51 = String             #321          // Insufficient memory to align to the requested boundary
   #52 = String             #322          // Byte boundary must be a power of two
   #53 = Methodref          #7.#323       // com/sun/jna/Memory.free:(J)V
   #54 = Methodref          #7.#324       // com/sun/jna/Memory.clear:(J)V
   #55 = Class              #325          // java/lang/IndexOutOfBoundsException
   #56 = String             #326          // Invalid offset:
   #57 = Methodref          #55.#288      // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   #58 = String             #327          // Bounds exceeds available space : size=
   #59 = String             #328          // , offset=
   #60 = Methodref          #122.#329     // com/sun/jna/Pointer.read:(J[BII)V
   #61 = Long               2l
   #63 = Methodref          #122.#330     // com/sun/jna/Pointer.read:(J[SII)V
   #64 = Fieldref           #331.#332     // com/sun/jna/Native.WCHAR_SIZE:I
   #65 = Methodref          #122.#333     // com/sun/jna/Pointer.read:(J[CII)V
   #66 = Long               4l
   #68 = Methodref          #122.#334     // com/sun/jna/Pointer.read:(J[III)V
   #69 = Long               8l
   #71 = Methodref          #122.#335     // com/sun/jna/Pointer.read:(J[JII)V
   #72 = Methodref          #122.#336     // com/sun/jna/Pointer.read:(J[FII)V
   #73 = Methodref          #122.#337     // com/sun/jna/Pointer.read:(J[DII)V
   #74 = Fieldref           #331.#338     // com/sun/jna/Native.POINTER_SIZE:I
   #75 = Methodref          #122.#339     // com/sun/jna/Pointer.read:(J[Lcom/sun/jna/Pointer;II)V
   #76 = Methodref          #122.#340     // com/sun/jna/Pointer.write:(J[BII)V
   #77 = Methodref          #122.#341     // com/sun/jna/Pointer.write:(J[SII)V
   #78 = Methodref          #122.#342     // com/sun/jna/Pointer.write:(J[CII)V
   #79 = Methodref          #122.#343     // com/sun/jna/Pointer.write:(J[III)V
   #80 = Methodref          #122.#344     // com/sun/jna/Pointer.write:(J[JII)V
   #81 = Methodref          #122.#345     // com/sun/jna/Pointer.write:(J[FII)V
   #82 = Methodref          #122.#346     // com/sun/jna/Pointer.write:(J[DII)V
   #83 = Methodref          #122.#347     // com/sun/jna/Pointer.write:(J[Lcom/sun/jna/Pointer;II)V
   #84 = Methodref          #122.#348     // com/sun/jna/Pointer.getByte:(J)B
   #85 = Methodref          #122.#349     // com/sun/jna/Pointer.getChar:(J)C
   #86 = Methodref          #122.#350     // com/sun/jna/Pointer.getShort:(J)S
   #87 = Methodref          #122.#351     // com/sun/jna/Pointer.getInt:(J)I
   #88 = Methodref          #122.#352     // com/sun/jna/Pointer.getLong:(J)J
   #89 = Methodref          #122.#353     // com/sun/jna/Pointer.getFloat:(J)F
   #90 = Methodref          #122.#354     // com/sun/jna/Pointer.getDouble:(J)D
   #91 = Methodref          #122.#355     // com/sun/jna/Pointer.getPointer:(J)Lcom/sun/jna/Pointer;
   #92 = Methodref          #7.#356       // com/sun/jna/Memory.shareReferenceIfInBounds:(Lcom/sun/jna/Pointer;)Lcom/sun/jna/Pointer;
   #93 = Methodref          #122.#357     // com/sun/jna/Pointer.getByteBuffer:(JJ)Ljava/nio/ByteBuffer;
   #94 = Methodref          #120.#358     // com/sun/jna/WeakMemoryHolder.put:(Ljava/lang/Object;Lcom/sun/jna/Memory;)V
   #95 = Methodref          #122.#359     // com/sun/jna/Pointer.getString:(JLjava/lang/String;)Ljava/lang/String;
   #96 = Methodref          #122.#360     // com/sun/jna/Pointer.getWideString:(J)Ljava/lang/String;
   #97 = Methodref          #122.#361     // com/sun/jna/Pointer.setByte:(JB)V
   #98 = Methodref          #122.#362     // com/sun/jna/Pointer.setChar:(JC)V
   #99 = Methodref          #122.#363     // com/sun/jna/Pointer.setShort:(JS)V
  #100 = Methodref          #122.#364     // com/sun/jna/Pointer.setInt:(JI)V
  #101 = Methodref          #122.#365     // com/sun/jna/Pointer.setLong:(JJ)V
  #102 = Methodref          #122.#366     // com/sun/jna/Pointer.setFloat:(JF)V
  #103 = Methodref          #122.#367     // com/sun/jna/Pointer.setDouble:(JD)V
  #104 = Methodref          #122.#368     // com/sun/jna/Pointer.setPointer:(JLcom/sun/jna/Pointer;)V
  #105 = Methodref          #331.#369     // com/sun/jna/Native.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B
  #106 = Methodref          #122.#370     // com/sun/jna/Pointer.setString:(JLjava/lang/String;Ljava/lang/String;)V
  #107 = Methodref          #371.#372     // java/lang/String.length:()I
  #108 = Methodref          #122.#373     // com/sun/jna/Pointer.setWideString:(JLjava/lang/String;)V
  #109 = String             #374          // allocated@0x
  #110 = Methodref          #375.#376     // java/lang/Long.toHexString:(J)Ljava/lang/String;
  #111 = String             #377          //  (
  #112 = String             #378          //  bytes)
  #113 = Methodref          #331.#323     // com/sun/jna/Native.free:(J)V
  #114 = Methodref          #331.#307     // com/sun/jna/Native.malloc:(J)J
  #115 = Methodref          #7.#379       // com/sun/jna/Memory.dump:(JI)Ljava/lang/String;
  #116 = Fieldref           #122.#308     // com/sun/jna/Pointer.peer:J
  #117 = Methodref          #7.#380       // com/sun/jna/Memory.share:(J)Lcom/sun/jna/Pointer;
  #118 = Class              #381          // java/lang/ref/ReferenceQueue
  #119 = Methodref          #118.#291     // java/lang/ref/ReferenceQueue."<init>":()V
  #120 = Class              #382          // com/sun/jna/WeakMemoryHolder
  #121 = Methodref          #120.#291     // com/sun/jna/WeakMemoryHolder."<init>":()V
  #122 = Class              #383          // com/sun/jna/Pointer
  #123 = Utf8               SharedMemory
  #124 = Utf8               InnerClasses
  #125 = Utf8               LinkedReference
  #126 = Utf8               QUEUE
  #127 = Utf8               Ljava/lang/ref/ReferenceQueue;
  #128 = Utf8               Signature
  #129 = Utf8               Ljava/lang/ref/ReferenceQueue<Lcom/sun/jna/Memory;>;
  #130 = Utf8               HEAD
  #131 = Utf8               Lcom/sun/jna/Memory$LinkedReference;
  #132 = Utf8               buffers
  #133 = Utf8               Lcom/sun/jna/WeakMemoryHolder;
  #134 = Utf8               reference
  #135 = Utf8               size
  #136 = Utf8               J
  #137 = Utf8               purge
  #138 = Utf8               ()V
  #139 = Utf8               Code
  #140 = Utf8               LineNumberTable
  #141 = Utf8               disposeAll
  #142 = Utf8               LocalVariableTable
  #143 = Utf8               memory
  #144 = Utf8               Lcom/sun/jna/Memory;
  #145 = Utf8               entry
  #146 = Utf8               stale
  #147 = Utf8               StackMapTable
  #148 = Class              #384          // java/lang/Object
  #149 = Class              #281          // com/sun/jna/Memory$LinkedReference
  #150 = Class              #283          // com/sun/jna/Memory
  #151 = Class              #385          // java/lang/Throwable
  #152 = Utf8               integrityCheck
  #153 = Utf8               ()I
  #154 = Utf8               entries
  #155 = Utf8               Ljava/util/ArrayList;
  #156 = Utf8               index
  #157 = Utf8               I
  #158 = Utf8               LocalVariableTypeTable
  #159 = Utf8               Ljava/util/ArrayList<Lcom/sun/jna/Memory$LinkedReference;>;
  #160 = Class              #290          // java/util/ArrayList
  #161 = Utf8               <init>
  #162 = Utf8               (J)V
  #163 = Utf8               this
  #164 = Utf8               share
  #165 = Utf8               (J)Lcom/sun/jna/Pointer;
  #166 = Utf8               offset
  #167 = Utf8               (JJ)Lcom/sun/jna/Pointer;
  #168 = Utf8               sz
  #169 = Utf8               align
  #170 = Utf8               (I)Lcom/sun/jna/Memory;
  #171 = Utf8               newPeer
  #172 = Utf8               newSize
  #173 = Utf8               mask
  #174 = Utf8               i
  #175 = Utf8               byteBoundary
  #176 = Utf8               finalize
  #177 = Utf8               dispose
  #178 = Utf8               clear
  #179 = Utf8               valid
  #180 = Utf8               ()Z
  #181 = Utf8               ()J
  #182 = Utf8               boundsCheck
  #183 = Utf8               (JJ)V
  #184 = Utf8               msg
  #185 = Utf8               Ljava/lang/String;
  #186 = Utf8               off
  #187 = Utf8               read
  #188 = Utf8               (J[BII)V
  #189 = Utf8               bOff
  #190 = Utf8               buf
  #191 = Utf8               [B
  #192 = Utf8               length
  #193 = Utf8               (J[SII)V
  #194 = Utf8               [S
  #195 = Utf8               (J[CII)V
  #196 = Utf8               [C
  #197 = Utf8               (J[III)V
  #198 = Utf8               [I
  #199 = Utf8               (J[JII)V
  #200 = Utf8               [J
  #201 = Utf8               (J[FII)V
  #202 = Utf8               [F
  #203 = Utf8               (J[DII)V
  #204 = Utf8               [D
  #205 = Utf8               (J[Lcom/sun/jna/Pointer;II)V
  #206 = Utf8               [Lcom/sun/jna/Pointer;
  #207 = Utf8               write
  #208 = Utf8               getByte
  #209 = Utf8               (J)B
  #210 = Utf8               getChar
  #211 = Utf8               (J)C
  #212 = Utf8               getShort
  #213 = Utf8               (J)S
  #214 = Utf8               getInt
  #215 = Utf8               (J)I
  #216 = Utf8               getLong
  #217 = Utf8               (J)J
  #218 = Utf8               getFloat
  #219 = Utf8               (J)F
  #220 = Utf8               getDouble
  #221 = Utf8               (J)D
  #222 = Utf8               getPointer
  #223 = Utf8               getByteBuffer
  #224 = Utf8               (JJ)Ljava/nio/ByteBuffer;
  #225 = Utf8               b
  #226 = Utf8               Ljava/nio/ByteBuffer;
  #227 = Utf8               getString
  #228 = Utf8               (JLjava/lang/String;)Ljava/lang/String;
  #229 = Utf8               encoding
  #230 = Utf8               getWideString
  #231 = Utf8               (J)Ljava/lang/String;
  #232 = Utf8               setByte
  #233 = Utf8               (JB)V
  #234 = Utf8               value
  #235 = Utf8               B
  #236 = Utf8               setChar
  #237 = Utf8               (JC)V
  #238 = Utf8               C
  #239 = Utf8               setShort
  #240 = Utf8               (JS)V
  #241 = Utf8               S
  #242 = Utf8               setInt
  #243 = Utf8               (JI)V
  #244 = Utf8               setLong
  #245 = Utf8               setFloat
  #246 = Utf8               (JF)V
  #247 = Utf8               F
  #248 = Utf8               setDouble
  #249 = Utf8               (JD)V
  #250 = Utf8               D
  #251 = Utf8               setPointer
  #252 = Utf8               (JLcom/sun/jna/Pointer;)V
  #253 = Utf8               Lcom/sun/jna/Pointer;
  #254 = Utf8               setString
  #255 = Utf8               (JLjava/lang/String;Ljava/lang/String;)V
  #256 = Utf8               setWideString
  #257 = Utf8               (JLjava/lang/String;)V
  #258 = Utf8               toString
  #259 = Utf8               ()Ljava/lang/String;
  #260 = Utf8               free
  #261 = Utf8               p
  #262 = Utf8               malloc
  #263 = Utf8               dump
  #264 = Utf8               shareReferenceIfInBounds
  #265 = Utf8               (Lcom/sun/jna/Pointer;)Lcom/sun/jna/Pointer;
  #266 = Utf8               target
  #267 = Utf8               access$000
  #268 = Utf8               ()Ljava/lang/ref/ReferenceQueue;
  #269 = Utf8               access$100
  #270 = Utf8               ()Lcom/sun/jna/Memory$LinkedReference;
  #271 = Utf8               access$102
  #272 = Utf8               (Lcom/sun/jna/Memory$LinkedReference;)Lcom/sun/jna/Memory$LinkedReference;
  #273 = Utf8               x0
  #274 = Utf8               <clinit>
  #275 = Utf8               SourceFile
  #276 = Utf8               Memory.java
  #277 = NameAndType        #130:#131     // HEAD:Lcom/sun/jna/Memory$LinkedReference;
  #278 = NameAndType        #126:#127     // QUEUE:Ljava/lang/ref/ReferenceQueue;
  #279 = NameAndType        #132:#133     // buffers:Lcom/sun/jna/WeakMemoryHolder;
  #280 = NameAndType        #386:#138     // clean:()V
  #281 = Utf8               com/sun/jna/Memory$LinkedReference
  #282 = NameAndType        #387:#388     // get:()Ljava/lang/Object;
  #283 = Utf8               com/sun/jna/Memory
  #284 = NameAndType        #177:#138     // dispose:()V
  #285 = NameAndType        #389:#390     // access$200:(Lcom/sun/jna/Memory$LinkedReference;)V
  #286 = Utf8               java/lang/IllegalStateException
  #287 = Utf8               the HEAD did not change
  #288 = NameAndType        #161:#391     // "<init>":(Ljava/lang/String;)V
  #289 = NameAndType        #392:#393     // poll:()Ljava/lang/ref/Reference;
  #290 = Utf8               java/util/ArrayList
  #291 = NameAndType        #161:#138     // "<init>":()V
  #292 = NameAndType        #394:#395     // add:(Ljava/lang/Object;)Z
  #293 = NameAndType        #396:#272     // access$300:(Lcom/sun/jna/Memory$LinkedReference;)Lcom/sun/jna/Memory$LinkedReference;
  #294 = NameAndType        #135:#153     // size:()I
  #295 = NameAndType        #387:#397     // get:(I)Ljava/lang/Object;
  #296 = Utf8               java/lang/StringBuilder
  #297 = NameAndType        #398:#399     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #298 = Utf8                vs.
  #299 = NameAndType        #398:#400     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #300 = Utf8                at index
  #301 = NameAndType        #398:#401     // append:(I)Ljava/lang/StringBuilder;
  #302 = NameAndType        #258:#259     // toString:()Ljava/lang/String;
  #303 = NameAndType        #402:#272     // access$400:(Lcom/sun/jna/Memory$LinkedReference;)Lcom/sun/jna/Memory$LinkedReference;
  #304 = NameAndType        #135:#136     // size:J
  #305 = Utf8               java/lang/IllegalArgumentException
  #306 = Utf8               Allocation size must be greater than zero
  #307 = NameAndType        #262:#217     // malloc:(J)J
  #308 = NameAndType        #403:#136     // peer:J
  #309 = Utf8               java/lang/OutOfMemoryError
  #310 = Utf8               Cannot allocate
  #311 = NameAndType        #398:#404     // append:(J)Ljava/lang/StringBuilder;
  #312 = Utf8                bytes
  #313 = NameAndType        #405:#406     // track:(Lcom/sun/jna/Memory;)Lcom/sun/jna/Memory$LinkedReference;
  #314 = NameAndType        #134:#131     // reference:Lcom/sun/jna/Memory$LinkedReference;
  #315 = NameAndType        #135:#181     // size:()J
  #316 = NameAndType        #164:#167     // share:(JJ)Lcom/sun/jna/Pointer;
  #317 = NameAndType        #182:#183     // boundsCheck:(JJ)V
  #318 = Utf8               com/sun/jna/Memory$SharedMemory
  #319 = NameAndType        #161:#407     // "<init>":(Lcom/sun/jna/Memory;JJ)V
  #320 = Utf8               Byte boundary must be positive:
  #321 = Utf8               Insufficient memory to align to the requested boundary
  #322 = Utf8               Byte boundary must be a power of two
  #323 = NameAndType        #260:#162     // free:(J)V
  #324 = NameAndType        #178:#162     // clear:(J)V
  #325 = Utf8               java/lang/IndexOutOfBoundsException
  #326 = Utf8               Invalid offset:
  #327 = Utf8               Bounds exceeds available space : size=
  #328 = Utf8               , offset=
  #329 = NameAndType        #187:#188     // read:(J[BII)V
  #330 = NameAndType        #187:#193     // read:(J[SII)V
  #331 = Class              #408          // com/sun/jna/Native
  #332 = NameAndType        #409:#157     // WCHAR_SIZE:I
  #333 = NameAndType        #187:#195     // read:(J[CII)V
  #334 = NameAndType        #187:#197     // read:(J[III)V
  #335 = NameAndType        #187:#199     // read:(J[JII)V
  #336 = NameAndType        #187:#201     // read:(J[FII)V
  #337 = NameAndType        #187:#203     // read:(J[DII)V
  #338 = NameAndType        #410:#157     // POINTER_SIZE:I
  #339 = NameAndType        #187:#205     // read:(J[Lcom/sun/jna/Pointer;II)V
  #340 = NameAndType        #207:#188     // write:(J[BII)V
  #341 = NameAndType        #207:#193     // write:(J[SII)V
  #342 = NameAndType        #207:#195     // write:(J[CII)V
  #343 = NameAndType        #207:#197     // write:(J[III)V
  #344 = NameAndType        #207:#199     // write:(J[JII)V
  #345 = NameAndType        #207:#201     // write:(J[FII)V
  #346 = NameAndType        #207:#203     // write:(J[DII)V
  #347 = NameAndType        #207:#205     // write:(J[Lcom/sun/jna/Pointer;II)V
  #348 = NameAndType        #208:#209     // getByte:(J)B
  #349 = NameAndType        #210:#211     // getChar:(J)C
  #350 = NameAndType        #212:#213     // getShort:(J)S
  #351 = NameAndType        #214:#215     // getInt:(J)I
  #352 = NameAndType        #216:#217     // getLong:(J)J
  #353 = NameAndType        #218:#219     // getFloat:(J)F
  #354 = NameAndType        #220:#221     // getDouble:(J)D
  #355 = NameAndType        #222:#165     // getPointer:(J)Lcom/sun/jna/Pointer;
  #356 = NameAndType        #264:#265     // shareReferenceIfInBounds:(Lcom/sun/jna/Pointer;)Lcom/sun/jna/Pointer;
  #357 = NameAndType        #223:#224     // getByteBuffer:(JJ)Ljava/nio/ByteBuffer;
  #358 = NameAndType        #411:#412     // put:(Ljava/lang/Object;Lcom/sun/jna/Memory;)V
  #359 = NameAndType        #227:#228     // getString:(JLjava/lang/String;)Ljava/lang/String;
  #360 = NameAndType        #230:#231     // getWideString:(J)Ljava/lang/String;
  #361 = NameAndType        #232:#233     // setByte:(JB)V
  #362 = NameAndType        #236:#237     // setChar:(JC)V
  #363 = NameAndType        #239:#240     // setShort:(JS)V
  #364 = NameAndType        #242:#243     // setInt:(JI)V
  #365 = NameAndType        #244:#183     // setLong:(JJ)V
  #366 = NameAndType        #245:#246     // setFloat:(JF)V
  #367 = NameAndType        #248:#249     // setDouble:(JD)V
  #368 = NameAndType        #251:#252     // setPointer:(JLcom/sun/jna/Pointer;)V
  #369 = NameAndType        #413:#414     // getBytes:(Ljava/lang/String;Ljava/lang/String;)[B
  #370 = NameAndType        #254:#255     // setString:(JLjava/lang/String;Ljava/lang/String;)V
  #371 = Class              #415          // java/lang/String
  #372 = NameAndType        #192:#153     // length:()I
  #373 = NameAndType        #256:#257     // setWideString:(JLjava/lang/String;)V
  #374 = Utf8               allocated@0x
  #375 = Class              #416          // java/lang/Long
  #376 = NameAndType        #417:#231     // toHexString:(J)Ljava/lang/String;
  #377 = Utf8                (
  #378 = Utf8                bytes)
  #379 = NameAndType        #263:#418     // dump:(JI)Ljava/lang/String;
  #380 = NameAndType        #164:#165     // share:(J)Lcom/sun/jna/Pointer;
  #381 = Utf8               java/lang/ref/ReferenceQueue
  #382 = Utf8               com/sun/jna/WeakMemoryHolder
  #383 = Utf8               com/sun/jna/Pointer
  #384 = Utf8               java/lang/Object
  #385 = Utf8               java/lang/Throwable
  #386 = Utf8               clean
  #387 = Utf8               get
  #388 = Utf8               ()Ljava/lang/Object;
  #389 = Utf8               access$200
  #390 = Utf8               (Lcom/sun/jna/Memory$LinkedReference;)V
  #391 = Utf8               (Ljava/lang/String;)V
  #392 = Utf8               poll
  #393 = Utf8               ()Ljava/lang/ref/Reference;
  #394 = Utf8               add
  #395 = Utf8               (Ljava/lang/Object;)Z
  #396 = Utf8               access$300
  #397 = Utf8               (I)Ljava/lang/Object;
  #398 = Utf8               append
  #399 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #400 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #401 = Utf8               (I)Ljava/lang/StringBuilder;
  #402 = Utf8               access$400
  #403 = Utf8               peer
  #404 = Utf8               (J)Ljava/lang/StringBuilder;
  #405 = Utf8               track
  #406 = Utf8               (Lcom/sun/jna/Memory;)Lcom/sun/jna/Memory$LinkedReference;
  #407 = Utf8               (Lcom/sun/jna/Memory;JJ)V
  #408 = Utf8               com/sun/jna/Native
  #409 = Utf8               WCHAR_SIZE
  #410 = Utf8               POINTER_SIZE
  #411 = Utf8               put
  #412 = Utf8               (Ljava/lang/Object;Lcom/sun/jna/Memory;)V
  #413 = Utf8               getBytes
  #414 = Utf8               (Ljava/lang/String;Ljava/lang/String;)[B
  #415 = Utf8               java/lang/String
  #416 = Utf8               java/lang/Long
  #417 = Utf8               toHexString
  #418 = Utf8               (JI)Ljava/lang/String;
{
  private static java.lang.ref.ReferenceQueue<com.sun.jna.Memory> QUEUE;
    descriptor: Ljava/lang/ref/ReferenceQueue;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Signature: #129                         // Ljava/lang/ref/ReferenceQueue<Lcom/sun/jna/Memory;>;

  private static com.sun.jna.Memory$LinkedReference HEAD;
    descriptor: Lcom/sun/jna/Memory$LinkedReference;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static final com.sun.jna.WeakMemoryHolder buffers;
    descriptor: Lcom/sun/jna/WeakMemoryHolder;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private final com.sun.jna.Memory$LinkedReference reference;
    descriptor: Lcom/sun/jna/Memory$LinkedReference;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  protected long size;
    descriptor: J
    flags: (0x0004) ACC_PROTECTED

  public static void purge();
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #3                  // Field buffers:Lcom/sun/jna/WeakMemoryHolder;
         3: invokevirtual #4                  // Method com/sun/jna/WeakMemoryHolder.clean:()V
         6: return
      LineNumberTable:
        line 135: 0
        line 136: 6

  public static void disposeAll();
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=5, args_size=0
         0: ldc           #5                  // class com/sun/jna/Memory$LinkedReference
         2: dup
         3: astore_0
         4: monitorenter
         5: getstatic     #1                  // Field HEAD:Lcom/sun/jna/Memory$LinkedReference;
         8: dup
         9: astore_1
        10: ifnull        60
        13: getstatic     #1                  // Field HEAD:Lcom/sun/jna/Memory$LinkedReference;
        16: invokevirtual #6                  // Method com/sun/jna/Memory$LinkedReference.get:()Ljava/lang/Object;
        19: checkcast     #7                  // class com/sun/jna/Memory
        22: astore_2
        23: aload_2
        24: ifnull        34
        27: aload_2
        28: invokevirtual #8                  // Method dispose:()V
        31: goto          40
        34: getstatic     #1                  // Field HEAD:Lcom/sun/jna/Memory$LinkedReference;
        37: invokestatic  #9                  // Method com/sun/jna/Memory$LinkedReference.access$200:(Lcom/sun/jna/Memory$LinkedReference;)V
        40: getstatic     #1                  // Field HEAD:Lcom/sun/jna/Memory$LinkedReference;
        43: aload_1
        44: if_acmpne     57
        47: new           #10                 // class java/lang/IllegalStateException
        50: dup
        51: ldc           #11                 // String the HEAD did not change
        53: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        56: athrow
        57: goto          5
        60: aload_0
        61: monitorexit
        62: goto          70
        65: astore_3
        66: aload_0
        67: monitorexit
        68: aload_3
        69: athrow
        70: getstatic     #2                  // Field QUEUE:Ljava/lang/ref/ReferenceQueue;
        73: dup
        74: astore_0
        75: monitorenter
        76: getstatic     #2                  // Field QUEUE:Ljava/lang/ref/ReferenceQueue;
        79: invokevirtual #13                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
        82: checkcast     #5                  // class com/sun/jna/Memory$LinkedReference
        85: dup
        86: astore_1
        87: ifnull        97
        90: aload_1
        91: invokestatic  #9                  // Method com/sun/jna/Memory$LinkedReference.access$200:(Lcom/sun/jna/Memory$LinkedReference;)V
        94: goto          76
        97: aload_0
        98: monitorexit
        99: goto          109
       102: astore        4
       104: aload_0
       105: monitorexit
       106: aload         4
       108: athrow
       109: return
      Exception table:
         from    to  target type
             5    62    65   any
            65    68    65   any
            76    99   102   any
           102   106   102   any
      LineNumberTable:
        line 140: 0
        line 143: 5
        line 144: 13
        line 146: 23
        line 148: 27
        line 150: 34
        line 153: 40
        line 154: 47
        line 156: 57
        line 157: 60
        line 159: 70
        line 163: 76
        line 164: 90
        line 166: 97
        line 167: 109
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      34     2 memory   Lcom/sun/jna/Memory;
           10      50     1 entry   Lcom/sun/jna/Memory$LinkedReference;
           87      10     1 stale   Lcom/sun/jna/Memory$LinkedReference;
      StackMapTable: number_of_entries = 11
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ class java/lang/Object ]
        frame_type = 253 /* append */
          offset_delta = 28
          locals = [ class com/sun/jna/Memory$LinkedReference, class com/sun/jna/Memory ]
        frame_type = 5 /* same */
        frame_type = 250 /* chop */
          offset_delta = 16
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ class java/lang/Object ]
        frame_type = 20 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 6

  static int integrityCheck();
    descriptor: ()I
    flags: (0x0008) ACC_STATIC
    Code:
      stack=5, locals=5, args_size=0
         0: ldc           #5                  // class com/sun/jna/Memory$LinkedReference
         2: dup
         3: astore_0
         4: monitorenter
         5: getstatic     #1                  // Field HEAD:Lcom/sun/jna/Memory$LinkedReference;
         8: ifnonnull     15
        11: iconst_0
        12: aload_0
        13: monitorexit
        14: ireturn
        15: new           #14                 // class java/util/ArrayList
        18: dup
        19: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
        22: astore_1
        23: getstatic     #1                  // Field HEAD:Lcom/sun/jna/Memory$LinkedReference;
        26: astore_2
        27: aload_2
        28: ifnull        45
        31: aload_1
        32: aload_2
        33: invokevirtual #16                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
        36: pop
        37: aload_2
        38: invokestatic  #17                 // Method com/sun/jna/Memory$LinkedReference.access$300:(Lcom/sun/jna/Memory$LinkedReference;)Lcom/sun/jna/Memory$LinkedReference;
        41: astore_2
        42: goto          27
        45: aload_1
        46: invokevirtual #18                 // Method java/util/ArrayList.size:()I
        49: iconst_1
        50: isub
        51: istore_3
        52: aload_1
        53: iload_3
        54: invokevirtual #19                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
        57: checkcast     #5                  // class com/sun/jna/Memory$LinkedReference
        60: astore_2
        61: aload_2
        62: ifnull        129
        65: aload_1
        66: iload_3
        67: invokevirtual #19                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
        70: aload_2
        71: if_acmpeq     118
        74: new           #10                 // class java/lang/IllegalStateException
        77: dup
        78: new           #20                 // class java/lang/StringBuilder
        81: dup
        82: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
        85: aload_1
        86: iload_3
        87: invokevirtual #19                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
        90: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        93: ldc           #23                 // String  vs.
        95: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        98: aload_2
        99: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       102: ldc           #25                 // String  at index
       104: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       107: iload_3
       108: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       111: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       114: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       117: athrow
       118: aload_2
       119: invokestatic  #28                 // Method com/sun/jna/Memory$LinkedReference.access$400:(Lcom/sun/jna/Memory$LinkedReference;)Lcom/sun/jna/Memory$LinkedReference;
       122: astore_2
       123: iinc          3, -1
       126: goto          61
       129: aload_1
       130: invokevirtual #18                 // Method java/util/ArrayList.size:()I
       133: aload_0
       134: monitorexit
       135: ireturn
       136: astore        4
       138: aload_0
       139: monitorexit
       140: aload         4
       142: athrow
      Exception table:
         from    to  target type
             5    14   136   any
            15   135   136   any
           136   140   136   any
      LineNumberTable:
        line 175: 0
        line 176: 5
        line 177: 11
        line 180: 15
        line 181: 23
        line 183: 27
        line 184: 31
        line 185: 37
        line 188: 45
        line 189: 52
        line 191: 61
        line 192: 65
        line 193: 74
        line 196: 118
        line 197: 123
        line 200: 129
        line 201: 136
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23     113     1 entries   Ljava/util/ArrayList;
           27     109     2 entry   Lcom/sun/jna/Memory$LinkedReference;
           52      84     3 index   I
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           23     113     1 entries   Ljava/util/ArrayList<Lcom/sun/jna/Memory$LinkedReference;>;
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ class java/lang/Object ]
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ class java/util/ArrayList, class com/sun/jna/Memory$LinkedReference ]
        frame_type = 17 /* same */
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ int ]
        frame_type = 56 /* same */
        frame_type = 10 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class java/lang/Object ]
          stack = [ class java/lang/Throwable ]

  public com.sun.jna.Memory(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: invokespecial #29                 // Method com/sun/jna/Pointer."<init>":()V
         4: aload_0
         5: lload_1
         6: putfield      #30                 // Field size:J
         9: lload_1
        10: lconst_0
        11: lcmp
        12: ifgt          25
        15: new           #31                 // class java/lang/IllegalArgumentException
        18: dup
        19: ldc           #32                 // String Allocation size must be greater than zero
        21: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        24: athrow
        25: aload_0
        26: lload_1
        27: invokestatic  #34                 // Method malloc:(J)J
        30: putfield      #35                 // Field peer:J
        33: aload_0
        34: getfield      #35                 // Field peer:J
        37: lconst_0
        38: lcmp
        39: ifne          74
        42: new           #36                 // class java/lang/OutOfMemoryError
        45: dup
        46: new           #20                 // class java/lang/StringBuilder
        49: dup
        50: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
        53: ldc           #37                 // String Cannot allocate
        55: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: lload_1
        59: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        62: ldc           #39                 // String  bytes
        64: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        67: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        70: invokespecial #40                 // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
        73: athrow
        74: aload_0
        75: aload_0
        76: invokestatic  #41                 // Method com/sun/jna/Memory$LinkedReference.track:(Lcom/sun/jna/Memory;)Lcom/sun/jna/Memory$LinkedReference;
        79: putfield      #42                 // Field reference:Lcom/sun/jna/Memory$LinkedReference;
        82: return
      LineNumberTable:
        line 236: 0
        line 237: 4
        line 238: 9
        line 239: 15
        line 241: 25
        line 242: 33
        line 243: 42
        line 245: 74
        line 246: 82
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Lcom/sun/jna/Memory;
            0      83     1  size   J
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class com/sun/jna/Memory, long ]
          stack = []
        frame_type = 48 /* same */

  protected com.sun.jna.Memory();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #29                 // Method com/sun/jna/Pointer."<init>":()V
         4: aload_0
         5: aconst_null
         6: putfield      #42                 // Field reference:Lcom/sun/jna/Memory$LinkedReference;
         9: return
      LineNumberTable:
        line 249: 0
        line 251: 4
        line 252: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcom/sun/jna/Memory;

  public com.sun.jna.Pointer share(long);
    descriptor: (J)Lcom/sun/jna/Pointer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: aload_0
         3: invokevirtual #43                 // Method size:()J
         6: lload_1
         7: lsub
         8: invokevirtual #44                 // Method share:(JJ)Lcom/sun/jna/Pointer;
        11: areturn
      LineNumberTable:
        line 262: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcom/sun/jna/Memory;
            0      12     1 offset   J

  public com.sun.jna.Pointer share(long, long);
    descriptor: (JJ)Lcom/sun/jna/Pointer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=5, args_size=3
         0: aload_0
         1: lload_1
         2: lload_3
         3: invokevirtual #45                 // Method boundsCheck:(JJ)V
         6: new           #46                 // class com/sun/jna/Memory$SharedMemory
         9: dup
        10: aload_0
        11: lload_1
        12: lload_3
        13: invokespecial #47                 // Method com/sun/jna/Memory$SharedMemory."<init>":(Lcom/sun/jna/Memory;JJ)V
        16: areturn
      LineNumberTable:
        line 274: 0
        line 275: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcom/sun/jna/Memory;
            0      17     1 offset   J
            0      17     3    sz   J

  public com.sun.jna.Memory align(int);
    descriptor: (I)Lcom/sun/jna/Memory;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=9, args_size=2
         0: iload_1
         1: ifgt          31
         4: new           #31                 // class java/lang/IllegalArgumentException
         7: dup
         8: new           #20                 // class java/lang/StringBuilder
        11: dup
        12: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
        15: ldc           #48                 // String Byte boundary must be positive:
        17: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: iload_1
        21: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        24: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        27: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        30: athrow
        31: iconst_0
        32: istore_2
        33: iload_2
        34: bipush        32
        36: if_icmpge     138
        39: iload_1
        40: iconst_1
        41: iload_2
        42: ishl
        43: if_icmpne     132
        46: iload_1
        47: i2l
        48: lconst_1
        49: lsub
        50: ldc2_w        #49                 // long -1l
        53: lxor
        54: lstore_3
        55: aload_0
        56: getfield      #35                 // Field peer:J
        59: lload_3
        60: land
        61: aload_0
        62: getfield      #35                 // Field peer:J
        65: lcmp
        66: ifeq          130
        69: aload_0
        70: getfield      #35                 // Field peer:J
        73: iload_1
        74: i2l
        75: ladd
        76: lconst_1
        77: lsub
        78: lload_3
        79: land
        80: lstore        5
        82: aload_0
        83: getfield      #35                 // Field peer:J
        86: aload_0
        87: getfield      #30                 // Field size:J
        90: ladd
        91: lload         5
        93: lsub
        94: lstore        7
        96: lload         7
        98: lconst_0
        99: lcmp
       100: ifgt          113
       103: new           #31                 // class java/lang/IllegalArgumentException
       106: dup
       107: ldc           #51                 // String Insufficient memory to align to the requested boundary
       109: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       112: athrow
       113: aload_0
       114: lload         5
       116: aload_0
       117: getfield      #35                 // Field peer:J
       120: lsub
       121: lload         7
       123: invokevirtual #44                 // Method share:(JJ)Lcom/sun/jna/Pointer;
       126: checkcast     #7                  // class com/sun/jna/Memory
       129: areturn
       130: aload_0
       131: areturn
       132: iinc          2, 1
       135: goto          33
       138: new           #31                 // class java/lang/IllegalArgumentException
       141: dup
       142: ldc           #52                 // String Byte boundary must be a power of two
       144: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       147: athrow
      LineNumberTable:
        line 287: 0
        line 288: 4
        line 290: 31
        line 291: 39
        line 292: 46
        line 294: 55
        line 295: 69
        line 296: 82
        line 297: 96
        line 298: 103
        line 300: 113
        line 302: 130
        line 290: 132
        line 305: 138
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           82      48     5 newPeer   J
           96      34     7 newSize   J
           55      77     3  mask   J
           33     105     2     i   I
            0     148     0  this   Lcom/sun/jna/Memory;
            0     148     1 byteBoundary   I
      StackMapTable: number_of_entries = 6
        frame_type = 31 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 254 /* append */
          offset_delta = 79
          locals = [ long, long, long ]
        frame_type = 249 /* chop */
          offset_delta = 16
        frame_type = 250 /* chop */
          offset_delta = 1
        frame_type = 250 /* chop */
          offset_delta = 5

  protected void finalize();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #8                  // Method dispose:()V
         4: return
      LineNumberTable:
        line 311: 0
        line 312: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/sun/jna/Memory;

  protected synchronized void dispose();
    descriptor: ()V
    flags: (0x0024) ACC_PROTECTED, ACC_SYNCHRONIZED
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #35                 // Field peer:J
         4: lconst_0
         5: lcmp
         6: ifne          10
         9: return
        10: aload_0
        11: getfield      #35                 // Field peer:J
        14: invokestatic  #53                 // Method free:(J)V
        17: aload_0
        18: lconst_0
        19: putfield      #35                 // Field peer:J
        22: aload_0
        23: getfield      #42                 // Field reference:Lcom/sun/jna/Memory$LinkedReference;
        26: invokestatic  #9                  // Method com/sun/jna/Memory$LinkedReference.access$200:(Lcom/sun/jna/Memory$LinkedReference;)V
        29: goto          47
        32: astore_1
        33: aload_0
        34: lconst_0
        35: putfield      #35                 // Field peer:J
        38: aload_0
        39: getfield      #42                 // Field reference:Lcom/sun/jna/Memory$LinkedReference;
        42: invokestatic  #9                  // Method com/sun/jna/Memory$LinkedReference.access$200:(Lcom/sun/jna/Memory$LinkedReference;)V
        45: aload_1
        46: athrow
        47: return
      Exception table:
         from    to  target type
            10    17    32   any
      LineNumberTable:
        line 316: 0
        line 318: 9
        line 322: 10
        line 324: 17
        line 327: 22
        line 328: 29
        line 324: 32
        line 327: 38
        line 328: 45
        line 329: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lcom/sun/jna/Memory;
      StackMapTable: number_of_entries = 3
        frame_type = 10 /* same */
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 14 /* same */

  public void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: getfield      #30                 // Field size:J
         5: invokevirtual #54                 // Method clear:(J)V
         8: return
      LineNumberTable:
        line 333: 0
        line 334: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/sun/jna/Memory;

  public boolean valid();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #35                 // Field peer:J
         4: lconst_0
         5: lcmp
         6: ifeq          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: ireturn
      LineNumberTable:
        line 338: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcom/sun/jna/Memory;
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public long size();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #30                 // Field size:J
         4: lreturn
      LineNumberTable:
        line 342: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/sun/jna/Memory;

  protected void boundsCheck(long, long);
    descriptor: (JJ)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=5, locals=6, args_size=3
         0: lload_1
         1: lconst_0
         2: lcmp
         3: ifge          33
         6: new           #55                 // class java/lang/IndexOutOfBoundsException
         9: dup
        10: new           #20                 // class java/lang/StringBuilder
        13: dup
        14: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
        17: ldc           #56                 // String Invalid offset:
        19: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: lload_1
        23: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        26: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: invokespecial #57                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        32: athrow
        33: lload_1
        34: lload_3
        35: ladd
        36: aload_0
        37: getfield      #30                 // Field size:J
        40: lcmp
        41: ifle          89
        44: new           #20                 // class java/lang/StringBuilder
        47: dup
        48: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
        51: ldc           #58                 // String Bounds exceeds available space : size=
        53: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        56: aload_0
        57: getfield      #30                 // Field size:J
        60: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        63: ldc           #59                 // String , offset=
        65: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        68: lload_1
        69: lload_3
        70: ladd
        71: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        74: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        77: astore        5
        79: new           #55                 // class java/lang/IndexOutOfBoundsException
        82: dup
        83: aload         5
        85: invokespecial #57                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        88: athrow
        89: return
      LineNumberTable:
        line 351: 0
        line 352: 6
        line 354: 33
        line 355: 44
        line 357: 79
        line 359: 89
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           79      10     5   msg   Ljava/lang/String;
            0      90     0  this   Lcom/sun/jna/Memory;
            0      90     1   off   J
            0      90     3    sz   J
      StackMapTable: number_of_entries = 2
        frame_type = 33 /* same */
        frame_type = 55 /* same */

  public void read(long, byte[], int, int);
    descriptor: (J[BII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: lconst_1
         6: lmul
         7: invokevirtual #45                 // Method boundsCheck:(JJ)V
        10: aload_0
        11: lload_1
        12: aload_3
        13: iload         4
        15: iload         5
        17: invokespecial #60                 // Method com/sun/jna/Pointer.read:(J[BII)V
        20: return
      LineNumberTable:
        line 375: 0
        line 376: 10
        line 377: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcom/sun/jna/Memory;
            0      21     1  bOff   J
            0      21     3   buf   [B
            0      21     4 index   I
            0      21     5 length   I

  public void read(long, short[], int, int);
    descriptor: (J[SII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #61                 // long 2l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #63                 // Method com/sun/jna/Pointer.read:(J[SII)V
        22: return
      LineNumberTable:
        line 389: 0
        line 390: 12
        line 391: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [S
            0      23     4 index   I
            0      23     5 length   I

  public void read(long, char[], int, int);
    descriptor: (J[CII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: getstatic     #64                 // Field com/sun/jna/Native.WCHAR_SIZE:I
         7: imul
         8: i2l
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #65                 // Method com/sun/jna/Pointer.read:(J[CII)V
        22: return
      LineNumberTable:
        line 403: 0
        line 404: 12
        line 405: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [C
            0      23     4 index   I
            0      23     5 length   I

  public void read(long, int[], int, int);
    descriptor: (J[III)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #66                 // long 4l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #68                 // Method com/sun/jna/Pointer.read:(J[III)V
        22: return
      LineNumberTable:
        line 417: 0
        line 418: 12
        line 419: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [I
            0      23     4 index   I
            0      23     5 length   I

  public void read(long, long[], int, int);
    descriptor: (J[JII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #69                 // long 8l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #71                 // Method com/sun/jna/Pointer.read:(J[JII)V
        22: return
      LineNumberTable:
        line 431: 0
        line 432: 12
        line 433: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [J
            0      23     4 index   I
            0      23     5 length   I

  public void read(long, float[], int, int);
    descriptor: (J[FII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #66                 // long 4l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #72                 // Method com/sun/jna/Pointer.read:(J[FII)V
        22: return
      LineNumberTable:
        line 445: 0
        line 446: 12
        line 447: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [F
            0      23     4 index   I
            0      23     5 length   I

  public void read(long, double[], int, int);
    descriptor: (J[DII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #69                 // long 8l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #73                 // Method com/sun/jna/Pointer.read:(J[DII)V
        22: return
      LineNumberTable:
        line 459: 0
        line 460: 12
        line 461: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [D
            0      23     4 index   I
            0      23     5 length   I

  public void read(long, com.sun.jna.Pointer[], int, int);
    descriptor: (J[Lcom/sun/jna/Pointer;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: getstatic     #74                 // Field com/sun/jna/Native.POINTER_SIZE:I
         7: imul
         8: i2l
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #75                 // Method com/sun/jna/Pointer.read:(J[Lcom/sun/jna/Pointer;II)V
        22: return
      LineNumberTable:
        line 473: 0
        line 474: 12
        line 475: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [Lcom/sun/jna/Pointer;
            0      23     4 index   I
            0      23     5 length   I

  public void write(long, byte[], int, int);
    descriptor: (J[BII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: lconst_1
         6: lmul
         7: invokevirtual #45                 // Method boundsCheck:(JJ)V
        10: aload_0
        11: lload_1
        12: aload_3
        13: iload         4
        15: iload         5
        17: invokespecial #76                 // Method com/sun/jna/Pointer.write:(J[BII)V
        20: return
      LineNumberTable:
        line 491: 0
        line 492: 10
        line 493: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcom/sun/jna/Memory;
            0      21     1  bOff   J
            0      21     3   buf   [B
            0      21     4 index   I
            0      21     5 length   I

  public void write(long, short[], int, int);
    descriptor: (J[SII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #61                 // long 2l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #77                 // Method com/sun/jna/Pointer.write:(J[SII)V
        22: return
      LineNumberTable:
        line 505: 0
        line 506: 12
        line 507: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [S
            0      23     4 index   I
            0      23     5 length   I

  public void write(long, char[], int, int);
    descriptor: (J[CII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: getstatic     #64                 // Field com/sun/jna/Native.WCHAR_SIZE:I
         7: imul
         8: i2l
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #78                 // Method com/sun/jna/Pointer.write:(J[CII)V
        22: return
      LineNumberTable:
        line 519: 0
        line 520: 12
        line 521: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [C
            0      23     4 index   I
            0      23     5 length   I

  public void write(long, int[], int, int);
    descriptor: (J[III)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #66                 // long 4l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #79                 // Method com/sun/jna/Pointer.write:(J[III)V
        22: return
      LineNumberTable:
        line 533: 0
        line 534: 12
        line 535: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [I
            0      23     4 index   I
            0      23     5 length   I

  public void write(long, long[], int, int);
    descriptor: (J[JII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #69                 // long 8l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #80                 // Method com/sun/jna/Pointer.write:(J[JII)V
        22: return
      LineNumberTable:
        line 547: 0
        line 548: 12
        line 549: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [J
            0      23     4 index   I
            0      23     5 length   I

  public void write(long, float[], int, int);
    descriptor: (J[FII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #66                 // long 4l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #81                 // Method com/sun/jna/Pointer.write:(J[FII)V
        22: return
      LineNumberTable:
        line 561: 0
        line 562: 12
        line 563: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [F
            0      23     4 index   I
            0      23     5 length   I

  public void write(long, double[], int, int);
    descriptor: (J[DII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: i2l
         5: ldc2_w        #69                 // long 8l
         8: lmul
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #82                 // Method com/sun/jna/Pointer.write:(J[DII)V
        22: return
      LineNumberTable:
        line 575: 0
        line 576: 12
        line 577: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [D
            0      23     4 index   I
            0      23     5 length   I

  public void write(long, com.sun.jna.Pointer[], int, int);
    descriptor: (J[Lcom/sun/jna/Pointer;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=5
         0: aload_0
         1: lload_1
         2: iload         5
         4: getstatic     #74                 // Field com/sun/jna/Native.POINTER_SIZE:I
         7: imul
         8: i2l
         9: invokevirtual #45                 // Method boundsCheck:(JJ)V
        12: aload_0
        13: lload_1
        14: aload_3
        15: iload         4
        17: iload         5
        19: invokespecial #83                 // Method com/sun/jna/Pointer.write:(J[Lcom/sun/jna/Pointer;II)V
        22: return
      LineNumberTable:
        line 589: 0
        line 590: 12
        line 591: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/sun/jna/Memory;
            0      23     1  bOff   J
            0      23     3   buf   [Lcom/sun/jna/Pointer;
            0      23     4 index   I
            0      23     5 length   I

  public byte getByte(long);
    descriptor: (J)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: lconst_1
         3: invokevirtual #45                 // Method boundsCheck:(JJ)V
         6: aload_0
         7: lload_1
         8: invokespecial #84                 // Method com/sun/jna/Pointer.getByte:(J)B
        11: ireturn
      LineNumberTable:
        line 607: 0
        line 608: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcom/sun/jna/Memory;
            0      12     1 offset   J

  public char getChar(long);
    descriptor: (J)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: getstatic     #64                 // Field com/sun/jna/Native.WCHAR_SIZE:I
         5: i2l
         6: invokevirtual #45                 // Method boundsCheck:(JJ)V
         9: aload_0
        10: lload_1
        11: invokespecial #85                 // Method com/sun/jna/Pointer.getChar:(J)C
        14: ireturn
      LineNumberTable:
        line 621: 0
        line 622: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcom/sun/jna/Memory;
            0      15     1 offset   J

  public short getShort(long);
    descriptor: (J)S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: ldc2_w        #61                 // long 2l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: invokespecial #86                 // Method com/sun/jna/Pointer.getShort:(J)S
        13: ireturn
      LineNumberTable:
        line 635: 0
        line 636: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/sun/jna/Memory;
            0      14     1 offset   J

  public int getInt(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: ldc2_w        #66                 // long 4l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: invokespecial #87                 // Method com/sun/jna/Pointer.getInt:(J)I
        13: ireturn
      LineNumberTable:
        line 649: 0
        line 650: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/sun/jna/Memory;
            0      14     1 offset   J

  public long getLong(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: ldc2_w        #69                 // long 8l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: invokespecial #88                 // Method com/sun/jna/Pointer.getLong:(J)J
        13: lreturn
      LineNumberTable:
        line 663: 0
        line 664: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/sun/jna/Memory;
            0      14     1 offset   J

  public float getFloat(long);
    descriptor: (J)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: ldc2_w        #66                 // long 4l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: invokespecial #89                 // Method com/sun/jna/Pointer.getFloat:(J)F
        13: freturn
      LineNumberTable:
        line 677: 0
        line 678: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/sun/jna/Memory;
            0      14     1 offset   J

  public double getDouble(long);
    descriptor: (J)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: ldc2_w        #69                 // long 8l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: invokespecial #90                 // Method com/sun/jna/Pointer.getDouble:(J)D
        13: dreturn
      LineNumberTable:
        line 691: 0
        line 692: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/sun/jna/Memory;
            0      14     1 offset   J

  public com.sun.jna.Pointer getPointer(long);
    descriptor: (J)Lcom/sun/jna/Pointer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: getstatic     #74                 // Field com/sun/jna/Native.POINTER_SIZE:I
         5: i2l
         6: invokevirtual #45                 // Method boundsCheck:(JJ)V
         9: aload_0
        10: aload_0
        11: lload_1
        12: invokespecial #91                 // Method com/sun/jna/Pointer.getPointer:(J)Lcom/sun/jna/Pointer;
        15: invokespecial #92                 // Method shareReferenceIfInBounds:(Lcom/sun/jna/Pointer;)Lcom/sun/jna/Pointer;
        18: areturn
      LineNumberTable:
        line 705: 0
        line 706: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcom/sun/jna/Memory;
            0      19     1 offset   J

  public java.nio.ByteBuffer getByteBuffer(long, long);
    descriptor: (JJ)Ljava/nio/ByteBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=3
         0: aload_0
         1: lload_1
         2: lload_3
         3: invokevirtual #45                 // Method boundsCheck:(JJ)V
         6: aload_0
         7: lload_1
         8: lload_3
         9: invokespecial #93                 // Method com/sun/jna/Pointer.getByteBuffer:(JJ)Ljava/nio/ByteBuffer;
        12: astore        5
        14: getstatic     #3                  // Field buffers:Lcom/sun/jna/WeakMemoryHolder;
        17: aload         5
        19: aload_0
        20: invokevirtual #94                 // Method com/sun/jna/WeakMemoryHolder.put:(Ljava/lang/Object;Lcom/sun/jna/Memory;)V
        23: aload         5
        25: areturn
      LineNumberTable:
        line 723: 0
        line 724: 6
        line 727: 14
        line 728: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lcom/sun/jna/Memory;
            0      26     1 offset   J
            0      26     3 length   J
           14      12     5     b   Ljava/nio/ByteBuffer;

  public java.lang.String getString(long, java.lang.String);
    descriptor: (JLjava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_0
         1: lload_1
         2: lconst_0
         3: invokevirtual #45                 // Method boundsCheck:(JJ)V
         6: aload_0
         7: lload_1
         8: aload_3
         9: invokespecial #95                 // Method com/sun/jna/Pointer.getString:(JLjava/lang/String;)Ljava/lang/String;
        12: areturn
      LineNumberTable:
        line 734: 0
        line 735: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcom/sun/jna/Memory;
            0      13     1 offset   J
            0      13     3 encoding   Ljava/lang/String;

  public java.lang.String getWideString(long);
    descriptor: (J)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: lconst_0
         3: invokevirtual #45                 // Method boundsCheck:(JJ)V
         6: aload_0
         7: lload_1
         8: invokespecial #96                 // Method com/sun/jna/Pointer.getWideString:(J)Ljava/lang/String;
        11: areturn
      LineNumberTable:
        line 741: 0
        line 742: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcom/sun/jna/Memory;
            0      12     1 offset   J

  public void setByte(long, byte);
    descriptor: (JB)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_0
         1: lload_1
         2: lconst_1
         3: invokevirtual #45                 // Method boundsCheck:(JJ)V
         6: aload_0
         7: lload_1
         8: iload_3
         9: invokespecial #97                 // Method com/sun/jna/Pointer.setByte:(JB)V
        12: return
      LineNumberTable:
        line 759: 0
        line 760: 6
        line 761: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcom/sun/jna/Memory;
            0      13     1 offset   J
            0      13     3 value   B

  public void setChar(long, char);
    descriptor: (JC)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_0
         1: lload_1
         2: getstatic     #64                 // Field com/sun/jna/Native.WCHAR_SIZE:I
         5: i2l
         6: invokevirtual #45                 // Method boundsCheck:(JJ)V
         9: aload_0
        10: lload_1
        11: iload_3
        12: invokespecial #98                 // Method com/sun/jna/Pointer.setChar:(JC)V
        15: return
      LineNumberTable:
        line 773: 0
        line 774: 9
        line 775: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/sun/jna/Memory;
            0      16     1 offset   J
            0      16     3 value   C

  public void setShort(long, short);
    descriptor: (JS)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_0
         1: lload_1
         2: ldc2_w        #61                 // long 2l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: iload_3
        11: invokespecial #99                 // Method com/sun/jna/Pointer.setShort:(JS)V
        14: return
      LineNumberTable:
        line 787: 0
        line 788: 8
        line 789: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcom/sun/jna/Memory;
            0      15     1 offset   J
            0      15     3 value   S

  public void setInt(long, int);
    descriptor: (JI)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_0
         1: lload_1
         2: ldc2_w        #66                 // long 4l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: iload_3
        11: invokespecial #100                // Method com/sun/jna/Pointer.setInt:(JI)V
        14: return
      LineNumberTable:
        line 801: 0
        line 802: 8
        line 803: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcom/sun/jna/Memory;
            0      15     1 offset   J
            0      15     3 value   I

  public void setLong(long, long);
    descriptor: (JJ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=3
         0: aload_0
         1: lload_1
         2: ldc2_w        #69                 // long 8l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: lload_3
        11: invokespecial #101                // Method com/sun/jna/Pointer.setLong:(JJ)V
        14: return
      LineNumberTable:
        line 815: 0
        line 816: 8
        line 817: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcom/sun/jna/Memory;
            0      15     1 offset   J
            0      15     3 value   J

  public void setFloat(long, float);
    descriptor: (JF)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_0
         1: lload_1
         2: ldc2_w        #66                 // long 4l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: fload_3
        11: invokespecial #102                // Method com/sun/jna/Pointer.setFloat:(JF)V
        14: return
      LineNumberTable:
        line 829: 0
        line 830: 8
        line 831: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcom/sun/jna/Memory;
            0      15     1 offset   J
            0      15     3 value   F

  public void setDouble(long, double);
    descriptor: (JD)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=3
         0: aload_0
         1: lload_1
         2: ldc2_w        #69                 // long 8l
         5: invokevirtual #45                 // Method boundsCheck:(JJ)V
         8: aload_0
         9: lload_1
        10: dload_3
        11: invokespecial #103                // Method com/sun/jna/Pointer.setDouble:(JD)V
        14: return
      LineNumberTable:
        line 843: 0
        line 844: 8
        line 845: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcom/sun/jna/Memory;
            0      15     1 offset   J
            0      15     3 value   D

  public void setPointer(long, com.sun.jna.Pointer);
    descriptor: (JLcom/sun/jna/Pointer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_0
         1: lload_1
         2: getstatic     #74                 // Field com/sun/jna/Native.POINTER_SIZE:I
         5: i2l
         6: invokevirtual #45                 // Method boundsCheck:(JJ)V
         9: aload_0
        10: lload_1
        11: aload_3
        12: invokespecial #104                // Method com/sun/jna/Pointer.setPointer:(JLcom/sun/jna/Pointer;)V
        15: return
      LineNumberTable:
        line 857: 0
        line 858: 9
        line 859: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/sun/jna/Memory;
            0      16     1 offset   J
            0      16     3 value   Lcom/sun/jna/Pointer;

  public void setString(long, java.lang.String, java.lang.String);
    descriptor: (JLjava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=5, args_size=4
         0: aload_0
         1: lload_1
         2: aload_3
         3: aload         4
         5: invokestatic  #105                // Method com/sun/jna/Native.getBytes:(Ljava/lang/String;Ljava/lang/String;)[B
         8: arraylength
         9: i2l
        10: lconst_1
        11: ladd
        12: invokevirtual #45                 // Method boundsCheck:(JJ)V
        15: aload_0
        16: lload_1
        17: aload_3
        18: aload         4
        20: invokespecial #106                // Method com/sun/jna/Pointer.setString:(JLjava/lang/String;Ljava/lang/String;)V
        23: return
      LineNumberTable:
        line 863: 0
        line 864: 15
        line 865: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lcom/sun/jna/Memory;
            0      24     1 offset   J
            0      24     3 value   Ljava/lang/String;
            0      24     4 encoding   Ljava/lang/String;

  public void setWideString(long, java.lang.String);
    descriptor: (JLjava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=4, args_size=3
         0: aload_0
         1: lload_1
         2: aload_3
         3: invokevirtual #107                // Method java/lang/String.length:()I
         6: i2l
         7: lconst_1
         8: ladd
         9: getstatic     #64                 // Field com/sun/jna/Native.WCHAR_SIZE:I
        12: i2l
        13: lmul
        14: invokevirtual #45                 // Method boundsCheck:(JJ)V
        17: aload_0
        18: lload_1
        19: aload_3
        20: invokespecial #108                // Method com/sun/jna/Pointer.setWideString:(JLjava/lang/String;)V
        23: return
      LineNumberTable:
        line 869: 0
        line 870: 17
        line 871: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lcom/sun/jna/Memory;
            0      24     1 offset   J
            0      24     3 value   Ljava/lang/String;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #20                 // class java/lang/StringBuilder
         3: dup
         4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
         7: ldc           #109                // String allocated@0x
         9: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        12: aload_0
        13: getfield      #35                 // Field peer:J
        16: invokestatic  #110                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
        19: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: ldc           #111                // String  (
        24: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: aload_0
        28: getfield      #30                 // Field size:J
        31: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        34: ldc           #112                // String  bytes)
        36: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        39: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        42: areturn
      LineNumberTable:
        line 875: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcom/sun/jna/Memory;

  protected static void free(long);
    descriptor: (J)V
    flags: (0x000c) ACC_PROTECTED, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=1
         0: lload_0
         1: lconst_0
         2: lcmp
         3: ifeq          10
         6: lload_0
         7: invokestatic  #113                // Method com/sun/jna/Native.free:(J)V
        10: return
      LineNumberTable:
        line 880: 0
        line 881: 6
        line 883: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     p   J
      StackMapTable: number_of_entries = 1
        frame_type = 10 /* same */

  protected static long malloc(long);
    descriptor: (J)J
    flags: (0x000c) ACC_PROTECTED, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: lload_0
         1: invokestatic  #114                // Method com/sun/jna/Native.malloc:(J)J
         4: lreturn
      LineNumberTable:
        line 886: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  size   J

  public java.lang.String dump();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: lconst_0
         2: aload_0
         3: invokevirtual #43                 // Method size:()J
         6: l2i
         7: invokevirtual #115                // Method dump:(JI)Ljava/lang/String;
        10: areturn
      LineNumberTable:
        line 891: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcom/sun/jna/Memory;

  private com.sun.jna.Pointer shareReferenceIfInBounds(com.sun.jna.Pointer);
    descriptor: (Lcom/sun/jna/Pointer;)Lcom/sun/jna/Pointer;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=4, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_1
         7: getfield      #116                // Field com/sun/jna/Pointer.peer:J
        10: aload_0
        11: getfield      #35                 // Field peer:J
        14: lsub
        15: lstore_2
        16: lload_2
        17: lconst_0
        18: lcmp
        19: iflt          37
        22: lload_2
        23: aload_0
        24: getfield      #30                 // Field size:J
        27: lcmp
        28: ifge          37
        31: aload_0
        32: lload_2
        33: invokevirtual #117                // Method share:(J)Lcom/sun/jna/Pointer;
        36: areturn
        37: aload_1
        38: areturn
      LineNumberTable:
        line 905: 0
        line 906: 4
        line 908: 6
        line 909: 16
        line 910: 31
        line 912: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lcom/sun/jna/Memory;
            0      39     1 target   Lcom/sun/jna/Pointer;
           16      23     2 offset   J
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 252 /* append */
          offset_delta = 30
          locals = [ long ]

  static java.lang.ref.ReferenceQueue access$000();
    descriptor: ()Ljava/lang/ref/ReferenceQueue;
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #2                  // Field QUEUE:Ljava/lang/ref/ReferenceQueue;
         3: areturn
      LineNumberTable:
        line 51: 0

  static com.sun.jna.Memory$LinkedReference access$100();
    descriptor: ()Lcom/sun/jna/Memory$LinkedReference;
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #1                  // Field HEAD:Lcom/sun/jna/Memory$LinkedReference;
         3: areturn
      LineNumberTable:
        line 51: 0

  static com.sun.jna.Memory$LinkedReference access$102(com.sun.jna.Memory$LinkedReference);
    descriptor: (Lcom/sun/jna/Memory$LinkedReference;)Lcom/sun/jna/Memory$LinkedReference;
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: dup
         2: putstatic     #1                  // Field HEAD:Lcom/sun/jna/Memory$LinkedReference;
         5: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0    x0   Lcom/sun/jna/Memory$LinkedReference;

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #118                // class java/lang/ref/ReferenceQueue
         3: dup
         4: invokespecial #119                // Method java/lang/ref/ReferenceQueue."<init>":()V
         7: putstatic     #2                  // Field QUEUE:Ljava/lang/ref/ReferenceQueue;
        10: new           #120                // class com/sun/jna/WeakMemoryHolder
        13: dup
        14: invokespecial #121                // Method com/sun/jna/WeakMemoryHolder."<init>":()V
        17: putstatic     #3                  // Field buffers:Lcom/sun/jna/WeakMemoryHolder;
        20: return
      LineNumberTable:
        line 53: 0
        line 129: 10
}
SourceFile: "Memory.java"
InnerClasses:
  private #123= #46 of #7;                // SharedMemory=class com/sun/jna/Memory$SharedMemory of class com/sun/jna/Memory
  private static #125= #5 of #7;          // LinkedReference=class com/sun/jna/Memory$LinkedReference of class com/sun/jna/Memory
