Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/sys/process/ProcessBuilderImpl$Simple.class
  Last modified May 29, 2022; size 6487 bytes
  SHA-256 checksum 5e41b95f16957a9ad8a69d0c2a98440a17d3f7da65fd592c2cb2b307ca257457
  Compiled from "ProcessBuilderImpl.scala"
public class scala.sys.process.ProcessBuilderImpl$Simple extends scala.sys.process.ProcessBuilderImpl$AbstractBuilder
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/sys/process/ProcessBuilderImpl$Simple
  super_class: #4                         // scala/sys/process/ProcessBuilderImpl$AbstractBuilder
  interfaces: 0, fields: 1, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               scala/sys/process/ProcessBuilderImpl$Simple
    #2 = Class              #1            // scala/sys/process/ProcessBuilderImpl$Simple
    #3 = Utf8               scala/sys/process/ProcessBuilderImpl$AbstractBuilder
    #4 = Class              #3            // scala/sys/process/ProcessBuilderImpl$AbstractBuilder
    #5 = Utf8               ProcessBuilderImpl.scala
    #6 = Utf8               java/lang/ProcessBuilder$Redirect
    #7 = Class              #6            // java/lang/ProcessBuilder$Redirect
    #8 = Utf8               java/lang/ProcessBuilder
    #9 = Class              #8            // java/lang/ProcessBuilder
   #10 = Utf8               Redirect
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/sys/process/ProcessBuilderImpl
   #17 = Class              #16           // scala/sys/process/ProcessBuilderImpl
   #18 = Utf8               AbstractBuilder
   #19 = Utf8               Simple
   #20 = Utf8               scala/sys/process/ProcessImpl$SimpleProcess
   #21 = Class              #20           // scala/sys/process/ProcessImpl$SimpleProcess
   #22 = Utf8               scala/sys/process/ProcessImpl
   #23 = Class              #22           // scala/sys/process/ProcessImpl
   #24 = Utf8               SimpleProcess
   #25 = Utf8               scala/sys/process/ProcessImpl$Spawn$
   #26 = Class              #25           // scala/sys/process/ProcessImpl$Spawn$
   #27 = Utf8               Spawn$
   #28 = Utf8               scala/sys/process/ProcessImpl$Spawn$$anon$1
   #29 = Class              #28           // scala/sys/process/ProcessImpl$Spawn$$anon$1
   #30 = Utf8               p
   #31 = Utf8               Ljava/lang/ProcessBuilder;
   #32 = Utf8               run
   #33 = Utf8               (Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
   #34 = Utf8               io
   #35 = Utf8               scala/sys/process/ProcessIO
   #36 = Class              #35           // scala/sys/process/ProcessIO
   #37 = Utf8               writeInput
   #38 = Utf8               ()Lscala/Function1;
   #39 = NameAndType        #37:#38       // writeInput:()Lscala/Function1;
   #40 = Methodref          #36.#39       // scala/sys/process/ProcessIO.writeInput:()Lscala/Function1;
   #41 = Utf8               scala/sys/process/BasicIO$
   #42 = Class              #41           // scala/sys/process/BasicIO$
   #43 = Utf8               MODULE$
   #44 = Utf8               Lscala/sys/process/BasicIO$;
   #45 = NameAndType        #43:#44       // MODULE$:Lscala/sys/process/BasicIO$;
   #46 = Fieldref           #42.#45       // scala/sys/process/BasicIO$.MODULE$:Lscala/sys/process/BasicIO$;
   #47 = Utf8               connectToStdIn
   #48 = NameAndType        #47:#38       // connectToStdIn:()Lscala/Function1;
   #49 = Methodref          #42.#48       // scala/sys/process/BasicIO$.connectToStdIn:()Lscala/Function1;
   #50 = NameAndType        #30:#31       // p:Ljava/lang/ProcessBuilder;
   #51 = Fieldref           #2.#50        // scala/sys/process/ProcessBuilderImpl$Simple.p:Ljava/lang/ProcessBuilder;
   #52 = Utf8               INHERIT
   #53 = Utf8               Ljava/lang/ProcessBuilder$Redirect;
   #54 = NameAndType        #52:#53       // INHERIT:Ljava/lang/ProcessBuilder$Redirect;
   #55 = Fieldref           #7.#54        // java/lang/ProcessBuilder$Redirect.INHERIT:Ljava/lang/ProcessBuilder$Redirect;
   #56 = Utf8               redirectInput
   #57 = Utf8               (Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
   #58 = NameAndType        #56:#57       // redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
   #59 = Methodref          #9.#58        // java/lang/ProcessBuilder.redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
   #60 = Utf8               start
   #61 = Utf8               ()Ljava/lang/Process;
   #62 = NameAndType        #60:#61       // start:()Ljava/lang/Process;
   #63 = Methodref          #9.#62        // java/lang/ProcessBuilder.start:()Ljava/lang/Process;
   #64 = Utf8               connectNoOp
   #65 = NameAndType        #64:#38       // connectNoOp:()Lscala/Function1;
   #66 = Methodref          #42.#65       // scala/sys/process/BasicIO$.connectNoOp:()Lscala/Function1;
   #67 = Utf8               scala/sys/process/Process$
   #68 = Class              #67           // scala/sys/process/Process$
   #69 = Utf8               Lscala/sys/process/Process$;
   #70 = NameAndType        #43:#69       // MODULE$:Lscala/sys/process/Process$;
   #71 = Fieldref           #68.#70       // scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
   #72 = Utf8               Spawn
   #73 = Utf8               ()Lscala/sys/process/ProcessImpl$Spawn$;
   #74 = NameAndType        #72:#73       // Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
   #75 = Methodref          #68.#74       // scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
   #76 = Utf8               Simple-input
   #77 = String             #76           // Simple-input
   #78 = Utf8               ()V
   #79 = MethodType         #78           //  ()V
   #80 = Utf8               $anonfun$run$2
   #81 = Utf8               (Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
   #82 = NameAndType        #80:#81       // $anonfun$run$2:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
   #83 = Methodref          #2.#82        // scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$2:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
   #84 = MethodHandle       6:#83         // REF_invokeStatic scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$2:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
   #85 = Integer            1
   #86 = Utf8               java/lang/invoke/LambdaMetafactory
   #87 = Class              #86           // java/lang/invoke/LambdaMetafactory
   #88 = Utf8               altMetafactory
   #89 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #90 = NameAndType        #88:#89       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #91 = Methodref          #87.#90       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #92 = MethodHandle       6:#91         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #93 = Utf8               apply$mcV$sp
   #94 = Utf8               (Lscala/sys/process/ProcessIO;Ljava/lang/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
   #95 = NameAndType        #93:#94       // apply$mcV$sp:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
   #96 = InvokeDynamic      #0:#95        // #0:apply$mcV$sp:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
   #97 = Utf8               <init>
   #98 = Utf8               (Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
   #99 = NameAndType        #97:#98       // "<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
  #100 = Methodref          #29.#99       // scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
  #101 = Utf8               java/lang/StringBuilder
  #102 = Class              #101          // java/lang/StringBuilder
  #103 = Integer            7
  #104 = Utf8               (I)V
  #105 = NameAndType        #97:#104      // "<init>":(I)V
  #106 = Methodref          #102.#105     // java/lang/StringBuilder."<init>":(I)V
  #107 = Utf8               append
  #108 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #109 = NameAndType        #107:#108     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #110 = Methodref          #102.#109     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #111 = Utf8               -spawn-
  #112 = String             #111          // -spawn-
  #113 = Utf8               java/lang/Thread
  #114 = Class              #113          // java/lang/Thread
  #115 = Utf8               getName
  #116 = Utf8               ()Ljava/lang/String;
  #117 = NameAndType        #115:#116     // getName:()Ljava/lang/String;
  #118 = Methodref          #114.#117     // java/lang/Thread.getName:()Ljava/lang/String;
  #119 = Utf8               toString
  #120 = NameAndType        #119:#116     // toString:()Ljava/lang/String;
  #121 = Methodref          #102.#120     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #122 = Utf8               setName
  #123 = Utf8               (Ljava/lang/String;)V
  #124 = NameAndType        #122:#123     // setName:(Ljava/lang/String;)V
  #125 = Methodref          #114.#124     // java/lang/Thread.setName:(Ljava/lang/String;)V
  #126 = Utf8               setDaemon
  #127 = Utf8               (Z)V
  #128 = NameAndType        #126:#127     // setDaemon:(Z)V
  #129 = Methodref          #114.#128     // java/lang/Thread.setDaemon:(Z)V
  #130 = NameAndType        #60:#78       // start:()V
  #131 = Methodref          #114.#130     // java/lang/Thread.start:()V
  #132 = Utf8               Simple-output
  #133 = String             #132          // Simple-output
  #134 = Utf8               daemonizeThreads
  #135 = Utf8               ()Z
  #136 = NameAndType        #134:#135     // daemonizeThreads:()Z
  #137 = Methodref          #36.#136      // scala/sys/process/ProcessIO.daemonizeThreads:()Z
  #138 = Utf8               $anonfun$run$3
  #139 = NameAndType        #138:#81      // $anonfun$run$3:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
  #140 = Methodref          #2.#139       // scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$3:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
  #141 = MethodHandle       6:#140        // REF_invokeStatic scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$3:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
  #142 = InvokeDynamic      #1:#95        // #1:apply$mcV$sp:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #143 = Utf8               redirectErrorStream
  #144 = NameAndType        #143:#135     // redirectErrorStream:()Z
  #145 = Methodref          #9.#144       // java/lang/ProcessBuilder.redirectErrorStream:()Z
  #146 = Utf8               scala/package$
  #147 = Class              #146          // scala/package$
  #148 = Utf8               Lscala/package$;
  #149 = NameAndType        #43:#148      // MODULE$:Lscala/package$;
  #150 = Fieldref           #147.#149     // scala/package$.MODULE$:Lscala/package$;
  #151 = Utf8               Nil
  #152 = Utf8               ()Lscala/collection/immutable/Nil$;
  #153 = NameAndType        #151:#152     // Nil:()Lscala/collection/immutable/Nil$;
  #154 = Methodref          #147.#153     // scala/package$.Nil:()Lscala/collection/immutable/Nil$;
  #155 = Utf8               List
  #156 = Utf8               ()Lscala/collection/immutable/List$;
  #157 = NameAndType        #155:#156     // List:()Lscala/collection/immutable/List$;
  #158 = Methodref          #147.#157     // scala/package$.List:()Lscala/collection/immutable/List$;
  #159 = Utf8               scala/runtime/ScalaRunTime$
  #160 = Class              #159          // scala/runtime/ScalaRunTime$
  #161 = Utf8               Lscala/runtime/ScalaRunTime$;
  #162 = NameAndType        #43:#161      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #163 = Fieldref           #160.#162     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #164 = Utf8               Simple-error
  #165 = String             #164          // Simple-error
  #166 = Utf8               $anonfun$run$4
  #167 = NameAndType        #166:#81      // $anonfun$run$4:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
  #168 = Methodref          #2.#167       // scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$4:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
  #169 = MethodHandle       6:#168        // REF_invokeStatic scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$4:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
  #170 = InvokeDynamic      #2:#95        // #2:apply$mcV$sp:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
  #171 = Utf8               wrapRefArray
  #172 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #173 = NameAndType        #171:#172     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #174 = Methodref          #160.#173     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #175 = Utf8               scala/collection/immutable/Nil$
  #176 = Class              #175          // scala/collection/immutable/Nil$
  #177 = Utf8               Lscala/collection/immutable/Nil$;
  #178 = NameAndType        #43:#177      // MODULE$:Lscala/collection/immutable/Nil$;
  #179 = Fieldref           #176.#178     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #180 = Utf8               prependedAll
  #181 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/immutable/List;
  #182 = NameAndType        #180:#181     // prependedAll:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/List;
  #183 = Methodref          #176.#182     // scala/collection/immutable/Nil$.prependedAll:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/List;
  #184 = Utf8               scala/collection/immutable/List
  #185 = Class              #184          // scala/collection/immutable/List
  #186 = Utf8               $colon$colon
  #187 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/List;
  #188 = NameAndType        #186:#187     // $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
  #189 = Methodref          #185.#188     // scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
  #190 = Utf8               (Lscala/sys/process/Process$;Ljava/lang/Process;Ljava/lang/Thread;Lscala/collection/immutable/List;)V
  #191 = NameAndType        #97:#190      // "<init>":(Lscala/sys/process/Process$;Ljava/lang/Process;Ljava/lang/Thread;Lscala/collection/immutable/List;)V
  #192 = Methodref          #21.#191      // scala/sys/process/ProcessImpl$SimpleProcess."<init>":(Lscala/sys/process/Process$;Ljava/lang/Process;Ljava/lang/Thread;Lscala/collection/immutable/List;)V
  #193 = Utf8               inherit
  #194 = Utf8               Z
  #195 = Utf8               process
  #196 = Utf8               Ljava/lang/Process;
  #197 = Utf8               inThread
  #198 = Utf8               Ljava/lang/Thread;
  #199 = Utf8               outThread
  #200 = Utf8               errorThread
  #201 = Utf8               Lscala/collection/immutable/List;
  #202 = Utf8               this
  #203 = Utf8               Lscala/sys/process/ProcessBuilderImpl$Simple;
  #204 = Utf8               Lscala/sys/process/ProcessIO;
  #205 = Utf8               apply_elems
  #206 = Utf8               Lscala/collection/immutable/Seq;
  #207 = Utf8               apply_thread
  #208 = Utf8               apply_prefix
  #209 = Utf8               Ljava/lang/String;
  #210 = Utf8               apply_daemon
  #211 = Utf8               apply_f
  #212 = Utf8               Lscala/Function0;
  #213 = Utf8               java/lang/Process
  #214 = Class              #213          // java/lang/Process
  #215 = Utf8               java/lang/String
  #216 = Class              #215          // java/lang/String
  #217 = Utf8               scala/runtime/java8/JFunction0$mcV$sp
  #218 = Class              #217          // scala/runtime/java8/JFunction0$mcV$sp
  #219 = Utf8               scala/collection/immutable/List$
  #220 = Class              #219          // scala/collection/immutable/List$
  #221 = Utf8               [Ljava/lang/Thread;
  #222 = Class              #221          // "[Ljava/lang/Thread;"
  #223 = Utf8               scala/collection/immutable/ArraySeq
  #224 = Class              #223          // scala/collection/immutable/ArraySeq
  #225 = Utf8               command
  #226 = Utf8               ()Ljava/util/List;
  #227 = NameAndType        #225:#226     // command:()Ljava/util/List;
  #228 = Methodref          #9.#227       // java/lang/ProcessBuilder.command:()Ljava/util/List;
  #229 = Utf8               java/lang/Object
  #230 = Class              #229          // java/lang/Object
  #231 = Methodref          #230.#120     // java/lang/Object.toString:()Ljava/lang/String;
  #232 = Utf8               canPipeTo
  #233 = Utf8               scala$sys$process$ProcessBuilderImpl$Simple$$$outer
  #234 = Utf8               ()Lscala/sys/process/ProcessBuilder$;
  #235 = Utf8               $outer
  #236 = Utf8               Lscala/sys/process/ProcessBuilder$;
  #237 = NameAndType        #235:#236     // $outer:Lscala/sys/process/ProcessBuilder$;
  #238 = Fieldref           #2.#237       // scala/sys/process/ProcessBuilderImpl$Simple.$outer:Lscala/sys/process/ProcessBuilder$;
  #239 = Utf8               io$2
  #240 = Utf8               process$1
  #241 = Utf8               getOutputStream
  #242 = Utf8               ()Ljava/io/OutputStream;
  #243 = NameAndType        #241:#242     // getOutputStream:()Ljava/io/OutputStream;
  #244 = Methodref          #214.#243     // java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
  #245 = Utf8               scala/Function1
  #246 = Class              #245          // scala/Function1
  #247 = Utf8               apply
  #248 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #249 = NameAndType        #247:#248     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #250 = InterfaceMethodref #246.#249     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #251 = Utf8               processOutput
  #252 = NameAndType        #251:#38      // processOutput:()Lscala/Function1;
  #253 = Methodref          #36.#252      // scala/sys/process/ProcessIO.processOutput:()Lscala/Function1;
  #254 = Utf8               getInputStream
  #255 = Utf8               ()Ljava/io/InputStream;
  #256 = NameAndType        #254:#255     // getInputStream:()Ljava/io/InputStream;
  #257 = Methodref          #214.#256     // java/lang/Process.getInputStream:()Ljava/io/InputStream;
  #258 = Utf8               processError
  #259 = NameAndType        #258:#38      // processError:()Lscala/Function1;
  #260 = Methodref          #36.#259      // scala/sys/process/ProcessIO.processError:()Lscala/Function1;
  #261 = Utf8               getErrorStream
  #262 = NameAndType        #261:#255     // getErrorStream:()Ljava/io/InputStream;
  #263 = Methodref          #214.#262     // java/lang/Process.getErrorStream:()Ljava/io/InputStream;
  #264 = Utf8               (Lscala/sys/process/ProcessBuilder$;Ljava/lang/ProcessBuilder;)V
  #265 = Utf8               (Lscala/sys/process/ProcessBuilder$;)V
  #266 = NameAndType        #97:#265      // "<init>":(Lscala/sys/process/ProcessBuilder$;)V
  #267 = Methodref          #4.#266       // scala/sys/process/ProcessBuilderImpl$AbstractBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;)V
  #268 = Utf8               $deserializeLambda$
  #269 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #270 = Utf8               scala/runtime/LambdaDeserialize
  #271 = Class              #270          // scala/runtime/LambdaDeserialize
  #272 = Utf8               bootstrap
  #273 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #274 = NameAndType        #272:#273     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #275 = Methodref          #271.#274     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #276 = MethodHandle       6:#275        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #277 = Utf8               lambdaDeserialize
  #278 = NameAndType        #277:#269     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #279 = InvokeDynamic      #3:#278       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #280 = Utf8               Code
  #281 = Utf8               StackMapTable
  #282 = Utf8               LineNumberTable
  #283 = Utf8               LocalVariableTable
  #284 = Utf8               MethodParameters
  #285 = Utf8               InnerClasses
  #286 = Utf8               SourceFile
  #287 = Utf8               BootstrapMethods
  #288 = Utf8               ScalaInlineInfo
  #289 = Utf8               Scala
{
  private final java.lang.ProcessBuilder p;
    descriptor: Ljava/lang/ProcessBuilder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.sys.process.Process run(scala.sys.process.ProcessIO);
    descriptor: (Lscala/sys/process/ProcessIO;)Lscala/sys/process/Process;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=25, args_size=2
         0: aload_1
         1: invokevirtual #40                 // Method scala/sys/process/ProcessIO.writeInput:()Lscala/Function1;
         4: getstatic     #46                 // Field scala/sys/process/BasicIO$.MODULE$:Lscala/sys/process/BasicIO$;
         7: invokevirtual #49                 // Method scala/sys/process/BasicIO$.connectToStdIn:()Lscala/Function1;
        10: if_acmpne     17
        13: iconst_1
        14: goto          18
        17: iconst_0
        18: istore_2
        19: iload_2
        20: ifeq          34
        23: aload_0
        24: getfield      #51                 // Field p:Ljava/lang/ProcessBuilder;
        27: getstatic     #55                 // Field java/lang/ProcessBuilder$Redirect.INHERIT:Ljava/lang/ProcessBuilder$Redirect;
        30: invokevirtual #59                 // Method java/lang/ProcessBuilder.redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
        33: pop
        34: aload_0
        35: getfield      #51                 // Field p:Ljava/lang/ProcessBuilder;
        38: invokevirtual #63                 // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
        41: astore_3
        42: iload_2
        43: ifne          59
        46: aload_1
        47: invokevirtual #40                 // Method scala/sys/process/ProcessIO.writeInput:()Lscala/Function1;
        50: getstatic     #46                 // Field scala/sys/process/BasicIO$.MODULE$:Lscala/sys/process/BasicIO$;
        53: invokevirtual #66                 // Method scala/sys/process/BasicIO$.connectNoOp:()Lscala/Function1;
        56: if_acmpne     63
        59: aconst_null
        60: goto          160
        63: getstatic     #71                 // Field scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
        66: invokevirtual #75                 // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
        69: ldc           #77                 // String Simple-input
        71: iconst_1
        72: aload_1
        73: aload_3
        74: invokedynamic #96,  0             // InvokeDynamic #0:apply$mcV$sp:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
        79: astore        11
        81: istore        10
        83: astore        9
        85: ifnonnull     90
        88: aconst_null
        89: athrow
        90: new           #29                 // class scala/sys/process/ProcessImpl$Spawn$$anon$1
        93: dup
        94: aconst_null
        95: aload         11
        97: invokespecial #100                // Method scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
       100: astore        12
       102: aload         12
       104: new           #102                // class java/lang/StringBuilder
       107: dup
       108: ldc           #103                // int 7
       110: invokespecial #106                // Method java/lang/StringBuilder."<init>":(I)V
       113: aload         9
       115: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       118: ldc           #112                // String -spawn-
       120: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       123: aload         12
       125: invokevirtual #118                // Method java/lang/Thread.getName:()Ljava/lang/String;
       128: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       131: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       134: invokevirtual #125                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
       137: aload         12
       139: iload         10
       141: invokevirtual #129                // Method java/lang/Thread.setDaemon:(Z)V
       144: aload         12
       146: invokevirtual #131                // Method java/lang/Thread.start:()V
       149: aload         12
       151: aconst_null
       152: astore        9
       154: aconst_null
       155: astore        11
       157: aconst_null
       158: astore        12
       160: astore        4
       162: getstatic     #71                 // Field scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
       165: invokevirtual #75                 // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
       168: ldc           #133                // String Simple-output
       170: aload_1
       171: invokevirtual #137                // Method scala/sys/process/ProcessIO.daemonizeThreads:()Z
       174: aload_1
       175: aload_3
       176: invokedynamic #142,  0            // InvokeDynamic #1:apply$mcV$sp:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
       181: astore        15
       183: istore        14
       185: astore        13
       187: ifnonnull     192
       190: aconst_null
       191: athrow
       192: new           #29                 // class scala/sys/process/ProcessImpl$Spawn$$anon$1
       195: dup
       196: aconst_null
       197: aload         15
       199: invokespecial #100                // Method scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
       202: astore        16
       204: aload         16
       206: new           #102                // class java/lang/StringBuilder
       209: dup
       210: ldc           #103                // int 7
       212: invokespecial #106                // Method java/lang/StringBuilder."<init>":(I)V
       215: aload         13
       217: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       220: ldc           #112                // String -spawn-
       222: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       225: aload         16
       227: invokevirtual #118                // Method java/lang/Thread.getName:()Ljava/lang/String;
       230: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       233: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       236: invokevirtual #125                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
       239: aload         16
       241: iload         14
       243: invokevirtual #129                // Method java/lang/Thread.setDaemon:(Z)V
       246: aload         16
       248: invokevirtual #131                // Method java/lang/Thread.start:()V
       251: aload         16
       253: aconst_null
       254: astore        13
       256: aconst_null
       257: astore        15
       259: aconst_null
       260: astore        16
       262: astore        5
       264: aload_0
       265: getfield      #51                 // Field p:Ljava/lang/ProcessBuilder;
       268: invokevirtual #145                // Method java/lang/ProcessBuilder.redirectErrorStream:()Z
       271: ifeq          283
       274: getstatic     #150                // Field scala/package$.MODULE$:Lscala/package$;
       277: invokevirtual #154                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
       280: goto          455
       283: getstatic     #150                // Field scala/package$.MODULE$:Lscala/package$;
       286: invokevirtual #158                // Method scala/package$.List:()Lscala/collection/immutable/List$;
       289: getstatic     #163                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       292: iconst_1
       293: anewarray     #114                // class java/lang/Thread
       296: dup
       297: iconst_0
       298: getstatic     #71                 // Field scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
       301: invokevirtual #75                 // Method scala/sys/process/Process$.Spawn:()Lscala/sys/process/ProcessImpl$Spawn$;
       304: ldc           #165                // String Simple-error
       306: aload_1
       307: invokevirtual #137                // Method scala/sys/process/ProcessIO.daemonizeThreads:()Z
       310: aload_1
       311: aload_3
       312: invokedynamic #170,  0            // InvokeDynamic #2:apply$mcV$sp:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)Lscala/runtime/java8/JFunction0$mcV$sp;
       317: astore        19
       319: istore        18
       321: astore        17
       323: ifnonnull     328
       326: aconst_null
       327: athrow
       328: new           #29                 // class scala/sys/process/ProcessImpl$Spawn$$anon$1
       331: dup
       332: aconst_null
       333: aload         19
       335: invokespecial #100                // Method scala/sys/process/ProcessImpl$Spawn$$anon$1."<init>":(Lscala/sys/process/ProcessImpl$Spawn$;Lscala/Function0;)V
       338: astore        20
       340: aload         20
       342: new           #102                // class java/lang/StringBuilder
       345: dup
       346: ldc           #103                // int 7
       348: invokespecial #106                // Method java/lang/StringBuilder."<init>":(I)V
       351: aload         17
       353: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       356: ldc           #112                // String -spawn-
       358: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       361: aload         20
       363: invokevirtual #118                // Method java/lang/Thread.getName:()Ljava/lang/String;
       366: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       369: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       372: invokevirtual #125                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
       375: aload         20
       377: iload         18
       379: invokevirtual #129                // Method java/lang/Thread.setDaemon:(Z)V
       382: aload         20
       384: invokevirtual #131                // Method java/lang/Thread.start:()V
       387: aload         20
       389: aconst_null
       390: astore        17
       392: aconst_null
       393: astore        19
       395: aconst_null
       396: astore        20
       398: aastore
       399: invokevirtual #174                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       402: astore        7
       404: ifnonnull     409
       407: aconst_null
       408: athrow
       409: getstatic     #179                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       412: aload         7
       414: invokevirtual #183                // Method scala/collection/immutable/Nil$.prependedAll:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/List;
       417: astore        24
       419: aload         24
       421: aconst_null
       422: astore        24
       424: astore        23
       426: aload         23
       428: aconst_null
       429: astore        23
       431: astore        22
       433: aload         22
       435: aconst_null
       436: astore        22
       438: astore        21
       440: aload         21
       442: aconst_null
       443: astore        21
       445: astore        8
       447: aload         8
       449: aconst_null
       450: astore        7
       452: aconst_null
       453: astore        8
       455: astore        6
       457: new           #21                 // class scala/sys/process/ProcessImpl$SimpleProcess
       460: dup
       461: getstatic     #71                 // Field scala/sys/process/Process$.MODULE$:Lscala/sys/process/Process$;
       464: aload_3
       465: aload         4
       467: aload         6
       469: aload         5
       471: invokevirtual #189                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       474: invokespecial #192                // Method scala/sys/process/ProcessImpl$SimpleProcess."<init>":(Lscala/sys/process/Process$;Ljava/lang/Process;Ljava/lang/Thread;Lscala/collection/immutable/List;)V
       477: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 17 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ class java/lang/Process ]
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class scala/sys/process/ProcessBuilderImpl$Simple, class scala/sys/process/ProcessIO, int, class java/lang/Process, top, top, top, top, top, class java/lang/String, int, class scala/runtime/java8/JFunction0$mcV$sp ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 69
          locals = [ class scala/sys/process/ProcessBuilderImpl$Simple, class scala/sys/process/ProcessIO, int, class java/lang/Process ]
          stack = [ class scala/sys/process/ProcessImpl$Spawn$$anon$1 ]
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class scala/sys/process/ProcessBuilderImpl$Simple, class scala/sys/process/ProcessIO, int, class java/lang/Process, class scala/sys/process/ProcessImpl$Spawn$$anon$1, top, top, top, top, top, top, top, top, class java/lang/String, int, class scala/runtime/java8/JFunction0$mcV$sp ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 90
          locals = [ class scala/sys/process/ProcessBuilderImpl$Simple, class scala/sys/process/ProcessIO, int, class java/lang/Process, class scala/sys/process/ProcessImpl$Spawn$$anon$1, class scala/sys/process/ProcessImpl$Spawn$$anon$1, top, top, top, top, top, top, top, null, int, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class scala/sys/process/ProcessBuilderImpl$Simple, class scala/sys/process/ProcessIO, int, class java/lang/Process, class scala/sys/process/ProcessImpl$Spawn$$anon$1, class scala/sys/process/ProcessImpl$Spawn$$anon$1, top, top, top, top, top, top, top, null, int, null, null, class java/lang/String, int, class scala/runtime/java8/JFunction0$mcV$sp ]
          stack = [ class scala/collection/immutable/List$, class scala/runtime/ScalaRunTime$, class "[Ljava/lang/Thread;", class "[Ljava/lang/Thread;", int ]
        frame_type = 255 /* full_frame */
          offset_delta = 80
          locals = [ class scala/sys/process/ProcessBuilderImpl$Simple, class scala/sys/process/ProcessIO, int, class java/lang/Process, class scala/sys/process/ProcessImpl$Spawn$$anon$1, class scala/sys/process/ProcessImpl$Spawn$$anon$1, top, class scala/collection/immutable/ArraySeq, top, top, top, top, top, null, int, null, null, null, int, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 45
          locals = [ class scala/sys/process/ProcessBuilderImpl$Simple, class scala/sys/process/ProcessIO, int, class java/lang/Process, class scala/sys/process/ProcessImpl$Spawn$$anon$1, class scala/sys/process/ProcessImpl$Spawn$$anon$1, top, top, top, top, top, top, top, null, int, null, null ]
          stack = [ class scala/collection/immutable/List ]
      LineNumberTable:
        line 82: 0
        line 83: 19
        line 85: 34
        line 89: 42
        line 90: 63
        line 91: 162
        line 93: 264
        line 94: 283
        line 96: 457
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19     458     2 inherit   Z
           42     435     3 process   Ljava/lang/Process;
          162     315     4 inThread   Ljava/lang/Thread;
          264     213     5 outThread   Ljava/lang/Thread;
          457      20     6 errorThread   Lscala/collection/immutable/List;
            0     478     0  this   Lscala/sys/process/ProcessBuilderImpl$Simple;
            0     478     1    io   Lscala/sys/process/ProcessIO;
          409      38     7 apply_elems   Lscala/collection/immutable/Seq;
          102      47    12 apply_thread   Ljava/lang/Thread;
           90      59     9 apply_prefix   Ljava/lang/String;
           90      59    10 apply_daemon   Z
           90      59    11 apply_f   Lscala/Function0;
          204      47    16 apply_thread   Ljava/lang/Thread;
          192      59    13 apply_prefix   Ljava/lang/String;
          192      59    14 apply_daemon   Z
          192      59    15 apply_f   Lscala/Function0;
          340      47    20 apply_thread   Ljava/lang/Thread;
          328      59    17 apply_prefix   Ljava/lang/String;
          328      59    18 apply_daemon   Z
          328      59    19 apply_f   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      io                             final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #51                 // Field p:Ljava/lang/ProcessBuilder;
         4: invokevirtual #228                // Method java/lang/ProcessBuilder.command:()Ljava/util/List;
         7: invokevirtual #231                // Method java/lang/Object.toString:()Ljava/lang/String;
        10: areturn
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/sys/process/ProcessBuilderImpl$Simple;

  public boolean canPipeTo();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/sys/process/ProcessBuilderImpl$Simple;

  public scala.sys.process.ProcessBuilder$ scala$sys$process$ProcessBuilderImpl$Simple$$$outer();
    descriptor: ()Lscala/sys/process/ProcessBuilder$;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #238                // Field $outer:Lscala/sys/process/ProcessBuilder$;
         4: areturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/sys/process/ProcessBuilderImpl$Simple;

  public static final void $anonfun$run$2(scala.sys.process.ProcessIO, java.lang.Process);
    descriptor: (Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #40                 // Method scala/sys/process/ProcessIO.writeInput:()Lscala/Function1;
         4: aload_1
         5: invokevirtual #244                // Method java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
         8: invokeinterface #250,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        13: pop
        14: return
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  io$2   Lscala/sys/process/ProcessIO;
            0      15     1 process$1   Ljava/lang/Process;
    MethodParameters:
      Name                           Flags
      io$2                           final
      process$1                      final

  public static final void $anonfun$run$3(scala.sys.process.ProcessIO, java.lang.Process);
    descriptor: (Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #253                // Method scala/sys/process/ProcessIO.processOutput:()Lscala/Function1;
         4: aload_1
         5: invokevirtual #257                // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
         8: invokeinterface #250,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        13: pop
        14: return
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  io$2   Lscala/sys/process/ProcessIO;
            0      15     1 process$1   Ljava/lang/Process;
    MethodParameters:
      Name                           Flags
      io$2                           final
      process$1                      final

  public static final void $anonfun$run$4(scala.sys.process.ProcessIO, java.lang.Process);
    descriptor: (Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #260                // Method scala/sys/process/ProcessIO.processError:()Lscala/Function1;
         4: aload_1
         5: invokevirtual #263                // Method java/lang/Process.getErrorStream:()Ljava/io/InputStream;
         8: invokeinterface #250,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        13: pop
        14: return
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  io$2   Lscala/sys/process/ProcessIO;
            0      15     1 process$1   Ljava/lang/Process;
    MethodParameters:
      Name                           Flags
      io$2                           final
      process$1                      final

  public scala.sys.process.ProcessBuilderImpl$Simple(scala.sys.process.ProcessBuilder$, java.lang.ProcessBuilder);
    descriptor: (Lscala/sys/process/ProcessBuilder$;Ljava/lang/ProcessBuilder;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #51                 // Field p:Ljava/lang/ProcessBuilder;
         5: aload_0
         6: aload_1
         7: invokespecial #267                // Method scala/sys/process/ProcessBuilderImpl$AbstractBuilder."<init>":(Lscala/sys/process/ProcessBuilder$;)V
        10: return
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/sys/process/ProcessBuilderImpl$Simple;
            0      11     1 $outer   Lscala/sys/process/ProcessBuilder$;
            0      11     2     p   Ljava/lang/ProcessBuilder;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      p                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #279,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static abstract #10= #7 of #9;   // Redirect=class java/lang/ProcessBuilder$Redirect of class java/lang/ProcessBuilder
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public abstract #18= #4 of #17;         // AbstractBuilder=class scala/sys/process/ProcessBuilderImpl$AbstractBuilder of class scala/sys/process/ProcessBuilderImpl
  public #19= #2 of #17;                  // Simple=class scala/sys/process/ProcessBuilderImpl$Simple of class scala/sys/process/ProcessBuilderImpl
  public #24= #21 of #23;                 // SimpleProcess=class scala/sys/process/ProcessImpl$SimpleProcess of class scala/sys/process/ProcessImpl
  public #27= #26 of #23;                 // Spawn$=class scala/sys/process/ProcessImpl$Spawn$ of class scala/sys/process/ProcessImpl
  public final #29;                       // class scala/sys/process/ProcessImpl$Spawn$$anon$1
SourceFile: "ProcessBuilderImpl.scala"
BootstrapMethods:
  0: #92 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #79 ()V
      #84 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$2:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
      #79 ()V
      #85 1
  1: #92 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #79 ()V
      #141 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$3:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
      #79 ()V
      #85 1
  2: #92 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #79 ()V
      #169 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$4:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
      #79 ()V
      #85 1
  3: #276 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #84 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$2:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
      #141 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$3:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
      #169 REF_invokeStatic scala/sys/process/ProcessBuilderImpl$Simple.$anonfun$run$4:(Lscala/sys/process/ProcessIO;Ljava/lang/Process;)V
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 00 00 08 00 50 00 51 01 00 8A 00 51 01 00 A6
   00 51 01 00 61 01 08 00 00 E8 00 87 00 00 20 00
   21 00 00 E9 00 EA 00 00 77 00 74 00
  Scala: length = 0x0 (unknown attribute)

