Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/util/Either$RightProjection.class
  Last modified May 29, 2022; size 7050 bytes
  SHA-256 checksum 1feb416a0b797f3b44892cd5fb5a0a864a7953b498b5396605b8eba26b881fd1
  Compiled from "Either.scala"
public final class scala.util.Either$RightProjection<A extends java.lang.Object, B extends java.lang.Object> extends java.lang.Object implements scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/util/Either$RightProjection
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 1, methods: 25, attributes: 6
Constant pool:
    #1 = Utf8               scala/util/Either$RightProjection
    #2 = Class              #1            // scala/util/Either$RightProjection
    #3 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Product
    #7 = Class              #6            // scala/Product
    #8 = Utf8               java/io/Serializable
    #9 = Class              #8            // java/io/Serializable
   #10 = Utf8               Either.scala
   #11 = Utf8               scala/runtime/ScalaRunTime$$anon$1
   #12 = Class              #11           // scala/runtime/ScalaRunTime$$anon$1
   #13 = Utf8               scala/util/Either
   #14 = Class              #13           // scala/util/Either
   #15 = Utf8               RightProjection
   #16 = Utf8               e
   #17 = Utf8               Lscala/util/Either;
   #18 = Utf8               Lscala/util/Either<TA;TB;>;
   #19 = Utf8               productElementNames
   #20 = Utf8               ()Lscala/collection/Iterator;
   #21 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #22 = Utf8               productElementNames$
   #23 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #24 = NameAndType        #22:#23       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #25 = InterfaceMethodref #7.#24        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #26 = Utf8               this
   #27 = Utf8               Lscala/util/Either$RightProjection;
   #28 = Utf8               ()Lscala/util/Either;
   #29 = Utf8               ()Lscala/util/Either<TA;TB;>;
   #30 = NameAndType        #16:#17       // e:Lscala/util/Either;
   #31 = Fieldref           #2.#30        // scala/util/Either$RightProjection.e:Lscala/util/Either;
   #32 = Utf8               get
   #33 = Utf8               ()Ljava/lang/Object;
   #34 = Utf8               ()TB;
   #35 = NameAndType        #16:#28       // e:()Lscala/util/Either;
   #36 = Methodref          #2.#35        // scala/util/Either$RightProjection.e:()Lscala/util/Either;
   #37 = Utf8               scala/util/Right
   #38 = Class              #37           // scala/util/Right
   #39 = Utf8               value
   #40 = NameAndType        #39:#33       // value:()Ljava/lang/Object;
   #41 = Methodref          #38.#40       // scala/util/Right.value:()Ljava/lang/Object;
   #42 = Utf8               java/util/NoSuchElementException
   #43 = Class              #42           // java/util/NoSuchElementException
   #44 = Utf8               Either.right.get on Left
   #45 = String             #44           // Either.right.get on Left
   #46 = Utf8               <init>
   #47 = Utf8               (Ljava/lang/String;)V
   #48 = NameAndType        #46:#47       // "<init>":(Ljava/lang/String;)V
   #49 = Methodref          #43.#48       // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
   #50 = Utf8               b
   #51 = Utf8               Ljava/lang/Object;
   #52 = Utf8               foreach
   #53 = Utf8               (Lscala/Function1;)V
   #54 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TB;TU;>;)V
   #55 = Utf8               f
   #56 = Utf8               scala/Function1
   #57 = Class              #56           // scala/Function1
   #58 = Utf8               apply
   #59 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #60 = NameAndType        #58:#59       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #61 = InterfaceMethodref #57.#60       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #62 = Utf8               Lscala/Function1;
   #63 = Utf8               getOrElse
   #64 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
   #65 = Utf8               <B1:Ljava/lang/Object;>(Lscala/Function0<TB1;>;)TB1;
   #66 = Utf8               or
   #67 = Utf8               scala/Function0
   #68 = Class              #67           // scala/Function0
   #69 = NameAndType        #58:#33       // apply:()Ljava/lang/Object;
   #70 = InterfaceMethodref #68.#69       // scala/Function0.apply:()Ljava/lang/Object;
   #71 = Utf8               Lscala/Function0;
   #72 = Utf8               forall
   #73 = Utf8               (Lscala/Function1;)Z
   #74 = Utf8               (Lscala/Function1<TB;Ljava/lang/Object;>;)Z
   #75 = Utf8               scala/runtime/BoxesRunTime
   #76 = Class              #75           // scala/runtime/BoxesRunTime
   #77 = Utf8               unboxToBoolean
   #78 = Utf8               (Ljava/lang/Object;)Z
   #79 = NameAndType        #77:#78       // unboxToBoolean:(Ljava/lang/Object;)Z
   #80 = Methodref          #76.#79       // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
   #81 = Utf8               exists
   #82 = Utf8               p
   #83 = Utf8               flatMap
   #84 = Utf8               (Lscala/Function1;)Lscala/util/Either;
   #85 = Utf8               <A1:Ljava/lang/Object;B1:Ljava/lang/Object;>(Lscala/Function1<TB;Lscala/util/Either<TA1;TB1;>;>;)Lscala/util/Either<TA1;TB1;>;
   #86 = Utf8               map
   #87 = Utf8               <B1:Ljava/lang/Object;>(Lscala/Function1<TB;TB1;>;)Lscala/util/Either<TA;TB1;>;
   #88 = Utf8               (Ljava/lang/Object;)V
   #89 = NameAndType        #46:#88       // "<init>":(Ljava/lang/Object;)V
   #90 = Methodref          #38.#89       // scala/util/Right."<init>":(Ljava/lang/Object;)V
   #91 = Utf8               filter
   #92 = Utf8               (Lscala/Function1;)Lscala/Option;
   #93 = Utf8               <A1:Ljava/lang/Object;>(Lscala/Function1<TB;Ljava/lang/Object;>;)Lscala/Option<Lscala/util/Either<TA1;TB;>;>;
   #94 = Utf8               scala/Some
   #95 = Class              #94           // scala/Some
   #96 = Methodref          #95.#89       // scala/Some."<init>":(Ljava/lang/Object;)V
   #97 = Utf8               scala/None$
   #98 = Class              #97           // scala/None$
   #99 = Utf8               MODULE$
  #100 = Utf8               Lscala/None$;
  #101 = NameAndType        #99:#100      // MODULE$:Lscala/None$;
  #102 = Fieldref           #98.#101      // scala/None$.MODULE$:Lscala/None$;
  #103 = Utf8               scala/Option
  #104 = Class              #103          // scala/Option
  #105 = Utf8               filterToOption
  #106 = Utf8               toSeq
  #107 = Utf8               ()Lscala/collection/immutable/Seq;
  #108 = Utf8               ()Lscala/collection/immutable/Seq<TB;>;
  #109 = Utf8               scala/package$
  #110 = Class              #109          // scala/package$
  #111 = Utf8               Lscala/package$;
  #112 = NameAndType        #99:#111      // MODULE$:Lscala/package$;
  #113 = Fieldref           #110.#112     // scala/package$.MODULE$:Lscala/package$;
  #114 = Utf8               Seq
  #115 = Utf8               ()Lscala/collection/immutable/Seq$;
  #116 = NameAndType        #114:#115     // Seq:()Lscala/collection/immutable/Seq$;
  #117 = Methodref          #110.#116     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #118 = Utf8               scala/runtime/ScalaRunTime$
  #119 = Class              #118          // scala/runtime/ScalaRunTime$
  #120 = Utf8               Lscala/runtime/ScalaRunTime$;
  #121 = NameAndType        #99:#120      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #122 = Fieldref           #119.#121     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #123 = Utf8               genericWrapArray
  #124 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #125 = NameAndType        #123:#124     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #126 = Methodref          #119.#125     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #127 = Utf8               scala/collection/immutable/Seq$
  #128 = Class              #127          // scala/collection/immutable/Seq$
  #129 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #130 = NameAndType        #58:#129      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #131 = Methodref          #128.#130     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #132 = Utf8               scala/collection/immutable/Seq
  #133 = Class              #132          // scala/collection/immutable/Seq
  #134 = Utf8               empty
  #135 = Utf8               ()Lscala/collection/SeqOps;
  #136 = NameAndType        #134:#135     // empty:()Lscala/collection/SeqOps;
  #137 = Methodref          #128.#136     // scala/collection/immutable/Seq$.empty:()Lscala/collection/SeqOps;
  #138 = Utf8               toOption
  #139 = Utf8               ()Lscala/Option;
  #140 = Utf8               ()Lscala/Option<TB;>;
  #141 = Utf8               copy
  #142 = Utf8               (Lscala/util/Either;)Lscala/util/Either$RightProjection;
  #143 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/util/Either<TA;TB;>;)Lscala/util/Either$RightProjection<TA;TB;>;
  #144 = Utf8               (Lscala/util/Either;)V
  #145 = NameAndType        #46:#144      // "<init>":(Lscala/util/Either;)V
  #146 = Methodref          #2.#145       // scala/util/Either$RightProjection."<init>":(Lscala/util/Either;)V
  #147 = Utf8               copy$default$1
  #148 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>()Lscala/util/Either<TA;TB;>;
  #149 = Utf8               productPrefix
  #150 = Utf8               ()Ljava/lang/String;
  #151 = String             #15           // RightProjection
  #152 = Utf8               productArity
  #153 = Utf8               ()I
  #154 = Utf8               productElement
  #155 = Utf8               (I)Ljava/lang/Object;
  #156 = Utf8               x$1
  #157 = Utf8               scala/runtime/Statics
  #158 = Class              #157          // scala/runtime/Statics
  #159 = Utf8               ioobe
  #160 = NameAndType        #159:#155     // ioobe:(I)Ljava/lang/Object;
  #161 = Methodref          #158.#160     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #162 = Utf8               I
  #163 = Utf8               productIterator
  #164 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #165 = Utf8               (Lscala/Product;)V
  #166 = NameAndType        #46:#165      // "<init>":(Lscala/Product;)V
  #167 = Methodref          #12.#166      // scala/runtime/ScalaRunTime$$anon$1."<init>":(Lscala/Product;)V
  #168 = Utf8               canEqual
  #169 = Utf8               productElementName
  #170 = Utf8               (I)Ljava/lang/String;
  #171 = String             #16           // e
  #172 = Utf8               java/lang/String
  #173 = Class              #172          // java/lang/String
  #174 = Utf8               hashCode
  #175 = Utf8               scala/util/hashing/MurmurHash3$
  #176 = Class              #175          // scala/util/hashing/MurmurHash3$
  #177 = Utf8               Lscala/util/hashing/MurmurHash3$;
  #178 = NameAndType        #99:#177      // MODULE$:Lscala/util/hashing/MurmurHash3$;
  #179 = Fieldref           #176.#178     // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
  #180 = Utf8               productHash
  #181 = Utf8               (Lscala/Product;)I
  #182 = NameAndType        #180:#181     // productHash:(Lscala/Product;)I
  #183 = Methodref          #176.#182     // scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
  #184 = Utf8               toString
  #185 = Utf8               _toString
  #186 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #187 = NameAndType        #185:#186     // _toString:(Lscala/Product;)Ljava/lang/String;
  #188 = Methodref          #119.#187     // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #189 = Utf8               equals
  #190 = NameAndType        #189:#78      // equals:(Ljava/lang/Object;)Z
  #191 = Methodref          #5.#190       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #192 = Utf8               (Lscala/util/Either<TA;TB;>;)V
  #193 = Utf8               ()V
  #194 = NameAndType        #46:#193      // "<init>":()V
  #195 = Methodref          #5.#194       // java/lang/Object."<init>":()V
  #196 = Utf8               Signature
  #197 = Utf8               Code
  #198 = Utf8               LineNumberTable
  #199 = Utf8               LocalVariableTable
  #200 = Utf8               StackMapTable
  #201 = Utf8               Deprecated
  #202 = Utf8               MethodParameters
  #203 = Utf8               InnerClasses
  #204 = Utf8               SourceFile
  #205 = Utf8               ScalaInlineInfo
  #206 = Utf8               Scala
{
  private final scala.util.Either<A, B> e;
    descriptor: Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #18                          // Lscala/util/Either<TA;TB;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #25                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Either$RightProjection;
    Signature: #21                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public scala.util.Either<A, B> e();
    descriptor: ()Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #31                 // Field e:Lscala/util/Either;
         4: areturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Either$RightProjection;
    Signature: #29                          // ()Lscala/util/Either<TA;TB;>;

  public B get();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_1
         5: aload_1
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          23
        12: aload_1
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore_2
        20: goto          33
        23: new           #43                 // class java/util/NoSuchElementException
        26: dup
        27: ldc           #45                 // String Either.right.get on Left
        29: invokespecial #49                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        32: athrow
        33: aload_2
        34: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class scala/util/Either ]
        frame_type = 252 /* append */
          offset_delta = 9
          locals = [ class java/lang/Object ]
      LineNumberTable:
        line 694: 0
        line 695: 5
        line 696: 23
        line 694: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20       3     2     b   Ljava/lang/Object;
            0      35     0  this   Lscala/util/Either$RightProjection;
    Signature: #34                          // ()TB;
    Deprecated: true

  public <U extends java.lang.Object> void foreach(scala.Function1<B, U>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_2
         5: aload_2
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          29
        12: aload_2
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore_3
        20: aload_1
        21: aload_3
        22: invokeinterface #61,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        27: pop
        28: return
        29: return
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ class scala/util/Either ]
      LineNumberTable:
        line 707: 0
        line 708: 5
        line 707: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20       9     3     b   Ljava/lang/Object;
            0      30     0  this   Lscala/util/Either$RightProjection;
            0      30     1     f   Lscala/Function1;
    Signature: #54                          // <U:Ljava/lang/Object;>(Lscala/Function1<TB;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public <B1 extends java.lang.Object> B1 getOrElse(scala.Function0<B1>);
    descriptor: (Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_3
         5: aload_3
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          23
        12: aload_3
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore_2
        20: goto          30
        23: aload_1
        24: invokeinterface #70,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        29: astore_2
        30: aload_2
        31: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [ top, class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/util/Either$RightProjection, class scala/Function0, class java/lang/Object, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 719: 0
        line 720: 5
        line 721: 23
        line 719: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lscala/util/Either$RightProjection;
            0      32     1    or   Lscala/Function0;
    Signature: #65                          // <B1:Ljava/lang/Object;>(Lscala/Function0<TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      or                             final

  public boolean forall(scala.Function1<B, java.lang.Object>);
    descriptor: (Lscala/Function1;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_3
         5: aload_3
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          36
        12: aload_3
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore        4
        21: aload_1
        22: aload         4
        24: invokeinterface #61,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        29: invokestatic  #80                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        32: istore_2
        33: goto          38
        36: iconst_1
        37: istore_2
        38: iload_2
        39: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ top, class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/util/Either$RightProjection, class scala/Function1, int, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 733: 0
        line 734: 5
        line 735: 36
        line 733: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      15     4     b   Ljava/lang/Object;
            0      40     0  this   Lscala/util/Either$RightProjection;
            0      40     1     f   Lscala/Function1;
    Signature: #74                          // (Lscala/Function1<TB;Ljava/lang/Object;>;)Z
    MethodParameters:
      Name                           Flags
      f                              final

  public boolean exists(scala.Function1<B, java.lang.Object>);
    descriptor: (Lscala/Function1;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_3
         5: aload_3
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          36
        12: aload_3
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore        4
        21: aload_1
        22: aload         4
        24: invokeinterface #61,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        29: invokestatic  #80                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        32: istore_2
        33: goto          38
        36: iconst_0
        37: istore_2
        38: iload_2
        39: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ top, class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/util/Either$RightProjection, class scala/Function1, int, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 747: 0
        line 748: 5
        line 749: 36
        line 747: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      15     4     b   Ljava/lang/Object;
            0      40     0  this   Lscala/util/Either$RightProjection;
            0      40     1     p   Lscala/Function1;
    Signature: #74                          // (Lscala/Function1<TB;Ljava/lang/Object;>;)Z
    MethodParameters:
      Name                           Flags
      p                              final

  public <A1 extends java.lang.Object, B1 extends java.lang.Object> scala.util.Either<A1, B1> flatMap(scala.Function1<B, scala.util.Either<A1, B1>>);
    descriptor: (Lscala/Function1;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_3
         5: aload_3
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          36
        12: aload_3
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore        4
        21: aload_1
        22: aload         4
        24: invokeinterface #61,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        29: checkcast     #14                 // class scala/util/Either
        32: astore_2
        33: goto          41
        36: aload_0
        37: invokevirtual #36                 // Method e:()Lscala/util/Either;
        40: astore_2
        41: aload_2
        42: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ top, class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/util/Either$RightProjection, class scala/Function1, class scala/util/Either, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 756: 0
        line 757: 5
        line 758: 36
        line 756: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      15     4     b   Ljava/lang/Object;
            0      43     0  this   Lscala/util/Either$RightProjection;
            0      43     1     f   Lscala/Function1;
    Signature: #85                          // <A1:Ljava/lang/Object;B1:Ljava/lang/Object;>(Lscala/Function1<TB;Lscala/util/Either<TA1;TB1;>;>;)Lscala/util/Either<TA1;TB1;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public <B1 extends java.lang.Object> scala.util.Either<A, B1> map(scala.Function1<B, B1>);
    descriptor: (Lscala/Function1;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=2
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_3
         5: aload_3
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          40
        12: aload_3
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore        4
        21: new           #38                 // class scala/util/Right
        24: dup
        25: aload_1
        26: aload         4
        28: invokeinterface #61,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        33: invokespecial #90                 // Method scala/util/Right."<init>":(Ljava/lang/Object;)V
        36: astore_2
        37: goto          45
        40: aload_0
        41: invokevirtual #36                 // Method e:()Lscala/util/Either;
        44: astore_2
        45: aload_2
        46: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 40
          locals = [ top, class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/util/Either$RightProjection, class scala/Function1, class scala/util/Either, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 768: 0
        line 769: 5
        line 770: 40
        line 768: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      19     4     b   Ljava/lang/Object;
            0      47     0  this   Lscala/util/Either$RightProjection;
            0      47     1     f   Lscala/Function1;
    Signature: #87                          // <B1:Ljava/lang/Object;>(Lscala/Function1<TB;TB1;>;)Lscala/util/Either<TA;TB1;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public <A1 extends java.lang.Object> scala.Option<scala.util.Either<A1, B>> filter(scala.Function1<B, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_3
         5: aload_3
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          55
        12: aload_3
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore        4
        21: aload_1
        22: aload         4
        24: invokeinterface #61,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        29: invokestatic  #80                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        32: ifeq          55
        35: new           #95                 // class scala/Some
        38: dup
        39: new           #38                 // class scala/util/Right
        42: dup
        43: aload         4
        45: invokespecial #90                 // Method scala/util/Right."<init>":(Ljava/lang/Object;)V
        48: invokespecial #96                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        51: astore_2
        52: goto          59
        55: getstatic     #102                // Field scala/None$.MODULE$:Lscala/None$;
        58: astore_2
        59: aload_2
        60: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 55
          locals = [ top, class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/util/Either$RightProjection, class scala/Function1, class scala/Option, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 784: 0
        line 785: 5
        line 786: 55
        line 784: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      34     4     b   Ljava/lang/Object;
            0      61     0  this   Lscala/util/Either$RightProjection;
            0      61     1     p   Lscala/Function1;
    Signature: #93                          // <A1:Ljava/lang/Object;>(Lscala/Function1<TB;Ljava/lang/Object;>;)Lscala/Option<Lscala/util/Either<TA1;TB;>;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      p                              final

  public <A1 extends java.lang.Object> scala.Option<scala.util.Either<A1, B>> filterToOption(scala.Function1<B, java.lang.Object>);
    descriptor: (Lscala/Function1;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_3
         5: aload_3
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          52
        12: aload_3
        13: checkcast     #38                 // class scala/util/Right
        16: astore        4
        18: aload         4
        20: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        23: astore        5
        25: aload_1
        26: aload         5
        28: invokeinterface #61,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        33: invokestatic  #80                 // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        36: ifeq          52
        39: new           #95                 // class scala/Some
        42: dup
        43: aload         4
        45: invokespecial #96                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        48: astore_2
        49: goto          56
        52: getstatic     #102                // Field scala/None$.MODULE$:Lscala/None$;
        55: astore_2
        56: aload_2
        57: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 52
          locals = [ top, class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/util/Either$RightProjection, class scala/Function1, class scala/Option, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 799: 0
        line 800: 5
        line 801: 52
        line 799: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      27     5     b   Ljava/lang/Object;
            0      58     0  this   Lscala/util/Either$RightProjection;
            0      58     1     p   Lscala/Function1;
    Signature: #93                          // <A1:Ljava/lang/Object;>(Lscala/Function1<TB;Ljava/lang/Object;>;)Lscala/Option<Lscala/util/Either<TA1;TB;>;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<B> toSeq();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=1
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_2
         5: aload_2
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          50
        12: aload_2
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore_3
        20: getstatic     #113                // Field scala/package$.MODULE$:Lscala/package$;
        23: invokevirtual #117                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        26: getstatic     #122                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        29: iconst_1
        30: anewarray     #5                  // class java/lang/Object
        33: dup
        34: iconst_0
        35: aload_3
        36: aastore
        37: invokevirtual #126                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        40: invokevirtual #131                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        43: checkcast     #133                // class scala/collection/immutable/Seq
        46: astore_1
        47: goto          63
        50: getstatic     #113                // Field scala/package$.MODULE$:Lscala/package$;
        53: invokevirtual #117                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        56: invokevirtual #137                // Method scala/collection/immutable/Seq$.empty:()Lscala/collection/SeqOps;
        59: checkcast     #133                // class scala/collection/immutable/Seq
        62: astore_1
        63: aload_1
        64: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 50
          locals = [ top, class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class scala/util/Either$RightProjection, class scala/collection/immutable/Seq, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 812: 0
        line 813: 5
        line 814: 50
        line 812: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      30     3     b   Ljava/lang/Object;
            0      65     0  this   Lscala/util/Either$RightProjection;
    Signature: #108                         // ()Lscala/collection/immutable/Seq<TB;>;

  public scala.Option<B> toOption();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: astore_2
         5: aload_2
         6: instanceof    #38                 // class scala/util/Right
         9: ifeq          32
        12: aload_2
        13: checkcast     #38                 // class scala/util/Right
        16: invokevirtual #41                 // Method scala/util/Right.value:()Ljava/lang/Object;
        19: astore_3
        20: new           #95                 // class scala/Some
        23: dup
        24: aload_3
        25: invokespecial #96                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        28: astore_1
        29: goto          36
        32: getstatic     #102                // Field scala/None$.MODULE$:Lscala/None$;
        35: astore_1
        36: aload_1
        37: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 32
          locals = [ top, class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/util/Either$RightProjection, class scala/Option, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 825: 0
        line 826: 5
        line 827: 32
        line 825: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      12     3     b   Ljava/lang/Object;
            0      38     0  this   Lscala/util/Either$RightProjection;
    Signature: #140                         // ()Lscala/Option<TB;>;

  public <A extends java.lang.Object, B extends java.lang.Object> scala.util.Either$RightProjection<A, B> copy(scala.util.Either<A, B>);
    descriptor: (Lscala/util/Either;)Lscala/util/Either$RightProjection;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class scala/util/Either$RightProjection
         3: dup
         4: aload_1
         5: invokespecial #146                // Method "<init>":(Lscala/util/Either;)V
         8: areturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/util/Either$RightProjection;
            0       9     1     e   Lscala/util/Either;
    Signature: #143                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Lscala/util/Either<TA;TB;>;)Lscala/util/Either$RightProjection<TA;TB;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public <A extends java.lang.Object, B extends java.lang.Object> scala.util.Either<A, B> copy$default$1();
    descriptor: ()Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #36                 // Method e:()Lscala/util/Either;
         4: areturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Either$RightProjection;
    Signature: #148                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>()Lscala/util/Either<TA;TB;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #151                // String RightProjection
         2: areturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/util/Either$RightProjection;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/util/Either$RightProjection;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: tableswitch   { // 0 to 0
                       0: 20
                 default: 25
            }
        20: aload_0
        21: invokevirtual #36                 // Method e:()Lscala/util/Either;
        24: areturn
        25: iload_1
        26: invokestatic  #161                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        29: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 4 /* same */
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/util/Either$RightProjection;
            0      30     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #12                 // class scala/runtime/ScalaRunTime$$anon$1
         3: dup
         4: aload_0
         5: invokespecial #167                // Method scala/runtime/ScalaRunTime$$anon$1."<init>":(Lscala/Product;)V
         8: areturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/util/Either$RightProjection;
    Signature: #164                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class scala/util/Either$RightProjection
         4: ireturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/Either$RightProjection;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: tableswitch   { // 0 to 0
                       0: 20
                 default: 23
            }
        20: ldc           #171                // String e
        22: areturn
        23: iload_1
        24: invokestatic  #161                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        27: checkcast     #173                // class java/lang/String
        30: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/util/Either$RightProjection;
            0      31     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #179                // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
         3: aload_0
         4: invokevirtual #183                // Method scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
         7: ireturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/util/Either$RightProjection;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #122                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #188                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/util/Either$RightProjection;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     67
         5: aload_1
         6: instanceof    #2                  // class scala/util/Either$RightProjection
         9: ifeq          17
        12: iconst_1
        13: istore_2
        14: goto          19
        17: iconst_0
        18: istore_2
        19: iload_2
        20: ifeq          69
        23: aload_1
        24: checkcast     #2                  // class scala/util/Either$RightProjection
        27: astore_3
        28: aload_0
        29: invokevirtual #36                 // Method e:()Lscala/util/Either;
        32: aload_3
        33: invokevirtual #36                 // Method e:()Lscala/util/Either;
        36: astore        4
        38: dup
        39: ifnonnull     51
        42: pop
        43: aload         4
        45: ifnull        59
        48: goto          63
        51: aload         4
        53: invokevirtual #191                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          63
        59: iconst_1
        60: goto          64
        63: iconst_0
        64: ifeq          69
        67: iconst_1
        68: ireturn
        69: iconst_0
        70: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 17 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class scala/util/Either$RightProjection, class java/lang/Object, int, class scala/util/Either$RightProjection, class scala/util/Either ]
          stack = [ class scala/util/Either ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lscala/util/Either$RightProjection;
            0      71     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.util.Either$RightProjection(scala.util.Either<A, B>);
    descriptor: (Lscala/util/Either;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #31                 // Field e:Lscala/util/Either;
         5: aload_0
         6: invokespecial #195                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 681: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/Either$RightProjection;
            0      10     1     e   Lscala/util/Either;
    Signature: #192                         // (Lscala/util/Either<TA;TB;>;)V
    MethodParameters:
      Name                           Flags
      e                              final
}
InnerClasses:
  public final #12;                       // class scala/runtime/ScalaRunTime$$anon$1
  public static final #15= #2 of #14;     // RightProjection=class scala/util/Either$RightProjection of class scala/util/Either
Signature: #3                           // <A:Ljava/lang/Object;B:Ljava/lang/Object;>Ljava/lang/Object;Lscala/Product;Ljava/io/Serializable;
SourceFile: "Either.scala"
Deprecated: true
  ScalaInlineInfo: length = 0x81 (unknown attribute)
   01 01 00 19 00 2E 00 90 01 00 A8 00 4E 01 00 8D
   00 8E 01 00 93 00 1C 01 00 10 00 1C 01 00 BD 00
   4E 01 00 51 00 49 01 00 5B 00 5C 01 00 69 00 5C
   01 00 53 00 54 01 00 48 00 49 01 00 34 00 35 01
   00 20 00 21 01 00 3F 00 40 01 00 AE 00 99 01 00
   56 00 54 01 00 98 00 99 01 00 9A 00 9B 01 00 A9
   00 AA 01 00 13 00 14 01 00 A3 00 14 01 00 95 00
   96 01 00 8A 00 8B 01 00 6A 00 6B 01 00 B8 00 96
   01
  Scala: length = 0x0 (unknown attribute)

