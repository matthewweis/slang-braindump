Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/AnyTableStepper.class
  Last modified May 29, 2022; size 5884 bytes
  SHA-256 checksum 48cf12980d7798f73b29f5e3c6eff2390b753f4551b2acde199e15bec999d4cc
  Compiled from "TableStepper.scala"
public final class scala.collection.convert.impl.AnyTableStepper<A extends java.lang.Object, I extends java.lang.Object> extends scala.collection.convert.impl.TableStepperBase<A, I, scala.collection.AnyStepper<A>, scala.collection.convert.impl.AnyTableStepper<A, I>> implements scala.collection.AnyStepper<A>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/AnyTableStepper
  super_class: #5                         // scala/collection/convert/impl/TableStepperBase
  interfaces: 1, fields: 2, methods: 21, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/AnyTableStepper
    #2 = Class              #1            // scala/collection/convert/impl/AnyTableStepper
    #3 = Utf8               <A:Ljava/lang/Object;I:Ljava/lang/Object;>Lscala/collection/convert/impl/TableStepperBase<TA;TI;Lscala/collection/AnyStepper<TA;>;Lscala/collection/convert/impl/AnyTableStepper<TA;TI;>;>;Lscala/collection/AnyStepper<TA;>;
    #4 = Utf8               scala/collection/convert/impl/TableStepperBase
    #5 = Class              #4            // scala/collection/convert/impl/TableStepperBase
    #6 = Utf8               scala/collection/AnyStepper
    #7 = Class              #6            // scala/collection/AnyStepper
    #8 = Utf8               TableStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005]3QAC\u0006\u0003\u001fMA\u0001\"\u000e\u0001\u0003\u0002\u0003\u0006IA\u000e\u0005\ns\u0001\u0011\t\u0011)A\u0005uuB\u0001b\u0010\u0001\u0003\u0002\u0003\u0006I\u0001\u0011\u0005\t\u0007\u0002\u0011\t\u0011)A\u0005\t\"AQ\t\u0001B\u0001B\u0003%a\u0007C\u0005G\u0001\t\u0005\t\u0015!\u00037\u000f\")\u0011\n\u0001C\u0001\u0015\")\u0011\u000b\u0001C\u0001%\")1\u000b\u0001C\u0001)\ny\u0011I\\=UC\ndWm\u0015;faB,\'O\u0003\u0002\r\u001b\u0005!\u0011.\u001c9m\u0015\tqq\"A\u0004d_:4XM\u001d;\u000b\u0005A\t\u0012AC2pY2,7\r^5p]*\t!#A\u0003tG\u0006d\u0017-F\u0002\u00157\u001d\u001a2\u0001A\u000b1!\u00191r#\u0007\u00141i5\t1\"\u0003\u0002\u0019\u0017\t\u0001B+\u00192mKN#X\r\u001d9fe\n\u000b7/\u001a\t\u00035ma\u0001\u0001B\u0003\u001d\u0001\t\u0007aDA\u0001B\u0007\u0001\t\"aH\u0012\u0011\u0005\u0001\nS\"A\t\n\u0005\t\n\"a\u0002(pi\"Lgn\u001a\t\u0003A\u0011J!!J\t\u0003\u0007\u0005s\u0017\u0010\u0005\u0002\u001bO\u0011)\u0001\u0006\u0001b\u0001S\t\t\u0011*\u0005\u0002+[A\u0011\u0001eK\u0005\u0003YE\u0011AAT;mYB\u0011\u0001EL\u0005\u0003_E\u0011a!\u00118z%\u00164\u0007cA\u0019335\tq\"\u0003\u00024\u001f\tQ\u0011I\\=Ti\u0016\u0004\b/\u001a:\u0011\tY\u0001\u0011DJ\u0001\u000b?6\f\u0007\u0010T3oORD\u0007C\u0001\u00118\u0013\tA\u0014CA\u0002J]R\faa\u0018;bE2,\u0007c\u0001\u0011<M%\u0011A(\u0005\u0002\u0006\u0003J\u0014\u0018-_\u0005\u0003}]\tQ\u0001^1cY\u0016\fq!\u001b;fe\u0006$X\r\u0005\u0003!\u0003\u001a2\u0013B\u0001\"\u0012\u0005%1UO\\2uS>t\u0017\'A\u0004fqR\u0014\u0018m\u0019;\u0011\t\u0001\ne%G\u0001\u0004?&\u0004\u0014aA0j\u001d&\u0011\u0001jF\u0001\u0003S:\u000ba\u0001P5oSRtDc\u0002\u001bL\u00196su\n\u0015\u0005\u0006k\u001d\u0001\rA\u000e\u0005\u0006s\u001d\u0001\rA\u000f\u0005\u0006\u007f\u001d\u0001\r\u0001\u0011\u0005\u0006\u0007\u001e\u0001\r\u0001\u0012\u0005\u0006\u000b\u001e\u0001\rA\u000e\u0005\u0006\r\u001e\u0001\rAN\u0001\t]\u0016DHo\u0015;faR\t\u0011$A\u0005tK6L7\r\\8oKR\u0011A\'\u0016\u0005\u0006-&\u0001\rAN\u0001\u0005Q\u0006dg\r
   #12 = Utf8               iterate
   #13 = Utf8               Lscala/Function1;
   #14 = Utf8               Lscala/Function1<TI;TI;>;
   #15 = Utf8               extract
   #16 = Utf8               Lscala/Function1<TI;TA;>;
   #17 = Utf8               spliterator
   #18 = Utf8               ()Ljava/util/Spliterator;
   #19 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<TB;>;
   #20 = Utf8               spliterator$
   #21 = Utf8               (Lscala/collection/AnyStepper;)Ljava/util/Spliterator;
   #22 = NameAndType        #20:#21       // spliterator$:(Lscala/collection/AnyStepper;)Ljava/util/Spliterator;
   #23 = InterfaceMethodref #7.#22        // scala/collection/AnyStepper.spliterator$:(Lscala/collection/AnyStepper;)Ljava/util/Spliterator;
   #24 = Utf8               this
   #25 = Utf8               Lscala/collection/convert/impl/AnyTableStepper;
   #26 = Utf8               javaIterator
   #27 = Utf8               ()Ljava/util/Iterator;
   #28 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<TB;>;
   #29 = Utf8               javaIterator$
   #30 = Utf8               (Lscala/collection/AnyStepper;)Ljava/util/Iterator;
   #31 = NameAndType        #29:#30       // javaIterator$:(Lscala/collection/AnyStepper;)Ljava/util/Iterator;
   #32 = InterfaceMethodref #7.#31        // scala/collection/AnyStepper.javaIterator$:(Lscala/collection/AnyStepper;)Ljava/util/Iterator;
   #33 = Utf8               nextStep$mcD$sp
   #34 = Utf8               ()D
   #35 = Utf8               scala/collection/Stepper
   #36 = Class              #35           // scala/collection/Stepper
   #37 = Utf8               nextStep$mcD$sp$
   #38 = Utf8               (Lscala/collection/Stepper;)D
   #39 = NameAndType        #37:#38       // nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #40 = InterfaceMethodref #36.#39       // scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #41 = Utf8               nextStep$mcI$sp
   #42 = Utf8               ()I
   #43 = Utf8               nextStep$mcI$sp$
   #44 = Utf8               (Lscala/collection/Stepper;)I
   #45 = NameAndType        #43:#44       // nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #46 = InterfaceMethodref #36.#45       // scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #47 = Utf8               nextStep$mcJ$sp
   #48 = Utf8               ()J
   #49 = Utf8               nextStep$mcJ$sp$
   #50 = Utf8               (Lscala/collection/Stepper;)J
   #51 = NameAndType        #49:#50       // nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #52 = InterfaceMethodref #36.#51       // scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #53 = Utf8               trySplit$mcD$sp
   #54 = Utf8               ()Lscala/collection/Stepper;
   #55 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
   #56 = Utf8               trySplit$mcD$sp$
   #57 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #58 = NameAndType        #56:#57       // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #59 = InterfaceMethodref #36.#58       // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #60 = Utf8               trySplit$mcI$sp
   #61 = Utf8               trySplit$mcI$sp$
   #62 = NameAndType        #61:#57       // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #63 = InterfaceMethodref #36.#62       // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #64 = Utf8               trySplit$mcJ$sp
   #65 = Utf8               trySplit$mcJ$sp$
   #66 = NameAndType        #65:#57       // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #67 = InterfaceMethodref #36.#66       // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #68 = Utf8               spliterator$mcD$sp
   #69 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #70 = Utf8               spliterator$mcD$sp$
   #71 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #72 = NameAndType        #70:#71       // spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #73 = InterfaceMethodref #36.#72       // scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #74 = Utf8               spliterator$mcI$sp
   #75 = Utf8               spliterator$mcI$sp$
   #76 = NameAndType        #75:#71       // spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #77 = InterfaceMethodref #36.#76       // scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #78 = Utf8               spliterator$mcJ$sp
   #79 = Utf8               spliterator$mcJ$sp$
   #80 = NameAndType        #79:#71       // spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #81 = InterfaceMethodref #36.#80       // scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #82 = Utf8               javaIterator$mcD$sp
   #83 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
   #84 = Utf8               javaIterator$mcD$sp$
   #85 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
   #86 = NameAndType        #84:#85       // javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #87 = InterfaceMethodref #36.#86       // scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #88 = Utf8               javaIterator$mcI$sp
   #89 = Utf8               javaIterator$mcI$sp$
   #90 = NameAndType        #89:#85       // javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #91 = InterfaceMethodref #36.#90       // scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #92 = Utf8               javaIterator$mcJ$sp
   #93 = Utf8               javaIterator$mcJ$sp$
   #94 = NameAndType        #93:#85       // javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #95 = InterfaceMethodref #36.#94       // scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #96 = Utf8               iterator
   #97 = Utf8               ()Lscala/collection/Iterator;
   #98 = Utf8               ()Lscala/collection/Iterator<TA;>;
   #99 = Utf8               iterator$
  #100 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #101 = NameAndType        #99:#100      // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #102 = InterfaceMethodref #36.#101      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #103 = Utf8               nextStep
  #104 = Utf8               ()Ljava/lang/Object;
  #105 = Utf8               ()TA;
  #106 = Utf8               hasStep
  #107 = Utf8               ()Z
  #108 = NameAndType        #106:#107     // hasStep:()Z
  #109 = Methodref          #2.#108       // scala/collection/convert/impl/AnyTableStepper.hasStep:()Z
  #110 = NameAndType        #15:#13       // extract:Lscala/Function1;
  #111 = Fieldref           #2.#110       // scala/collection/convert/impl/AnyTableStepper.extract:Lscala/Function1;
  #112 = Utf8               myCurrent
  #113 = NameAndType        #112:#104     // myCurrent:()Ljava/lang/Object;
  #114 = Methodref          #2.#113       // scala/collection/convert/impl/AnyTableStepper.myCurrent:()Ljava/lang/Object;
  #115 = Utf8               scala/Function1
  #116 = Class              #115          // scala/Function1
  #117 = Utf8               apply
  #118 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #119 = NameAndType        #117:#118     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #120 = InterfaceMethodref #116.#119     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #121 = NameAndType        #12:#13       // iterate:Lscala/Function1;
  #122 = Fieldref           #2.#121       // scala/collection/convert/impl/AnyTableStepper.iterate:Lscala/Function1;
  #123 = Utf8               myCurrent_$eq
  #124 = Utf8               (Ljava/lang/Object;)V
  #125 = NameAndType        #123:#124     // myCurrent_$eq:(Ljava/lang/Object;)V
  #126 = Methodref          #2.#125       // scala/collection/convert/impl/AnyTableStepper.myCurrent_$eq:(Ljava/lang/Object;)V
  #127 = Utf8               scala/collection/Stepper$
  #128 = Class              #127          // scala/collection/Stepper$
  #129 = Utf8               MODULE$
  #130 = Utf8               Lscala/collection/Stepper$;
  #131 = NameAndType        #129:#130     // MODULE$:Lscala/collection/Stepper$;
  #132 = Fieldref           #128.#131     // scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
  #133 = Utf8               java/util/NoSuchElementException
  #134 = Class              #133          // java/util/NoSuchElementException
  #135 = Utf8               Empty Stepper
  #136 = String             #135          // Empty Stepper
  #137 = Utf8               <init>
  #138 = Utf8               (Ljava/lang/String;)V
  #139 = NameAndType        #137:#138     // "<init>":(Ljava/lang/String;)V
  #140 = Methodref          #134.#139     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #141 = Utf8               ans
  #142 = Utf8               Ljava/lang/Object;
  #143 = Utf8               semiclone
  #144 = Utf8               (I)Lscala/collection/convert/impl/AnyTableStepper;
  #145 = Utf8               (I)Lscala/collection/convert/impl/AnyTableStepper<TA;TI;>;
  #146 = Utf8               half
  #147 = Utf8               maxLength
  #148 = NameAndType        #147:#42      // maxLength:()I
  #149 = Methodref          #2.#148       // scala/collection/convert/impl/AnyTableStepper.maxLength:()I
  #150 = Utf8               table
  #151 = Utf8               ()[Ljava/lang/Object;
  #152 = NameAndType        #150:#151     // table:()[Ljava/lang/Object;
  #153 = Methodref          #2.#152       // scala/collection/convert/impl/AnyTableStepper.table:()[Ljava/lang/Object;
  #154 = Utf8               i0
  #155 = NameAndType        #154:#42      // i0:()I
  #156 = Methodref          #2.#155       // scala/collection/convert/impl/AnyTableStepper.i0:()I
  #157 = Utf8               (I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
  #158 = NameAndType        #137:#157     // "<init>":(I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
  #159 = Methodref          #2.#158       // scala/collection/convert/impl/AnyTableStepper."<init>":(I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
  #160 = Utf8               I
  #161 = Utf8               trySplit
  #162 = NameAndType        #161:#104     // trySplit:()Ljava/lang/Object;
  #163 = Methodref          #2.#162       // scala/collection/convert/impl/AnyTableStepper.trySplit:()Ljava/lang/Object;
  #164 = Utf8               ()Lscala/collection/AnyStepper;
  #165 = Utf8               (I)Lscala/collection/convert/impl/TableStepperBase;
  #166 = NameAndType        #143:#144     // semiclone:(I)Lscala/collection/convert/impl/AnyTableStepper;
  #167 = Methodref          #2.#166       // scala/collection/convert/impl/AnyTableStepper.semiclone:(I)Lscala/collection/convert/impl/AnyTableStepper;
  #168 = Utf8               (I[TI;Lscala/Function1<TI;TI;>;Lscala/Function1<TI;TA;>;II)V
  #169 = Utf8               _maxLength
  #170 = Utf8               _table
  #171 = Utf8               _i0
  #172 = Utf8               _iN
  #173 = Utf8               (I[Ljava/lang/Object;II)V
  #174 = NameAndType        #137:#173     // "<init>":(I[Ljava/lang/Object;II)V
  #175 = Methodref          #5.#174       // scala/collection/convert/impl/TableStepperBase."<init>":(I[Ljava/lang/Object;II)V
  #176 = Utf8               [Ljava/lang/Object;
  #177 = Utf8               Signature
  #178 = Utf8               Code
  #179 = Utf8               LineNumberTable
  #180 = Utf8               LocalVariableTable
  #181 = Utf8               StackMapTable
  #182 = Utf8               MethodParameters
  #183 = Utf8               SourceFile
  #184 = Utf8               RuntimeVisibleAnnotations
  #185 = Utf8               ScalaInlineInfo
  #186 = Utf8               ScalaSig
{
  private final scala.Function1<I, I> iterate;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/Function1<TI;TI;>;

  private final scala.Function1<I, A> extract;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #16                          // Lscala/Function1<TI;TA;>;

  public <B extends java.lang.Object> java.util.Spliterator<B> spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #23                 // InterfaceMethod scala/collection/AnyStepper.spliterator$:(Lscala/collection/AnyStepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #19                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<TB;>;

  public <B extends java.lang.Object> java.util.Iterator<B> javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #32                 // InterfaceMethod scala/collection/AnyStepper.javaIterator$:(Lscala/collection/AnyStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #28                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<TB;>;

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #40                 // InterfaceMethod scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
         4: dreturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #46                 // InterfaceMethod scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
         4: ireturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #52                 // InterfaceMethod scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
         4: lreturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #59                 // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #55                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #63                 // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #55                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #67                 // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #55                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #73                 // InterfaceMethod scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #69                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #77                 // InterfaceMethod scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #69                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #81                 // InterfaceMethod scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #69                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #83                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #83                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #95                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #83                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<A> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #102                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #98                          // ()Lscala/collection/Iterator<TA;>;

  public A nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method hasStep:()Z
         4: ifeq          40
         7: aload_0
         8: getfield      #111                // Field extract:Lscala/Function1;
        11: aload_0
        12: invokevirtual #114                // Method myCurrent:()Ljava/lang/Object;
        15: invokeinterface #120,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        20: astore_1
        21: aload_0
        22: aload_0
        23: getfield      #122                // Field iterate:Lscala/Function1;
        26: aload_0
        27: invokevirtual #114                // Method myCurrent:()Ljava/lang/Object;
        30: invokeinterface #120,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        35: invokevirtual #126                // Method myCurrent_$eq:(Ljava/lang/Object;)V
        38: aload_1
        39: areturn
        40: getstatic     #132                // Field scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
        43: pop
        44: new           #134                // class java/util/NoSuchElementException
        47: dup
        48: ldc           #136                // String Empty Stepper
        50: invokespecial #140                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        53: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 40 /* same */
      LineNumberTable:
        line 78: 0
        line 79: 7
        line 80: 21
        line 81: 38
        line 83: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      18     1   ans   Ljava/lang/Object;
            0      54     0  this   Lscala/collection/convert/impl/AnyTableStepper;
    Signature: #105                         // ()TA;

  public scala.collection.convert.impl.AnyTableStepper<A, I> semiclone(int);
    descriptor: (I)Lscala/collection/convert/impl/AnyTableStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: new           #2                  // class scala/collection/convert/impl/AnyTableStepper
         3: dup
         4: aload_0
         5: invokevirtual #149                // Method maxLength:()I
         8: aload_0
         9: invokevirtual #153                // Method table:()[Ljava/lang/Object;
        12: aload_0
        13: getfield      #122                // Field iterate:Lscala/Function1;
        16: aload_0
        17: getfield      #111                // Field extract:Lscala/Function1;
        20: aload_0
        21: invokevirtual #156                // Method i0:()I
        24: iload_1
        25: invokespecial #159                // Method "<init>":(I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
        28: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lscala/collection/convert/impl/AnyTableStepper;
            0      29     1  half   I
    Signature: #145                         // (I)Lscala/collection/convert/impl/AnyTableStepper<TA;TI;>;
    MethodParameters:
      Name                           Flags
      half                           final

  public scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #163                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #36                 // class scala/collection/Stepper
         7: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/AnyTableStepper;

  public scala.collection.AnyStepper trySplit();
    descriptor: ()Lscala/collection/AnyStepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #163                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #7                  // class scala/collection/AnyStepper
         7: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/AnyTableStepper;

  public scala.collection.convert.impl.TableStepperBase semiclone(int);
    descriptor: (I)Lscala/collection/convert/impl/TableStepperBase;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #167                // Method semiclone:(I)Lscala/collection/convert/impl/AnyTableStepper;
         5: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/AnyTableStepper;
            0       6     1  half   I
    MethodParameters:
      Name                           Flags
      half                           final

  public scala.collection.convert.impl.AnyTableStepper(int, I[], scala.Function1<I, I>, scala.Function1<I, A>, int, int);
    descriptor: (I[Ljava/lang/Object;Lscala/Function1;Lscala/Function1;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=7
         0: aload_0
         1: aload_3
         2: putfield      #122                // Field iterate:Lscala/Function1;
         5: aload_0
         6: aload         4
         8: putfield      #111                // Field extract:Lscala/Function1;
        11: aload_0
        12: iload_1
        13: aload_2
        14: iload         5
        16: iload         6
        18: invokespecial #175                // Method scala/collection/convert/impl/TableStepperBase."<init>":(I[Ljava/lang/Object;II)V
        21: return
      LineNumberTable:
        line 73: 0
        line 75: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/collection/convert/impl/AnyTableStepper;
            0      22     1 _maxLength   I
            0      22     2 _table   [Ljava/lang/Object;
            0      22     3 iterate   Lscala/Function1;
            0      22     4 extract   Lscala/Function1;
            0      22     5   _i0   I
            0      22     6   _iN   I
    Signature: #168                         // (I[TI;Lscala/Function1<TI;TI;>;Lscala/Function1<TI;TA;>;II)V
    MethodParameters:
      Name                           Flags
      _maxLength                     final
      _table                         final
      iterate                        final
      extract                        final
      _i0                            final
      _iN                            final
}
Signature: #3                           // <A:Ljava/lang/Object;I:Ljava/lang/Object;>Lscala/collection/convert/impl/TableStepperBase<TA;TI;Lscala/collection/AnyStepper<TA;>;Lscala/collection/convert/impl/AnyTableStepper<TA;TI;>;>;Lscala/collection/AnyStepper<TA;>;
SourceFile: "TableStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005]3QAC\u0006\u0003\u001fMA\u0001\"\u000e\u0001\u0003\u0002\u0003\u0006IA\u000e\u0005\ns\u0001\u0011\t\u0011)A\u0005uuB\u0001b\u0010\u0001\u0003\u0002\u0003\u0006I\u0001\u0011\u0005\t\u0007\u0002\u0011\t\u0011)A\u0005\t\"AQ\t\u0001B\u0001B\u0003%a\u0007C\u0005G\u0001\t\u0005\t\u0015!\u00037\u000f\")\u0011\n\u0001C\u0001\u0015\")\u0011\u000b\u0001C\u0001%\")1\u000b\u0001C\u0001)\ny\u0011I\\=UC\ndWm\u0015;faB,\'O\u0003\u0002\r\u001b\u0005!\u0011.\u001c9m\u0015\tqq\"A\u0004d_:4XM\u001d;\u000b\u0005A\t\u0012AC2pY2,7\r^5p]*\t!#A\u0003tG\u0006d\u0017-F\u0002\u00157\u001d\u001a2\u0001A\u000b1!\u00191r#\u0007\u00141i5\t1\"\u0003\u0002\u0019\u0017\t\u0001B+\u00192mKN#X\r\u001d9fe\n\u000b7/\u001a\t\u00035ma\u0001\u0001B\u0003\u001d\u0001\t\u0007aDA\u0001B\u0007\u0001\t\"aH\u0012\u0011\u0005\u0001\nS\"A\t\n\u0005\t\n\"a\u0002(pi\"Lgn\u001a\t\u0003A\u0011J!!J\t\u0003\u0007\u0005s\u0017\u0010\u0005\u0002\u001bO\u0011)\u0001\u0006\u0001b\u0001S\t\t\u0011*\u0005\u0002+[A\u0011\u0001eK\u0005\u0003YE\u0011AAT;mYB\u0011\u0001EL\u0005\u0003_E\u0011a!\u00118z%\u00164\u0007cA\u0019335\tq\"\u0003\u00024\u001f\tQ\u0011I\\=Ti\u0016\u0004\b/\u001a:\u0011\tY\u0001\u0011DJ\u0001\u000b?6\f\u0007\u0010T3oORD\u0007C\u0001\u00118\u0013\tA\u0014CA\u0002J]R\faa\u0018;bE2,\u0007c\u0001\u0011<M%\u0011A(\u0005\u0002\u0006\u0003J\u0014\u0018-_\u0005\u0003}]\tQ\u0001^1cY\u0016\fq!\u001b;fe\u0006$X\r\u0005\u0003!\u0003\u001a2\u0013B\u0001\"\u0012\u0005%1UO\\2uS>t\u0017\'A\u0004fqR\u0014\u0018m\u0019;\u0011\t\u0001\ne%G\u0001\u0004?&\u0004\u0014aA0j\u001d&\u0011\u0001jF\u0001\u0003S:\u000ba\u0001P5oSRtDc\u0002\u001bL\u00196su\n\u0015\u0005\u0006k\u001d\u0001\rA\u000e\u0005\u0006s\u001d\u0001\rA\u000f\u0005\u0006\u007f\u001d\u0001\r\u0001\u0011\u0005\u0006\u0007\u001e\u0001\r\u0001\u0012\u0005\u0006\u000b\u001e\u0001\rA\u000e\u0005\u0006\r\u001e\u0001\rAN\u0001\t]\u0016DHo\u0015;faR\t\u0011$A\u0005tK6L7\r\\8oKR\u0011A\'\u0016\u0005\u0006-&\u0001\rAN\u0001\u0005Q\u0006dg\r"
    )
  ScalaInlineInfo: length = 0x6D (unknown attribute)
   01 01 00 15 00 89 00 9D 01 00 60 00 61 01 00 1A
   00 1B 01 00 52 00 1B 01 00 58 00 1B 01 00 5C 00
   1B 01 00 67 00 68 01 00 21 00 22 01 00 29 00 2A
   01 00 2F 00 30 01 00 8F 00 90 01 00 8F 00 A5 01
   00 11 00 12 01 00 44 00 12 01 00 4A 00 12 01 00
   4E 00 12 01 00 A1 00 A4 01 00 A1 00 36 01 00 35
   00 36 01 00 3C 00 36 01 00 40 00 36 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
