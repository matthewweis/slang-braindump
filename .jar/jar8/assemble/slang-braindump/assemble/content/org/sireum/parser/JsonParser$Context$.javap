Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/parser/JsonParser$Context$.class
  Last modified May 29, 2022; size 7377 bytes
  SHA-256 checksum eb266f2a7cb851236954c8dfd9b2e6bc185006bfacf8f9867a0a08ccf299690e
  Compiled from "JsonParser.scala"
public class org.sireum.parser.JsonParser$Context$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/parser/JsonParser$Context$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 8, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/parser/JsonParser$Context$
    #2 = Class              #1            // org/sireum/parser/JsonParser$Context$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JsonParser.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #12 = Class              #11           // org/sireum/$internal/PackageTrait$ISZ$
   #13 = Utf8               org/sireum/$internal/PackageTrait
   #14 = Class              #13           // org/sireum/$internal/PackageTrait
   #15 = Utf8               ISZ$
   #16 = Utf8               org/sireum/parser/Json$State
   #17 = Class              #16           // org/sireum/parser/Json$State
   #18 = Utf8               org/sireum/parser/Json
   #19 = Class              #18           // org/sireum/parser/Json
   #20 = Utf8               State
   #21 = Utf8               org/sireum/parser/Json$State$
   #22 = Class              #21           // org/sireum/parser/Json$State$
   #23 = Utf8               State$
   #24 = Utf8               org/sireum/parser/Json$State$State$Slang
   #25 = Class              #24           // org/sireum/parser/Json$State$State$Slang
   #26 = Utf8               State$Slang
   #27 = Utf8               org/sireum/parser/Json$State$State$Slang$state$
   #28 = Class              #27           // org/sireum/parser/Json$State$State$Slang$state$
   #29 = Utf8               state$
   #30 = Utf8               org/sireum/parser/JsonParser$Context
   #31 = Class              #30           // org/sireum/parser/JsonParser$Context
   #32 = Utf8               org/sireum/parser/JsonParser
   #33 = Class              #32           // org/sireum/parser/JsonParser
   #34 = Utf8               Context
   #35 = Utf8               Context$
   #36 = Utf8               org/sireum/parser/JsonParser$Result
   #37 = Class              #36           // org/sireum/parser/JsonParser$Result
   #38 = Utf8               Result
   #39 = Utf8               MODULE$
   #40 = Utf8               Lorg/sireum/parser/JsonParser$Context$;
   #41 = Utf8               <clinit>
   #42 = Utf8               ()V
   #43 = Utf8               <init>
   #44 = NameAndType        #43:#42       // "<init>":()V
   #45 = Methodref          #2.#44        // org/sireum/parser/JsonParser$Context$."<init>":()V
   #46 = NameAndType        #39:#40       // MODULE$:Lorg/sireum/parser/JsonParser$Context$;
   #47 = Fieldref           #2.#46        // org/sireum/parser/JsonParser$Context$.MODULE$:Lorg/sireum/parser/JsonParser$Context$;
   #48 = Utf8               create
   #49 = Utf8               (Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
   #50 = Utf8               (Ljava/lang/String;ILorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/Json$State;>;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
   #51 = Utf8               ruleName
   #52 = Utf8               ruleType
   #53 = Utf8               accepts
   #54 = Utf8               i
   #55 = Utf8               org/sireum/helper$
   #56 = Class              #55           // org/sireum/helper$
   #57 = Utf8               Lorg/sireum/helper$;
   #58 = NameAndType        #39:#57       // MODULE$:Lorg/sireum/helper$;
   #59 = Fieldref           #56.#58       // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
   #60 = Utf8               org/sireum/MS$
   #61 = Class              #60           // org/sireum/MS$
   #62 = Utf8               Lorg/sireum/MS$;
   #63 = NameAndType        #39:#62       // MODULE$:Lorg/sireum/MS$;
   #64 = Fieldref           #61.#63       // org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
   #65 = Utf8               org/sireum/Z$
   #66 = Class              #65           // org/sireum/Z$
   #67 = Utf8               Lorg/sireum/Z$;
   #68 = NameAndType        #39:#67       // MODULE$:Lorg/sireum/Z$;
   #69 = Fieldref           #66.#68       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #70 = Utf8               apply
   #71 = Utf8               (I)Lorg/sireum/Z;
   #72 = NameAndType        #70:#71       // apply:(I)Lorg/sireum/Z;
   #73 = Methodref          #66.#72       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #74 = Utf8               org/sireum/B
   #75 = Class              #74           // org/sireum/B
   #76 = Utf8               org/sireum/package$
   #77 = Class              #76           // org/sireum/package$
   #78 = Utf8               Lorg/sireum/package$;
   #79 = NameAndType        #39:#78       // MODULE$:Lorg/sireum/package$;
   #80 = Fieldref           #77.#79       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #81 = Utf8               F
   #82 = Utf8               ()Z
   #83 = NameAndType        #81:#82       // F:()Z
   #84 = Methodref          #77.#83       // org/sireum/package$.F:()Z
   #85 = Utf8               (Z)V
   #86 = NameAndType        #43:#85       // "<init>":(Z)V
   #87 = Methodref          #75.#86       // org/sireum/B."<init>":(Z)V
   #88 = Utf8               Lorg/sireum/parser/Json$State$;
   #89 = NameAndType        #39:#88       // MODULE$:Lorg/sireum/parser/Json$State$;
   #90 = Fieldref           #22.#89       // org/sireum/parser/Json$State$.MODULE$:Lorg/sireum/parser/Json$State$;
   #91 = Utf8               $StateCompanion
   #92 = Utf8               ()Lorg/sireum/$ZCompanion;
   #93 = NameAndType        #91:#92       // $StateCompanion:()Lorg/sireum/$ZCompanion;
   #94 = Methodref          #22.#93       // org/sireum/parser/Json$State$.$StateCompanion:()Lorg/sireum/$ZCompanion;
   #95 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
   #96 = NameAndType        #48:#95       // create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
   #97 = Methodref          #61.#96       // org/sireum/MS$.create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
   #98 = Utf8               assignMut
   #99 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #100 = NameAndType        #98:#99       // assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #101 = Methodref          #56.#100      // org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #102 = Utf8               org/sireum/MS
  #103 = Class              #102          // org/sireum/MS
  #104 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #105 = MethodType         #104          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #106 = Utf8               $anonfun$create$1$adapted
  #107 = Utf8               (Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #108 = NameAndType        #106:#107     // $anonfun$create$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #109 = Methodref          #2.#108       // org/sireum/parser/JsonParser$Context$.$anonfun$create$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #110 = MethodHandle       6:#109        // REF_invokeStatic org/sireum/parser/JsonParser$Context$.$anonfun$create$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #111 = Integer            1
  #112 = Utf8               java/lang/invoke/LambdaMetafactory
  #113 = Class              #112          // java/lang/invoke/LambdaMetafactory
  #114 = Utf8               altMetafactory
  #115 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #116 = NameAndType        #114:#115     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #117 = Methodref          #113.#116     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #118 = MethodHandle       6:#117        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #119 = Utf8               (Lorg/sireum/MS;)Lscala/Function1;
  #120 = NameAndType        #70:#119      // apply:(Lorg/sireum/MS;)Lscala/Function1;
  #121 = InvokeDynamic      #0:#120       // #0:apply:(Lorg/sireum/MS;)Lscala/Function1;
  #122 = Utf8               org/sireum/IS
  #123 = Class              #122          // org/sireum/IS
  #124 = Utf8               foreach
  #125 = Utf8               (Lscala/Function1;)V
  #126 = NameAndType        #124:#125     // foreach:(Lscala/Function1;)V
  #127 = Methodref          #123.#126     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #128 = Utf8               toIS
  #129 = Utf8               ()Lorg/sireum/IS;
  #130 = NameAndType        #128:#129     // toIS:()Lorg/sireum/IS;
  #131 = Methodref          #103.#130     // org/sireum/MS.toIS:()Lorg/sireum/IS;
  #132 = Utf8               scala/StringContext
  #133 = Class              #132          // scala/StringContext
  #134 = Utf8               scala/runtime/ScalaRunTime$
  #135 = Class              #134          // scala/runtime/ScalaRunTime$
  #136 = Utf8               Lscala/runtime/ScalaRunTime$;
  #137 = NameAndType        #39:#136      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #138 = Fieldref           #135.#137     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #139 = Utf8               java/lang/String
  #140 = Class              #139          // java/lang/String
  #141 = Utf8               0
  #142 = String             #141          // 0
  #143 = Utf8               [Ljava/lang/Object;
  #144 = Class              #143          // "[Ljava/lang/Object;"
  #145 = Utf8               wrapRefArray
  #146 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #147 = NameAndType        #145:#146     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #148 = Methodref          #135.#147     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #149 = Utf8               (Lscala/collection/immutable/Seq;)V
  #150 = NameAndType        #43:#149      // "<init>":(Lscala/collection/immutable/Seq;)V
  #151 = Methodref          #133.#150     // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
  #152 = Utf8               (Lscala/StringContext;)Lorg/sireum/parser/Json$State$State$Slang;
  #153 = NameAndType        #26:#152      // State$Slang:(Lscala/StringContext;)Lorg/sireum/parser/Json$State$State$Slang;
  #154 = Methodref          #22.#153      // org/sireum/parser/Json$State$.State$Slang:(Lscala/StringContext;)Lorg/sireum/parser/Json$State$State$Slang;
  #155 = Utf8               state
  #156 = Utf8               ()Lorg/sireum/parser/Json$State$State$Slang$state$;
  #157 = NameAndType        #155:#156     // state:()Lorg/sireum/parser/Json$State$State$Slang$state$;
  #158 = Methodref          #25.#157      // org/sireum/parser/Json$State$State$Slang.state:()Lorg/sireum/parser/Json$State$State$Slang$state$;
  #159 = Utf8               scala/collection/immutable/Nil$
  #160 = Class              #159          // scala/collection/immutable/Nil$
  #161 = Utf8               Lscala/collection/immutable/Nil$;
  #162 = NameAndType        #39:#161      // MODULE$:Lscala/collection/immutable/Nil$;
  #163 = Fieldref           #160.#162     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #164 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #165 = NameAndType        #70:#164      // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #166 = Methodref          #28.#165      // org/sireum/parser/Json$State$State$Slang$state$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
  #167 = Utf8               org/sireum/None$
  #168 = Class              #167          // org/sireum/None$
  #169 = Utf8               Lorg/sireum/None$;
  #170 = NameAndType        #39:#169      // MODULE$:Lorg/sireum/None$;
  #171 = Fieldref           #168.#170     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #172 = Utf8               ()Lorg/sireum/None;
  #173 = NameAndType        #70:#172      // apply:()Lorg/sireum/None;
  #174 = Methodref          #168.#173     // org/sireum/None$.apply:()Lorg/sireum/None;
  #175 = Utf8               ISZ
  #176 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #177 = NameAndType        #175:#176     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #178 = Methodref          #77.#177      // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #179 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #180 = NameAndType        #70:#179      // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #181 = Methodref          #12.#180      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #182 = Utf8               T
  #183 = NameAndType        #182:#82      // T:()Z
  #184 = Methodref          #77.#183      // org/sireum/package$.T:()Z
  #185 = Utf8               (Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
  #186 = NameAndType        #70:#185      // apply:(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
  #187 = Methodref          #2.#186       // org/sireum/parser/JsonParser$Context$.apply:(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
  #188 = Utf8               retMut
  #189 = NameAndType        #188:#99      // retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #190 = Methodref          #56.#189      // org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #191 = Utf8               x$1
  #192 = Utf8               Ljava/lang/String;
  #193 = Utf8               x$2
  #194 = Utf8               I
  #195 = Utf8               x$3
  #196 = Utf8               Lorg/sireum/IS;
  #197 = Utf8               x$4
  #198 = Utf8               Lorg/sireum/Z;
  #199 = Utf8               x$5
  #200 = Utf8               Lorg/sireum/None;
  #201 = Utf8               x$6
  #202 = Utf8               x$7
  #203 = Utf8               x$8
  #204 = Utf8               x$9
  #205 = Utf8               Z
  #206 = Utf8               x$10
  #207 = Utf8               x$11
  #208 = Utf8               x$12
  #209 = Utf8               accepting
  #210 = Utf8               Lorg/sireum/MS;
  #211 = Utf8               this
  #212 = Utf8               (Ljava/lang/String;ILorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
  #213 = Utf8               resOpt
  #214 = Utf8               j
  #215 = Utf8               max
  #216 = Utf8               initial
  #217 = Utf8               trees
  #218 = Utf8               found
  #219 = Utf8               failIndex
  #220 = Utf8               isLexical
  #221 = Utf8               (Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
  #222 = NameAndType        #43:#221      // "<init>":(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
  #223 = Methodref          #31.#222      // org/sireum/parser/JsonParser$Context."<init>":(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
  #224 = Utf8               Lorg/sireum/Option;
  #225 = Utf8               unapply
  #226 = Utf8               (Lorg/sireum/parser/JsonParser$Context;)Lscala/Some;
  #227 = Utf8               (Lorg/sireum/parser/JsonParser$Context;)Lscala/Some<Lscala/Tuple12<Lorg/sireum/String;Lorg/sireum/U32;Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/parser/Json$State;Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/B;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;Lorg/sireum/B;Lorg/sireum/Z;Lorg/sireum/B;>;>;
  #228 = Utf8               o
  #229 = Utf8               scala/Some
  #230 = Class              #229          // scala/Some
  #231 = Utf8               scala/Tuple12
  #232 = Class              #231          // scala/Tuple12
  #233 = Utf8               org/sireum/String
  #234 = Class              #233          // org/sireum/String
  #235 = Utf8               ()Ljava/lang/String;
  #236 = NameAndType        #51:#235      // ruleName:()Ljava/lang/String;
  #237 = Methodref          #31.#236      // org/sireum/parser/JsonParser$Context.ruleName:()Ljava/lang/String;
  #238 = Utf8               (Ljava/lang/String;)V
  #239 = NameAndType        #43:#238      // "<init>":(Ljava/lang/String;)V
  #240 = Methodref          #234.#239     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #241 = Utf8               clone
  #242 = NameAndType        #241:#104     // clone:(Ljava/lang/Object;)Ljava/lang/Object;
  #243 = Methodref          #56.#242      // org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
  #244 = Utf8               org/sireum/U32
  #245 = Class              #244          // org/sireum/U32
  #246 = Utf8               ()I
  #247 = NameAndType        #52:#246      // ruleType:()I
  #248 = Methodref          #31.#247      // org/sireum/parser/JsonParser$Context.ruleType:()I
  #249 = Utf8               (I)V
  #250 = NameAndType        #43:#249      // "<init>":(I)V
  #251 = Methodref          #245.#250     // org/sireum/U32."<init>":(I)V
  #252 = NameAndType        #209:#129     // accepting:()Lorg/sireum/IS;
  #253 = Methodref          #31.#252      // org/sireum/parser/JsonParser$Context.accepting:()Lorg/sireum/IS;
  #254 = Utf8               ()Lorg/sireum/Z;
  #255 = NameAndType        #155:#254     // state:()Lorg/sireum/Z;
  #256 = Methodref          #31.#255      // org/sireum/parser/JsonParser$Context.state:()Lorg/sireum/Z;
  #257 = Utf8               (Lorg/sireum/Z;)V
  #258 = NameAndType        #43:#257      // "<init>":(Lorg/sireum/Z;)V
  #259 = Methodref          #17.#258      // org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
  #260 = Utf8               ()Lorg/sireum/Option;
  #261 = NameAndType        #213:#260     // resOpt:()Lorg/sireum/Option;
  #262 = Methodref          #31.#261      // org/sireum/parser/JsonParser$Context.resOpt:()Lorg/sireum/Option;
  #263 = NameAndType        #214:#254     // j:()Lorg/sireum/Z;
  #264 = Methodref          #31.#263      // org/sireum/parser/JsonParser$Context.j:()Lorg/sireum/Z;
  #265 = NameAndType        #215:#254     // max:()Lorg/sireum/Z;
  #266 = Methodref          #31.#265      // org/sireum/parser/JsonParser$Context.max:()Lorg/sireum/Z;
  #267 = NameAndType        #216:#82      // initial:()Z
  #268 = Methodref          #31.#267      // org/sireum/parser/JsonParser$Context.initial:()Z
  #269 = NameAndType        #217:#129     // trees:()Lorg/sireum/IS;
  #270 = Methodref          #31.#269      // org/sireum/parser/JsonParser$Context.trees:()Lorg/sireum/IS;
  #271 = NameAndType        #218:#82      // found:()Z
  #272 = Methodref          #31.#271      // org/sireum/parser/JsonParser$Context.found:()Z
  #273 = NameAndType        #219:#254     // failIndex:()Lorg/sireum/Z;
  #274 = Methodref          #31.#273      // org/sireum/parser/JsonParser$Context.failIndex:()Lorg/sireum/Z;
  #275 = NameAndType        #220:#82      // isLexical:()Z
  #276 = Methodref          #31.#275      // org/sireum/parser/JsonParser$Context.isLexical:()Z
  #277 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #278 = NameAndType        #43:#277      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #279 = Methodref          #232.#278     // scala/Tuple12."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #280 = Utf8               (Ljava/lang/Object;)V
  #281 = NameAndType        #43:#280      // "<init>":(Ljava/lang/Object;)V
  #282 = Methodref          #230.#281     // scala/Some."<init>":(Ljava/lang/Object;)V
  #283 = Utf8               Lorg/sireum/parser/JsonParser$Context;
  #284 = Utf8               $anonfun$create$1
  #285 = Utf8               (Lorg/sireum/MS;Lorg/sireum/Z;)V
  #286 = Utf8               accepting$1
  #287 = Utf8               accept
  #288 = Utf8               update
  #289 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #290 = NameAndType        #288:#289     // update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #291 = Methodref          #103.#290     // org/sireum/MS.update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #292 = Methodref          #4.#44        // java/lang/Object."<init>":()V
  #293 = Utf8               value
  #294 = NameAndType        #293:#254     // value:()Lorg/sireum/Z;
  #295 = Methodref          #17.#294      // org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
  #296 = NameAndType        #284:#285     // $anonfun$create$1:(Lorg/sireum/MS;Lorg/sireum/Z;)V
  #297 = Methodref          #2.#296       // org/sireum/parser/JsonParser$Context$.$anonfun$create$1:(Lorg/sireum/MS;Lorg/sireum/Z;)V
  #298 = Utf8               scala/runtime/BoxedUnit
  #299 = Class              #298          // scala/runtime/BoxedUnit
  #300 = Utf8               UNIT
  #301 = Utf8               Lscala/runtime/BoxedUnit;
  #302 = NameAndType        #300:#301     // UNIT:Lscala/runtime/BoxedUnit;
  #303 = Fieldref           #299.#302     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #304 = Utf8               Ljava/lang/Object;
  #305 = Utf8               $deserializeLambda$
  #306 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #307 = Utf8               scala/runtime/LambdaDeserialize
  #308 = Class              #307          // scala/runtime/LambdaDeserialize
  #309 = Utf8               bootstrap
  #310 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #311 = NameAndType        #309:#310     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #312 = Methodref          #308.#311     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #313 = MethodHandle       6:#312        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #314 = Utf8               lambdaDeserialize
  #315 = NameAndType        #314:#306     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #316 = InvokeDynamic      #1:#315       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #317 = Utf8               Code
  #318 = Utf8               LineNumberTable
  #319 = Utf8               LocalVariableTable
  #320 = Utf8               Signature
  #321 = Utf8               MethodParameters
  #322 = Utf8               InnerClasses
  #323 = Utf8               SourceFile
  #324 = Utf8               BootstrapMethods
  #325 = Utf8               ScalaInlineInfo
  #326 = Utf8               Scala
{
  public static final org.sireum.parser.JsonParser$Context$ MODULE$;
    descriptor: Lorg/sireum/parser/JsonParser$Context$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/parser/JsonParser$Context$
         3: dup
         4: invokespecial #45                 // Method "<init>":()V
         7: putstatic     #47                 // Field MODULE$:Lorg/sireum/parser/JsonParser$Context$;
        10: return
      LineNumberTable:
        line 104: 0

  public org.sireum.parser.JsonParser$Context create(java.lang.String, int, org.sireum.IS<org.sireum.Z, org.sireum.parser.Json$State>, org.sireum.Z);
    descriptor: (Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=18, args_size=5
         0: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         3: getstatic     #64                 // Field org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
         6: getstatic     #69                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         9: bipush        10
        11: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        14: new           #75                 // class org/sireum/B
        17: dup
        18: getstatic     #80                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        21: invokevirtual #84                 // Method org/sireum/package$.F:()Z
        24: invokespecial #87                 // Method org/sireum/B."<init>":(Z)V
        27: getstatic     #90                 // Field org/sireum/parser/Json$State$.MODULE$:Lorg/sireum/parser/Json$State$;
        30: invokevirtual #94                 // Method org/sireum/parser/Json$State$.$StateCompanion:()Lorg/sireum/$ZCompanion;
        33: invokevirtual #97                 // Method org/sireum/MS$.create:(Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
        36: invokevirtual #101                // Method org/sireum/helper$.assignMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        39: checkcast     #103                // class org/sireum/MS
        42: astore        5
        44: aload_3
        45: aload         5
        47: invokedynamic #121,  0            // InvokeDynamic #0:apply:(Lorg/sireum/MS;)Lscala/Function1;
        52: invokevirtual #127                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        55: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        58: aload_1
        59: astore        6
        61: iload_2
        62: istore        7
        64: aload         5
        66: invokevirtual #131                // Method org/sireum/MS.toIS:()Lorg/sireum/IS;
        69: astore        8
        71: getstatic     #90                 // Field org/sireum/parser/Json$State$.MODULE$:Lorg/sireum/parser/Json$State$;
        74: new           #133                // class scala/StringContext
        77: dup
        78: getstatic     #138                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        81: iconst_1
        82: anewarray     #140                // class java/lang/String
        85: dup
        86: iconst_0
        87: ldc           #142                // String 0
        89: aastore
        90: checkcast     #144                // class "[Ljava/lang/Object;"
        93: invokevirtual #148                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        96: invokespecial #151                // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        99: invokevirtual #154                // Method org/sireum/parser/Json$State$.State$Slang:(Lscala/StringContext;)Lorg/sireum/parser/Json$State$State$Slang;
       102: invokevirtual #158                // Method org/sireum/parser/Json$State$State$Slang.state:()Lorg/sireum/parser/Json$State$State$Slang$state$;
       105: getstatic     #163                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       108: invokevirtual #166                // Method org/sireum/parser/Json$State$State$Slang$state$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/Z;
       111: astore        9
       113: getstatic     #171                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
       116: invokevirtual #174                // Method org/sireum/None$.apply:()Lorg/sireum/None;
       119: astore        10
       121: getstatic     #80                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       124: invokevirtual #178                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
       127: getstatic     #163                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       130: invokevirtual #181                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       133: astore        11
       135: aload         4
       137: astore        12
       139: aload         4
       141: astore        13
       143: getstatic     #80                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       146: invokevirtual #184                // Method org/sireum/package$.T:()Z
       149: istore        14
       151: getstatic     #80                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       154: invokevirtual #84                 // Method org/sireum/package$.F:()Z
       157: istore        15
       159: getstatic     #69                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       162: iconst_0
       163: invokevirtual #73                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       166: astore        16
       168: getstatic     #80                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       171: invokevirtual #84                 // Method org/sireum/package$.F:()Z
       174: istore        17
       176: aload_0
       177: aload         6
       179: iload         7
       181: aload         8
       183: aload         9
       185: aload         10
       187: aload         12
       189: aload         13
       191: iload         14
       193: aload         11
       195: iload         15
       197: aload         16
       199: iload         17
       201: invokevirtual #187                // Method apply:(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
       204: invokevirtual #190                // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
       207: checkcast     #31                 // class org/sireum/parser/JsonParser$Context
       210: areturn
      LineNumberTable:
        line 106: 0
        line 107: 44
        line 110: 55
        line 111: 58
        line 112: 61
        line 113: 64
        line 114: 71
        line 115: 113
        line 116: 121
        line 117: 135
        line 118: 139
        line 119: 143
        line 120: 151
        line 121: 159
        line 122: 168
        line 110: 176
        line 111: 177
        line 112: 179
        line 113: 181
        line 114: 183
        line 115: 185
        line 117: 187
        line 118: 189
        line 119: 191
        line 116: 193
        line 120: 195
        line 121: 197
        line 122: 199
        line 110: 210
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           61     143     6   x$1   Ljava/lang/String;
           64     140     7   x$2   I
           71     133     8   x$3   Lorg/sireum/IS;
          113      91     9   x$4   Lorg/sireum/Z;
          121      83    10   x$5   Lorg/sireum/None;
          135      69    11   x$6   Lorg/sireum/IS;
          139      65    12   x$7   Lorg/sireum/Z;
          143      61    13   x$8   Lorg/sireum/Z;
          151      53    14   x$9   Z
          159      45    15  x$10   Z
          168      36    16  x$11   Lorg/sireum/Z;
          176      28    17  x$12   Z
           44     167     5 accepting   Lorg/sireum/MS;
            0     211     0  this   Lorg/sireum/parser/JsonParser$Context$;
            0     211     1 ruleName   Ljava/lang/String;
            0     211     2 ruleType   I
            0     211     3 accepts   Lorg/sireum/IS;
            0     211     4     i   Lorg/sireum/Z;
    Signature: #50                          // (Ljava/lang/String;ILorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/Json$State;>;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Context;
    MethodParameters:
      Name                           Flags
      ruleName                       final
      ruleType                       final
      accepts                        final
      i                              final

  public org.sireum.parser.JsonParser$Context apply(java.lang.String, int, org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B>, org.sireum.Z, org.sireum.Option<org.sireum.parser.JsonParser$Result>, org.sireum.Z, org.sireum.Z, boolean, org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree>, boolean, org.sireum.Z, boolean);
    descriptor: (Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=13, args_size=13
         0: new           #31                 // class org/sireum/parser/JsonParser$Context
         3: dup
         4: aload_1
         5: iload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: aload         7
        15: iload         8
        17: aload         9
        19: iload         10
        21: aload         11
        23: iload         12
        25: invokespecial #223                // Method org/sireum/parser/JsonParser$Context."<init>":(Ljava/lang/String;ILorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Option;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS;ZLorg/sireum/Z;Z)V
        28: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/sireum/parser/JsonParser$Context$;
            0      29     1 ruleName   Ljava/lang/String;
            0      29     2 ruleType   I
            0      29     3 accepting   Lorg/sireum/IS;
            0      29     4 state   Lorg/sireum/Z;
            0      29     5 resOpt   Lorg/sireum/Option;
            0      29     6     j   Lorg/sireum/Z;
            0      29     7   max   Lorg/sireum/Z;
            0      29     8 initial   Z
            0      29     9 trees   Lorg/sireum/IS;
            0      29    10 found   Z
            0      29    11 failIndex   Lorg/sireum/Z;
            0      29    12 isLexical   Z
    Signature: #212                         // (Ljava/lang/String;ILorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/Z;Lorg/sireum/Z;ZLorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;ZLorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$Context;
    MethodParameters:
      Name                           Flags
      ruleName                       final
      ruleType                       final
      accepting                      final
      state                          final
      resOpt                         final
      j                              final
      max                            final
      initial                        final
      trees                          final
      found                          final
      failIndex                      final
      isLexical                      final

  public scala.Some<scala.Tuple12<org.sireum.String, org.sireum.U32, org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B>, org.sireum.parser.Json$State, org.sireum.Option<org.sireum.parser.JsonParser$Result>, org.sireum.Z, org.sireum.Z, org.sireum.B, org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree>, org.sireum.B, org.sireum.Z, org.sireum.B>> unapply(org.sireum.parser.JsonParser$Context);
    descriptor: (Lorg/sireum/parser/JsonParser$Context;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=19, locals=2, args_size=2
         0: new           #230                // class scala/Some
         3: dup
         4: new           #232                // class scala/Tuple12
         7: dup
         8: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        11: new           #234                // class org/sireum/String
        14: dup
        15: aload_1
        16: invokevirtual #237                // Method org/sireum/parser/JsonParser$Context.ruleName:()Ljava/lang/String;
        19: invokespecial #240                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        22: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        25: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        28: new           #245                // class org/sireum/U32
        31: dup
        32: aload_1
        33: invokevirtual #248                // Method org/sireum/parser/JsonParser$Context.ruleType:()I
        36: invokespecial #251                // Method org/sireum/U32."<init>":(I)V
        39: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        42: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        45: aload_1
        46: invokevirtual #253                // Method org/sireum/parser/JsonParser$Context.accepting:()Lorg/sireum/IS;
        49: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        52: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        55: new           #17                 // class org/sireum/parser/Json$State
        58: dup
        59: aload_1
        60: invokevirtual #256                // Method org/sireum/parser/JsonParser$Context.state:()Lorg/sireum/Z;
        63: invokespecial #259                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        66: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        69: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        72: aload_1
        73: invokevirtual #262                // Method org/sireum/parser/JsonParser$Context.resOpt:()Lorg/sireum/Option;
        76: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        79: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        82: aload_1
        83: invokevirtual #264                // Method org/sireum/parser/JsonParser$Context.j:()Lorg/sireum/Z;
        86: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        89: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        92: aload_1
        93: invokevirtual #266                // Method org/sireum/parser/JsonParser$Context.max:()Lorg/sireum/Z;
        96: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
        99: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       102: new           #75                 // class org/sireum/B
       105: dup
       106: aload_1
       107: invokevirtual #268                // Method org/sireum/parser/JsonParser$Context.initial:()Z
       110: invokespecial #87                 // Method org/sireum/B."<init>":(Z)V
       113: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
       116: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       119: aload_1
       120: invokevirtual #270                // Method org/sireum/parser/JsonParser$Context.trees:()Lorg/sireum/IS;
       123: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
       126: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       129: new           #75                 // class org/sireum/B
       132: dup
       133: aload_1
       134: invokevirtual #272                // Method org/sireum/parser/JsonParser$Context.found:()Z
       137: invokespecial #87                 // Method org/sireum/B."<init>":(Z)V
       140: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
       143: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       146: aload_1
       147: invokevirtual #274                // Method org/sireum/parser/JsonParser$Context.failIndex:()Lorg/sireum/Z;
       150: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
       153: getstatic     #59                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       156: new           #75                 // class org/sireum/B
       159: dup
       160: aload_1
       161: invokevirtual #276                // Method org/sireum/parser/JsonParser$Context.isLexical:()Z
       164: invokespecial #87                 // Method org/sireum/B."<init>":(Z)V
       167: invokevirtual #243                // Method org/sireum/helper$.clone:(Ljava/lang/Object;)Ljava/lang/Object;
       170: invokespecial #279                // Method scala/Tuple12."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       173: invokespecial #282                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       176: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     177     0  this   Lorg/sireum/parser/JsonParser$Context$;
            0     177     1     o   Lorg/sireum/parser/JsonParser$Context;
    Signature: #227                         // (Lorg/sireum/parser/JsonParser$Context;)Lscala/Some<Lscala/Tuple12<Lorg/sireum/String;Lorg/sireum/U32;Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/parser/Json$State;Lorg/sireum/Option<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/B;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;Lorg/sireum/B;Lorg/sireum/Z;Lorg/sireum/B;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static final void $anonfun$create$1(org.sireum.MS, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: new           #17                 // class org/sireum/parser/Json$State
         4: dup
         5: aload_1
         6: invokespecial #259                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
         9: new           #75                 // class org/sireum/B
        12: dup
        13: getstatic     #80                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        16: invokevirtual #184                // Method org/sireum/package$.T:()Z
        19: invokespecial #87                 // Method org/sireum/B."<init>":(Z)V
        22: invokevirtual #291                // Method org/sireum/MS.update:(Ljava/lang/Object;Ljava/lang/Object;)V
        25: return
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0 accepting$1   Lorg/sireum/MS;
            0      26     1 accept   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      accepting$1                    final
      accept                         final

  public org.sireum.parser.JsonParser$Context$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #292                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$Context$;

  public static final java.lang.Object $anonfun$create$1$adapted(org.sireum.MS, java.lang.Object);
    descriptor: (Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #17                 // class org/sireum/parser/Json$State
         5: invokevirtual #295                // Method org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
         8: invokestatic  #297                // Method $anonfun$create$1:(Lorg/sireum/MS;Lorg/sireum/Z;)V
        11: getstatic     #303                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        14: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 accepting$1   Lorg/sireum/MS;
            0      15     1 accept   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      accepting$1                    final
      accept                         final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #316,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static final #20= #17 of #19;    // State=class org/sireum/parser/Json$State of class org/sireum/parser/Json
  public static #23= #22 of #19;          // State$=class org/sireum/parser/Json$State$ of class org/sireum/parser/Json
  public static #26= #25 of #22;          // State$Slang=class org/sireum/parser/Json$State$State$Slang of class org/sireum/parser/Json$State$
  public #29= #28 of #25;                 // state$=class org/sireum/parser/Json$State$State$Slang$state$ of class org/sireum/parser/Json$State$State$Slang
  public static final #34= #31 of #33;    // Context=class org/sireum/parser/JsonParser$Context of class org/sireum/parser/JsonParser
  public static #35= #2 of #33;           // Context$=class org/sireum/parser/JsonParser$Context$ of class org/sireum/parser/JsonParser
  public static final #38= #37 of #33;    // Result=class org/sireum/parser/JsonParser$Result of class org/sireum/parser/JsonParser
SourceFile: "JsonParser.scala"
BootstrapMethods:
  0: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #105 (Ljava/lang/Object;)Ljava/lang/Object;
      #110 REF_invokeStatic org/sireum/parser/JsonParser$Context$.$anonfun$create$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
      #105 (Ljava/lang/Object;)Ljava/lang/Object;
      #111 1
  1: #313 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #110 REF_invokeStatic org/sireum/parser/JsonParser$Context$.$anonfun$create$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 01 1C 01 1D 01 00 6A 00 6B 01 00 2B
   00 2A 01 00 46 00 B9 01 00 30 00 31 01 00 E1 00
   E2 01
  Scala: length = 0x0 (unknown attribute)

