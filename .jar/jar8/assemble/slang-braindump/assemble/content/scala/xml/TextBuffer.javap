Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/xml/TextBuffer.class
  Last modified May 29, 2022; size 4287 bytes
  SHA-256 checksum 257b98f589a663d10206d99395853b7237c5eec01bb48b0f9044a8573da074ef
  Compiled from "TextBuffer.scala"
public class scala.xml.TextBuffer
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/xml/TextBuffer
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 8, attributes: 6
Constant pool:
    #1 = Utf8               scala/xml/TextBuffer
    #2 = Class              #1            // scala/xml/TextBuffer
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               TextBuffer.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005%;QAC\u0006\t\u0002A1QAE\u0006\t\u0002MAQ\u0001G\u0001\u0005\u0002eAQAG\u0001\u0005\u0002m1AAE\u0006\u0001;!)\u0001\u0004\u0002C\u0001=!9q\u0004\u0002b\u0001\n\u0003\u0001\u0003BB\u0015\u0005A\u0003%\u0011\u0005C\u0003+\t\u0011\u00051\u0006C\u00037\t\u0011\u0005q\'\u0001\u0006UKb$()\u001e4gKJT!\u0001D\u0007\u0002\u0007alGNC\u0001\u000f\u0003\u0015\u00198-\u00197b\u0007\u0001\u0001\"!E\u0001\u000e\u0003-\u0011!\u0002V3yi\n+hMZ3s\'\t\tA\u0003\u0005\u0002\u0016-5\tQ\"\u0003\u0002\u0018\u001b\t1\u0011I\\=SK\u001a\fa\u0001P5oSRtD#\u0001\t\u0002\u0015\u0019\u0014x.\\*ue&tw\r\u0006\u0002\u001dyA\u0011\u0011\u0003B\n\u0003\tQ!\u0012\u0001H\u0001\u0003g\n,\u0012!\t\t\u0003E\u001dj\u0011a\t\u0006\u0003I\u0015\nq!\\;uC\ndWM\u0003\u0002\'\u001b\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\u0005!\u001a#!D*ue&twMQ;jY\u0012,\'/A\u0002tE\u0002\na!\u00199qK:$GC\u0001\u0017.\u001b\u0005!\u0001\"\u0002\u0018\t\u0001\u0004y\u0013AA2t!\r\u0001\u0014gM\u0007\u0002K%\u0011!\'\n\u0002\u0004\'\u0016\f\bCA\u000b5\u0013\t)TB\u0001\u0003DQ\u0006\u0014\u0018A\u0002;p)\u0016DH/F\u00019!\r\u0001\u0014\'\u000f\t\u0003#iJ!aO\u0006\u0003\tQ+\u0007\u0010\u001e\u0005\u0006{\r\u0001\rAP\u0001\u0004gR\u0014\bCA G\u001d\t\u0001E\t\u0005\u0002B\u001b5\t!I\u0003\u0002D\u001f\u00051AH]8pizJ!!R\u0007\u0002\rA\u0013X\rZ3g\u0013\t9\u0005J\u0001\u0004TiJLgn\u001a\u0006\u0003\u000b6\u0001
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               sb
   #15 = Utf8               Lscala/collection/mutable/StringBuilder;
   #16 = Utf8               fromString
   #17 = Utf8               (Ljava/lang/String;)Lscala/xml/TextBuffer;
   #18 = Utf8               str
   #19 = Utf8               scala/xml/TextBuffer$
   #20 = Class              #19           // scala/xml/TextBuffer$
   #21 = Utf8               MODULE$
   #22 = Utf8               Lscala/xml/TextBuffer$;
   #23 = NameAndType        #21:#22       // MODULE$:Lscala/xml/TextBuffer$;
   #24 = Fieldref           #20.#23       // scala/xml/TextBuffer$.MODULE$:Lscala/xml/TextBuffer$;
   #25 = NameAndType        #16:#17       // fromString:(Ljava/lang/String;)Lscala/xml/TextBuffer;
   #26 = Methodref          #20.#25       // scala/xml/TextBuffer$.fromString:(Ljava/lang/String;)Lscala/xml/TextBuffer;
   #27 = Utf8               Ljava/lang/String;
   #28 = Utf8               ()Lscala/collection/mutable/StringBuilder;
   #29 = NameAndType        #14:#15       // sb:Lscala/collection/mutable/StringBuilder;
   #30 = Fieldref           #2.#29        // scala/xml/TextBuffer.sb:Lscala/collection/mutable/StringBuilder;
   #31 = Utf8               this
   #32 = Utf8               Lscala/xml/TextBuffer;
   #33 = Utf8               append
   #34 = Utf8               (Lscala/collection/Seq;)Lscala/xml/TextBuffer;
   #35 = Utf8               (Lscala/collection/Seq<Ljava/lang/Object;>;)Lscala/xml/TextBuffer;
   #36 = Utf8               cs
   #37 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #38 = MethodType         #37           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #39 = Utf8               $anonfun$append$1$adapted
   #40 = Utf8               (Lscala/xml/TextBuffer;Ljava/lang/Object;)Ljava/lang/Object;
   #41 = NameAndType        #39:#40       // $anonfun$append$1$adapted:(Lscala/xml/TextBuffer;Ljava/lang/Object;)Ljava/lang/Object;
   #42 = Methodref          #2.#41        // scala/xml/TextBuffer.$anonfun$append$1$adapted:(Lscala/xml/TextBuffer;Ljava/lang/Object;)Ljava/lang/Object;
   #43 = MethodHandle       6:#42         // REF_invokeStatic scala/xml/TextBuffer.$anonfun$append$1$adapted:(Lscala/xml/TextBuffer;Ljava/lang/Object;)Ljava/lang/Object;
   #44 = Integer            1
   #45 = Utf8               java/lang/invoke/LambdaMetafactory
   #46 = Class              #45           // java/lang/invoke/LambdaMetafactory
   #47 = Utf8               altMetafactory
   #48 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #49 = NameAndType        #47:#48       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #50 = Methodref          #46.#49       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #51 = MethodHandle       6:#50         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #52 = Utf8               apply
   #53 = Utf8               (Lscala/xml/TextBuffer;)Lscala/Function1;
   #54 = NameAndType        #52:#53       // apply:(Lscala/xml/TextBuffer;)Lscala/Function1;
   #55 = InvokeDynamic      #0:#54        // #0:apply:(Lscala/xml/TextBuffer;)Lscala/Function1;
   #56 = Utf8               scala/collection/Seq
   #57 = Class              #56           // scala/collection/Seq
   #58 = Utf8               foreach
   #59 = Utf8               (Lscala/Function1;)V
   #60 = NameAndType        #58:#59       // foreach:(Lscala/Function1;)V
   #61 = InterfaceMethodref #57.#60       // scala/collection/Seq.foreach:(Lscala/Function1;)V
   #62 = Utf8               Lscala/collection/Seq;
   #63 = Utf8               toText
   #64 = Utf8               ()Lscala/collection/Seq;
   #65 = Utf8               ()Lscala/collection/Seq<Lscala/xml/Text;>;
   #66 = NameAndType        #14:#28       // sb:()Lscala/collection/mutable/StringBuilder;
   #67 = Methodref          #2.#66        // scala/xml/TextBuffer.sb:()Lscala/collection/mutable/StringBuilder;
   #68 = Utf8               scala/collection/mutable/StringBuilder
   #69 = Class              #68           // scala/collection/mutable/StringBuilder
   #70 = Utf8               toString
   #71 = Utf8               ()Ljava/lang/String;
   #72 = NameAndType        #70:#71       // toString:()Ljava/lang/String;
   #73 = Methodref          #69.#72       // scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   #74 = Utf8               java/lang/String
   #75 = Class              #74           // java/lang/String
   #76 = Utf8               trim
   #77 = NameAndType        #76:#71       // trim:()Ljava/lang/String;
   #78 = Methodref          #75.#77       // java/lang/String.trim:()Ljava/lang/String;
   #79 = Utf8               hashCode
   #80 = Utf8               ()I
   #81 = NameAndType        #79:#80       // hashCode:()I
   #82 = Methodref          #75.#81       // java/lang/String.hashCode:()I
   #83 = Utf8
   #84 = String             #83           //
   #85 = Utf8               equals
   #86 = Utf8               (Ljava/lang/Object;)Z
   #87 = NameAndType        #85:#86       // equals:(Ljava/lang/Object;)Z
   #88 = Methodref          #75.#87       // java/lang/String.equals:(Ljava/lang/Object;)Z
   #89 = Utf8               scala/package$
   #90 = Class              #89           // scala/package$
   #91 = Utf8               Lscala/package$;
   #92 = NameAndType        #21:#91       // MODULE$:Lscala/package$;
   #93 = Fieldref           #90.#92       // scala/package$.MODULE$:Lscala/package$;
   #94 = Utf8               Nil
   #95 = Utf8               ()Lscala/collection/immutable/Nil$;
   #96 = NameAndType        #94:#95       // Nil:()Lscala/collection/immutable/Nil$;
   #97 = Methodref          #90.#96       // scala/package$.Nil:()Lscala/collection/immutable/Nil$;
   #98 = Utf8               scala/collection/immutable/$colon$colon
   #99 = Class              #98           // scala/collection/immutable/$colon$colon
  #100 = Utf8               scala/xml/Text$
  #101 = Class              #100          // scala/xml/Text$
  #102 = Utf8               Lscala/xml/Text$;
  #103 = NameAndType        #21:#102      // MODULE$:Lscala/xml/Text$;
  #104 = Fieldref           #101.#103     // scala/xml/Text$.MODULE$:Lscala/xml/Text$;
  #105 = Utf8               (Ljava/lang/String;)Lscala/xml/Text;
  #106 = NameAndType        #52:#105      // apply:(Ljava/lang/String;)Lscala/xml/Text;
  #107 = Methodref          #101.#106     // scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
  #108 = Utf8               scala/collection/immutable/Nil$
  #109 = Class              #108          // scala/collection/immutable/Nil$
  #110 = Utf8               Lscala/collection/immutable/Nil$;
  #111 = NameAndType        #21:#110      // MODULE$:Lscala/collection/immutable/Nil$;
  #112 = Fieldref           #109.#111     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #113 = Utf8               <init>
  #114 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #115 = NameAndType        #113:#114     // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #116 = Methodref          #99.#115      // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #117 = Utf8               $anonfun$append$1
  #118 = Utf8               (Lscala/xml/TextBuffer;C)Ljava/lang/Object;
  #119 = Utf8               $this
  #120 = Utf8               c
  #121 = Utf8               scala/xml/Utility$
  #122 = Class              #121          // scala/xml/Utility$
  #123 = Utf8               Lscala/xml/Utility$;
  #124 = NameAndType        #21:#123      // MODULE$:Lscala/xml/Utility$;
  #125 = Fieldref           #122.#124     // scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
  #126 = Utf8               isSpace
  #127 = Utf8               (C)Z
  #128 = NameAndType        #126:#127     // isSpace:(C)Z
  #129 = Methodref          #122.#128     // scala/xml/Utility$.isSpace:(C)Z
  #130 = Utf8               (C)Lscala/collection/mutable/StringBuilder;
  #131 = NameAndType        #33:#130      // append:(C)Lscala/collection/mutable/StringBuilder;
  #132 = Methodref          #69.#131      // scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
  #133 = Utf8               isEmpty
  #134 = Utf8               ()Z
  #135 = NameAndType        #133:#134     // isEmpty:()Z
  #136 = Methodref          #69.#135      // scala/collection/mutable/StringBuilder.isEmpty:()Z
  #137 = Utf8               last
  #138 = Utf8               ()Ljava/lang/Object;
  #139 = NameAndType        #137:#138     // last:()Ljava/lang/Object;
  #140 = Methodref          #69.#139      // scala/collection/mutable/StringBuilder.last:()Ljava/lang/Object;
  #141 = Utf8               scala/runtime/BoxesRunTime
  #142 = Class              #141          // scala/runtime/BoxesRunTime
  #143 = Utf8               unboxToChar
  #144 = Utf8               (Ljava/lang/Object;)C
  #145 = NameAndType        #143:#144     // unboxToChar:(Ljava/lang/Object;)C
  #146 = Methodref          #142.#145     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #147 = Utf8               scala/runtime/BoxedUnit
  #148 = Class              #147          // scala/runtime/BoxedUnit
  #149 = Utf8               UNIT
  #150 = Utf8               Lscala/runtime/BoxedUnit;
  #151 = NameAndType        #149:#150     // UNIT:Lscala/runtime/BoxedUnit;
  #152 = Fieldref           #148.#151     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #153 = Utf8               C
  #154 = Utf8               ()V
  #155 = NameAndType        #113:#154     // "<init>":()V
  #156 = Methodref          #4.#155       // java/lang/Object."<init>":()V
  #157 = Methodref          #69.#155      // scala/collection/mutable/StringBuilder."<init>":()V
  #158 = NameAndType        #117:#118     // $anonfun$append$1:(Lscala/xml/TextBuffer;C)Ljava/lang/Object;
  #159 = Methodref          #2.#158       // scala/xml/TextBuffer.$anonfun$append$1:(Lscala/xml/TextBuffer;C)Ljava/lang/Object;
  #160 = Utf8               Ljava/lang/Object;
  #161 = Utf8               $deserializeLambda$
  #162 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #163 = Utf8               scala/runtime/LambdaDeserialize
  #164 = Class              #163          // scala/runtime/LambdaDeserialize
  #165 = Utf8               bootstrap
  #166 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #167 = NameAndType        #165:#166     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #168 = Methodref          #164.#167     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #169 = MethodHandle       6:#168        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #170 = Utf8               lambdaDeserialize
  #171 = NameAndType        #170:#162     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #172 = InvokeDynamic      #1:#171       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #173 = Utf8               Code
  #174 = Utf8               LocalVariableTable
  #175 = Utf8               MethodParameters
  #176 = Utf8               LineNumberTable
  #177 = Utf8               Signature
  #178 = Utf8               StackMapTable
  #179 = Utf8               InnerClasses
  #180 = Utf8               SourceFile
  #181 = Utf8               RuntimeVisibleAnnotations
  #182 = Utf8               BootstrapMethods
  #183 = Utf8               ScalaInlineInfo
  #184 = Utf8               ScalaSig
{
  private final scala.collection.mutable.StringBuilder sb;
    descriptor: Lscala/collection/mutable/StringBuilder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.xml.TextBuffer fromString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/xml/TextBuffer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #24                 // Field scala/xml/TextBuffer$.MODULE$:Lscala/xml/TextBuffer$;
         3: aload_0
         4: invokevirtual #26                 // Method scala/xml/TextBuffer$.fromString:(Ljava/lang/String;)Lscala/xml/TextBuffer;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   str   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      str                            final

  public scala.collection.mutable.StringBuilder sb();
    descriptor: ()Lscala/collection/mutable/StringBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #30                 // Field sb:Lscala/collection/mutable/StringBuilder;
         4: areturn
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/TextBuffer;

  public scala.xml.TextBuffer append(scala.collection.Seq<java.lang.Object>);
    descriptor: (Lscala/collection/Seq;)Lscala/xml/TextBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokedynamic #55,  0             // InvokeDynamic #0:apply:(Lscala/xml/TextBuffer;)Lscala/Function1;
         7: invokeinterface #61,  2           // InterfaceMethod scala/collection/Seq.foreach:(Lscala/Function1;)V
        12: aload_0
        13: areturn
      LineNumberTable:
        line 36: 0
        line 40: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/xml/TextBuffer;
            0      14     1    cs   Lscala/collection/Seq;
    Signature: #35                          // (Lscala/collection/Seq<Ljava/lang/Object;>;)Lscala/xml/TextBuffer;
    MethodParameters:
      Name                           Flags
      cs                             final

  public scala.collection.Seq<scala.xml.Text> toText();
    descriptor: ()Lscala/collection/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #67                 // Method sb:()Lscala/collection/mutable/StringBuilder;
         4: invokevirtual #73                 // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
         7: invokevirtual #78                 // Method java/lang/String.trim:()Ljava/lang/String;
        10: astore_2
        11: aload_2
        12: ifnonnull     19
        15: iconst_0
        16: goto          23
        19: aload_2
        20: invokevirtual #82                 // Method java/lang/String.hashCode:()I
        23: tableswitch   { // 0 to 0
                       0: 40
                 default: 62
            }
        40: ldc           #84                 // String
        42: aload_2
        43: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        46: ifeq          59
        49: getstatic     #93                 // Field scala/package$.MODULE$:Lscala/package$;
        52: invokevirtual #97                 // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
        55: astore_1
        56: goto          89
        59: goto          65
        62: goto          65
        65: new           #99                 // class scala/collection/immutable/$colon$colon
        68: dup
        69: getstatic     #104                // Field scala/xml/Text$.MODULE$:Lscala/xml/Text$;
        72: aload_2
        73: invokevirtual #107                // Method scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
        76: getstatic     #112                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        79: invokespecial #116                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
        82: checkcast     #57                 // class scala/collection/Seq
        85: astore_1
        86: goto          89
        89: aload_1
        90: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/String ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 16 /* same */
        frame_type = 18 /* same */
        frame_type = 2 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class scala/xml/TextBuffer, class scala/collection/Seq, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 48: 0
        line 49: 40
        line 48: 59
        line 50: 65
        line 48: 89
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      91     0  this   Lscala/xml/TextBuffer;
    Signature: #65                          // ()Lscala/collection/Seq<Lscala/xml/Text;>;

  public static final java.lang.Object $anonfun$append$1(scala.xml.TextBuffer, char);
    descriptor: (Lscala/xml/TextBuffer;C)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #125                // Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
         3: iload_1
         4: invokevirtual #129                // Method scala/xml/Utility$.isSpace:(C)Z
         7: ifne          21
        10: aload_0
        11: invokevirtual #67                 // Method sb:()Lscala/collection/mutable/StringBuilder;
        14: iload_1
        15: invokevirtual #132                // Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
        18: goto          65
        21: aload_0
        22: invokevirtual #67                 // Method sb:()Lscala/collection/mutable/StringBuilder;
        25: invokevirtual #136                // Method scala/collection/mutable/StringBuilder.isEmpty:()Z
        28: ifne          50
        31: getstatic     #125                // Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
        34: aload_0
        35: invokevirtual #67                 // Method sb:()Lscala/collection/mutable/StringBuilder;
        38: invokevirtual #140                // Method scala/collection/mutable/StringBuilder.last:()Ljava/lang/Object;
        41: invokestatic  #146                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        44: invokevirtual #129                // Method scala/xml/Utility$.isSpace:(C)Z
        47: ifne          62
        50: aload_0
        51: invokevirtual #67                 // Method sb:()Lscala/collection/mutable/StringBuilder;
        54: bipush        32
        56: invokevirtual #132                // Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
        59: goto          65
        62: getstatic     #152                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        65: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 21 /* same */
        frame_type = 28 /* same */
        frame_type = 11 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 37: 0
        line 38: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0 $this   Lscala/xml/TextBuffer;
            0      66     1     c   C
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final

  public scala.xml.TextBuffer();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #156                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #69                 // class scala/collection/mutable/StringBuilder
         8: dup
         9: invokespecial #157                // Method scala/collection/mutable/StringBuilder."<init>":()V
        12: putfield      #30                 // Field sb:Lscala/collection/mutable/StringBuilder;
        15: return
      LineNumberTable:
        line 52: 0
        line 30: 4
        line 29: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/xml/TextBuffer;

  public static final java.lang.Object $anonfun$append$1$adapted(scala.xml.TextBuffer, java.lang.Object);
    descriptor: (Lscala/xml/TextBuffer;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #146                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         5: invokestatic  #159                // Method $anonfun$append$1:(Lscala/xml/TextBuffer;C)Ljava/lang/Object;
         8: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lscala/xml/TextBuffer;
            0       9     1     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      c                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #172,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "TextBuffer.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005%;QAC\u0006\t\u0002A1QAE\u0006\t\u0002MAQ\u0001G\u0001\u0005\u0002eAQAG\u0001\u0005\u0002m1AAE\u0006\u0001;!)\u0001\u0004\u0002C\u0001=!9q\u0004\u0002b\u0001\n\u0003\u0001\u0003BB\u0015\u0005A\u0003%\u0011\u0005C\u0003+\t\u0011\u00051\u0006C\u00037\t\u0011\u0005q\'\u0001\u0006UKb$()\u001e4gKJT!\u0001D\u0007\u0002\u0007alGNC\u0001\u000f\u0003\u0015\u00198-\u00197b\u0007\u0001\u0001\"!E\u0001\u000e\u0003-\u0011!\u0002V3yi\n+hMZ3s\'\t\tA\u0003\u0005\u0002\u0016-5\tQ\"\u0003\u0002\u0018\u001b\t1\u0011I\\=SK\u001a\fa\u0001P5oSRtD#\u0001\t\u0002\u0015\u0019\u0014x.\\*ue&tw\r\u0006\u0002\u001dyA\u0011\u0011\u0003B\n\u0003\tQ!\u0012\u0001H\u0001\u0003g\n,\u0012!\t\t\u0003E\u001dj\u0011a\t\u0006\u0003I\u0015\nq!\\;uC\ndWM\u0003\u0002\'\u001b\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\u0005!\u001a#!D*ue&twMQ;jY\u0012,\'/A\u0002tE\u0002\na!\u00199qK:$GC\u0001\u0017.\u001b\u0005!\u0001\"\u0002\u0018\t\u0001\u0004y\u0013AA2t!\r\u0001\u0014gM\u0007\u0002K%\u0011!\'\n\u0002\u0004\'\u0016\f\bCA\u000b5\u0013\t)TB\u0001\u0003DQ\u0006\u0014\u0018A\u0002;p)\u0016DH/F\u00019!\r\u0001\u0014\'\u000f\t\u0003#iJ!aO\u0006\u0003\tQ+\u0007\u0010\u001e\u0005\u0006{\r\u0001\rAP\u0001\u0004gR\u0014\bCA G\u001d\t\u0001E\t\u0005\u0002B\u001b5\t!I\u0003\u0002D\u001f\u00051AH]8pizJ!!R\u0007\u0002\rA\u0013X\rZ3g\u0013\t9\u0005J\u0001\u0004TiJLgn\u001a\u0006\u0003\u000b6\u0001"
    )
BootstrapMethods:
  0: #51 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #43 REF_invokeStatic scala/xml/TextBuffer.$anonfun$append$1$adapted:(Lscala/xml/TextBuffer;Ljava/lang/Object;)Ljava/lang/Object;
      #38 (Ljava/lang/Object;)Ljava/lang/Object;
      #44 1
  1: #169 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #43 REF_invokeStatic scala/xml/TextBuffer.$anonfun$append$1$adapted:(Lscala/xml/TextBuffer;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 00 00 06 00 75 00 76 01 00 27 00 28 01 00 71
   00 9A 00 00 21 00 22 00 00 0E 00 1C 00 00 3F 00
   40 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
