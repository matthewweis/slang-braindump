Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/math/Equiv$Tuple6Equiv.class
  Last modified May 29, 2022; size 3936 bytes
  SHA-256 checksum 82918ba1ffa0fa8d23bcebb322828a78a9e8ed3b3a858d8e08325c2a2c8e2aca
  Compiled from "Equiv.scala"
public final class scala.math.Equiv$Tuple6Equiv<T1 extends java.lang.Object, T2 extends java.lang.Object, T3 extends java.lang.Object, T4 extends java.lang.Object, T5 extends java.lang.Object, T6 extends java.lang.Object> extends java.lang.Object implements scala.math.Equiv<scala.Tuple6<T1, T2, T3, T4, T5, T6>>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/math/Equiv$Tuple6Equiv
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 11, attributes: 5
Constant pool:
    #1 = Utf8               scala/math/Equiv$Tuple6Equiv
    #2 = Class              #1            // scala/math/Equiv$Tuple6Equiv
    #3 = Utf8               <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple6<TT1;TT2;TT3;TT4;TT5;TT6;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Equiv
    #7 = Class              #6            // scala/math/Equiv
    #8 = Utf8               Equiv.scala
    #9 = Utf8               Tuple6Equiv
   #10 = Utf8               eqv1
   #11 = Utf8               Lscala/math/Equiv;
   #12 = Utf8               Lscala/math/Equiv<TT1;>;
   #13 = Utf8               eqv2
   #14 = Utf8               Lscala/math/Equiv<TT2;>;
   #15 = Utf8               eqv3
   #16 = Utf8               Lscala/math/Equiv<TT3;>;
   #17 = Utf8               eqv4
   #18 = Utf8               Lscala/math/Equiv<TT4;>;
   #19 = Utf8               eqv5
   #20 = Utf8               Lscala/math/Equiv<TT5;>;
   #21 = Utf8               eqv6
   #22 = Utf8               Lscala/math/Equiv<TT6;>;
   #23 = Utf8               ()Lscala/math/Equiv;
   #24 = Utf8               ()Lscala/math/Equiv<TT1;>;
   #25 = NameAndType        #10:#11       // eqv1:Lscala/math/Equiv;
   #26 = Fieldref           #2.#25        // scala/math/Equiv$Tuple6Equiv.eqv1:Lscala/math/Equiv;
   #27 = Utf8               this
   #28 = Utf8               Lscala/math/Equiv$Tuple6Equiv;
   #29 = Utf8               ()Lscala/math/Equiv<TT2;>;
   #30 = NameAndType        #13:#11       // eqv2:Lscala/math/Equiv;
   #31 = Fieldref           #2.#30        // scala/math/Equiv$Tuple6Equiv.eqv2:Lscala/math/Equiv;
   #32 = Utf8               ()Lscala/math/Equiv<TT3;>;
   #33 = NameAndType        #15:#11       // eqv3:Lscala/math/Equiv;
   #34 = Fieldref           #2.#33        // scala/math/Equiv$Tuple6Equiv.eqv3:Lscala/math/Equiv;
   #35 = Utf8               ()Lscala/math/Equiv<TT4;>;
   #36 = NameAndType        #17:#11       // eqv4:Lscala/math/Equiv;
   #37 = Fieldref           #2.#36        // scala/math/Equiv$Tuple6Equiv.eqv4:Lscala/math/Equiv;
   #38 = Utf8               ()Lscala/math/Equiv<TT5;>;
   #39 = NameAndType        #19:#11       // eqv5:Lscala/math/Equiv;
   #40 = Fieldref           #2.#39        // scala/math/Equiv$Tuple6Equiv.eqv5:Lscala/math/Equiv;
   #41 = Utf8               ()Lscala/math/Equiv<TT6;>;
   #42 = NameAndType        #21:#11       // eqv6:Lscala/math/Equiv;
   #43 = Fieldref           #2.#42        // scala/math/Equiv$Tuple6Equiv.eqv6:Lscala/math/Equiv;
   #44 = Utf8               equiv
   #45 = Utf8               (Lscala/Tuple6;Lscala/Tuple6;)Z
   #46 = Utf8               (Lscala/Tuple6<TT1;TT2;TT3;TT4;TT5;TT6;>;Lscala/Tuple6<TT1;TT2;TT3;TT4;TT5;TT6;>;)Z
   #47 = Utf8               x
   #48 = Utf8               y
   #49 = NameAndType        #10:#23       // eqv1:()Lscala/math/Equiv;
   #50 = Methodref          #2.#49        // scala/math/Equiv$Tuple6Equiv.eqv1:()Lscala/math/Equiv;
   #51 = Utf8               scala/Tuple6
   #52 = Class              #51           // scala/Tuple6
   #53 = Utf8               _1
   #54 = Utf8               ()Ljava/lang/Object;
   #55 = NameAndType        #53:#54       // _1:()Ljava/lang/Object;
   #56 = Methodref          #52.#55       // scala/Tuple6._1:()Ljava/lang/Object;
   #57 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #58 = NameAndType        #44:#57       // equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #59 = InterfaceMethodref #7.#58        // scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #60 = NameAndType        #13:#23       // eqv2:()Lscala/math/Equiv;
   #61 = Methodref          #2.#60        // scala/math/Equiv$Tuple6Equiv.eqv2:()Lscala/math/Equiv;
   #62 = Utf8               _2
   #63 = NameAndType        #62:#54       // _2:()Ljava/lang/Object;
   #64 = Methodref          #52.#63       // scala/Tuple6._2:()Ljava/lang/Object;
   #65 = NameAndType        #15:#23       // eqv3:()Lscala/math/Equiv;
   #66 = Methodref          #2.#65        // scala/math/Equiv$Tuple6Equiv.eqv3:()Lscala/math/Equiv;
   #67 = Utf8               _3
   #68 = NameAndType        #67:#54       // _3:()Ljava/lang/Object;
   #69 = Methodref          #52.#68       // scala/Tuple6._3:()Ljava/lang/Object;
   #70 = NameAndType        #17:#23       // eqv4:()Lscala/math/Equiv;
   #71 = Methodref          #2.#70        // scala/math/Equiv$Tuple6Equiv.eqv4:()Lscala/math/Equiv;
   #72 = Utf8               _4
   #73 = NameAndType        #72:#54       // _4:()Ljava/lang/Object;
   #74 = Methodref          #52.#73       // scala/Tuple6._4:()Ljava/lang/Object;
   #75 = NameAndType        #19:#23       // eqv5:()Lscala/math/Equiv;
   #76 = Methodref          #2.#75        // scala/math/Equiv$Tuple6Equiv.eqv5:()Lscala/math/Equiv;
   #77 = Utf8               _5
   #78 = NameAndType        #77:#54       // _5:()Ljava/lang/Object;
   #79 = Methodref          #52.#78       // scala/Tuple6._5:()Ljava/lang/Object;
   #80 = NameAndType        #21:#23       // eqv6:()Lscala/math/Equiv;
   #81 = Methodref          #2.#80        // scala/math/Equiv$Tuple6Equiv.eqv6:()Lscala/math/Equiv;
   #82 = Utf8               _6
   #83 = NameAndType        #82:#54       // _6:()Ljava/lang/Object;
   #84 = Methodref          #52.#83       // scala/Tuple6._6:()Ljava/lang/Object;
   #85 = Utf8               Lscala/Tuple6;
   #86 = Utf8               equals
   #87 = Utf8               (Ljava/lang/Object;)Z
   #88 = Utf8               obj
   #89 = NameAndType        #86:#87       // equals:(Ljava/lang/Object;)Z
   #90 = Methodref          #5.#89        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #91 = Utf8               Ljava/lang/Object;
   #92 = Utf8               hashCode
   #93 = Utf8               ()I
   #94 = Utf8               <init>
   #95 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #96 = NameAndType        #94:#95       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #97 = Methodref          #52.#96       // scala/Tuple6."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #98 = Utf8               scala/util/hashing/MurmurHash3$
   #99 = Class              #98           // scala/util/hashing/MurmurHash3$
  #100 = Utf8               MODULE$
  #101 = Utf8               Lscala/util/hashing/MurmurHash3$;
  #102 = NameAndType        #100:#101     // MODULE$:Lscala/util/hashing/MurmurHash3$;
  #103 = Fieldref           #99.#102      // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
  #104 = Utf8               productHash
  #105 = Utf8               (Lscala/Product;)I
  #106 = NameAndType        #104:#105     // productHash:(Lscala/Product;)I
  #107 = Methodref          #99.#106      // scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
  #108 = Utf8               hashCode_this
  #109 = NameAndType        #44:#45       // equiv:(Lscala/Tuple6;Lscala/Tuple6;)Z
  #110 = Methodref          #2.#109       // scala/math/Equiv$Tuple6Equiv.equiv:(Lscala/Tuple6;Lscala/Tuple6;)Z
  #111 = Utf8               (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
  #112 = Utf8               (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;Lscala/math/Equiv<TT4;>;Lscala/math/Equiv<TT5;>;Lscala/math/Equiv<TT6;>;)V
  #113 = Utf8               ()V
  #114 = NameAndType        #94:#113      // "<init>":()V
  #115 = Methodref          #5.#114       // java/lang/Object."<init>":()V
  #116 = Utf8               Signature
  #117 = Utf8               Code
  #118 = Utf8               LineNumberTable
  #119 = Utf8               LocalVariableTable
  #120 = Utf8               StackMapTable
  #121 = Utf8               MethodParameters
  #122 = Utf8               InnerClasses
  #123 = Utf8               SourceFile
  #124 = Utf8               ScalaInlineInfo
  #125 = Utf8               Scala
{
  private final scala.math.Equiv<T1> eqv1;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // Lscala/math/Equiv<TT1;>;

  private final scala.math.Equiv<T2> eqv2;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/math/Equiv<TT2;>;

  private final scala.math.Equiv<T3> eqv3;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #16                          // Lscala/math/Equiv<TT3;>;

  private final scala.math.Equiv<T4> eqv4;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #18                          // Lscala/math/Equiv<TT4;>;

  private final scala.math.Equiv<T5> eqv5;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lscala/math/Equiv<TT5;>;

  private final scala.math.Equiv<T6> eqv6;
    descriptor: Lscala/math/Equiv;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #22                          // Lscala/math/Equiv<TT6;>;

  private scala.math.Equiv<T1> eqv1();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #26                 // Field eqv1:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple6Equiv;
    Signature: #24                          // ()Lscala/math/Equiv<TT1;>;

  private scala.math.Equiv<T2> eqv2();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #31                 // Field eqv2:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 365: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple6Equiv;
    Signature: #29                          // ()Lscala/math/Equiv<TT2;>;

  private scala.math.Equiv<T3> eqv3();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #34                 // Field eqv3:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple6Equiv;
    Signature: #32                          // ()Lscala/math/Equiv<TT3;>;

  private scala.math.Equiv<T4> eqv4();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field eqv4:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 367: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple6Equiv;
    Signature: #35                          // ()Lscala/math/Equiv<TT4;>;

  private scala.math.Equiv<T5> eqv5();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #40                 // Field eqv5:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 368: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple6Equiv;
    Signature: #38                          // ()Lscala/math/Equiv<TT5;>;

  private scala.math.Equiv<T6> eqv6();
    descriptor: ()Lscala/math/Equiv;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #43                 // Field eqv6:Lscala/math/Equiv;
         4: areturn
      LineNumberTable:
        line 369: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/math/Equiv$Tuple6Equiv;
    Signature: #41                          // ()Lscala/math/Equiv<TT6;>;

  public boolean equiv(scala.Tuple6<T1, T2, T3, T4, T5, T6>, scala.Tuple6<T1, T2, T3, T4, T5, T6>);
    descriptor: (Lscala/Tuple6;Lscala/Tuple6;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #50                 // Method eqv1:()Lscala/math/Equiv;
         4: aload_1
         5: invokevirtual #56                 // Method scala/Tuple6._1:()Ljava/lang/Object;
         8: aload_2
         9: invokevirtual #56                 // Method scala/Tuple6._1:()Ljava/lang/Object;
        12: invokeinterface #59,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        17: ifeq          122
        20: aload_0
        21: invokespecial #61                 // Method eqv2:()Lscala/math/Equiv;
        24: aload_1
        25: invokevirtual #64                 // Method scala/Tuple6._2:()Ljava/lang/Object;
        28: aload_2
        29: invokevirtual #64                 // Method scala/Tuple6._2:()Ljava/lang/Object;
        32: invokeinterface #59,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        37: ifeq          122
        40: aload_0
        41: invokespecial #66                 // Method eqv3:()Lscala/math/Equiv;
        44: aload_1
        45: invokevirtual #69                 // Method scala/Tuple6._3:()Ljava/lang/Object;
        48: aload_2
        49: invokevirtual #69                 // Method scala/Tuple6._3:()Ljava/lang/Object;
        52: invokeinterface #59,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        57: ifeq          122
        60: aload_0
        61: invokespecial #71                 // Method eqv4:()Lscala/math/Equiv;
        64: aload_1
        65: invokevirtual #74                 // Method scala/Tuple6._4:()Ljava/lang/Object;
        68: aload_2
        69: invokevirtual #74                 // Method scala/Tuple6._4:()Ljava/lang/Object;
        72: invokeinterface #59,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        77: ifeq          122
        80: aload_0
        81: invokespecial #76                 // Method eqv5:()Lscala/math/Equiv;
        84: aload_1
        85: invokevirtual #79                 // Method scala/Tuple6._5:()Ljava/lang/Object;
        88: aload_2
        89: invokevirtual #79                 // Method scala/Tuple6._5:()Ljava/lang/Object;
        92: invokeinterface #59,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
        97: ifeq          122
       100: aload_0
       101: invokespecial #81                 // Method eqv6:()Lscala/math/Equiv;
       104: aload_1
       105: invokevirtual #84                 // Method scala/Tuple6._6:()Ljava/lang/Object;
       108: aload_2
       109: invokevirtual #84                 // Method scala/Tuple6._6:()Ljava/lang/Object;
       112: invokeinterface #59,  3           // InterfaceMethod scala/math/Equiv.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       117: ifeq          122
       120: iconst_1
       121: ireturn
       122: iconst_0
       123: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 122
      LineNumberTable:
        line 372: 0
        line 373: 20
        line 374: 40
        line 375: 60
        line 376: 80
        line 377: 100
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     124     0  this   Lscala/math/Equiv$Tuple6Equiv;
            0     124     1     x   Lscala/Tuple6;
            0     124     2     y   Lscala/Tuple6;
    Signature: #46                          // (Lscala/Tuple6<TT1;TT2;TT3;TT4;TT5;TT6;>;Lscala/Tuple6<TT1;TT2;TT3;TT4;TT5;TT6;>;)Z
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=10, args_size=2
         0: aload_1
         1: instanceof    #5                  // class java/lang/Object
         4: ifeq          17
         7: aload_0
         8: aload_1
         9: if_acmpne     17
        12: iconst_1
        13: istore_2
        14: goto          226
        17: aload_1
        18: instanceof    #2                  // class scala/math/Equiv$Tuple6Equiv
        21: ifeq          224
        24: aload_1
        25: checkcast     #2                  // class scala/math/Equiv$Tuple6Equiv
        28: astore_3
        29: aload_0
        30: invokespecial #50                 // Method eqv1:()Lscala/math/Equiv;
        33: aload_3
        34: invokespecial #50                 // Method eqv1:()Lscala/math/Equiv;
        37: astore        4
        39: dup
        40: ifnonnull     52
        43: pop
        44: aload         4
        46: ifnull        60
        49: goto          219
        52: aload         4
        54: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        57: ifeq          219
        60: aload_0
        61: invokespecial #61                 // Method eqv2:()Lscala/math/Equiv;
        64: aload_3
        65: invokespecial #61                 // Method eqv2:()Lscala/math/Equiv;
        68: astore        5
        70: dup
        71: ifnonnull     83
        74: pop
        75: aload         5
        77: ifnull        91
        80: goto          219
        83: aload         5
        85: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        88: ifeq          219
        91: aload_0
        92: invokespecial #66                 // Method eqv3:()Lscala/math/Equiv;
        95: aload_3
        96: invokespecial #66                 // Method eqv3:()Lscala/math/Equiv;
        99: astore        6
       101: dup
       102: ifnonnull     114
       105: pop
       106: aload         6
       108: ifnull        122
       111: goto          219
       114: aload         6
       116: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       119: ifeq          219
       122: aload_0
       123: invokespecial #71                 // Method eqv4:()Lscala/math/Equiv;
       126: aload_3
       127: invokespecial #71                 // Method eqv4:()Lscala/math/Equiv;
       130: astore        7
       132: dup
       133: ifnonnull     145
       136: pop
       137: aload         7
       139: ifnull        153
       142: goto          219
       145: aload         7
       147: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       150: ifeq          219
       153: aload_0
       154: invokespecial #76                 // Method eqv5:()Lscala/math/Equiv;
       157: aload_3
       158: invokespecial #76                 // Method eqv5:()Lscala/math/Equiv;
       161: astore        8
       163: dup
       164: ifnonnull     176
       167: pop
       168: aload         8
       170: ifnull        184
       173: goto          219
       176: aload         8
       178: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       181: ifeq          219
       184: aload_0
       185: invokespecial #81                 // Method eqv6:()Lscala/math/Equiv;
       188: aload_3
       189: invokespecial #81                 // Method eqv6:()Lscala/math/Equiv;
       192: astore        9
       194: dup
       195: ifnonnull     207
       198: pop
       199: aload         9
       201: ifnull        215
       204: goto          219
       207: aload         9
       209: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       212: ifeq          219
       215: iconst_1
       216: goto          220
       219: iconst_0
       220: istore_2
       221: goto          226
       224: iconst_0
       225: istore_2
       226: iload_2
       227: ireturn
      StackMapTable: number_of_entries = 17
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class scala/math/Equiv$Tuple6Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple6Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple6Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple6Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple6Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple6Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple6Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple6Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple6Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple6Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/math/Equiv$Tuple6Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple6Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv, class scala/math/Equiv ]
          stack = [ class scala/math/Equiv ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/math/Equiv$Tuple6Equiv, class java/lang/Object, top, class scala/math/Equiv$Tuple6Equiv, class scala/math/Equiv ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 380: 0
        line 381: 17
        line 382: 29
        line 383: 60
        line 384: 91
        line 385: 122
        line 386: 153
        line 387: 184
        line 388: 224
        line 379: 226
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     228     0  this   Lscala/math/Equiv$Tuple6Equiv;
            0     228     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=1
         0: new           #52                 // class scala/Tuple6
         3: dup
         4: aload_0
         5: invokespecial #50                 // Method eqv1:()Lscala/math/Equiv;
         8: aload_0
         9: invokespecial #61                 // Method eqv2:()Lscala/math/Equiv;
        12: aload_0
        13: invokespecial #66                 // Method eqv3:()Lscala/math/Equiv;
        16: aload_0
        17: invokespecial #71                 // Method eqv4:()Lscala/math/Equiv;
        20: aload_0
        21: invokespecial #76                 // Method eqv5:()Lscala/math/Equiv;
        24: aload_0
        25: invokespecial #81                 // Method eqv6:()Lscala/math/Equiv;
        28: invokespecial #97                 // Method scala/Tuple6."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        31: astore_1
        32: getstatic     #103                // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        35: aload_1
        36: invokevirtual #107                // Method scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
        39: ireturn
      LineNumberTable:
        line 390: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lscala/math/Equiv$Tuple6Equiv;
           32       7     1 hashCode_this   Lscala/Tuple6;

  public boolean equiv(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #52                 // class scala/Tuple6
         5: aload_2
         6: checkcast     #52                 // class scala/Tuple6
         9: invokevirtual #110                // Method equiv:(Lscala/Tuple6;Lscala/Tuple6;)Z
        12: ireturn
      LineNumberTable:
        line 364: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/math/Equiv$Tuple6Equiv;
            0      13     1     x   Ljava/lang/Object;
            0      13     2     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final

  public scala.math.Equiv$Tuple6Equiv(scala.math.Equiv<T1>, scala.math.Equiv<T2>, scala.math.Equiv<T3>, scala.math.Equiv<T4>, scala.math.Equiv<T5>, scala.math.Equiv<T6>);
    descriptor: (Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;Lscala/math/Equiv;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=7
         0: aload_0
         1: aload_1
         2: putfield      #26                 // Field eqv1:Lscala/math/Equiv;
         5: aload_0
         6: aload_2
         7: putfield      #31                 // Field eqv2:Lscala/math/Equiv;
        10: aload_0
        11: aload_3
        12: putfield      #34                 // Field eqv3:Lscala/math/Equiv;
        15: aload_0
        16: aload         4
        18: putfield      #37                 // Field eqv4:Lscala/math/Equiv;
        21: aload_0
        22: aload         5
        24: putfield      #40                 // Field eqv5:Lscala/math/Equiv;
        27: aload_0
        28: aload         6
        30: putfield      #43                 // Field eqv6:Lscala/math/Equiv;
        33: aload_0
        34: invokespecial #115                // Method java/lang/Object."<init>":()V
        37: return
      LineNumberTable:
        line 364: 0
        line 365: 5
        line 366: 10
        line 367: 15
        line 368: 21
        line 369: 27
        line 370: 33
        line 364: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Lscala/math/Equiv$Tuple6Equiv;
            0      38     1  eqv1   Lscala/math/Equiv;
            0      38     2  eqv2   Lscala/math/Equiv;
            0      38     3  eqv3   Lscala/math/Equiv;
            0      38     4  eqv4   Lscala/math/Equiv;
            0      38     5  eqv5   Lscala/math/Equiv;
            0      38     6  eqv6   Lscala/math/Equiv;
    Signature: #112                         // (Lscala/math/Equiv<TT1;>;Lscala/math/Equiv<TT2;>;Lscala/math/Equiv<TT3;>;Lscala/math/Equiv<TT4;>;Lscala/math/Equiv<TT5;>;Lscala/math/Equiv<TT6;>;)V
    MethodParameters:
      Name                           Flags
      eqv1                           final
      eqv2                           final
      eqv3                           final
      eqv4                           final
      eqv5                           final
      eqv6                           final
}
InnerClasses:
  private static final #9= #2 of #7;      // Tuple6Equiv=class scala/math/Equiv$Tuple6Equiv of class scala/math/Equiv
Signature: #3                           // <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;T4:Ljava/lang/Object;T5:Ljava/lang/Object;T6:Ljava/lang/Object;>Ljava/lang/Object;Lscala/math/Equiv<Lscala/Tuple6<TT1;TT2;TT3;TT4;TT5;TT6;>;>;
SourceFile: "Equiv.scala"
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 01 00 0B 00 5E 00 6F 01 00 56 00 57 01 00 2C
   00 39 01 00 2C 00 2D 01 00 0A 00 17 01 00 0D 00
   17 01 00 0F 00 17 01 00 11 00 17 01 00 13 00 17
   01 00 15 00 17 01 00 5C 00 5D 01
  Scala: length = 0x0 (unknown attribute)

